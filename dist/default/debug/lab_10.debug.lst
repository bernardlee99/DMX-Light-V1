

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 19:14:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    26                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2
    56                           	psect	text25,local,class=CODE,merge=1,delta=2
    57                           	psect	text26,local,class=CODE,merge=1,delta=2
    58                           	psect	text27,local,class=CODE,merge=1,delta=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text55,local,class=CODE,merge=1,delta=2
    87                           	psect	text56,local,class=CODE,merge=1,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,delta=2
    89                           	psect	text58,local,class=CODE,merge=1,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,delta=2
    91                           	psect	intentry,global,class=CODE,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,delta=2
    94                           	psect	text63,local,class=CODE,merge=1,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,delta=2
   108                           	dabs	1,0xCA0,32
   109                           	dabs	1,0xC20,80
   110                           	dabs	1,0xBA0,80
   111                           	dabs	1,0xB20,80
   112                           	dabs	1,0xAA0,80
   113                           	dabs	1,0xA20,80
   114                           	dabs	1,0x9A0,80
   115                           	dabs	1,0x920,80
   116                           	dabs	1,0x8A0,80
   117                           	dabs	1,0x820,80
   118                           	dabs	1,0x7A0,80
   119                           	dabs	1,0x720,80
   120                           	dabs	1,0x6A0,80
   121                           	dabs	1,0x64E,34
   122                           	dabs	1,0x23EE,0,_dmxArray
   123                           	dabs	1,0x7E,2
   124  0000                     
   125                           ; Version 2.05
   126                           ; Generated 20/12/2018 GMT
   127                           ; 
   128                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC16F18446 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  008C                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  010F                     	;# 
   214  0110                     	;# 
   215  0111                     	;# 
   216  0112                     	;# 
   217  0113                     	;# 
   218  0114                     	;# 
   219  0115                     	;# 
   220  0116                     	;# 
   221  0117                     	;# 
   222  0118                     	;# 
   223  0119                     	;# 
   224  0119                     	;# 
   225  0119                     	;# 
   226  011A                     	;# 
   227  011A                     	;# 
   228  011A                     	;# 
   229  011B                     	;# 
   230  011B                     	;# 
   231  011B                     	;# 
   232  011B                     	;# 
   233  011B                     	;# 
   234  011C                     	;# 
   235  011C                     	;# 
   236  011C                     	;# 
   237  011D                     	;# 
   238  011D                     	;# 
   239  011D                     	;# 
   240  011E                     	;# 
   241  011E                     	;# 
   242  011E                     	;# 
   243  011F                     	;# 
   244  011F                     	;# 
   245  011F                     	;# 
   246  011F                     	;# 
   247  011F                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  018E                     	;# 
   251  018F                     	;# 
   252  0190                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0196                     	;# 
   256  0197                     	;# 
   257  0198                     	;# 
   258  0199                     	;# 
   259  019A                     	;# 
   260  019B                     	;# 
   261  019C                     	;# 
   262  020C                     	;# 
   263  020D                     	;# 
   264  020E                     	;# 
   265  020E                     	;# 
   266  020F                     	;# 
   267  020F                     	;# 
   268  0210                     	;# 
   269  0210                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  0218                     	;# 
   283  0219                     	;# 
   284  021A                     	;# 
   285  021A                     	;# 
   286  021B                     	;# 
   287  021B                     	;# 
   288  021C                     	;# 
   289  021C                     	;# 
   290  021D                     	;# 
   291  021D                     	;# 
   292  021E                     	;# 
   293  021F                     	;# 
   294  028C                     	;# 
   295  028C                     	;# 
   296  028D                     	;# 
   297  028D                     	;# 
   298  028E                     	;# 
   299  028F                     	;# 
   300  0290                     	;# 
   301  0291                     	;# 
   302  0292                     	;# 
   303  0292                     	;# 
   304  0293                     	;# 
   305  0293                     	;# 
   306  0294                     	;# 
   307  0295                     	;# 
   308  0296                     	;# 
   309  0297                     	;# 
   310  0298                     	;# 
   311  0298                     	;# 
   312  0299                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029D                     	;# 
   318  029F                     	;# 
   319  030C                     	;# 
   320  030C                     	;# 
   321  030D                     	;# 
   322  030E                     	;# 
   323  030F                     	;# 
   324  0310                     	;# 
   325  0310                     	;# 
   326  0311                     	;# 
   327  0312                     	;# 
   328  0313                     	;# 
   329  0314                     	;# 
   330  0314                     	;# 
   331  0315                     	;# 
   332  0316                     	;# 
   333  0317                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  031B                     	;# 
   339  038C                     	;# 
   340  038C                     	;# 
   341  038D                     	;# 
   342  038E                     	;# 
   343  0390                     	;# 
   344  0390                     	;# 
   345  0391                     	;# 
   346  0392                     	;# 
   347  048C                     	;# 
   348  048C                     	;# 
   349  048D                     	;# 
   350  048E                     	;# 
   351  048F                     	;# 
   352  048F                     	;# 
   353  0490                     	;# 
   354  0491                     	;# 
   355  0492                     	;# 
   356  0492                     	;# 
   357  0493                     	;# 
   358  0494                     	;# 
   359  0495                     	;# 
   360  0495                     	;# 
   361  0496                     	;# 
   362  0497                     	;# 
   363  0498                     	;# 
   364  0499                     	;# 
   365  049A                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  058C                     	;# 
   370  058C                     	;# 
   371  058D                     	;# 
   372  058E                     	;# 
   373  058F                     	;# 
   374  058F                     	;# 
   375  0590                     	;# 
   376  0591                     	;# 
   377  0592                     	;# 
   378  0593                     	;# 
   379  059C                     	;# 
   380  059C                     	;# 
   381  059D                     	;# 
   382  059D                     	;# 
   383  059E                     	;# 
   384  059F                     	;# 
   385  060C                     	;# 
   386  060C                     	;# 
   387  060D                     	;# 
   388  060D                     	;# 
   389  060E                     	;# 
   390  060F                     	;# 
   391  0610                     	;# 
   392  0611                     	;# 
   393  0612                     	;# 
   394  0613                     	;# 
   395  0614                     	;# 
   396  0616                     	;# 
   397  0616                     	;# 
   398  0617                     	;# 
   399  0617                     	;# 
   400  0618                     	;# 
   401  0619                     	;# 
   402  061A                     	;# 
   403  061B                     	;# 
   404  061C                     	;# 
   405  061D                     	;# 
   406  061E                     	;# 
   407  070C                     	;# 
   408  070D                     	;# 
   409  070E                     	;# 
   410  070F                     	;# 
   411  0710                     	;# 
   412  0711                     	;# 
   413  0712                     	;# 
   414  0713                     	;# 
   415  0714                     	;# 
   416  0716                     	;# 
   417  0717                     	;# 
   418  0718                     	;# 
   419  0719                     	;# 
   420  071A                     	;# 
   421  071B                     	;# 
   422  071C                     	;# 
   423  071D                     	;# 
   424  071E                     	;# 
   425  0796                     	;# 
   426  0797                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  079B                     	;# 
   431  079C                     	;# 
   432  079D                     	;# 
   433  080C                     	;# 
   434  080D                     	;# 
   435  080E                     	;# 
   436  080F                     	;# 
   437  0810                     	;# 
   438  0811                     	;# 
   439  0812                     	;# 
   440  0813                     	;# 
   441  0814                     	;# 
   442  081A                     	;# 
   443  081A                     	;# 
   444  081B                     	;# 
   445  081C                     	;# 
   446  081C                     	;# 
   447  081D                     	;# 
   448  081E                     	;# 
   449  081F                     	;# 
   450  088C                     	;# 
   451  088D                     	;# 
   452  088E                     	;# 
   453  088F                     	;# 
   454  0890                     	;# 
   455  0891                     	;# 
   456  0892                     	;# 
   457  0893                     	;# 
   458  0895                     	;# 
   459  0896                     	;# 
   460  0897                     	;# 
   461  0898                     	;# 
   462  0899                     	;# 
   463  089A                     	;# 
   464  089B                     	;# 
   465  090C                     	;# 
   466  090E                     	;# 
   467  090F                     	;# 
   468  091F                     	;# 
   469  098F                     	;# 
   470  098F                     	;# 
   471  0990                     	;# 
   472  0991                     	;# 
   473  0992                     	;# 
   474  0993                     	;# 
   475  0994                     	;# 
   476  0995                     	;# 
   477  0996                     	;# 
   478  0997                     	;# 
   479  1E0F                     	;# 
   480  1E10                     	;# 
   481  1E11                     	;# 
   482  1E12                     	;# 
   483  1E13                     	;# 
   484  1E14                     	;# 
   485  1E15                     	;# 
   486  1E16                     	;# 
   487  1E17                     	;# 
   488  1E18                     	;# 
   489  1E19                     	;# 
   490  1E1A                     	;# 
   491  1E1B                     	;# 
   492  1E1C                     	;# 
   493  1E1D                     	;# 
   494  1E1E                     	;# 
   495  1E1F                     	;# 
   496  1E20                     	;# 
   497  1E21                     	;# 
   498  1E22                     	;# 
   499  1E23                     	;# 
   500  1E24                     	;# 
   501  1E25                     	;# 
   502  1E26                     	;# 
   503  1E27                     	;# 
   504  1E28                     	;# 
   505  1E29                     	;# 
   506  1E2A                     	;# 
   507  1E2B                     	;# 
   508  1E2C                     	;# 
   509  1E2D                     	;# 
   510  1E2E                     	;# 
   511  1E2F                     	;# 
   512  1E30                     	;# 
   513  1E31                     	;# 
   514  1E32                     	;# 
   515  1E33                     	;# 
   516  1E34                     	;# 
   517  1E35                     	;# 
   518  1E36                     	;# 
   519  1E37                     	;# 
   520  1E8F                     	;# 
   521  1E90                     	;# 
   522  1E91                     	;# 
   523  1E92                     	;# 
   524  1E93                     	;# 
   525  1E94                     	;# 
   526  1E95                     	;# 
   527  1E96                     	;# 
   528  1E97                     	;# 
   529  1E9C                     	;# 
   530  1E9D                     	;# 
   531  1E9E                     	;# 
   532  1EA1                     	;# 
   533  1EA2                     	;# 
   534  1EA3                     	;# 
   535  1EA4                     	;# 
   536  1EA9                     	;# 
   537  1EAA                     	;# 
   538  1EB1                     	;# 
   539  1EB2                     	;# 
   540  1EB8                     	;# 
   541  1EB9                     	;# 
   542  1EBA                     	;# 
   543  1EBB                     	;# 
   544  1EBC                     	;# 
   545  1EBD                     	;# 
   546  1EBE                     	;# 
   547  1EC3                     	;# 
   548  1EC5                     	;# 
   549  1EC6                     	;# 
   550  1EC7                     	;# 
   551  1EC8                     	;# 
   552  1EC9                     	;# 
   553  1ECA                     	;# 
   554  1ECB                     	;# 
   555  1ECB                     	;# 
   556  1ECB                     	;# 
   557  1ECC                     	;# 
   558  1ECC                     	;# 
   559  1ECC                     	;# 
   560  1F10                     	;# 
   561  1F11                     	;# 
   562  1F12                     	;# 
   563  1F14                     	;# 
   564  1F15                     	;# 
   565  1F1C                     	;# 
   566  1F1D                     	;# 
   567  1F1E                     	;# 
   568  1F1F                     	;# 
   569  1F20                     	;# 
   570  1F21                     	;# 
   571  1F22                     	;# 
   572  1F23                     	;# 
   573  1F24                     	;# 
   574  1F25                     	;# 
   575  1F26                     	;# 
   576  1F27                     	;# 
   577  1F38                     	;# 
   578  1F39                     	;# 
   579  1F3A                     	;# 
   580  1F3B                     	;# 
   581  1F3C                     	;# 
   582  1F3D                     	;# 
   583  1F3E                     	;# 
   584  1F3F                     	;# 
   585  1F43                     	;# 
   586  1F44                     	;# 
   587  1F45                     	;# 
   588  1F46                     	;# 
   589  1F47                     	;# 
   590  1F48                     	;# 
   591  1F49                     	;# 
   592  1F4A                     	;# 
   593  1F4E                     	;# 
   594  1F4F                     	;# 
   595  1F50                     	;# 
   596  1F51                     	;# 
   597  1F52                     	;# 
   598  1F53                     	;# 
   599  1F54                     	;# 
   600  1F55                     	;# 
   601  1FE4                     	;# 
   602  1FE5                     	;# 
   603  1FE6                     	;# 
   604  1FE7                     	;# 
   605  1FE8                     	;# 
   606  1FE8                     	;# 
   607  1FE9                     	;# 
   608  1FEA                     	;# 
   609  1FEB                     	;# 
   610  1FED                     	;# 
   611  1FEE                     	;# 
   612  1FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0014                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  008C                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  008E                     	;# 
   639  008F                     	;# 
   640  0090                     	;# 
   641  0090                     	;# 
   642  0091                     	;# 
   643  0092                     	;# 
   644  0092                     	;# 
   645  0093                     	;# 
   646  0094                     	;# 
   647  0094                     	;# 
   648  0095                     	;# 
   649  0096                     	;# 
   650  0096                     	;# 
   651  0097                     	;# 
   652  0098                     	;# 
   653  0099                     	;# 
   654  009A                     	;# 
   655  009B                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009D                     	;# 
   660  009E                     	;# 
   661  009F                     	;# 
   662  010C                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0113                     	;# 
   672  0114                     	;# 
   673  0115                     	;# 
   674  0116                     	;# 
   675  0117                     	;# 
   676  0118                     	;# 
   677  0119                     	;# 
   678  0119                     	;# 
   679  0119                     	;# 
   680  011A                     	;# 
   681  011A                     	;# 
   682  011A                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011C                     	;# 
   689  011C                     	;# 
   690  011C                     	;# 
   691  011D                     	;# 
   692  011D                     	;# 
   693  011D                     	;# 
   694  011E                     	;# 
   695  011E                     	;# 
   696  011E                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  018C                     	;# 
   703  018D                     	;# 
   704  018E                     	;# 
   705  018F                     	;# 
   706  0190                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0198                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  020C                     	;# 
   717  020D                     	;# 
   718  020E                     	;# 
   719  020E                     	;# 
   720  020F                     	;# 
   721  020F                     	;# 
   722  0210                     	;# 
   723  0210                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0218                     	;# 
   737  0219                     	;# 
   738  021A                     	;# 
   739  021A                     	;# 
   740  021B                     	;# 
   741  021B                     	;# 
   742  021C                     	;# 
   743  021C                     	;# 
   744  021D                     	;# 
   745  021D                     	;# 
   746  021E                     	;# 
   747  021F                     	;# 
   748  028C                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028D                     	;# 
   752  028E                     	;# 
   753  028F                     	;# 
   754  0290                     	;# 
   755  0291                     	;# 
   756  0292                     	;# 
   757  0292                     	;# 
   758  0293                     	;# 
   759  0293                     	;# 
   760  0294                     	;# 
   761  0295                     	;# 
   762  0296                     	;# 
   763  0297                     	;# 
   764  0298                     	;# 
   765  0298                     	;# 
   766  0299                     	;# 
   767  0299                     	;# 
   768  029A                     	;# 
   769  029B                     	;# 
   770  029C                     	;# 
   771  029D                     	;# 
   772  029F                     	;# 
   773  030C                     	;# 
   774  030C                     	;# 
   775  030D                     	;# 
   776  030E                     	;# 
   777  030F                     	;# 
   778  0310                     	;# 
   779  0310                     	;# 
   780  0311                     	;# 
   781  0312                     	;# 
   782  0313                     	;# 
   783  0314                     	;# 
   784  0314                     	;# 
   785  0315                     	;# 
   786  0316                     	;# 
   787  0317                     	;# 
   788  0318                     	;# 
   789  0318                     	;# 
   790  0319                     	;# 
   791  031A                     	;# 
   792  031B                     	;# 
   793  038C                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0390                     	;# 
   799  0391                     	;# 
   800  0392                     	;# 
   801  048C                     	;# 
   802  048C                     	;# 
   803  048D                     	;# 
   804  048E                     	;# 
   805  048F                     	;# 
   806  048F                     	;# 
   807  0490                     	;# 
   808  0491                     	;# 
   809  0492                     	;# 
   810  0492                     	;# 
   811  0493                     	;# 
   812  0494                     	;# 
   813  0495                     	;# 
   814  0495                     	;# 
   815  0496                     	;# 
   816  0497                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  058C                     	;# 
   824  058C                     	;# 
   825  058D                     	;# 
   826  058E                     	;# 
   827  058F                     	;# 
   828  058F                     	;# 
   829  0590                     	;# 
   830  0591                     	;# 
   831  0592                     	;# 
   832  0593                     	;# 
   833  059C                     	;# 
   834  059C                     	;# 
   835  059D                     	;# 
   836  059D                     	;# 
   837  059E                     	;# 
   838  059F                     	;# 
   839  060C                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0617                     	;# 
   854  0618                     	;# 
   855  0619                     	;# 
   856  061A                     	;# 
   857  061B                     	;# 
   858  061C                     	;# 
   859  061D                     	;# 
   860  061E                     	;# 
   861  070C                     	;# 
   862  070D                     	;# 
   863  070E                     	;# 
   864  070F                     	;# 
   865  0710                     	;# 
   866  0711                     	;# 
   867  0712                     	;# 
   868  0713                     	;# 
   869  0714                     	;# 
   870  0716                     	;# 
   871  0717                     	;# 
   872  0718                     	;# 
   873  0719                     	;# 
   874  071A                     	;# 
   875  071B                     	;# 
   876  071C                     	;# 
   877  071D                     	;# 
   878  071E                     	;# 
   879  0796                     	;# 
   880  0797                     	;# 
   881  0798                     	;# 
   882  0799                     	;# 
   883  079A                     	;# 
   884  079B                     	;# 
   885  079C                     	;# 
   886  079D                     	;# 
   887  080C                     	;# 
   888  080D                     	;# 
   889  080E                     	;# 
   890  080F                     	;# 
   891  0810                     	;# 
   892  0811                     	;# 
   893  0812                     	;# 
   894  0813                     	;# 
   895  0814                     	;# 
   896  081A                     	;# 
   897  081A                     	;# 
   898  081B                     	;# 
   899  081C                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  098F                     	;# 
   924  098F                     	;# 
   925  0990                     	;# 
   926  0991                     	;# 
   927  0992                     	;# 
   928  0993                     	;# 
   929  0994                     	;# 
   930  0995                     	;# 
   931  0996                     	;# 
   932  0997                     	;# 
   933  1E0F                     	;# 
   934  1E10                     	;# 
   935  1E11                     	;# 
   936  1E12                     	;# 
   937  1E13                     	;# 
   938  1E14                     	;# 
   939  1E15                     	;# 
   940  1E16                     	;# 
   941  1E17                     	;# 
   942  1E18                     	;# 
   943  1E19                     	;# 
   944  1E1A                     	;# 
   945  1E1B                     	;# 
   946  1E1C                     	;# 
   947  1E1D                     	;# 
   948  1E1E                     	;# 
   949  1E1F                     	;# 
   950  1E20                     	;# 
   951  1E21                     	;# 
   952  1E22                     	;# 
   953  1E23                     	;# 
   954  1E24                     	;# 
   955  1E25                     	;# 
   956  1E26                     	;# 
   957  1E27                     	;# 
   958  1E28                     	;# 
   959  1E29                     	;# 
   960  1E2A                     	;# 
   961  1E2B                     	;# 
   962  1E2C                     	;# 
   963  1E2D                     	;# 
   964  1E2E                     	;# 
   965  1E2F                     	;# 
   966  1E30                     	;# 
   967  1E31                     	;# 
   968  1E32                     	;# 
   969  1E33                     	;# 
   970  1E34                     	;# 
   971  1E35                     	;# 
   972  1E36                     	;# 
   973  1E37                     	;# 
   974  1E8F                     	;# 
   975  1E90                     	;# 
   976  1E91                     	;# 
   977  1E92                     	;# 
   978  1E93                     	;# 
   979  1E94                     	;# 
   980  1E95                     	;# 
   981  1E96                     	;# 
   982  1E97                     	;# 
   983  1E9C                     	;# 
   984  1E9D                     	;# 
   985  1E9E                     	;# 
   986  1EA1                     	;# 
   987  1EA2                     	;# 
   988  1EA3                     	;# 
   989  1EA4                     	;# 
   990  1EA9                     	;# 
   991  1EAA                     	;# 
   992  1EB1                     	;# 
   993  1EB2                     	;# 
   994  1EB8                     	;# 
   995  1EB9                     	;# 
   996  1EBA                     	;# 
   997  1EBB                     	;# 
   998  1EBC                     	;# 
   999  1EBD                     	;# 
  1000  1EBE                     	;# 
  1001  1EC3                     	;# 
  1002  1EC5                     	;# 
  1003  1EC6                     	;# 
  1004  1EC7                     	;# 
  1005  1EC8                     	;# 
  1006  1EC9                     	;# 
  1007  1ECA                     	;# 
  1008  1ECB                     	;# 
  1009  1ECB                     	;# 
  1010  1ECB                     	;# 
  1011  1ECC                     	;# 
  1012  1ECC                     	;# 
  1013  1ECC                     	;# 
  1014  1F10                     	;# 
  1015  1F11                     	;# 
  1016  1F12                     	;# 
  1017  1F14                     	;# 
  1018  1F15                     	;# 
  1019  1F1C                     	;# 
  1020  1F1D                     	;# 
  1021  1F1E                     	;# 
  1022  1F1F                     	;# 
  1023  1F20                     	;# 
  1024  1F21                     	;# 
  1025  1F22                     	;# 
  1026  1F23                     	;# 
  1027  1F24                     	;# 
  1028  1F25                     	;# 
  1029  1F26                     	;# 
  1030  1F27                     	;# 
  1031  1F38                     	;# 
  1032  1F39                     	;# 
  1033  1F3A                     	;# 
  1034  1F3B                     	;# 
  1035  1F3C                     	;# 
  1036  1F3D                     	;# 
  1037  1F3E                     	;# 
  1038  1F3F                     	;# 
  1039  1F43                     	;# 
  1040  1F44                     	;# 
  1041  1F45                     	;# 
  1042  1F46                     	;# 
  1043  1F47                     	;# 
  1044  1F48                     	;# 
  1045  1F49                     	;# 
  1046  1F4A                     	;# 
  1047  1F4E                     	;# 
  1048  1F4F                     	;# 
  1049  1F50                     	;# 
  1050  1F51                     	;# 
  1051  1F52                     	;# 
  1052  1F53                     	;# 
  1053  1F54                     	;# 
  1054  1F55                     	;# 
  1055  1FE4                     	;# 
  1056  1FE5                     	;# 
  1057  1FE6                     	;# 
  1058  1FE7                     	;# 
  1059  1FE8                     	;# 
  1060  1FE8                     	;# 
  1061  1FE9                     	;# 
  1062  1FEA                     	;# 
  1063  1FEB                     	;# 
  1064  1FED                     	;# 
  1065  1FEE                     	;# 
  1066  1FEF                     	;# 
  1067  0000                     	;# 
  1068  0001                     	;# 
  1069  0002                     	;# 
  1070  0003                     	;# 
  1071  0004                     	;# 
  1072  0005                     	;# 
  1073  0006                     	;# 
  1074  0007                     	;# 
  1075  0008                     	;# 
  1076  0009                     	;# 
  1077  000A                     	;# 
  1078  000B                     	;# 
  1079  000C                     	;# 
  1080  000D                     	;# 
  1081  000E                     	;# 
  1082  0012                     	;# 
  1083  0013                     	;# 
  1084  0014                     	;# 
  1085  0018                     	;# 
  1086  0019                     	;# 
  1087  001A                     	;# 
  1088  008C                     	;# 
  1089  008C                     	;# 
  1090  008D                     	;# 
  1091  008E                     	;# 
  1092  008E                     	;# 
  1093  008F                     	;# 
  1094  0090                     	;# 
  1095  0090                     	;# 
  1096  0091                     	;# 
  1097  0092                     	;# 
  1098  0092                     	;# 
  1099  0093                     	;# 
  1100  0094                     	;# 
  1101  0094                     	;# 
  1102  0095                     	;# 
  1103  0096                     	;# 
  1104  0096                     	;# 
  1105  0097                     	;# 
  1106  0098                     	;# 
  1107  0099                     	;# 
  1108  009A                     	;# 
  1109  009B                     	;# 
  1110  009B                     	;# 
  1111  009C                     	;# 
  1112  009D                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  009F                     	;# 
  1116  010C                     	;# 
  1117  010C                     	;# 
  1118  010D                     	;# 
  1119  010E                     	;# 
  1120  010F                     	;# 
  1121  010F                     	;# 
  1122  0110                     	;# 
  1123  0111                     	;# 
  1124  0112                     	;# 
  1125  0113                     	;# 
  1126  0114                     	;# 
  1127  0115                     	;# 
  1128  0116                     	;# 
  1129  0117                     	;# 
  1130  0118                     	;# 
  1131  0119                     	;# 
  1132  0119                     	;# 
  1133  0119                     	;# 
  1134  011A                     	;# 
  1135  011A                     	;# 
  1136  011A                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011B                     	;# 
  1142  011C                     	;# 
  1143  011C                     	;# 
  1144  011C                     	;# 
  1145  011D                     	;# 
  1146  011D                     	;# 
  1147  011D                     	;# 
  1148  011E                     	;# 
  1149  011E                     	;# 
  1150  011E                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  011F                     	;# 
  1156  018C                     	;# 
  1157  018D                     	;# 
  1158  018E                     	;# 
  1159  018F                     	;# 
  1160  0190                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0196                     	;# 
  1164  0197                     	;# 
  1165  0198                     	;# 
  1166  0199                     	;# 
  1167  019A                     	;# 
  1168  019B                     	;# 
  1169  019C                     	;# 
  1170  020C                     	;# 
  1171  020D                     	;# 
  1172  020E                     	;# 
  1173  020E                     	;# 
  1174  020F                     	;# 
  1175  020F                     	;# 
  1176  0210                     	;# 
  1177  0210                     	;# 
  1178  0211                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0214                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0216                     	;# 
  1187  0216                     	;# 
  1188  0217                     	;# 
  1189  0217                     	;# 
  1190  0218                     	;# 
  1191  0219                     	;# 
  1192  021A                     	;# 
  1193  021A                     	;# 
  1194  021B                     	;# 
  1195  021B                     	;# 
  1196  021C                     	;# 
  1197  021C                     	;# 
  1198  021D                     	;# 
  1199  021D                     	;# 
  1200  021E                     	;# 
  1201  021F                     	;# 
  1202  028C                     	;# 
  1203  028C                     	;# 
  1204  028D                     	;# 
  1205  028D                     	;# 
  1206  028E                     	;# 
  1207  028F                     	;# 
  1208  0290                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0292                     	;# 
  1212  0293                     	;# 
  1213  0293                     	;# 
  1214  0294                     	;# 
  1215  0295                     	;# 
  1216  0296                     	;# 
  1217  0297                     	;# 
  1218  0298                     	;# 
  1219  0298                     	;# 
  1220  0299                     	;# 
  1221  0299                     	;# 
  1222  029A                     	;# 
  1223  029B                     	;# 
  1224  029C                     	;# 
  1225  029D                     	;# 
  1226  029F                     	;# 
  1227  030C                     	;# 
  1228  030C                     	;# 
  1229  030D                     	;# 
  1230  030E                     	;# 
  1231  030F                     	;# 
  1232  0310                     	;# 
  1233  0310                     	;# 
  1234  0311                     	;# 
  1235  0312                     	;# 
  1236  0313                     	;# 
  1237  0314                     	;# 
  1238  0314                     	;# 
  1239  0315                     	;# 
  1240  0316                     	;# 
  1241  0317                     	;# 
  1242  0318                     	;# 
  1243  0318                     	;# 
  1244  0319                     	;# 
  1245  031A                     	;# 
  1246  031B                     	;# 
  1247  038C                     	;# 
  1248  038C                     	;# 
  1249  038D                     	;# 
  1250  038E                     	;# 
  1251  0390                     	;# 
  1252  0390                     	;# 
  1253  0391                     	;# 
  1254  0392                     	;# 
  1255  048C                     	;# 
  1256  048C                     	;# 
  1257  048D                     	;# 
  1258  048E                     	;# 
  1259  048F                     	;# 
  1260  048F                     	;# 
  1261  0490                     	;# 
  1262  0491                     	;# 
  1263  0492                     	;# 
  1264  0492                     	;# 
  1265  0493                     	;# 
  1266  0494                     	;# 
  1267  0495                     	;# 
  1268  0495                     	;# 
  1269  0496                     	;# 
  1270  0497                     	;# 
  1271  0498                     	;# 
  1272  0499                     	;# 
  1273  049A                     	;# 
  1274  049B                     	;# 
  1275  049C                     	;# 
  1276  049D                     	;# 
  1277  058C                     	;# 
  1278  058C                     	;# 
  1279  058D                     	;# 
  1280  058E                     	;# 
  1281  058F                     	;# 
  1282  058F                     	;# 
  1283  0590                     	;# 
  1284  0591                     	;# 
  1285  0592                     	;# 
  1286  0593                     	;# 
  1287  059C                     	;# 
  1288  059C                     	;# 
  1289  059D                     	;# 
  1290  059D                     	;# 
  1291  059E                     	;# 
  1292  059F                     	;# 
  1293  060C                     	;# 
  1294  060C                     	;# 
  1295  060D                     	;# 
  1296  060D                     	;# 
  1297  060E                     	;# 
  1298  060F                     	;# 
  1299  0610                     	;# 
  1300  0611                     	;# 
  1301  0612                     	;# 
  1302  0613                     	;# 
  1303  0614                     	;# 
  1304  0616                     	;# 
  1305  0616                     	;# 
  1306  0617                     	;# 
  1307  0617                     	;# 
  1308  0618                     	;# 
  1309  0619                     	;# 
  1310  061A                     	;# 
  1311  061B                     	;# 
  1312  061C                     	;# 
  1313  061D                     	;# 
  1314  061E                     	;# 
  1315  070C                     	;# 
  1316  070D                     	;# 
  1317  070E                     	;# 
  1318  070F                     	;# 
  1319  0710                     	;# 
  1320  0711                     	;# 
  1321  0712                     	;# 
  1322  0713                     	;# 
  1323  0714                     	;# 
  1324  0716                     	;# 
  1325  0717                     	;# 
  1326  0718                     	;# 
  1327  0719                     	;# 
  1328  071A                     	;# 
  1329  071B                     	;# 
  1330  071C                     	;# 
  1331  071D                     	;# 
  1332  071E                     	;# 
  1333  0796                     	;# 
  1334  0797                     	;# 
  1335  0798                     	;# 
  1336  0799                     	;# 
  1337  079A                     	;# 
  1338  079B                     	;# 
  1339  079C                     	;# 
  1340  079D                     	;# 
  1341  080C                     	;# 
  1342  080D                     	;# 
  1343  080E                     	;# 
  1344  080F                     	;# 
  1345  0810                     	;# 
  1346  0811                     	;# 
  1347  0812                     	;# 
  1348  0813                     	;# 
  1349  0814                     	;# 
  1350  081A                     	;# 
  1351  081A                     	;# 
  1352  081B                     	;# 
  1353  081C                     	;# 
  1354  081C                     	;# 
  1355  081D                     	;# 
  1356  081E                     	;# 
  1357  081F                     	;# 
  1358  088C                     	;# 
  1359  088D                     	;# 
  1360  088E                     	;# 
  1361  088F                     	;# 
  1362  0890                     	;# 
  1363  0891                     	;# 
  1364  0892                     	;# 
  1365  0893                     	;# 
  1366  0895                     	;# 
  1367  0896                     	;# 
  1368  0897                     	;# 
  1369  0898                     	;# 
  1370  0899                     	;# 
  1371  089A                     	;# 
  1372  089B                     	;# 
  1373  090C                     	;# 
  1374  090E                     	;# 
  1375  090F                     	;# 
  1376  091F                     	;# 
  1377  098F                     	;# 
  1378  098F                     	;# 
  1379  0990                     	;# 
  1380  0991                     	;# 
  1381  0992                     	;# 
  1382  0993                     	;# 
  1383  0994                     	;# 
  1384  0995                     	;# 
  1385  0996                     	;# 
  1386  0997                     	;# 
  1387  1E0F                     	;# 
  1388  1E10                     	;# 
  1389  1E11                     	;# 
  1390  1E12                     	;# 
  1391  1E13                     	;# 
  1392  1E14                     	;# 
  1393  1E15                     	;# 
  1394  1E16                     	;# 
  1395  1E17                     	;# 
  1396  1E18                     	;# 
  1397  1E19                     	;# 
  1398  1E1A                     	;# 
  1399  1E1B                     	;# 
  1400  1E1C                     	;# 
  1401  1E1D                     	;# 
  1402  1E1E                     	;# 
  1403  1E1F                     	;# 
  1404  1E20                     	;# 
  1405  1E21                     	;# 
  1406  1E22                     	;# 
  1407  1E23                     	;# 
  1408  1E24                     	;# 
  1409  1E25                     	;# 
  1410  1E26                     	;# 
  1411  1E27                     	;# 
  1412  1E28                     	;# 
  1413  1E29                     	;# 
  1414  1E2A                     	;# 
  1415  1E2B                     	;# 
  1416  1E2C                     	;# 
  1417  1E2D                     	;# 
  1418  1E2E                     	;# 
  1419  1E2F                     	;# 
  1420  1E30                     	;# 
  1421  1E31                     	;# 
  1422  1E32                     	;# 
  1423  1E33                     	;# 
  1424  1E34                     	;# 
  1425  1E35                     	;# 
  1426  1E36                     	;# 
  1427  1E37                     	;# 
  1428  1E8F                     	;# 
  1429  1E90                     	;# 
  1430  1E91                     	;# 
  1431  1E92                     	;# 
  1432  1E93                     	;# 
  1433  1E94                     	;# 
  1434  1E95                     	;# 
  1435  1E96                     	;# 
  1436  1E97                     	;# 
  1437  1E9C                     	;# 
  1438  1E9D                     	;# 
  1439  1E9E                     	;# 
  1440  1EA1                     	;# 
  1441  1EA2                     	;# 
  1442  1EA3                     	;# 
  1443  1EA4                     	;# 
  1444  1EA9                     	;# 
  1445  1EAA                     	;# 
  1446  1EB1                     	;# 
  1447  1EB2                     	;# 
  1448  1EB8                     	;# 
  1449  1EB9                     	;# 
  1450  1EBA                     	;# 
  1451  1EBB                     	;# 
  1452  1EBC                     	;# 
  1453  1EBD                     	;# 
  1454  1EBE                     	;# 
  1455  1EC3                     	;# 
  1456  1EC5                     	;# 
  1457  1EC6                     	;# 
  1458  1EC7                     	;# 
  1459  1EC8                     	;# 
  1460  1EC9                     	;# 
  1461  1ECA                     	;# 
  1462  1ECB                     	;# 
  1463  1ECB                     	;# 
  1464  1ECB                     	;# 
  1465  1ECC                     	;# 
  1466  1ECC                     	;# 
  1467  1ECC                     	;# 
  1468  1F10                     	;# 
  1469  1F11                     	;# 
  1470  1F12                     	;# 
  1471  1F14                     	;# 
  1472  1F15                     	;# 
  1473  1F1C                     	;# 
  1474  1F1D                     	;# 
  1475  1F1E                     	;# 
  1476  1F1F                     	;# 
  1477  1F20                     	;# 
  1478  1F21                     	;# 
  1479  1F22                     	;# 
  1480  1F23                     	;# 
  1481  1F24                     	;# 
  1482  1F25                     	;# 
  1483  1F26                     	;# 
  1484  1F27                     	;# 
  1485  1F38                     	;# 
  1486  1F39                     	;# 
  1487  1F3A                     	;# 
  1488  1F3B                     	;# 
  1489  1F3C                     	;# 
  1490  1F3D                     	;# 
  1491  1F3E                     	;# 
  1492  1F3F                     	;# 
  1493  1F43                     	;# 
  1494  1F44                     	;# 
  1495  1F45                     	;# 
  1496  1F46                     	;# 
  1497  1F47                     	;# 
  1498  1F48                     	;# 
  1499  1F49                     	;# 
  1500  1F4A                     	;# 
  1501  1F4E                     	;# 
  1502  1F4F                     	;# 
  1503  1F50                     	;# 
  1504  1F51                     	;# 
  1505  1F52                     	;# 
  1506  1F53                     	;# 
  1507  1F54                     	;# 
  1508  1F55                     	;# 
  1509  1FE4                     	;# 
  1510  1FE5                     	;# 
  1511  1FE6                     	;# 
  1512  1FE7                     	;# 
  1513  1FE8                     	;# 
  1514  1FE8                     	;# 
  1515  1FE9                     	;# 
  1516  1FEA                     	;# 
  1517  1FEB                     	;# 
  1518  1FED                     	;# 
  1519  1FEE                     	;# 
  1520  1FEF                     	;# 
  1521  0000                     	;# 
  1522  0001                     	;# 
  1523  0002                     	;# 
  1524  0003                     	;# 
  1525  0004                     	;# 
  1526  0005                     	;# 
  1527  0006                     	;# 
  1528  0007                     	;# 
  1529  0008                     	;# 
  1530  0009                     	;# 
  1531  000A                     	;# 
  1532  000B                     	;# 
  1533  000C                     	;# 
  1534  000D                     	;# 
  1535  000E                     	;# 
  1536  0012                     	;# 
  1537  0013                     	;# 
  1538  0014                     	;# 
  1539  0018                     	;# 
  1540  0019                     	;# 
  1541  001A                     	;# 
  1542  008C                     	;# 
  1543  008C                     	;# 
  1544  008D                     	;# 
  1545  008E                     	;# 
  1546  008E                     	;# 
  1547  008F                     	;# 
  1548  0090                     	;# 
  1549  0090                     	;# 
  1550  0091                     	;# 
  1551  0092                     	;# 
  1552  0092                     	;# 
  1553  0093                     	;# 
  1554  0094                     	;# 
  1555  0094                     	;# 
  1556  0095                     	;# 
  1557  0096                     	;# 
  1558  0096                     	;# 
  1559  0097                     	;# 
  1560  0098                     	;# 
  1561  0099                     	;# 
  1562  009A                     	;# 
  1563  009B                     	;# 
  1564  009B                     	;# 
  1565  009C                     	;# 
  1566  009D                     	;# 
  1567  009D                     	;# 
  1568  009E                     	;# 
  1569  009F                     	;# 
  1570  010C                     	;# 
  1571  010C                     	;# 
  1572  010D                     	;# 
  1573  010E                     	;# 
  1574  010F                     	;# 
  1575  010F                     	;# 
  1576  0110                     	;# 
  1577  0111                     	;# 
  1578  0112                     	;# 
  1579  0113                     	;# 
  1580  0114                     	;# 
  1581  0115                     	;# 
  1582  0116                     	;# 
  1583  0117                     	;# 
  1584  0118                     	;# 
  1585  0119                     	;# 
  1586  0119                     	;# 
  1587  0119                     	;# 
  1588  011A                     	;# 
  1589  011A                     	;# 
  1590  011A                     	;# 
  1591  011B                     	;# 
  1592  011B                     	;# 
  1593  011B                     	;# 
  1594  011B                     	;# 
  1595  011B                     	;# 
  1596  011C                     	;# 
  1597  011C                     	;# 
  1598  011C                     	;# 
  1599  011D                     	;# 
  1600  011D                     	;# 
  1601  011D                     	;# 
  1602  011E                     	;# 
  1603  011E                     	;# 
  1604  011E                     	;# 
  1605  011F                     	;# 
  1606  011F                     	;# 
  1607  011F                     	;# 
  1608  011F                     	;# 
  1609  011F                     	;# 
  1610  018C                     	;# 
  1611  018D                     	;# 
  1612  018E                     	;# 
  1613  018F                     	;# 
  1614  0190                     	;# 
  1615  0191                     	;# 
  1616  0192                     	;# 
  1617  0196                     	;# 
  1618  0197                     	;# 
  1619  0198                     	;# 
  1620  0199                     	;# 
  1621  019A                     	;# 
  1622  019B                     	;# 
  1623  019C                     	;# 
  1624  020C                     	;# 
  1625  020D                     	;# 
  1626  020E                     	;# 
  1627  020E                     	;# 
  1628  020F                     	;# 
  1629  020F                     	;# 
  1630  0210                     	;# 
  1631  0210                     	;# 
  1632  0211                     	;# 
  1633  0211                     	;# 
  1634  0212                     	;# 
  1635  0213                     	;# 
  1636  0214                     	;# 
  1637  0214                     	;# 
  1638  0215                     	;# 
  1639  0215                     	;# 
  1640  0216                     	;# 
  1641  0216                     	;# 
  1642  0217                     	;# 
  1643  0217                     	;# 
  1644  0218                     	;# 
  1645  0219                     	;# 
  1646  021A                     	;# 
  1647  021A                     	;# 
  1648  021B                     	;# 
  1649  021B                     	;# 
  1650  021C                     	;# 
  1651  021C                     	;# 
  1652  021D                     	;# 
  1653  021D                     	;# 
  1654  021E                     	;# 
  1655  021F                     	;# 
  1656  028C                     	;# 
  1657  028C                     	;# 
  1658  028D                     	;# 
  1659  028D                     	;# 
  1660  028E                     	;# 
  1661  028F                     	;# 
  1662  0290                     	;# 
  1663  0291                     	;# 
  1664  0292                     	;# 
  1665  0292                     	;# 
  1666  0293                     	;# 
  1667  0293                     	;# 
  1668  0294                     	;# 
  1669  0295                     	;# 
  1670  0296                     	;# 
  1671  0297                     	;# 
  1672  0298                     	;# 
  1673  0298                     	;# 
  1674  0299                     	;# 
  1675  0299                     	;# 
  1676  029A                     	;# 
  1677  029B                     	;# 
  1678  029C                     	;# 
  1679  029D                     	;# 
  1680  029F                     	;# 
  1681  030C                     	;# 
  1682  030C                     	;# 
  1683  030D                     	;# 
  1684  030E                     	;# 
  1685  030F                     	;# 
  1686  0310                     	;# 
  1687  0310                     	;# 
  1688  0311                     	;# 
  1689  0312                     	;# 
  1690  0313                     	;# 
  1691  0314                     	;# 
  1692  0314                     	;# 
  1693  0315                     	;# 
  1694  0316                     	;# 
  1695  0317                     	;# 
  1696  0318                     	;# 
  1697  0318                     	;# 
  1698  0319                     	;# 
  1699  031A                     	;# 
  1700  031B                     	;# 
  1701  038C                     	;# 
  1702  038C                     	;# 
  1703  038D                     	;# 
  1704  038E                     	;# 
  1705  0390                     	;# 
  1706  0390                     	;# 
  1707  0391                     	;# 
  1708  0392                     	;# 
  1709  048C                     	;# 
  1710  048C                     	;# 
  1711  048D                     	;# 
  1712  048E                     	;# 
  1713  048F                     	;# 
  1714  048F                     	;# 
  1715  0490                     	;# 
  1716  0491                     	;# 
  1717  0492                     	;# 
  1718  0492                     	;# 
  1719  0493                     	;# 
  1720  0494                     	;# 
  1721  0495                     	;# 
  1722  0495                     	;# 
  1723  0496                     	;# 
  1724  0497                     	;# 
  1725  0498                     	;# 
  1726  0499                     	;# 
  1727  049A                     	;# 
  1728  049B                     	;# 
  1729  049C                     	;# 
  1730  049D                     	;# 
  1731  058C                     	;# 
  1732  058C                     	;# 
  1733  058D                     	;# 
  1734  058E                     	;# 
  1735  058F                     	;# 
  1736  058F                     	;# 
  1737  0590                     	;# 
  1738  0591                     	;# 
  1739  0592                     	;# 
  1740  0593                     	;# 
  1741  059C                     	;# 
  1742  059C                     	;# 
  1743  059D                     	;# 
  1744  059D                     	;# 
  1745  059E                     	;# 
  1746  059F                     	;# 
  1747  060C                     	;# 
  1748  060C                     	;# 
  1749  060D                     	;# 
  1750  060D                     	;# 
  1751  060E                     	;# 
  1752  060F                     	;# 
  1753  0610                     	;# 
  1754  0611                     	;# 
  1755  0612                     	;# 
  1756  0613                     	;# 
  1757  0614                     	;# 
  1758  0616                     	;# 
  1759  0616                     	;# 
  1760  0617                     	;# 
  1761  0617                     	;# 
  1762  0618                     	;# 
  1763  0619                     	;# 
  1764  061A                     	;# 
  1765  061B                     	;# 
  1766  061C                     	;# 
  1767  061D                     	;# 
  1768  061E                     	;# 
  1769  070C                     	;# 
  1770  070D                     	;# 
  1771  070E                     	;# 
  1772  070F                     	;# 
  1773  0710                     	;# 
  1774  0711                     	;# 
  1775  0712                     	;# 
  1776  0713                     	;# 
  1777  0714                     	;# 
  1778  0716                     	;# 
  1779  0717                     	;# 
  1780  0718                     	;# 
  1781  0719                     	;# 
  1782  071A                     	;# 
  1783  071B                     	;# 
  1784  071C                     	;# 
  1785  071D                     	;# 
  1786  071E                     	;# 
  1787  0796                     	;# 
  1788  0797                     	;# 
  1789  0798                     	;# 
  1790  0799                     	;# 
  1791  079A                     	;# 
  1792  079B                     	;# 
  1793  079C                     	;# 
  1794  079D                     	;# 
  1795  080C                     	;# 
  1796  080D                     	;# 
  1797  080E                     	;# 
  1798  080F                     	;# 
  1799  0810                     	;# 
  1800  0811                     	;# 
  1801  0812                     	;# 
  1802  0813                     	;# 
  1803  0814                     	;# 
  1804  081A                     	;# 
  1805  081A                     	;# 
  1806  081B                     	;# 
  1807  081C                     	;# 
  1808  081C                     	;# 
  1809  081D                     	;# 
  1810  081E                     	;# 
  1811  081F                     	;# 
  1812  088C                     	;# 
  1813  088D                     	;# 
  1814  088E                     	;# 
  1815  088F                     	;# 
  1816  0890                     	;# 
  1817  0891                     	;# 
  1818  0892                     	;# 
  1819  0893                     	;# 
  1820  0895                     	;# 
  1821  0896                     	;# 
  1822  0897                     	;# 
  1823  0898                     	;# 
  1824  0899                     	;# 
  1825  089A                     	;# 
  1826  089B                     	;# 
  1827  090C                     	;# 
  1828  090E                     	;# 
  1829  090F                     	;# 
  1830  091F                     	;# 
  1831  098F                     	;# 
  1832  098F                     	;# 
  1833  0990                     	;# 
  1834  0991                     	;# 
  1835  0992                     	;# 
  1836  0993                     	;# 
  1837  0994                     	;# 
  1838  0995                     	;# 
  1839  0996                     	;# 
  1840  0997                     	;# 
  1841  1E0F                     	;# 
  1842  1E10                     	;# 
  1843  1E11                     	;# 
  1844  1E12                     	;# 
  1845  1E13                     	;# 
  1846  1E14                     	;# 
  1847  1E15                     	;# 
  1848  1E16                     	;# 
  1849  1E17                     	;# 
  1850  1E18                     	;# 
  1851  1E19                     	;# 
  1852  1E1A                     	;# 
  1853  1E1B                     	;# 
  1854  1E1C                     	;# 
  1855  1E1D                     	;# 
  1856  1E1E                     	;# 
  1857  1E1F                     	;# 
  1858  1E20                     	;# 
  1859  1E21                     	;# 
  1860  1E22                     	;# 
  1861  1E23                     	;# 
  1862  1E24                     	;# 
  1863  1E25                     	;# 
  1864  1E26                     	;# 
  1865  1E27                     	;# 
  1866  1E28                     	;# 
  1867  1E29                     	;# 
  1868  1E2A                     	;# 
  1869  1E2B                     	;# 
  1870  1E2C                     	;# 
  1871  1E2D                     	;# 
  1872  1E2E                     	;# 
  1873  1E2F                     	;# 
  1874  1E30                     	;# 
  1875  1E31                     	;# 
  1876  1E32                     	;# 
  1877  1E33                     	;# 
  1878  1E34                     	;# 
  1879  1E35                     	;# 
  1880  1E36                     	;# 
  1881  1E37                     	;# 
  1882  1E8F                     	;# 
  1883  1E90                     	;# 
  1884  1E91                     	;# 
  1885  1E92                     	;# 
  1886  1E93                     	;# 
  1887  1E94                     	;# 
  1888  1E95                     	;# 
  1889  1E96                     	;# 
  1890  1E97                     	;# 
  1891  1E9C                     	;# 
  1892  1E9D                     	;# 
  1893  1E9E                     	;# 
  1894  1EA1                     	;# 
  1895  1EA2                     	;# 
  1896  1EA3                     	;# 
  1897  1EA4                     	;# 
  1898  1EA9                     	;# 
  1899  1EAA                     	;# 
  1900  1EB1                     	;# 
  1901  1EB2                     	;# 
  1902  1EB8                     	;# 
  1903  1EB9                     	;# 
  1904  1EBA                     	;# 
  1905  1EBB                     	;# 
  1906  1EBC                     	;# 
  1907  1EBD                     	;# 
  1908  1EBE                     	;# 
  1909  1EC3                     	;# 
  1910  1EC5                     	;# 
  1911  1EC6                     	;# 
  1912  1EC7                     	;# 
  1913  1EC8                     	;# 
  1914  1EC9                     	;# 
  1915  1ECA                     	;# 
  1916  1ECB                     	;# 
  1917  1ECB                     	;# 
  1918  1ECB                     	;# 
  1919  1ECC                     	;# 
  1920  1ECC                     	;# 
  1921  1ECC                     	;# 
  1922  1F10                     	;# 
  1923  1F11                     	;# 
  1924  1F12                     	;# 
  1925  1F14                     	;# 
  1926  1F15                     	;# 
  1927  1F1C                     	;# 
  1928  1F1D                     	;# 
  1929  1F1E                     	;# 
  1930  1F1F                     	;# 
  1931  1F20                     	;# 
  1932  1F21                     	;# 
  1933  1F22                     	;# 
  1934  1F23                     	;# 
  1935  1F24                     	;# 
  1936  1F25                     	;# 
  1937  1F26                     	;# 
  1938  1F27                     	;# 
  1939  1F38                     	;# 
  1940  1F39                     	;# 
  1941  1F3A                     	;# 
  1942  1F3B                     	;# 
  1943  1F3C                     	;# 
  1944  1F3D                     	;# 
  1945  1F3E                     	;# 
  1946  1F3F                     	;# 
  1947  1F43                     	;# 
  1948  1F44                     	;# 
  1949  1F45                     	;# 
  1950  1F46                     	;# 
  1951  1F47                     	;# 
  1952  1F48                     	;# 
  1953  1F49                     	;# 
  1954  1F4A                     	;# 
  1955  1F4E                     	;# 
  1956  1F4F                     	;# 
  1957  1F50                     	;# 
  1958  1F51                     	;# 
  1959  1F52                     	;# 
  1960  1F53                     	;# 
  1961  1F54                     	;# 
  1962  1F55                     	;# 
  1963  1FE4                     	;# 
  1964  1FE5                     	;# 
  1965  1FE6                     	;# 
  1966  1FE7                     	;# 
  1967  1FE8                     	;# 
  1968  1FE8                     	;# 
  1969  1FE9                     	;# 
  1970  1FEA                     	;# 
  1971  1FEB                     	;# 
  1972  1FED                     	;# 
  1973  1FEE                     	;# 
  1974  1FEF                     	;# 
  1975  0000                     	;# 
  1976  0001                     	;# 
  1977  0002                     	;# 
  1978  0003                     	;# 
  1979  0004                     	;# 
  1980  0005                     	;# 
  1981  0006                     	;# 
  1982  0007                     	;# 
  1983  0008                     	;# 
  1984  0009                     	;# 
  1985  000A                     	;# 
  1986  000B                     	;# 
  1987  000C                     	;# 
  1988  000D                     	;# 
  1989  000E                     	;# 
  1990  0012                     	;# 
  1991  0013                     	;# 
  1992  0014                     	;# 
  1993  0018                     	;# 
  1994  0019                     	;# 
  1995  001A                     	;# 
  1996  008C                     	;# 
  1997  008C                     	;# 
  1998  008D                     	;# 
  1999  008E                     	;# 
  2000  008E                     	;# 
  2001  008F                     	;# 
  2002  0090                     	;# 
  2003  0090                     	;# 
  2004  0091                     	;# 
  2005  0092                     	;# 
  2006  0092                     	;# 
  2007  0093                     	;# 
  2008  0094                     	;# 
  2009  0094                     	;# 
  2010  0095                     	;# 
  2011  0096                     	;# 
  2012  0096                     	;# 
  2013  0097                     	;# 
  2014  0098                     	;# 
  2015  0099                     	;# 
  2016  009A                     	;# 
  2017  009B                     	;# 
  2018  009B                     	;# 
  2019  009C                     	;# 
  2020  009D                     	;# 
  2021  009D                     	;# 
  2022  009E                     	;# 
  2023  009F                     	;# 
  2024  010C                     	;# 
  2025  010C                     	;# 
  2026  010D                     	;# 
  2027  010E                     	;# 
  2028  010F                     	;# 
  2029  010F                     	;# 
  2030  0110                     	;# 
  2031  0111                     	;# 
  2032  0112                     	;# 
  2033  0113                     	;# 
  2034  0114                     	;# 
  2035  0115                     	;# 
  2036  0116                     	;# 
  2037  0117                     	;# 
  2038  0118                     	;# 
  2039  0119                     	;# 
  2040  0119                     	;# 
  2041  0119                     	;# 
  2042  011A                     	;# 
  2043  011A                     	;# 
  2044  011A                     	;# 
  2045  011B                     	;# 
  2046  011B                     	;# 
  2047  011B                     	;# 
  2048  011B                     	;# 
  2049  011B                     	;# 
  2050  011C                     	;# 
  2051  011C                     	;# 
  2052  011C                     	;# 
  2053  011D                     	;# 
  2054  011D                     	;# 
  2055  011D                     	;# 
  2056  011E                     	;# 
  2057  011E                     	;# 
  2058  011E                     	;# 
  2059  011F                     	;# 
  2060  011F                     	;# 
  2061  011F                     	;# 
  2062  011F                     	;# 
  2063  011F                     	;# 
  2064  018C                     	;# 
  2065  018D                     	;# 
  2066  018E                     	;# 
  2067  018F                     	;# 
  2068  0190                     	;# 
  2069  0191                     	;# 
  2070  0192                     	;# 
  2071  0196                     	;# 
  2072  0197                     	;# 
  2073  0198                     	;# 
  2074  0199                     	;# 
  2075  019A                     	;# 
  2076  019B                     	;# 
  2077  019C                     	;# 
  2078  020C                     	;# 
  2079  020D                     	;# 
  2080  020E                     	;# 
  2081  020E                     	;# 
  2082  020F                     	;# 
  2083  020F                     	;# 
  2084  0210                     	;# 
  2085  0210                     	;# 
  2086  0211                     	;# 
  2087  0211                     	;# 
  2088  0212                     	;# 
  2089  0213                     	;# 
  2090  0214                     	;# 
  2091  0214                     	;# 
  2092  0215                     	;# 
  2093  0215                     	;# 
  2094  0216                     	;# 
  2095  0216                     	;# 
  2096  0217                     	;# 
  2097  0217                     	;# 
  2098  0218                     	;# 
  2099  0219                     	;# 
  2100  021A                     	;# 
  2101  021A                     	;# 
  2102  021B                     	;# 
  2103  021B                     	;# 
  2104  021C                     	;# 
  2105  021C                     	;# 
  2106  021D                     	;# 
  2107  021D                     	;# 
  2108  021E                     	;# 
  2109  021F                     	;# 
  2110  028C                     	;# 
  2111  028C                     	;# 
  2112  028D                     	;# 
  2113  028D                     	;# 
  2114  028E                     	;# 
  2115  028F                     	;# 
  2116  0290                     	;# 
  2117  0291                     	;# 
  2118  0292                     	;# 
  2119  0292                     	;# 
  2120  0293                     	;# 
  2121  0293                     	;# 
  2122  0294                     	;# 
  2123  0295                     	;# 
  2124  0296                     	;# 
  2125  0297                     	;# 
  2126  0298                     	;# 
  2127  0298                     	;# 
  2128  0299                     	;# 
  2129  0299                     	;# 
  2130  029A                     	;# 
  2131  029B                     	;# 
  2132  029C                     	;# 
  2133  029D                     	;# 
  2134  029F                     	;# 
  2135  030C                     	;# 
  2136  030C                     	;# 
  2137  030D                     	;# 
  2138  030E                     	;# 
  2139  030F                     	;# 
  2140  0310                     	;# 
  2141  0310                     	;# 
  2142  0311                     	;# 
  2143  0312                     	;# 
  2144  0313                     	;# 
  2145  0314                     	;# 
  2146  0314                     	;# 
  2147  0315                     	;# 
  2148  0316                     	;# 
  2149  0317                     	;# 
  2150  0318                     	;# 
  2151  0318                     	;# 
  2152  0319                     	;# 
  2153  031A                     	;# 
  2154  031B                     	;# 
  2155  038C                     	;# 
  2156  038C                     	;# 
  2157  038D                     	;# 
  2158  038E                     	;# 
  2159  0390                     	;# 
  2160  0390                     	;# 
  2161  0391                     	;# 
  2162  0392                     	;# 
  2163  048C                     	;# 
  2164  048C                     	;# 
  2165  048D                     	;# 
  2166  048E                     	;# 
  2167  048F                     	;# 
  2168  048F                     	;# 
  2169  0490                     	;# 
  2170  0491                     	;# 
  2171  0492                     	;# 
  2172  0492                     	;# 
  2173  0493                     	;# 
  2174  0494                     	;# 
  2175  0495                     	;# 
  2176  0495                     	;# 
  2177  0496                     	;# 
  2178  0497                     	;# 
  2179  0498                     	;# 
  2180  0499                     	;# 
  2181  049A                     	;# 
  2182  049B                     	;# 
  2183  049C                     	;# 
  2184  049D                     	;# 
  2185  058C                     	;# 
  2186  058C                     	;# 
  2187  058D                     	;# 
  2188  058E                     	;# 
  2189  058F                     	;# 
  2190  058F                     	;# 
  2191  0590                     	;# 
  2192  0591                     	;# 
  2193  0592                     	;# 
  2194  0593                     	;# 
  2195  059C                     	;# 
  2196  059C                     	;# 
  2197  059D                     	;# 
  2198  059D                     	;# 
  2199  059E                     	;# 
  2200  059F                     	;# 
  2201  060C                     	;# 
  2202  060C                     	;# 
  2203  060D                     	;# 
  2204  060D                     	;# 
  2205  060E                     	;# 
  2206  060F                     	;# 
  2207  0610                     	;# 
  2208  0611                     	;# 
  2209  0612                     	;# 
  2210  0613                     	;# 
  2211  0614                     	;# 
  2212  0616                     	;# 
  2213  0616                     	;# 
  2214  0617                     	;# 
  2215  0617                     	;# 
  2216  0618                     	;# 
  2217  0619                     	;# 
  2218  061A                     	;# 
  2219  061B                     	;# 
  2220  061C                     	;# 
  2221  061D                     	;# 
  2222  061E                     	;# 
  2223  070C                     	;# 
  2224  070D                     	;# 
  2225  070E                     	;# 
  2226  070F                     	;# 
  2227  0710                     	;# 
  2228  0711                     	;# 
  2229  0712                     	;# 
  2230  0713                     	;# 
  2231  0714                     	;# 
  2232  0716                     	;# 
  2233  0717                     	;# 
  2234  0718                     	;# 
  2235  0719                     	;# 
  2236  071A                     	;# 
  2237  071B                     	;# 
  2238  071C                     	;# 
  2239  071D                     	;# 
  2240  071E                     	;# 
  2241  0796                     	;# 
  2242  0797                     	;# 
  2243  0798                     	;# 
  2244  0799                     	;# 
  2245  079A                     	;# 
  2246  079B                     	;# 
  2247  079C                     	;# 
  2248  079D                     	;# 
  2249  080C                     	;# 
  2250  080D                     	;# 
  2251  080E                     	;# 
  2252  080F                     	;# 
  2253  0810                     	;# 
  2254  0811                     	;# 
  2255  0812                     	;# 
  2256  0813                     	;# 
  2257  0814                     	;# 
  2258  081A                     	;# 
  2259  081A                     	;# 
  2260  081B                     	;# 
  2261  081C                     	;# 
  2262  081C                     	;# 
  2263  081D                     	;# 
  2264  081E                     	;# 
  2265  081F                     	;# 
  2266  088C                     	;# 
  2267  088D                     	;# 
  2268  088E                     	;# 
  2269  088F                     	;# 
  2270  0890                     	;# 
  2271  0891                     	;# 
  2272  0892                     	;# 
  2273  0893                     	;# 
  2274  0895                     	;# 
  2275  0896                     	;# 
  2276  0897                     	;# 
  2277  0898                     	;# 
  2278  0899                     	;# 
  2279  089A                     	;# 
  2280  089B                     	;# 
  2281  090C                     	;# 
  2282  090E                     	;# 
  2283  090F                     	;# 
  2284  091F                     	;# 
  2285  098F                     	;# 
  2286  098F                     	;# 
  2287  0990                     	;# 
  2288  0991                     	;# 
  2289  0992                     	;# 
  2290  0993                     	;# 
  2291  0994                     	;# 
  2292  0995                     	;# 
  2293  0996                     	;# 
  2294  0997                     	;# 
  2295  1E0F                     	;# 
  2296  1E10                     	;# 
  2297  1E11                     	;# 
  2298  1E12                     	;# 
  2299  1E13                     	;# 
  2300  1E14                     	;# 
  2301  1E15                     	;# 
  2302  1E16                     	;# 
  2303  1E17                     	;# 
  2304  1E18                     	;# 
  2305  1E19                     	;# 
  2306  1E1A                     	;# 
  2307  1E1B                     	;# 
  2308  1E1C                     	;# 
  2309  1E1D                     	;# 
  2310  1E1E                     	;# 
  2311  1E1F                     	;# 
  2312  1E20                     	;# 
  2313  1E21                     	;# 
  2314  1E22                     	;# 
  2315  1E23                     	;# 
  2316  1E24                     	;# 
  2317  1E25                     	;# 
  2318  1E26                     	;# 
  2319  1E27                     	;# 
  2320  1E28                     	;# 
  2321  1E29                     	;# 
  2322  1E2A                     	;# 
  2323  1E2B                     	;# 
  2324  1E2C                     	;# 
  2325  1E2D                     	;# 
  2326  1E2E                     	;# 
  2327  1E2F                     	;# 
  2328  1E30                     	;# 
  2329  1E31                     	;# 
  2330  1E32                     	;# 
  2331  1E33                     	;# 
  2332  1E34                     	;# 
  2333  1E35                     	;# 
  2334  1E36                     	;# 
  2335  1E37                     	;# 
  2336  1E8F                     	;# 
  2337  1E90                     	;# 
  2338  1E91                     	;# 
  2339  1E92                     	;# 
  2340  1E93                     	;# 
  2341  1E94                     	;# 
  2342  1E95                     	;# 
  2343  1E96                     	;# 
  2344  1E97                     	;# 
  2345  1E9C                     	;# 
  2346  1E9D                     	;# 
  2347  1E9E                     	;# 
  2348  1EA1                     	;# 
  2349  1EA2                     	;# 
  2350  1EA3                     	;# 
  2351  1EA4                     	;# 
  2352  1EA9                     	;# 
  2353  1EAA                     	;# 
  2354  1EB1                     	;# 
  2355  1EB2                     	;# 
  2356  1EB8                     	;# 
  2357  1EB9                     	;# 
  2358  1EBA                     	;# 
  2359  1EBB                     	;# 
  2360  1EBC                     	;# 
  2361  1EBD                     	;# 
  2362  1EBE                     	;# 
  2363  1EC3                     	;# 
  2364  1EC5                     	;# 
  2365  1EC6                     	;# 
  2366  1EC7                     	;# 
  2367  1EC8                     	;# 
  2368  1EC9                     	;# 
  2369  1ECA                     	;# 
  2370  1ECB                     	;# 
  2371  1ECB                     	;# 
  2372  1ECB                     	;# 
  2373  1ECC                     	;# 
  2374  1ECC                     	;# 
  2375  1ECC                     	;# 
  2376  1F10                     	;# 
  2377  1F11                     	;# 
  2378  1F12                     	;# 
  2379  1F14                     	;# 
  2380  1F15                     	;# 
  2381  1F1C                     	;# 
  2382  1F1D                     	;# 
  2383  1F1E                     	;# 
  2384  1F1F                     	;# 
  2385  1F20                     	;# 
  2386  1F21                     	;# 
  2387  1F22                     	;# 
  2388  1F23                     	;# 
  2389  1F24                     	;# 
  2390  1F25                     	;# 
  2391  1F26                     	;# 
  2392  1F27                     	;# 
  2393  1F38                     	;# 
  2394  1F39                     	;# 
  2395  1F3A                     	;# 
  2396  1F3B                     	;# 
  2397  1F3C                     	;# 
  2398  1F3D                     	;# 
  2399  1F3E                     	;# 
  2400  1F3F                     	;# 
  2401  1F43                     	;# 
  2402  1F44                     	;# 
  2403  1F45                     	;# 
  2404  1F46                     	;# 
  2405  1F47                     	;# 
  2406  1F48                     	;# 
  2407  1F49                     	;# 
  2408  1F4A                     	;# 
  2409  1F4E                     	;# 
  2410  1F4F                     	;# 
  2411  1F50                     	;# 
  2412  1F51                     	;# 
  2413  1F52                     	;# 
  2414  1F53                     	;# 
  2415  1F54                     	;# 
  2416  1F55                     	;# 
  2417  1FE4                     	;# 
  2418  1FE5                     	;# 
  2419  1FE6                     	;# 
  2420  1FE7                     	;# 
  2421  1FE8                     	;# 
  2422  1FE8                     	;# 
  2423  1FE9                     	;# 
  2424  1FEA                     	;# 
  2425  1FEB                     	;# 
  2426  1FED                     	;# 
  2427  1FEE                     	;# 
  2428  1FEF                     	;# 
  2429  0000                     	;# 
  2430  0001                     	;# 
  2431  0002                     	;# 
  2432  0003                     	;# 
  2433  0004                     	;# 
  2434  0005                     	;# 
  2435  0006                     	;# 
  2436  0007                     	;# 
  2437  0008                     	;# 
  2438  0009                     	;# 
  2439  000A                     	;# 
  2440  000B                     	;# 
  2441  000C                     	;# 
  2442  000D                     	;# 
  2443  000E                     	;# 
  2444  0012                     	;# 
  2445  0013                     	;# 
  2446  0014                     	;# 
  2447  0018                     	;# 
  2448  0019                     	;# 
  2449  001A                     	;# 
  2450  008C                     	;# 
  2451  008C                     	;# 
  2452  008D                     	;# 
  2453  008E                     	;# 
  2454  008E                     	;# 
  2455  008F                     	;# 
  2456  0090                     	;# 
  2457  0090                     	;# 
  2458  0091                     	;# 
  2459  0092                     	;# 
  2460  0092                     	;# 
  2461  0093                     	;# 
  2462  0094                     	;# 
  2463  0094                     	;# 
  2464  0095                     	;# 
  2465  0096                     	;# 
  2466  0096                     	;# 
  2467  0097                     	;# 
  2468  0098                     	;# 
  2469  0099                     	;# 
  2470  009A                     	;# 
  2471  009B                     	;# 
  2472  009B                     	;# 
  2473  009C                     	;# 
  2474  009D                     	;# 
  2475  009D                     	;# 
  2476  009E                     	;# 
  2477  009F                     	;# 
  2478  010C                     	;# 
  2479  010C                     	;# 
  2480  010D                     	;# 
  2481  010E                     	;# 
  2482  010F                     	;# 
  2483  010F                     	;# 
  2484  0110                     	;# 
  2485  0111                     	;# 
  2486  0112                     	;# 
  2487  0113                     	;# 
  2488  0114                     	;# 
  2489  0115                     	;# 
  2490  0116                     	;# 
  2491  0117                     	;# 
  2492  0118                     	;# 
  2493  0119                     	;# 
  2494  0119                     	;# 
  2495  0119                     	;# 
  2496  011A                     	;# 
  2497  011A                     	;# 
  2498  011A                     	;# 
  2499  011B                     	;# 
  2500  011B                     	;# 
  2501  011B                     	;# 
  2502  011B                     	;# 
  2503  011B                     	;# 
  2504  011C                     	;# 
  2505  011C                     	;# 
  2506  011C                     	;# 
  2507  011D                     	;# 
  2508  011D                     	;# 
  2509  011D                     	;# 
  2510  011E                     	;# 
  2511  011E                     	;# 
  2512  011E                     	;# 
  2513  011F                     	;# 
  2514  011F                     	;# 
  2515  011F                     	;# 
  2516  011F                     	;# 
  2517  011F                     	;# 
  2518  018C                     	;# 
  2519  018D                     	;# 
  2520  018E                     	;# 
  2521  018F                     	;# 
  2522  0190                     	;# 
  2523  0191                     	;# 
  2524  0192                     	;# 
  2525  0196                     	;# 
  2526  0197                     	;# 
  2527  0198                     	;# 
  2528  0199                     	;# 
  2529  019A                     	;# 
  2530  019B                     	;# 
  2531  019C                     	;# 
  2532  020C                     	;# 
  2533  020D                     	;# 
  2534  020E                     	;# 
  2535  020E                     	;# 
  2536  020F                     	;# 
  2537  020F                     	;# 
  2538  0210                     	;# 
  2539  0210                     	;# 
  2540  0211                     	;# 
  2541  0211                     	;# 
  2542  0212                     	;# 
  2543  0213                     	;# 
  2544  0214                     	;# 
  2545  0214                     	;# 
  2546  0215                     	;# 
  2547  0215                     	;# 
  2548  0216                     	;# 
  2549  0216                     	;# 
  2550  0217                     	;# 
  2551  0217                     	;# 
  2552  0218                     	;# 
  2553  0219                     	;# 
  2554  021A                     	;# 
  2555  021A                     	;# 
  2556  021B                     	;# 
  2557  021B                     	;# 
  2558  021C                     	;# 
  2559  021C                     	;# 
  2560  021D                     	;# 
  2561  021D                     	;# 
  2562  021E                     	;# 
  2563  021F                     	;# 
  2564  028C                     	;# 
  2565  028C                     	;# 
  2566  028D                     	;# 
  2567  028D                     	;# 
  2568  028E                     	;# 
  2569  028F                     	;# 
  2570  0290                     	;# 
  2571  0291                     	;# 
  2572  0292                     	;# 
  2573  0292                     	;# 
  2574  0293                     	;# 
  2575  0293                     	;# 
  2576  0294                     	;# 
  2577  0295                     	;# 
  2578  0296                     	;# 
  2579  0297                     	;# 
  2580  0298                     	;# 
  2581  0298                     	;# 
  2582  0299                     	;# 
  2583  0299                     	;# 
  2584  029A                     	;# 
  2585  029B                     	;# 
  2586  029C                     	;# 
  2587  029D                     	;# 
  2588  029F                     	;# 
  2589  030C                     	;# 
  2590  030C                     	;# 
  2591  030D                     	;# 
  2592  030E                     	;# 
  2593  030F                     	;# 
  2594  0310                     	;# 
  2595  0310                     	;# 
  2596  0311                     	;# 
  2597  0312                     	;# 
  2598  0313                     	;# 
  2599  0314                     	;# 
  2600  0314                     	;# 
  2601  0315                     	;# 
  2602  0316                     	;# 
  2603  0317                     	;# 
  2604  0318                     	;# 
  2605  0318                     	;# 
  2606  0319                     	;# 
  2607  031A                     	;# 
  2608  031B                     	;# 
  2609  038C                     	;# 
  2610  038C                     	;# 
  2611  038D                     	;# 
  2612  038E                     	;# 
  2613  0390                     	;# 
  2614  0390                     	;# 
  2615  0391                     	;# 
  2616  0392                     	;# 
  2617  048C                     	;# 
  2618  048C                     	;# 
  2619  048D                     	;# 
  2620  048E                     	;# 
  2621  048F                     	;# 
  2622  048F                     	;# 
  2623  0490                     	;# 
  2624  0491                     	;# 
  2625  0492                     	;# 
  2626  0492                     	;# 
  2627  0493                     	;# 
  2628  0494                     	;# 
  2629  0495                     	;# 
  2630  0495                     	;# 
  2631  0496                     	;# 
  2632  0497                     	;# 
  2633  0498                     	;# 
  2634  0499                     	;# 
  2635  049A                     	;# 
  2636  049B                     	;# 
  2637  049C                     	;# 
  2638  049D                     	;# 
  2639  058C                     	;# 
  2640  058C                     	;# 
  2641  058D                     	;# 
  2642  058E                     	;# 
  2643  058F                     	;# 
  2644  058F                     	;# 
  2645  0590                     	;# 
  2646  0591                     	;# 
  2647  0592                     	;# 
  2648  0593                     	;# 
  2649  059C                     	;# 
  2650  059C                     	;# 
  2651  059D                     	;# 
  2652  059D                     	;# 
  2653  059E                     	;# 
  2654  059F                     	;# 
  2655  060C                     	;# 
  2656  060C                     	;# 
  2657  060D                     	;# 
  2658  060D                     	;# 
  2659  060E                     	;# 
  2660  060F                     	;# 
  2661  0610                     	;# 
  2662  0611                     	;# 
  2663  0612                     	;# 
  2664  0613                     	;# 
  2665  0614                     	;# 
  2666  0616                     	;# 
  2667  0616                     	;# 
  2668  0617                     	;# 
  2669  0617                     	;# 
  2670  0618                     	;# 
  2671  0619                     	;# 
  2672  061A                     	;# 
  2673  061B                     	;# 
  2674  061C                     	;# 
  2675  061D                     	;# 
  2676  061E                     	;# 
  2677  070C                     	;# 
  2678  070D                     	;# 
  2679  070E                     	;# 
  2680  070F                     	;# 
  2681  0710                     	;# 
  2682  0711                     	;# 
  2683  0712                     	;# 
  2684  0713                     	;# 
  2685  0714                     	;# 
  2686  0716                     	;# 
  2687  0717                     	;# 
  2688  0718                     	;# 
  2689  0719                     	;# 
  2690  071A                     	;# 
  2691  071B                     	;# 
  2692  071C                     	;# 
  2693  071D                     	;# 
  2694  071E                     	;# 
  2695  0796                     	;# 
  2696  0797                     	;# 
  2697  0798                     	;# 
  2698  0799                     	;# 
  2699  079A                     	;# 
  2700  079B                     	;# 
  2701  079C                     	;# 
  2702  079D                     	;# 
  2703  080C                     	;# 
  2704  080D                     	;# 
  2705  080E                     	;# 
  2706  080F                     	;# 
  2707  0810                     	;# 
  2708  0811                     	;# 
  2709  0812                     	;# 
  2710  0813                     	;# 
  2711  0814                     	;# 
  2712  081A                     	;# 
  2713  081A                     	;# 
  2714  081B                     	;# 
  2715  081C                     	;# 
  2716  081C                     	;# 
  2717  081D                     	;# 
  2718  081E                     	;# 
  2719  081F                     	;# 
  2720  088C                     	;# 
  2721  088D                     	;# 
  2722  088E                     	;# 
  2723  088F                     	;# 
  2724  0890                     	;# 
  2725  0891                     	;# 
  2726  0892                     	;# 
  2727  0893                     	;# 
  2728  0895                     	;# 
  2729  0896                     	;# 
  2730  0897                     	;# 
  2731  0898                     	;# 
  2732  0899                     	;# 
  2733  089A                     	;# 
  2734  089B                     	;# 
  2735  090C                     	;# 
  2736  090E                     	;# 
  2737  090F                     	;# 
  2738  091F                     	;# 
  2739  098F                     	;# 
  2740  098F                     	;# 
  2741  0990                     	;# 
  2742  0991                     	;# 
  2743  0992                     	;# 
  2744  0993                     	;# 
  2745  0994                     	;# 
  2746  0995                     	;# 
  2747  0996                     	;# 
  2748  0997                     	;# 
  2749  1E0F                     	;# 
  2750  1E10                     	;# 
  2751  1E11                     	;# 
  2752  1E12                     	;# 
  2753  1E13                     	;# 
  2754  1E14                     	;# 
  2755  1E15                     	;# 
  2756  1E16                     	;# 
  2757  1E17                     	;# 
  2758  1E18                     	;# 
  2759  1E19                     	;# 
  2760  1E1A                     	;# 
  2761  1E1B                     	;# 
  2762  1E1C                     	;# 
  2763  1E1D                     	;# 
  2764  1E1E                     	;# 
  2765  1E1F                     	;# 
  2766  1E20                     	;# 
  2767  1E21                     	;# 
  2768  1E22                     	;# 
  2769  1E23                     	;# 
  2770  1E24                     	;# 
  2771  1E25                     	;# 
  2772  1E26                     	;# 
  2773  1E27                     	;# 
  2774  1E28                     	;# 
  2775  1E29                     	;# 
  2776  1E2A                     	;# 
  2777  1E2B                     	;# 
  2778  1E2C                     	;# 
  2779  1E2D                     	;# 
  2780  1E2E                     	;# 
  2781  1E2F                     	;# 
  2782  1E30                     	;# 
  2783  1E31                     	;# 
  2784  1E32                     	;# 
  2785  1E33                     	;# 
  2786  1E34                     	;# 
  2787  1E35                     	;# 
  2788  1E36                     	;# 
  2789  1E37                     	;# 
  2790  1E8F                     	;# 
  2791  1E90                     	;# 
  2792  1E91                     	;# 
  2793  1E92                     	;# 
  2794  1E93                     	;# 
  2795  1E94                     	;# 
  2796  1E95                     	;# 
  2797  1E96                     	;# 
  2798  1E97                     	;# 
  2799  1E9C                     	;# 
  2800  1E9D                     	;# 
  2801  1E9E                     	;# 
  2802  1EA1                     	;# 
  2803  1EA2                     	;# 
  2804  1EA3                     	;# 
  2805  1EA4                     	;# 
  2806  1EA9                     	;# 
  2807  1EAA                     	;# 
  2808  1EB1                     	;# 
  2809  1EB2                     	;# 
  2810  1EB8                     	;# 
  2811  1EB9                     	;# 
  2812  1EBA                     	;# 
  2813  1EBB                     	;# 
  2814  1EBC                     	;# 
  2815  1EBD                     	;# 
  2816  1EBE                     	;# 
  2817  1EC3                     	;# 
  2818  1EC5                     	;# 
  2819  1EC6                     	;# 
  2820  1EC7                     	;# 
  2821  1EC8                     	;# 
  2822  1EC9                     	;# 
  2823  1ECA                     	;# 
  2824  1ECB                     	;# 
  2825  1ECB                     	;# 
  2826  1ECB                     	;# 
  2827  1ECC                     	;# 
  2828  1ECC                     	;# 
  2829  1ECC                     	;# 
  2830  1F10                     	;# 
  2831  1F11                     	;# 
  2832  1F12                     	;# 
  2833  1F14                     	;# 
  2834  1F15                     	;# 
  2835  1F1C                     	;# 
  2836  1F1D                     	;# 
  2837  1F1E                     	;# 
  2838  1F1F                     	;# 
  2839  1F20                     	;# 
  2840  1F21                     	;# 
  2841  1F22                     	;# 
  2842  1F23                     	;# 
  2843  1F24                     	;# 
  2844  1F25                     	;# 
  2845  1F26                     	;# 
  2846  1F27                     	;# 
  2847  1F38                     	;# 
  2848  1F39                     	;# 
  2849  1F3A                     	;# 
  2850  1F3B                     	;# 
  2851  1F3C                     	;# 
  2852  1F3D                     	;# 
  2853  1F3E                     	;# 
  2854  1F3F                     	;# 
  2855  1F43                     	;# 
  2856  1F44                     	;# 
  2857  1F45                     	;# 
  2858  1F46                     	;# 
  2859  1F47                     	;# 
  2860  1F48                     	;# 
  2861  1F49                     	;# 
  2862  1F4A                     	;# 
  2863  1F4E                     	;# 
  2864  1F4F                     	;# 
  2865  1F50                     	;# 
  2866  1F51                     	;# 
  2867  1F52                     	;# 
  2868  1F53                     	;# 
  2869  1F54                     	;# 
  2870  1F55                     	;# 
  2871  1FE4                     	;# 
  2872  1FE5                     	;# 
  2873  1FE6                     	;# 
  2874  1FE7                     	;# 
  2875  1FE8                     	;# 
  2876  1FE8                     	;# 
  2877  1FE9                     	;# 
  2878  1FEA                     	;# 
  2879  1FEB                     	;# 
  2880  1FED                     	;# 
  2881  1FEE                     	;# 
  2882  1FEF                     	;# 
  2883  0000                     	;# 
  2884  0001                     	;# 
  2885  0002                     	;# 
  2886  0003                     	;# 
  2887  0004                     	;# 
  2888  0005                     	;# 
  2889  0006                     	;# 
  2890  0007                     	;# 
  2891  0008                     	;# 
  2892  0009                     	;# 
  2893  000A                     	;# 
  2894  000B                     	;# 
  2895  000C                     	;# 
  2896  000D                     	;# 
  2897  000E                     	;# 
  2898  0012                     	;# 
  2899  0013                     	;# 
  2900  0014                     	;# 
  2901  0018                     	;# 
  2902  0019                     	;# 
  2903  001A                     	;# 
  2904  008C                     	;# 
  2905  008C                     	;# 
  2906  008D                     	;# 
  2907  008E                     	;# 
  2908  008E                     	;# 
  2909  008F                     	;# 
  2910  0090                     	;# 
  2911  0090                     	;# 
  2912  0091                     	;# 
  2913  0092                     	;# 
  2914  0092                     	;# 
  2915  0093                     	;# 
  2916  0094                     	;# 
  2917  0094                     	;# 
  2918  0095                     	;# 
  2919  0096                     	;# 
  2920  0096                     	;# 
  2921  0097                     	;# 
  2922  0098                     	;# 
  2923  0099                     	;# 
  2924  009A                     	;# 
  2925  009B                     	;# 
  2926  009B                     	;# 
  2927  009C                     	;# 
  2928  009D                     	;# 
  2929  009D                     	;# 
  2930  009E                     	;# 
  2931  009F                     	;# 
  2932  010C                     	;# 
  2933  010C                     	;# 
  2934  010D                     	;# 
  2935  010E                     	;# 
  2936  010F                     	;# 
  2937  010F                     	;# 
  2938  0110                     	;# 
  2939  0111                     	;# 
  2940  0112                     	;# 
  2941  0113                     	;# 
  2942  0114                     	;# 
  2943  0115                     	;# 
  2944  0116                     	;# 
  2945  0117                     	;# 
  2946  0118                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  018C                     	;# 
  2973  018D                     	;# 
  2974  018E                     	;# 
  2975  018F                     	;# 
  2976  0190                     	;# 
  2977  0191                     	;# 
  2978  0192                     	;# 
  2979  0196                     	;# 
  2980  0197                     	;# 
  2981  0198                     	;# 
  2982  0199                     	;# 
  2983  019A                     	;# 
  2984  019B                     	;# 
  2985  019C                     	;# 
  2986  020C                     	;# 
  2987  020D                     	;# 
  2988  020E                     	;# 
  2989  020E                     	;# 
  2990  020F                     	;# 
  2991  020F                     	;# 
  2992  0210                     	;# 
  2993  0210                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0213                     	;# 
  2998  0214                     	;# 
  2999  0214                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0216                     	;# 
  3003  0216                     	;# 
  3004  0217                     	;# 
  3005  0217                     	;# 
  3006  0218                     	;# 
  3007  0219                     	;# 
  3008  021A                     	;# 
  3009  021A                     	;# 
  3010  021B                     	;# 
  3011  021B                     	;# 
  3012  021C                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028C                     	;# 
  3020  028D                     	;# 
  3021  028D                     	;# 
  3022  028E                     	;# 
  3023  028F                     	;# 
  3024  0290                     	;# 
  3025  0291                     	;# 
  3026  0292                     	;# 
  3027  0292                     	;# 
  3028  0293                     	;# 
  3029  0293                     	;# 
  3030  0294                     	;# 
  3031  0295                     	;# 
  3032  0296                     	;# 
  3033  0297                     	;# 
  3034  0298                     	;# 
  3035  0298                     	;# 
  3036  0299                     	;# 
  3037  0299                     	;# 
  3038  029A                     	;# 
  3039  029B                     	;# 
  3040  029C                     	;# 
  3041  029D                     	;# 
  3042  029F                     	;# 
  3043  030C                     	;# 
  3044  030C                     	;# 
  3045  030D                     	;# 
  3046  030E                     	;# 
  3047  030F                     	;# 
  3048  0310                     	;# 
  3049  0310                     	;# 
  3050  0311                     	;# 
  3051  0312                     	;# 
  3052  0313                     	;# 
  3053  0314                     	;# 
  3054  0314                     	;# 
  3055  0315                     	;# 
  3056  0316                     	;# 
  3057  0317                     	;# 
  3058  0318                     	;# 
  3059  0318                     	;# 
  3060  0319                     	;# 
  3061  031A                     	;# 
  3062  031B                     	;# 
  3063  038C                     	;# 
  3064  038C                     	;# 
  3065  038D                     	;# 
  3066  038E                     	;# 
  3067  0390                     	;# 
  3068  0390                     	;# 
  3069  0391                     	;# 
  3070  0392                     	;# 
  3071  048C                     	;# 
  3072  048C                     	;# 
  3073  048D                     	;# 
  3074  048E                     	;# 
  3075  048F                     	;# 
  3076  048F                     	;# 
  3077  0490                     	;# 
  3078  0491                     	;# 
  3079  0492                     	;# 
  3080  0492                     	;# 
  3081  0493                     	;# 
  3082  0494                     	;# 
  3083  0495                     	;# 
  3084  0495                     	;# 
  3085  0496                     	;# 
  3086  0497                     	;# 
  3087  0498                     	;# 
  3088  0499                     	;# 
  3089  049A                     	;# 
  3090  049B                     	;# 
  3091  049C                     	;# 
  3092  049D                     	;# 
  3093  058C                     	;# 
  3094  058C                     	;# 
  3095  058D                     	;# 
  3096  058E                     	;# 
  3097  058F                     	;# 
  3098  058F                     	;# 
  3099  0590                     	;# 
  3100  0591                     	;# 
  3101  0592                     	;# 
  3102  0593                     	;# 
  3103  059C                     	;# 
  3104  059C                     	;# 
  3105  059D                     	;# 
  3106  059D                     	;# 
  3107  059E                     	;# 
  3108  059F                     	;# 
  3109  060C                     	;# 
  3110  060C                     	;# 
  3111  060D                     	;# 
  3112  060D                     	;# 
  3113  060E                     	;# 
  3114  060F                     	;# 
  3115  0610                     	;# 
  3116  0611                     	;# 
  3117  0612                     	;# 
  3118  0613                     	;# 
  3119  0614                     	;# 
  3120  0616                     	;# 
  3121  0616                     	;# 
  3122  0617                     	;# 
  3123  0617                     	;# 
  3124  0618                     	;# 
  3125  0619                     	;# 
  3126  061A                     	;# 
  3127  061B                     	;# 
  3128  061C                     	;# 
  3129  061D                     	;# 
  3130  061E                     	;# 
  3131  070C                     	;# 
  3132  070D                     	;# 
  3133  070E                     	;# 
  3134  070F                     	;# 
  3135  0710                     	;# 
  3136  0711                     	;# 
  3137  0712                     	;# 
  3138  0713                     	;# 
  3139  0714                     	;# 
  3140  0716                     	;# 
  3141  0717                     	;# 
  3142  0718                     	;# 
  3143  0719                     	;# 
  3144  071A                     	;# 
  3145  071B                     	;# 
  3146  071C                     	;# 
  3147  071D                     	;# 
  3148  071E                     	;# 
  3149  0796                     	;# 
  3150  0797                     	;# 
  3151  0798                     	;# 
  3152  0799                     	;# 
  3153  079A                     	;# 
  3154  079B                     	;# 
  3155  079C                     	;# 
  3156  079D                     	;# 
  3157  080C                     	;# 
  3158  080D                     	;# 
  3159  080E                     	;# 
  3160  080F                     	;# 
  3161  0810                     	;# 
  3162  0811                     	;# 
  3163  0812                     	;# 
  3164  0813                     	;# 
  3165  0814                     	;# 
  3166  081A                     	;# 
  3167  081A                     	;# 
  3168  081B                     	;# 
  3169  081C                     	;# 
  3170  081C                     	;# 
  3171  081D                     	;# 
  3172  081E                     	;# 
  3173  081F                     	;# 
  3174  088C                     	;# 
  3175  088D                     	;# 
  3176  088E                     	;# 
  3177  088F                     	;# 
  3178  0890                     	;# 
  3179  0891                     	;# 
  3180  0892                     	;# 
  3181  0893                     	;# 
  3182  0895                     	;# 
  3183  0896                     	;# 
  3184  0897                     	;# 
  3185  0898                     	;# 
  3186  0899                     	;# 
  3187  089A                     	;# 
  3188  089B                     	;# 
  3189  090C                     	;# 
  3190  090E                     	;# 
  3191  090F                     	;# 
  3192  091F                     	;# 
  3193  098F                     	;# 
  3194  098F                     	;# 
  3195  0990                     	;# 
  3196  0991                     	;# 
  3197  0992                     	;# 
  3198  0993                     	;# 
  3199  0994                     	;# 
  3200  0995                     	;# 
  3201  0996                     	;# 
  3202  0997                     	;# 
  3203  1E0F                     	;# 
  3204  1E10                     	;# 
  3205  1E11                     	;# 
  3206  1E12                     	;# 
  3207  1E13                     	;# 
  3208  1E14                     	;# 
  3209  1E15                     	;# 
  3210  1E16                     	;# 
  3211  1E17                     	;# 
  3212  1E18                     	;# 
  3213  1E19                     	;# 
  3214  1E1A                     	;# 
  3215  1E1B                     	;# 
  3216  1E1C                     	;# 
  3217  1E1D                     	;# 
  3218  1E1E                     	;# 
  3219  1E1F                     	;# 
  3220  1E20                     	;# 
  3221  1E21                     	;# 
  3222  1E22                     	;# 
  3223  1E23                     	;# 
  3224  1E24                     	;# 
  3225  1E25                     	;# 
  3226  1E26                     	;# 
  3227  1E27                     	;# 
  3228  1E28                     	;# 
  3229  1E29                     	;# 
  3230  1E2A                     	;# 
  3231  1E2B                     	;# 
  3232  1E2C                     	;# 
  3233  1E2D                     	;# 
  3234  1E2E                     	;# 
  3235  1E2F                     	;# 
  3236  1E30                     	;# 
  3237  1E31                     	;# 
  3238  1E32                     	;# 
  3239  1E33                     	;# 
  3240  1E34                     	;# 
  3241  1E35                     	;# 
  3242  1E36                     	;# 
  3243  1E37                     	;# 
  3244  1E8F                     	;# 
  3245  1E90                     	;# 
  3246  1E91                     	;# 
  3247  1E92                     	;# 
  3248  1E93                     	;# 
  3249  1E94                     	;# 
  3250  1E95                     	;# 
  3251  1E96                     	;# 
  3252  1E97                     	;# 
  3253  1E9C                     	;# 
  3254  1E9D                     	;# 
  3255  1E9E                     	;# 
  3256  1EA1                     	;# 
  3257  1EA2                     	;# 
  3258  1EA3                     	;# 
  3259  1EA4                     	;# 
  3260  1EA9                     	;# 
  3261  1EAA                     	;# 
  3262  1EB1                     	;# 
  3263  1EB2                     	;# 
  3264  1EB8                     	;# 
  3265  1EB9                     	;# 
  3266  1EBA                     	;# 
  3267  1EBB                     	;# 
  3268  1EBC                     	;# 
  3269  1EBD                     	;# 
  3270  1EBE                     	;# 
  3271  1EC3                     	;# 
  3272  1EC5                     	;# 
  3273  1EC6                     	;# 
  3274  1EC7                     	;# 
  3275  1EC8                     	;# 
  3276  1EC9                     	;# 
  3277  1ECA                     	;# 
  3278  1ECB                     	;# 
  3279  1ECB                     	;# 
  3280  1ECB                     	;# 
  3281  1ECC                     	;# 
  3282  1ECC                     	;# 
  3283  1ECC                     	;# 
  3284  1F10                     	;# 
  3285  1F11                     	;# 
  3286  1F12                     	;# 
  3287  1F14                     	;# 
  3288  1F15                     	;# 
  3289  1F1C                     	;# 
  3290  1F1D                     	;# 
  3291  1F1E                     	;# 
  3292  1F1F                     	;# 
  3293  1F20                     	;# 
  3294  1F21                     	;# 
  3295  1F22                     	;# 
  3296  1F23                     	;# 
  3297  1F24                     	;# 
  3298  1F25                     	;# 
  3299  1F26                     	;# 
  3300  1F27                     	;# 
  3301  1F38                     	;# 
  3302  1F39                     	;# 
  3303  1F3A                     	;# 
  3304  1F3B                     	;# 
  3305  1F3C                     	;# 
  3306  1F3D                     	;# 
  3307  1F3E                     	;# 
  3308  1F3F                     	;# 
  3309  1F43                     	;# 
  3310  1F44                     	;# 
  3311  1F45                     	;# 
  3312  1F46                     	;# 
  3313  1F47                     	;# 
  3314  1F48                     	;# 
  3315  1F49                     	;# 
  3316  1F4A                     	;# 
  3317  1F4E                     	;# 
  3318  1F4F                     	;# 
  3319  1F50                     	;# 
  3320  1F51                     	;# 
  3321  1F52                     	;# 
  3322  1F53                     	;# 
  3323  1F54                     	;# 
  3324  1F55                     	;# 
  3325  1FE4                     	;# 
  3326  1FE5                     	;# 
  3327  1FE6                     	;# 
  3328  1FE7                     	;# 
  3329  1FE8                     	;# 
  3330  1FE8                     	;# 
  3331  1FE9                     	;# 
  3332  1FEA                     	;# 
  3333  1FEB                     	;# 
  3334  1FED                     	;# 
  3335  1FEE                     	;# 
  3336  1FEF                     	;# 
  3337  0000                     	;# 
  3338  0001                     	;# 
  3339  0002                     	;# 
  3340  0003                     	;# 
  3341  0004                     	;# 
  3342  0005                     	;# 
  3343  0006                     	;# 
  3344  0007                     	;# 
  3345  0008                     	;# 
  3346  0009                     	;# 
  3347  000A                     	;# 
  3348  000B                     	;# 
  3349  000C                     	;# 
  3350  000D                     	;# 
  3351  000E                     	;# 
  3352  0012                     	;# 
  3353  0013                     	;# 
  3354  0014                     	;# 
  3355  0018                     	;# 
  3356  0019                     	;# 
  3357  001A                     	;# 
  3358  008C                     	;# 
  3359  008C                     	;# 
  3360  008D                     	;# 
  3361  008E                     	;# 
  3362  008E                     	;# 
  3363  008F                     	;# 
  3364  0090                     	;# 
  3365  0090                     	;# 
  3366  0091                     	;# 
  3367  0092                     	;# 
  3368  0092                     	;# 
  3369  0093                     	;# 
  3370  0094                     	;# 
  3371  0094                     	;# 
  3372  0095                     	;# 
  3373  0096                     	;# 
  3374  0096                     	;# 
  3375  0097                     	;# 
  3376  0098                     	;# 
  3377  0099                     	;# 
  3378  009A                     	;# 
  3379  009B                     	;# 
  3380  009B                     	;# 
  3381  009C                     	;# 
  3382  009D                     	;# 
  3383  009D                     	;# 
  3384  009E                     	;# 
  3385  009F                     	;# 
  3386  010C                     	;# 
  3387  010C                     	;# 
  3388  010D                     	;# 
  3389  010E                     	;# 
  3390  010F                     	;# 
  3391  010F                     	;# 
  3392  0110                     	;# 
  3393  0111                     	;# 
  3394  0112                     	;# 
  3395  0113                     	;# 
  3396  0114                     	;# 
  3397  0115                     	;# 
  3398  0116                     	;# 
  3399  0117                     	;# 
  3400  0118                     	;# 
  3401  0119                     	;# 
  3402  0119                     	;# 
  3403  0119                     	;# 
  3404  011A                     	;# 
  3405  011A                     	;# 
  3406  011A                     	;# 
  3407  011B                     	;# 
  3408  011B                     	;# 
  3409  011B                     	;# 
  3410  011B                     	;# 
  3411  011B                     	;# 
  3412  011C                     	;# 
  3413  011C                     	;# 
  3414  011C                     	;# 
  3415  011D                     	;# 
  3416  011D                     	;# 
  3417  011D                     	;# 
  3418  011E                     	;# 
  3419  011E                     	;# 
  3420  011E                     	;# 
  3421  011F                     	;# 
  3422  011F                     	;# 
  3423  011F                     	;# 
  3424  011F                     	;# 
  3425  011F                     	;# 
  3426  018C                     	;# 
  3427  018D                     	;# 
  3428  018E                     	;# 
  3429  018F                     	;# 
  3430  0190                     	;# 
  3431  0191                     	;# 
  3432  0192                     	;# 
  3433  0196                     	;# 
  3434  0197                     	;# 
  3435  0198                     	;# 
  3436  0199                     	;# 
  3437  019A                     	;# 
  3438  019B                     	;# 
  3439  019C                     	;# 
  3440  020C                     	;# 
  3441  020D                     	;# 
  3442  020E                     	;# 
  3443  020E                     	;# 
  3444  020F                     	;# 
  3445  020F                     	;# 
  3446  0210                     	;# 
  3447  0210                     	;# 
  3448  0211                     	;# 
  3449  0211                     	;# 
  3450  0212                     	;# 
  3451  0213                     	;# 
  3452  0214                     	;# 
  3453  0214                     	;# 
  3454  0215                     	;# 
  3455  0215                     	;# 
  3456  0216                     	;# 
  3457  0216                     	;# 
  3458  0217                     	;# 
  3459  0217                     	;# 
  3460  0218                     	;# 
  3461  0219                     	;# 
  3462  021A                     	;# 
  3463  021A                     	;# 
  3464  021B                     	;# 
  3465  021B                     	;# 
  3466  021C                     	;# 
  3467  021C                     	;# 
  3468  021D                     	;# 
  3469  021D                     	;# 
  3470  021E                     	;# 
  3471  021F                     	;# 
  3472  028C                     	;# 
  3473  028C                     	;# 
  3474  028D                     	;# 
  3475  028D                     	;# 
  3476  028E                     	;# 
  3477  028F                     	;# 
  3478  0290                     	;# 
  3479  0291                     	;# 
  3480  0292                     	;# 
  3481  0292                     	;# 
  3482  0293                     	;# 
  3483  0293                     	;# 
  3484  0294                     	;# 
  3485  0295                     	;# 
  3486  0296                     	;# 
  3487  0297                     	;# 
  3488  0298                     	;# 
  3489  0298                     	;# 
  3490  0299                     	;# 
  3491  0299                     	;# 
  3492  029A                     	;# 
  3493  029B                     	;# 
  3494  029C                     	;# 
  3495  029D                     	;# 
  3496  029F                     	;# 
  3497  030C                     	;# 
  3498  030C                     	;# 
  3499  030D                     	;# 
  3500  030E                     	;# 
  3501  030F                     	;# 
  3502  0310                     	;# 
  3503  0310                     	;# 
  3504  0311                     	;# 
  3505  0312                     	;# 
  3506  0313                     	;# 
  3507  0314                     	;# 
  3508  0314                     	;# 
  3509  0315                     	;# 
  3510  0316                     	;# 
  3511  0317                     	;# 
  3512  0318                     	;# 
  3513  0318                     	;# 
  3514  0319                     	;# 
  3515  031A                     	;# 
  3516  031B                     	;# 
  3517  038C                     	;# 
  3518  038C                     	;# 
  3519  038D                     	;# 
  3520  038E                     	;# 
  3521  0390                     	;# 
  3522  0390                     	;# 
  3523  0391                     	;# 
  3524  0392                     	;# 
  3525  048C                     	;# 
  3526  048C                     	;# 
  3527  048D                     	;# 
  3528  048E                     	;# 
  3529  048F                     	;# 
  3530  048F                     	;# 
  3531  0490                     	;# 
  3532  0491                     	;# 
  3533  0492                     	;# 
  3534  0492                     	;# 
  3535  0493                     	;# 
  3536  0494                     	;# 
  3537  0495                     	;# 
  3538  0495                     	;# 
  3539  0496                     	;# 
  3540  0497                     	;# 
  3541  0498                     	;# 
  3542  0499                     	;# 
  3543  049A                     	;# 
  3544  049B                     	;# 
  3545  049C                     	;# 
  3546  049D                     	;# 
  3547  058C                     	;# 
  3548  058C                     	;# 
  3549  058D                     	;# 
  3550  058E                     	;# 
  3551  058F                     	;# 
  3552  058F                     	;# 
  3553  0590                     	;# 
  3554  0591                     	;# 
  3555  0592                     	;# 
  3556  0593                     	;# 
  3557  059C                     	;# 
  3558  059C                     	;# 
  3559  059D                     	;# 
  3560  059D                     	;# 
  3561  059E                     	;# 
  3562  059F                     	;# 
  3563  060C                     	;# 
  3564  060C                     	;# 
  3565  060D                     	;# 
  3566  060D                     	;# 
  3567  060E                     	;# 
  3568  060F                     	;# 
  3569  0610                     	;# 
  3570  0611                     	;# 
  3571  0612                     	;# 
  3572  0613                     	;# 
  3573  0614                     	;# 
  3574  0616                     	;# 
  3575  0616                     	;# 
  3576  0617                     	;# 
  3577  0617                     	;# 
  3578  0618                     	;# 
  3579  0619                     	;# 
  3580  061A                     	;# 
  3581  061B                     	;# 
  3582  061C                     	;# 
  3583  061D                     	;# 
  3584  061E                     	;# 
  3585  070C                     	;# 
  3586  070D                     	;# 
  3587  070E                     	;# 
  3588  070F                     	;# 
  3589  0710                     	;# 
  3590  0711                     	;# 
  3591  0712                     	;# 
  3592  0713                     	;# 
  3593  0714                     	;# 
  3594  0716                     	;# 
  3595  0717                     	;# 
  3596  0718                     	;# 
  3597  0719                     	;# 
  3598  071A                     	;# 
  3599  071B                     	;# 
  3600  071C                     	;# 
  3601  071D                     	;# 
  3602  071E                     	;# 
  3603  0796                     	;# 
  3604  0797                     	;# 
  3605  0798                     	;# 
  3606  0799                     	;# 
  3607  079A                     	;# 
  3608  079B                     	;# 
  3609  079C                     	;# 
  3610  079D                     	;# 
  3611  080C                     	;# 
  3612  080D                     	;# 
  3613  080E                     	;# 
  3614  080F                     	;# 
  3615  0810                     	;# 
  3616  0811                     	;# 
  3617  0812                     	;# 
  3618  0813                     	;# 
  3619  0814                     	;# 
  3620  081A                     	;# 
  3621  081A                     	;# 
  3622  081B                     	;# 
  3623  081C                     	;# 
  3624  081C                     	;# 
  3625  081D                     	;# 
  3626  081E                     	;# 
  3627  081F                     	;# 
  3628  088C                     	;# 
  3629  088D                     	;# 
  3630  088E                     	;# 
  3631  088F                     	;# 
  3632  0890                     	;# 
  3633  0891                     	;# 
  3634  0892                     	;# 
  3635  0893                     	;# 
  3636  0895                     	;# 
  3637  0896                     	;# 
  3638  0897                     	;# 
  3639  0898                     	;# 
  3640  0899                     	;# 
  3641  089A                     	;# 
  3642  089B                     	;# 
  3643  090C                     	;# 
  3644  090E                     	;# 
  3645  090F                     	;# 
  3646  091F                     	;# 
  3647  098F                     	;# 
  3648  098F                     	;# 
  3649  0990                     	;# 
  3650  0991                     	;# 
  3651  0992                     	;# 
  3652  0993                     	;# 
  3653  0994                     	;# 
  3654  0995                     	;# 
  3655  0996                     	;# 
  3656  0997                     	;# 
  3657  1E0F                     	;# 
  3658  1E10                     	;# 
  3659  1E11                     	;# 
  3660  1E12                     	;# 
  3661  1E13                     	;# 
  3662  1E14                     	;# 
  3663  1E15                     	;# 
  3664  1E16                     	;# 
  3665  1E17                     	;# 
  3666  1E18                     	;# 
  3667  1E19                     	;# 
  3668  1E1A                     	;# 
  3669  1E1B                     	;# 
  3670  1E1C                     	;# 
  3671  1E1D                     	;# 
  3672  1E1E                     	;# 
  3673  1E1F                     	;# 
  3674  1E20                     	;# 
  3675  1E21                     	;# 
  3676  1E22                     	;# 
  3677  1E23                     	;# 
  3678  1E24                     	;# 
  3679  1E25                     	;# 
  3680  1E26                     	;# 
  3681  1E27                     	;# 
  3682  1E28                     	;# 
  3683  1E29                     	;# 
  3684  1E2A                     	;# 
  3685  1E2B                     	;# 
  3686  1E2C                     	;# 
  3687  1E2D                     	;# 
  3688  1E2E                     	;# 
  3689  1E2F                     	;# 
  3690  1E30                     	;# 
  3691  1E31                     	;# 
  3692  1E32                     	;# 
  3693  1E33                     	;# 
  3694  1E34                     	;# 
  3695  1E35                     	;# 
  3696  1E36                     	;# 
  3697  1E37                     	;# 
  3698  1E8F                     	;# 
  3699  1E90                     	;# 
  3700  1E91                     	;# 
  3701  1E92                     	;# 
  3702  1E93                     	;# 
  3703  1E94                     	;# 
  3704  1E95                     	;# 
  3705  1E96                     	;# 
  3706  1E97                     	;# 
  3707  1E9C                     	;# 
  3708  1E9D                     	;# 
  3709  1E9E                     	;# 
  3710  1EA1                     	;# 
  3711  1EA2                     	;# 
  3712  1EA3                     	;# 
  3713  1EA4                     	;# 
  3714  1EA9                     	;# 
  3715  1EAA                     	;# 
  3716  1EB1                     	;# 
  3717  1EB2                     	;# 
  3718  1EB8                     	;# 
  3719  1EB9                     	;# 
  3720  1EBA                     	;# 
  3721  1EBB                     	;# 
  3722  1EBC                     	;# 
  3723  1EBD                     	;# 
  3724  1EBE                     	;# 
  3725  1EC3                     	;# 
  3726  1EC5                     	;# 
  3727  1EC6                     	;# 
  3728  1EC7                     	;# 
  3729  1EC8                     	;# 
  3730  1EC9                     	;# 
  3731  1ECA                     	;# 
  3732  1ECB                     	;# 
  3733  1ECB                     	;# 
  3734  1ECB                     	;# 
  3735  1ECC                     	;# 
  3736  1ECC                     	;# 
  3737  1ECC                     	;# 
  3738  1F10                     	;# 
  3739  1F11                     	;# 
  3740  1F12                     	;# 
  3741  1F14                     	;# 
  3742  1F15                     	;# 
  3743  1F1C                     	;# 
  3744  1F1D                     	;# 
  3745  1F1E                     	;# 
  3746  1F1F                     	;# 
  3747  1F20                     	;# 
  3748  1F21                     	;# 
  3749  1F22                     	;# 
  3750  1F23                     	;# 
  3751  1F24                     	;# 
  3752  1F25                     	;# 
  3753  1F26                     	;# 
  3754  1F27                     	;# 
  3755  1F38                     	;# 
  3756  1F39                     	;# 
  3757  1F3A                     	;# 
  3758  1F3B                     	;# 
  3759  1F3C                     	;# 
  3760  1F3D                     	;# 
  3761  1F3E                     	;# 
  3762  1F3F                     	;# 
  3763  1F43                     	;# 
  3764  1F44                     	;# 
  3765  1F45                     	;# 
  3766  1F46                     	;# 
  3767  1F47                     	;# 
  3768  1F48                     	;# 
  3769  1F49                     	;# 
  3770  1F4A                     	;# 
  3771  1F4E                     	;# 
  3772  1F4F                     	;# 
  3773  1F50                     	;# 
  3774  1F51                     	;# 
  3775  1F52                     	;# 
  3776  1F53                     	;# 
  3777  1F54                     	;# 
  3778  1F55                     	;# 
  3779  1FE4                     	;# 
  3780  1FE5                     	;# 
  3781  1FE6                     	;# 
  3782  1FE7                     	;# 
  3783  1FE8                     	;# 
  3784  1FE8                     	;# 
  3785  1FE9                     	;# 
  3786  1FEA                     	;# 
  3787  1FEB                     	;# 
  3788  1FED                     	;# 
  3789  1FEE                     	;# 
  3790  1FEF                     	;# 
  3791  0000                     	;# 
  3792  0001                     	;# 
  3793  0002                     	;# 
  3794  0003                     	;# 
  3795  0004                     	;# 
  3796  0005                     	;# 
  3797  0006                     	;# 
  3798  0007                     	;# 
  3799  0008                     	;# 
  3800  0009                     	;# 
  3801  000A                     	;# 
  3802  000B                     	;# 
  3803  000C                     	;# 
  3804  000D                     	;# 
  3805  000E                     	;# 
  3806  0012                     	;# 
  3807  0013                     	;# 
  3808  0014                     	;# 
  3809  0018                     	;# 
  3810  0019                     	;# 
  3811  001A                     	;# 
  3812  008C                     	;# 
  3813  008C                     	;# 
  3814  008D                     	;# 
  3815  008E                     	;# 
  3816  008E                     	;# 
  3817  008F                     	;# 
  3818  0090                     	;# 
  3819  0090                     	;# 
  3820  0091                     	;# 
  3821  0092                     	;# 
  3822  0092                     	;# 
  3823  0093                     	;# 
  3824  0094                     	;# 
  3825  0094                     	;# 
  3826  0095                     	;# 
  3827  0096                     	;# 
  3828  0096                     	;# 
  3829  0097                     	;# 
  3830  0098                     	;# 
  3831  0099                     	;# 
  3832  009A                     	;# 
  3833  009B                     	;# 
  3834  009B                     	;# 
  3835  009C                     	;# 
  3836  009D                     	;# 
  3837  009D                     	;# 
  3838  009E                     	;# 
  3839  009F                     	;# 
  3840  010C                     	;# 
  3841  010C                     	;# 
  3842  010D                     	;# 
  3843  010E                     	;# 
  3844  010F                     	;# 
  3845  010F                     	;# 
  3846  0110                     	;# 
  3847  0111                     	;# 
  3848  0112                     	;# 
  3849  0113                     	;# 
  3850  0114                     	;# 
  3851  0115                     	;# 
  3852  0116                     	;# 
  3853  0117                     	;# 
  3854  0118                     	;# 
  3855  0119                     	;# 
  3856  0119                     	;# 
  3857  0119                     	;# 
  3858  011A                     	;# 
  3859  011A                     	;# 
  3860  011A                     	;# 
  3861  011B                     	;# 
  3862  011B                     	;# 
  3863  011B                     	;# 
  3864  011B                     	;# 
  3865  011B                     	;# 
  3866  011C                     	;# 
  3867  011C                     	;# 
  3868  011C                     	;# 
  3869  011D                     	;# 
  3870  011D                     	;# 
  3871  011D                     	;# 
  3872  011E                     	;# 
  3873  011E                     	;# 
  3874  011E                     	;# 
  3875  011F                     	;# 
  3876  011F                     	;# 
  3877  011F                     	;# 
  3878  011F                     	;# 
  3879  011F                     	;# 
  3880  018C                     	;# 
  3881  018D                     	;# 
  3882  018E                     	;# 
  3883  018F                     	;# 
  3884  0190                     	;# 
  3885  0191                     	;# 
  3886  0192                     	;# 
  3887  0196                     	;# 
  3888  0197                     	;# 
  3889  0198                     	;# 
  3890  0199                     	;# 
  3891  019A                     	;# 
  3892  019B                     	;# 
  3893  019C                     	;# 
  3894  020C                     	;# 
  3895  020D                     	;# 
  3896  020E                     	;# 
  3897  020E                     	;# 
  3898  020F                     	;# 
  3899  020F                     	;# 
  3900  0210                     	;# 
  3901  0210                     	;# 
  3902  0211                     	;# 
  3903  0211                     	;# 
  3904  0212                     	;# 
  3905  0213                     	;# 
  3906  0214                     	;# 
  3907  0214                     	;# 
  3908  0215                     	;# 
  3909  0215                     	;# 
  3910  0216                     	;# 
  3911  0216                     	;# 
  3912  0217                     	;# 
  3913  0217                     	;# 
  3914  0218                     	;# 
  3915  0219                     	;# 
  3916  021A                     	;# 
  3917  021A                     	;# 
  3918  021B                     	;# 
  3919  021B                     	;# 
  3920  021C                     	;# 
  3921  021C                     	;# 
  3922  021D                     	;# 
  3923  021D                     	;# 
  3924  021E                     	;# 
  3925  021F                     	;# 
  3926  028C                     	;# 
  3927  028C                     	;# 
  3928  028D                     	;# 
  3929  028D                     	;# 
  3930  028E                     	;# 
  3931  028F                     	;# 
  3932  0290                     	;# 
  3933  0291                     	;# 
  3934  0292                     	;# 
  3935  0292                     	;# 
  3936  0293                     	;# 
  3937  0293                     	;# 
  3938  0294                     	;# 
  3939  0295                     	;# 
  3940  0296                     	;# 
  3941  0297                     	;# 
  3942  0298                     	;# 
  3943  0298                     	;# 
  3944  0299                     	;# 
  3945  0299                     	;# 
  3946  029A                     	;# 
  3947  029B                     	;# 
  3948  029C                     	;# 
  3949  029D                     	;# 
  3950  029F                     	;# 
  3951  030C                     	;# 
  3952  030C                     	;# 
  3953  030D                     	;# 
  3954  030E                     	;# 
  3955  030F                     	;# 
  3956  0310                     	;# 
  3957  0310                     	;# 
  3958  0311                     	;# 
  3959  0312                     	;# 
  3960  0313                     	;# 
  3961  0314                     	;# 
  3962  0314                     	;# 
  3963  0315                     	;# 
  3964  0316                     	;# 
  3965  0317                     	;# 
  3966  0318                     	;# 
  3967  0318                     	;# 
  3968  0319                     	;# 
  3969  031A                     	;# 
  3970  031B                     	;# 
  3971  038C                     	;# 
  3972  038C                     	;# 
  3973  038D                     	;# 
  3974  038E                     	;# 
  3975  0390                     	;# 
  3976  0390                     	;# 
  3977  0391                     	;# 
  3978  0392                     	;# 
  3979  048C                     	;# 
  3980  048C                     	;# 
  3981  048D                     	;# 
  3982  048E                     	;# 
  3983  048F                     	;# 
  3984  048F                     	;# 
  3985  0490                     	;# 
  3986  0491                     	;# 
  3987  0492                     	;# 
  3988  0492                     	;# 
  3989  0493                     	;# 
  3990  0494                     	;# 
  3991  0495                     	;# 
  3992  0495                     	;# 
  3993  0496                     	;# 
  3994  0497                     	;# 
  3995  0498                     	;# 
  3996  0499                     	;# 
  3997  049A                     	;# 
  3998  049B                     	;# 
  3999  049C                     	;# 
  4000  049D                     	;# 
  4001  058C                     	;# 
  4002  058C                     	;# 
  4003  058D                     	;# 
  4004  058E                     	;# 
  4005  058F                     	;# 
  4006  058F                     	;# 
  4007  0590                     	;# 
  4008  0591                     	;# 
  4009  0592                     	;# 
  4010  0593                     	;# 
  4011  059C                     	;# 
  4012  059C                     	;# 
  4013  059D                     	;# 
  4014  059D                     	;# 
  4015  059E                     	;# 
  4016  059F                     	;# 
  4017  060C                     	;# 
  4018  060C                     	;# 
  4019  060D                     	;# 
  4020  060D                     	;# 
  4021  060E                     	;# 
  4022  060F                     	;# 
  4023  0610                     	;# 
  4024  0611                     	;# 
  4025  0612                     	;# 
  4026  0613                     	;# 
  4027  0614                     	;# 
  4028  0616                     	;# 
  4029  0616                     	;# 
  4030  0617                     	;# 
  4031  0617                     	;# 
  4032  0618                     	;# 
  4033  0619                     	;# 
  4034  061A                     	;# 
  4035  061B                     	;# 
  4036  061C                     	;# 
  4037  061D                     	;# 
  4038  061E                     	;# 
  4039  070C                     	;# 
  4040  070D                     	;# 
  4041  070E                     	;# 
  4042  070F                     	;# 
  4043  0710                     	;# 
  4044  0711                     	;# 
  4045  0712                     	;# 
  4046  0713                     	;# 
  4047  0714                     	;# 
  4048  0716                     	;# 
  4049  0717                     	;# 
  4050  0718                     	;# 
  4051  0719                     	;# 
  4052  071A                     	;# 
  4053  071B                     	;# 
  4054  071C                     	;# 
  4055  071D                     	;# 
  4056  071E                     	;# 
  4057  0796                     	;# 
  4058  0797                     	;# 
  4059  0798                     	;# 
  4060  0799                     	;# 
  4061  079A                     	;# 
  4062  079B                     	;# 
  4063  079C                     	;# 
  4064  079D                     	;# 
  4065  080C                     	;# 
  4066  080D                     	;# 
  4067  080E                     	;# 
  4068  080F                     	;# 
  4069  0810                     	;# 
  4070  0811                     	;# 
  4071  0812                     	;# 
  4072  0813                     	;# 
  4073  0814                     	;# 
  4074  081A                     	;# 
  4075  081A                     	;# 
  4076  081B                     	;# 
  4077  081C                     	;# 
  4078  081C                     	;# 
  4079  081D                     	;# 
  4080  081E                     	;# 
  4081  081F                     	;# 
  4082  088C                     	;# 
  4083  088D                     	;# 
  4084  088E                     	;# 
  4085  088F                     	;# 
  4086  0890                     	;# 
  4087  0891                     	;# 
  4088  0892                     	;# 
  4089  0893                     	;# 
  4090  0895                     	;# 
  4091  0896                     	;# 
  4092  0897                     	;# 
  4093  0898                     	;# 
  4094  0899                     	;# 
  4095  089A                     	;# 
  4096  089B                     	;# 
  4097  090C                     	;# 
  4098  090E                     	;# 
  4099  090F                     	;# 
  4100  091F                     	;# 
  4101  098F                     	;# 
  4102  098F                     	;# 
  4103  0990                     	;# 
  4104  0991                     	;# 
  4105  0992                     	;# 
  4106  0993                     	;# 
  4107  0994                     	;# 
  4108  0995                     	;# 
  4109  0996                     	;# 
  4110  0997                     	;# 
  4111  1E0F                     	;# 
  4112  1E10                     	;# 
  4113  1E11                     	;# 
  4114  1E12                     	;# 
  4115  1E13                     	;# 
  4116  1E14                     	;# 
  4117  1E15                     	;# 
  4118  1E16                     	;# 
  4119  1E17                     	;# 
  4120  1E18                     	;# 
  4121  1E19                     	;# 
  4122  1E1A                     	;# 
  4123  1E1B                     	;# 
  4124  1E1C                     	;# 
  4125  1E1D                     	;# 
  4126  1E1E                     	;# 
  4127  1E1F                     	;# 
  4128  1E20                     	;# 
  4129  1E21                     	;# 
  4130  1E22                     	;# 
  4131  1E23                     	;# 
  4132  1E24                     	;# 
  4133  1E25                     	;# 
  4134  1E26                     	;# 
  4135  1E27                     	;# 
  4136  1E28                     	;# 
  4137  1E29                     	;# 
  4138  1E2A                     	;# 
  4139  1E2B                     	;# 
  4140  1E2C                     	;# 
  4141  1E2D                     	;# 
  4142  1E2E                     	;# 
  4143  1E2F                     	;# 
  4144  1E30                     	;# 
  4145  1E31                     	;# 
  4146  1E32                     	;# 
  4147  1E33                     	;# 
  4148  1E34                     	;# 
  4149  1E35                     	;# 
  4150  1E36                     	;# 
  4151  1E37                     	;# 
  4152  1E8F                     	;# 
  4153  1E90                     	;# 
  4154  1E91                     	;# 
  4155  1E92                     	;# 
  4156  1E93                     	;# 
  4157  1E94                     	;# 
  4158  1E95                     	;# 
  4159  1E96                     	;# 
  4160  1E97                     	;# 
  4161  1E9C                     	;# 
  4162  1E9D                     	;# 
  4163  1E9E                     	;# 
  4164  1EA1                     	;# 
  4165  1EA2                     	;# 
  4166  1EA3                     	;# 
  4167  1EA4                     	;# 
  4168  1EA9                     	;# 
  4169  1EAA                     	;# 
  4170  1EB1                     	;# 
  4171  1EB2                     	;# 
  4172  1EB8                     	;# 
  4173  1EB9                     	;# 
  4174  1EBA                     	;# 
  4175  1EBB                     	;# 
  4176  1EBC                     	;# 
  4177  1EBD                     	;# 
  4178  1EBE                     	;# 
  4179  1EC3                     	;# 
  4180  1EC5                     	;# 
  4181  1EC6                     	;# 
  4182  1EC7                     	;# 
  4183  1EC8                     	;# 
  4184  1EC9                     	;# 
  4185  1ECA                     	;# 
  4186  1ECB                     	;# 
  4187  1ECB                     	;# 
  4188  1ECB                     	;# 
  4189  1ECC                     	;# 
  4190  1ECC                     	;# 
  4191  1ECC                     	;# 
  4192  1F10                     	;# 
  4193  1F11                     	;# 
  4194  1F12                     	;# 
  4195  1F14                     	;# 
  4196  1F15                     	;# 
  4197  1F1C                     	;# 
  4198  1F1D                     	;# 
  4199  1F1E                     	;# 
  4200  1F1F                     	;# 
  4201  1F20                     	;# 
  4202  1F21                     	;# 
  4203  1F22                     	;# 
  4204  1F23                     	;# 
  4205  1F24                     	;# 
  4206  1F25                     	;# 
  4207  1F26                     	;# 
  4208  1F27                     	;# 
  4209  1F38                     	;# 
  4210  1F39                     	;# 
  4211  1F3A                     	;# 
  4212  1F3B                     	;# 
  4213  1F3C                     	;# 
  4214  1F3D                     	;# 
  4215  1F3E                     	;# 
  4216  1F3F                     	;# 
  4217  1F43                     	;# 
  4218  1F44                     	;# 
  4219  1F45                     	;# 
  4220  1F46                     	;# 
  4221  1F47                     	;# 
  4222  1F48                     	;# 
  4223  1F49                     	;# 
  4224  1F4A                     	;# 
  4225  1F4E                     	;# 
  4226  1F4F                     	;# 
  4227  1F50                     	;# 
  4228  1F51                     	;# 
  4229  1F52                     	;# 
  4230  1F53                     	;# 
  4231  1F54                     	;# 
  4232  1F55                     	;# 
  4233  1FE4                     	;# 
  4234  1FE5                     	;# 
  4235  1FE6                     	;# 
  4236  1FE7                     	;# 
  4237  1FE8                     	;# 
  4238  1FE8                     	;# 
  4239  1FE9                     	;# 
  4240  1FEA                     	;# 
  4241  1FEB                     	;# 
  4242  1FED                     	;# 
  4243  1FEE                     	;# 
  4244  1FEF                     	;# 
  4245  0000                     	;# 
  4246  0001                     	;# 
  4247  0002                     	;# 
  4248  0003                     	;# 
  4249  0004                     	;# 
  4250  0005                     	;# 
  4251  0006                     	;# 
  4252  0007                     	;# 
  4253  0008                     	;# 
  4254  0009                     	;# 
  4255  000A                     	;# 
  4256  000B                     	;# 
  4257  000C                     	;# 
  4258  000D                     	;# 
  4259  000E                     	;# 
  4260  0012                     	;# 
  4261  0013                     	;# 
  4262  0014                     	;# 
  4263  0018                     	;# 
  4264  0019                     	;# 
  4265  001A                     	;# 
  4266  008C                     	;# 
  4267  008C                     	;# 
  4268  008D                     	;# 
  4269  008E                     	;# 
  4270  008E                     	;# 
  4271  008F                     	;# 
  4272  0090                     	;# 
  4273  0090                     	;# 
  4274  0091                     	;# 
  4275  0092                     	;# 
  4276  0092                     	;# 
  4277  0093                     	;# 
  4278  0094                     	;# 
  4279  0094                     	;# 
  4280  0095                     	;# 
  4281  0096                     	;# 
  4282  0096                     	;# 
  4283  0097                     	;# 
  4284  0098                     	;# 
  4285  0099                     	;# 
  4286  009A                     	;# 
  4287  009B                     	;# 
  4288  009B                     	;# 
  4289  009C                     	;# 
  4290  009D                     	;# 
  4291  009D                     	;# 
  4292  009E                     	;# 
  4293  009F                     	;# 
  4294  010C                     	;# 
  4295  010C                     	;# 
  4296  010D                     	;# 
  4297  010E                     	;# 
  4298  010F                     	;# 
  4299  010F                     	;# 
  4300  0110                     	;# 
  4301  0111                     	;# 
  4302  0112                     	;# 
  4303  0113                     	;# 
  4304  0114                     	;# 
  4305  0115                     	;# 
  4306  0116                     	;# 
  4307  0117                     	;# 
  4308  0118                     	;# 
  4309  0119                     	;# 
  4310  0119                     	;# 
  4311  0119                     	;# 
  4312  011A                     	;# 
  4313  011A                     	;# 
  4314  011A                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011B                     	;# 
  4319  011B                     	;# 
  4320  011C                     	;# 
  4321  011C                     	;# 
  4322  011C                     	;# 
  4323  011D                     	;# 
  4324  011D                     	;# 
  4325  011D                     	;# 
  4326  011E                     	;# 
  4327  011E                     	;# 
  4328  011E                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  011F                     	;# 
  4333  011F                     	;# 
  4334  018C                     	;# 
  4335  018D                     	;# 
  4336  018E                     	;# 
  4337  018F                     	;# 
  4338  0190                     	;# 
  4339  0191                     	;# 
  4340  0192                     	;# 
  4341  0196                     	;# 
  4342  0197                     	;# 
  4343  0198                     	;# 
  4344  0199                     	;# 
  4345  019A                     	;# 
  4346  019B                     	;# 
  4347  019C                     	;# 
  4348  020C                     	;# 
  4349  020D                     	;# 
  4350  020E                     	;# 
  4351  020E                     	;# 
  4352  020F                     	;# 
  4353  020F                     	;# 
  4354  0210                     	;# 
  4355  0210                     	;# 
  4356  0211                     	;# 
  4357  0211                     	;# 
  4358  0212                     	;# 
  4359  0213                     	;# 
  4360  0214                     	;# 
  4361  0214                     	;# 
  4362  0215                     	;# 
  4363  0215                     	;# 
  4364  0216                     	;# 
  4365  0216                     	;# 
  4366  0217                     	;# 
  4367  0217                     	;# 
  4368  0218                     	;# 
  4369  0219                     	;# 
  4370  021A                     	;# 
  4371  021A                     	;# 
  4372  021B                     	;# 
  4373  021B                     	;# 
  4374  021C                     	;# 
  4375  021C                     	;# 
  4376  021D                     	;# 
  4377  021D                     	;# 
  4378  021E                     	;# 
  4379  021F                     	;# 
  4380  028C                     	;# 
  4381  028C                     	;# 
  4382  028D                     	;# 
  4383  028D                     	;# 
  4384  028E                     	;# 
  4385  028F                     	;# 
  4386  0290                     	;# 
  4387  0291                     	;# 
  4388  0292                     	;# 
  4389  0292                     	;# 
  4390  0293                     	;# 
  4391  0293                     	;# 
  4392  0294                     	;# 
  4393  0295                     	;# 
  4394  0296                     	;# 
  4395  0297                     	;# 
  4396  0298                     	;# 
  4397  0298                     	;# 
  4398  0299                     	;# 
  4399  0299                     	;# 
  4400  029A                     	;# 
  4401  029B                     	;# 
  4402  029C                     	;# 
  4403  029D                     	;# 
  4404  029F                     	;# 
  4405  030C                     	;# 
  4406  030C                     	;# 
  4407  030D                     	;# 
  4408  030E                     	;# 
  4409  030F                     	;# 
  4410  0310                     	;# 
  4411  0310                     	;# 
  4412  0311                     	;# 
  4413  0312                     	;# 
  4414  0313                     	;# 
  4415  0314                     	;# 
  4416  0314                     	;# 
  4417  0315                     	;# 
  4418  0316                     	;# 
  4419  0317                     	;# 
  4420  0318                     	;# 
  4421  0318                     	;# 
  4422  0319                     	;# 
  4423  031A                     	;# 
  4424  031B                     	;# 
  4425  038C                     	;# 
  4426  038C                     	;# 
  4427  038D                     	;# 
  4428  038E                     	;# 
  4429  0390                     	;# 
  4430  0390                     	;# 
  4431  0391                     	;# 
  4432  0392                     	;# 
  4433  048C                     	;# 
  4434  048C                     	;# 
  4435  048D                     	;# 
  4436  048E                     	;# 
  4437  048F                     	;# 
  4438  048F                     	;# 
  4439  0490                     	;# 
  4440  0491                     	;# 
  4441  0492                     	;# 
  4442  0492                     	;# 
  4443  0493                     	;# 
  4444  0494                     	;# 
  4445  0495                     	;# 
  4446  0495                     	;# 
  4447  0496                     	;# 
  4448  0497                     	;# 
  4449  0498                     	;# 
  4450  0499                     	;# 
  4451  049A                     	;# 
  4452  049B                     	;# 
  4453  049C                     	;# 
  4454  049D                     	;# 
  4455  058C                     	;# 
  4456  058C                     	;# 
  4457  058D                     	;# 
  4458  058E                     	;# 
  4459  058F                     	;# 
  4460  058F                     	;# 
  4461  0590                     	;# 
  4462  0591                     	;# 
  4463  0592                     	;# 
  4464  0593                     	;# 
  4465  059C                     	;# 
  4466  059C                     	;# 
  4467  059D                     	;# 
  4468  059D                     	;# 
  4469  059E                     	;# 
  4470  059F                     	;# 
  4471  060C                     	;# 
  4472  060C                     	;# 
  4473  060D                     	;# 
  4474  060D                     	;# 
  4475  060E                     	;# 
  4476  060F                     	;# 
  4477  0610                     	;# 
  4478  0611                     	;# 
  4479  0612                     	;# 
  4480  0613                     	;# 
  4481  0614                     	;# 
  4482  0616                     	;# 
  4483  0616                     	;# 
  4484  0617                     	;# 
  4485  0617                     	;# 
  4486  0618                     	;# 
  4487  0619                     	;# 
  4488  061A                     	;# 
  4489  061B                     	;# 
  4490  061C                     	;# 
  4491  061D                     	;# 
  4492  061E                     	;# 
  4493  070C                     	;# 
  4494  070D                     	;# 
  4495  070E                     	;# 
  4496  070F                     	;# 
  4497  0710                     	;# 
  4498  0711                     	;# 
  4499  0712                     	;# 
  4500  0713                     	;# 
  4501  0714                     	;# 
  4502  0716                     	;# 
  4503  0717                     	;# 
  4504  0718                     	;# 
  4505  0719                     	;# 
  4506  071A                     	;# 
  4507  071B                     	;# 
  4508  071C                     	;# 
  4509  071D                     	;# 
  4510  071E                     	;# 
  4511  0796                     	;# 
  4512  0797                     	;# 
  4513  0798                     	;# 
  4514  0799                     	;# 
  4515  079A                     	;# 
  4516  079B                     	;# 
  4517  079C                     	;# 
  4518  079D                     	;# 
  4519  080C                     	;# 
  4520  080D                     	;# 
  4521  080E                     	;# 
  4522  080F                     	;# 
  4523  0810                     	;# 
  4524  0811                     	;# 
  4525  0812                     	;# 
  4526  0813                     	;# 
  4527  0814                     	;# 
  4528  081A                     	;# 
  4529  081A                     	;# 
  4530  081B                     	;# 
  4531  081C                     	;# 
  4532  081C                     	;# 
  4533  081D                     	;# 
  4534  081E                     	;# 
  4535  081F                     	;# 
  4536  088C                     	;# 
  4537  088D                     	;# 
  4538  088E                     	;# 
  4539  088F                     	;# 
  4540  0890                     	;# 
  4541  0891                     	;# 
  4542  0892                     	;# 
  4543  0893                     	;# 
  4544  0895                     	;# 
  4545  0896                     	;# 
  4546  0897                     	;# 
  4547  0898                     	;# 
  4548  0899                     	;# 
  4549  089A                     	;# 
  4550  089B                     	;# 
  4551  090C                     	;# 
  4552  090E                     	;# 
  4553  090F                     	;# 
  4554  091F                     	;# 
  4555  098F                     	;# 
  4556  098F                     	;# 
  4557  0990                     	;# 
  4558  0991                     	;# 
  4559  0992                     	;# 
  4560  0993                     	;# 
  4561  0994                     	;# 
  4562  0995                     	;# 
  4563  0996                     	;# 
  4564  0997                     	;# 
  4565  1E0F                     	;# 
  4566  1E10                     	;# 
  4567  1E11                     	;# 
  4568  1E12                     	;# 
  4569  1E13                     	;# 
  4570  1E14                     	;# 
  4571  1E15                     	;# 
  4572  1E16                     	;# 
  4573  1E17                     	;# 
  4574  1E18                     	;# 
  4575  1E19                     	;# 
  4576  1E1A                     	;# 
  4577  1E1B                     	;# 
  4578  1E1C                     	;# 
  4579  1E1D                     	;# 
  4580  1E1E                     	;# 
  4581  1E1F                     	;# 
  4582  1E20                     	;# 
  4583  1E21                     	;# 
  4584  1E22                     	;# 
  4585  1E23                     	;# 
  4586  1E24                     	;# 
  4587  1E25                     	;# 
  4588  1E26                     	;# 
  4589  1E27                     	;# 
  4590  1E28                     	;# 
  4591  1E29                     	;# 
  4592  1E2A                     	;# 
  4593  1E2B                     	;# 
  4594  1E2C                     	;# 
  4595  1E2D                     	;# 
  4596  1E2E                     	;# 
  4597  1E2F                     	;# 
  4598  1E30                     	;# 
  4599  1E31                     	;# 
  4600  1E32                     	;# 
  4601  1E33                     	;# 
  4602  1E34                     	;# 
  4603  1E35                     	;# 
  4604  1E36                     	;# 
  4605  1E37                     	;# 
  4606  1E8F                     	;# 
  4607  1E90                     	;# 
  4608  1E91                     	;# 
  4609  1E92                     	;# 
  4610  1E93                     	;# 
  4611  1E94                     	;# 
  4612  1E95                     	;# 
  4613  1E96                     	;# 
  4614  1E97                     	;# 
  4615  1E9C                     	;# 
  4616  1E9D                     	;# 
  4617  1E9E                     	;# 
  4618  1EA1                     	;# 
  4619  1EA2                     	;# 
  4620  1EA3                     	;# 
  4621  1EA4                     	;# 
  4622  1EA9                     	;# 
  4623  1EAA                     	;# 
  4624  1EB1                     	;# 
  4625  1EB2                     	;# 
  4626  1EB8                     	;# 
  4627  1EB9                     	;# 
  4628  1EBA                     	;# 
  4629  1EBB                     	;# 
  4630  1EBC                     	;# 
  4631  1EBD                     	;# 
  4632  1EBE                     	;# 
  4633  1EC3                     	;# 
  4634  1EC5                     	;# 
  4635  1EC6                     	;# 
  4636  1EC7                     	;# 
  4637  1EC8                     	;# 
  4638  1EC9                     	;# 
  4639  1ECA                     	;# 
  4640  1ECB                     	;# 
  4641  1ECB                     	;# 
  4642  1ECB                     	;# 
  4643  1ECC                     	;# 
  4644  1ECC                     	;# 
  4645  1ECC                     	;# 
  4646  1F10                     	;# 
  4647  1F11                     	;# 
  4648  1F12                     	;# 
  4649  1F14                     	;# 
  4650  1F15                     	;# 
  4651  1F1C                     	;# 
  4652  1F1D                     	;# 
  4653  1F1E                     	;# 
  4654  1F1F                     	;# 
  4655  1F20                     	;# 
  4656  1F21                     	;# 
  4657  1F22                     	;# 
  4658  1F23                     	;# 
  4659  1F24                     	;# 
  4660  1F25                     	;# 
  4661  1F26                     	;# 
  4662  1F27                     	;# 
  4663  1F38                     	;# 
  4664  1F39                     	;# 
  4665  1F3A                     	;# 
  4666  1F3B                     	;# 
  4667  1F3C                     	;# 
  4668  1F3D                     	;# 
  4669  1F3E                     	;# 
  4670  1F3F                     	;# 
  4671  1F43                     	;# 
  4672  1F44                     	;# 
  4673  1F45                     	;# 
  4674  1F46                     	;# 
  4675  1F47                     	;# 
  4676  1F48                     	;# 
  4677  1F49                     	;# 
  4678  1F4A                     	;# 
  4679  1F4E                     	;# 
  4680  1F4F                     	;# 
  4681  1F50                     	;# 
  4682  1F51                     	;# 
  4683  1F52                     	;# 
  4684  1F53                     	;# 
  4685  1F54                     	;# 
  4686  1F55                     	;# 
  4687  1FE4                     	;# 
  4688  1FE5                     	;# 
  4689  1FE6                     	;# 
  4690  1FE7                     	;# 
  4691  1FE8                     	;# 
  4692  1FE8                     	;# 
  4693  1FE9                     	;# 
  4694  1FEA                     	;# 
  4695  1FEB                     	;# 
  4696  1FED                     	;# 
  4697  1FEE                     	;# 
  4698  1FEF                     	;# 
  4699  0000                     	;# 
  4700  0001                     	;# 
  4701  0002                     	;# 
  4702  0003                     	;# 
  4703  0004                     	;# 
  4704  0005                     	;# 
  4705  0006                     	;# 
  4706  0007                     	;# 
  4707  0008                     	;# 
  4708  0009                     	;# 
  4709  000A                     	;# 
  4710  000B                     	;# 
  4711  000C                     	;# 
  4712  000D                     	;# 
  4713  000E                     	;# 
  4714  0012                     	;# 
  4715  0013                     	;# 
  4716  0014                     	;# 
  4717  0018                     	;# 
  4718  0019                     	;# 
  4719  001A                     	;# 
  4720  008C                     	;# 
  4721  008C                     	;# 
  4722  008D                     	;# 
  4723  008E                     	;# 
  4724  008E                     	;# 
  4725  008F                     	;# 
  4726  0090                     	;# 
  4727  0090                     	;# 
  4728  0091                     	;# 
  4729  0092                     	;# 
  4730  0092                     	;# 
  4731  0093                     	;# 
  4732  0094                     	;# 
  4733  0094                     	;# 
  4734  0095                     	;# 
  4735  0096                     	;# 
  4736  0096                     	;# 
  4737  0097                     	;# 
  4738  0098                     	;# 
  4739  0099                     	;# 
  4740  009A                     	;# 
  4741  009B                     	;# 
  4742  009B                     	;# 
  4743  009C                     	;# 
  4744  009D                     	;# 
  4745  009D                     	;# 
  4746  009E                     	;# 
  4747  009F                     	;# 
  4748  010C                     	;# 
  4749  010C                     	;# 
  4750  010D                     	;# 
  4751  010E                     	;# 
  4752  010F                     	;# 
  4753  010F                     	;# 
  4754  0110                     	;# 
  4755  0111                     	;# 
  4756  0112                     	;# 
  4757  0113                     	;# 
  4758  0114                     	;# 
  4759  0115                     	;# 
  4760  0116                     	;# 
  4761  0117                     	;# 
  4762  0118                     	;# 
  4763  0119                     	;# 
  4764  0119                     	;# 
  4765  0119                     	;# 
  4766  011A                     	;# 
  4767  011A                     	;# 
  4768  011A                     	;# 
  4769  011B                     	;# 
  4770  011B                     	;# 
  4771  011B                     	;# 
  4772  011B                     	;# 
  4773  011B                     	;# 
  4774  011C                     	;# 
  4775  011C                     	;# 
  4776  011C                     	;# 
  4777  011D                     	;# 
  4778  011D                     	;# 
  4779  011D                     	;# 
  4780  011E                     	;# 
  4781  011E                     	;# 
  4782  011E                     	;# 
  4783  011F                     	;# 
  4784  011F                     	;# 
  4785  011F                     	;# 
  4786  011F                     	;# 
  4787  011F                     	;# 
  4788  018C                     	;# 
  4789  018D                     	;# 
  4790  018E                     	;# 
  4791  018F                     	;# 
  4792  0190                     	;# 
  4793  0191                     	;# 
  4794  0192                     	;# 
  4795  0196                     	;# 
  4796  0197                     	;# 
  4797  0198                     	;# 
  4798  0199                     	;# 
  4799  019A                     	;# 
  4800  019B                     	;# 
  4801  019C                     	;# 
  4802  020C                     	;# 
  4803  020D                     	;# 
  4804  020E                     	;# 
  4805  020E                     	;# 
  4806  020F                     	;# 
  4807  020F                     	;# 
  4808  0210                     	;# 
  4809  0210                     	;# 
  4810  0211                     	;# 
  4811  0211                     	;# 
  4812  0212                     	;# 
  4813  0213                     	;# 
  4814  0214                     	;# 
  4815  0214                     	;# 
  4816  0215                     	;# 
  4817  0215                     	;# 
  4818  0216                     	;# 
  4819  0216                     	;# 
  4820  0217                     	;# 
  4821  0217                     	;# 
  4822  0218                     	;# 
  4823  0219                     	;# 
  4824  021A                     	;# 
  4825  021A                     	;# 
  4826  021B                     	;# 
  4827  021B                     	;# 
  4828  021C                     	;# 
  4829  021C                     	;# 
  4830  021D                     	;# 
  4831  021D                     	;# 
  4832  021E                     	;# 
  4833  021F                     	;# 
  4834  028C                     	;# 
  4835  028C                     	;# 
  4836  028D                     	;# 
  4837  028D                     	;# 
  4838  028E                     	;# 
  4839  028F                     	;# 
  4840  0290                     	;# 
  4841  0291                     	;# 
  4842  0292                     	;# 
  4843  0292                     	;# 
  4844  0293                     	;# 
  4845  0293                     	;# 
  4846  0294                     	;# 
  4847  0295                     	;# 
  4848  0296                     	;# 
  4849  0297                     	;# 
  4850  0298                     	;# 
  4851  0298                     	;# 
  4852  0299                     	;# 
  4853  0299                     	;# 
  4854  029A                     	;# 
  4855  029B                     	;# 
  4856  029C                     	;# 
  4857  029D                     	;# 
  4858  029F                     	;# 
  4859  030C                     	;# 
  4860  030C                     	;# 
  4861  030D                     	;# 
  4862  030E                     	;# 
  4863  030F                     	;# 
  4864  0310                     	;# 
  4865  0310                     	;# 
  4866  0311                     	;# 
  4867  0312                     	;# 
  4868  0313                     	;# 
  4869  0314                     	;# 
  4870  0314                     	;# 
  4871  0315                     	;# 
  4872  0316                     	;# 
  4873  0317                     	;# 
  4874  0318                     	;# 
  4875  0318                     	;# 
  4876  0319                     	;# 
  4877  031A                     	;# 
  4878  031B                     	;# 
  4879  038C                     	;# 
  4880  038C                     	;# 
  4881  038D                     	;# 
  4882  038E                     	;# 
  4883  0390                     	;# 
  4884  0390                     	;# 
  4885  0391                     	;# 
  4886  0392                     	;# 
  4887  048C                     	;# 
  4888  048C                     	;# 
  4889  048D                     	;# 
  4890  048E                     	;# 
  4891  048F                     	;# 
  4892  048F                     	;# 
  4893  0490                     	;# 
  4894  0491                     	;# 
  4895  0492                     	;# 
  4896  0492                     	;# 
  4897  0493                     	;# 
  4898  0494                     	;# 
  4899  0495                     	;# 
  4900  0495                     	;# 
  4901  0496                     	;# 
  4902  0497                     	;# 
  4903  0498                     	;# 
  4904  0499                     	;# 
  4905  049A                     	;# 
  4906  049B                     	;# 
  4907  049C                     	;# 
  4908  049D                     	;# 
  4909  058C                     	;# 
  4910  058C                     	;# 
  4911  058D                     	;# 
  4912  058E                     	;# 
  4913  058F                     	;# 
  4914  058F                     	;# 
  4915  0590                     	;# 
  4916  0591                     	;# 
  4917  0592                     	;# 
  4918  0593                     	;# 
  4919  059C                     	;# 
  4920  059C                     	;# 
  4921  059D                     	;# 
  4922  059D                     	;# 
  4923  059E                     	;# 
  4924  059F                     	;# 
  4925  060C                     	;# 
  4926  060C                     	;# 
  4927  060D                     	;# 
  4928  060D                     	;# 
  4929  060E                     	;# 
  4930  060F                     	;# 
  4931  0610                     	;# 
  4932  0611                     	;# 
  4933  0612                     	;# 
  4934  0613                     	;# 
  4935  0614                     	;# 
  4936  0616                     	;# 
  4937  0616                     	;# 
  4938  0617                     	;# 
  4939  0617                     	;# 
  4940  0618                     	;# 
  4941  0619                     	;# 
  4942  061A                     	;# 
  4943  061B                     	;# 
  4944  061C                     	;# 
  4945  061D                     	;# 
  4946  061E                     	;# 
  4947  070C                     	;# 
  4948  070D                     	;# 
  4949  070E                     	;# 
  4950  070F                     	;# 
  4951  0710                     	;# 
  4952  0711                     	;# 
  4953  0712                     	;# 
  4954  0713                     	;# 
  4955  0714                     	;# 
  4956  0716                     	;# 
  4957  0717                     	;# 
  4958  0718                     	;# 
  4959  0719                     	;# 
  4960  071A                     	;# 
  4961  071B                     	;# 
  4962  071C                     	;# 
  4963  071D                     	;# 
  4964  071E                     	;# 
  4965  0796                     	;# 
  4966  0797                     	;# 
  4967  0798                     	;# 
  4968  0799                     	;# 
  4969  079A                     	;# 
  4970  079B                     	;# 
  4971  079C                     	;# 
  4972  079D                     	;# 
  4973  080C                     	;# 
  4974  080D                     	;# 
  4975  080E                     	;# 
  4976  080F                     	;# 
  4977  0810                     	;# 
  4978  0811                     	;# 
  4979  0812                     	;# 
  4980  0813                     	;# 
  4981  0814                     	;# 
  4982  081A                     	;# 
  4983  081A                     	;# 
  4984  081B                     	;# 
  4985  081C                     	;# 
  4986  081C                     	;# 
  4987  081D                     	;# 
  4988  081E                     	;# 
  4989  081F                     	;# 
  4990  088C                     	;# 
  4991  088D                     	;# 
  4992  088E                     	;# 
  4993  088F                     	;# 
  4994  0890                     	;# 
  4995  0891                     	;# 
  4996  0892                     	;# 
  4997  0893                     	;# 
  4998  0895                     	;# 
  4999  0896                     	;# 
  5000  0897                     	;# 
  5001  0898                     	;# 
  5002  0899                     	;# 
  5003  089A                     	;# 
  5004  089B                     	;# 
  5005  090C                     	;# 
  5006  090E                     	;# 
  5007  090F                     	;# 
  5008  091F                     	;# 
  5009  098F                     	;# 
  5010  098F                     	;# 
  5011  0990                     	;# 
  5012  0991                     	;# 
  5013  0992                     	;# 
  5014  0993                     	;# 
  5015  0994                     	;# 
  5016  0995                     	;# 
  5017  0996                     	;# 
  5018  0997                     	;# 
  5019  1E0F                     	;# 
  5020  1E10                     	;# 
  5021  1E11                     	;# 
  5022  1E12                     	;# 
  5023  1E13                     	;# 
  5024  1E14                     	;# 
  5025  1E15                     	;# 
  5026  1E16                     	;# 
  5027  1E17                     	;# 
  5028  1E18                     	;# 
  5029  1E19                     	;# 
  5030  1E1A                     	;# 
  5031  1E1B                     	;# 
  5032  1E1C                     	;# 
  5033  1E1D                     	;# 
  5034  1E1E                     	;# 
  5035  1E1F                     	;# 
  5036  1E20                     	;# 
  5037  1E21                     	;# 
  5038  1E22                     	;# 
  5039  1E23                     	;# 
  5040  1E24                     	;# 
  5041  1E25                     	;# 
  5042  1E26                     	;# 
  5043  1E27                     	;# 
  5044  1E28                     	;# 
  5045  1E29                     	;# 
  5046  1E2A                     	;# 
  5047  1E2B                     	;# 
  5048  1E2C                     	;# 
  5049  1E2D                     	;# 
  5050  1E2E                     	;# 
  5051  1E2F                     	;# 
  5052  1E30                     	;# 
  5053  1E31                     	;# 
  5054  1E32                     	;# 
  5055  1E33                     	;# 
  5056  1E34                     	;# 
  5057  1E35                     	;# 
  5058  1E36                     	;# 
  5059  1E37                     	;# 
  5060  1E8F                     	;# 
  5061  1E90                     	;# 
  5062  1E91                     	;# 
  5063  1E92                     	;# 
  5064  1E93                     	;# 
  5065  1E94                     	;# 
  5066  1E95                     	;# 
  5067  1E96                     	;# 
  5068  1E97                     	;# 
  5069  1E9C                     	;# 
  5070  1E9D                     	;# 
  5071  1E9E                     	;# 
  5072  1EA1                     	;# 
  5073  1EA2                     	;# 
  5074  1EA3                     	;# 
  5075  1EA4                     	;# 
  5076  1EA9                     	;# 
  5077  1EAA                     	;# 
  5078  1EB1                     	;# 
  5079  1EB2                     	;# 
  5080  1EB8                     	;# 
  5081  1EB9                     	;# 
  5082  1EBA                     	;# 
  5083  1EBB                     	;# 
  5084  1EBC                     	;# 
  5085  1EBD                     	;# 
  5086  1EBE                     	;# 
  5087  1EC3                     	;# 
  5088  1EC5                     	;# 
  5089  1EC6                     	;# 
  5090  1EC7                     	;# 
  5091  1EC8                     	;# 
  5092  1EC9                     	;# 
  5093  1ECA                     	;# 
  5094  1ECB                     	;# 
  5095  1ECB                     	;# 
  5096  1ECB                     	;# 
  5097  1ECC                     	;# 
  5098  1ECC                     	;# 
  5099  1ECC                     	;# 
  5100  1F10                     	;# 
  5101  1F11                     	;# 
  5102  1F12                     	;# 
  5103  1F14                     	;# 
  5104  1F15                     	;# 
  5105  1F1C                     	;# 
  5106  1F1D                     	;# 
  5107  1F1E                     	;# 
  5108  1F1F                     	;# 
  5109  1F20                     	;# 
  5110  1F21                     	;# 
  5111  1F22                     	;# 
  5112  1F23                     	;# 
  5113  1F24                     	;# 
  5114  1F25                     	;# 
  5115  1F26                     	;# 
  5116  1F27                     	;# 
  5117  1F38                     	;# 
  5118  1F39                     	;# 
  5119  1F3A                     	;# 
  5120  1F3B                     	;# 
  5121  1F3C                     	;# 
  5122  1F3D                     	;# 
  5123  1F3E                     	;# 
  5124  1F3F                     	;# 
  5125  1F43                     	;# 
  5126  1F44                     	;# 
  5127  1F45                     	;# 
  5128  1F46                     	;# 
  5129  1F47                     	;# 
  5130  1F48                     	;# 
  5131  1F49                     	;# 
  5132  1F4A                     	;# 
  5133  1F4E                     	;# 
  5134  1F4F                     	;# 
  5135  1F50                     	;# 
  5136  1F51                     	;# 
  5137  1F52                     	;# 
  5138  1F53                     	;# 
  5139  1F54                     	;# 
  5140  1F55                     	;# 
  5141  1FE4                     	;# 
  5142  1FE5                     	;# 
  5143  1FE6                     	;# 
  5144  1FE7                     	;# 
  5145  1FE8                     	;# 
  5146  1FE8                     	;# 
  5147  1FE9                     	;# 
  5148  1FEA                     	;# 
  5149  1FEB                     	;# 
  5150  1FED                     	;# 
  5151  1FEE                     	;# 
  5152  1FEF                     	;# 
  5153  0000                     	;# 
  5154  0001                     	;# 
  5155  0002                     	;# 
  5156  0003                     	;# 
  5157  0004                     	;# 
  5158  0005                     	;# 
  5159  0006                     	;# 
  5160  0007                     	;# 
  5161  0008                     	;# 
  5162  0009                     	;# 
  5163  000A                     	;# 
  5164  000B                     	;# 
  5165  000C                     	;# 
  5166  000D                     	;# 
  5167  000E                     	;# 
  5168  0012                     	;# 
  5169  0013                     	;# 
  5170  0014                     	;# 
  5171  0018                     	;# 
  5172  0019                     	;# 
  5173  001A                     	;# 
  5174  008C                     	;# 
  5175  008C                     	;# 
  5176  008D                     	;# 
  5177  008E                     	;# 
  5178  008E                     	;# 
  5179  008F                     	;# 
  5180  0090                     	;# 
  5181  0090                     	;# 
  5182  0091                     	;# 
  5183  0092                     	;# 
  5184  0092                     	;# 
  5185  0093                     	;# 
  5186  0094                     	;# 
  5187  0094                     	;# 
  5188  0095                     	;# 
  5189  0096                     	;# 
  5190  0096                     	;# 
  5191  0097                     	;# 
  5192  0098                     	;# 
  5193  0099                     	;# 
  5194  009A                     	;# 
  5195  009B                     	;# 
  5196  009B                     	;# 
  5197  009C                     	;# 
  5198  009D                     	;# 
  5199  009D                     	;# 
  5200  009E                     	;# 
  5201  009F                     	;# 
  5202  010C                     	;# 
  5203  010C                     	;# 
  5204  010D                     	;# 
  5205  010E                     	;# 
  5206  010F                     	;# 
  5207  010F                     	;# 
  5208  0110                     	;# 
  5209  0111                     	;# 
  5210  0112                     	;# 
  5211  0113                     	;# 
  5212  0114                     	;# 
  5213  0115                     	;# 
  5214  0116                     	;# 
  5215  0117                     	;# 
  5216  0118                     	;# 
  5217  0119                     	;# 
  5218  0119                     	;# 
  5219  0119                     	;# 
  5220  011A                     	;# 
  5221  011A                     	;# 
  5222  011A                     	;# 
  5223  011B                     	;# 
  5224  011B                     	;# 
  5225  011B                     	;# 
  5226  011B                     	;# 
  5227  011B                     	;# 
  5228  011C                     	;# 
  5229  011C                     	;# 
  5230  011C                     	;# 
  5231  011D                     	;# 
  5232  011D                     	;# 
  5233  011D                     	;# 
  5234  011E                     	;# 
  5235  011E                     	;# 
  5236  011E                     	;# 
  5237  011F                     	;# 
  5238  011F                     	;# 
  5239  011F                     	;# 
  5240  011F                     	;# 
  5241  011F                     	;# 
  5242  018C                     	;# 
  5243  018D                     	;# 
  5244  018E                     	;# 
  5245  018F                     	;# 
  5246  0190                     	;# 
  5247  0191                     	;# 
  5248  0192                     	;# 
  5249  0196                     	;# 
  5250  0197                     	;# 
  5251  0198                     	;# 
  5252  0199                     	;# 
  5253  019A                     	;# 
  5254  019B                     	;# 
  5255  019C                     	;# 
  5256  020C                     	;# 
  5257  020D                     	;# 
  5258  020E                     	;# 
  5259  020E                     	;# 
  5260  020F                     	;# 
  5261  020F                     	;# 
  5262  0210                     	;# 
  5263  0210                     	;# 
  5264  0211                     	;# 
  5265  0211                     	;# 
  5266  0212                     	;# 
  5267  0213                     	;# 
  5268  0214                     	;# 
  5269  0214                     	;# 
  5270  0215                     	;# 
  5271  0215                     	;# 
  5272  0216                     	;# 
  5273  0216                     	;# 
  5274  0217                     	;# 
  5275  0217                     	;# 
  5276  0218                     	;# 
  5277  0219                     	;# 
  5278  021A                     	;# 
  5279  021A                     	;# 
  5280  021B                     	;# 
  5281  021B                     	;# 
  5282  021C                     	;# 
  5283  021C                     	;# 
  5284  021D                     	;# 
  5285  021D                     	;# 
  5286  021E                     	;# 
  5287  021F                     	;# 
  5288  028C                     	;# 
  5289  028C                     	;# 
  5290  028D                     	;# 
  5291  028D                     	;# 
  5292  028E                     	;# 
  5293  028F                     	;# 
  5294  0290                     	;# 
  5295  0291                     	;# 
  5296  0292                     	;# 
  5297  0292                     	;# 
  5298  0293                     	;# 
  5299  0293                     	;# 
  5300  0294                     	;# 
  5301  0295                     	;# 
  5302  0296                     	;# 
  5303  0297                     	;# 
  5304  0298                     	;# 
  5305  0298                     	;# 
  5306  0299                     	;# 
  5307  0299                     	;# 
  5308  029A                     	;# 
  5309  029B                     	;# 
  5310  029C                     	;# 
  5311  029D                     	;# 
  5312  029F                     	;# 
  5313  030C                     	;# 
  5314  030C                     	;# 
  5315  030D                     	;# 
  5316  030E                     	;# 
  5317  030F                     	;# 
  5318  0310                     	;# 
  5319  0310                     	;# 
  5320  0311                     	;# 
  5321  0312                     	;# 
  5322  0313                     	;# 
  5323  0314                     	;# 
  5324  0314                     	;# 
  5325  0315                     	;# 
  5326  0316                     	;# 
  5327  0317                     	;# 
  5328  0318                     	;# 
  5329  0318                     	;# 
  5330  0319                     	;# 
  5331  031A                     	;# 
  5332  031B                     	;# 
  5333  038C                     	;# 
  5334  038C                     	;# 
  5335  038D                     	;# 
  5336  038E                     	;# 
  5337  0390                     	;# 
  5338  0390                     	;# 
  5339  0391                     	;# 
  5340  0392                     	;# 
  5341  048C                     	;# 
  5342  048C                     	;# 
  5343  048D                     	;# 
  5344  048E                     	;# 
  5345  048F                     	;# 
  5346  048F                     	;# 
  5347  0490                     	;# 
  5348  0491                     	;# 
  5349  0492                     	;# 
  5350  0492                     	;# 
  5351  0493                     	;# 
  5352  0494                     	;# 
  5353  0495                     	;# 
  5354  0495                     	;# 
  5355  0496                     	;# 
  5356  0497                     	;# 
  5357  0498                     	;# 
  5358  0499                     	;# 
  5359  049A                     	;# 
  5360  049B                     	;# 
  5361  049C                     	;# 
  5362  049D                     	;# 
  5363  058C                     	;# 
  5364  058C                     	;# 
  5365  058D                     	;# 
  5366  058E                     	;# 
  5367  058F                     	;# 
  5368  058F                     	;# 
  5369  0590                     	;# 
  5370  0591                     	;# 
  5371  0592                     	;# 
  5372  0593                     	;# 
  5373  059C                     	;# 
  5374  059C                     	;# 
  5375  059D                     	;# 
  5376  059D                     	;# 
  5377  059E                     	;# 
  5378  059F                     	;# 
  5379  060C                     	;# 
  5380  060C                     	;# 
  5381  060D                     	;# 
  5382  060D                     	;# 
  5383  060E                     	;# 
  5384  060F                     	;# 
  5385  0610                     	;# 
  5386  0611                     	;# 
  5387  0612                     	;# 
  5388  0613                     	;# 
  5389  0614                     	;# 
  5390  0616                     	;# 
  5391  0616                     	;# 
  5392  0617                     	;# 
  5393  0617                     	;# 
  5394  0618                     	;# 
  5395  0619                     	;# 
  5396  061A                     	;# 
  5397  061B                     	;# 
  5398  061C                     	;# 
  5399  061D                     	;# 
  5400  061E                     	;# 
  5401  070C                     	;# 
  5402  070D                     	;# 
  5403  070E                     	;# 
  5404  070F                     	;# 
  5405  0710                     	;# 
  5406  0711                     	;# 
  5407  0712                     	;# 
  5408  0713                     	;# 
  5409  0714                     	;# 
  5410  0716                     	;# 
  5411  0717                     	;# 
  5412  0718                     	;# 
  5413  0719                     	;# 
  5414  071A                     	;# 
  5415  071B                     	;# 
  5416  071C                     	;# 
  5417  071D                     	;# 
  5418  071E                     	;# 
  5419  0796                     	;# 
  5420  0797                     	;# 
  5421  0798                     	;# 
  5422  0799                     	;# 
  5423  079A                     	;# 
  5424  079B                     	;# 
  5425  079C                     	;# 
  5426  079D                     	;# 
  5427  080C                     	;# 
  5428  080D                     	;# 
  5429  080E                     	;# 
  5430  080F                     	;# 
  5431  0810                     	;# 
  5432  0811                     	;# 
  5433  0812                     	;# 
  5434  0813                     	;# 
  5435  0814                     	;# 
  5436  081A                     	;# 
  5437  081A                     	;# 
  5438  081B                     	;# 
  5439  081C                     	;# 
  5440  081C                     	;# 
  5441  081D                     	;# 
  5442  081E                     	;# 
  5443  081F                     	;# 
  5444  088C                     	;# 
  5445  088D                     	;# 
  5446  088E                     	;# 
  5447  088F                     	;# 
  5448  0890                     	;# 
  5449  0891                     	;# 
  5450  0892                     	;# 
  5451  0893                     	;# 
  5452  0895                     	;# 
  5453  0896                     	;# 
  5454  0897                     	;# 
  5455  0898                     	;# 
  5456  0899                     	;# 
  5457  089A                     	;# 
  5458  089B                     	;# 
  5459  090C                     	;# 
  5460  090E                     	;# 
  5461  090F                     	;# 
  5462  091F                     	;# 
  5463  098F                     	;# 
  5464  098F                     	;# 
  5465  0990                     	;# 
  5466  0991                     	;# 
  5467  0992                     	;# 
  5468  0993                     	;# 
  5469  0994                     	;# 
  5470  0995                     	;# 
  5471  0996                     	;# 
  5472  0997                     	;# 
  5473  1E0F                     	;# 
  5474  1E10                     	;# 
  5475  1E11                     	;# 
  5476  1E12                     	;# 
  5477  1E13                     	;# 
  5478  1E14                     	;# 
  5479  1E15                     	;# 
  5480  1E16                     	;# 
  5481  1E17                     	;# 
  5482  1E18                     	;# 
  5483  1E19                     	;# 
  5484  1E1A                     	;# 
  5485  1E1B                     	;# 
  5486  1E1C                     	;# 
  5487  1E1D                     	;# 
  5488  1E1E                     	;# 
  5489  1E1F                     	;# 
  5490  1E20                     	;# 
  5491  1E21                     	;# 
  5492  1E22                     	;# 
  5493  1E23                     	;# 
  5494  1E24                     	;# 
  5495  1E25                     	;# 
  5496  1E26                     	;# 
  5497  1E27                     	;# 
  5498  1E28                     	;# 
  5499  1E29                     	;# 
  5500  1E2A                     	;# 
  5501  1E2B                     	;# 
  5502  1E2C                     	;# 
  5503  1E2D                     	;# 
  5504  1E2E                     	;# 
  5505  1E2F                     	;# 
  5506  1E30                     	;# 
  5507  1E31                     	;# 
  5508  1E32                     	;# 
  5509  1E33                     	;# 
  5510  1E34                     	;# 
  5511  1E35                     	;# 
  5512  1E36                     	;# 
  5513  1E37                     	;# 
  5514  1E8F                     	;# 
  5515  1E90                     	;# 
  5516  1E91                     	;# 
  5517  1E92                     	;# 
  5518  1E93                     	;# 
  5519  1E94                     	;# 
  5520  1E95                     	;# 
  5521  1E96                     	;# 
  5522  1E97                     	;# 
  5523  1E9C                     	;# 
  5524  1E9D                     	;# 
  5525  1E9E                     	;# 
  5526  1EA1                     	;# 
  5527  1EA2                     	;# 
  5528  1EA3                     	;# 
  5529  1EA4                     	;# 
  5530  1EA9                     	;# 
  5531  1EAA                     	;# 
  5532  1EB1                     	;# 
  5533  1EB2                     	;# 
  5534  1EB8                     	;# 
  5535  1EB9                     	;# 
  5536  1EBA                     	;# 
  5537  1EBB                     	;# 
  5538  1EBC                     	;# 
  5539  1EBD                     	;# 
  5540  1EBE                     	;# 
  5541  1EC3                     	;# 
  5542  1EC5                     	;# 
  5543  1EC6                     	;# 
  5544  1EC7                     	;# 
  5545  1EC8                     	;# 
  5546  1EC9                     	;# 
  5547  1ECA                     	;# 
  5548  1ECB                     	;# 
  5549  1ECB                     	;# 
  5550  1ECB                     	;# 
  5551  1ECC                     	;# 
  5552  1ECC                     	;# 
  5553  1ECC                     	;# 
  5554  1F10                     	;# 
  5555  1F11                     	;# 
  5556  1F12                     	;# 
  5557  1F14                     	;# 
  5558  1F15                     	;# 
  5559  1F1C                     	;# 
  5560  1F1D                     	;# 
  5561  1F1E                     	;# 
  5562  1F1F                     	;# 
  5563  1F20                     	;# 
  5564  1F21                     	;# 
  5565  1F22                     	;# 
  5566  1F23                     	;# 
  5567  1F24                     	;# 
  5568  1F25                     	;# 
  5569  1F26                     	;# 
  5570  1F27                     	;# 
  5571  1F38                     	;# 
  5572  1F39                     	;# 
  5573  1F3A                     	;# 
  5574  1F3B                     	;# 
  5575  1F3C                     	;# 
  5576  1F3D                     	;# 
  5577  1F3E                     	;# 
  5578  1F3F                     	;# 
  5579  1F43                     	;# 
  5580  1F44                     	;# 
  5581  1F45                     	;# 
  5582  1F46                     	;# 
  5583  1F47                     	;# 
  5584  1F48                     	;# 
  5585  1F49                     	;# 
  5586  1F4A                     	;# 
  5587  1F4E                     	;# 
  5588  1F4F                     	;# 
  5589  1F50                     	;# 
  5590  1F51                     	;# 
  5591  1F52                     	;# 
  5592  1F53                     	;# 
  5593  1F54                     	;# 
  5594  1F55                     	;# 
  5595  1FE4                     	;# 
  5596  1FE5                     	;# 
  5597  1FE6                     	;# 
  5598  1FE7                     	;# 
  5599  1FE8                     	;# 
  5600  1FE8                     	;# 
  5601  1FE9                     	;# 
  5602  1FEA                     	;# 
  5603  1FEB                     	;# 
  5604  1FED                     	;# 
  5605  1FEE                     	;# 
  5606  1FEF                     	;# 
  5607  0000                     	;# 
  5608  0001                     	;# 
  5609  0002                     	;# 
  5610  0003                     	;# 
  5611  0004                     	;# 
  5612  0005                     	;# 
  5613  0006                     	;# 
  5614  0007                     	;# 
  5615  0008                     	;# 
  5616  0009                     	;# 
  5617  000A                     	;# 
  5618  000B                     	;# 
  5619  000C                     	;# 
  5620  000D                     	;# 
  5621  000E                     	;# 
  5622  0012                     	;# 
  5623  0013                     	;# 
  5624  0014                     	;# 
  5625  0018                     	;# 
  5626  0019                     	;# 
  5627  001A                     	;# 
  5628  008C                     	;# 
  5629  008C                     	;# 
  5630  008D                     	;# 
  5631  008E                     	;# 
  5632  008E                     	;# 
  5633  008F                     	;# 
  5634  0090                     	;# 
  5635  0090                     	;# 
  5636  0091                     	;# 
  5637  0092                     	;# 
  5638  0092                     	;# 
  5639  0093                     	;# 
  5640  0094                     	;# 
  5641  0094                     	;# 
  5642  0095                     	;# 
  5643  0096                     	;# 
  5644  0096                     	;# 
  5645  0097                     	;# 
  5646  0098                     	;# 
  5647  0099                     	;# 
  5648  009A                     	;# 
  5649  009B                     	;# 
  5650  009B                     	;# 
  5651  009C                     	;# 
  5652  009D                     	;# 
  5653  009D                     	;# 
  5654  009E                     	;# 
  5655  009F                     	;# 
  5656  010C                     	;# 
  5657  010C                     	;# 
  5658  010D                     	;# 
  5659  010E                     	;# 
  5660  010F                     	;# 
  5661  010F                     	;# 
  5662  0110                     	;# 
  5663  0111                     	;# 
  5664  0112                     	;# 
  5665  0113                     	;# 
  5666  0114                     	;# 
  5667  0115                     	;# 
  5668  0116                     	;# 
  5669  0117                     	;# 
  5670  0118                     	;# 
  5671  0119                     	;# 
  5672  0119                     	;# 
  5673  0119                     	;# 
  5674  011A                     	;# 
  5675  011A                     	;# 
  5676  011A                     	;# 
  5677  011B                     	;# 
  5678  011B                     	;# 
  5679  011B                     	;# 
  5680  011B                     	;# 
  5681  011B                     	;# 
  5682  011C                     	;# 
  5683  011C                     	;# 
  5684  011C                     	;# 
  5685  011D                     	;# 
  5686  011D                     	;# 
  5687  011D                     	;# 
  5688  011E                     	;# 
  5689  011E                     	;# 
  5690  011E                     	;# 
  5691  011F                     	;# 
  5692  011F                     	;# 
  5693  011F                     	;# 
  5694  011F                     	;# 
  5695  011F                     	;# 
  5696  018C                     	;# 
  5697  018D                     	;# 
  5698  018E                     	;# 
  5699  018F                     	;# 
  5700  0190                     	;# 
  5701  0191                     	;# 
  5702  0192                     	;# 
  5703  0196                     	;# 
  5704  0197                     	;# 
  5705  0198                     	;# 
  5706  0199                     	;# 
  5707  019A                     	;# 
  5708  019B                     	;# 
  5709  019C                     	;# 
  5710  020C                     	;# 
  5711  020D                     	;# 
  5712  020E                     	;# 
  5713  020E                     	;# 
  5714  020F                     	;# 
  5715  020F                     	;# 
  5716  0210                     	;# 
  5717  0210                     	;# 
  5718  0211                     	;# 
  5719  0211                     	;# 
  5720  0212                     	;# 
  5721  0213                     	;# 
  5722  0214                     	;# 
  5723  0214                     	;# 
  5724  0215                     	;# 
  5725  0215                     	;# 
  5726  0216                     	;# 
  5727  0216                     	;# 
  5728  0217                     	;# 
  5729  0217                     	;# 
  5730  0218                     	;# 
  5731  0219                     	;# 
  5732  021A                     	;# 
  5733  021A                     	;# 
  5734  021B                     	;# 
  5735  021B                     	;# 
  5736  021C                     	;# 
  5737  021C                     	;# 
  5738  021D                     	;# 
  5739  021D                     	;# 
  5740  021E                     	;# 
  5741  021F                     	;# 
  5742  028C                     	;# 
  5743  028C                     	;# 
  5744  028D                     	;# 
  5745  028D                     	;# 
  5746  028E                     	;# 
  5747  028F                     	;# 
  5748  0290                     	;# 
  5749  0291                     	;# 
  5750  0292                     	;# 
  5751  0292                     	;# 
  5752  0293                     	;# 
  5753  0293                     	;# 
  5754  0294                     	;# 
  5755  0295                     	;# 
  5756  0296                     	;# 
  5757  0297                     	;# 
  5758  0298                     	;# 
  5759  0298                     	;# 
  5760  0299                     	;# 
  5761  0299                     	;# 
  5762  029A                     	;# 
  5763  029B                     	;# 
  5764  029C                     	;# 
  5765  029D                     	;# 
  5766  029F                     	;# 
  5767  030C                     	;# 
  5768  030C                     	;# 
  5769  030D                     	;# 
  5770  030E                     	;# 
  5771  030F                     	;# 
  5772  0310                     	;# 
  5773  0310                     	;# 
  5774  0311                     	;# 
  5775  0312                     	;# 
  5776  0313                     	;# 
  5777  0314                     	;# 
  5778  0314                     	;# 
  5779  0315                     	;# 
  5780  0316                     	;# 
  5781  0317                     	;# 
  5782  0318                     	;# 
  5783  0318                     	;# 
  5784  0319                     	;# 
  5785  031A                     	;# 
  5786  031B                     	;# 
  5787  038C                     	;# 
  5788  038C                     	;# 
  5789  038D                     	;# 
  5790  038E                     	;# 
  5791  0390                     	;# 
  5792  0390                     	;# 
  5793  0391                     	;# 
  5794  0392                     	;# 
  5795  048C                     	;# 
  5796  048C                     	;# 
  5797  048D                     	;# 
  5798  048E                     	;# 
  5799  048F                     	;# 
  5800  048F                     	;# 
  5801  0490                     	;# 
  5802  0491                     	;# 
  5803  0492                     	;# 
  5804  0492                     	;# 
  5805  0493                     	;# 
  5806  0494                     	;# 
  5807  0495                     	;# 
  5808  0495                     	;# 
  5809  0496                     	;# 
  5810  0497                     	;# 
  5811  0498                     	;# 
  5812  0499                     	;# 
  5813  049A                     	;# 
  5814  049B                     	;# 
  5815  049C                     	;# 
  5816  049D                     	;# 
  5817  058C                     	;# 
  5818  058C                     	;# 
  5819  058D                     	;# 
  5820  058E                     	;# 
  5821  058F                     	;# 
  5822  058F                     	;# 
  5823  0590                     	;# 
  5824  0591                     	;# 
  5825  0592                     	;# 
  5826  0593                     	;# 
  5827  059C                     	;# 
  5828  059C                     	;# 
  5829  059D                     	;# 
  5830  059D                     	;# 
  5831  059E                     	;# 
  5832  059F                     	;# 
  5833  060C                     	;# 
  5834  060C                     	;# 
  5835  060D                     	;# 
  5836  060D                     	;# 
  5837  060E                     	;# 
  5838  060F                     	;# 
  5839  0610                     	;# 
  5840  0611                     	;# 
  5841  0612                     	;# 
  5842  0613                     	;# 
  5843  0614                     	;# 
  5844  0616                     	;# 
  5845  0616                     	;# 
  5846  0617                     	;# 
  5847  0617                     	;# 
  5848  0618                     	;# 
  5849  0619                     	;# 
  5850  061A                     	;# 
  5851  061B                     	;# 
  5852  061C                     	;# 
  5853  061D                     	;# 
  5854  061E                     	;# 
  5855  070C                     	;# 
  5856  070D                     	;# 
  5857  070E                     	;# 
  5858  070F                     	;# 
  5859  0710                     	;# 
  5860  0711                     	;# 
  5861  0712                     	;# 
  5862  0713                     	;# 
  5863  0714                     	;# 
  5864  0716                     	;# 
  5865  0717                     	;# 
  5866  0718                     	;# 
  5867  0719                     	;# 
  5868  071A                     	;# 
  5869  071B                     	;# 
  5870  071C                     	;# 
  5871  071D                     	;# 
  5872  071E                     	;# 
  5873  0796                     	;# 
  5874  0797                     	;# 
  5875  0798                     	;# 
  5876  0799                     	;# 
  5877  079A                     	;# 
  5878  079B                     	;# 
  5879  079C                     	;# 
  5880  079D                     	;# 
  5881  080C                     	;# 
  5882  080D                     	;# 
  5883  080E                     	;# 
  5884  080F                     	;# 
  5885  0810                     	;# 
  5886  0811                     	;# 
  5887  0812                     	;# 
  5888  0813                     	;# 
  5889  0814                     	;# 
  5890  081A                     	;# 
  5891  081A                     	;# 
  5892  081B                     	;# 
  5893  081C                     	;# 
  5894  081C                     	;# 
  5895  081D                     	;# 
  5896  081E                     	;# 
  5897  081F                     	;# 
  5898  088C                     	;# 
  5899  088D                     	;# 
  5900  088E                     	;# 
  5901  088F                     	;# 
  5902  0890                     	;# 
  5903  0891                     	;# 
  5904  0892                     	;# 
  5905  0893                     	;# 
  5906  0895                     	;# 
  5907  0896                     	;# 
  5908  0897                     	;# 
  5909  0898                     	;# 
  5910  0899                     	;# 
  5911  089A                     	;# 
  5912  089B                     	;# 
  5913  090C                     	;# 
  5914  090E                     	;# 
  5915  090F                     	;# 
  5916  091F                     	;# 
  5917  098F                     	;# 
  5918  098F                     	;# 
  5919  0990                     	;# 
  5920  0991                     	;# 
  5921  0992                     	;# 
  5922  0993                     	;# 
  5923  0994                     	;# 
  5924  0995                     	;# 
  5925  0996                     	;# 
  5926  0997                     	;# 
  5927  1E0F                     	;# 
  5928  1E10                     	;# 
  5929  1E11                     	;# 
  5930  1E12                     	;# 
  5931  1E13                     	;# 
  5932  1E14                     	;# 
  5933  1E15                     	;# 
  5934  1E16                     	;# 
  5935  1E17                     	;# 
  5936  1E18                     	;# 
  5937  1E19                     	;# 
  5938  1E1A                     	;# 
  5939  1E1B                     	;# 
  5940  1E1C                     	;# 
  5941  1E1D                     	;# 
  5942  1E1E                     	;# 
  5943  1E1F                     	;# 
  5944  1E20                     	;# 
  5945  1E21                     	;# 
  5946  1E22                     	;# 
  5947  1E23                     	;# 
  5948  1E24                     	;# 
  5949  1E25                     	;# 
  5950  1E26                     	;# 
  5951  1E27                     	;# 
  5952  1E28                     	;# 
  5953  1E29                     	;# 
  5954  1E2A                     	;# 
  5955  1E2B                     	;# 
  5956  1E2C                     	;# 
  5957  1E2D                     	;# 
  5958  1E2E                     	;# 
  5959  1E2F                     	;# 
  5960  1E30                     	;# 
  5961  1E31                     	;# 
  5962  1E32                     	;# 
  5963  1E33                     	;# 
  5964  1E34                     	;# 
  5965  1E35                     	;# 
  5966  1E36                     	;# 
  5967  1E37                     	;# 
  5968  1E8F                     	;# 
  5969  1E90                     	;# 
  5970  1E91                     	;# 
  5971  1E92                     	;# 
  5972  1E93                     	;# 
  5973  1E94                     	;# 
  5974  1E95                     	;# 
  5975  1E96                     	;# 
  5976  1E97                     	;# 
  5977  1E9C                     	;# 
  5978  1E9D                     	;# 
  5979  1E9E                     	;# 
  5980  1EA1                     	;# 
  5981  1EA2                     	;# 
  5982  1EA3                     	;# 
  5983  1EA4                     	;# 
  5984  1EA9                     	;# 
  5985  1EAA                     	;# 
  5986  1EB1                     	;# 
  5987  1EB2                     	;# 
  5988  1EB8                     	;# 
  5989  1EB9                     	;# 
  5990  1EBA                     	;# 
  5991  1EBB                     	;# 
  5992  1EBC                     	;# 
  5993  1EBD                     	;# 
  5994  1EBE                     	;# 
  5995  1EC3                     	;# 
  5996  1EC5                     	;# 
  5997  1EC6                     	;# 
  5998  1EC7                     	;# 
  5999  1EC8                     	;# 
  6000  1EC9                     	;# 
  6001  1ECA                     	;# 
  6002  1ECB                     	;# 
  6003  1ECB                     	;# 
  6004  1ECB                     	;# 
  6005  1ECC                     	;# 
  6006  1ECC                     	;# 
  6007  1ECC                     	;# 
  6008  1F10                     	;# 
  6009  1F11                     	;# 
  6010  1F12                     	;# 
  6011  1F14                     	;# 
  6012  1F15                     	;# 
  6013  1F1C                     	;# 
  6014  1F1D                     	;# 
  6015  1F1E                     	;# 
  6016  1F1F                     	;# 
  6017  1F20                     	;# 
  6018  1F21                     	;# 
  6019  1F22                     	;# 
  6020  1F23                     	;# 
  6021  1F24                     	;# 
  6022  1F25                     	;# 
  6023  1F26                     	;# 
  6024  1F27                     	;# 
  6025  1F38                     	;# 
  6026  1F39                     	;# 
  6027  1F3A                     	;# 
  6028  1F3B                     	;# 
  6029  1F3C                     	;# 
  6030  1F3D                     	;# 
  6031  1F3E                     	;# 
  6032  1F3F                     	;# 
  6033  1F43                     	;# 
  6034  1F44                     	;# 
  6035  1F45                     	;# 
  6036  1F46                     	;# 
  6037  1F47                     	;# 
  6038  1F48                     	;# 
  6039  1F49                     	;# 
  6040  1F4A                     	;# 
  6041  1F4E                     	;# 
  6042  1F4F                     	;# 
  6043  1F50                     	;# 
  6044  1F51                     	;# 
  6045  1F52                     	;# 
  6046  1F53                     	;# 
  6047  1F54                     	;# 
  6048  1F55                     	;# 
  6049  1FE4                     	;# 
  6050  1FE5                     	;# 
  6051  1FE6                     	;# 
  6052  1FE7                     	;# 
  6053  1FE8                     	;# 
  6054  1FE8                     	;# 
  6055  1FE9                     	;# 
  6056  1FEA                     	;# 
  6057  1FEB                     	;# 
  6058  1FED                     	;# 
  6059  1FEE                     	;# 
  6060  1FEF                     	;# 
  6061  0000                     	;# 
  6062  0001                     	;# 
  6063  0002                     	;# 
  6064  0003                     	;# 
  6065  0004                     	;# 
  6066  0005                     	;# 
  6067  0006                     	;# 
  6068  0007                     	;# 
  6069  0008                     	;# 
  6070  0009                     	;# 
  6071  000A                     	;# 
  6072  000B                     	;# 
  6073  000C                     	;# 
  6074  000D                     	;# 
  6075  000E                     	;# 
  6076  0012                     	;# 
  6077  0013                     	;# 
  6078  0014                     	;# 
  6079  0018                     	;# 
  6080  0019                     	;# 
  6081  001A                     	;# 
  6082  008C                     	;# 
  6083  008C                     	;# 
  6084  008D                     	;# 
  6085  008E                     	;# 
  6086  008E                     	;# 
  6087  008F                     	;# 
  6088  0090                     	;# 
  6089  0090                     	;# 
  6090  0091                     	;# 
  6091  0092                     	;# 
  6092  0092                     	;# 
  6093  0093                     	;# 
  6094  0094                     	;# 
  6095  0094                     	;# 
  6096  0095                     	;# 
  6097  0096                     	;# 
  6098  0096                     	;# 
  6099  0097                     	;# 
  6100  0098                     	;# 
  6101  0099                     	;# 
  6102  009A                     	;# 
  6103  009B                     	;# 
  6104  009B                     	;# 
  6105  009C                     	;# 
  6106  009D                     	;# 
  6107  009D                     	;# 
  6108  009E                     	;# 
  6109  009F                     	;# 
  6110  010C                     	;# 
  6111  010C                     	;# 
  6112  010D                     	;# 
  6113  010E                     	;# 
  6114  010F                     	;# 
  6115  010F                     	;# 
  6116  0110                     	;# 
  6117  0111                     	;# 
  6118  0112                     	;# 
  6119  0113                     	;# 
  6120  0114                     	;# 
  6121  0115                     	;# 
  6122  0116                     	;# 
  6123  0117                     	;# 
  6124  0118                     	;# 
  6125  0119                     	;# 
  6126  0119                     	;# 
  6127  0119                     	;# 
  6128  011A                     	;# 
  6129  011A                     	;# 
  6130  011A                     	;# 
  6131  011B                     	;# 
  6132  011B                     	;# 
  6133  011B                     	;# 
  6134  011B                     	;# 
  6135  011B                     	;# 
  6136  011C                     	;# 
  6137  011C                     	;# 
  6138  011C                     	;# 
  6139  011D                     	;# 
  6140  011D                     	;# 
  6141  011D                     	;# 
  6142  011E                     	;# 
  6143  011E                     	;# 
  6144  011E                     	;# 
  6145  011F                     	;# 
  6146  011F                     	;# 
  6147  011F                     	;# 
  6148  011F                     	;# 
  6149  011F                     	;# 
  6150  018C                     	;# 
  6151  018D                     	;# 
  6152  018E                     	;# 
  6153  018F                     	;# 
  6154  0190                     	;# 
  6155  0191                     	;# 
  6156  0192                     	;# 
  6157  0196                     	;# 
  6158  0197                     	;# 
  6159  0198                     	;# 
  6160  0199                     	;# 
  6161  019A                     	;# 
  6162  019B                     	;# 
  6163  019C                     	;# 
  6164  020C                     	;# 
  6165  020D                     	;# 
  6166  020E                     	;# 
  6167  020E                     	;# 
  6168  020F                     	;# 
  6169  020F                     	;# 
  6170  0210                     	;# 
  6171  0210                     	;# 
  6172  0211                     	;# 
  6173  0211                     	;# 
  6174  0212                     	;# 
  6175  0213                     	;# 
  6176  0214                     	;# 
  6177  0214                     	;# 
  6178  0215                     	;# 
  6179  0215                     	;# 
  6180  0216                     	;# 
  6181  0216                     	;# 
  6182  0217                     	;# 
  6183  0217                     	;# 
  6184  0218                     	;# 
  6185  0219                     	;# 
  6186  021A                     	;# 
  6187  021A                     	;# 
  6188  021B                     	;# 
  6189  021B                     	;# 
  6190  021C                     	;# 
  6191  021C                     	;# 
  6192  021D                     	;# 
  6193  021D                     	;# 
  6194  021E                     	;# 
  6195  021F                     	;# 
  6196  028C                     	;# 
  6197  028C                     	;# 
  6198  028D                     	;# 
  6199  028D                     	;# 
  6200  028E                     	;# 
  6201  028F                     	;# 
  6202  0290                     	;# 
  6203  0291                     	;# 
  6204  0292                     	;# 
  6205  0292                     	;# 
  6206  0293                     	;# 
  6207  0293                     	;# 
  6208  0294                     	;# 
  6209  0295                     	;# 
  6210  0296                     	;# 
  6211  0297                     	;# 
  6212  0298                     	;# 
  6213  0298                     	;# 
  6214  0299                     	;# 
  6215  0299                     	;# 
  6216  029A                     	;# 
  6217  029B                     	;# 
  6218  029C                     	;# 
  6219  029D                     	;# 
  6220  029F                     	;# 
  6221  030C                     	;# 
  6222  030C                     	;# 
  6223  030D                     	;# 
  6224  030E                     	;# 
  6225  030F                     	;# 
  6226  0310                     	;# 
  6227  0310                     	;# 
  6228  0311                     	;# 
  6229  0312                     	;# 
  6230  0313                     	;# 
  6231  0314                     	;# 
  6232  0314                     	;# 
  6233  0315                     	;# 
  6234  0316                     	;# 
  6235  0317                     	;# 
  6236  0318                     	;# 
  6237  0318                     	;# 
  6238  0319                     	;# 
  6239  031A                     	;# 
  6240  031B                     	;# 
  6241  038C                     	;# 
  6242  038C                     	;# 
  6243  038D                     	;# 
  6244  038E                     	;# 
  6245  0390                     	;# 
  6246  0390                     	;# 
  6247  0391                     	;# 
  6248  0392                     	;# 
  6249  048C                     	;# 
  6250  048C                     	;# 
  6251  048D                     	;# 
  6252  048E                     	;# 
  6253  048F                     	;# 
  6254  048F                     	;# 
  6255  0490                     	;# 
  6256  0491                     	;# 
  6257  0492                     	;# 
  6258  0492                     	;# 
  6259  0493                     	;# 
  6260  0494                     	;# 
  6261  0495                     	;# 
  6262  0495                     	;# 
  6263  0496                     	;# 
  6264  0497                     	;# 
  6265  0498                     	;# 
  6266  0499                     	;# 
  6267  049A                     	;# 
  6268  049B                     	;# 
  6269  049C                     	;# 
  6270  049D                     	;# 
  6271  058C                     	;# 
  6272  058C                     	;# 
  6273  058D                     	;# 
  6274  058E                     	;# 
  6275  058F                     	;# 
  6276  058F                     	;# 
  6277  0590                     	;# 
  6278  0591                     	;# 
  6279  0592                     	;# 
  6280  0593                     	;# 
  6281  059C                     	;# 
  6282  059C                     	;# 
  6283  059D                     	;# 
  6284  059D                     	;# 
  6285  059E                     	;# 
  6286  059F                     	;# 
  6287  060C                     	;# 
  6288  060C                     	;# 
  6289  060D                     	;# 
  6290  060D                     	;# 
  6291  060E                     	;# 
  6292  060F                     	;# 
  6293  0610                     	;# 
  6294  0611                     	;# 
  6295  0612                     	;# 
  6296  0613                     	;# 
  6297  0614                     	;# 
  6298  0616                     	;# 
  6299  0616                     	;# 
  6300  0617                     	;# 
  6301  0617                     	;# 
  6302  0618                     	;# 
  6303  0619                     	;# 
  6304  061A                     	;# 
  6305  061B                     	;# 
  6306  061C                     	;# 
  6307  061D                     	;# 
  6308  061E                     	;# 
  6309  070C                     	;# 
  6310  070D                     	;# 
  6311  070E                     	;# 
  6312  070F                     	;# 
  6313  0710                     	;# 
  6314  0711                     	;# 
  6315  0712                     	;# 
  6316  0713                     	;# 
  6317  0714                     	;# 
  6318  0716                     	;# 
  6319  0717                     	;# 
  6320  0718                     	;# 
  6321  0719                     	;# 
  6322  071A                     	;# 
  6323  071B                     	;# 
  6324  071C                     	;# 
  6325  071D                     	;# 
  6326  071E                     	;# 
  6327  0796                     	;# 
  6328  0797                     	;# 
  6329  0798                     	;# 
  6330  0799                     	;# 
  6331  079A                     	;# 
  6332  079B                     	;# 
  6333  079C                     	;# 
  6334  079D                     	;# 
  6335  080C                     	;# 
  6336  080D                     	;# 
  6337  080E                     	;# 
  6338  080F                     	;# 
  6339  0810                     	;# 
  6340  0811                     	;# 
  6341  0812                     	;# 
  6342  0813                     	;# 
  6343  0814                     	;# 
  6344  081A                     	;# 
  6345  081A                     	;# 
  6346  081B                     	;# 
  6347  081C                     	;# 
  6348  081C                     	;# 
  6349  081D                     	;# 
  6350  081E                     	;# 
  6351  081F                     	;# 
  6352  088C                     	;# 
  6353  088D                     	;# 
  6354  088E                     	;# 
  6355  088F                     	;# 
  6356  0890                     	;# 
  6357  0891                     	;# 
  6358  0892                     	;# 
  6359  0893                     	;# 
  6360  0895                     	;# 
  6361  0896                     	;# 
  6362  0897                     	;# 
  6363  0898                     	;# 
  6364  0899                     	;# 
  6365  089A                     	;# 
  6366  089B                     	;# 
  6367  090C                     	;# 
  6368  090E                     	;# 
  6369  090F                     	;# 
  6370  091F                     	;# 
  6371  098F                     	;# 
  6372  098F                     	;# 
  6373  0990                     	;# 
  6374  0991                     	;# 
  6375  0992                     	;# 
  6376  0993                     	;# 
  6377  0994                     	;# 
  6378  0995                     	;# 
  6379  0996                     	;# 
  6380  0997                     	;# 
  6381  1E0F                     	;# 
  6382  1E10                     	;# 
  6383  1E11                     	;# 
  6384  1E12                     	;# 
  6385  1E13                     	;# 
  6386  1E14                     	;# 
  6387  1E15                     	;# 
  6388  1E16                     	;# 
  6389  1E17                     	;# 
  6390  1E18                     	;# 
  6391  1E19                     	;# 
  6392  1E1A                     	;# 
  6393  1E1B                     	;# 
  6394  1E1C                     	;# 
  6395  1E1D                     	;# 
  6396  1E1E                     	;# 
  6397  1E1F                     	;# 
  6398  1E20                     	;# 
  6399  1E21                     	;# 
  6400  1E22                     	;# 
  6401  1E23                     	;# 
  6402  1E24                     	;# 
  6403  1E25                     	;# 
  6404  1E26                     	;# 
  6405  1E27                     	;# 
  6406  1E28                     	;# 
  6407  1E29                     	;# 
  6408  1E2A                     	;# 
  6409  1E2B                     	;# 
  6410  1E2C                     	;# 
  6411  1E2D                     	;# 
  6412  1E2E                     	;# 
  6413  1E2F                     	;# 
  6414  1E30                     	;# 
  6415  1E31                     	;# 
  6416  1E32                     	;# 
  6417  1E33                     	;# 
  6418  1E34                     	;# 
  6419  1E35                     	;# 
  6420  1E36                     	;# 
  6421  1E37                     	;# 
  6422  1E8F                     	;# 
  6423  1E90                     	;# 
  6424  1E91                     	;# 
  6425  1E92                     	;# 
  6426  1E93                     	;# 
  6427  1E94                     	;# 
  6428  1E95                     	;# 
  6429  1E96                     	;# 
  6430  1E97                     	;# 
  6431  1E9C                     	;# 
  6432  1E9D                     	;# 
  6433  1E9E                     	;# 
  6434  1EA1                     	;# 
  6435  1EA2                     	;# 
  6436  1EA3                     	;# 
  6437  1EA4                     	;# 
  6438  1EA9                     	;# 
  6439  1EAA                     	;# 
  6440  1EB1                     	;# 
  6441  1EB2                     	;# 
  6442  1EB8                     	;# 
  6443  1EB9                     	;# 
  6444  1EBA                     	;# 
  6445  1EBB                     	;# 
  6446  1EBC                     	;# 
  6447  1EBD                     	;# 
  6448  1EBE                     	;# 
  6449  1EC3                     	;# 
  6450  1EC5                     	;# 
  6451  1EC6                     	;# 
  6452  1EC7                     	;# 
  6453  1EC8                     	;# 
  6454  1EC9                     	;# 
  6455  1ECA                     	;# 
  6456  1ECB                     	;# 
  6457  1ECB                     	;# 
  6458  1ECB                     	;# 
  6459  1ECC                     	;# 
  6460  1ECC                     	;# 
  6461  1ECC                     	;# 
  6462  1F10                     	;# 
  6463  1F11                     	;# 
  6464  1F12                     	;# 
  6465  1F14                     	;# 
  6466  1F15                     	;# 
  6467  1F1C                     	;# 
  6468  1F1D                     	;# 
  6469  1F1E                     	;# 
  6470  1F1F                     	;# 
  6471  1F20                     	;# 
  6472  1F21                     	;# 
  6473  1F22                     	;# 
  6474  1F23                     	;# 
  6475  1F24                     	;# 
  6476  1F25                     	;# 
  6477  1F26                     	;# 
  6478  1F27                     	;# 
  6479  1F38                     	;# 
  6480  1F39                     	;# 
  6481  1F3A                     	;# 
  6482  1F3B                     	;# 
  6483  1F3C                     	;# 
  6484  1F3D                     	;# 
  6485  1F3E                     	;# 
  6486  1F3F                     	;# 
  6487  1F43                     	;# 
  6488  1F44                     	;# 
  6489  1F45                     	;# 
  6490  1F46                     	;# 
  6491  1F47                     	;# 
  6492  1F48                     	;# 
  6493  1F49                     	;# 
  6494  1F4A                     	;# 
  6495  1F4E                     	;# 
  6496  1F4F                     	;# 
  6497  1F50                     	;# 
  6498  1F51                     	;# 
  6499  1F52                     	;# 
  6500  1F53                     	;# 
  6501  1F54                     	;# 
  6502  1F55                     	;# 
  6503  1FE4                     	;# 
  6504  1FE5                     	;# 
  6505  1FE6                     	;# 
  6506  1FE7                     	;# 
  6507  1FE8                     	;# 
  6508  1FE8                     	;# 
  6509  1FE9                     	;# 
  6510  1FEA                     	;# 
  6511  1FEB                     	;# 
  6512  1FED                     	;# 
  6513  1FEE                     	;# 
  6514  1FEF                     	;# 
  6515  0000                     	;# 
  6516  0001                     	;# 
  6517  0002                     	;# 
  6518  0003                     	;# 
  6519  0004                     	;# 
  6520  0005                     	;# 
  6521  0006                     	;# 
  6522  0007                     	;# 
  6523  0008                     	;# 
  6524  0009                     	;# 
  6525  000A                     	;# 
  6526  000B                     	;# 
  6527  000C                     	;# 
  6528  000D                     	;# 
  6529  000E                     	;# 
  6530  0012                     	;# 
  6531  0013                     	;# 
  6532  0014                     	;# 
  6533  0018                     	;# 
  6534  0019                     	;# 
  6535  001A                     	;# 
  6536  008C                     	;# 
  6537  008C                     	;# 
  6538  008D                     	;# 
  6539  008E                     	;# 
  6540  008E                     	;# 
  6541  008F                     	;# 
  6542  0090                     	;# 
  6543  0090                     	;# 
  6544  0091                     	;# 
  6545  0092                     	;# 
  6546  0092                     	;# 
  6547  0093                     	;# 
  6548  0094                     	;# 
  6549  0094                     	;# 
  6550  0095                     	;# 
  6551  0096                     	;# 
  6552  0096                     	;# 
  6553  0097                     	;# 
  6554  0098                     	;# 
  6555  0099                     	;# 
  6556  009A                     	;# 
  6557  009B                     	;# 
  6558  009B                     	;# 
  6559  009C                     	;# 
  6560  009D                     	;# 
  6561  009D                     	;# 
  6562  009E                     	;# 
  6563  009F                     	;# 
  6564  010C                     	;# 
  6565  010C                     	;# 
  6566  010D                     	;# 
  6567  010E                     	;# 
  6568  010F                     	;# 
  6569  010F                     	;# 
  6570  0110                     	;# 
  6571  0111                     	;# 
  6572  0112                     	;# 
  6573  0113                     	;# 
  6574  0114                     	;# 
  6575  0115                     	;# 
  6576  0116                     	;# 
  6577  0117                     	;# 
  6578  0118                     	;# 
  6579  0119                     	;# 
  6580  0119                     	;# 
  6581  0119                     	;# 
  6582  011A                     	;# 
  6583  011A                     	;# 
  6584  011A                     	;# 
  6585  011B                     	;# 
  6586  011B                     	;# 
  6587  011B                     	;# 
  6588  011B                     	;# 
  6589  011B                     	;# 
  6590  011C                     	;# 
  6591  011C                     	;# 
  6592  011C                     	;# 
  6593  011D                     	;# 
  6594  011D                     	;# 
  6595  011D                     	;# 
  6596  011E                     	;# 
  6597  011E                     	;# 
  6598  011E                     	;# 
  6599  011F                     	;# 
  6600  011F                     	;# 
  6601  011F                     	;# 
  6602  011F                     	;# 
  6603  011F                     	;# 
  6604  018C                     	;# 
  6605  018D                     	;# 
  6606  018E                     	;# 
  6607  018F                     	;# 
  6608  0190                     	;# 
  6609  0191                     	;# 
  6610  0192                     	;# 
  6611  0196                     	;# 
  6612  0197                     	;# 
  6613  0198                     	;# 
  6614  0199                     	;# 
  6615  019A                     	;# 
  6616  019B                     	;# 
  6617  019C                     	;# 
  6618  020C                     	;# 
  6619  020D                     	;# 
  6620  020E                     	;# 
  6621  020E                     	;# 
  6622  020F                     	;# 
  6623  020F                     	;# 
  6624  0210                     	;# 
  6625  0210                     	;# 
  6626  0211                     	;# 
  6627  0211                     	;# 
  6628  0212                     	;# 
  6629  0213                     	;# 
  6630  0214                     	;# 
  6631  0214                     	;# 
  6632  0215                     	;# 
  6633  0215                     	;# 
  6634  0216                     	;# 
  6635  0216                     	;# 
  6636  0217                     	;# 
  6637  0217                     	;# 
  6638  0218                     	;# 
  6639  0219                     	;# 
  6640  021A                     	;# 
  6641  021A                     	;# 
  6642  021B                     	;# 
  6643  021B                     	;# 
  6644  021C                     	;# 
  6645  021C                     	;# 
  6646  021D                     	;# 
  6647  021D                     	;# 
  6648  021E                     	;# 
  6649  021F                     	;# 
  6650  028C                     	;# 
  6651  028C                     	;# 
  6652  028D                     	;# 
  6653  028D                     	;# 
  6654  028E                     	;# 
  6655  028F                     	;# 
  6656  0290                     	;# 
  6657  0291                     	;# 
  6658  0292                     	;# 
  6659  0292                     	;# 
  6660  0293                     	;# 
  6661  0293                     	;# 
  6662  0294                     	;# 
  6663  0295                     	;# 
  6664  0296                     	;# 
  6665  0297                     	;# 
  6666  0298                     	;# 
  6667  0298                     	;# 
  6668  0299                     	;# 
  6669  0299                     	;# 
  6670  029A                     	;# 
  6671  029B                     	;# 
  6672  029C                     	;# 
  6673  029D                     	;# 
  6674  029F                     	;# 
  6675  030C                     	;# 
  6676  030C                     	;# 
  6677  030D                     	;# 
  6678  030E                     	;# 
  6679  030F                     	;# 
  6680  0310                     	;# 
  6681  0310                     	;# 
  6682  0311                     	;# 
  6683  0312                     	;# 
  6684  0313                     	;# 
  6685  0314                     	;# 
  6686  0314                     	;# 
  6687  0315                     	;# 
  6688  0316                     	;# 
  6689  0317                     	;# 
  6690  0318                     	;# 
  6691  0318                     	;# 
  6692  0319                     	;# 
  6693  031A                     	;# 
  6694  031B                     	;# 
  6695  038C                     	;# 
  6696  038C                     	;# 
  6697  038D                     	;# 
  6698  038E                     	;# 
  6699  0390                     	;# 
  6700  0390                     	;# 
  6701  0391                     	;# 
  6702  0392                     	;# 
  6703  048C                     	;# 
  6704  048C                     	;# 
  6705  048D                     	;# 
  6706  048E                     	;# 
  6707  048F                     	;# 
  6708  048F                     	;# 
  6709  0490                     	;# 
  6710  0491                     	;# 
  6711  0492                     	;# 
  6712  0492                     	;# 
  6713  0493                     	;# 
  6714  0494                     	;# 
  6715  0495                     	;# 
  6716  0495                     	;# 
  6717  0496                     	;# 
  6718  0497                     	;# 
  6719  0498                     	;# 
  6720  0499                     	;# 
  6721  049A                     	;# 
  6722  049B                     	;# 
  6723  049C                     	;# 
  6724  049D                     	;# 
  6725  058C                     	;# 
  6726  058C                     	;# 
  6727  058D                     	;# 
  6728  058E                     	;# 
  6729  058F                     	;# 
  6730  058F                     	;# 
  6731  0590                     	;# 
  6732  0591                     	;# 
  6733  0592                     	;# 
  6734  0593                     	;# 
  6735  059C                     	;# 
  6736  059C                     	;# 
  6737  059D                     	;# 
  6738  059D                     	;# 
  6739  059E                     	;# 
  6740  059F                     	;# 
  6741  060C                     	;# 
  6742  060C                     	;# 
  6743  060D                     	;# 
  6744  060D                     	;# 
  6745  060E                     	;# 
  6746  060F                     	;# 
  6747  0610                     	;# 
  6748  0611                     	;# 
  6749  0612                     	;# 
  6750  0613                     	;# 
  6751  0614                     	;# 
  6752  0616                     	;# 
  6753  0616                     	;# 
  6754  0617                     	;# 
  6755  0617                     	;# 
  6756  0618                     	;# 
  6757  0619                     	;# 
  6758  061A                     	;# 
  6759  061B                     	;# 
  6760  061C                     	;# 
  6761  061D                     	;# 
  6762  061E                     	;# 
  6763  070C                     	;# 
  6764  070D                     	;# 
  6765  070E                     	;# 
  6766  070F                     	;# 
  6767  0710                     	;# 
  6768  0711                     	;# 
  6769  0712                     	;# 
  6770  0713                     	;# 
  6771  0714                     	;# 
  6772  0716                     	;# 
  6773  0717                     	;# 
  6774  0718                     	;# 
  6775  0719                     	;# 
  6776  071A                     	;# 
  6777  071B                     	;# 
  6778  071C                     	;# 
  6779  071D                     	;# 
  6780  071E                     	;# 
  6781  0796                     	;# 
  6782  0797                     	;# 
  6783  0798                     	;# 
  6784  0799                     	;# 
  6785  079A                     	;# 
  6786  079B                     	;# 
  6787  079C                     	;# 
  6788  079D                     	;# 
  6789  080C                     	;# 
  6790  080D                     	;# 
  6791  080E                     	;# 
  6792  080F                     	;# 
  6793  0810                     	;# 
  6794  0811                     	;# 
  6795  0812                     	;# 
  6796  0813                     	;# 
  6797  0814                     	;# 
  6798  081A                     	;# 
  6799  081A                     	;# 
  6800  081B                     	;# 
  6801  081C                     	;# 
  6802  081C                     	;# 
  6803  081D                     	;# 
  6804  081E                     	;# 
  6805  081F                     	;# 
  6806  088C                     	;# 
  6807  088D                     	;# 
  6808  088E                     	;# 
  6809  088F                     	;# 
  6810  0890                     	;# 
  6811  0891                     	;# 
  6812  0892                     	;# 
  6813  0893                     	;# 
  6814  0895                     	;# 
  6815  0896                     	;# 
  6816  0897                     	;# 
  6817  0898                     	;# 
  6818  0899                     	;# 
  6819  089A                     	;# 
  6820  089B                     	;# 
  6821  090C                     	;# 
  6822  090E                     	;# 
  6823  090F                     	;# 
  6824  091F                     	;# 
  6825  098F                     	;# 
  6826  098F                     	;# 
  6827  0990                     	;# 
  6828  0991                     	;# 
  6829  0992                     	;# 
  6830  0993                     	;# 
  6831  0994                     	;# 
  6832  0995                     	;# 
  6833  0996                     	;# 
  6834  0997                     	;# 
  6835  1E0F                     	;# 
  6836  1E10                     	;# 
  6837  1E11                     	;# 
  6838  1E12                     	;# 
  6839  1E13                     	;# 
  6840  1E14                     	;# 
  6841  1E15                     	;# 
  6842  1E16                     	;# 
  6843  1E17                     	;# 
  6844  1E18                     	;# 
  6845  1E19                     	;# 
  6846  1E1A                     	;# 
  6847  1E1B                     	;# 
  6848  1E1C                     	;# 
  6849  1E1D                     	;# 
  6850  1E1E                     	;# 
  6851  1E1F                     	;# 
  6852  1E20                     	;# 
  6853  1E21                     	;# 
  6854  1E22                     	;# 
  6855  1E23                     	;# 
  6856  1E24                     	;# 
  6857  1E25                     	;# 
  6858  1E26                     	;# 
  6859  1E27                     	;# 
  6860  1E28                     	;# 
  6861  1E29                     	;# 
  6862  1E2A                     	;# 
  6863  1E2B                     	;# 
  6864  1E2C                     	;# 
  6865  1E2D                     	;# 
  6866  1E2E                     	;# 
  6867  1E2F                     	;# 
  6868  1E30                     	;# 
  6869  1E31                     	;# 
  6870  1E32                     	;# 
  6871  1E33                     	;# 
  6872  1E34                     	;# 
  6873  1E35                     	;# 
  6874  1E36                     	;# 
  6875  1E37                     	;# 
  6876  1E8F                     	;# 
  6877  1E90                     	;# 
  6878  1E91                     	;# 
  6879  1E92                     	;# 
  6880  1E93                     	;# 
  6881  1E94                     	;# 
  6882  1E95                     	;# 
  6883  1E96                     	;# 
  6884  1E97                     	;# 
  6885  1E9C                     	;# 
  6886  1E9D                     	;# 
  6887  1E9E                     	;# 
  6888  1EA1                     	;# 
  6889  1EA2                     	;# 
  6890  1EA3                     	;# 
  6891  1EA4                     	;# 
  6892  1EA9                     	;# 
  6893  1EAA                     	;# 
  6894  1EB1                     	;# 
  6895  1EB2                     	;# 
  6896  1EB8                     	;# 
  6897  1EB9                     	;# 
  6898  1EBA                     	;# 
  6899  1EBB                     	;# 
  6900  1EBC                     	;# 
  6901  1EBD                     	;# 
  6902  1EBE                     	;# 
  6903  1EC3                     	;# 
  6904  1EC5                     	;# 
  6905  1EC6                     	;# 
  6906  1EC7                     	;# 
  6907  1EC8                     	;# 
  6908  1EC9                     	;# 
  6909  1ECA                     	;# 
  6910  1ECB                     	;# 
  6911  1ECB                     	;# 
  6912  1ECB                     	;# 
  6913  1ECC                     	;# 
  6914  1ECC                     	;# 
  6915  1ECC                     	;# 
  6916  1F10                     	;# 
  6917  1F11                     	;# 
  6918  1F12                     	;# 
  6919  1F14                     	;# 
  6920  1F15                     	;# 
  6921  1F1C                     	;# 
  6922  1F1D                     	;# 
  6923  1F1E                     	;# 
  6924  1F1F                     	;# 
  6925  1F20                     	;# 
  6926  1F21                     	;# 
  6927  1F22                     	;# 
  6928  1F23                     	;# 
  6929  1F24                     	;# 
  6930  1F25                     	;# 
  6931  1F26                     	;# 
  6932  1F27                     	;# 
  6933  1F38                     	;# 
  6934  1F39                     	;# 
  6935  1F3A                     	;# 
  6936  1F3B                     	;# 
  6937  1F3C                     	;# 
  6938  1F3D                     	;# 
  6939  1F3E                     	;# 
  6940  1F3F                     	;# 
  6941  1F43                     	;# 
  6942  1F44                     	;# 
  6943  1F45                     	;# 
  6944  1F46                     	;# 
  6945  1F47                     	;# 
  6946  1F48                     	;# 
  6947  1F49                     	;# 
  6948  1F4A                     	;# 
  6949  1F4E                     	;# 
  6950  1F4F                     	;# 
  6951  1F50                     	;# 
  6952  1F51                     	;# 
  6953  1F52                     	;# 
  6954  1F53                     	;# 
  6955  1F54                     	;# 
  6956  1F55                     	;# 
  6957  1FE4                     	;# 
  6958  1FE5                     	;# 
  6959  1FE6                     	;# 
  6960  1FE7                     	;# 
  6961  1FE8                     	;# 
  6962  1FE8                     	;# 
  6963  1FE9                     	;# 
  6964  1FEA                     	;# 
  6965  1FEB                     	;# 
  6966  1FED                     	;# 
  6967  1FEE                     	;# 
  6968  1FEF                     	;# 
  6969  0000                     	;# 
  6970  0001                     	;# 
  6971  0002                     	;# 
  6972  0003                     	;# 
  6973  0004                     	;# 
  6974  0005                     	;# 
  6975  0006                     	;# 
  6976  0007                     	;# 
  6977  0008                     	;# 
  6978  0009                     	;# 
  6979  000A                     	;# 
  6980  000B                     	;# 
  6981  000C                     	;# 
  6982  000D                     	;# 
  6983  000E                     	;# 
  6984  0012                     	;# 
  6985  0013                     	;# 
  6986  0014                     	;# 
  6987  0018                     	;# 
  6988  0019                     	;# 
  6989  001A                     	;# 
  6990  008C                     	;# 
  6991  008C                     	;# 
  6992  008D                     	;# 
  6993  008E                     	;# 
  6994  008E                     	;# 
  6995  008F                     	;# 
  6996  0090                     	;# 
  6997  0090                     	;# 
  6998  0091                     	;# 
  6999  0092                     	;# 
  7000  0092                     	;# 
  7001  0093                     	;# 
  7002  0094                     	;# 
  7003  0094                     	;# 
  7004  0095                     	;# 
  7005  0096                     	;# 
  7006  0096                     	;# 
  7007  0097                     	;# 
  7008  0098                     	;# 
  7009  0099                     	;# 
  7010  009A                     	;# 
  7011  009B                     	;# 
  7012  009B                     	;# 
  7013  009C                     	;# 
  7014  009D                     	;# 
  7015  009D                     	;# 
  7016  009E                     	;# 
  7017  009F                     	;# 
  7018  010C                     	;# 
  7019  010C                     	;# 
  7020  010D                     	;# 
  7021  010E                     	;# 
  7022  010F                     	;# 
  7023  010F                     	;# 
  7024  0110                     	;# 
  7025  0111                     	;# 
  7026  0112                     	;# 
  7027  0113                     	;# 
  7028  0114                     	;# 
  7029  0115                     	;# 
  7030  0116                     	;# 
  7031  0117                     	;# 
  7032  0118                     	;# 
  7033  0119                     	;# 
  7034  0119                     	;# 
  7035  0119                     	;# 
  7036  011A                     	;# 
  7037  011A                     	;# 
  7038  011A                     	;# 
  7039  011B                     	;# 
  7040  011B                     	;# 
  7041  011B                     	;# 
  7042  011B                     	;# 
  7043  011B                     	;# 
  7044  011C                     	;# 
  7045  011C                     	;# 
  7046  011C                     	;# 
  7047  011D                     	;# 
  7048  011D                     	;# 
  7049  011D                     	;# 
  7050  011E                     	;# 
  7051  011E                     	;# 
  7052  011E                     	;# 
  7053  011F                     	;# 
  7054  011F                     	;# 
  7055  011F                     	;# 
  7056  011F                     	;# 
  7057  011F                     	;# 
  7058  018C                     	;# 
  7059  018D                     	;# 
  7060  018E                     	;# 
  7061  018F                     	;# 
  7062  0190                     	;# 
  7063  0191                     	;# 
  7064  0192                     	;# 
  7065  0196                     	;# 
  7066  0197                     	;# 
  7067  0198                     	;# 
  7068  0199                     	;# 
  7069  019A                     	;# 
  7070  019B                     	;# 
  7071  019C                     	;# 
  7072  020C                     	;# 
  7073  020D                     	;# 
  7074  020E                     	;# 
  7075  020E                     	;# 
  7076  020F                     	;# 
  7077  020F                     	;# 
  7078  0210                     	;# 
  7079  0210                     	;# 
  7080  0211                     	;# 
  7081  0211                     	;# 
  7082  0212                     	;# 
  7083  0213                     	;# 
  7084  0214                     	;# 
  7085  0214                     	;# 
  7086  0215                     	;# 
  7087  0215                     	;# 
  7088  0216                     	;# 
  7089  0216                     	;# 
  7090  0217                     	;# 
  7091  0217                     	;# 
  7092  0218                     	;# 
  7093  0219                     	;# 
  7094  021A                     	;# 
  7095  021A                     	;# 
  7096  021B                     	;# 
  7097  021B                     	;# 
  7098  021C                     	;# 
  7099  021C                     	;# 
  7100  021D                     	;# 
  7101  021D                     	;# 
  7102  021E                     	;# 
  7103  021F                     	;# 
  7104  028C                     	;# 
  7105  028C                     	;# 
  7106  028D                     	;# 
  7107  028D                     	;# 
  7108  028E                     	;# 
  7109  028F                     	;# 
  7110  0290                     	;# 
  7111  0291                     	;# 
  7112  0292                     	;# 
  7113  0292                     	;# 
  7114  0293                     	;# 
  7115  0293                     	;# 
  7116  0294                     	;# 
  7117  0295                     	;# 
  7118  0296                     	;# 
  7119  0297                     	;# 
  7120  0298                     	;# 
  7121  0298                     	;# 
  7122  0299                     	;# 
  7123  0299                     	;# 
  7124  029A                     	;# 
  7125  029B                     	;# 
  7126  029C                     	;# 
  7127  029D                     	;# 
  7128  029F                     	;# 
  7129  030C                     	;# 
  7130  030C                     	;# 
  7131  030D                     	;# 
  7132  030E                     	;# 
  7133  030F                     	;# 
  7134  0310                     	;# 
  7135  0310                     	;# 
  7136  0311                     	;# 
  7137  0312                     	;# 
  7138  0313                     	;# 
  7139  0314                     	;# 
  7140  0314                     	;# 
  7141  0315                     	;# 
  7142  0316                     	;# 
  7143  0317                     	;# 
  7144  0318                     	;# 
  7145  0318                     	;# 
  7146  0319                     	;# 
  7147  031A                     	;# 
  7148  031B                     	;# 
  7149  038C                     	;# 
  7150  038C                     	;# 
  7151  038D                     	;# 
  7152  038E                     	;# 
  7153  0390                     	;# 
  7154  0390                     	;# 
  7155  0391                     	;# 
  7156  0392                     	;# 
  7157  048C                     	;# 
  7158  048C                     	;# 
  7159  048D                     	;# 
  7160  048E                     	;# 
  7161  048F                     	;# 
  7162  048F                     	;# 
  7163  0490                     	;# 
  7164  0491                     	;# 
  7165  0492                     	;# 
  7166  0492                     	;# 
  7167  0493                     	;# 
  7168  0494                     	;# 
  7169  0495                     	;# 
  7170  0495                     	;# 
  7171  0496                     	;# 
  7172  0497                     	;# 
  7173  0498                     	;# 
  7174  0499                     	;# 
  7175  049A                     	;# 
  7176  049B                     	;# 
  7177  049C                     	;# 
  7178  049D                     	;# 
  7179  058C                     	;# 
  7180  058C                     	;# 
  7181  058D                     	;# 
  7182  058E                     	;# 
  7183  058F                     	;# 
  7184  058F                     	;# 
  7185  0590                     	;# 
  7186  0591                     	;# 
  7187  0592                     	;# 
  7188  0593                     	;# 
  7189  059C                     	;# 
  7190  059C                     	;# 
  7191  059D                     	;# 
  7192  059D                     	;# 
  7193  059E                     	;# 
  7194  059F                     	;# 
  7195  060C                     	;# 
  7196  060C                     	;# 
  7197  060D                     	;# 
  7198  060D                     	;# 
  7199  060E                     	;# 
  7200  060F                     	;# 
  7201  0610                     	;# 
  7202  0611                     	;# 
  7203  0612                     	;# 
  7204  0613                     	;# 
  7205  0614                     	;# 
  7206  0616                     	;# 
  7207  0616                     	;# 
  7208  0617                     	;# 
  7209  0617                     	;# 
  7210  0618                     	;# 
  7211  0619                     	;# 
  7212  061A                     	;# 
  7213  061B                     	;# 
  7214  061C                     	;# 
  7215  061D                     	;# 
  7216  061E                     	;# 
  7217  070C                     	;# 
  7218  070D                     	;# 
  7219  070E                     	;# 
  7220  070F                     	;# 
  7221  0710                     	;# 
  7222  0711                     	;# 
  7223  0712                     	;# 
  7224  0713                     	;# 
  7225  0714                     	;# 
  7226  0716                     	;# 
  7227  0717                     	;# 
  7228  0718                     	;# 
  7229  0719                     	;# 
  7230  071A                     	;# 
  7231  071B                     	;# 
  7232  071C                     	;# 
  7233  071D                     	;# 
  7234  071E                     	;# 
  7235  0796                     	;# 
  7236  0797                     	;# 
  7237  0798                     	;# 
  7238  0799                     	;# 
  7239  079A                     	;# 
  7240  079B                     	;# 
  7241  079C                     	;# 
  7242  079D                     	;# 
  7243  080C                     	;# 
  7244  080D                     	;# 
  7245  080E                     	;# 
  7246  080F                     	;# 
  7247  0810                     	;# 
  7248  0811                     	;# 
  7249  0812                     	;# 
  7250  0813                     	;# 
  7251  0814                     	;# 
  7252  081A                     	;# 
  7253  081A                     	;# 
  7254  081B                     	;# 
  7255  081C                     	;# 
  7256  081C                     	;# 
  7257  081D                     	;# 
  7258  081E                     	;# 
  7259  081F                     	;# 
  7260  088C                     	;# 
  7261  088D                     	;# 
  7262  088E                     	;# 
  7263  088F                     	;# 
  7264  0890                     	;# 
  7265  0891                     	;# 
  7266  0892                     	;# 
  7267  0893                     	;# 
  7268  0895                     	;# 
  7269  0896                     	;# 
  7270  0897                     	;# 
  7271  0898                     	;# 
  7272  0899                     	;# 
  7273  089A                     	;# 
  7274  089B                     	;# 
  7275  090C                     	;# 
  7276  090E                     	;# 
  7277  090F                     	;# 
  7278  091F                     	;# 
  7279  098F                     	;# 
  7280  098F                     	;# 
  7281  0990                     	;# 
  7282  0991                     	;# 
  7283  0992                     	;# 
  7284  0993                     	;# 
  7285  0994                     	;# 
  7286  0995                     	;# 
  7287  0996                     	;# 
  7288  0997                     	;# 
  7289  1E0F                     	;# 
  7290  1E10                     	;# 
  7291  1E11                     	;# 
  7292  1E12                     	;# 
  7293  1E13                     	;# 
  7294  1E14                     	;# 
  7295  1E15                     	;# 
  7296  1E16                     	;# 
  7297  1E17                     	;# 
  7298  1E18                     	;# 
  7299  1E19                     	;# 
  7300  1E1A                     	;# 
  7301  1E1B                     	;# 
  7302  1E1C                     	;# 
  7303  1E1D                     	;# 
  7304  1E1E                     	;# 
  7305  1E1F                     	;# 
  7306  1E20                     	;# 
  7307  1E21                     	;# 
  7308  1E22                     	;# 
  7309  1E23                     	;# 
  7310  1E24                     	;# 
  7311  1E25                     	;# 
  7312  1E26                     	;# 
  7313  1E27                     	;# 
  7314  1E28                     	;# 
  7315  1E29                     	;# 
  7316  1E2A                     	;# 
  7317  1E2B                     	;# 
  7318  1E2C                     	;# 
  7319  1E2D                     	;# 
  7320  1E2E                     	;# 
  7321  1E2F                     	;# 
  7322  1E30                     	;# 
  7323  1E31                     	;# 
  7324  1E32                     	;# 
  7325  1E33                     	;# 
  7326  1E34                     	;# 
  7327  1E35                     	;# 
  7328  1E36                     	;# 
  7329  1E37                     	;# 
  7330  1E8F                     	;# 
  7331  1E90                     	;# 
  7332  1E91                     	;# 
  7333  1E92                     	;# 
  7334  1E93                     	;# 
  7335  1E94                     	;# 
  7336  1E95                     	;# 
  7337  1E96                     	;# 
  7338  1E97                     	;# 
  7339  1E9C                     	;# 
  7340  1E9D                     	;# 
  7341  1E9E                     	;# 
  7342  1EA1                     	;# 
  7343  1EA2                     	;# 
  7344  1EA3                     	;# 
  7345  1EA4                     	;# 
  7346  1EA9                     	;# 
  7347  1EAA                     	;# 
  7348  1EB1                     	;# 
  7349  1EB2                     	;# 
  7350  1EB8                     	;# 
  7351  1EB9                     	;# 
  7352  1EBA                     	;# 
  7353  1EBB                     	;# 
  7354  1EBC                     	;# 
  7355  1EBD                     	;# 
  7356  1EBE                     	;# 
  7357  1EC3                     	;# 
  7358  1EC5                     	;# 
  7359  1EC6                     	;# 
  7360  1EC7                     	;# 
  7361  1EC8                     	;# 
  7362  1EC9                     	;# 
  7363  1ECA                     	;# 
  7364  1ECB                     	;# 
  7365  1ECB                     	;# 
  7366  1ECB                     	;# 
  7367  1ECC                     	;# 
  7368  1ECC                     	;# 
  7369  1ECC                     	;# 
  7370  1F10                     	;# 
  7371  1F11                     	;# 
  7372  1F12                     	;# 
  7373  1F14                     	;# 
  7374  1F15                     	;# 
  7375  1F1C                     	;# 
  7376  1F1D                     	;# 
  7377  1F1E                     	;# 
  7378  1F1F                     	;# 
  7379  1F20                     	;# 
  7380  1F21                     	;# 
  7381  1F22                     	;# 
  7382  1F23                     	;# 
  7383  1F24                     	;# 
  7384  1F25                     	;# 
  7385  1F26                     	;# 
  7386  1F27                     	;# 
  7387  1F38                     	;# 
  7388  1F39                     	;# 
  7389  1F3A                     	;# 
  7390  1F3B                     	;# 
  7391  1F3C                     	;# 
  7392  1F3D                     	;# 
  7393  1F3E                     	;# 
  7394  1F3F                     	;# 
  7395  1F43                     	;# 
  7396  1F44                     	;# 
  7397  1F45                     	;# 
  7398  1F46                     	;# 
  7399  1F47                     	;# 
  7400  1F48                     	;# 
  7401  1F49                     	;# 
  7402  1F4A                     	;# 
  7403  1F4E                     	;# 
  7404  1F4F                     	;# 
  7405  1F50                     	;# 
  7406  1F51                     	;# 
  7407  1F52                     	;# 
  7408  1F53                     	;# 
  7409  1F54                     	;# 
  7410  1F55                     	;# 
  7411  1FE4                     	;# 
  7412  1FE5                     	;# 
  7413  1FE6                     	;# 
  7414  1FE7                     	;# 
  7415  1FE8                     	;# 
  7416  1FE8                     	;# 
  7417  1FE9                     	;# 
  7418  1FEA                     	;# 
  7419  1FEB                     	;# 
  7420  1FED                     	;# 
  7421  1FEE                     	;# 
  7422  1FEF                     	;# 
  7423  0000                     	;# 
  7424  0001                     	;# 
  7425  0002                     	;# 
  7426  0003                     	;# 
  7427  0004                     	;# 
  7428  0005                     	;# 
  7429  0006                     	;# 
  7430  0007                     	;# 
  7431  0008                     	;# 
  7432  0009                     	;# 
  7433  000A                     	;# 
  7434  000B                     	;# 
  7435  000C                     	;# 
  7436  000D                     	;# 
  7437  000E                     	;# 
  7438  0012                     	;# 
  7439  0013                     	;# 
  7440  0014                     	;# 
  7441  0018                     	;# 
  7442  0019                     	;# 
  7443  001A                     	;# 
  7444  008C                     	;# 
  7445  008C                     	;# 
  7446  008D                     	;# 
  7447  008E                     	;# 
  7448  008E                     	;# 
  7449  008F                     	;# 
  7450  0090                     	;# 
  7451  0090                     	;# 
  7452  0091                     	;# 
  7453  0092                     	;# 
  7454  0092                     	;# 
  7455  0093                     	;# 
  7456  0094                     	;# 
  7457  0094                     	;# 
  7458  0095                     	;# 
  7459  0096                     	;# 
  7460  0096                     	;# 
  7461  0097                     	;# 
  7462  0098                     	;# 
  7463  0099                     	;# 
  7464  009A                     	;# 
  7465  009B                     	;# 
  7466  009B                     	;# 
  7467  009C                     	;# 
  7468  009D                     	;# 
  7469  009D                     	;# 
  7470  009E                     	;# 
  7471  009F                     	;# 
  7472  010C                     	;# 
  7473  010C                     	;# 
  7474  010D                     	;# 
  7475  010E                     	;# 
  7476  010F                     	;# 
  7477  010F                     	;# 
  7478  0110                     	;# 
  7479  0111                     	;# 
  7480  0112                     	;# 
  7481  0113                     	;# 
  7482  0114                     	;# 
  7483  0115                     	;# 
  7484  0116                     	;# 
  7485  0117                     	;# 
  7486  0118                     	;# 
  7487  0119                     	;# 
  7488  0119                     	;# 
  7489  0119                     	;# 
  7490  011A                     	;# 
  7491  011A                     	;# 
  7492  011A                     	;# 
  7493  011B                     	;# 
  7494  011B                     	;# 
  7495  011B                     	;# 
  7496  011B                     	;# 
  7497  011B                     	;# 
  7498  011C                     	;# 
  7499  011C                     	;# 
  7500  011C                     	;# 
  7501  011D                     	;# 
  7502  011D                     	;# 
  7503  011D                     	;# 
  7504  011E                     	;# 
  7505  011E                     	;# 
  7506  011E                     	;# 
  7507  011F                     	;# 
  7508  011F                     	;# 
  7509  011F                     	;# 
  7510  011F                     	;# 
  7511  011F                     	;# 
  7512  018C                     	;# 
  7513  018D                     	;# 
  7514  018E                     	;# 
  7515  018F                     	;# 
  7516  0190                     	;# 
  7517  0191                     	;# 
  7518  0192                     	;# 
  7519  0196                     	;# 
  7520  0197                     	;# 
  7521  0198                     	;# 
  7522  0199                     	;# 
  7523  019A                     	;# 
  7524  019B                     	;# 
  7525  019C                     	;# 
  7526  020C                     	;# 
  7527  020D                     	;# 
  7528  020E                     	;# 
  7529  020E                     	;# 
  7530  020F                     	;# 
  7531  020F                     	;# 
  7532  0210                     	;# 
  7533  0210                     	;# 
  7534  0211                     	;# 
  7535  0211                     	;# 
  7536  0212                     	;# 
  7537  0213                     	;# 
  7538  0214                     	;# 
  7539  0214                     	;# 
  7540  0215                     	;# 
  7541  0215                     	;# 
  7542  0216                     	;# 
  7543  0216                     	;# 
  7544  0217                     	;# 
  7545  0217                     	;# 
  7546  0218                     	;# 
  7547  0219                     	;# 
  7548  021A                     	;# 
  7549  021A                     	;# 
  7550  021B                     	;# 
  7551  021B                     	;# 
  7552  021C                     	;# 
  7553  021C                     	;# 
  7554  021D                     	;# 
  7555  021D                     	;# 
  7556  021E                     	;# 
  7557  021F                     	;# 
  7558  028C                     	;# 
  7559  028C                     	;# 
  7560  028D                     	;# 
  7561  028D                     	;# 
  7562  028E                     	;# 
  7563  028F                     	;# 
  7564  0290                     	;# 
  7565  0291                     	;# 
  7566  0292                     	;# 
  7567  0292                     	;# 
  7568  0293                     	;# 
  7569  0293                     	;# 
  7570  0294                     	;# 
  7571  0295                     	;# 
  7572  0296                     	;# 
  7573  0297                     	;# 
  7574  0298                     	;# 
  7575  0298                     	;# 
  7576  0299                     	;# 
  7577  0299                     	;# 
  7578  029A                     	;# 
  7579  029B                     	;# 
  7580  029C                     	;# 
  7581  029D                     	;# 
  7582  029F                     	;# 
  7583  030C                     	;# 
  7584  030C                     	;# 
  7585  030D                     	;# 
  7586  030E                     	;# 
  7587  030F                     	;# 
  7588  0310                     	;# 
  7589  0310                     	;# 
  7590  0311                     	;# 
  7591  0312                     	;# 
  7592  0313                     	;# 
  7593  0314                     	;# 
  7594  0314                     	;# 
  7595  0315                     	;# 
  7596  0316                     	;# 
  7597  0317                     	;# 
  7598  0318                     	;# 
  7599  0318                     	;# 
  7600  0319                     	;# 
  7601  031A                     	;# 
  7602  031B                     	;# 
  7603  038C                     	;# 
  7604  038C                     	;# 
  7605  038D                     	;# 
  7606  038E                     	;# 
  7607  0390                     	;# 
  7608  0390                     	;# 
  7609  0391                     	;# 
  7610  0392                     	;# 
  7611  048C                     	;# 
  7612  048C                     	;# 
  7613  048D                     	;# 
  7614  048E                     	;# 
  7615  048F                     	;# 
  7616  048F                     	;# 
  7617  0490                     	;# 
  7618  0491                     	;# 
  7619  0492                     	;# 
  7620  0492                     	;# 
  7621  0493                     	;# 
  7622  0494                     	;# 
  7623  0495                     	;# 
  7624  0495                     	;# 
  7625  0496                     	;# 
  7626  0497                     	;# 
  7627  0498                     	;# 
  7628  0499                     	;# 
  7629  049A                     	;# 
  7630  049B                     	;# 
  7631  049C                     	;# 
  7632  049D                     	;# 
  7633  058C                     	;# 
  7634  058C                     	;# 
  7635  058D                     	;# 
  7636  058E                     	;# 
  7637  058F                     	;# 
  7638  058F                     	;# 
  7639  0590                     	;# 
  7640  0591                     	;# 
  7641  0592                     	;# 
  7642  0593                     	;# 
  7643  059C                     	;# 
  7644  059C                     	;# 
  7645  059D                     	;# 
  7646  059D                     	;# 
  7647  059E                     	;# 
  7648  059F                     	;# 
  7649  060C                     	;# 
  7650  060C                     	;# 
  7651  060D                     	;# 
  7652  060D                     	;# 
  7653  060E                     	;# 
  7654  060F                     	;# 
  7655  0610                     	;# 
  7656  0611                     	;# 
  7657  0612                     	;# 
  7658  0613                     	;# 
  7659  0614                     	;# 
  7660  0616                     	;# 
  7661  0616                     	;# 
  7662  0617                     	;# 
  7663  0617                     	;# 
  7664  0618                     	;# 
  7665  0619                     	;# 
  7666  061A                     	;# 
  7667  061B                     	;# 
  7668  061C                     	;# 
  7669  061D                     	;# 
  7670  061E                     	;# 
  7671  070C                     	;# 
  7672  070D                     	;# 
  7673  070E                     	;# 
  7674  070F                     	;# 
  7675  0710                     	;# 
  7676  0711                     	;# 
  7677  0712                     	;# 
  7678  0713                     	;# 
  7679  0714                     	;# 
  7680  0716                     	;# 
  7681  0717                     	;# 
  7682  0718                     	;# 
  7683  0719                     	;# 
  7684  071A                     	;# 
  7685  071B                     	;# 
  7686  071C                     	;# 
  7687  071D                     	;# 
  7688  071E                     	;# 
  7689  0796                     	;# 
  7690  0797                     	;# 
  7691  0798                     	;# 
  7692  0799                     	;# 
  7693  079A                     	;# 
  7694  079B                     	;# 
  7695  079C                     	;# 
  7696  079D                     	;# 
  7697  080C                     	;# 
  7698  080D                     	;# 
  7699  080E                     	;# 
  7700  080F                     	;# 
  7701  0810                     	;# 
  7702  0811                     	;# 
  7703  0812                     	;# 
  7704  0813                     	;# 
  7705  0814                     	;# 
  7706  081A                     	;# 
  7707  081A                     	;# 
  7708  081B                     	;# 
  7709  081C                     	;# 
  7710  081C                     	;# 
  7711  081D                     	;# 
  7712  081E                     	;# 
  7713  081F                     	;# 
  7714  088C                     	;# 
  7715  088D                     	;# 
  7716  088E                     	;# 
  7717  088F                     	;# 
  7718  0890                     	;# 
  7719  0891                     	;# 
  7720  0892                     	;# 
  7721  0893                     	;# 
  7722  0895                     	;# 
  7723  0896                     	;# 
  7724  0897                     	;# 
  7725  0898                     	;# 
  7726  0899                     	;# 
  7727  089A                     	;# 
  7728  089B                     	;# 
  7729  090C                     	;# 
  7730  090E                     	;# 
  7731  090F                     	;# 
  7732  091F                     	;# 
  7733  098F                     	;# 
  7734  098F                     	;# 
  7735  0990                     	;# 
  7736  0991                     	;# 
  7737  0992                     	;# 
  7738  0993                     	;# 
  7739  0994                     	;# 
  7740  0995                     	;# 
  7741  0996                     	;# 
  7742  0997                     	;# 
  7743  1E0F                     	;# 
  7744  1E10                     	;# 
  7745  1E11                     	;# 
  7746  1E12                     	;# 
  7747  1E13                     	;# 
  7748  1E14                     	;# 
  7749  1E15                     	;# 
  7750  1E16                     	;# 
  7751  1E17                     	;# 
  7752  1E18                     	;# 
  7753  1E19                     	;# 
  7754  1E1A                     	;# 
  7755  1E1B                     	;# 
  7756  1E1C                     	;# 
  7757  1E1D                     	;# 
  7758  1E1E                     	;# 
  7759  1E1F                     	;# 
  7760  1E20                     	;# 
  7761  1E21                     	;# 
  7762  1E22                     	;# 
  7763  1E23                     	;# 
  7764  1E24                     	;# 
  7765  1E25                     	;# 
  7766  1E26                     	;# 
  7767  1E27                     	;# 
  7768  1E28                     	;# 
  7769  1E29                     	;# 
  7770  1E2A                     	;# 
  7771  1E2B                     	;# 
  7772  1E2C                     	;# 
  7773  1E2D                     	;# 
  7774  1E2E                     	;# 
  7775  1E2F                     	;# 
  7776  1E30                     	;# 
  7777  1E31                     	;# 
  7778  1E32                     	;# 
  7779  1E33                     	;# 
  7780  1E34                     	;# 
  7781  1E35                     	;# 
  7782  1E36                     	;# 
  7783  1E37                     	;# 
  7784  1E8F                     	;# 
  7785  1E90                     	;# 
  7786  1E91                     	;# 
  7787  1E92                     	;# 
  7788  1E93                     	;# 
  7789  1E94                     	;# 
  7790  1E95                     	;# 
  7791  1E96                     	;# 
  7792  1E97                     	;# 
  7793  1E9C                     	;# 
  7794  1E9D                     	;# 
  7795  1E9E                     	;# 
  7796  1EA1                     	;# 
  7797  1EA2                     	;# 
  7798  1EA3                     	;# 
  7799  1EA4                     	;# 
  7800  1EA9                     	;# 
  7801  1EAA                     	;# 
  7802  1EB1                     	;# 
  7803  1EB2                     	;# 
  7804  1EB8                     	;# 
  7805  1EB9                     	;# 
  7806  1EBA                     	;# 
  7807  1EBB                     	;# 
  7808  1EBC                     	;# 
  7809  1EBD                     	;# 
  7810  1EBE                     	;# 
  7811  1EC3                     	;# 
  7812  1EC5                     	;# 
  7813  1EC6                     	;# 
  7814  1EC7                     	;# 
  7815  1EC8                     	;# 
  7816  1EC9                     	;# 
  7817  1ECA                     	;# 
  7818  1ECB                     	;# 
  7819  1ECB                     	;# 
  7820  1ECB                     	;# 
  7821  1ECC                     	;# 
  7822  1ECC                     	;# 
  7823  1ECC                     	;# 
  7824  1F10                     	;# 
  7825  1F11                     	;# 
  7826  1F12                     	;# 
  7827  1F14                     	;# 
  7828  1F15                     	;# 
  7829  1F1C                     	;# 
  7830  1F1D                     	;# 
  7831  1F1E                     	;# 
  7832  1F1F                     	;# 
  7833  1F20                     	;# 
  7834  1F21                     	;# 
  7835  1F22                     	;# 
  7836  1F23                     	;# 
  7837  1F24                     	;# 
  7838  1F25                     	;# 
  7839  1F26                     	;# 
  7840  1F27                     	;# 
  7841  1F38                     	;# 
  7842  1F39                     	;# 
  7843  1F3A                     	;# 
  7844  1F3B                     	;# 
  7845  1F3C                     	;# 
  7846  1F3D                     	;# 
  7847  1F3E                     	;# 
  7848  1F3F                     	;# 
  7849  1F43                     	;# 
  7850  1F44                     	;# 
  7851  1F45                     	;# 
  7852  1F46                     	;# 
  7853  1F47                     	;# 
  7854  1F48                     	;# 
  7855  1F49                     	;# 
  7856  1F4A                     	;# 
  7857  1F4E                     	;# 
  7858  1F4F                     	;# 
  7859  1F50                     	;# 
  7860  1F51                     	;# 
  7861  1F52                     	;# 
  7862  1F53                     	;# 
  7863  1F54                     	;# 
  7864  1F55                     	;# 
  7865  1FE4                     	;# 
  7866  1FE5                     	;# 
  7867  1FE6                     	;# 
  7868  1FE7                     	;# 
  7869  1FE8                     	;# 
  7870  1FE8                     	;# 
  7871  1FE9                     	;# 
  7872  1FEA                     	;# 
  7873  1FEB                     	;# 
  7874  1FED                     	;# 
  7875  1FEE                     	;# 
  7876  1FEF                     	;# 
  7877  0000                     	;# 
  7878  0001                     	;# 
  7879  0002                     	;# 
  7880  0003                     	;# 
  7881  0004                     	;# 
  7882  0005                     	;# 
  7883  0006                     	;# 
  7884  0007                     	;# 
  7885  0008                     	;# 
  7886  0009                     	;# 
  7887  000A                     	;# 
  7888  000B                     	;# 
  7889  000C                     	;# 
  7890  000D                     	;# 
  7891  000E                     	;# 
  7892  0012                     	;# 
  7893  0013                     	;# 
  7894  0014                     	;# 
  7895  0018                     	;# 
  7896  0019                     	;# 
  7897  001A                     	;# 
  7898  008C                     	;# 
  7899  008C                     	;# 
  7900  008D                     	;# 
  7901  008E                     	;# 
  7902  008E                     	;# 
  7903  008F                     	;# 
  7904  0090                     	;# 
  7905  0090                     	;# 
  7906  0091                     	;# 
  7907  0092                     	;# 
  7908  0092                     	;# 
  7909  0093                     	;# 
  7910  0094                     	;# 
  7911  0094                     	;# 
  7912  0095                     	;# 
  7913  0096                     	;# 
  7914  0096                     	;# 
  7915  0097                     	;# 
  7916  0098                     	;# 
  7917  0099                     	;# 
  7918  009A                     	;# 
  7919  009B                     	;# 
  7920  009B                     	;# 
  7921  009C                     	;# 
  7922  009D                     	;# 
  7923  009D                     	;# 
  7924  009E                     	;# 
  7925  009F                     	;# 
  7926  010C                     	;# 
  7927  010C                     	;# 
  7928  010D                     	;# 
  7929  010E                     	;# 
  7930  010F                     	;# 
  7931  010F                     	;# 
  7932  0110                     	;# 
  7933  0111                     	;# 
  7934  0112                     	;# 
  7935  0113                     	;# 
  7936  0114                     	;# 
  7937  0115                     	;# 
  7938  0116                     	;# 
  7939  0117                     	;# 
  7940  0118                     	;# 
  7941  0119                     	;# 
  7942  0119                     	;# 
  7943  0119                     	;# 
  7944  011A                     	;# 
  7945  011A                     	;# 
  7946  011A                     	;# 
  7947  011B                     	;# 
  7948  011B                     	;# 
  7949  011B                     	;# 
  7950  011B                     	;# 
  7951  011B                     	;# 
  7952  011C                     	;# 
  7953  011C                     	;# 
  7954  011C                     	;# 
  7955  011D                     	;# 
  7956  011D                     	;# 
  7957  011D                     	;# 
  7958  011E                     	;# 
  7959  011E                     	;# 
  7960  011E                     	;# 
  7961  011F                     	;# 
  7962  011F                     	;# 
  7963  011F                     	;# 
  7964  011F                     	;# 
  7965  011F                     	;# 
  7966  018C                     	;# 
  7967  018D                     	;# 
  7968  018E                     	;# 
  7969  018F                     	;# 
  7970  0190                     	;# 
  7971  0191                     	;# 
  7972  0192                     	;# 
  7973  0196                     	;# 
  7974  0197                     	;# 
  7975  0198                     	;# 
  7976  0199                     	;# 
  7977  019A                     	;# 
  7978  019B                     	;# 
  7979  019C                     	;# 
  7980  020C                     	;# 
  7981  020D                     	;# 
  7982  020E                     	;# 
  7983  020E                     	;# 
  7984  020F                     	;# 
  7985  020F                     	;# 
  7986  0210                     	;# 
  7987  0210                     	;# 
  7988  0211                     	;# 
  7989  0211                     	;# 
  7990  0212                     	;# 
  7991  0213                     	;# 
  7992  0214                     	;# 
  7993  0214                     	;# 
  7994  0215                     	;# 
  7995  0215                     	;# 
  7996  0216                     	;# 
  7997  0216                     	;# 
  7998  0217                     	;# 
  7999  0217                     	;# 
  8000  0218                     	;# 
  8001  0219                     	;# 
  8002  021A                     	;# 
  8003  021A                     	;# 
  8004  021B                     	;# 
  8005  021B                     	;# 
  8006  021C                     	;# 
  8007  021C                     	;# 
  8008  021D                     	;# 
  8009  021D                     	;# 
  8010  021E                     	;# 
  8011  021F                     	;# 
  8012  028C                     	;# 
  8013  028C                     	;# 
  8014  028D                     	;# 
  8015  028D                     	;# 
  8016  028E                     	;# 
  8017  028F                     	;# 
  8018  0290                     	;# 
  8019  0291                     	;# 
  8020  0292                     	;# 
  8021  0292                     	;# 
  8022  0293                     	;# 
  8023  0293                     	;# 
  8024  0294                     	;# 
  8025  0295                     	;# 
  8026  0296                     	;# 
  8027  0297                     	;# 
  8028  0298                     	;# 
  8029  0298                     	;# 
  8030  0299                     	;# 
  8031  0299                     	;# 
  8032  029A                     	;# 
  8033  029B                     	;# 
  8034  029C                     	;# 
  8035  029D                     	;# 
  8036  029F                     	;# 
  8037  030C                     	;# 
  8038  030C                     	;# 
  8039  030D                     	;# 
  8040  030E                     	;# 
  8041  030F                     	;# 
  8042  0310                     	;# 
  8043  0310                     	;# 
  8044  0311                     	;# 
  8045  0312                     	;# 
  8046  0313                     	;# 
  8047  0314                     	;# 
  8048  0314                     	;# 
  8049  0315                     	;# 
  8050  0316                     	;# 
  8051  0317                     	;# 
  8052  0318                     	;# 
  8053  0318                     	;# 
  8054  0319                     	;# 
  8055  031A                     	;# 
  8056  031B                     	;# 
  8057  038C                     	;# 
  8058  038C                     	;# 
  8059  038D                     	;# 
  8060  038E                     	;# 
  8061  0390                     	;# 
  8062  0390                     	;# 
  8063  0391                     	;# 
  8064  0392                     	;# 
  8065  048C                     	;# 
  8066  048C                     	;# 
  8067  048D                     	;# 
  8068  048E                     	;# 
  8069  048F                     	;# 
  8070  048F                     	;# 
  8071  0490                     	;# 
  8072  0491                     	;# 
  8073  0492                     	;# 
  8074  0492                     	;# 
  8075  0493                     	;# 
  8076  0494                     	;# 
  8077  0495                     	;# 
  8078  0495                     	;# 
  8079  0496                     	;# 
  8080  0497                     	;# 
  8081  0498                     	;# 
  8082  0499                     	;# 
  8083  049A                     	;# 
  8084  049B                     	;# 
  8085  049C                     	;# 
  8086  049D                     	;# 
  8087  058C                     	;# 
  8088  058C                     	;# 
  8089  058D                     	;# 
  8090  058E                     	;# 
  8091  058F                     	;# 
  8092  058F                     	;# 
  8093  0590                     	;# 
  8094  0591                     	;# 
  8095  0592                     	;# 
  8096  0593                     	;# 
  8097  059C                     	;# 
  8098  059C                     	;# 
  8099  059D                     	;# 
  8100  059D                     	;# 
  8101  059E                     	;# 
  8102  059F                     	;# 
  8103  060C                     	;# 
  8104  060C                     	;# 
  8105  060D                     	;# 
  8106  060D                     	;# 
  8107  060E                     	;# 
  8108  060F                     	;# 
  8109  0610                     	;# 
  8110  0611                     	;# 
  8111  0612                     	;# 
  8112  0613                     	;# 
  8113  0614                     	;# 
  8114  0616                     	;# 
  8115  0616                     	;# 
  8116  0617                     	;# 
  8117  0617                     	;# 
  8118  0618                     	;# 
  8119  0619                     	;# 
  8120  061A                     	;# 
  8121  061B                     	;# 
  8122  061C                     	;# 
  8123  061D                     	;# 
  8124  061E                     	;# 
  8125  070C                     	;# 
  8126  070D                     	;# 
  8127  070E                     	;# 
  8128  070F                     	;# 
  8129  0710                     	;# 
  8130  0711                     	;# 
  8131  0712                     	;# 
  8132  0713                     	;# 
  8133  0714                     	;# 
  8134  0716                     	;# 
  8135  0717                     	;# 
  8136  0718                     	;# 
  8137  0719                     	;# 
  8138  071A                     	;# 
  8139  071B                     	;# 
  8140  071C                     	;# 
  8141  071D                     	;# 
  8142  071E                     	;# 
  8143  0796                     	;# 
  8144  0797                     	;# 
  8145  0798                     	;# 
  8146  0799                     	;# 
  8147  079A                     	;# 
  8148  079B                     	;# 
  8149  079C                     	;# 
  8150  079D                     	;# 
  8151  080C                     	;# 
  8152  080D                     	;# 
  8153  080E                     	;# 
  8154  080F                     	;# 
  8155  0810                     	;# 
  8156  0811                     	;# 
  8157  0812                     	;# 
  8158  0813                     	;# 
  8159  0814                     	;# 
  8160  081A                     	;# 
  8161  081A                     	;# 
  8162  081B                     	;# 
  8163  081C                     	;# 
  8164  081C                     	;# 
  8165  081D                     	;# 
  8166  081E                     	;# 
  8167  081F                     	;# 
  8168  088C                     	;# 
  8169  088D                     	;# 
  8170  088E                     	;# 
  8171  088F                     	;# 
  8172  0890                     	;# 
  8173  0891                     	;# 
  8174  0892                     	;# 
  8175  0893                     	;# 
  8176  0895                     	;# 
  8177  0896                     	;# 
  8178  0897                     	;# 
  8179  0898                     	;# 
  8180  0899                     	;# 
  8181  089A                     	;# 
  8182  089B                     	;# 
  8183  090C                     	;# 
  8184  090E                     	;# 
  8185  090F                     	;# 
  8186  091F                     	;# 
  8187  098F                     	;# 
  8188  098F                     	;# 
  8189  0990                     	;# 
  8190  0991                     	;# 
  8191  0992                     	;# 
  8192  0993                     	;# 
  8193  0994                     	;# 
  8194  0995                     	;# 
  8195  0996                     	;# 
  8196  0997                     	;# 
  8197  1E0F                     	;# 
  8198  1E10                     	;# 
  8199  1E11                     	;# 
  8200  1E12                     	;# 
  8201  1E13                     	;# 
  8202  1E14                     	;# 
  8203  1E15                     	;# 
  8204  1E16                     	;# 
  8205  1E17                     	;# 
  8206  1E18                     	;# 
  8207  1E19                     	;# 
  8208  1E1A                     	;# 
  8209  1E1B                     	;# 
  8210  1E1C                     	;# 
  8211  1E1D                     	;# 
  8212  1E1E                     	;# 
  8213  1E1F                     	;# 
  8214  1E20                     	;# 
  8215  1E21                     	;# 
  8216  1E22                     	;# 
  8217  1E23                     	;# 
  8218  1E24                     	;# 
  8219  1E25                     	;# 
  8220  1E26                     	;# 
  8221  1E27                     	;# 
  8222  1E28                     	;# 
  8223  1E29                     	;# 
  8224  1E2A                     	;# 
  8225  1E2B                     	;# 
  8226  1E2C                     	;# 
  8227  1E2D                     	;# 
  8228  1E2E                     	;# 
  8229  1E2F                     	;# 
  8230  1E30                     	;# 
  8231  1E31                     	;# 
  8232  1E32                     	;# 
  8233  1E33                     	;# 
  8234  1E34                     	;# 
  8235  1E35                     	;# 
  8236  1E36                     	;# 
  8237  1E37                     	;# 
  8238  1E8F                     	;# 
  8239  1E90                     	;# 
  8240  1E91                     	;# 
  8241  1E92                     	;# 
  8242  1E93                     	;# 
  8243  1E94                     	;# 
  8244  1E95                     	;# 
  8245  1E96                     	;# 
  8246  1E97                     	;# 
  8247  1E9C                     	;# 
  8248  1E9D                     	;# 
  8249  1E9E                     	;# 
  8250  1EA1                     	;# 
  8251  1EA2                     	;# 
  8252  1EA3                     	;# 
  8253  1EA4                     	;# 
  8254  1EA9                     	;# 
  8255  1EAA                     	;# 
  8256  1EB1                     	;# 
  8257  1EB2                     	;# 
  8258  1EB8                     	;# 
  8259  1EB9                     	;# 
  8260  1EBA                     	;# 
  8261  1EBB                     	;# 
  8262  1EBC                     	;# 
  8263  1EBD                     	;# 
  8264  1EBE                     	;# 
  8265  1EC3                     	;# 
  8266  1EC5                     	;# 
  8267  1EC6                     	;# 
  8268  1EC7                     	;# 
  8269  1EC8                     	;# 
  8270  1EC9                     	;# 
  8271  1ECA                     	;# 
  8272  1ECB                     	;# 
  8273  1ECB                     	;# 
  8274  1ECB                     	;# 
  8275  1ECC                     	;# 
  8276  1ECC                     	;# 
  8277  1ECC                     	;# 
  8278  1F10                     	;# 
  8279  1F11                     	;# 
  8280  1F12                     	;# 
  8281  1F14                     	;# 
  8282  1F15                     	;# 
  8283  1F1C                     	;# 
  8284  1F1D                     	;# 
  8285  1F1E                     	;# 
  8286  1F1F                     	;# 
  8287  1F20                     	;# 
  8288  1F21                     	;# 
  8289  1F22                     	;# 
  8290  1F23                     	;# 
  8291  1F24                     	;# 
  8292  1F25                     	;# 
  8293  1F26                     	;# 
  8294  1F27                     	;# 
  8295  1F38                     	;# 
  8296  1F39                     	;# 
  8297  1F3A                     	;# 
  8298  1F3B                     	;# 
  8299  1F3C                     	;# 
  8300  1F3D                     	;# 
  8301  1F3E                     	;# 
  8302  1F3F                     	;# 
  8303  1F43                     	;# 
  8304  1F44                     	;# 
  8305  1F45                     	;# 
  8306  1F46                     	;# 
  8307  1F47                     	;# 
  8308  1F48                     	;# 
  8309  1F49                     	;# 
  8310  1F4A                     	;# 
  8311  1F4E                     	;# 
  8312  1F4F                     	;# 
  8313  1F50                     	;# 
  8314  1F51                     	;# 
  8315  1F52                     	;# 
  8316  1F53                     	;# 
  8317  1F54                     	;# 
  8318  1F55                     	;# 
  8319  1FE4                     	;# 
  8320  1FE5                     	;# 
  8321  1FE6                     	;# 
  8322  1FE7                     	;# 
  8323  1FE8                     	;# 
  8324  1FE8                     	;# 
  8325  1FE9                     	;# 
  8326  1FEA                     	;# 
  8327  1FEB                     	;# 
  8328  1FED                     	;# 
  8329  1FEE                     	;# 
  8330  1FEF                     	;# 
  8331  0000                     	;# 
  8332  0001                     	;# 
  8333  0002                     	;# 
  8334  0003                     	;# 
  8335  0004                     	;# 
  8336  0005                     	;# 
  8337  0006                     	;# 
  8338  0007                     	;# 
  8339  0008                     	;# 
  8340  0009                     	;# 
  8341  000A                     	;# 
  8342  000B                     	;# 
  8343  000C                     	;# 
  8344  000D                     	;# 
  8345  000E                     	;# 
  8346  0012                     	;# 
  8347  0013                     	;# 
  8348  0014                     	;# 
  8349  0018                     	;# 
  8350  0019                     	;# 
  8351  001A                     	;# 
  8352  008C                     	;# 
  8353  008C                     	;# 
  8354  008D                     	;# 
  8355  008E                     	;# 
  8356  008E                     	;# 
  8357  008F                     	;# 
  8358  0090                     	;# 
  8359  0090                     	;# 
  8360  0091                     	;# 
  8361  0092                     	;# 
  8362  0092                     	;# 
  8363  0093                     	;# 
  8364  0094                     	;# 
  8365  0094                     	;# 
  8366  0095                     	;# 
  8367  0096                     	;# 
  8368  0096                     	;# 
  8369  0097                     	;# 
  8370  0098                     	;# 
  8371  0099                     	;# 
  8372  009A                     	;# 
  8373  009B                     	;# 
  8374  009B                     	;# 
  8375  009C                     	;# 
  8376  009D                     	;# 
  8377  009D                     	;# 
  8378  009E                     	;# 
  8379  009F                     	;# 
  8380  010C                     	;# 
  8381  010C                     	;# 
  8382  010D                     	;# 
  8383  010E                     	;# 
  8384  010F                     	;# 
  8385  010F                     	;# 
  8386  0110                     	;# 
  8387  0111                     	;# 
  8388  0112                     	;# 
  8389  0113                     	;# 
  8390  0114                     	;# 
  8391  0115                     	;# 
  8392  0116                     	;# 
  8393  0117                     	;# 
  8394  0118                     	;# 
  8395  0119                     	;# 
  8396  0119                     	;# 
  8397  0119                     	;# 
  8398  011A                     	;# 
  8399  011A                     	;# 
  8400  011A                     	;# 
  8401  011B                     	;# 
  8402  011B                     	;# 
  8403  011B                     	;# 
  8404  011B                     	;# 
  8405  011B                     	;# 
  8406  011C                     	;# 
  8407  011C                     	;# 
  8408  011C                     	;# 
  8409  011D                     	;# 
  8410  011D                     	;# 
  8411  011D                     	;# 
  8412  011E                     	;# 
  8413  011E                     	;# 
  8414  011E                     	;# 
  8415  011F                     	;# 
  8416  011F                     	;# 
  8417  011F                     	;# 
  8418  011F                     	;# 
  8419  011F                     	;# 
  8420  018C                     	;# 
  8421  018D                     	;# 
  8422  018E                     	;# 
  8423  018F                     	;# 
  8424  0190                     	;# 
  8425  0191                     	;# 
  8426  0192                     	;# 
  8427  0196                     	;# 
  8428  0197                     	;# 
  8429  0198                     	;# 
  8430  0199                     	;# 
  8431  019A                     	;# 
  8432  019B                     	;# 
  8433  019C                     	;# 
  8434  020C                     	;# 
  8435  020D                     	;# 
  8436  020E                     	;# 
  8437  020E                     	;# 
  8438  020F                     	;# 
  8439  020F                     	;# 
  8440  0210                     	;# 
  8441  0210                     	;# 
  8442  0211                     	;# 
  8443  0211                     	;# 
  8444  0212                     	;# 
  8445  0213                     	;# 
  8446  0214                     	;# 
  8447  0214                     	;# 
  8448  0215                     	;# 
  8449  0215                     	;# 
  8450  0216                     	;# 
  8451  0216                     	;# 
  8452  0217                     	;# 
  8453  0217                     	;# 
  8454  0218                     	;# 
  8455  0219                     	;# 
  8456  021A                     	;# 
  8457  021A                     	;# 
  8458  021B                     	;# 
  8459  021B                     	;# 
  8460  021C                     	;# 
  8461  021C                     	;# 
  8462  021D                     	;# 
  8463  021D                     	;# 
  8464  021E                     	;# 
  8465  021F                     	;# 
  8466  028C                     	;# 
  8467  028C                     	;# 
  8468  028D                     	;# 
  8469  028D                     	;# 
  8470  028E                     	;# 
  8471  028F                     	;# 
  8472  0290                     	;# 
  8473  0291                     	;# 
  8474  0292                     	;# 
  8475  0292                     	;# 
  8476  0293                     	;# 
  8477  0293                     	;# 
  8478  0294                     	;# 
  8479  0295                     	;# 
  8480  0296                     	;# 
  8481  0297                     	;# 
  8482  0298                     	;# 
  8483  0298                     	;# 
  8484  0299                     	;# 
  8485  0299                     	;# 
  8486  029A                     	;# 
  8487  029B                     	;# 
  8488  029C                     	;# 
  8489  029D                     	;# 
  8490  029F                     	;# 
  8491  030C                     	;# 
  8492  030C                     	;# 
  8493  030D                     	;# 
  8494  030E                     	;# 
  8495  030F                     	;# 
  8496  0310                     	;# 
  8497  0310                     	;# 
  8498  0311                     	;# 
  8499  0312                     	;# 
  8500  0313                     	;# 
  8501  0314                     	;# 
  8502  0314                     	;# 
  8503  0315                     	;# 
  8504  0316                     	;# 
  8505  0317                     	;# 
  8506  0318                     	;# 
  8507  0318                     	;# 
  8508  0319                     	;# 
  8509  031A                     	;# 
  8510  031B                     	;# 
  8511  038C                     	;# 
  8512  038C                     	;# 
  8513  038D                     	;# 
  8514  038E                     	;# 
  8515  0390                     	;# 
  8516  0390                     	;# 
  8517  0391                     	;# 
  8518  0392                     	;# 
  8519  048C                     	;# 
  8520  048C                     	;# 
  8521  048D                     	;# 
  8522  048E                     	;# 
  8523  048F                     	;# 
  8524  048F                     	;# 
  8525  0490                     	;# 
  8526  0491                     	;# 
  8527  0492                     	;# 
  8528  0492                     	;# 
  8529  0493                     	;# 
  8530  0494                     	;# 
  8531  0495                     	;# 
  8532  0495                     	;# 
  8533  0496                     	;# 
  8534  0497                     	;# 
  8535  0498                     	;# 
  8536  0499                     	;# 
  8537  049A                     	;# 
  8538  049B                     	;# 
  8539  049C                     	;# 
  8540  049D                     	;# 
  8541  058C                     	;# 
  8542  058C                     	;# 
  8543  058D                     	;# 
  8544  058E                     	;# 
  8545  058F                     	;# 
  8546  058F                     	;# 
  8547  0590                     	;# 
  8548  0591                     	;# 
  8549  0592                     	;# 
  8550  0593                     	;# 
  8551  059C                     	;# 
  8552  059C                     	;# 
  8553  059D                     	;# 
  8554  059D                     	;# 
  8555  059E                     	;# 
  8556  059F                     	;# 
  8557  060C                     	;# 
  8558  060C                     	;# 
  8559  060D                     	;# 
  8560  060D                     	;# 
  8561  060E                     	;# 
  8562  060F                     	;# 
  8563  0610                     	;# 
  8564  0611                     	;# 
  8565  0612                     	;# 
  8566  0613                     	;# 
  8567  0614                     	;# 
  8568  0616                     	;# 
  8569  0616                     	;# 
  8570  0617                     	;# 
  8571  0617                     	;# 
  8572  0618                     	;# 
  8573  0619                     	;# 
  8574  061A                     	;# 
  8575  061B                     	;# 
  8576  061C                     	;# 
  8577  061D                     	;# 
  8578  061E                     	;# 
  8579  070C                     	;# 
  8580  070D                     	;# 
  8581  070E                     	;# 
  8582  070F                     	;# 
  8583  0710                     	;# 
  8584  0711                     	;# 
  8585  0712                     	;# 
  8586  0713                     	;# 
  8587  0714                     	;# 
  8588  0716                     	;# 
  8589  0717                     	;# 
  8590  0718                     	;# 
  8591  0719                     	;# 
  8592  071A                     	;# 
  8593  071B                     	;# 
  8594  071C                     	;# 
  8595  071D                     	;# 
  8596  071E                     	;# 
  8597  0796                     	;# 
  8598  0797                     	;# 
  8599  0798                     	;# 
  8600  0799                     	;# 
  8601  079A                     	;# 
  8602  079B                     	;# 
  8603  079C                     	;# 
  8604  079D                     	;# 
  8605  080C                     	;# 
  8606  080D                     	;# 
  8607  080E                     	;# 
  8608  080F                     	;# 
  8609  0810                     	;# 
  8610  0811                     	;# 
  8611  0812                     	;# 
  8612  0813                     	;# 
  8613  0814                     	;# 
  8614  081A                     	;# 
  8615  081A                     	;# 
  8616  081B                     	;# 
  8617  081C                     	;# 
  8618  081C                     	;# 
  8619  081D                     	;# 
  8620  081E                     	;# 
  8621  081F                     	;# 
  8622  088C                     	;# 
  8623  088D                     	;# 
  8624  088E                     	;# 
  8625  088F                     	;# 
  8626  0890                     	;# 
  8627  0891                     	;# 
  8628  0892                     	;# 
  8629  0893                     	;# 
  8630  0895                     	;# 
  8631  0896                     	;# 
  8632  0897                     	;# 
  8633  0898                     	;# 
  8634  0899                     	;# 
  8635  089A                     	;# 
  8636  089B                     	;# 
  8637  090C                     	;# 
  8638  090E                     	;# 
  8639  090F                     	;# 
  8640  091F                     	;# 
  8641  098F                     	;# 
  8642  098F                     	;# 
  8643  0990                     	;# 
  8644  0991                     	;# 
  8645  0992                     	;# 
  8646  0993                     	;# 
  8647  0994                     	;# 
  8648  0995                     	;# 
  8649  0996                     	;# 
  8650  0997                     	;# 
  8651  1E0F                     	;# 
  8652  1E10                     	;# 
  8653  1E11                     	;# 
  8654  1E12                     	;# 
  8655  1E13                     	;# 
  8656  1E14                     	;# 
  8657  1E15                     	;# 
  8658  1E16                     	;# 
  8659  1E17                     	;# 
  8660  1E18                     	;# 
  8661  1E19                     	;# 
  8662  1E1A                     	;# 
  8663  1E1B                     	;# 
  8664  1E1C                     	;# 
  8665  1E1D                     	;# 
  8666  1E1E                     	;# 
  8667  1E1F                     	;# 
  8668  1E20                     	;# 
  8669  1E21                     	;# 
  8670  1E22                     	;# 
  8671  1E23                     	;# 
  8672  1E24                     	;# 
  8673  1E25                     	;# 
  8674  1E26                     	;# 
  8675  1E27                     	;# 
  8676  1E28                     	;# 
  8677  1E29                     	;# 
  8678  1E2A                     	;# 
  8679  1E2B                     	;# 
  8680  1E2C                     	;# 
  8681  1E2D                     	;# 
  8682  1E2E                     	;# 
  8683  1E2F                     	;# 
  8684  1E30                     	;# 
  8685  1E31                     	;# 
  8686  1E32                     	;# 
  8687  1E33                     	;# 
  8688  1E34                     	;# 
  8689  1E35                     	;# 
  8690  1E36                     	;# 
  8691  1E37                     	;# 
  8692  1E8F                     	;# 
  8693  1E90                     	;# 
  8694  1E91                     	;# 
  8695  1E92                     	;# 
  8696  1E93                     	;# 
  8697  1E94                     	;# 
  8698  1E95                     	;# 
  8699  1E96                     	;# 
  8700  1E97                     	;# 
  8701  1E9C                     	;# 
  8702  1E9D                     	;# 
  8703  1E9E                     	;# 
  8704  1EA1                     	;# 
  8705  1EA2                     	;# 
  8706  1EA3                     	;# 
  8707  1EA4                     	;# 
  8708  1EA9                     	;# 
  8709  1EAA                     	;# 
  8710  1EB1                     	;# 
  8711  1EB2                     	;# 
  8712  1EB8                     	;# 
  8713  1EB9                     	;# 
  8714  1EBA                     	;# 
  8715  1EBB                     	;# 
  8716  1EBC                     	;# 
  8717  1EBD                     	;# 
  8718  1EBE                     	;# 
  8719  1EC3                     	;# 
  8720  1EC5                     	;# 
  8721  1EC6                     	;# 
  8722  1EC7                     	;# 
  8723  1EC8                     	;# 
  8724  1EC9                     	;# 
  8725  1ECA                     	;# 
  8726  1ECB                     	;# 
  8727  1ECB                     	;# 
  8728  1ECB                     	;# 
  8729  1ECC                     	;# 
  8730  1ECC                     	;# 
  8731  1ECC                     	;# 
  8732  1F10                     	;# 
  8733  1F11                     	;# 
  8734  1F12                     	;# 
  8735  1F14                     	;# 
  8736  1F15                     	;# 
  8737  1F1C                     	;# 
  8738  1F1D                     	;# 
  8739  1F1E                     	;# 
  8740  1F1F                     	;# 
  8741  1F20                     	;# 
  8742  1F21                     	;# 
  8743  1F22                     	;# 
  8744  1F23                     	;# 
  8745  1F24                     	;# 
  8746  1F25                     	;# 
  8747  1F26                     	;# 
  8748  1F27                     	;# 
  8749  1F38                     	;# 
  8750  1F39                     	;# 
  8751  1F3A                     	;# 
  8752  1F3B                     	;# 
  8753  1F3C                     	;# 
  8754  1F3D                     	;# 
  8755  1F3E                     	;# 
  8756  1F3F                     	;# 
  8757  1F43                     	;# 
  8758  1F44                     	;# 
  8759  1F45                     	;# 
  8760  1F46                     	;# 
  8761  1F47                     	;# 
  8762  1F48                     	;# 
  8763  1F49                     	;# 
  8764  1F4A                     	;# 
  8765  1F4E                     	;# 
  8766  1F4F                     	;# 
  8767  1F50                     	;# 
  8768  1F51                     	;# 
  8769  1F52                     	;# 
  8770  1F53                     	;# 
  8771  1F54                     	;# 
  8772  1F55                     	;# 
  8773  1FE4                     	;# 
  8774  1FE5                     	;# 
  8775  1FE6                     	;# 
  8776  1FE7                     	;# 
  8777  1FE8                     	;# 
  8778  1FE8                     	;# 
  8779  1FE9                     	;# 
  8780  1FEA                     	;# 
  8781  1FEB                     	;# 
  8782  1FED                     	;# 
  8783  1FEE                     	;# 
  8784  1FEF                     	;_dmxArray
  8785                           
  8786                           	psect	idataBANK1
  8787  092D                     __pidataBANK1:	
  8788                           
  8789                           ;initializer for _delay
  8790  092D  340A               	retlw	10
  8791  092E  3400               	retlw	0
  8792                           
  8793                           ;initializer for _threshold
  8794  092F  3490               	retlw	144
  8795  0930  3406               	retlw	6
  8796                           
  8797                           ;initializer for _incInterval
  8798  0931  3464               	retlw	100
  8799  0932  3400               	retlw	0
  8800                           
  8801                           ;initializer for _address
  8802  0933  3401               	retlw	1
  8803  0934  3400               	retlw	0
  8804                           
  8805                           	psect	idataBANK2
  8806  0002                     __pidataBANK2:	
  8807                           
  8808                           ;initializer for _initial
  8809  0002  3401               	retlw	1
  8810  0003  3400               	retlw	0
  8811                           
  8812                           	psect	stringtext1
  8813  1000                     __pstringtext1:	
  8814  1000                     _charTable:	
  8815  1000  3400               	retlw	0
  8816  1001  3482               	retlw	130
  8817  1002  3421               	retlw	33
  8818  1003  3400               	retlw	0
  8819  1004  3400               	retlw	0
  8820  1005  3400               	retlw	0
  8821  1006  3400               	retlw	0
  8822  1007  3402               	retlw	2
  8823  1008  3439               	retlw	57
  8824  1009  340F               	retlw	15
  8825  100A  3400               	retlw	0
  8826  100B  3400               	retlw	0
  8827  100C  3400               	retlw	0
  8828  100D  3440               	retlw	64
  8829  100E  3480               	retlw	128
  8830  100F  3400               	retlw	0
  8831  1010  343F               	retlw	63
  8832  1011  3406               	retlw	6
  8833  1012  345B               	retlw	91
  8834  1013  344F               	retlw	79
  8835  1014  3466               	retlw	102
  8836  1015  346D               	retlw	109
  8837  1016  347D               	retlw	125
  8838  1017  3407               	retlw	7
  8839  1018  347F               	retlw	127
  8840  1019  346F               	retlw	111
  8841  101A  3400               	retlw	0
  8842  101B  3400               	retlw	0
  8843  101C  3400               	retlw	0
  8844  101D  3448               	retlw	72
  8845  101E  3400               	retlw	0
  8846  101F  3453               	retlw	83
  8847  1020  3400               	retlw	0
  8848  1021  3477               	retlw	119
  8849  1022  347C               	retlw	124
  8850  1023  3439               	retlw	57
  8851  1024  345E               	retlw	94
  8852  1025  3479               	retlw	121
  8853  1026  3471               	retlw	113
  8854  1027  346F               	retlw	111
  8855  1028  3476               	retlw	118
  8856  1029  3406               	retlw	6
  8857  102A  341E               	retlw	30
  8858  102B  3400               	retlw	0
  8859  102C  3438               	retlw	56
  8860  102D  3400               	retlw	0
  8861  102E  3454               	retlw	84
  8862  102F  343F               	retlw	63
  8863  1030  3473               	retlw	115
  8864  1031  3467               	retlw	103
  8865  1032  3450               	retlw	80
  8866  1033  346D               	retlw	109
  8867  1034  3478               	retlw	120
  8868  1035  343E               	retlw	62
  8869  1036  3400               	retlw	0
  8870  1037  3400               	retlw	0
  8871  1038  3400               	retlw	0
  8872  1039  346E               	retlw	110
  8873  103A  3400               	retlw	0
  8874  103B  3439               	retlw	57
  8875  103C  3400               	retlw	0
  8876  103D  340F               	retlw	15
  8877  103E  3400               	retlw	0
  8878  103F  3408               	retlw	8
  8879  1040  3463               	retlw	99
  8880  1041  345F               	retlw	95
  8881  1042  347C               	retlw	124
  8882  1043  3458               	retlw	88
  8883  1044  345E               	retlw	94
  8884  1045  347B               	retlw	123
  8885  1046  3471               	retlw	113
  8886  1047  346F               	retlw	111
  8887  1048  3474               	retlw	116
  8888  1049  3402               	retlw	2
  8889  104A  341E               	retlw	30
  8890  104B  3400               	retlw	0
  8891  104C  3406               	retlw	6
  8892  104D  3400               	retlw	0
  8893  104E  3454               	retlw	84
  8894  104F  345C               	retlw	92
  8895  1050  3473               	retlw	115
  8896  1051  3467               	retlw	103
  8897  1052  3450               	retlw	80
  8898  1053  346D               	retlw	109
  8899  1054  3478               	retlw	120
  8900  1055  341C               	retlw	28
  8901  1056  3400               	retlw	0
  8902  1057  3400               	retlw	0
  8903  1058  3400               	retlw	0
  8904  1059  346E               	retlw	110
  8905  105A  3400               	retlw	0
  8906  105B  3439               	retlw	57
  8907  105C  3430               	retlw	48
  8908  105D  340F               	retlw	15
  8909  105E  3400               	retlw	0
  8910  105F  3400               	retlw	0
  8911  1060                     __end_of_charTable:	
  8912                           
  8913                           	psect	nvBANK2
  8914  0144                     __pnvBANK2:	
  8915  0144                     _ADCC_ADTI_InterruptHandler:	
  8916  0144                     	ds	2
  8917  0146                     _TMR0_InterruptHandler:	
  8918  0146                     	ds	2
  8919  0148                     _EUSART1_ErrorHandler:	
  8920  0148                     	ds	2
  8921  014A                     _EUSART1_OverrunErrorHandler:	
  8922  014A                     	ds	2
  8923  014C                     _EUSART1_FramingErrorHandler:	
  8924  014C                     	ds	2
  8925  014E                     _EUSART1_RxDefaultInterruptHandler:	
  8926  014E                     	ds	2
  8927  001A                     _LATCbits	set	26
  8928  0014                     _TRISCbits	set	20
  8929  0012                     _TRISAbits	set	18
  8930  000B                     _INTCONbits	set	11
  8931  0014                     _TRISC	set	20
  8932  0013                     _TRISB	set	19
  8933  0012                     _TRISA	set	18
  8934  001A                     _LATC	set	26
  8935  0019                     _LATB	set	25
  8936  0018                     _LATA	set	24
  8937  000C                     _PORTA	set	12
  8938  000E                     _PORTC	set	14
  8939  0090                     _ADERRL	set	144
  8940  0091                     _ADERRH	set	145
  8941  009B                     _ADPREVL	set	155
  8942  009C                     _ADPREVH	set	156
  8943  0094                     _ADFLTRL	set	148
  8944  0095                     _ADFLTRH	set	149
  8945  0096                     _ADACCL	set	150
  8946  0097                     _ADACCH	set	151
  8947  0099                     _ADCNT	set	153
  8948  009D                     _ADRESL	set	157
  8949  009E                     _ADRESH	set	158
  8950  009F                     _ADPCH	set	159
  8951  009A                     _ADRPT	set	154
  8952  0098                     _ADACCU	set	152
  8953  0093                     _ADSTPTH	set	147
  8954  0092                     _ADSTPTL	set	146
  8955  008F                     _ADUTHH	set	143
  8956  008E                     _ADUTHL	set	142
  8957  008D                     _ADLTHH	set	141
  8958  008C                     _ADLTHL	set	140
  8959  0112                     _ADCON1bits	set	274
  8960  0115                     _ADSTATbits	set	277
  8961  0113                     _ADCON2bits	set	275
  8962  0114                     _ADCON3bits	set	276
  8963  0111                     _ADCON0bits	set	273
  8964  0111                     _ADCON0	set	273
  8965  0118                     _ADCLK	set	280
  8966  0117                     _ADACT	set	279
  8967  0116                     _ADREF	set	278
  8968  0115                     _ADSTAT	set	277
  8969  0114                     _ADCON3	set	276
  8970  0113                     _ADCON2	set	275
  8971  0112                     _ADCON1	set	274
  8972  0110                     _ADPREH	set	272
  8973  010F                     _ADPREL	set	271
  8974  010E                     _ADCAP	set	270
  8975  010D                     _ADACQH	set	269
  8976  010C                     _ADACQL	set	268
  8977  0119                     _RC1REG	set	281
  8978  011D                     _RC1STAbits	set	285
  8979  011A                     _TX1REG	set	282
  8980  011E                     _TX1STAbits	set	286
  8981  011C                     _SP1BRGH	set	284
  8982  011B                     _SP1BRGL	set	283
  8983  011E                     _TX1STA	set	286
  8984  011D                     _RC1STA	set	285
  8985  011F                     _BAUD1CON	set	287
  8986  018C                     _SSP1BUF	set	396
  8987  0191                     _SSP1CON2bits	set	401
  8988  0190                     _SSP1CON1bits	set	400
  8989  018D                     _SSP1ADD	set	397
  8990  0192                     _SSP1CON3	set	402
  8991  0190                     _SSP1CON1	set	400
  8992  018F                     _SSP1STAT	set	399
  8993  021E                     _CCPTMRS0bits	set	542
  8994  028D                     _PR2	set	653
  8995  028C                     _TMR2	set	652
  8996  028E                     _T2CONbits	set	654
  8997  0291                     _T2RSTbits	set	657
  8998  028F                     _T2HLTbits	set	655
  8999  028E                     _T2CON	set	654
  9000  028C                     _T2TMR	set	652
  9001  028D                     _T2PR	set	653
  9002  0291                     _T2RST	set	657
  9003  028F                     _T2HLT	set	655
  9004  0290                     _T2CLKCON	set	656
  9005  0312                     _CCP2CONbits	set	786
  9006  0310                     _CCPR2L	set	784
  9007  0311                     _CCPR2H	set	785
  9008  0312                     _CCP2CON	set	786
  9009  030E                     _CCP1CONbits	set	782
  9010  030C                     _CCPR1L	set	780
  9011  030D                     _CCPR1H	set	781
  9012  030E                     _CCP1CON	set	782
  9013  031A                     _CCP4CONbits	set	794
  9014  0318                     _CCPR4L	set	792
  9015  0319                     _CCPR4H	set	793
  9016  031A                     _CCP4CON	set	794
  9017  0316                     _CCP3CONbits	set	790
  9018  0314                     _CCPR3L	set	788
  9019  0315                     _CCPR3H	set	789
  9020  0316                     _CCP3CON	set	790
  9021  059E                     _T0CON0bits	set	1438
  9022  059E                     _T0CON0	set	1438
  9023  059C                     _TMR0L	set	1436
  9024  059D                     _TMR0H	set	1437
  9025  059F                     _T0CON1	set	1439
  9026  070D                     _PIR1bits	set	1805
  9027  0717                     _PIE1bits	set	1815
  9028  070C                     _PIR0bits	set	1804
  9029  0716                     _PIE0bits	set	1814
  9030  070F                     _PIR3bits	set	1807
  9031  0719                     _PIE3bits	set	1817
  9032  0710                     _PIR4bits	set	1808
  9033  079D                     _PMD7	set	1949
  9034  079C                     _PMD6	set	1948
  9035  079B                     _PMD5	set	1947
  9036  079A                     _PMD4	set	1946
  9037  0799                     _PMD3	set	1945
  9038  0798                     _PMD2	set	1944
  9039  0797                     _PMD1	set	1943
  9040  0796                     _PMD0	set	1942
  9041  0892                     _OSCTUNE	set	2194
  9042  0893                     _OSCFRQ	set	2195
  9043  0891                     _OSCEN	set	2193
  9044  088F                     _OSCCON3	set	2191
  9045  088D                     _OSCCON1	set	2189
  9046  1ECB                     _RX1DTPPS	set	7883
  9047  1EC6                     _SSP1DATPPS	set	7878
  9048  1EC5                     _SSP1CLKPPS	set	7877
  9049  1F4F                     _WPUCbits	set	8015
  9050  1F4E                     _ANSELCbits	set	8014
  9051  1F39                     _WPUAbits	set	7993
  9052  1F38                     _ANSELAbits	set	7992
  9053  1F27                     _RC7PPS	set	7975
  9054  1F26                     _RC6PPS	set	7974
  9055  1F15                     _RA5PPS	set	7957
  9056  1F24                     _RC4PPS	set	7972
  9057  1F23                     _RC3PPS	set	7971
  9058  1F14                     _RA4PPS	set	7956
  9059  1F51                     _SLRCONC	set	8017
  9060  1F46                     _SLRCONB	set	8006
  9061  1F3B                     _SLRCONA	set	7995
  9062  1F50                     _ODCONC	set	8016
  9063  1F45                     _ODCONB	set	8005
  9064  1F3A                     _ODCONA	set	7994
  9065  1F4F                     _WPUC	set	8015
  9066  1F39                     _WPUA	set	7993
  9067  1F44                     _WPUB	set	8004
  9068  1F38                     _ANSELA	set	7992
  9069  1F43                     _ANSELB	set	8003
  9070  1F4E                     _ANSELC	set	8014
  9071                           
  9072                           	psect	stringtext2
  9073  1060                     __pstringtext2:	
  9074  1060                     STR_7:	
  9075  1060  3425               	retlw	37	;'%'
  9076  1061  3463               	retlw	99	;'c'
  9077  1062  3425               	retlw	37	;'%'
  9078  1063  3463               	retlw	99	;'c'
  9079  1064  3425               	retlw	37	;'%'
  9080  1065  3463               	retlw	99	;'c'
  9081  1066  3425               	retlw	37	;'%'
  9082  1067  3463               	retlw	99	;'c'
  9083  1068  340D               	retlw	13
  9084  1069  3400               	retlw	0
  9085                           
  9086                           	psect	stringtext3
  9087  106A                     __pstringtext3:	
  9088  106A                     STR_8:	
  9089  106A  3425               	retlw	37	;'%'
  9090  106B  3463               	retlw	99	;'c'
  9091  106C  3425               	retlw	37	;'%'
  9092  106D  3463               	retlw	99	;'c'
  9093  106E  3425               	retlw	37	;'%'
  9094  106F  3463               	retlw	99	;'c'
  9095  1070  3420               	retlw	32	;' '
  9096  1071  340D               	retlw	13
  9097  1072  3400               	retlw	0
  9098                           
  9099                           	psect	stringtext4
  9100  1073                     __pstringtext4:	
  9101  1073                     STR_6:	
  9102  1073  3420               	retlw	32	;' '
  9103  1074  3425               	retlw	37	;'%'
  9104  1075  3463               	retlw	99	;'c'
  9105  1076  3425               	retlw	37	;'%'
  9106  1077  3463               	retlw	99	;'c'
  9107  1078  3425               	retlw	37	;'%'
  9108  1079  3463               	retlw	99	;'c'
  9109  107A  340D               	retlw	13
  9110  107B  3400               	retlw	0
  9111                           
  9112                           	psect	stringtext5
  9113  107C                     __pstringtext5:	
  9114  107C                     STR_1:	
  9115  107C  3448               	retlw	72	;'H'
  9116  107D  3445               	retlw	69	;'E'
  9117  107E  3459               	retlw	89	;'Y'
  9118  107F  3459               	retlw	89	;'Y'
  9119  1080  3459               	retlw	89	;'Y'
  9120  1081  3459               	retlw	89	;'Y'
  9121  1082  3459               	retlw	89	;'Y'
  9122  1083  3459               	retlw	89	;'Y'
  9123  1084  3400               	retlw	0
  9124                           
  9125                           	psect	stringtext6
  9126  1085                     __pstringtext6:	
  9127  1085                     STR_9:	
  9128  1085  3425               	retlw	37	;'%'
  9129  1086  3463               	retlw	99	;'c'
  9130  1087  3425               	retlw	37	;'%'
  9131  1088  3463               	retlw	99	;'c'
  9132  1089  3420               	retlw	32	;' '
  9133  108A  3420               	retlw	32	;' '
  9134  108B  340D               	retlw	13
  9135  108C  3400               	retlw	0
  9136                           
  9137                           	psect	stringtext7
  9138  108D                     __pstringtext7:	
  9139  108D                     STR_5:	
  9140  108D  3420               	retlw	32	;' '
  9141  108E  3420               	retlw	32	;' '
  9142  108F  3425               	retlw	37	;'%'
  9143  1090  3463               	retlw	99	;'c'
  9144  1091  3425               	retlw	37	;'%'
  9145  1092  3463               	retlw	99	;'c'
  9146  1093  340D               	retlw	13
  9147  1094  3400               	retlw	0
  9148                           
  9149                           	psect	stringtext8
  9150  1095                     __pstringtext8:	
  9151  1095                     STR_10:	
  9152  1095  3425               	retlw	37	;'%'
  9153  1096  3463               	retlw	99	;'c'
  9154  1097  3420               	retlw	32	;' '
  9155  1098  3420               	retlw	32	;' '
  9156  1099  3420               	retlw	32	;' '
  9157  109A  340D               	retlw	13
  9158  109B  3400               	retlw	0
  9159                           
  9160                           	psect	stringtext9
  9161  109C                     __pstringtext9:	
  9162  109C                     STR_4:	
  9163  109C  3420               	retlw	32	;' '
  9164  109D  3420               	retlw	32	;' '
  9165  109E  3420               	retlw	32	;' '
  9166  109F  3425               	retlw	37	;'%'
  9167  10A0  3463               	retlw	99	;'c'
  9168  10A1  340D               	retlw	13
  9169  10A2  3400               	retlw	0
  9170                           
  9171                           	psect	stringtext10
  9172  10A3                     __pstringtext10:	
  9173  10A3                     STR_11:	
  9174  10A3  3420               	retlw	32	;' '
  9175  10A4  3420               	retlw	32	;' '
  9176  10A5  3420               	retlw	32	;' '
  9177  10A6  3420               	retlw	32	;' '
  9178  10A7  340D               	retlw	13
  9179  10A8  3400               	retlw	0
  9180                           
  9181                           	psect	stringtext11
  9182  10A9                     __pstringtext11:	
  9183  10A9                     STR_2:	
  9184  10A9  3420               	retlw	32	;' '
  9185  10AA  3420               	retlw	32	;' '
  9186  10AB  3420               	retlw	32	;' '
  9187  10AC  3420               	retlw	32	;' '
  9188  10AD  3400               	retlw	0
  9189                           
  9190                           	psect	stringtext12
  9191  0000                     __pstringtext12:	
  9192  10A7                     
  9193                           ; #config settings
  9194  0000                     
  9195                           	psect	cinit
  9196  0031                     start_initialization:	
  9197  0031                     __initialization:		;BIGRAM
  9198                           
  9199                           ; Initialize objects allocated to BANK1
  9200  0031  302D               	movlw	low __pidataBANK1
  9201  0032  0084               	movwf	4
  9202  0033  3089               	movlw	(high __pidataBANK1)| (0+128)
  9203  0034  0085               	movwf	5
  9204  0035  0141               	movlb	1	; select bank1
  9205  0036  0012               	moviw fsr0++
  9206  0037  00E8               	movwf	__pdataBANK1& (0+127)
  9207  0038  0012               	moviw fsr0++
  9208  0039  00E9               	movwf	(__pdataBANK1+1)& (0+127)
  9209  003A  0012               	moviw fsr0++
  9210  003B  00EA               	movwf	(__pdataBANK1+2)& (0+127)
  9211  003C  0012               	moviw fsr0++
  9212  003D  00EB               	movwf	(__pdataBANK1+3)& (0+127)
  9213  003E  0012               	moviw fsr0++
  9214  003F  00EC               	movwf	(__pdataBANK1+4)& (0+127)
  9215  0040  0012               	moviw fsr0++
  9216  0041  00ED               	movwf	(__pdataBANK1+5)& (0+127)
  9217  0042  0012               	moviw fsr0++
  9218  0043  00EE               	movwf	(__pdataBANK1+6)& (0+127)
  9219  0044  0012               	moviw fsr0++
  9220  0045  00EF               	movwf	(__pdataBANK1+7)& (0+127)
  9221                           
  9222                           ; Initialize objects allocated to BANK2
  9223  0046  0142               	movlb	2	; select bank2
  9224  0047  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  9225  004A  00D0               	movwf	__pdataBANK2& (0+127)
  9226  004B  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  9227  004E  00D1               	movwf	(__pdataBANK2+1)& (0+127)
  9228                           
  9229                           ; Clear objects allocated to BIGRAM
  9230  004F  30EE               	movlw	low (0+9198)
  9231  0050  0084               	movwf	4
  9232  0051  3023               	movlw	high (0+9198)
  9233  0052  0085               	movwf	5
  9234  0053  3002               	movlw	2
  9235  0054  00FE               	movwf	btemp
  9236  0055  3004               	movlw	4
  9237  0056  00FF               	movwf	btemp+1
  9238  0057  3189  21D9  3180   	fcall	clear_ram0
  9239                           
  9240                           ; Clear objects allocated to COMMON
  9241  005A  01F0               	clrf	__pbssCOMMON& (0+127)
  9242  005B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  9243  005C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  9244  005D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  9245  005E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  9246  005F  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  9247  0060  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  9248                           
  9249                           ; Clear objects allocated to BANK0
  9250  0061  0140               	movlb	0	; select bank0
  9251  0062  01EF               	clrf	__pbssBANK0& (0+127)
  9252                           
  9253                           ; Clear objects allocated to BANK1
  9254  0063  30A0               	movlw	low __pbssBANK1
  9255  0064  0084               	movwf	4
  9256  0065  3000               	movlw	high __pbssBANK1
  9257  0066  0085               	movwf	5
  9258  0067  3026               	movlw	38
  9259  0068  00FE               	movwf	btemp
  9260  0069  3000               	movlw	0
  9261  006A  00FF               	movwf	btemp+1
  9262  006B  3189  21D9  3180   	fcall	clear_ram0
  9263                           
  9264                           ; Clear objects allocated to BANK2
  9265  006E  3020               	movlw	low __pbssBANK2
  9266  006F  0084               	movwf	4
  9267  0070  3001               	movlw	high __pbssBANK2
  9268  0071  0085               	movwf	5
  9269  0072  3024               	movlw	36
  9270  0073  00FE               	movwf	btemp
  9271  0074  3000               	movlw	0
  9272  0075  00FF               	movwf	btemp+1
  9273  0076  3189  21D9  3180   	fcall	clear_ram0
  9274                           
  9275                           ; Clear objects allocated to BANK3
  9276  0079  30A0               	movlw	low __pbssBANK3
  9277  007A  0084               	movwf	4
  9278  007B  3001               	movlw	high __pbssBANK3
  9279  007C  0085               	movwf	5
  9280  007D  3040               	movlw	64
  9281  007E  00FE               	movwf	btemp
  9282  007F  3000               	movlw	0
  9283  0080  00FF               	movwf	btemp+1
  9284  0081  3189  21D9         	fcall	clear_ram0
  9285  0083                     end_of_initialization:	
  9286                           ;End of C runtime variable initialization code
  9287                           
  9288  0083                     __end_of__initialization:	
  9289  0083  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9290  0084  0140               	movlb	0
  9291  0085  318E  2E77         	ljmp	_main	;jump to C main() function
  9292                           
  9293                           	psect	bssCOMMON
  9294  0070                     __pbssCOMMON:	
  9295  0070                     _down:	
  9296  0070                     	ds	1
  9297  0071                     _up:	
  9298  0071                     	ds	1
  9299  0072                     _p_i2c1_current:	
  9300  0072                     	ds	1
  9301  0073                     _p_i2c1_trb_current:	
  9302  0073                     	ds	1
  9303  0074                     _eusart1RxTail:	
  9304  0074                     	ds	1
  9305  0075                     I2C1_ISR@i2c_address:	
  9306  0075                     	ds	2
  9307                           
  9308                           	psect	bssBANK0
  9309  006F                     __pbssBANK0:	
  9310  006F                     _eusart1RxHead:	
  9311  006F                     	ds	1
  9312                           
  9313                           	psect	bssBANK1
  9314  00A0                     __pbssBANK1:	
  9315  00A0                     _i2c1_object:	
  9316  00A0                     	ds	5
  9317  00A5                     _width:	
  9318  00A5                     	ds	2
  9319  00A7                     _flags:	
  9320  00A7                     	ds	2
  9321  00A9                     _lastRun:	
  9322  00A9                     	ds	2
  9323  00AB                     _lastBeat:	
  9324  00AB                     	ds	2
  9325  00AD                     _lastActiveTime:	
  9326  00AD                     	ds	2
  9327  00AF                     _lastIncTime:	
  9328  00AF                     	ds	2
  9329  00B1                     _currentTime:	
  9330  00B1                     	ds	2
  9331  00B3                     _lastTime:	
  9332  00B3                     	ds	2
  9333  00B5                     _lastDetected:	
  9334  00B5                     	ds	1
  9335  00B6                     _thresholdExceeded:	
  9336  00B6                     	ds	1
  9337  00B7                     _detected:	
  9338  00B7                     	ds	1
  9339  00B8                     _position:	
  9340  00B8                     	ds	1
  9341  00B9                     _tm1650_status:	
  9342  00B9                     	ds	1
  9343  00BA                     _enter:	
  9344  00BA                     	ds	1
  9345  00BB                     _menu:	
  9346  00BB                     	ds	1
  9347  00BC                     I2C1_ISR@i2c_10bit_address_restart:	
  9348  00BC                     	ds	1
  9349  00BD                     I2C1_ISR@i2c_bytes_left:	
  9350  00BD                     	ds	1
  9351  00BE                     I2C1_ISR@pi2c_buf_ptr:	
  9352  00BE                     	ds	1
  9353  00BF                     _i2c1_trb_count:	
  9354  00BF                     	ds	1
  9355  00C0                     _i2c1_state:	
  9356  00C0                     	ds	1
  9357  00C1                     _eusart1RxLastError:	
  9358  00C1                     	ds	1
  9359  00C2                     _eusart1RxCount:	
  9360  00C2                     	ds	1
  9361  00C3                     _i2c1_tr_queue:	
  9362  00C3                     	ds	3
  9363                           
  9364                           	psect	dataBANK1
  9365  00E8                     __pdataBANK1:	
  9366  00E8                     _delay:	
  9367  00E8                     	ds	2
  9368  00EA                     _threshold:	
  9369  00EA                     	ds	2
  9370  00EC                     _incInterval:	
  9371  00EC                     	ds	2
  9372  00EE                     _address:	
  9373  00EE                     	ds	2
  9374                           
  9375                           	psect	bssBANK2
  9376  0120                     __pbssBANK2:	
  9377  0120                     _eusart1RxStatusBuffer:	
  9378  0120                     	ds	8
  9379  0128                     _eusart1RxBuffer:	
  9380  0128                     	ds	8
  9381  0130                     _nout:	
  9382  0130                     	ds	2
  9383  0132                     _prec:	
  9384  0132                     	ds	2
  9385  0134                     _lastLedActiveTime:	
  9386  0134                     	ds	2
  9387  0136                     _arrayIndex:	
  9388  0136                     	ds	2
  9389  0138                     _thresholdCount:	
  9390  0138                     	ds	2
  9391  013A                     _bpm:	
  9392  013A                     	ds	2
  9393  013C                     I2C1_MasterRead@trBlock:	
  9394  013C                     	ds	4
  9395  0140                     I2C1_MasterWrite@trBlock:	
  9396  0140                     	ds	4
  9397                           
  9398                           	psect	dataBANK2
  9399  0150                     __pdataBANK2:	
  9400  0150                     _initial:	
  9401  0150                     	ds	2
  9402                           
  9403                           	psect	bssBANK3
  9404  01A0                     __pbssBANK3:	
  9405  01A0                     _dbuf:	
  9406  01A0                     	ds	32
  9407  01C0                     _buttons:	
  9408  01C0                     	ds	32
  9409                           
  9410                           	psect	clrtext
  9411  09D9                     clear_ram0:	
  9412                           ;	Called with FSR0 containing the base address, and
  9413                           ;	btemp/btemp+1 has the size to clear
  9414                           
  9415  09D9  0064               	clrwdt	;clear the watchdog before getting into this loop
  9416  09DA                     clrloop0:	
  9417  09DA  0180               	clrf	0	;clear RAM location pointed to by FSR
  9418  09DB  3101               	addfsr 0,1
  9419  09DC  3001               	movlw	1
  9420  09DD  02FE               	subwf	126,f
  9421  09DE  3000               	movlw	0
  9422  09DF  3BFF               	subwfb	127,f
  9423  09E0  087F               	movf	127,w
  9424  09E1  047E               	iorwf	126,w
  9425  09E2  1903               	btfsc	3,2
  9426  09E3  3400               	retlw	0	;all done for this memory range, return
  9427  09E4  29DA               	goto	clrloop0	;have we reached the end yet?
  9428                           
  9429                           	psect	cstackBANK1
  9430  00C6                     __pcstackBANK1:	
  9431  00C6                     ?_printf:	
  9432  00C6                     printf@fmt:	
  9433                           ; 2 bytes @ 0x0
  9434                           
  9435                           
  9436                           ; 2 bytes @ 0x0
  9437  00C6                     	ds	10
  9438  00D0                     ??_TM1650_scrollPrint:	
  9439                           
  9440                           ; 1 bytes @ 0xA
  9441  00D0                     	ds	14
  9442  00DE                     _TM1650_scrollPrint$3380:	
  9443                           
  9444                           ; 2 bytes @ 0x18
  9445  00DE                     	ds	2
  9446  00E0                     _TM1650_scrollPrint$3379:	
  9447                           
  9448                           ; 2 bytes @ 0x1A
  9449  00E0                     	ds	2
  9450  00E2                     _TM1650_scrollPrint$3378:	
  9451                           
  9452                           ; 2 bytes @ 0x1C
  9453  00E2                     	ds	2
  9454  00E4                     TM1650_scrollPrint@i:	
  9455                           
  9456                           ; 2 bytes @ 0x1E
  9457  00E4                     	ds	2
  9458  00E6                     ??_main:	
  9459                           
  9460                           ; 1 bytes @ 0x20
  9461  00E6                     	ds	2
  9462                           
  9463                           	psect	cstackCOMMON
  9464  0077                     __pcstackCOMMON:	
  9465  0077                     ?_PMD_Initialize:	
  9466  0077                     ?_PIN_MANAGER_Initialize:	
  9467                           ; 1 bytes @ 0x0
  9468                           
  9469  0077                     ?_OSCILLATOR_Initialize:	
  9470                           ; 1 bytes @ 0x0
  9471                           
  9472  0077                     ?_I2C1_Initialize:	
  9473                           ; 1 bytes @ 0x0
  9474                           
  9475  0077                     ?_PWM1_Initialize:	
  9476                           ; 1 bytes @ 0x0
  9477                           
  9478  0077                     ?_PWM2_Initialize:	
  9479                           ; 1 bytes @ 0x0
  9480                           
  9481  0077                     ?_ADCC_Initialize:	
  9482                           ; 1 bytes @ 0x0
  9483                           
  9484  0077                     ?_PWM4_Initialize:	
  9485                           ; 1 bytes @ 0x0
  9486                           
  9487  0077                     ?_PWM3_Initialize:	
  9488                           ; 1 bytes @ 0x0
  9489                           
  9490  0077                     ?_TMR2_Initialize:	
  9491                           ; 1 bytes @ 0x0
  9492                           
  9493  0077                     ?_TMR0_Initialize:	
  9494                           ; 1 bytes @ 0x0
  9495                           
  9496  0077                     ?_EUSART1_Initialize:	
  9497                           ; 1 bytes @ 0x0
  9498                           
  9499  0077                     ?_EUSART1_Receive_ISR:	
  9500                           ; 1 bytes @ 0x0
  9501                           
  9502  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
  9503                           ; 1 bytes @ 0x0
  9504                           
  9505  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
  9506                           ; 1 bytes @ 0x0
  9507                           
  9508  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
  9509                           ; 1 bytes @ 0x0
  9510                           
  9511  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
  9512                           ; 1 bytes @ 0x0
  9513                           
  9514  0077                     ?_EUSART1_DefaultErrorHandler:	
  9515                           ; 1 bytes @ 0x0
  9516                           
  9517  0077                     ?_EUSART1_RxDataHandler:	
  9518                           ; 1 bytes @ 0x0
  9519                           
  9520  0077                     ??_EUSART1_RxDataHandler:	
  9521                           ; 1 bytes @ 0x0
  9522                           
  9523  0077                     ?_TMR0_ISR:	
  9524                           ; 1 bytes @ 0x0
  9525                           
  9526  0077                     ??_TMR0_ISR:	
  9527                           ; 1 bytes @ 0x0
  9528                           
  9529  0077                     ?_ADCC_ThresholdISR:	
  9530                           ; 1 bytes @ 0x0
  9531                           
  9532  0077                     ??_ADCC_ThresholdISR:	
  9533                           ; 1 bytes @ 0x0
  9534                           
  9535  0077                     ?_I2C1_BusCollisionISR:	
  9536                           ; 1 bytes @ 0x0
  9537                           
  9538  0077                     ??_I2C1_BusCollisionISR:	
  9539                           ; 1 bytes @ 0x0
  9540                           
  9541  0077                     ?_I2C1_ISR:	
  9542                           ; 1 bytes @ 0x0
  9543                           
  9544  0077                     ?_TMR0_DefaultInterruptHandler:	
  9545                           ; 1 bytes @ 0x0
  9546                           
  9547  0077                     ??_TMR0_DefaultInterruptHandler:	
  9548                           ; 1 bytes @ 0x0
  9549                           
  9550  0077                     ?_I2C1_Stop:	
  9551                           ; 1 bytes @ 0x0
  9552                           
  9553  0077                     ??_I2C1_Stop:	
  9554                           ; 1 bytes @ 0x0
  9555                           
  9556  0077                     ?_I2C1_FunctionComplete:	
  9557                           ; 1 bytes @ 0x0
  9558                           
  9559  0077                     ??_I2C1_FunctionComplete:	
  9560                           ; 1 bytes @ 0x0
  9561                           
  9562  0077                     ?_ADCC_DefaultInterruptHandler:	
  9563                           ; 1 bytes @ 0x0
  9564                           
  9565  0077                     ??_ADCC_DefaultInterruptHandler:	
  9566                           ; 1 bytes @ 0x0
  9567                           
  9568  0077                     ?_CLOCK_init:	
  9569                           ; 1 bytes @ 0x0
  9570                           
  9571  0077                     ?_BUTTONS_init:	
  9572                           ; 1 bytes @ 0x0
  9573                           
  9574  0077                     ?_LED_init:	
  9575                           ; 1 bytes @ 0x0
  9576                           
  9577  0077                     ?_TM1650_init:	
  9578                           ; 1 bytes @ 0x0
  9579                           
  9580  0077                     ?_CONTROLLER_init:	
  9581                           ; 1 bytes @ 0x0
  9582                           
  9583  0077                     ?_BEAT_init:	
  9584                           ; 1 bytes @ 0x0
  9585                           
  9586  0077                     ?_BUTTONS_task:	
  9587                           ; 1 bytes @ 0x0
  9588                           
  9589  0077                     ?_CONTROLLER_task:	
  9590                           ; 1 bytes @ 0x0
  9591                           
  9592  0077                     ?_BEAT_task:	
  9593                           ; 1 bytes @ 0x0
  9594                           
  9595  0077                     ?_LED_task:	
  9596                           ; 1 bytes @ 0x0
  9597                           
  9598  0077                     ?_GPIO_init:	
  9599                           ; 1 bytes @ 0x0
  9600                           
  9601  0077                     ?_CLOCK_timerCallback:	
  9602                           ; 1 bytes @ 0x0
  9603                           
  9604  0077                     ??_CLOCK_timerCallback:	
  9605                           ; 1 bytes @ 0x0
  9606                           
  9607  0077                     ?_TM1650_enable:	
  9608                           ; 1 bytes @ 0x0
  9609                           
  9610  0077                     ?_DMX_interrupt:	
  9611                           ; 1 bytes @ 0x0
  9612                           
  9613  0077                     ??_DMX_interrupt:	
  9614                           ; 1 bytes @ 0x0
  9615                           
  9616  0077                     ?_SYSTEM_Initialize:	
  9617                           ; 1 bytes @ 0x0
  9618                           
  9619  0077                     ?_INTERRUPT_InterruptManager:	
  9620                           ; 1 bytes @ 0x0
  9621                           
  9622  0077                     ?_I2C1_WaitForLastPacketToComplete:	
  9623                           ; 1 bytes @ 0x0
  9624                           
  9625  0077                     ?_ADCC_StartConversion:	
  9626                           ; 1 bytes @ 0x0
  9627                           
  9628  0077                     ?_main:	
  9629                           ; 1 bytes @ 0x0
  9630                           
  9631  0077                     ?_BUTTONS_isClicked:	
  9632                           ; 1 bytes @ 0x0
  9633                           
  9634  0077                     ?_BUTTONS_isHeld:	
  9635                           ; 1 bytes @ 0x0
  9636                           
  9637  0077                     ?_address_inc:	
  9638                           ; 1 bytes @ 0x0
  9639                           
  9640  0077                     ?_address_dec:	
  9641                           ; 1 bytes @ 0x0
  9642                           
  9643  0077                     ?_putch:	
  9644                           ; 1 bytes @ 0x0
  9645                           
  9646  0077                     ?_adcThresholdHandler:	
  9647                           ; 1 bytes @ 0x0
  9648                           
  9649  0077                     ??_adcThresholdHandler:	
  9650                           ; 1 bytes @ 0x0
  9651                           
  9652  0077                     ?_BEAT_detected:	
  9653                           ; 1 bytes @ 0x0
  9654                           
  9655                           
  9656                           ; 1 bytes @ 0x0
  9657  0077                     	ds	1
  9658  0078                     ??_EUSART1_Receive_ISR:	
  9659  0078                     ??_EUSART1_DefaultErrorHandler:	
  9660                           ; 1 bytes @ 0x1
  9661                           
  9662  0078                     I2C1_Stop@completion_code:	
  9663                           ; 1 bytes @ 0x1
  9664                           
  9665                           
  9666                           ; 1 bytes @ 0x1
  9667  0078                     	ds	1
  9668  0079                     ??_I2C1_ISR:	
  9669                           
  9670                           ; 1 bytes @ 0x2
  9671  0079                     	ds	4
  9672  007D                     DMX_interrupt@dummy:	
  9673                           
  9674                           ; 1 bytes @ 0x6
  9675  007D                     	ds	1
  9676  007E                     ??_INTERRUPT_InterruptManager:	
  9677                           
  9678                           	psect	cstackBANK0
  9679  0020                     __pcstackBANK0:	
  9680                           ; 1 bytes @ 0x7
  9681                           
  9682  0020                     ??_PMD_Initialize:	
  9683  0020                     ??_PIN_MANAGER_Initialize:	
  9684                           ; 1 bytes @ 0x0
  9685                           
  9686  0020                     ??_OSCILLATOR_Initialize:	
  9687                           ; 1 bytes @ 0x0
  9688                           
  9689  0020                     ??_I2C1_Initialize:	
  9690                           ; 1 bytes @ 0x0
  9691                           
  9692  0020                     ??_PWM1_Initialize:	
  9693                           ; 1 bytes @ 0x0
  9694                           
  9695  0020                     ??_PWM2_Initialize:	
  9696                           ; 1 bytes @ 0x0
  9697                           
  9698  0020                     ??_PWM4_Initialize:	
  9699                           ; 1 bytes @ 0x0
  9700                           
  9701  0020                     ??_PWM3_Initialize:	
  9702                           ; 1 bytes @ 0x0
  9703                           
  9704  0020                     ??_TMR2_Initialize:	
  9705                           ; 1 bytes @ 0x0
  9706                           
  9707  0020                     ?_EUSART1_SetRxInterruptHandler:	
  9708                           ; 1 bytes @ 0x0
  9709                           
  9710  0020                     ?_EUSART1_SetFramingErrorHandler:	
  9711                           ; 1 bytes @ 0x0
  9712                           
  9713  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  9714                           ; 1 bytes @ 0x0
  9715                           
  9716  0020                     ?_EUSART1_SetErrorHandler:	
  9717                           ; 1 bytes @ 0x0
  9718                           
  9719  0020                     ?_TMR0_SetInterruptHandler:	
  9720                           ; 1 bytes @ 0x0
  9721                           
  9722  0020                     ?_I2C1_MasterWriteTRBBuild:	
  9723                           ; 1 bytes @ 0x0
  9724                           
  9725  0020                     ?_I2C1_MasterTRBInsert:	
  9726                           ; 1 bytes @ 0x0
  9727                           
  9728  0020                     ?_ADCC_SetADTIInterruptHandler:	
  9729                           ; 1 bytes @ 0x0
  9730                           
  9731  0020                     ??_LED_init:	
  9732                           ; 1 bytes @ 0x0
  9733                           
  9734  0020                     ??_GPIO_init:	
  9735                           ; 1 bytes @ 0x0
  9736                           
  9737  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  9738                           ; 1 bytes @ 0x0
  9739                           
  9740  0020                     ??_ADCC_StartConversion:	
  9741                           ; 1 bytes @ 0x0
  9742                           
  9743  0020                     ?_ADCC_SetUpperThreshold:	
  9744                           ; 1 bytes @ 0x0
  9745                           
  9746  0020                     ?_init:	
  9747                           ; 1 bytes @ 0x0
  9748                           
  9749  0020                     ??_BUTTONS_isClicked:	
  9750                           ; 1 bytes @ 0x0
  9751                           
  9752  0020                     ??_BUTTONS_isHeld:	
  9753                           ; 1 bytes @ 0x0
  9754                           
  9755  0020                     ??_BEAT_detected:	
  9756                           ; 1 bytes @ 0x0
  9757                           
  9758  0020                     ?_CLOCK_getTime:	
  9759                           ; 1 bytes @ 0x0
  9760                           
  9761  0020                     ?_strlen:	
  9762                           ; 2 bytes @ 0x0
  9763                           
  9764  0020                     ?___lwdiv:	
  9765                           ; 2 bytes @ 0x0
  9766                           
  9767  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  9768                           ; 2 bytes @ 0x0
  9769                           
  9770  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  9771                           ; 1 bytes @ 0x0
  9772                           
  9773  0020                     ADCC_StartConversion@channel:	
  9774                           ; 1 bytes @ 0x0
  9775                           
  9776  0020                     BUTTONS_isClicked@button:	
  9777                           ; 1 bytes @ 0x0
  9778                           
  9779  0020                     BUTTONS_isHeld@button:	
  9780                           ; 1 bytes @ 0x0
  9781                           
  9782  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  9783                           ; 1 bytes @ 0x0
  9784                           
  9785  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  9786                           ; 2 bytes @ 0x0
  9787                           
  9788  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  9789                           ; 2 bytes @ 0x0
  9790                           
  9791  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  9792                           ; 2 bytes @ 0x0
  9793                           
  9794  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  9795                           ; 2 bytes @ 0x0
  9796                           
  9797  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  9798                           ; 2 bytes @ 0x0
  9799                           
  9800  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  9801                           ; 2 bytes @ 0x0
  9802                           
  9803  0020                     init@port:	
  9804                           ; 2 bytes @ 0x0
  9805                           
  9806  0020                     ___lwdiv@divisor:	
  9807                           ; 2 bytes @ 0x0
  9808                           
  9809  0020                     strlen@s:	
  9810                           ; 2 bytes @ 0x0
  9811                           
  9812                           
  9813                           ; 2 bytes @ 0x0
  9814  0020                     	ds	1
  9815  0021                     I2C1_MasterTRBInsert@pflag:	
  9816  0021                     I2C1_MasterWriteTRBBuild@length:	
  9817                           ; 1 bytes @ 0x1
  9818                           
  9819                           
  9820                           ; 1 bytes @ 0x1
  9821  0021                     	ds	1
  9822  0022                     ??_ADCC_Initialize:	
  9823  0022                     ??_TMR0_Initialize:	
  9824                           ; 1 bytes @ 0x2
  9825                           
  9826  0022                     ??_EUSART1_Initialize:	
  9827                           ; 1 bytes @ 0x2
  9828                           
  9829  0022                     ??_EUSART1_SetRxInterruptHandler:	
  9830                           ; 1 bytes @ 0x2
  9831                           
  9832  0022                     ??_EUSART1_SetFramingErrorHandler:	
  9833                           ; 1 bytes @ 0x2
  9834                           
  9835  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  9836                           ; 1 bytes @ 0x2
  9837                           
  9838  0022                     ??_EUSART1_SetErrorHandler:	
  9839                           ; 1 bytes @ 0x2
  9840                           
  9841  0022                     ??_TMR0_SetInterruptHandler:	
  9842                           ; 1 bytes @ 0x2
  9843                           
  9844  0022                     ??_I2C1_MasterTRBInsert:	
  9845                           ; 1 bytes @ 0x2
  9846                           
  9847  0022                     ??_ADCC_SetADTIInterruptHandler:	
  9848                           ; 1 bytes @ 0x2
  9849                           
  9850  0022                     ??_CLOCK_init:	
  9851                           ; 1 bytes @ 0x2
  9852                           
  9853  0022                     ??_BEAT_init:	
  9854                           ; 1 bytes @ 0x2
  9855                           
  9856  0022                     ??_BUTTONS_task:	
  9857                           ; 1 bytes @ 0x2
  9858                           
  9859  0022                     ??_LED_task:	
  9860                           ; 1 bytes @ 0x2
  9861                           
  9862  0022                     ??_CLOCK_getTime:	
  9863                           ; 1 bytes @ 0x2
  9864                           
  9865  0022                     ??_strlen:	
  9866                           ; 1 bytes @ 0x2
  9867                           
  9868  0022                     ??_SYSTEM_Initialize:	
  9869                           ; 1 bytes @ 0x2
  9870                           
  9871  0022                     ??_ADCC_SetUpperThreshold:	
  9872                           ; 1 bytes @ 0x2
  9873                           
  9874  0022                     init@pin:	
  9875                           ; 1 bytes @ 0x2
  9876                           
  9877  0022                     I2C1_MasterWriteTRBBuild@address:	
  9878                           ; 1 bytes @ 0x2
  9879                           
  9880  0022                     ___lwdiv@dividend:	
  9881                           ; 2 bytes @ 0x2
  9882                           
  9883                           
  9884                           ; 2 bytes @ 0x2
  9885  0022                     	ds	1
  9886  0023                     ??_init:	
  9887  0023                     I2C1_MasterTRBInsert@count:	
  9888                           ; 1 bytes @ 0x3
  9889                           
  9890  0023                     strlen@a:	
  9891                           ; 1 bytes @ 0x3
  9892                           
  9893                           
  9894                           ; 2 bytes @ 0x3
  9895  0023                     	ds	1
  9896  0024                     ??_I2C1_MasterWriteTRBBuild:	
  9897  0024                     ??___lwdiv:	
  9898                           ; 1 bytes @ 0x4
  9899                           
  9900  0024                     init@btn:	
  9901                           ; 1 bytes @ 0x4
  9902                           
  9903                           
  9904                           ; 1 bytes @ 0x4
  9905  0024                     	ds	1
  9906  0025                     ??_BUTTONS_init:	
  9907  0025                     BUTTONS_task@i:	
  9908                           ; 1 bytes @ 0x5
  9909                           
  9910  0025                     ___lwdiv@quotient:	
  9911                           ; 1 bytes @ 0x5
  9912                           
  9913                           
  9914                           ; 2 bytes @ 0x5
  9915  0025                     	ds	1
  9916  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  9917  0026                     BUTTONS_task@time:	
  9918                           ; 1 bytes @ 0x6
  9919                           
  9920                           
  9921                           ; 2 bytes @ 0x6
  9922  0026                     	ds	1
  9923  0027                     ?_I2C1_MasterWrite:	
  9924  0027                     I2C1_MasterWrite@length:	
  9925                           ; 1 bytes @ 0x7
  9926                           
  9927  0027                     ___lwdiv@counter:	
  9928                           ; 1 bytes @ 0x7
  9929                           
  9930                           
  9931                           ; 1 bytes @ 0x7
  9932  0027                     	ds	1
  9933  0028                     ??_BEAT_task:	
  9934  0028                     ?___lwmod:	
  9935                           ; 1 bytes @ 0x8
  9936                           
  9937  0028                     BUTTONS_task@btn:	
  9938                           ; 2 bytes @ 0x8
  9939                           
  9940  0028                     I2C1_MasterWrite@address:	
  9941                           ; 1 bytes @ 0x8
  9942                           
  9943  0028                     ___lwmod@divisor:	
  9944                           ; 2 bytes @ 0x8
  9945                           
  9946                           
  9947                           ; 2 bytes @ 0x8
  9948  0028                     	ds	2
  9949  002A                     I2C1_MasterWrite@pflag:	
  9950  002A                     BEAT_task@offset:	
  9951                           ; 1 bytes @ 0xA
  9952                           
  9953  002A                     ___lwmod@dividend:	
  9954                           ; 2 bytes @ 0xA
  9955                           
  9956                           
  9957                           ; 2 bytes @ 0xA
  9958  002A                     	ds	1
  9959  002B                     ??_I2C1_MasterWrite:	
  9960                           
  9961                           ; 1 bytes @ 0xB
  9962  002B                     	ds	1
  9963  002C                     ??___lwmod:	
  9964                           
  9965                           ; 1 bytes @ 0xC
  9966  002C                     	ds	1
  9967  002D                     I2C1_MasterWrite@pdata:	
  9968  002D                     ___lwmod@counter:	
  9969                           ; 1 bytes @ 0xD
  9970                           
  9971                           
  9972                           ; 1 bytes @ 0xD
  9973  002D                     	ds	1
  9974  002E                     ?_writeData:	
  9975  002E                     writeData@data:	
  9976                           ; 1 bytes @ 0xE
  9977                           
  9978                           
  9979                           ; 1 bytes @ 0xE
  9980  002E                     	ds	1
  9981  002F                     ??_writeData:	
  9982                           
  9983                           ; 1 bytes @ 0xF
  9984  002F                     	ds	3
  9985  0032                     writeData@address:	
  9986                           
  9987                           ; 1 bytes @ 0x12
  9988  0032                     	ds	1
  9989  0033                     writeData@status:	
  9990                           
  9991                           ; 1 bytes @ 0x13
  9992  0033                     	ds	1
  9993  0034                     ?_TM1650_fastPrintNum:	
  9994  0034                     ??_TM1650_enable:	
  9995                           ; 1 bytes @ 0x14
  9996                           
  9997  0034                     ?_TM1650_setDigit:	
  9998                           ; 1 bytes @ 0x14
  9999                           
 10000  0034                     TM1650_enable@enable:	
 10001                           ; 1 bytes @ 0x14
 10002                           
 10003  0034                     TM1650_setDigit@data:	
 10004                           ; 1 bytes @ 0x14
 10005                           
 10006  0034                     TM1650_fastPrintNum@num:	
 10007                           ; 1 bytes @ 0x14
 10008                           
 10009                           
 10010                           ; 2 bytes @ 0x14
 10011  0034                     	ds	1
 10012  0035                     ??_TM1650_setDigit:	
 10013                           
 10014                           ; 1 bytes @ 0x15
 10015  0035                     	ds	1
 10016  0036                     ??_TM1650_fastPrintNum:	
 10017  0036                     TM1650_setDigit@digit:	
 10018                           ; 1 bytes @ 0x16
 10019                           
 10020                           
 10021                           ; 1 bytes @ 0x16
 10022  0036                     	ds	1
 10023  0037                     ??_CONTROLLER_init:	
 10024  0037                     ??_CONTROLLER_task:	
 10025                           ; 1 bytes @ 0x17
 10026                           
 10027  0037                     ??_address_inc:	
 10028                           ; 1 bytes @ 0x17
 10029                           
 10030  0037                     ??_address_dec:	
 10031                           ; 1 bytes @ 0x17
 10032                           
 10033  0037                     ??_putch:	
 10034                           ; 1 bytes @ 0x17
 10035                           
 10036                           
 10037                           ; 1 bytes @ 0x17
 10038  0037                     	ds	1
 10039  0038                     putch@n:	
 10040                           
 10041                           ; 1 bytes @ 0x18
 10042  0038                     	ds	1
 10043  0039                     ?_fputc:	
 10044  0039                     CONTROLLER_task@isActive:	
 10045                           ; 2 bytes @ 0x19
 10046                           
 10047  0039                     fputc@c:	
 10048                           ; 1 bytes @ 0x19
 10049                           
 10050                           
 10051                           ; 2 bytes @ 0x19
 10052  0039                     	ds	2
 10053  003B                     fputc@fp:	
 10054                           
 10055                           ; 1 bytes @ 0x1B
 10056  003B                     	ds	1
 10057  003C                     ??_fputc:	
 10058                           
 10059                           ; 1 bytes @ 0x1C
 10060  003C                     	ds	5
 10061  0041                     ?_fputs:	
 10062  0041                     fputs@fp:	
 10063                           ; 2 bytes @ 0x21
 10064                           
 10065                           
 10066                           ; 1 bytes @ 0x21
 10067  0041                     	ds	1
 10068  0042                     ??_fputs:	
 10069                           
 10070                           ; 1 bytes @ 0x22
 10071  0042                     	ds	3
 10072  0045                     fputs@c:	
 10073                           
 10074                           ; 1 bytes @ 0x25
 10075  0045                     	ds	1
 10076  0046                     fputs@i:	
 10077                           
 10078                           ; 2 bytes @ 0x26
 10079  0046                     	ds	2
 10080  0048                     fputs@s:	
 10081                           
 10082                           ; 1 bytes @ 0x28
 10083  0048                     	ds	1
 10084  0049                     ?_pad:	
 10085  0049                     pad@buf:	
 10086                           ; 2 bytes @ 0x29
 10087                           
 10088                           
 10089                           ; 1 bytes @ 0x29
 10090  0049                     	ds	1
 10091  004A                     pad@p:	
 10092                           
 10093                           ; 2 bytes @ 0x2A
 10094  004A                     	ds	2
 10095  004C                     ??_pad:	
 10096                           
 10097                           ; 1 bytes @ 0x2C
 10098  004C                     	ds	1
 10099  004D                     pad@i:	
 10100                           
 10101                           ; 2 bytes @ 0x2D
 10102  004D                     	ds	2
 10103  004F                     pad@w:	
 10104                           
 10105                           ; 2 bytes @ 0x2F
 10106  004F                     	ds	2
 10107  0051                     pad@fp:	
 10108                           
 10109                           ; 1 bytes @ 0x31
 10110  0051                     	ds	1
 10111  0052                     ?_ctoa:	
 10112  0052                     ctoa@c:	
 10113                           ; 2 bytes @ 0x32
 10114                           
 10115                           
 10116                           ; 1 bytes @ 0x32
 10117  0052                     	ds	2
 10118  0054                     ??_ctoa:	
 10119                           
 10120                           ; 1 bytes @ 0x34
 10121  0054                     	ds	1
 10122  0055                     ctoa@w:	
 10123                           
 10124                           ; 2 bytes @ 0x35
 10125  0055                     	ds	2
 10126  0057                     ctoa@fp:	
 10127                           
 10128                           ; 1 bytes @ 0x37
 10129  0057                     	ds	1
 10130  0058                     ?_vfpfcnvrt:	
 10131  0058                     vfpfcnvrt@fmt:	
 10132                           ; 2 bytes @ 0x38
 10133                           
 10134                           
 10135                           ; 1 bytes @ 0x38
 10136  0058                     	ds	1
 10137  0059                     vfpfcnvrt@ap:	
 10138                           
 10139                           ; 1 bytes @ 0x39
 10140  0059                     	ds	1
 10141  005A                     ??_vfpfcnvrt:	
 10142                           
 10143                           ; 1 bytes @ 0x3A
 10144  005A                     	ds	5
 10145  005F                     vfpfcnvrt@c:	
 10146                           
 10147                           ; 1 bytes @ 0x3F
 10148  005F                     	ds	1
 10149  0060                     vfpfcnvrt@fp:	
 10150                           
 10151                           ; 1 bytes @ 0x40
 10152  0060                     	ds	1
 10153  0061                     ?_vfprintf:	
 10154  0061                     vfprintf@fmt:	
 10155                           ; 2 bytes @ 0x41
 10156                           
 10157                           
 10158                           ; 2 bytes @ 0x41
 10159  0061                     	ds	2
 10160  0063                     vfprintf@ap:	
 10161                           
 10162                           ; 1 bytes @ 0x43
 10163  0063                     	ds	1
 10164  0064                     ??_vfprintf:	
 10165                           
 10166                           ; 1 bytes @ 0x44
 10167  0064                     	ds	2
 10168  0066                     vfprintf@fp:	
 10169                           
 10170                           ; 1 bytes @ 0x46
 10171  0066                     	ds	1
 10172  0067                     vfprintf@cfmt:	
 10173                           
 10174                           ; 2 bytes @ 0x47
 10175  0067                     	ds	2
 10176  0069                     ??_printf:	
 10177                           
 10178                           ; 1 bytes @ 0x49
 10179  0069                     	ds	3
 10180  006C                     printf@ap:	
 10181                           
 10182                           ; 1 bytes @ 0x4C
 10183  006C                     	ds	1
 10184  006D                     ??_TM1650_init:	
 10185  006D                     ?_TM1650_scrollPrint:	
 10186                           ; 1 bytes @ 0x4D
 10187                           
 10188  006D                     TM1650_scrollPrint@array:	
 10189                           ; 1 bytes @ 0x4D
 10190                           
 10191                           
 10192                           ; 2 bytes @ 0x4D
 10193  006D                     	ds	2
 10194                           
 10195                           	psect	maintext
 10196  0E77                     __pmaintext:	
 10197 ;;
 10198 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 10199 ;;
 10200 ;; *************** function _main *****************
 10201 ;; Defined at:
 10202 ;;		line 62 in file "main.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : B3F/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10218 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10219 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10220 ;;Total ram usage:        2 bytes
 10221 ;; Hardware stack levels required when called:   18
 10222 ;; This function calls:
 10223 ;;		_BEAT_init
 10224 ;;		_BEAT_task
 10225 ;;		_BUTTONS_init
 10226 ;;		_BUTTONS_task
 10227 ;;		_CLOCK_init
 10228 ;;		_CONTROLLER_init
 10229 ;;		_CONTROLLER_task
 10230 ;;		_LED_init
 10231 ;;		_LED_task
 10232 ;;		_SYSTEM_Initialize
 10233 ;;		_TM1650_init
 10234 ;;		_TM1650_scrollPrint
 10235 ;; This function is called by:
 10236 ;;		Startup code after reset
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240                           
 10241                           ;psect for function _main
 10242  0E77                     _main:	
 10243                           
 10244                           ;main.c: 65:     SYSTEM_Initialize();
 10245                           
 10246                           ;incstack = 0
 10247 ;; hardware stack exceeded
 10248                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10249  0E77  318B  23C3  318E   	fcall	_SYSTEM_Initialize
 10250                           
 10251                           ;main.c: 66:     _delay((unsigned long)((500)*(32000000/4000.0)));
 10252  0E7A  3015               	movlw	21
 10253  0E7B  0141               	movlb	1	; select bank1
 10254  0E7C  00E7               	movwf	(??_main^(0+128)+1)
 10255  0E7D  304B               	movlw	75
 10256  0E7E  00E6               	movwf	??_main^(0+128)
 10257  0E7F  30BE               	movlw	190
 10258  0E80                     u3317:	
 10259  0E80  0B89               	decfsz	9,f
 10260  0E81  2E80               	goto	u3317
 10261  0E82  0BE6               	decfsz	??_main^(0+128),f
 10262  0E83  2E80               	goto	u3317
 10263  0E84  0BE7               	decfsz	(??_main^(0+128)+1),f
 10264  0E85  2E80               	goto	u3317
 10265  0E86  0000               	nop
 10266                           
 10267                           ;main.c: 67:     CLOCK_init();
 10268  0E87  3189  2125  318E   	fcall	_CLOCK_init
 10269                           
 10270                           ;main.c: 68:     BUTTONS_init();
 10271  0E8A  318E  26BD  318E   	fcall	_BUTTONS_init
 10272                           
 10273                           ;main.c: 69:     LED_init();
 10274  0E8D  3189  210F  318E   	fcall	_LED_init
 10275                           
 10276                           ;main.c: 75:     (INTCONbits.GIE = 1);
 10277  0E90  178B               	bsf	11,7	;volatile
 10278                           
 10279                           ;main.c: 78:     (INTCONbits.PEIE = 1);
 10280  0E91  170B               	bsf	11,6	;volatile
 10281                           
 10282                           ;main.c: 86:     TM1650_init();
 10283  0E92  318A  2278  318E   	fcall	_TM1650_init
 10284                           
 10285                           ;main.c: 87:     TM1650_scrollPrint("HEYYYYYY");
 10286  0E95  307C               	movlw	low (STR_1| (0+32768))
 10287  0E96  0140               	movlb	0	; select bank0
 10288  0E97  00ED               	movwf	TM1650_scrollPrint@array
 10289  0E98  3090               	movlw	high (STR_1| (0+32768))
 10290  0E99  00EE               	movwf	TM1650_scrollPrint@array+1
 10291  0E9A  3180  2087  318E   	fcall	_TM1650_scrollPrint
 10292                           
 10293                           ;main.c: 88:     _delay((unsigned long)((200)*(32000000/4000.0)));
 10294  0E9D  3009               	movlw	9
 10295  0E9E  0141               	movlb	1	; select bank1
 10296  0E9F  00E7               	movwf	(??_main^(0+128)+1)
 10297  0EA0  301E               	movlw	30
 10298  0EA1  00E6               	movwf	??_main^(0+128)
 10299  0EA2  30E4               	movlw	228
 10300  0EA3                     u3327:	
 10301  0EA3  0B89               	decfsz	9,f
 10302  0EA4  2EA3               	goto	u3327
 10303  0EA5  0BE6               	decfsz	??_main^(0+128),f
 10304  0EA6  2EA3               	goto	u3327
 10305  0EA7  0BE7               	decfsz	(??_main^(0+128)+1),f
 10306  0EA8  2EA3               	goto	u3327
 10307  0EA9  0000               	nop
 10308                           
 10309                           ;main.c: 89:     CONTROLLER_init();
 10310  0EAA  3189  21A2  318E   	fcall	_CONTROLLER_init
 10311                           
 10312                           ;main.c: 90:     BEAT_init();
 10313  0EAD  318A  22B6  318E   	fcall	_BEAT_init
 10314  0EB0                     l4896:	
 10315                           
 10316                           ;main.c: 93:     {;main.c: 94:         BUTTONS_task();
 10317  0EB0  3184  2453  318E   	fcall	_BUTTONS_task
 10318                           
 10319                           ;main.c: 95:         CONTROLLER_task();
 10320  0EB3  3185  2538  318E   	fcall	_CONTROLLER_task
 10321                           
 10322                           ;main.c: 96:         BEAT_task();
 10323  0EB6  3186  261A  318E   	fcall	_BEAT_task
 10324                           
 10325                           ;main.c: 97:         LED_task();
 10326  0EB9  318C  2481  318E   	fcall	_LED_task
 10327  0EBC  2EB0               	goto	l4896
 10328  0EBD                     __end_of_main:	
 10329                           
 10330                           	psect	text1
 10331  0087                     __ptext1:	
 10332 ;; *************** function _TM1650_scrollPrint *****************
 10333 ;; Defined at:
 10334 ;;		line 65 in file "tm1650.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  array           2   77[BANK0 ] PTR unsigned char 
 10337 ;;		 -> STR_1(9), 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  i               2   30[BANK1 ] int 
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10350 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10351 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10352 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10353 ;;Total ram usage:       24 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:   17
 10356 ;; This function calls:
 10357 ;;		_printf
 10358 ;;		_strlen
 10359 ;; This function is called by:
 10360 ;;		_main
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function _TM1650_scrollPrint
 10366  0087                     _TM1650_scrollPrint:	
 10367                           
 10368                           ;tm1650.c: 67:     printf("   %c\r", array[0]);
 10369                           
 10370                           ;incstack = 0
 10371 ;; hardware stack exceeded
 10372                           ; Regs used in _TM1650_scrollPrint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10373  0087  309C               	movlw	low (STR_4| (0+32768))
 10374  0088  0141               	movlb	1	; select bank1
 10375  0089  00C6               	movwf	printf@fmt^(0+128)
 10376  008A  3090               	movlw	high (STR_4| (0+32768))
 10377  008B  00C7               	movwf	(printf@fmt^(0+128)+1)
 10378  008C  0140               	movlb	0	; select bank0
 10379  008D  086D               	movf	TM1650_scrollPrint@array,w
 10380  008E  0084               	movwf	4
 10381  008F  086E               	movf	TM1650_scrollPrint@array+1,w
 10382  0090  0085               	movwf	5
 10383  0091  0800               	movf	0,w	;code access
 10384  0092  0141               	movlb	1	; select bank1
 10385  0093  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10386  0094  01D1               	clrf	(??_TM1650_scrollPrint^(0+128)+1)
 10387  0095  0850               	movf	??_TM1650_scrollPrint^(0+128),w
 10388  0096  00C8               	movwf	(?_printf^(0+128)+2)
 10389  0097  0851               	movf	(??_TM1650_scrollPrint+1)^(0+128),w
 10390  0098  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10391  0099  318A  22A1  3180   	fcall	_printf
 10392                           
 10393                           ;tm1650.c: 68:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 10394  009C  300B               	movlw	11
 10395  009D  0141               	movlb	1	; select bank1
 10396  009E  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10397  009F  3026               	movlw	38
 10398  00A0  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10399  00A1  305D               	movlw	93
 10400  00A2                     u3337:	
 10401  00A2  0B89               	decfsz	9,f
 10402  00A3  28A2               	goto	u3337
 10403  00A4  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10404  00A5  28A2               	goto	u3337
 10405  00A6  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10406  00A7  28A2               	goto	u3337
 10407  00A8  3200               	nop2
 10408                           
 10409                           ;tm1650.c: 69:     printf("  %c%c\r", array[0], array[1]);
 10410  00A9  308D               	movlw	low (STR_5| (0+32768))
 10411  00AA  0141               	movlb	1	; select bank1
 10412  00AB  00C6               	movwf	printf@fmt^(0+128)
 10413  00AC  3090               	movlw	high (STR_5| (0+32768))
 10414  00AD  00C7               	movwf	(printf@fmt^(0+128)+1)
 10415  00AE  0140               	movlb	0	; select bank0
 10416  00AF  086D               	movf	TM1650_scrollPrint@array,w
 10417  00B0  0084               	movwf	4
 10418  00B1  086E               	movf	TM1650_scrollPrint@array+1,w
 10419  00B2  0085               	movwf	5
 10420  00B3  0800               	movf	0,w	;code access
 10421  00B4  0141               	movlb	1	; select bank1
 10422  00B5  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10423  00B6  01D1               	clrf	(??_TM1650_scrollPrint^(0+128)+1)
 10424  00B7  0850               	movf	??_TM1650_scrollPrint^(0+128),w
 10425  00B8  00C8               	movwf	(?_printf^(0+128)+2)
 10426  00B9  0851               	movf	(??_TM1650_scrollPrint+1)^(0+128),w
 10427  00BA  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10428  00BB  0140               	movlb	0	; select bank0
 10429  00BC  086E               	movf	TM1650_scrollPrint@array+1,w
 10430  00BD  0141               	movlb	1	; select bank1
 10431  00BE  00D3               	movwf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10432  00BF  0140               	movlb	0	; select bank0
 10433  00C0  086D               	movf	TM1650_scrollPrint@array,w
 10434  00C1  0141               	movlb	1	; select bank1
 10435  00C2  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10436  00C3  3001               	movlw	1
 10437  00C4  0752               	addwf	(??_TM1650_scrollPrint+2)^(0+128),w
 10438  00C5  0084               	movwf	4
 10439  00C6  0853               	movf	((??_TM1650_scrollPrint+2)^(0+128)+1),w
 10440  00C7  1803               	skipnc
 10441  00C8  0A53               	incf	((??_TM1650_scrollPrint+2)^(0+128)+1),w
 10442  00C9  0085               	movwf	5
 10443  00CA  0800               	movf	0,w	;code access
 10444  00CB  00D4               	movwf	(??_TM1650_scrollPrint+4)^(0+128)
 10445  00CC  01D5               	clrf	((??_TM1650_scrollPrint+4)^(0+128)+1)
 10446  00CD  0854               	movf	(??_TM1650_scrollPrint+4)^(0+128),w
 10447  00CE  00CA               	movwf	(?_printf^(0+128)+4)
 10448  00CF  0855               	movf	(??_TM1650_scrollPrint+5)^(0+128),w
 10449  00D0  00CB               	movwf	((?_printf+1)^(0+128)+4)
 10450  00D1  318A  22A1  3180   	fcall	_printf
 10451                           
 10452                           ;tm1650.c: 70:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 10453  00D4  300B               	movlw	11
 10454  00D5  0141               	movlb	1	; select bank1
 10455  00D6  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10456  00D7  3026               	movlw	38
 10457  00D8  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10458  00D9  305D               	movlw	93
 10459  00DA                     u3347:	
 10460  00DA  0B89               	decfsz	9,f
 10461  00DB  28DA               	goto	u3347
 10462  00DC  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10463  00DD  28DA               	goto	u3347
 10464  00DE  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10465  00DF  28DA               	goto	u3347
 10466  00E0  3200               	nop2
 10467                           
 10468                           ;tm1650.c: 71:     printf(" %c%c%c\r", array[0], array[1], array[2]);
 10469  00E1  3073               	movlw	low (STR_6| (0+32768))
 10470  00E2  0141               	movlb	1	; select bank1
 10471  00E3  00C6               	movwf	printf@fmt^(0+128)
 10472  00E4  3090               	movlw	high (STR_6| (0+32768))
 10473  00E5  00C7               	movwf	(printf@fmt^(0+128)+1)
 10474  00E6  0140               	movlb	0	; select bank0
 10475  00E7  086D               	movf	TM1650_scrollPrint@array,w
 10476  00E8  0084               	movwf	4
 10477  00E9  086E               	movf	TM1650_scrollPrint@array+1,w
 10478  00EA  0085               	movwf	5
 10479  00EB  0800               	movf	0,w	;code access
 10480  00EC  0141               	movlb	1	; select bank1
 10481  00ED  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10482  00EE  01D1               	clrf	(??_TM1650_scrollPrint^(0+128)+1)
 10483  00EF  0850               	movf	??_TM1650_scrollPrint^(0+128),w
 10484  00F0  00C8               	movwf	(?_printf^(0+128)+2)
 10485  00F1  0851               	movf	(??_TM1650_scrollPrint+1)^(0+128),w
 10486  00F2  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10487  00F3  0140               	movlb	0	; select bank0
 10488  00F4  086E               	movf	TM1650_scrollPrint@array+1,w
 10489  00F5  0141               	movlb	1	; select bank1
 10490  00F6  00D3               	movwf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10491  00F7  0140               	movlb	0	; select bank0
 10492  00F8  086D               	movf	TM1650_scrollPrint@array,w
 10493  00F9  0141               	movlb	1	; select bank1
 10494  00FA  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10495  00FB  3001               	movlw	1
 10496  00FC  0752               	addwf	(??_TM1650_scrollPrint+2)^(0+128),w
 10497  00FD  0084               	movwf	4
 10498  00FE  0853               	movf	((??_TM1650_scrollPrint+2)^(0+128)+1),w
 10499  00FF  1803               	skipnc
 10500  0100  0A53               	incf	((??_TM1650_scrollPrint+2)^(0+128)+1),w
 10501  0101  0085               	movwf	5
 10502  0102  0800               	movf	0,w	;code access
 10503  0103  00D4               	movwf	(??_TM1650_scrollPrint+4)^(0+128)
 10504  0104  01D5               	clrf	((??_TM1650_scrollPrint+4)^(0+128)+1)
 10505  0105  0854               	movf	(??_TM1650_scrollPrint+4)^(0+128),w
 10506  0106  00CA               	movwf	(?_printf^(0+128)+4)
 10507  0107  0855               	movf	(??_TM1650_scrollPrint+5)^(0+128),w
 10508  0108  00CB               	movwf	((?_printf+1)^(0+128)+4)
 10509  0109  0140               	movlb	0	; select bank0
 10510  010A  086E               	movf	TM1650_scrollPrint@array+1,w
 10511  010B  0141               	movlb	1	; select bank1
 10512  010C  00D7               	movwf	((??_TM1650_scrollPrint+6)^(0+128)+1)
 10513  010D  0140               	movlb	0	; select bank0
 10514  010E  086D               	movf	TM1650_scrollPrint@array,w
 10515  010F  0141               	movlb	1	; select bank1
 10516  0110  00D6               	movwf	(??_TM1650_scrollPrint+6)^(0+128)
 10517  0111  3002               	movlw	2
 10518  0112  0756               	addwf	(??_TM1650_scrollPrint+6)^(0+128),w
 10519  0113  0084               	movwf	4
 10520  0114  0857               	movf	((??_TM1650_scrollPrint+6)^(0+128)+1),w
 10521  0115  1803               	skipnc
 10522  0116  0A57               	incf	((??_TM1650_scrollPrint+6)^(0+128)+1),w
 10523  0117  0085               	movwf	5
 10524  0118  0800               	movf	0,w	;code access
 10525  0119  00D8               	movwf	(??_TM1650_scrollPrint+8)^(0+128)
 10526  011A  01D9               	clrf	((??_TM1650_scrollPrint+8)^(0+128)+1)
 10527  011B  0858               	movf	(??_TM1650_scrollPrint+8)^(0+128),w
 10528  011C  00CC               	movwf	(?_printf^(0+128)+6)
 10529  011D  0859               	movf	(??_TM1650_scrollPrint+9)^(0+128),w
 10530  011E  00CD               	movwf	((?_printf+1)^(0+128)+6)
 10531  011F  318A  22A1  3180   	fcall	_printf
 10532                           
 10533                           ;tm1650.c: 72:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 10534  0122  300B               	movlw	11
 10535  0123  0141               	movlb	1	; select bank1
 10536  0124  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10537  0125  3026               	movlw	38
 10538  0126  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10539  0127  305D               	movlw	93
 10540  0128                     u3357:	
 10541  0128  0B89               	decfsz	9,f
 10542  0129  2928               	goto	u3357
 10543  012A  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10544  012B  2928               	goto	u3357
 10545  012C  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10546  012D  2928               	goto	u3357
 10547  012E  3200               	nop2
 10548                           
 10549                           ;tm1650.c: 74:     for(int i = 0; i < strlen(array) - 3; i++){
 10550  012F  0141               	movlb	1	; select bank1
 10551  0130  01E4               	clrf	TM1650_scrollPrint@i^(0+128)
 10552  0131  01E5               	clrf	(TM1650_scrollPrint@i+1)^(0+128)
 10553  0132                     l4668:	
 10554  0132  0140               	movlb	0	; select bank0
 10555  0133  086E               	movf	TM1650_scrollPrint@array+1,w
 10556  0134  00A1               	movwf	strlen@s+1
 10557  0135  086D               	movf	TM1650_scrollPrint@array,w
 10558  0136  00A0               	movwf	strlen@s
 10559  0137  318A  22FD  3180   	fcall	_strlen
 10560  013A  0140               	movlb	0	; select bank0
 10561  013B  0820               	movf	?_strlen,w
 10562  013C  3EFD               	addlw	253
 10563  013D  0141               	movlb	1	; select bank1
 10564  013E  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10565  013F  30FF               	movlw	255
 10566  0140  0140               	movlb	0	; select bank0
 10567  0141  3D21               	addwfc	?_strlen+1,w
 10568  0142  0141               	movlb	1	; select bank1
 10569  0143  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10570  0144  0851               	movf	(??_TM1650_scrollPrint+1)^(0+128),w
 10571  0145  0265               	subwf	(TM1650_scrollPrint@i+1)^(0+128),w
 10572  0146  1D03               	skipz
 10573  0147  294A               	goto	u2925
 10574  0148  0850               	movf	??_TM1650_scrollPrint^(0+128),w
 10575  0149  0264               	subwf	TM1650_scrollPrint@i^(0+128),w
 10576  014A                     u2925:	
 10577  014A  1803               	btfsc	3,0
 10578  014B  29BF               	goto	l4670
 10579                           
 10580                           ;tm1650.c: 75:         printf("%c%c%c%c\r", array[i], array[i+1], array[i+2], array[i+3]
      +                          );
 10581  014C  3060               	movlw	low (STR_7| (0+32768))
 10582  014D  00C6               	movwf	printf@fmt^(0+128)
 10583  014E  3090               	movlw	high (STR_7| (0+32768))
 10584  014F  00C7               	movwf	(printf@fmt^(0+128)+1)
 10585  0150  0140               	movlb	0	; select bank0
 10586  0151  086D               	movf	TM1650_scrollPrint@array,w
 10587  0152  0141               	movlb	1	; select bank1
 10588  0153  0764               	addwf	TM1650_scrollPrint@i^(0+128),w
 10589  0154  0084               	movwf	4
 10590  0155  0140               	movlb	0	; select bank0
 10591  0156  086E               	movf	TM1650_scrollPrint@array+1,w
 10592  0157  0141               	movlb	1	; select bank1
 10593  0158  3D65               	addwfc	(TM1650_scrollPrint@i+1)^(0+128),w
 10594  0159  0085               	movwf	5
 10595  015A  0800               	movf	0,w	;code access
 10596  015B  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10597  015C  01D1               	clrf	(??_TM1650_scrollPrint^(0+128)+1)
 10598  015D  0850               	movf	??_TM1650_scrollPrint^(0+128),w
 10599  015E  00C8               	movwf	(?_printf^(0+128)+2)
 10600  015F  0851               	movf	(??_TM1650_scrollPrint+1)^(0+128),w
 10601  0160  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10602  0161  0864               	movf	TM1650_scrollPrint@i^(0+128),w
 10603  0162  0140               	movlb	0	; select bank0
 10604  0163  076D               	addwf	TM1650_scrollPrint@array,w
 10605  0164  0141               	movlb	1	; select bank1
 10606  0165  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10607  0166  0865               	movf	(TM1650_scrollPrint@i+1)^(0+128),w
 10608  0167  0140               	movlb	0	; select bank0
 10609  0168  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10610  0169  0141               	movlb	1	; select bank1
 10611  016A  00D3               	movwf	(??_TM1650_scrollPrint+3)^(0+128)
 10612  016B  3001               	movlw	1
 10613  016C  0752               	addwf	(??_TM1650_scrollPrint+2)^(0+128),w
 10614  016D  0084               	movwf	4
 10615  016E  0853               	movf	((??_TM1650_scrollPrint+2)^(0+128)+1),w
 10616  016F  1803               	skipnc
 10617  0170  0A53               	incf	((??_TM1650_scrollPrint+2)^(0+128)+1),w
 10618  0171  0085               	movwf	5
 10619  0172  0800               	movf	0,w	;code access
 10620  0173  00D4               	movwf	(??_TM1650_scrollPrint+4)^(0+128)
 10621  0174  01D5               	clrf	((??_TM1650_scrollPrint+4)^(0+128)+1)
 10622  0175  0854               	movf	(??_TM1650_scrollPrint+4)^(0+128),w
 10623  0176  00CA               	movwf	(?_printf^(0+128)+4)
 10624  0177  0855               	movf	(??_TM1650_scrollPrint+5)^(0+128),w
 10625  0178  00CB               	movwf	((?_printf+1)^(0+128)+4)
 10626  0179  0864               	movf	TM1650_scrollPrint@i^(0+128),w
 10627  017A  0140               	movlb	0	; select bank0
 10628  017B  076D               	addwf	TM1650_scrollPrint@array,w
 10629  017C  0141               	movlb	1	; select bank1
 10630  017D  00D6               	movwf	(??_TM1650_scrollPrint+6)^(0+128)
 10631  017E  0865               	movf	(TM1650_scrollPrint@i+1)^(0+128),w
 10632  017F  0140               	movlb	0	; select bank0
 10633  0180  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10634  0181  0141               	movlb	1	; select bank1
 10635  0182  00D7               	movwf	(??_TM1650_scrollPrint+7)^(0+128)
 10636  0183  3002               	movlw	2
 10637  0184  0756               	addwf	(??_TM1650_scrollPrint+6)^(0+128),w
 10638  0185  0084               	movwf	4
 10639  0186  0857               	movf	((??_TM1650_scrollPrint+6)^(0+128)+1),w
 10640  0187  1803               	skipnc
 10641  0188  0A57               	incf	((??_TM1650_scrollPrint+6)^(0+128)+1),w
 10642  0189  0085               	movwf	5
 10643  018A  0800               	movf	0,w	;code access
 10644  018B  00D8               	movwf	(??_TM1650_scrollPrint+8)^(0+128)
 10645  018C  01D9               	clrf	((??_TM1650_scrollPrint+8)^(0+128)+1)
 10646  018D  0858               	movf	(??_TM1650_scrollPrint+8)^(0+128),w
 10647  018E  00CC               	movwf	(?_printf^(0+128)+6)
 10648  018F  0859               	movf	(??_TM1650_scrollPrint+9)^(0+128),w
 10649  0190  00CD               	movwf	((?_printf+1)^(0+128)+6)
 10650  0191  0864               	movf	TM1650_scrollPrint@i^(0+128),w
 10651  0192  0140               	movlb	0	; select bank0
 10652  0193  076D               	addwf	TM1650_scrollPrint@array,w
 10653  0194  0141               	movlb	1	; select bank1
 10654  0195  00DA               	movwf	(??_TM1650_scrollPrint+10)^(0+128)
 10655  0196  0865               	movf	(TM1650_scrollPrint@i+1)^(0+128),w
 10656  0197  0140               	movlb	0	; select bank0
 10657  0198  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10658  0199  0141               	movlb	1	; select bank1
 10659  019A  00DB               	movwf	(??_TM1650_scrollPrint+11)^(0+128)
 10660  019B  3003               	movlw	3
 10661  019C  075A               	addwf	(??_TM1650_scrollPrint+10)^(0+128),w
 10662  019D  0084               	movwf	4
 10663  019E  085B               	movf	((??_TM1650_scrollPrint+10)^(0+128)+1),w
 10664  019F  1803               	skipnc
 10665  01A0  0A5B               	incf	((??_TM1650_scrollPrint+10)^(0+128)+1),w
 10666  01A1  0085               	movwf	5
 10667  01A2  0800               	movf	0,w	;code access
 10668  01A3  00DC               	movwf	(??_TM1650_scrollPrint+12)^(0+128)
 10669  01A4  01DD               	clrf	((??_TM1650_scrollPrint+12)^(0+128)+1)
 10670  01A5  085C               	movf	(??_TM1650_scrollPrint+12)^(0+128),w
 10671  01A6  00CE               	movwf	(?_printf^(0+128)+8)
 10672  01A7  085D               	movf	(??_TM1650_scrollPrint+13)^(0+128),w
 10673  01A8  00CF               	movwf	((?_printf+1)^(0+128)+8)
 10674  01A9  318A  22A1  3180   	fcall	_printf
 10675                           
 10676                           ;tm1650.c: 76:         _delay((unsigned long)((2000)*(4000000/4000.0)));
 10677  01AC  300B               	movlw	11
 10678  01AD  0141               	movlb	1	; select bank1
 10679  01AE  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10680  01AF  3026               	movlw	38
 10681  01B0  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10682  01B1  305D               	movlw	93
 10683  01B2                     u3367:	
 10684  01B2  0B89               	decfsz	9,f
 10685  01B3  29B2               	goto	u3367
 10686  01B4  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10687  01B5  29B2               	goto	u3367
 10688  01B6  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10689  01B7  29B2               	goto	u3367
 10690  01B8  3200               	nop2
 10691                           
 10692                           ;tm1650.c: 77:     }
 10693  01B9  3001               	movlw	1
 10694  01BA  0141               	movlb	1	; select bank1
 10695  01BB  07E4               	addwf	TM1650_scrollPrint@i^(0+128),f
 10696  01BC  3000               	movlw	0
 10697  01BD  3DE5               	addwfc	(TM1650_scrollPrint@i+1)^(0+128),f
 10698  01BE  2932               	goto	l4668
 10699  01BF                     l4670:	
 10700                           
 10701                           ;tm1650.c: 79:     printf("%c%c%c \r", array[strlen(array) - 3], array[strlen(array) - 2
      +                          ], array[strlen(array) - 1]);
 10702  01BF  0140               	movlb	0	; select bank0
 10703  01C0  086E               	movf	TM1650_scrollPrint@array+1,w
 10704  01C1  00A1               	movwf	strlen@s+1
 10705  01C2  086D               	movf	TM1650_scrollPrint@array,w
 10706  01C3  00A0               	movwf	strlen@s
 10707  01C4  318A  22FD  3180   	fcall	_strlen
 10708  01C7  0140               	movlb	0	; select bank0
 10709  01C8  0820               	movf	?_strlen,w
 10710  01C9  076D               	addwf	TM1650_scrollPrint@array,w
 10711  01CA  0141               	movlb	1	; select bank1
 10712  01CB  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10713  01CC  0140               	movlb	0	; select bank0
 10714  01CD  0821               	movf	?_strlen+1,w
 10715  01CE  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10716  01CF  0141               	movlb	1	; select bank1
 10717  01D0  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10718  01D1  30FD               	movlw	253
 10719  01D2  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10720  01D3  0084               	movwf	4
 10721  01D4  30FF               	movlw	255
 10722  01D5  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 10723  01D6  0085               	movwf	5
 10724  01D7  0800               	movf	0,w	;code access
 10725  01D8  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10726  01D9  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10727  01DA  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 10728  01DB  00E2               	movwf	_TM1650_scrollPrint$3378^(0+128)
 10729  01DC  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 10730  01DD  00E3               	movwf	(_TM1650_scrollPrint$3378+1)^(0+128)
 10731                           
 10732                           ;tm1650.c: 79:     printf("%c%c%c \r", array[strlen(array) - 3], array[strlen(array) - 2
      +                          ], array[strlen(array) - 1]);
 10733  01DE  0140               	movlb	0	; select bank0
 10734  01DF  086E               	movf	TM1650_scrollPrint@array+1,w
 10735  01E0  00A1               	movwf	strlen@s+1
 10736  01E1  086D               	movf	TM1650_scrollPrint@array,w
 10737  01E2  00A0               	movwf	strlen@s
 10738  01E3  318A  22FD  3180   	fcall	_strlen
 10739  01E6  0140               	movlb	0	; select bank0
 10740  01E7  0820               	movf	?_strlen,w
 10741  01E8  076D               	addwf	TM1650_scrollPrint@array,w
 10742  01E9  0141               	movlb	1	; select bank1
 10743  01EA  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10744  01EB  0140               	movlb	0	; select bank0
 10745  01EC  0821               	movf	?_strlen+1,w
 10746  01ED  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10747  01EE  0141               	movlb	1	; select bank1
 10748  01EF  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10749  01F0  30FE               	movlw	254
 10750  01F1  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10751  01F2  0084               	movwf	4
 10752  01F3  30FF               	movlw	255
 10753  01F4  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 10754  01F5  0085               	movwf	5
 10755  01F6  0800               	movf	0,w	;code access
 10756  01F7  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10757  01F8  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10758  01F9  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 10759  01FA  00E0               	movwf	_TM1650_scrollPrint$3379^(0+128)
 10760  01FB  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 10761  01FC  00E1               	movwf	(_TM1650_scrollPrint$3379+1)^(0+128)
 10762                           
 10763                           ;tm1650.c: 79:     printf("%c%c%c \r", array[strlen(array) - 3], array[strlen(array) - 2
      +                          ], array[strlen(array) - 1]);
 10764  01FD  0140               	movlb	0	; select bank0
 10765  01FE  086E               	movf	TM1650_scrollPrint@array+1,w
 10766  01FF  00A1               	movwf	strlen@s+1
 10767  0200  086D               	movf	TM1650_scrollPrint@array,w
 10768  0201  00A0               	movwf	strlen@s
 10769  0202  318A  22FD  3180   	fcall	_strlen
 10770  0205  0140               	movlb	0	; select bank0
 10771  0206  0820               	movf	?_strlen,w
 10772  0207  076D               	addwf	TM1650_scrollPrint@array,w
 10773  0208  0141               	movlb	1	; select bank1
 10774  0209  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10775  020A  0140               	movlb	0	; select bank0
 10776  020B  0821               	movf	?_strlen+1,w
 10777  020C  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10778  020D  0141               	movlb	1	; select bank1
 10779  020E  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10780  020F  30FF               	movlw	255
 10781  0210  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10782  0211  0084               	movwf	4
 10783  0212  30FF               	movlw	255
 10784  0213  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 10785  0214  0085               	movwf	5
 10786  0215  0800               	movf	0,w	;code access
 10787  0216  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10788  0217  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10789  0218  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 10790  0219  00DE               	movwf	_TM1650_scrollPrint$3380^(0+128)
 10791  021A  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 10792  021B  00DF               	movwf	(_TM1650_scrollPrint$3380+1)^(0+128)
 10793                           
 10794                           ;tm1650.c: 79:     printf("%c%c%c \r", array[strlen(array) - 3], array[strlen(array) - 2
      +                          ], array[strlen(array) - 1]);
 10795  021C  306A               	movlw	low (STR_8| (0+32768))
 10796  021D  00C6               	movwf	printf@fmt^(0+128)
 10797  021E  3090               	movlw	high (STR_8| (0+32768))
 10798  021F  00C7               	movwf	(printf@fmt^(0+128)+1)
 10799  0220  0863               	movf	(_TM1650_scrollPrint$3378+1)^(0+128),w
 10800  0221  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10801  0222  0862               	movf	_TM1650_scrollPrint$3378^(0+128),w
 10802  0223  00C8               	movwf	(?_printf^(0+128)+2)
 10803  0224  0861               	movf	(_TM1650_scrollPrint$3379+1)^(0+128),w
 10804  0225  00CB               	movwf	((?_printf+1)^(0+128)+4)
 10805  0226  0860               	movf	_TM1650_scrollPrint$3379^(0+128),w
 10806  0227  00CA               	movwf	(?_printf^(0+128)+4)
 10807  0228  085F               	movf	(_TM1650_scrollPrint$3380+1)^(0+128),w
 10808  0229  00CD               	movwf	((?_printf+1)^(0+128)+6)
 10809  022A  085E               	movf	_TM1650_scrollPrint$3380^(0+128),w
 10810  022B  00CC               	movwf	(?_printf^(0+128)+6)
 10811  022C  318A  22A1  3180   	fcall	_printf
 10812                           
 10813                           ;tm1650.c: 80:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 10814  022F  300B               	movlw	11
 10815  0230  0141               	movlb	1	; select bank1
 10816  0231  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10817  0232  3026               	movlw	38
 10818  0233  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10819  0234  305D               	movlw	93
 10820  0235                     u3377:	
 10821  0235  0B89               	decfsz	9,f
 10822  0236  2A35               	goto	u3377
 10823  0237  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10824  0238  2A35               	goto	u3377
 10825  0239  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10826  023A  2A35               	goto	u3377
 10827  023B  3200               	nop2
 10828                           
 10829                           ;tm1650.c: 81:     printf("%c%c  \r", array[strlen(array) - 2], array[strlen(array) - 1]
      +                          );
 10830  023C  0140               	movlb	0	; select bank0
 10831  023D  086E               	movf	TM1650_scrollPrint@array+1,w
 10832  023E  00A1               	movwf	strlen@s+1
 10833  023F  086D               	movf	TM1650_scrollPrint@array,w
 10834  0240  00A0               	movwf	strlen@s
 10835  0241  318A  22FD  3180   	fcall	_strlen
 10836  0244  0140               	movlb	0	; select bank0
 10837  0245  0820               	movf	?_strlen,w
 10838  0246  076D               	addwf	TM1650_scrollPrint@array,w
 10839  0247  0141               	movlb	1	; select bank1
 10840  0248  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10841  0249  0140               	movlb	0	; select bank0
 10842  024A  0821               	movf	?_strlen+1,w
 10843  024B  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10844  024C  0141               	movlb	1	; select bank1
 10845  024D  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10846  024E  30FE               	movlw	254
 10847  024F  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10848  0250  0084               	movwf	4
 10849  0251  30FF               	movlw	255
 10850  0252  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 10851  0253  0085               	movwf	5
 10852  0254  0800               	movf	0,w	;code access
 10853  0255  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10854  0256  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10855  0257  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 10856  0258  00E2               	movwf	_TM1650_scrollPrint$3378^(0+128)
 10857  0259  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 10858  025A  00E3               	movwf	(_TM1650_scrollPrint$3378+1)^(0+128)
 10859                           
 10860                           ;tm1650.c: 81:     printf("%c%c  \r", array[strlen(array) - 2], array[strlen(array) - 1]
      +                          );
 10861  025B  0140               	movlb	0	; select bank0
 10862  025C  086E               	movf	TM1650_scrollPrint@array+1,w
 10863  025D  00A1               	movwf	strlen@s+1
 10864  025E  086D               	movf	TM1650_scrollPrint@array,w
 10865  025F  00A0               	movwf	strlen@s
 10866  0260  318A  22FD  3180   	fcall	_strlen
 10867  0263  0140               	movlb	0	; select bank0
 10868  0264  0820               	movf	?_strlen,w
 10869  0265  076D               	addwf	TM1650_scrollPrint@array,w
 10870  0266  0141               	movlb	1	; select bank1
 10871  0267  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10872  0268  0140               	movlb	0	; select bank0
 10873  0269  0821               	movf	?_strlen+1,w
 10874  026A  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10875  026B  0141               	movlb	1	; select bank1
 10876  026C  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10877  026D  30FF               	movlw	255
 10878  026E  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10879  026F  0084               	movwf	4
 10880  0270  30FF               	movlw	255
 10881  0271  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 10882  0272  0085               	movwf	5
 10883  0273  0800               	movf	0,w	;code access
 10884  0274  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10885  0275  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10886  0276  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 10887  0277  00E0               	movwf	_TM1650_scrollPrint$3379^(0+128)
 10888  0278  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 10889  0279  00E1               	movwf	(_TM1650_scrollPrint$3379+1)^(0+128)
 10890                           
 10891                           ;tm1650.c: 81:     printf("%c%c  \r", array[strlen(array) - 2], array[strlen(array) - 1]
      +                          );
 10892  027A  3085               	movlw	low (STR_9| (0+32768))
 10893  027B  00C6               	movwf	printf@fmt^(0+128)
 10894  027C  3090               	movlw	high (STR_9| (0+32768))
 10895  027D  00C7               	movwf	(printf@fmt^(0+128)+1)
 10896  027E  0863               	movf	(_TM1650_scrollPrint$3378+1)^(0+128),w
 10897  027F  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10898  0280  0862               	movf	_TM1650_scrollPrint$3378^(0+128),w
 10899  0281  00C8               	movwf	(?_printf^(0+128)+2)
 10900  0282  0861               	movf	(_TM1650_scrollPrint$3379+1)^(0+128),w
 10901  0283  00CB               	movwf	((?_printf+1)^(0+128)+4)
 10902  0284  0860               	movf	_TM1650_scrollPrint$3379^(0+128),w
 10903  0285  00CA               	movwf	(?_printf^(0+128)+4)
 10904  0286  318A  22A1  3180   	fcall	_printf
 10905                           
 10906                           ;tm1650.c: 82:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 10907  0289  300B               	movlw	11
 10908  028A  0141               	movlb	1	; select bank1
 10909  028B  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10910  028C  3026               	movlw	38
 10911  028D  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10912  028E  305D               	movlw	93
 10913  028F                     u3387:	
 10914  028F  0B89               	decfsz	9,f
 10915  0290  2A8F               	goto	u3387
 10916  0291  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10917  0292  2A8F               	goto	u3387
 10918  0293  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10919  0294  2A8F               	goto	u3387
 10920  0295  3200               	nop2
 10921                           
 10922                           ;tm1650.c: 83:     printf("%c   \r", array[strlen(array) - 1]);
 10923  0296  0140               	movlb	0	; select bank0
 10924  0297  086E               	movf	TM1650_scrollPrint@array+1,w
 10925  0298  00A1               	movwf	strlen@s+1
 10926  0299  086D               	movf	TM1650_scrollPrint@array,w
 10927  029A  00A0               	movwf	strlen@s
 10928  029B  318A  22FD  3180   	fcall	_strlen
 10929  029E  0140               	movlb	0	; select bank0
 10930  029F  0820               	movf	?_strlen,w
 10931  02A0  076D               	addwf	TM1650_scrollPrint@array,w
 10932  02A1  0141               	movlb	1	; select bank1
 10933  02A2  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10934  02A3  0140               	movlb	0	; select bank0
 10935  02A4  0821               	movf	?_strlen+1,w
 10936  02A5  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10937  02A6  0141               	movlb	1	; select bank1
 10938  02A7  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10939  02A8  30FF               	movlw	255
 10940  02A9  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10941  02AA  0084               	movwf	4
 10942  02AB  30FF               	movlw	255
 10943  02AC  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 10944  02AD  0085               	movwf	5
 10945  02AE  0800               	movf	0,w	;code access
 10946  02AF  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 10947  02B0  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 10948  02B1  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 10949  02B2  00E2               	movwf	_TM1650_scrollPrint$3378^(0+128)
 10950  02B3  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 10951  02B4  00E3               	movwf	(_TM1650_scrollPrint$3378+1)^(0+128)
 10952                           
 10953                           ;tm1650.c: 83:     printf("%c   \r", array[strlen(array) - 1]);
 10954  02B5  3095               	movlw	low (STR_10| (0+32768))
 10955  02B6  00C6               	movwf	printf@fmt^(0+128)
 10956  02B7  3090               	movlw	high (STR_10| (0+32768))
 10957  02B8  00C7               	movwf	(printf@fmt^(0+128)+1)
 10958  02B9  0863               	movf	(_TM1650_scrollPrint$3378+1)^(0+128),w
 10959  02BA  00C9               	movwf	((?_printf+1)^(0+128)+2)
 10960  02BB  0862               	movf	_TM1650_scrollPrint$3378^(0+128),w
 10961  02BC  00C8               	movwf	(?_printf^(0+128)+2)
 10962  02BD  318A  22A1  3180   	fcall	_printf
 10963                           
 10964                           ;tm1650.c: 84:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 10965  02C0  300B               	movlw	11
 10966  02C1  0141               	movlb	1	; select bank1
 10967  02C2  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 10968  02C3  3026               	movlw	38
 10969  02C4  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10970  02C5  305D               	movlw	93
 10971  02C6                     u3397:	
 10972  02C6  0B89               	decfsz	9,f
 10973  02C7  2AC6               	goto	u3397
 10974  02C8  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 10975  02C9  2AC6               	goto	u3397
 10976  02CA  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 10977  02CB  2AC6               	goto	u3397
 10978  02CC  3200               	nop2
 10979                           
 10980                           ;tm1650.c: 85:     printf("    \r", array[strlen(array) - 1]);
 10981  02CD  0140               	movlb	0	; select bank0
 10982  02CE  086E               	movf	TM1650_scrollPrint@array+1,w
 10983  02CF  00A1               	movwf	strlen@s+1
 10984  02D0  086D               	movf	TM1650_scrollPrint@array,w
 10985  02D1  00A0               	movwf	strlen@s
 10986  02D2  318A  22FD  3180   	fcall	_strlen
 10987  02D5  0140               	movlb	0	; select bank0
 10988  02D6  0820               	movf	?_strlen,w
 10989  02D7  076D               	addwf	TM1650_scrollPrint@array,w
 10990  02D8  0141               	movlb	1	; select bank1
 10991  02D9  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 10992  02DA  0140               	movlb	0	; select bank0
 10993  02DB  0821               	movf	?_strlen+1,w
 10994  02DC  3D6E               	addwfc	TM1650_scrollPrint@array+1,w
 10995  02DD  0141               	movlb	1	; select bank1
 10996  02DE  00D1               	movwf	(??_TM1650_scrollPrint+1)^(0+128)
 10997  02DF  30FF               	movlw	255
 10998  02E0  0750               	addwf	??_TM1650_scrollPrint^(0+128),w
 10999  02E1  0084               	movwf	4
 11000  02E2  30FF               	movlw	255
 11001  02E3  3D51               	addwfc	(??_TM1650_scrollPrint+1)^(0+128),w
 11002  02E4  0085               	movwf	5
 11003  02E5  0800               	movf	0,w	;code access
 11004  02E6  00D2               	movwf	(??_TM1650_scrollPrint+2)^(0+128)
 11005  02E7  01D3               	clrf	((??_TM1650_scrollPrint+2)^(0+128)+1)
 11006  02E8  0852               	movf	(??_TM1650_scrollPrint+2)^(0+128),w
 11007  02E9  00E2               	movwf	_TM1650_scrollPrint$3378^(0+128)
 11008  02EA  0853               	movf	(??_TM1650_scrollPrint+3)^(0+128),w
 11009  02EB  00E3               	movwf	(_TM1650_scrollPrint$3378+1)^(0+128)
 11010                           
 11011                           ;tm1650.c: 85:     printf("    \r", array[strlen(array) - 1]);
 11012  02EC  30A3               	movlw	low (STR_11| (0+32768))
 11013  02ED  00C6               	movwf	printf@fmt^(0+128)
 11014  02EE  3090               	movlw	high (STR_11| (0+32768))
 11015  02EF  00C7               	movwf	(printf@fmt^(0+128)+1)
 11016  02F0  0863               	movf	(_TM1650_scrollPrint$3378+1)^(0+128),w
 11017  02F1  00C9               	movwf	((?_printf+1)^(0+128)+2)
 11018  02F2  0862               	movf	_TM1650_scrollPrint$3378^(0+128),w
 11019  02F3  00C8               	movwf	(?_printf^(0+128)+2)
 11020  02F4  318A  22A1  3180   	fcall	_printf
 11021                           
 11022                           ;tm1650.c: 86:     _delay((unsigned long)((2000)*(4000000/4000.0)));
 11023  02F7  300B               	movlw	11
 11024  02F8  0141               	movlb	1	; select bank1
 11025  02F9  00D1               	movwf	(??_TM1650_scrollPrint^(0+128)+1)
 11026  02FA  3026               	movlw	38
 11027  02FB  00D0               	movwf	??_TM1650_scrollPrint^(0+128)
 11028  02FC  305D               	movlw	93
 11029  02FD                     u3407:	
 11030  02FD  0B89               	decfsz	9,f
 11031  02FE  2AFD               	goto	u3407
 11032  02FF  0BD0               	decfsz	??_TM1650_scrollPrint^(0+128),f
 11033  0300  2AFD               	goto	u3407
 11034  0301  0BD1               	decfsz	(??_TM1650_scrollPrint^(0+128)+1),f
 11035  0302  2AFD               	goto	u3407
 11036  0303  3200               	nop2
 11037  0304  0008               	return
 11038  0305                     __end_of_TM1650_scrollPrint:	
 11039                           
 11040                           	psect	text2
 11041  0A78                     __ptext2:	
 11042 ;; *************** function _TM1650_init *****************
 11043 ;; Defined at:
 11044 ;;		line 52 in file "tm1650.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;		None
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;		None
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11062 ;;Total ram usage:        0 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:   17
 11065 ;; This function calls:
 11066 ;;		_TM1650_enable
 11067 ;;		_printf
 11068 ;; This function is called by:
 11069 ;;		_main
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           
 11074                           ;psect for function _TM1650_init
 11075  0A78                     _TM1650_init:	
 11076                           
 11077                           ;tm1650.c: 54:     TM1650_enable(1);
 11078                           
 11079                           ;incstack = 0
 11080 ;; hardware stack exceeded
 11081                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11082  0A78  3001               	movlw	1
 11083  0A79  318A  228C  318A   	fcall	_TM1650_enable
 11084                           
 11085                           ;tm1650.c: 55:     printf("    ");
 11086  0A7C  30A9               	movlw	low (STR_2| (0+32768))
 11087  0A7D  0141               	movlb	1	; select bank1
 11088  0A7E  00C6               	movwf	printf@fmt^(0+128)
 11089  0A7F  3090               	movlw	high (STR_2| (0+32768))
 11090  0A80  00C7               	movwf	(printf@fmt^(0+128)+1)
 11091  0A81  318A  22A1  318A   	fcall	_printf
 11092                           
 11093                           ;tm1650.c: 56:     printf("\r");
 11094  0A84  30A7               	movlw	low ((STR_11+4)| (0+32768))
 11095  0A85  0141               	movlb	1	; select bank1
 11096  0A86  00C6               	movwf	printf@fmt^(0+128)
 11097  0A87  3090               	movlw	high ((STR_11+4)| (0+32768))
 11098  0A88  00C7               	movwf	(printf@fmt^(0+128)+1)
 11099  0A89  318A  22A1         	fcall	_printf
 11100  0A8B  0008               	return
 11101  0A8C                     __end_of_TM1650_init:	
 11102                           
 11103                           	psect	text3
 11104  0AA1                     __ptext3:	
 11105 ;; *************** function _printf *****************
 11106 ;; Defined at:
 11107 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 11110 ;;		 -> STR_11(6), STR_10(7), STR_9(8), STR_8(9), 
 11111 ;;		 -> STR_7(10), STR_6(9), STR_5(8), STR_4(7), 
 11112 ;;		 -> STR_3(2), STR_2(5), 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  ret             2    0        int 
 11115 ;;  ap              1   76[BANK0 ] PTR void [1]
 11116 ;;		 -> ?_printf(2), 
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  2    0[BANK1 ] int 
 11119 ;; Registers used:
 11120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11126 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11127 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11129 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11130 ;;Total ram usage:       14 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:   16
 11133 ;; This function calls:
 11134 ;;		_vfprintf
 11135 ;; This function is called by:
 11136 ;;		_TM1650_init
 11137 ;;		_TM1650_scrollPrint
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           
 11142                           ;psect for function _printf
 11143  0AA1                     _printf:	
 11144                           
 11145                           ;incstack = 0
 11146 ;; hardware stack exceeded
 11147                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11148  0AA1  30C8               	movlw	(low ((?_printf| 0+2)))& (0+255)
 11149  0AA2  0140               	movlb	0	; select bank0
 11150  0AA3  00E9               	movwf	??_printf
 11151  0AA4  0869               	movf	??_printf,w
 11152  0AA5  00EC               	movwf	printf@ap
 11153  0AA6  0141               	movlb	1	; select bank1
 11154  0AA7  0847               	movf	(printf@fmt+1)^(0+128),w
 11155  0AA8  0140               	movlb	0	; select bank0
 11156  0AA9  00E2               	movwf	vfprintf@fmt+1
 11157  0AAA  0141               	movlb	1	; select bank1
 11158  0AAB  0846               	movf	printf@fmt^(0+128),w
 11159  0AAC  0140               	movlb	0	; select bank0
 11160  0AAD  00E1               	movwf	vfprintf@fmt
 11161  0AAE  306C               	movlw	(low (printf@ap| 0))& (0+255)
 11162  0AAF  00E9               	movwf	??_printf
 11163  0AB0  0869               	movf	??_printf,w
 11164  0AB1  00E3               	movwf	vfprintf@ap
 11165  0AB2  3000               	movlw	0
 11166  0AB3  318C  24D9         	fcall	_vfprintf
 11167  0AB5  0008               	return
 11168  0AB6                     __end_of_printf:	
 11169                           
 11170                           	psect	text4
 11171  0CD9                     __ptext4:	
 11172 ;; *************** function _vfprintf *****************
 11173 ;; Defined at:
 11174 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  fp              1    wreg     PTR struct _IO_FILE
 11177 ;;		 -> NULL(0), 
 11178 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 11179 ;;		 -> STR_11(6), STR_10(7), STR_9(8), STR_8(9), 
 11180 ;;		 -> STR_7(10), STR_6(9), STR_5(8), STR_4(7), 
 11181 ;;		 -> STR_3(2), STR_2(5), 
 11182 ;;  ap              1   67[BANK0 ] PTR PTR void 
 11183 ;;		 -> printf@ap(1), 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 11186 ;;		 -> NULL(0), 
 11187 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 11188 ;;		 -> STR_11(6), STR_10(7), STR_9(8), STR_8(9), 
 11189 ;;		 -> STR_7(10), STR_6(9), STR_5(8), STR_4(7), 
 11190 ;;		 -> STR_3(2), STR_2(5), 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  2   65[BANK0 ] int 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11200 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11203 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11204 ;;Total ram usage:        8 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:   15
 11207 ;; This function calls:
 11208 ;;		_vfpfcnvrt
 11209 ;; This function is called by:
 11210 ;;		_printf
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           
 11215                           ;psect for function _vfprintf
 11216  0CD9                     _vfprintf:	
 11217                           
 11218                           ;incstack = 0
 11219 ;; hardware stack exceeded
 11220                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11221                           ;vfprintf@fp stored from wreg
 11222  0CD9  0140               	movlb	0	; select bank0
 11223  0CDA  00E6               	movwf	vfprintf@fp
 11224                           
 11225                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 11226  0CDB  0862               	movf	vfprintf@fmt+1,w
 11227  0CDC  00E8               	movwf	vfprintf@cfmt+1
 11228  0CDD  0861               	movf	vfprintf@fmt,w
 11229  0CDE  00E7               	movwf	vfprintf@cfmt
 11230                           
 11231                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11232  0CDF  0142               	movlb	2	; select bank2
 11233  0CE0  01B0               	clrf	_nout^(0+256)
 11234  0CE1  01B1               	clrf	(_nout+1)^(0+256)
 11235  0CE2                     l4376:	
 11236                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 11237                           
 11238                           
 11239                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 11240  0CE2  0140               	movlb	0	; select bank0
 11241  0CE3  0867               	movf	vfprintf@cfmt,w
 11242  0CE4  0084               	movwf	4
 11243  0CE5  0868               	movf	vfprintf@cfmt+1,w
 11244  0CE6  0085               	movwf	5
 11245  0CE7  0012               	moviw fsr0++
 11246  0CE8  1903               	btfsc	3,2
 11247  0CE9  2CFF               	goto	l4378
 11248                           
 11249                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 11250  0CEA  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11251  0CEB  00E4               	movwf	??_vfprintf
 11252  0CEC  0864               	movf	??_vfprintf,w
 11253  0CED  00D8               	movwf	vfpfcnvrt@fmt
 11254  0CEE  0863               	movf	vfprintf@ap,w
 11255  0CEF  00E5               	movwf	??_vfprintf+1
 11256  0CF0  0865               	movf	??_vfprintf+1,w
 11257  0CF1  00D9               	movwf	vfpfcnvrt@ap
 11258  0CF2  0866               	movf	vfprintf@fp,w
 11259  0CF3  318F  2757  318C   	fcall	_vfpfcnvrt
 11260  0CF6  0140               	movlb	0	; select bank0
 11261  0CF7  0858               	movf	?_vfpfcnvrt,w
 11262  0CF8  0142               	movlb	2	; select bank2
 11263  0CF9  07B0               	addwf	_nout^(0+256),f
 11264  0CFA  0140               	movlb	0	; select bank0
 11265  0CFB  0859               	movf	?_vfpfcnvrt+1,w
 11266  0CFC  0142               	movlb	2	; select bank2
 11267  0CFD  3DB1               	addwfc	(_nout+1)^(0+256),f
 11268  0CFE  2CE2               	goto	l4376
 11269  0CFF                     l4378:	
 11270                           
 11271                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 11272  0CFF  0142               	movlb	2	; select bank2
 11273  0D00  0831               	movf	(_nout+1)^(0+256),w
 11274  0D01  0140               	movlb	0	; select bank0
 11275  0D02  00E2               	movwf	?_vfprintf+1
 11276  0D03  0142               	movlb	2	; select bank2
 11277  0D04  0830               	movf	_nout^(0+256),w
 11278  0D05  0140               	movlb	0	; select bank0
 11279  0D06  00E1               	movwf	?_vfprintf
 11280  0D07  0008               	return
 11281  0D08                     __end_of_vfprintf:	
 11282                           
 11283                           	psect	text5
 11284  0F57                     __ptext5:	
 11285 ;; *************** function _vfpfcnvrt *****************
 11286 ;; Defined at:
 11287 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  fp              1    wreg     PTR struct _IO_FILE
 11290 ;;		 -> NULL(0), 
 11291 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 11292 ;;		 -> vfprintf@cfmt(2), 
 11293 ;;  ap              1   57[BANK0 ] PTR PTR void 
 11294 ;;		 -> printf@ap(1), 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 11297 ;;		 -> NULL(0), 
 11298 ;;  llu             8    0        unsigned long long 
 11299 ;;  ll              8    0        long long 
 11300 ;;  f               4    0        long long 
 11301 ;;  ct              3    0        unsigned char [3]
 11302 ;;  vp              2    0        PTR void 
 11303 ;;  i               2    0        int 
 11304 ;;  done            2    0        int 
 11305 ;;  cp              2    0        PTR unsigned char 
 11306 ;;  c               1   63[BANK0 ] unsigned char 
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  2   56[BANK0 ] int 
 11309 ;; Registers used:
 11310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11318 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11319 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11320 ;;Total ram usage:        9 bytes
 11321 ;; Hardware stack levels used:    1
 11322 ;; Hardware stack levels required when called:   14
 11323 ;; This function calls:
 11324 ;;		_ctoa
 11325 ;;		_fputc
 11326 ;; This function is called by:
 11327 ;;		_vfprintf
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           
 11332                           ;psect for function _vfpfcnvrt
 11333  0F57                     _vfpfcnvrt:	
 11334                           
 11335                           ;incstack = 0
 11336 ;; hardware stack exceeded
 11337                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11338                           ;vfpfcnvrt@fp stored from wreg
 11339  0F57  0140               	movlb	0	; select bank0
 11340  0F58  00E0               	movwf	vfpfcnvrt@fp
 11341                           
 11342                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 11343  0F59  0858               	movf	vfpfcnvrt@fmt,w
 11344  0F5A  0086               	movwf	6
 11345  0F5B  0187               	clrf	7
 11346  0F5C  3F40               	moviw [0]fsr1
 11347  0F5D  00DA               	movwf	??_vfpfcnvrt
 11348  0F5E  3F41               	moviw [1]fsr1
 11349  0F5F  00DB               	movwf	??_vfpfcnvrt+1
 11350  0F60  085A               	movf	??_vfpfcnvrt,w
 11351  0F61  0084               	movwf	4
 11352  0F62  085B               	movf	??_vfpfcnvrt+1,w
 11353  0F63  0085               	movwf	5
 11354  0F64  0012               	moviw fsr0++
 11355  0F65  3A25               	xorlw	37
 11356  0F66  1D03               	btfss	3,2
 11357  0F67  2FDD               	goto	l4342
 11358                           
 11359                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11360  0F68  0858               	movf	vfpfcnvrt@fmt,w
 11361  0F69  0086               	movwf	6
 11362  0F6A  0187               	clrf	7
 11363  0F6B  3001               	movlw	1
 11364  0F6C  0781               	addwf	1,f
 11365  0F6D  3141               	addfsr 1,1
 11366  0F6E  1803               	skipnc
 11367  0F6F  0A81               	incf	1,f
 11368                           
 11369                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 11370  0F70  0141               	movlb	1	; select bank1
 11371  0F71  01A5               	clrf	_width^(0+128)
 11372  0F72  01A6               	clrf	(_width+1)^(0+128)
 11373  0F73  01A7               	clrf	_flags^(0+128)
 11374  0F74  01A8               	clrf	(_flags+1)^(0+128)
 11375                           
 11376                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 11377  0F75  30FF               	movlw	255
 11378  0F76  0142               	movlb	2	; select bank2
 11379  0F77  00B2               	movwf	_prec^(0+256)
 11380  0F78  30FF               	movlw	255
 11381  0F79  00B3               	movwf	(_prec^(0+256)+1)
 11382                           
 11383                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 11384  0F7A  0140               	movlb	0	; select bank0
 11385  0F7B  0858               	movf	vfpfcnvrt@fmt,w
 11386  0F7C  0086               	movwf	6
 11387  0F7D  0187               	clrf	7
 11388  0F7E  3F40               	moviw [0]fsr1
 11389  0F7F  00DA               	movwf	??_vfpfcnvrt
 11390  0F80  3F41               	moviw [1]fsr1
 11391  0F81  00DB               	movwf	??_vfpfcnvrt+1
 11392  0F82  085A               	movf	??_vfpfcnvrt,w
 11393  0F83  0084               	movwf	4
 11394  0F84  085B               	movf	??_vfpfcnvrt+1,w
 11395  0F85  0085               	movwf	5
 11396  0F86  0012               	moviw fsr0++
 11397  0F87  3A63               	xorlw	99
 11398  0F88  1D03               	btfss	3,2
 11399  0F89  2FAB               	goto	l4326
 11400                           
 11401                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 11402  0F8A  0858               	movf	vfpfcnvrt@fmt,w
 11403  0F8B  0086               	movwf	6
 11404  0F8C  0187               	clrf	7
 11405  0F8D  3001               	movlw	1
 11406  0F8E  0781               	addwf	1,f
 11407  0F8F  3141               	addfsr 1,1
 11408  0F90  1803               	skipnc
 11409  0F91  0A81               	incf	1,f
 11410                           
 11411                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11412  0F92  0859               	movf	vfpfcnvrt@ap,w
 11413  0F93  0086               	movwf	6
 11414  0F94  0187               	clrf	7
 11415  0F95  0801               	movf	1,w
 11416  0F96  0084               	movwf	4
 11417  0F97  0185               	clrf	5
 11418  0F98  3002               	movlw	2
 11419  0F99  0781               	addwf	1,f
 11420  0F9A  0800               	movf	0,w
 11421  0F9B  00DA               	movwf	??_vfpfcnvrt
 11422  0F9C  085A               	movf	??_vfpfcnvrt,w
 11423  0F9D  00DF               	movwf	vfpfcnvrt@c
 11424                           
 11425                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 11426  0F9E  085F               	movf	vfpfcnvrt@c,w
 11427  0F9F  00DA               	movwf	??_vfpfcnvrt
 11428  0FA0  085A               	movf	??_vfpfcnvrt,w
 11429  0FA1  00D2               	movwf	ctoa@c
 11430  0FA2  0860               	movf	vfpfcnvrt@fp,w
 11431  0FA3  318D  2508         	fcall	_ctoa
 11432  0FA5  0140               	movlb	0	; select bank0
 11433  0FA6  0853               	movf	?_ctoa+1,w
 11434  0FA7  00D9               	movwf	?_vfpfcnvrt+1
 11435  0FA8  0852               	movf	?_ctoa,w
 11436  0FA9  00D8               	movwf	?_vfpfcnvrt
 11437  0FAA  0008               	return
 11438  0FAB                     l4326:	
 11439                           
 11440                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 11441  0FAB  0858               	movf	vfpfcnvrt@fmt,w
 11442  0FAC  0086               	movwf	6
 11443  0FAD  0187               	clrf	7
 11444  0FAE  3F40               	moviw [0]fsr1
 11445  0FAF  00DA               	movwf	??_vfpfcnvrt
 11446  0FB0  3F41               	moviw [1]fsr1
 11447  0FB1  00DB               	movwf	??_vfpfcnvrt+1
 11448  0FB2  085A               	movf	??_vfpfcnvrt,w
 11449  0FB3  0084               	movwf	4
 11450  0FB4  085B               	movf	??_vfpfcnvrt+1,w
 11451  0FB5  0085               	movwf	5
 11452  0FB6  0012               	moviw fsr0++
 11453  0FB7  3A25               	xorlw	37
 11454  0FB8  1D03               	btfss	3,2
 11455  0FB9  2FD2               	goto	l4336
 11456                           
 11457                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 11458  0FBA  0858               	movf	vfpfcnvrt@fmt,w
 11459  0FBB  0086               	movwf	6
 11460  0FBC  0187               	clrf	7
 11461  0FBD  3001               	movlw	1
 11462  0FBE  0781               	addwf	1,f
 11463  0FBF  3141               	addfsr 1,1
 11464  0FC0  1803               	skipnc
 11465  0FC1  0A81               	incf	1,f
 11466                           
 11467                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 11468  0FC2  3025               	movlw	37
 11469  0FC3  00B9               	movwf	fputc@c
 11470  0FC4  3000               	movlw	0
 11471  0FC5  00BA               	movwf	fputc@c+1
 11472  0FC6  0860               	movf	vfpfcnvrt@fp,w
 11473  0FC7  00DA               	movwf	??_vfpfcnvrt
 11474  0FC8  085A               	movf	??_vfpfcnvrt,w
 11475  0FC9  00BB               	movwf	fputc@fp
 11476  0FCA  318E  2606         	fcall	_fputc
 11477  0FCC                     l4332:	
 11478                           
 11479                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 11480  0FCC  3001               	movlw	1
 11481  0FCD  0140               	movlb	0	; select bank0
 11482  0FCE  00D8               	movwf	?_vfpfcnvrt
 11483  0FCF  3000               	movlw	0
 11484  0FD0  00D9               	movwf	?_vfpfcnvrt+1
 11485  0FD1  0008               	return
 11486  0FD2                     l4336:	
 11487                           
 11488                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 11489  0FD2  0858               	movf	vfpfcnvrt@fmt,w
 11490  0FD3  0086               	movwf	6
 11491  0FD4  0187               	clrf	7
 11492  0FD5  3001               	movlw	1
 11493  0FD6  0781               	addwf	1,f
 11494  0FD7  3141               	addfsr 1,1
 11495  0FD8  1803               	skipnc
 11496  0FD9  0A81               	incf	1,f
 11497                           
 11498                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 11499  0FDA  01D8               	clrf	?_vfpfcnvrt
 11500  0FDB  01D9               	clrf	?_vfpfcnvrt+1
 11501  0FDC  0008               	return
 11502  0FDD                     l4342:	
 11503                           
 11504                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 11505  0FDD  0858               	movf	vfpfcnvrt@fmt,w
 11506  0FDE  0086               	movwf	6
 11507  0FDF  0187               	clrf	7
 11508  0FE0  3F40               	moviw [0]fsr1
 11509  0FE1  00DA               	movwf	??_vfpfcnvrt
 11510  0FE2  3F41               	moviw [1]fsr1
 11511  0FE3  00DB               	movwf	??_vfpfcnvrt+1
 11512  0FE4  085A               	movf	??_vfpfcnvrt,w
 11513  0FE5  0084               	movwf	4
 11514  0FE6  085B               	movf	??_vfpfcnvrt+1,w
 11515  0FE7  0085               	movwf	5
 11516  0FE8  0800               	movf	0,w	;code access
 11517  0FE9  00DC               	movwf	??_vfpfcnvrt+2
 11518  0FEA  01DD               	clrf	??_vfpfcnvrt+3
 11519  0FEB  085C               	movf	??_vfpfcnvrt+2,w
 11520  0FEC  00B9               	movwf	fputc@c
 11521  0FED  085D               	movf	??_vfpfcnvrt+3,w
 11522  0FEE  00BA               	movwf	fputc@c+1
 11523  0FEF  0860               	movf	vfpfcnvrt@fp,w
 11524  0FF0  00DE               	movwf	??_vfpfcnvrt+4
 11525  0FF1  085E               	movf	??_vfpfcnvrt+4,w
 11526  0FF2  00BB               	movwf	fputc@fp
 11527  0FF3  318E  2606  318F   	fcall	_fputc
 11528                           
 11529                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11530  0FF6  0140               	movlb	0	; select bank0
 11531  0FF7  0858               	movf	vfpfcnvrt@fmt,w
 11532  0FF8  0086               	movwf	6
 11533  0FF9  0187               	clrf	7
 11534  0FFA  3001               	movlw	1
 11535  0FFB  0781               	addwf	1,f
 11536  0FFC  3141               	addfsr 1,1
 11537  0FFD  1803               	skipnc
 11538  0FFE  0A81               	incf	1,f
 11539  0FFF  2FCC               	goto	l4332
 11540  1000                     __end_of_vfpfcnvrt:	
 11541                           
 11542                           	psect	text6
 11543  0D08                     __ptext6:	
 11544 ;; *************** function _ctoa *****************
 11545 ;; Defined at:
 11546 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  fp              1    wreg     PTR struct _IO_FILE
 11549 ;;		 -> NULL(0), 
 11550 ;;  c               1   50[BANK0 ] unsigned char 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 11553 ;;		 -> NULL(0), 
 11554 ;;  w               2   53[BANK0 ] int 
 11555 ;;  l               2    0        int 
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  2   50[BANK0 ] int 
 11558 ;; Registers used:
 11559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11566 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11568 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11569 ;;Total ram usage:        6 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:   13
 11572 ;; This function calls:
 11573 ;;		_pad
 11574 ;; This function is called by:
 11575 ;;		_vfpfcnvrt
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579                           
 11580                           ;psect for function _ctoa
 11581  0D08                     _ctoa:	
 11582                           
 11583                           ;incstack = 0
 11584 ;; hardware stack exceeded
 11585                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11586                           ;ctoa@fp stored from wreg
 11587  0D08  0140               	movlb	0	; select bank0
 11588  0D09  00D7               	movwf	ctoa@fp
 11589                           
 11590                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 11591  0D0A  0141               	movlb	1	; select bank1
 11592  0D0B  0825               	movf	_width^(0+128),w
 11593  0D0C  0426               	iorwf	(_width+1)^(0+128),w
 11594  0D0D  1D03               	btfss	3,2
 11595  0D0E  2D17               	goto	l4298
 11596  0D0F  0826               	movf	(_width+1)^(0+128),w
 11597  0D10  0140               	movlb	0	; select bank0
 11598  0D11  00D6               	movwf	ctoa@w+1
 11599  0D12  0141               	movlb	1	; select bank1
 11600  0D13  0825               	movf	_width^(0+128),w
 11601  0D14  0140               	movlb	0	; select bank0
 11602  0D15  00D5               	movwf	ctoa@w
 11603  0D16  2D20               	goto	l4300
 11604  0D17                     l4298:	
 11605  0D17  0825               	movf	_width^(0+128),w
 11606  0D18  3EFF               	addlw	255
 11607  0D19  0140               	movlb	0	; select bank0
 11608  0D1A  00D5               	movwf	ctoa@w
 11609  0D1B  30FF               	movlw	255
 11610  0D1C  0141               	movlb	1	; select bank1
 11611  0D1D  3D26               	addwfc	(_width+1)^(0+128),w
 11612  0D1E  0140               	movlb	0	; select bank0
 11613  0D1F  00D6               	movwf	ctoa@w+1
 11614  0D20                     l4300:	
 11615                           
 11616                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 11617  0D20  0852               	movf	ctoa@c,w
 11618  0D21  00D4               	movwf	??_ctoa
 11619  0D22  0854               	movf	??_ctoa,w
 11620  0D23  0143               	movlb	3	; select bank3
 11621  0D24  00A0               	movwf	_dbuf^(0+384)
 11622                           
 11623                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 11624  0D25  01A1               	clrf	(_dbuf^(0+384)+1)
 11625                           
 11626                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 11627  0D26  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11628  0D27  0140               	movlb	0	; select bank0
 11629  0D28  00D4               	movwf	??_ctoa
 11630  0D29  0854               	movf	??_ctoa,w
 11631  0D2A  00C9               	movwf	pad@buf
 11632  0D2B  0856               	movf	ctoa@w+1,w
 11633  0D2C  00CB               	movwf	pad@p+1
 11634  0D2D  0855               	movf	ctoa@w,w
 11635  0D2E  00CA               	movwf	pad@p
 11636  0D2F  0857               	movf	ctoa@fp,w
 11637  0D30  3187  27AD         	fcall	_pad
 11638  0D32  0140               	movlb	0	; select bank0
 11639  0D33  084A               	movf	?_pad+1,w
 11640  0D34  00D3               	movwf	?_ctoa+1
 11641  0D35  0849               	movf	?_pad,w
 11642  0D36  00D2               	movwf	?_ctoa
 11643  0D37  0008               	return
 11644  0D38                     __end_of_ctoa:	
 11645                           
 11646                           	psect	text7
 11647  07AD                     __ptext7:	
 11648 ;; *************** function _pad *****************
 11649 ;; Defined at:
 11650 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  fp              1    wreg     PTR struct _IO_FILE
 11653 ;;		 -> NULL(0), 
 11654 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 11655 ;;		 -> dbuf(32), 
 11656 ;;  p               2   42[BANK0 ] int 
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 11659 ;;		 -> NULL(0), 
 11660 ;;  w               2   47[BANK0 ] int 
 11661 ;;  i               2   45[BANK0 ] int 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  2   41[BANK0 ] int 
 11664 ;; Registers used:
 11665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11671 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11672 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11674 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11675 ;;Total ram usage:        9 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; Hardware stack levels required when called:   12
 11678 ;; This function calls:
 11679 ;;		_fputc
 11680 ;;		_fputs
 11681 ;;		_strlen
 11682 ;; This function is called by:
 11683 ;;		_ctoa
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           
 11688                           ;psect for function _pad
 11689  07AD                     _pad:	
 11690                           
 11691                           ;incstack = 0
 11692 ;; hardware stack exceeded
 11693                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11694                           ;pad@fp stored from wreg
 11695  07AD  0140               	movlb	0	; select bank0
 11696  07AE  00D1               	movwf	pad@fp
 11697                           
 11698                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 11699  07AF  0141               	movlb	1	; select bank1
 11700  07B0  1C27               	btfss	_flags^(0+128),0
 11701  07B1  2FBB               	goto	l4276
 11702                           
 11703                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 11704  07B2  0140               	movlb	0	; select bank0
 11705  07B3  0851               	movf	pad@fp,w
 11706  07B4  00CC               	movwf	??_pad
 11707  07B5  084C               	movf	??_pad,w
 11708  07B6  00C1               	movwf	fputs@fp
 11709  07B7  0849               	movf	pad@buf,w
 11710  07B8  318C  2431  3187   	fcall	_fputs
 11711  07BB                     l4276:	
 11712                           
 11713                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 11714  07BB  0140               	movlb	0	; select bank0
 11715  07BC  1BCB               	btfsc	pad@p+1,7
 11716  07BD  2FC3               	goto	l4280
 11717  07BE  084B               	movf	pad@p+1,w
 11718  07BF  00D0               	movwf	pad@w+1
 11719  07C0  084A               	movf	pad@p,w
 11720  07C1  00CF               	movwf	pad@w
 11721  07C2  2FC5               	goto	l1325
 11722  07C3                     l4280:	
 11723  07C3  01CF               	clrf	pad@w
 11724  07C4  01D0               	clrf	pad@w+1
 11725  07C5                     l1325:	
 11726                           
 11727                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11728  07C5  01CD               	clrf	pad@i
 11729  07C6  01CE               	clrf	pad@i+1
 11730  07C7                     l4286:	
 11731                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 11732                           
 11733                           
 11734                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 11735  07C7  084E               	movf	pad@i+1,w
 11736  07C8  3A80               	xorlw	128
 11737  07C9  00CC               	movwf	??_pad
 11738  07CA  0850               	movf	pad@w+1,w
 11739  07CB  3A80               	xorlw	128
 11740  07CC  024C               	subwf	??_pad,w
 11741  07CD  1D03               	skipz
 11742  07CE  2FD1               	goto	u2785
 11743  07CF  084F               	movf	pad@w,w
 11744  07D0  024D               	subwf	pad@i,w
 11745  07D1                     u2785:	
 11746  07D1  1803               	btfsc	3,0
 11747  07D2  2FE5               	goto	l1328
 11748                           
 11749                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 11750  07D3  3020               	movlw	32
 11751  07D4  0140               	movlb	0	; select bank0
 11752  07D5  00B9               	movwf	fputc@c
 11753  07D6  3000               	movlw	0
 11754  07D7  00BA               	movwf	fputc@c+1
 11755  07D8  0851               	movf	pad@fp,w
 11756  07D9  00CC               	movwf	??_pad
 11757  07DA  084C               	movf	??_pad,w
 11758  07DB  00BB               	movwf	fputc@fp
 11759  07DC  318E  2606  3187   	fcall	_fputc
 11760                           
 11761                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11762  07DF  3001               	movlw	1
 11763  07E0  0140               	movlb	0	; select bank0
 11764  07E1  07CD               	addwf	pad@i,f
 11765  07E2  3000               	movlw	0
 11766  07E3  3DCE               	addwfc	pad@i+1,f
 11767  07E4  2FC7               	goto	l4286
 11768  07E5                     l1328:	
 11769                           
 11770                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 11771  07E5  0141               	movlb	1	; select bank1
 11772  07E6  1827               	btfsc	_flags^(0+128),0
 11773  07E7  2FF1               	goto	l4290
 11774                           
 11775                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 11776  07E8  0140               	movlb	0	; select bank0
 11777  07E9  0851               	movf	pad@fp,w
 11778  07EA  00CC               	movwf	??_pad
 11779  07EB  084C               	movf	??_pad,w
 11780  07EC  00C1               	movwf	fputs@fp
 11781  07ED  0849               	movf	pad@buf,w
 11782  07EE  318C  2431  3187   	fcall	_fputs
 11783  07F1                     l4290:	
 11784                           
 11785                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 11786  07F1  0140               	movlb	0	; select bank0
 11787  07F2  0849               	movf	pad@buf,w
 11788  07F3  00A0               	movwf	strlen@s
 11789  07F4  3001               	movlw	1
 11790  07F5  00A1               	movwf	strlen@s+1
 11791  07F6  318A  22FD         	fcall	_strlen
 11792  07F8  0140               	movlb	0	; select bank0
 11793  07F9  084F               	movf	pad@w,w
 11794  07FA  0720               	addwf	?_strlen,w
 11795  07FB  00C9               	movwf	?_pad
 11796  07FC  0850               	movf	pad@w+1,w
 11797  07FD  3D21               	addwfc	?_strlen+1,w
 11798  07FE  00CA               	movwf	?_pad+1
 11799  07FF  0008               	return
 11800  0800                     __end_of_pad:	
 11801                           
 11802                           	psect	text8
 11803  0AFD                     __ptext8:	
 11804 ;; *************** function _strlen *****************
 11805 ;; Defined at:
 11806 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11809 ;;		 -> dbuf(32), STR_1(9), 
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 11812 ;;		 -> dbuf(32), STR_1(9), 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  2    0[BANK0 ] unsigned int 
 11815 ;; Registers used:
 11816 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11823 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11825 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11826 ;;Total ram usage:        5 bytes
 11827 ;; Hardware stack levels used:    1
 11828 ;; Hardware stack levels required when called:    4
 11829 ;; This function calls:
 11830 ;;		Nothing
 11831 ;; This function is called by:
 11832 ;;		_TM1650_scrollPrint
 11833 ;;		_pad
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           
 11838                           ;psect for function _strlen
 11839  0AFD                     _strlen:	
 11840                           
 11841                           ;incstack = 0
 11842                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 11843  0AFD  0140               	movlb	0	; select bank0
 11844  0AFE  0821               	movf	strlen@s+1,w
 11845  0AFF  00A4               	movwf	strlen@a+1
 11846  0B00  0820               	movf	strlen@s,w
 11847  0B01  00A3               	movwf	strlen@a
 11848  0B02                     l3256:	
 11849  0B02  0820               	movf	strlen@s,w
 11850  0B03  0084               	movwf	4
 11851  0B04  0821               	movf	strlen@s+1,w
 11852  0B05  0085               	movwf	5
 11853  0B06  0012               	moviw fsr0++
 11854  0B07  1903               	btfsc	3,2
 11855  0B08  2B0E               	goto	l3258
 11856  0B09  3001               	movlw	1
 11857  0B0A  07A0               	addwf	strlen@s,f
 11858  0B0B  3000               	movlw	0
 11859  0B0C  3DA1               	addwfc	strlen@s+1,f
 11860  0B0D  2B02               	goto	l3256
 11861  0B0E                     l3258:	
 11862  0B0E  0823               	movf	strlen@a,w
 11863  0B0F  0220               	subwf	strlen@s,w
 11864  0B10  00A0               	movwf	?_strlen
 11865  0B11  0824               	movf	strlen@a+1,w
 11866  0B12  3B21               	subwfb	strlen@s+1,w
 11867  0B13  00A1               	movwf	?_strlen+1
 11868  0B14  0008               	return
 11869  0B15                     __end_of_strlen:	
 11870                           
 11871                           	psect	text9
 11872  0C31                     __ptext9:	
 11873 ;; *************** function _fputs *****************
 11874 ;; Defined at:
 11875 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;  s               1    wreg     PTR const unsigned char 
 11878 ;;		 -> dbuf(32), 
 11879 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 11880 ;;		 -> NULL(0), 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 11883 ;;		 -> dbuf(32), 
 11884 ;;  i               2   38[BANK0 ] int 
 11885 ;;  c               1   37[BANK0 ] unsigned char 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  2   33[BANK0 ] int 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11895 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11897 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11899 ;;Total ram usage:        8 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:   11
 11902 ;; This function calls:
 11903 ;;		_fputc
 11904 ;; This function is called by:
 11905 ;;		_pad
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           
 11910                           ;psect for function _fputs
 11911  0C31                     _fputs:	
 11912                           
 11913                           ;incstack = 0
 11914 ;; hardware stack exceeded
 11915                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11916                           ;fputs@s stored from wreg
 11917  0C31  0140               	movlb	0	; select bank0
 11918  0C32  00C8               	movwf	fputs@s
 11919  0C33  01C6               	clrf	fputs@i
 11920  0C34  01C7               	clrf	fputs@i+1
 11921  0C35                     l4270:	
 11922  0C35  0846               	movf	fputs@i,w
 11923  0C36  0748               	addwf	fputs@s,w
 11924  0C37  00C2               	movwf	??_fputs
 11925  0C38  0842               	movf	??_fputs,w
 11926  0C39  0086               	movwf	6
 11927  0C3A  3001               	movlw	1	; select bank2/3
 11928  0C3B  0087               	movwf	7
 11929  0C3C  0801               	movf	1,w
 11930  0C3D  00C3               	movwf	??_fputs+1
 11931  0C3E  0843               	movf	??_fputs+1,w
 11932  0C3F  00C5               	movwf	fputs@c
 11933  0C40  0845               	movf	fputs@c,w
 11934  0C41  1903               	btfsc	3,2
 11935  0C42  0008               	return
 11936  0C43  0845               	movf	fputs@c,w
 11937  0C44  00C2               	movwf	??_fputs
 11938  0C45  01C3               	clrf	??_fputs+1
 11939  0C46  0842               	movf	??_fputs,w
 11940  0C47  00B9               	movwf	fputc@c
 11941  0C48  0843               	movf	??_fputs+1,w
 11942  0C49  00BA               	movwf	fputc@c+1
 11943  0C4A  0841               	movf	fputs@fp,w
 11944  0C4B  00C4               	movwf	??_fputs+2
 11945  0C4C  0844               	movf	??_fputs+2,w
 11946  0C4D  00BB               	movwf	fputc@fp
 11947  0C4E  318E  2606  318C   	fcall	_fputc
 11948  0C51  3001               	movlw	1
 11949  0C52  0140               	movlb	0	; select bank0
 11950  0C53  07C6               	addwf	fputs@i,f
 11951  0C54  3000               	movlw	0
 11952  0C55  3DC7               	addwfc	fputs@i+1,f
 11953  0C56  2C35               	goto	l4270
 11954  0C57                     __end_of_fputs:	
 11955                           
 11956                           	psect	text10
 11957  0E06                     __ptext10:	
 11958 ;; *************** function _fputc *****************
 11959 ;; Defined at:
 11960 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  c               2   25[BANK0 ] int 
 11963 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11964 ;;		 -> NULL(0), 
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  2   25[BANK0 ] int 
 11969 ;; Registers used:
 11970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11976 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11978 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11979 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11980 ;;Total ram usage:        8 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:   10
 11983 ;; This function calls:
 11984 ;;		_putch
 11985 ;; This function is called by:
 11986 ;;		_pad
 11987 ;;		_vfpfcnvrt
 11988 ;;		_fputs
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           
 11993                           ;psect for function _fputc
 11994  0E06                     _fputc:	
 11995                           
 11996                           ;incstack = 0
 11997                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11998  0E06  0140               	movlb	0	; select bank0
 11999  0E07  083B               	movf	fputc@fp,w
 12000  0E08  1D03               	btfss	3,2
 12001  0E09  083B               	movf	fputc@fp,w
 12002  0E0A  1D03               	btfss	3,2
 12003  0E0B  2E10               	goto	l4256
 12004  0E0C  0839               	movf	fputc@c,w
 12005  0E0D  318B  23E7         	fcall	_putch
 12006  0E0F  0008               	return
 12007  0E10                     l4256:	
 12008  0E10  083B               	movf	fputc@fp,w
 12009  0E11  3E03               	addlw	3
 12010  0E12  0086               	movwf	6
 12011  0E13  0187               	clrf	7
 12012  0E14  0016               	moviw fsr1++
 12013  0E15  0401               	iorwf	1,w
 12014  0E16  1903               	btfsc	3,2
 12015  0E17  2E33               	goto	l4260
 12016  0E18  083B               	movf	fputc@fp,w
 12017  0E19  3E03               	addlw	3
 12018  0E1A  0086               	movwf	6
 12019  0E1B  0187               	clrf	7
 12020  0E1C  3F40               	moviw [0]fsr1
 12021  0E1D  00BC               	movwf	??_fputc
 12022  0E1E  3F41               	moviw [1]fsr1
 12023  0E1F  00BD               	movwf	??_fputc+1
 12024  0E20  0A3B               	incf	fputc@fp,w
 12025  0E21  0086               	movwf	6
 12026  0E22  0187               	clrf	7
 12027  0E23  3F40               	moviw [0]fsr1
 12028  0E24  00BE               	movwf	??_fputc+2
 12029  0E25  3F41               	moviw [1]fsr1
 12030  0E26  00BF               	movwf	??_fputc+3
 12031  0E27  083F               	movf	??_fputc+3,w
 12032  0E28  3A80               	xorlw	128
 12033  0E29  00C0               	movwf	??_fputc+4
 12034  0E2A  083D               	movf	??_fputc+1,w
 12035  0E2B  3A80               	xorlw	128
 12036  0E2C  0240               	subwf	??_fputc+4,w
 12037  0E2D  1D03               	skipz
 12038  0E2E  2E31               	goto	u2745
 12039  0E2F  083C               	movf	??_fputc,w
 12040  0E30  023E               	subwf	??_fputc+2,w
 12041  0E31                     u2745:	
 12042  0E31  1803               	skipnc
 12043  0E32  0008               	return
 12044  0E33                     l4260:	
 12045  0E33  0140               	movlb	0	; select bank0
 12046  0E34  0A3B               	incf	fputc@fp,w
 12047  0E35  0086               	movwf	6
 12048  0E36  0187               	clrf	7
 12049  0E37  3001               	movlw	1
 12050  0E38  0781               	addwf	1,f
 12051  0E39  3141               	addfsr 1,1
 12052  0E3A  1803               	skipnc
 12053  0E3B  0A81               	incf	1,f
 12054  0E3C  0008               	return
 12055  0E3D                     __end_of_fputc:	
 12056                           
 12057                           	psect	text11
 12058  0BE7                     __ptext11:	
 12059 ;; *************** function _putch *****************
 12060 ;; Defined at:
 12061 ;;		line 116 in file "tm1650.c"
 12062 ;; Parameters:    Size  Location     Type
 12063 ;;  n               1    wreg     unsigned char 
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;  n               1   24[BANK0 ] unsigned char 
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  1    wreg      void 
 12068 ;; Registers used:
 12069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12078 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12079 ;;Total ram usage:        2 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; Hardware stack levels required when called:    9
 12082 ;; This function calls:
 12083 ;;		_TM1650_setDigit
 12084 ;; This function is called by:
 12085 ;;		_fputc
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           
 12090                           ;psect for function _putch
 12091  0BE7                     _putch:	
 12092                           
 12093                           ;incstack = 0
 12094                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12095                           ;putch@n stored from wreg
 12096  0BE7  0140               	movlb	0	; select bank0
 12097  0BE8  00B8               	movwf	putch@n
 12098                           
 12099                           ;tm1650.c: 118:     if(position > 3 || n == '\r' || n == '\0')
 12100  0BE9  3004               	movlw	4
 12101  0BEA  0141               	movlb	1	; select bank1
 12102  0BEB  0238               	subwf	_position^(0+128),w
 12103  0BEC  1803               	skipnc
 12104  0BED  2BF5               	goto	l4242
 12105  0BEE  300D               	movlw	13
 12106  0BEF  0140               	movlb	0	; select bank0
 12107  0BF0  0638               	xorwf	putch@n,w
 12108  0BF1  1D03               	btfss	3,2
 12109  0BF2  0838               	movf	putch@n,w
 12110  0BF3  1D03               	btfss	3,2
 12111  0BF4  2BF7               	goto	l4244
 12112  0BF5                     l4242:	
 12113                           
 12114                           ;tm1650.c: 119:         position = 0;
 12115  0BF5  0141               	movlb	1	; select bank1
 12116  0BF6  01B8               	clrf	_position^(0+128)
 12117  0BF7                     l4244:	
 12118                           
 12119                           ;tm1650.c: 121:     if(n != '\r'){
 12120  0BF7  300D               	movlw	13
 12121  0BF8  0140               	movlb	0	; select bank0
 12122  0BF9  0638               	xorwf	putch@n,w
 12123  0BFA  1903               	btfsc	3,2
 12124  0BFB  0008               	return
 12125                           
 12126                           ;tm1650.c: 122:         TM1650_setDigit(position, n);
 12127  0BFC  0838               	movf	putch@n,w
 12128  0BFD  00B7               	movwf	??_putch
 12129  0BFE  0837               	movf	??_putch,w
 12130  0BFF  00B4               	movwf	TM1650_setDigit@data
 12131  0C00  0141               	movlb	1	; select bank1
 12132  0C01  0838               	movf	_position^(0+128),w
 12133  0C02  318A  223E         	fcall	_TM1650_setDigit
 12134                           
 12135                           ;tm1650.c: 123:         position++;
 12136  0C04  3001               	movlw	1
 12137  0C05  0140               	movlb	0	; select bank0
 12138  0C06  00B7               	movwf	??_putch
 12139  0C07  0837               	movf	??_putch,w
 12140  0C08  0141               	movlb	1	; select bank1
 12141  0C09  07B8               	addwf	_position^(0+128),f
 12142  0C0A  0008               	return
 12143  0C0B                     __end_of_putch:	
 12144                           
 12145                           	psect	text12
 12146  0A3E                     __ptext12:	
 12147 ;; *************** function _TM1650_setDigit *****************
 12148 ;; Defined at:
 12149 ;;		line 91 in file "tm1650.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  digit           1    wreg     unsigned char 
 12152 ;;  data            1   20[BANK0 ] unsigned char 
 12153 ;; Auto vars:     Size  Location     Type
 12154 ;;  digit           1   22[BANK0 ] unsigned char 
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      void 
 12157 ;; Registers used:
 12158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12164 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12168 ;;Total ram usage:        3 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    8
 12171 ;; This function calls:
 12172 ;;		_writeData
 12173 ;; This function is called by:
 12174 ;;		_putch
 12175 ;; This function uses a non-reentrant model
 12176 ;;
 12177                           
 12178                           
 12179                           ;psect for function _TM1650_setDigit
 12180  0A3E                     _TM1650_setDigit:	
 12181                           
 12182                           ;incstack = 0
 12183                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12184                           ;TM1650_setDigit@digit stored from wreg
 12185  0A3E  0140               	movlb	0	; select bank0
 12186  0A3F  00B6               	movwf	TM1650_setDigit@digit
 12187                           
 12188                           ;tm1650.c: 93:     writeData(digit + 0x34, charTable[data - 32]);
 12189  0A40  0834               	movf	TM1650_setDigit@data,w
 12190  0A41  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 12191  0A42  0084               	movwf	4
 12192  0A43  308F               	movlw	high ((_charTable+65504)| (0+32768))
 12193  0A44  1803               	skipnc
 12194  0A45  3E01               	addlw	1
 12195  0A46  0085               	movwf	5
 12196  0A47  0800               	movf	0,w	;code access
 12197  0A48  00B5               	movwf	??_TM1650_setDigit
 12198  0A49  0835               	movf	??_TM1650_setDigit,w
 12199  0A4A  00AE               	movwf	writeData@data
 12200  0A4B  0836               	movf	TM1650_setDigit@digit,w
 12201  0A4C  3E34               	addlw	52
 12202  0A4D  318B  2363         	fcall	_writeData
 12203  0A4F  0008               	return
 12204  0A50                     __end_of_TM1650_setDigit:	
 12205                           
 12206                           	psect	text13
 12207  0BC3                     __ptext13:	
 12208 ;; *************** function _SYSTEM_Initialize *****************
 12209 ;; Defined at:
 12210 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;		None
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0, pclath, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12228 ;;Total ram usage:        0 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:    6
 12231 ;; This function calls:
 12232 ;;		_ADCC_Initialize
 12233 ;;		_EUSART1_Initialize
 12234 ;;		_I2C1_Initialize
 12235 ;;		_OSCILLATOR_Initialize
 12236 ;;		_PIN_MANAGER_Initialize
 12237 ;;		_PMD_Initialize
 12238 ;;		_PWM1_Initialize
 12239 ;;		_PWM2_Initialize
 12240 ;;		_PWM3_Initialize
 12241 ;;		_PWM4_Initialize
 12242 ;;		_TMR0_Initialize
 12243 ;;		_TMR2_Initialize
 12244 ;; This function is called by:
 12245 ;;		_main
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           
 12250                           ;psect for function _SYSTEM_Initialize
 12251  0BC3                     _SYSTEM_Initialize:	
 12252                           
 12253                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12254                           
 12255                           ;incstack = 0
 12256                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12257  0BC3  3189  2198  318B   	fcall	_PMD_Initialize
 12258                           
 12259                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12260  0BC6  318D  2569  318B   	fcall	_PIN_MANAGER_Initialize
 12261                           
 12262                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12263  0BC9  3189  218F  318B   	fcall	_OSCILLATOR_Initialize
 12264                           
 12265                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 12266  0BCC  318B  2347  318B   	fcall	_I2C1_Initialize
 12267                           
 12268                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 12269  0BCF  3189  21AD  318B   	fcall	_PWM1_Initialize
 12270                           
 12271                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 12272  0BD2  3189  21B8  318B   	fcall	_PWM2_Initialize
 12273                           
 12274                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12275  0BD5  318C  240B  318B   	fcall	_ADCC_Initialize
 12276                           
 12277                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12278  0BD8  3189  21CE  318B   	fcall	_PWM4_Initialize
 12279                           
 12280                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12281  0BDB  3189  21C3  318B   	fcall	_PWM3_Initialize
 12282                           
 12283                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12284  0BDE  3189  21FF  318B   	fcall	_TMR2_Initialize
 12285                           
 12286                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12287  0BE1  318A  2264  318B   	fcall	_TMR0_Initialize
 12288                           
 12289                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12290  0BE4  318D  25D1         	fcall	_EUSART1_Initialize
 12291  0BE6  0008               	return
 12292  0BE7                     __end_of_SYSTEM_Initialize:	
 12293                           
 12294                           	psect	text14
 12295  09FF                     __ptext14:	
 12296 ;; *************** function _TMR2_Initialize *****************
 12297 ;; Defined at:
 12298 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;		None
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;		None
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		wreg, status,2
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12316 ;;Total ram usage:        0 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; Hardware stack levels required when called:    4
 12319 ;; This function calls:
 12320 ;;		Nothing
 12321 ;; This function is called by:
 12322 ;;		_SYSTEM_Initialize
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           
 12327                           ;psect for function _TMR2_Initialize
 12328  09FF                     _TMR2_Initialize:	
 12329                           
 12330                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12331                           
 12332                           ;incstack = 0
 12333                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12334  09FF  3001               	movlw	1
 12335  0A00  0145               	movlb	5	; select bank5
 12336  0A01  0090               	movwf	16	;volatile
 12337                           
 12338                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12339  0A02  018F               	clrf	15	;volatile
 12340                           
 12341                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12342  0A03  0191               	clrf	17	;volatile
 12343                           
 12344                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12345  0A04  30FF               	movlw	255
 12346  0A05  008D               	movwf	13	;volatile
 12347                           
 12348                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12349  0A06  018C               	clrf	12	;volatile
 12350                           
 12351                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12352  0A07  014E               	movlb	14	; select bank14
 12353  0A08  1090               	bcf	16,1	;volatile
 12354                           
 12355                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
 12356  0A09  30D0               	movlw	208
 12357  0A0A  0145               	movlb	5	; select bank5
 12358  0A0B  008E               	movwf	14	;volatile
 12359  0A0C  0008               	return
 12360  0A0D                     __end_of_TMR2_Initialize:	
 12361                           
 12362                           	psect	text15
 12363  0A64                     __ptext15:	
 12364 ;; *************** function _TMR0_Initialize *****************
 12365 ;; Defined at:
 12366 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;		None
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;		None
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  1    wreg      void 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0, pclath, cstack
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12384 ;;Total ram usage:        0 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; Hardware stack levels required when called:    5
 12387 ;; This function calls:
 12388 ;;		_TMR0_SetInterruptHandler
 12389 ;; This function is called by:
 12390 ;;		_SYSTEM_Initialize
 12391 ;; This function uses a non-reentrant model
 12392 ;;
 12393                           
 12394                           
 12395                           ;psect for function _TMR0_Initialize
 12396  0A64                     _TMR0_Initialize:	
 12397                           
 12398                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12399                           
 12400                           ;incstack = 0
 12401                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12402  0A64  3045               	movlw	69
 12403  0A65  014B               	movlb	11	; select bank11
 12404  0A66  009F               	movwf	31	;volatile
 12405                           
 12406                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12407  0A67  30F9               	movlw	249
 12408  0A68  009D               	movwf	29	;volatile
 12409                           
 12410                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12411  0A69  019C               	clrf	28	;volatile
 12412                           
 12413                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12414  0A6A  014E               	movlb	14	; select bank14
 12415  0A6B  128C               	bcf	12,5	;volatile
 12416                           
 12417                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12418  0A6C  1696               	bsf	22,5	;volatile
 12419                           
 12420                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12421  0A6D  3008               	movlw	low _TMR0_DefaultInterruptHandler
 12422  0A6E  0140               	movlb	0	; select bank0
 12423  0A6F  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12424  0A70  3009               	movlw	high _TMR0_DefaultInterruptHandler
 12425  0A71  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12426  0A72  3189  2159         	fcall	_TMR0_SetInterruptHandler
 12427                           
 12428                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12429  0A74  3080               	movlw	128
 12430  0A75  014B               	movlb	11	; select bank11
 12431  0A76  009E               	movwf	30	;volatile
 12432  0A77  0008               	return
 12433  0A78                     __end_of_TMR0_Initialize:	
 12434                           
 12435                           	psect	text16
 12436  09CE                     __ptext16:	
 12437 ;; *************** function _PWM4_Initialize *****************
 12438 ;; Defined at:
 12439 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;		None
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;		None
 12444 ;; Return value:  Size  Location     Type
 12445 ;;                  1    wreg      void 
 12446 ;; Registers used:
 12447 ;;		wreg, status,2, status,0
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12457 ;;Total ram usage:        0 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; Hardware stack levels required when called:    4
 12460 ;; This function calls:
 12461 ;;		Nothing
 12462 ;; This function is called by:
 12463 ;;		_SYSTEM_Initialize
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           
 12468                           ;psect for function _PWM4_Initialize
 12469  09CE                     _PWM4_Initialize:	
 12470                           
 12471                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12472                           
 12473                           ;incstack = 0
 12474                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12475  09CE  308C               	movlw	140
 12476  09CF  0146               	movlb	6	; select bank6
 12477  09D0  009A               	movwf	26	;volatile
 12478                           
 12479                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12480  09D1  0199               	clrf	25	;volatile
 12481                           
 12482                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12483  09D2  0198               	clrf	24	;volatile
 12484                           
 12485                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12486  09D3  0144               	movlb	4	; select bank4
 12487  09D4  081E               	movf	30,w	;volatile
 12488  09D5  393F               	andlw	-193
 12489  09D6  3840               	iorlw	64
 12490  09D7  009E               	movwf	30	;volatile
 12491  09D8  0008               	return
 12492  09D9                     __end_of_PWM4_Initialize:	
 12493                           
 12494                           	psect	text17
 12495  09C3                     __ptext17:	
 12496 ;; *************** function _PWM3_Initialize *****************
 12497 ;; Defined at:
 12498 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;		None
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;		None
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  1    wreg      void 
 12505 ;; Registers used:
 12506 ;;		wreg, status,2, status,0
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/0
 12509 ;;		On exit  : 0/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12516 ;;Total ram usage:        0 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; Hardware stack levels required when called:    4
 12519 ;; This function calls:
 12520 ;;		Nothing
 12521 ;; This function is called by:
 12522 ;;		_SYSTEM_Initialize
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           
 12527                           ;psect for function _PWM3_Initialize
 12528  09C3                     _PWM3_Initialize:	
 12529                           
 12530                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12531                           
 12532                           ;incstack = 0
 12533                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12534  09C3  308C               	movlw	140
 12535  09C4  0146               	movlb	6	; select bank6
 12536  09C5  0096               	movwf	22	;volatile
 12537                           
 12538                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12539  09C6  0195               	clrf	21	;volatile
 12540                           
 12541                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12542  09C7  0194               	clrf	20	;volatile
 12543                           
 12544                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12545  09C8  0144               	movlb	4	; select bank4
 12546  09C9  081E               	movf	30,w	;volatile
 12547  09CA  39CF               	andlw	-49
 12548  09CB  3810               	iorlw	16
 12549  09CC  009E               	movwf	30	;volatile
 12550  09CD  0008               	return
 12551  09CE                     __end_of_PWM3_Initialize:	
 12552                           
 12553                           	psect	text18
 12554  09B8                     __ptext18:	
 12555 ;; *************** function _PWM2_Initialize *****************
 12556 ;; Defined at:
 12557 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;		None
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;		None
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  1    wreg      void 
 12564 ;; Registers used:
 12565 ;;		wreg, status,2, status,0
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12575 ;;Total ram usage:        0 bytes
 12576 ;; Hardware stack levels used:    1
 12577 ;; Hardware stack levels required when called:    4
 12578 ;; This function calls:
 12579 ;;		Nothing
 12580 ;; This function is called by:
 12581 ;;		_SYSTEM_Initialize
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           
 12586                           ;psect for function _PWM2_Initialize
 12587  09B8                     _PWM2_Initialize:	
 12588                           
 12589                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12590                           
 12591                           ;incstack = 0
 12592                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12593  09B8  308C               	movlw	140
 12594  09B9  0146               	movlb	6	; select bank6
 12595  09BA  0092               	movwf	18	;volatile
 12596                           
 12597                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12598  09BB  0191               	clrf	17	;volatile
 12599                           
 12600                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12601  09BC  0190               	clrf	16	;volatile
 12602                           
 12603                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12604  09BD  0144               	movlb	4	; select bank4
 12605  09BE  081E               	movf	30,w	;volatile
 12606  09BF  39F3               	andlw	-13
 12607  09C0  3804               	iorlw	4
 12608  09C1  009E               	movwf	30	;volatile
 12609  09C2  0008               	return
 12610  09C3                     __end_of_PWM2_Initialize:	
 12611                           
 12612                           	psect	text19
 12613  09AD                     __ptext19:	
 12614 ;; *************** function _PWM1_Initialize *****************
 12615 ;; Defined at:
 12616 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;		None
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;		None
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  1    wreg      void 
 12623 ;; Registers used:
 12624 ;;		wreg, status,2, status,0
 12625 ;; Tracked objects:
 12626 ;;		On entry : 0/0
 12627 ;;		On exit  : 0/0
 12628 ;;		Unchanged: 0/0
 12629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12634 ;;Total ram usage:        0 bytes
 12635 ;; Hardware stack levels used:    1
 12636 ;; Hardware stack levels required when called:    4
 12637 ;; This function calls:
 12638 ;;		Nothing
 12639 ;; This function is called by:
 12640 ;;		_SYSTEM_Initialize
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           
 12645                           ;psect for function _PWM1_Initialize
 12646  09AD                     _PWM1_Initialize:	
 12647                           
 12648                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12649                           
 12650                           ;incstack = 0
 12651                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12652  09AD  308C               	movlw	140
 12653  09AE  0146               	movlb	6	; select bank6
 12654  09AF  008E               	movwf	14	;volatile
 12655                           
 12656                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12657  09B0  018D               	clrf	13	;volatile
 12658                           
 12659                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12660  09B1  018C               	clrf	12	;volatile
 12661                           
 12662                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12663  09B2  0144               	movlb	4	; select bank4
 12664  09B3  081E               	movf	30,w	;volatile
 12665  09B4  39FC               	andlw	-4
 12666  09B5  3801               	iorlw	1
 12667  09B6  009E               	movwf	30	;volatile
 12668  09B7  0008               	return
 12669  09B8                     __end_of_PWM1_Initialize:	
 12670                           
 12671                           	psect	text20
 12672  0998                     __ptext20:	
 12673 ;; *************** function _PMD_Initialize *****************
 12674 ;; Defined at:
 12675 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;		None
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;		None
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  1    wreg      void 
 12682 ;; Registers used:
 12683 ;;		status,2
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12693 ;;Total ram usage:        0 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:    4
 12696 ;; This function calls:
 12697 ;;		Nothing
 12698 ;; This function is called by:
 12699 ;;		_SYSTEM_Initialize
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           
 12704                           ;psect for function _PMD_Initialize
 12705  0998                     _PMD_Initialize:	
 12706                           
 12707                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12708                           
 12709                           ;incstack = 0
 12710                           ; Regs used in _PMD_Initialize: [status,2]
 12711  0998  014F               	movlb	15	; select bank15
 12712  0999  0196               	clrf	22	;volatile
 12713                           
 12714                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12715  099A  0197               	clrf	23	;volatile
 12716                           
 12717                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12718  099B  0198               	clrf	24	;volatile
 12719                           
 12720                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12721  099C  0199               	clrf	25	;volatile
 12722                           
 12723                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12724  099D  019A               	clrf	26	;volatile
 12725                           
 12726                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12727  099E  019B               	clrf	27	;volatile
 12728                           
 12729                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12730  099F  019C               	clrf	28	;volatile
 12731                           
 12732                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12733  09A0  019D               	clrf	29	;volatile
 12734  09A1  0008               	return
 12735  09A2                     __end_of_PMD_Initialize:	
 12736                           
 12737                           	psect	text21
 12738  0D69                     __ptext21:	
 12739 ;; *************** function _PIN_MANAGER_Initialize *****************
 12740 ;; Defined at:
 12741 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;		None
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;		None
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  1    wreg      void 
 12748 ;; Registers used:
 12749 ;;		wreg, status,2
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12759 ;;Total ram usage:        0 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    4
 12762 ;; This function calls:
 12763 ;;		Nothing
 12764 ;; This function is called by:
 12765 ;;		_SYSTEM_Initialize
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           
 12770                           ;psect for function _PIN_MANAGER_Initialize
 12771  0D69                     _PIN_MANAGER_Initialize:	
 12772                           
 12773                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12774                           
 12775                           ;incstack = 0
 12776                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12777  0D69  0140               	movlb	0	; select bank0
 12778  0D6A  0198               	clrf	24	;volatile
 12779                           
 12780                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12781  0D6B  0199               	clrf	25	;volatile
 12782                           
 12783                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12784  0D6C  019A               	clrf	26	;volatile
 12785                           
 12786                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12787  0D6D  303F               	movlw	63
 12788  0D6E  0092               	movwf	18	;volatile
 12789                           
 12790                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12791  0D6F  30F0               	movlw	240
 12792  0D70  0093               	movwf	19	;volatile
 12793                           
 12794                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12795  0D71  3026               	movlw	38
 12796  0D72  0094               	movwf	20	;volatile
 12797                           
 12798                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12799  0D73  30FF               	movlw	255
 12800  0D74  017E               	movlb	62	; select bank62
 12801  0D75  00CE               	movwf	78	;volatile
 12802                           
 12803                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12804  0D76  30E0               	movlw	224
 12805  0D77  00C3               	movwf	67	;volatile
 12806                           
 12807                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12808  0D78  3007               	movlw	7
 12809  0D79  00B8               	movwf	56	;volatile
 12810                           
 12811                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12812  0D7A  01C4               	clrf	68	;volatile
 12813                           
 12814                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12815  0D7B  01B9               	clrf	57	;volatile
 12816                           
 12817                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12818  0D7C  01CF               	clrf	79	;volatile
 12819                           
 12820                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12821  0D7D  01BA               	clrf	58	;volatile
 12822                           
 12823                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12824  0D7E  01C5               	clrf	69	;volatile
 12825                           
 12826                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12827  0D7F  01D0               	clrf	80	;volatile
 12828                           
 12829                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12830  0D80  3037               	movlw	55
 12831  0D81  00BB               	movwf	59	;volatile
 12832                           
 12833                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12834  0D82  30F0               	movlw	240
 12835  0D83  00C6               	movwf	70	;volatile
 12836                           
 12837                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12838  0D84  30FF               	movlw	255
 12839  0D85  00D1               	movwf	81	;volatile
 12840                           
 12841                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12842  0D86  3005               	movlw	5
 12843  0D87  017D               	movlb	61	; select bank61
 12844  0D88  00C5               	movwf	69	;volatile
 12845                           
 12846                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12847  0D89  3014               	movlw	20
 12848  0D8A  017E               	movlb	62	; select bank62
 12849  0D8B  0094               	movwf	20	;volatile
 12850                           
 12851                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12852  0D8C  300B               	movlw	11
 12853  0D8D  00A3               	movwf	35	;volatile
 12854                           
 12855                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12856  0D8E  300C               	movlw	12
 12857  0D8F  00A4               	movwf	36	;volatile
 12858                           
 12859                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12860  0D90  3013               	movlw	19
 12861  0D91  0095               	movwf	21	;volatile
 12862                           
 12863                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12864  0D92  300A               	movlw	10
 12865  0D93  00A6               	movwf	38	;volatile
 12866                           
 12867                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12868  0D94  3009               	movlw	9
 12869  0D95  00A7               	movwf	39	;volatile
 12870                           
 12871                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12872  0D96  3004               	movlw	4
 12873  0D97  017D               	movlb	61	; select bank61
 12874  0D98  00C6               	movwf	70	;volatile
 12875                           
 12876                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12877  0D99  300C               	movlw	12
 12878  0D9A  00CB               	movwf	75	;volatile
 12879  0D9B  0008               	return
 12880  0D9C                     __end_of_PIN_MANAGER_Initialize:	
 12881                           
 12882                           	psect	text22
 12883  098F                     __ptext22:	
 12884 ;; *************** function _OSCILLATOR_Initialize *****************
 12885 ;; Defined at:
 12886 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;		None
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;		None
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  1    wreg      void 
 12893 ;; Registers used:
 12894 ;;		wreg, status,2
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12904 ;;Total ram usage:        0 bytes
 12905 ;; Hardware stack levels used:    1
 12906 ;; Hardware stack levels required when called:    4
 12907 ;; This function calls:
 12908 ;;		Nothing
 12909 ;; This function is called by:
 12910 ;;		_SYSTEM_Initialize
 12911 ;; This function uses a non-reentrant model
 12912 ;;
 12913                           
 12914                           
 12915                           ;psect for function _OSCILLATOR_Initialize
 12916  098F                     _OSCILLATOR_Initialize:	
 12917                           
 12918                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12919                           
 12920                           ;incstack = 0
 12921                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12922  098F  3060               	movlw	96
 12923  0990  0151               	movlb	17	; select bank17
 12924  0991  008D               	movwf	13	;volatile
 12925                           
 12926                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12927  0992  018F               	clrf	15	;volatile
 12928                           
 12929                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12930  0993  0191               	clrf	17	;volatile
 12931                           
 12932                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12933  0994  3006               	movlw	6
 12934  0995  0093               	movwf	19	;volatile
 12935                           
 12936                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12937  0996  0192               	clrf	18	;volatile
 12938  0997  0008               	return
 12939  0998                     __end_of_OSCILLATOR_Initialize:	
 12940                           
 12941                           	psect	text23
 12942  0B47                     __ptext23:	
 12943 ;; *************** function _I2C1_Initialize *****************
 12944 ;; Defined at:
 12945 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;		None
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1    wreg      void 
 12952 ;; Registers used:
 12953 ;;		wreg, status,2
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12963 ;;Total ram usage:        1 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    4
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_SYSTEM_Initialize
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           
 12974                           ;psect for function _I2C1_Initialize
 12975  0B47                     _I2C1_Initialize:	
 12976                           
 12977                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12978                           
 12979                           ;incstack = 0
 12980                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12981  0B47  30C3               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12982  0B48  0140               	movlb	0	; select bank0
 12983  0B49  00A0               	movwf	??_I2C1_Initialize
 12984  0B4A  0820               	movf	??_I2C1_Initialize,w
 12985  0B4B  0141               	movlb	1	; select bank1
 12986  0B4C  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12987                           
 12988                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12989  0B4D  30C3               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12990  0B4E  0140               	movlb	0	; select bank0
 12991  0B4F  00A0               	movwf	??_I2C1_Initialize
 12992  0B50  0820               	movf	??_I2C1_Initialize,w
 12993  0B51  0141               	movlb	1	; select bank1
 12994  0B52  00A0               	movwf	_i2c1_object^(0+128)
 12995                           
 12996                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12997  0B53  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12998                           
 12999                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 13000  0B54  1022               	bcf	(_i2c1_object^(0+128)+2),0
 13001                           
 13002                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 13003  0B55  01A4               	clrf	(_i2c1_object^(0+128)+4)
 13004                           
 13005                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 13006  0B56  0143               	movlb	3	; select bank3
 13007  0B57  018F               	clrf	15	;volatile
 13008                           
 13009                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 13010  0B58  3028               	movlw	40
 13011  0B59  0090               	movwf	16	;volatile
 13012                           
 13013                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 13014  0B5A  0192               	clrf	18	;volatile
 13015                           
 13016                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 13017  0B5B  304F               	movlw	79
 13018  0B5C  008D               	movwf	13	;volatile
 13019                           
 13020                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 13021  0B5D  014E               	movlb	14	; select bank14
 13022  0B5E  100F               	bcf	15,0	;volatile
 13023                           
 13024                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 13025  0B5F  108F               	bcf	15,1	;volatile
 13026                           
 13027                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 13028  0B60  1419               	bsf	25,0	;volatile
 13029                           
 13030                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 13031  0B61  1499               	bsf	25,1	;volatile
 13032  0B62  0008               	return
 13033  0B63                     __end_of_I2C1_Initialize:	
 13034                           
 13035                           	psect	text24
 13036  0DD1                     __ptext24:	
 13037 ;; *************** function _EUSART1_Initialize *****************
 13038 ;; Defined at:
 13039 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 13040 ;; Parameters:    Size  Location     Type
 13041 ;;		None
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;		None
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  1    wreg      void 
 13046 ;; Registers used:
 13047 ;;		wreg, status,2, status,0, pclath, cstack
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13057 ;;Total ram usage:        0 bytes
 13058 ;; Hardware stack levels used:    1
 13059 ;; Hardware stack levels required when called:    5
 13060 ;; This function calls:
 13061 ;;		_EUSART1_SetErrorHandler
 13062 ;;		_EUSART1_SetFramingErrorHandler
 13063 ;;		_EUSART1_SetOverrunErrorHandler
 13064 ;;		_EUSART1_SetRxInterruptHandler
 13065 ;; This function is called by:
 13066 ;;		_SYSTEM_Initialize
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           
 13071                           ;psect for function _EUSART1_Initialize
 13072  0DD1                     _EUSART1_Initialize:	
 13073                           
 13074                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 13075                           
 13076                           ;incstack = 0
 13077                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13078  0DD1  014E               	movlb	14	; select bank14
 13079  0DD2  1299               	bcf	25,5	;volatile
 13080                           
 13081                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 13082  0DD3  303D               	movlw	low _EUSART1_Receive_ISR
 13083  0DD4  0140               	movlb	0	; select bank0
 13084  0DD5  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13085  0DD6  300E               	movlw	high _EUSART1_Receive_ISR
 13086  0DD7  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13087  0DD8  3189  2186  318D   	fcall	_EUSART1_SetRxInterruptHandler
 13088                           
 13089                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 13090  0DDB  3008               	movlw	8
 13091  0DDC  0142               	movlb	2	; select bank2
 13092  0DDD  009F               	movwf	31	;volatile
 13093                           
 13094                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 13095  0DDE  3090               	movlw	144
 13096  0DDF  009D               	movwf	29	;volatile
 13097                           
 13098                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 13099  0DE0  3004               	movlw	4
 13100  0DE1  009E               	movwf	30	;volatile
 13101                           
 13102                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 13103  0DE2  301F               	movlw	31
 13104  0DE3  009B               	movwf	27	;volatile
 13105                           
 13106                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 13107  0DE4  019C               	clrf	28	;volatile
 13108                           
 13109                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 13110  0DE5  3007               	movlw	low _EUSART1_DefaultFramingErrorHandler
 13111  0DE6  0140               	movlb	0	; select bank0
 13112  0DE7  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13113  0DE8  3009               	movlw	high _EUSART1_DefaultFramingErrorHandler
 13114  0DE9  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13115  0DEA  3189  2174  318D   	fcall	_EUSART1_SetFramingErrorHandler
 13116                           
 13117                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 13118  0DED  3016               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 13119  0DEE  0140               	movlb	0	; select bank0
 13120  0DEF  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13121  0DF0  3009               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 13122  0DF1  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13123  0DF2  3189  217D  318D   	fcall	_EUSART1_SetOverrunErrorHandler
 13124                           
 13125                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 13126  0DF5  3009               	movlw	low _EUSART1_DefaultErrorHandler
 13127  0DF6  0140               	movlb	0	; select bank0
 13128  0DF7  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13129  0DF8  3009               	movlw	high _EUSART1_DefaultErrorHandler
 13130  0DF9  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13131  0DFA  3189  216B         	fcall	_EUSART1_SetErrorHandler
 13132                           
 13133                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 13134  0DFC  0141               	movlb	1	; select bank1
 13135  0DFD  01C1               	clrf	_eusart1RxLastError^(0+128)	;volatile
 13136                           
 13137                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 13138  0DFE  0140               	movlb	0	; select bank0
 13139  0DFF  01EF               	clrf	_eusart1RxHead	;volatile
 13140                           
 13141                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 13142  0E00  01F4               	clrf	_eusart1RxTail	;volatile
 13143                           
 13144                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 13145  0E01  0141               	movlb	1	; select bank1
 13146  0E02  01C2               	clrf	_eusart1RxCount^(0+128)	;volatile
 13147                           
 13148                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 13149  0E03  014E               	movlb	14	; select bank14
 13150  0E04  1699               	bsf	25,5	;volatile
 13151  0E05  0008               	return
 13152  0E06                     __end_of_EUSART1_Initialize:	
 13153                           
 13154                           	psect	text25
 13155  0986                     __ptext25:	
 13156 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13157 ;; Defined at:
 13158 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 13159 ;; Parameters:    Size  Location     Type
 13160 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13161 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13177 ;;Total ram usage:        2 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:    4
 13180 ;; This function calls:
 13181 ;;		Nothing
 13182 ;; This function is called by:
 13183 ;;		_EUSART1_Initialize
 13184 ;;		_DMX_init
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           
 13189                           ;psect for function _EUSART1_SetRxInterruptHandler
 13190  0986                     _EUSART1_SetRxInterruptHandler:	
 13191                           
 13192                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13193                           
 13194                           ;incstack = 0
 13195                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13196  0986  0140               	movlb	0	; select bank0
 13197  0987  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13198  0988  0142               	movlb	2	; select bank2
 13199  0989  00CF               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13200  098A  0140               	movlb	0	; select bank0
 13201  098B  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13202  098C  0142               	movlb	2	; select bank2
 13203  098D  00CE               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13204  098E  0008               	return
 13205  098F                     __end_of_EUSART1_SetRxInterruptHandler:	
 13206                           
 13207                           	psect	text26
 13208  097D                     __ptext26:	
 13209 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13210 ;; Defined at:
 13211 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13214 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;		None
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  1    wreg      void 
 13219 ;; Registers used:
 13220 ;;		wreg
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13230 ;;Total ram usage:        2 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:    4
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_EUSART1_Initialize
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           
 13241                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13242  097D                     _EUSART1_SetOverrunErrorHandler:	
 13243                           
 13244                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 13245                           
 13246                           ;incstack = 0
 13247                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13248  097D  0140               	movlb	0	; select bank0
 13249  097E  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13250  097F  0142               	movlb	2	; select bank2
 13251  0980  00CB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 13252  0981  0140               	movlb	0	; select bank0
 13253  0982  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13254  0983  0142               	movlb	2	; select bank2
 13255  0984  00CA               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 13256  0985  0008               	return
 13257  0986                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13258                           
 13259                           	psect	text27
 13260  0974                     __ptext27:	
 13261 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13262 ;; Defined at:
 13263 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13266 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13281 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13282 ;;Total ram usage:        2 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    4
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_EUSART1_Initialize
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           
 13293                           ;psect for function _EUSART1_SetFramingErrorHandler
 13294  0974                     _EUSART1_SetFramingErrorHandler:	
 13295                           
 13296                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 13297                           
 13298                           ;incstack = 0
 13299                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13300  0974  0140               	movlb	0	; select bank0
 13301  0975  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13302  0976  0142               	movlb	2	; select bank2
 13303  0977  00CD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 13304  0978  0140               	movlb	0	; select bank0
 13305  0979  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13306  097A  0142               	movlb	2	; select bank2
 13307  097B  00CC               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 13308  097C  0008               	return
 13309  097D                     __end_of_EUSART1_SetFramingErrorHandler:	
 13310                           
 13311                           	psect	text28
 13312  096B                     __ptext28:	
 13313 ;; *************** function _EUSART1_SetErrorHandler *****************
 13314 ;; Defined at:
 13315 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13318 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;		None
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      void 
 13323 ;; Registers used:
 13324 ;;		wreg
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13334 ;;Total ram usage:        2 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    4
 13337 ;; This function calls:
 13338 ;;		Nothing
 13339 ;; This function is called by:
 13340 ;;		_EUSART1_Initialize
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344                           
 13345                           ;psect for function _EUSART1_SetErrorHandler
 13346  096B                     _EUSART1_SetErrorHandler:	
 13347                           
 13348                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 13349                           
 13350                           ;incstack = 0
 13351                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13352  096B  0140               	movlb	0	; select bank0
 13353  096C  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13354  096D  0142               	movlb	2	; select bank2
 13355  096E  00C9               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 13356  096F  0140               	movlb	0	; select bank0
 13357  0970  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13358  0971  0142               	movlb	2	; select bank2
 13359  0972  00C8               	movwf	_EUSART1_ErrorHandler^(0+256)
 13360  0973  0008               	return
 13361  0974                     __end_of_EUSART1_SetErrorHandler:	
 13362                           
 13363                           	psect	text29
 13364  0C0B                     __ptext29:	
 13365 ;; *************** function _ADCC_Initialize *****************
 13366 ;; Defined at:
 13367 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;		None
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;		None
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  1    wreg      void 
 13374 ;; Registers used:
 13375 ;;		wreg, status,2, status,0, pclath, cstack
 13376 ;; Tracked objects:
 13377 ;;		On entry : 0/0
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13385 ;;Total ram usage:        0 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; Hardware stack levels required when called:    5
 13388 ;; This function calls:
 13389 ;;		_ADCC_SetADTIInterruptHandler
 13390 ;; This function is called by:
 13391 ;;		_SYSTEM_Initialize
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           
 13396                           ;psect for function _ADCC_Initialize
 13397  0C0B                     _ADCC_Initialize:	
 13398                           
 13399                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13400                           
 13401                           ;incstack = 0
 13402                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13403  0C0B  0141               	movlb	1	; select bank1
 13404  0C0C  018C               	clrf	12	;volatile
 13405                           
 13406                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13407  0C0D  018D               	clrf	13	;volatile
 13408                           
 13409                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13410  0C0E  018E               	clrf	14	;volatile
 13411                           
 13412                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13413  0C0F  018F               	clrf	15	;volatile
 13414                           
 13415                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13416  0C10  0192               	clrf	18	;volatile
 13417                           
 13418                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13419  0C11  0193               	clrf	19	;volatile
 13420                           
 13421                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13422  0C12  0198               	clrf	24	;volatile
 13423                           
 13424                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13425  0C13  019A               	clrf	26	;volatile
 13426                           
 13427                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13428  0C14  019F               	clrf	31	;volatile
 13429                           
 13430                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13431  0C15  0142               	movlb	2	; select bank2
 13432  0C16  018C               	clrf	12	;volatile
 13433                           
 13434                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13435  0C17  018D               	clrf	13	;volatile
 13436                           
 13437                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13438  0C18  018E               	clrf	14	;volatile
 13439                           
 13440                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13441  0C19  018F               	clrf	15	;volatile
 13442                           
 13443                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13444  0C1A  0190               	clrf	16	;volatile
 13445                           
 13446                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13447  0C1B  0192               	clrf	18	;volatile
 13448                           
 13449                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13450  0C1C  3054               	movlw	84
 13451  0C1D  0093               	movwf	19	;volatile
 13452                           
 13453                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13454  0C1E  3056               	movlw	86
 13455  0C1F  0094               	movwf	20	;volatile
 13456                           
 13457                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13458  0C20  0195               	clrf	21	;volatile
 13459                           
 13460                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13461  0C21  0196               	clrf	22	;volatile
 13462                           
 13463                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13464  0C22  0197               	clrf	23	;volatile
 13465                           
 13466                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13467  0C23  0198               	clrf	24	;volatile
 13468                           
 13469                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13470  0C24  30D4               	movlw	212
 13471  0C25  0091               	movwf	17	;volatile
 13472                           
 13473                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13474  0C26  014E               	movlb	14	; select bank14
 13475  0C27  108D               	bcf	13,1	;volatile
 13476                           
 13477                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13478  0C28  1497               	bsf	23,1	;volatile
 13479                           
 13480                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13481  0C29  3006               	movlw	low _ADCC_DefaultInterruptHandler
 13482  0C2A  0140               	movlb	0	; select bank0
 13483  0C2B  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13484  0C2C  3009               	movlw	high _ADCC_DefaultInterruptHandler
 13485  0C2D  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13486  0C2E  3189  2135         	fcall	_ADCC_SetADTIInterruptHandler
 13487  0C30  0008               	return
 13488  0C31                     __end_of_ADCC_Initialize:	
 13489                           
 13490                           	psect	text30
 13491  0C81                     __ptext30:	
 13492 ;; *************** function _LED_task *****************
 13493 ;; Defined at:
 13494 ;;		line 22 in file "led.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;		None
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;		None
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		wreg, status,2, status,0, pclath, cstack
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;Total ram usage:        2 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:    5
 13515 ;; This function calls:
 13516 ;;		_BEAT_detected
 13517 ;;		_CLOCK_getTime
 13518 ;; This function is called by:
 13519 ;;		_main
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           
 13524                           ;psect for function _LED_task
 13525  0C81                     _LED_task:	
 13526                           
 13527                           ;led.c: 24:     if(CLOCK_getTime() - lastLedActiveTime < 100){
 13528                           
 13529                           ;incstack = 0
 13530                           ; Regs used in _LED_task: [wreg+status,2+status,0+pclath+cstack]
 13531  0C81  3189  2150  318C   	fcall	_CLOCK_getTime
 13532  0C84  0142               	movlb	2	; select bank2
 13533  0C85  0834               	movf	_lastLedActiveTime^(0+256),w
 13534  0C86  0140               	movlb	0	; select bank0
 13535  0C87  0220               	subwf	?_CLOCK_getTime,w
 13536  0C88  00A2               	movwf	??_LED_task
 13537  0C89  0142               	movlb	2	; select bank2
 13538  0C8A  0835               	movf	(_lastLedActiveTime+1)^(0+256),w
 13539  0C8B  0140               	movlb	0	; select bank0
 13540  0C8C  3B21               	subwfb	?_CLOCK_getTime+1,w
 13541  0C8D  00A3               	movwf	??_LED_task+1
 13542  0C8E  3000               	movlw	0
 13543  0C8F  0223               	subwf	??_LED_task+1,w
 13544  0C90  3064               	movlw	100
 13545  0C91  1903               	skipnz
 13546  0C92  0222               	subwf	??_LED_task,w
 13547  0C93  1C03               	btfss	3,0
 13548  0C94  0008               	return
 13549                           
 13550                           ;led.c: 28:     lastLedActiveTime = CLOCK_getTime();
 13551  0C95  3189  2150  318C   	fcall	_CLOCK_getTime
 13552  0C98  0140               	movlb	0	; select bank0
 13553  0C99  0821               	movf	?_CLOCK_getTime+1,w
 13554  0C9A  0142               	movlb	2	; select bank2
 13555  0C9B  00B5               	movwf	(_lastLedActiveTime+1)^(0+256)
 13556  0C9C  0140               	movlb	0	; select bank0
 13557  0C9D  0820               	movf	?_CLOCK_getTime,w
 13558  0C9E  0142               	movlb	2	; select bank2
 13559  0C9F  00B4               	movwf	_lastLedActiveTime^(0+256)
 13560                           
 13561                           ;led.c: 30:     if(BEAT_detected()){
 13562  0CA0  3189  2162  318C   	fcall	_BEAT_detected
 13563  0CA3  3A00               	xorlw	0
 13564  0CA4  1903               	skipnz
 13565  0CA5  2CA9               	goto	l1151
 13566                           
 13567                           ;led.c: 31:         LATCbits.LATC5 = 1;
 13568  0CA6  0140               	movlb	0	; select bank0
 13569  0CA7  169A               	bsf	26,5	;volatile
 13570                           
 13571                           ;led.c: 32:     } else {
 13572  0CA8  0008               	return
 13573  0CA9                     l1151:	
 13574                           
 13575                           ;led.c: 33:         LATCbits.LATC5 = 0;
 13576  0CA9  0140               	movlb	0	; select bank0
 13577  0CAA  129A               	bcf	26,5	;volatile
 13578  0CAB  0008               	return
 13579  0CAC                     __end_of_LED_task:	
 13580                           
 13581                           	psect	text31
 13582  0962                     __ptext31:	
 13583 ;; *************** function _BEAT_detected *****************
 13584 ;; Defined at:
 13585 ;;		line 51 in file "beat.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      _Bool 
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, status,0
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13603 ;;Total ram usage:        0 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:    4
 13606 ;; This function calls:
 13607 ;;		Nothing
 13608 ;; This function is called by:
 13609 ;;		_LED_task
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           
 13614                           ;psect for function _BEAT_detected
 13615  0962                     _BEAT_detected:	
 13616                           
 13617                           ;beat.c: 52:     if (detected) {
 13618                           
 13619                           ;incstack = 0
 13620                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 13621  0962  0141               	movlb	1	; select bank1
 13622  0963  0837               	movf	_detected^(0+128),w
 13623  0964  1903               	btfsc	3,2
 13624  0965  2969               	goto	l4600
 13625                           
 13626                           ;beat.c: 53:         detected = 0;
 13627  0966  01B7               	clrf	_detected^(0+128)
 13628                           
 13629                           ;beat.c: 54:         return 1;
 13630  0967  3001               	movlw	1
 13631  0968  0008               	return
 13632  0969                     l4600:	
 13633                           
 13634                           ;beat.c: 57:     return 0;
 13635  0969  3000               	movlw	0
 13636  096A  0008               	return
 13637  096B                     __end_of_BEAT_detected:	
 13638                           
 13639                           	psect	text32
 13640  090F                     __ptext32:	
 13641 ;; *************** function _LED_init *****************
 13642 ;; Defined at:
 13643 ;;		line 18 in file "led.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;		None
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		None
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13661 ;;Total ram usage:        0 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:    4
 13664 ;; This function calls:
 13665 ;;		Nothing
 13666 ;; This function is called by:
 13667 ;;		_main
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           
 13672                           ;psect for function _LED_init
 13673  090F                     _LED_init:	
 13674                           
 13675                           ;led.c: 19:     TRISCbits.TRISC5 = 0;
 13676                           
 13677                           ;incstack = 0
 13678                           ; Regs used in _LED_init: []
 13679  090F  0140               	movlb	0	; select bank0
 13680  0910  1294               	bcf	20,5	;volatile
 13681  0911  0008               	return
 13682  0912                     __end_of_LED_init:	
 13683                           
 13684                           	psect	text33
 13685  0538                     __ptext33:	
 13686 ;; *************** function _CONTROLLER_task *****************
 13687 ;; Defined at:
 13688 ;;		line 46 in file "controller.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;		None
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  isActive        1   25[BANK0 ] _Bool 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1    wreg      void 
 13695 ;; Registers used:
 13696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13705 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13706 ;;Total ram usage:        3 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; Hardware stack levels required when called:   10
 13709 ;; This function calls:
 13710 ;;		_BUTTONS_isClicked
 13711 ;;		_BUTTONS_isHeld
 13712 ;;		_CLOCK_getTime
 13713 ;;		_TM1650_enable
 13714 ;;		_address_dec
 13715 ;;		_address_inc
 13716 ;; This function is called by:
 13717 ;;		_main
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           
 13722                           ;psect for function _CONTROLLER_task
 13723  0538                     _CONTROLLER_task:	
 13724                           
 13725                           ;controller.c: 48:     _Bool isActive = 1;
 13726                           
 13727                           ;incstack = 0
 13728                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13729  0538  0140               	movlb	0	; select bank0
 13730  0539  01B9               	clrf	CONTROLLER_task@isActive
 13731  053A  0AB9               	incf	CONTROLLER_task@isActive,f
 13732                           
 13733                           ;controller.c: 50:     if (BUTTONS_isClicked(up)) {
 13734  053B  0871               	movf	_up,w
 13735  053C  318A  2250  3185   	fcall	_BUTTONS_isClicked
 13736  053F  3A00               	xorlw	0
 13737  0540  1903               	skipnz
 13738  0541  2D51               	goto	l4754
 13739                           
 13740                           ;controller.c: 51:         address_inc();
 13741  0542  318B  232E  3185   	fcall	_address_inc
 13742                           
 13743                           ;controller.c: 52:         lastActiveTime = CLOCK_getTime();
 13744  0545  3189  2150  3185   	fcall	_CLOCK_getTime
 13745  0548  0140               	movlb	0	; select bank0
 13746  0549  0821               	movf	?_CLOCK_getTime+1,w
 13747  054A  0141               	movlb	1	; select bank1
 13748  054B  00AE               	movwf	(_lastActiveTime+1)^(0+128)
 13749  054C  0140               	movlb	0	; select bank0
 13750  054D  0820               	movf	?_CLOCK_getTime,w
 13751  054E  0141               	movlb	1	; select bank1
 13752  054F  00AD               	movwf	_lastActiveTime^(0+128)
 13753                           
 13754                           ;controller.c: 53:     } else if (BUTTONS_isClicked(down)) {
 13755  0550  2DCF               	goto	l4788
 13756  0551                     l4754:	
 13757  0551  0870               	movf	_down,w
 13758  0552  318A  2250  3185   	fcall	_BUTTONS_isClicked
 13759  0555  3A00               	xorlw	0
 13760  0556  1903               	skipnz
 13761  0557  2D5C               	goto	l4758
 13762                           
 13763                           ;controller.c: 54:         address_dec();
 13764  0558  318A  22E5  3185   	fcall	_address_dec
 13765                           
 13766                           ;controller.c: 55:     } else if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > 
      +                          incInterval)){
 13767  055B  2DCF               	goto	l4788
 13768  055C                     l4758:	
 13769  055C  0871               	movf	_up,w
 13770  055D  318A  220D  3185   	fcall	_BUTTONS_isHeld
 13771  0560  3A00               	xorlw	0
 13772  0561  1903               	skipnz
 13773  0562  2D9C               	goto	l4770
 13774  0563  3189  2150  3185   	fcall	_CLOCK_getTime
 13775  0566  0141               	movlb	1	; select bank1
 13776  0567  082F               	movf	_lastIncTime^(0+128),w
 13777  0568  0140               	movlb	0	; select bank0
 13778  0569  0220               	subwf	?_CLOCK_getTime,w
 13779  056A  00B7               	movwf	??_CONTROLLER_task
 13780  056B  0141               	movlb	1	; select bank1
 13781  056C  0830               	movf	(_lastIncTime+1)^(0+128),w
 13782  056D  0140               	movlb	0	; select bank0
 13783  056E  3B21               	subwfb	?_CLOCK_getTime+1,w
 13784  056F  00B8               	movwf	??_CONTROLLER_task+1
 13785  0570  0838               	movf	??_CONTROLLER_task+1,w
 13786  0571  0141               	movlb	1	; select bank1
 13787  0572  026D               	subwf	(_incInterval+1)^(0+128),w
 13788  0573  1D03               	skipz
 13789  0574  2D79               	goto	u3105
 13790  0575  0140               	movlb	0	; select bank0
 13791  0576  0837               	movf	??_CONTROLLER_task,w
 13792  0577  0141               	movlb	1	; select bank1
 13793  0578  026C               	subwf	_incInterval^(0+128),w
 13794  0579                     u3105:	
 13795  0579  1803               	skipnc
 13796  057A  2D9C               	goto	l4770
 13797                           
 13798                           ;controller.c: 56:         address_inc();
 13799  057B  318B  232E  3185   	fcall	_address_inc
 13800  057E                     L1:	
 13801                           
 13802                           ;controller.c: 57:         lastIncTime = CLOCK_getTime();
 13803  057E  3189  2150  3185   	fcall	_CLOCK_getTime
 13804  0581  0140               	movlb	0	; select bank0
 13805  0582  0821               	movf	?_CLOCK_getTime+1,w
 13806  0583  0141               	movlb	1	; select bank1
 13807  0584  00B0               	movwf	(_lastIncTime+1)^(0+128)
 13808  0585  0140               	movlb	0	; select bank0
 13809  0586  0820               	movf	?_CLOCK_getTime,w
 13810  0587  0141               	movlb	1	; select bank1
 13811  0588  00AF               	movwf	_lastIncTime^(0+128)
 13812                           
 13813                           ;controller.c: 58:         if(incInterval > 0){
 13814  0589  086D               	movf	(_incInterval+1)^(0+128),w
 13815  058A  3A80               	xorlw	128
 13816  058B  0140               	movlb	0	; select bank0
 13817  058C  00B7               	movwf	??_CONTROLLER_task
 13818  058D  3080               	movlw	128
 13819  058E  0237               	subwf	??_CONTROLLER_task,w
 13820  058F  1D03               	skipz
 13821  0590  2D94               	goto	u3115
 13822  0591  3001               	movlw	1
 13823  0592  0141               	movlb	1	; select bank1
 13824  0593  026C               	subwf	_incInterval^(0+128),w
 13825  0594                     u3115:	
 13826  0594  1C03               	skipc
 13827  0595  2DCF               	goto	l4788
 13828                           
 13829                           ;controller.c: 59:             incInterval-=1;
 13830  0596  30FF               	movlw	255
 13831  0597  0141               	movlb	1	; select bank1
 13832  0598  07EC               	addwf	_incInterval^(0+128),f
 13833  0599  30FF               	movlw	255
 13834  059A  3DED               	addwfc	(_incInterval+1)^(0+128),f
 13835  059B  2DCF               	goto	l4788
 13836  059C                     l4770:	
 13837  059C  0870               	movf	_down,w
 13838  059D  318A  220D  3185   	fcall	_BUTTONS_isHeld
 13839  05A0  3A00               	xorlw	0
 13840  05A1  1903               	skipnz
 13841  05A2  2DBF               	goto	l4782
 13842  05A3  3189  2150  3185   	fcall	_CLOCK_getTime
 13843  05A6  0141               	movlb	1	; select bank1
 13844  05A7  082F               	movf	_lastIncTime^(0+128),w
 13845  05A8  0140               	movlb	0	; select bank0
 13846  05A9  0220               	subwf	?_CLOCK_getTime,w
 13847  05AA  00B7               	movwf	??_CONTROLLER_task
 13848  05AB  0141               	movlb	1	; select bank1
 13849  05AC  0830               	movf	(_lastIncTime+1)^(0+128),w
 13850  05AD  0140               	movlb	0	; select bank0
 13851  05AE  3B21               	subwfb	?_CLOCK_getTime+1,w
 13852  05AF  00B8               	movwf	??_CONTROLLER_task+1
 13853  05B0  0838               	movf	??_CONTROLLER_task+1,w
 13854  05B1  0141               	movlb	1	; select bank1
 13855  05B2  026D               	subwf	(_incInterval+1)^(0+128),w
 13856  05B3  1D03               	skipz
 13857  05B4  2DB9               	goto	u3135
 13858  05B5  0140               	movlb	0	; select bank0
 13859  05B6  0837               	movf	??_CONTROLLER_task,w
 13860  05B7  0141               	movlb	1	; select bank1
 13861  05B8  026C               	subwf	_incInterval^(0+128),w
 13862  05B9                     u3135:	
 13863  05B9  1803               	skipnc
 13864  05BA  2DBF               	goto	l4782
 13865                           
 13866                           ;controller.c: 62:         address_dec();
 13867  05BB  318A  22E5  3185   	fcall	_address_dec
 13868  05BE  2D7E               	goto	L1
 13869  05BF                     l4782:	
 13870                           ;controller.c: 64:         if(incInterval > 0){
 13871                           
 13872                           ;controller.c: 63:         lastIncTime = CLOCK_getTime();
 13873                           
 13874  05BF  0141               	movlb	1	; select bank1
 13875  05C0  083A               	movf	_enter^(0+128),w
 13876  05C1  318A  220D  3185   	fcall	_BUTTONS_isHeld
 13877  05C4  3A00               	xorlw	0
 13878  05C5  1903               	skipnz
 13879  05C6  2DCD               	goto	l4786
 13880                           
 13881                           ;controller.c: 68:         address = 1;
 13882  05C7  3001               	movlw	1
 13883  05C8  0141               	movlb	1	; select bank1
 13884  05C9  00EE               	movwf	_address^(0+128)
 13885  05CA  3000               	movlw	0
 13886  05CB  00EF               	movwf	(_address^(0+128)+1)
 13887                           
 13888                           ;controller.c: 69:     } else {
 13889  05CC  2DCF               	goto	l4788
 13890  05CD                     l4786:	
 13891                           
 13892                           ;controller.c: 70:         isActive = 0;
 13893  05CD  0140               	movlb	0	; select bank0
 13894  05CE  01B9               	clrf	CONTROLLER_task@isActive
 13895  05CF                     l4788:	
 13896                           
 13897                           ;controller.c: 73:     if(!BUTTONS_isHeld(up) && !BUTTONS_isHeld(down)){
 13898  05CF  0871               	movf	_up,w
 13899  05D0  318A  220D  3185   	fcall	_BUTTONS_isHeld
 13900  05D3  3A00               	xorlw	0
 13901  05D4  1D03               	skipz
 13902  05D5  2DE2               	goto	l4794
 13903  05D6  0870               	movf	_down,w
 13904  05D7  318A  220D  3185   	fcall	_BUTTONS_isHeld
 13905  05DA  3A00               	xorlw	0
 13906  05DB  1D03               	skipz
 13907  05DC  2DE2               	goto	l4794
 13908                           
 13909                           ;controller.c: 74:         incInterval = 100;
 13910  05DD  3064               	movlw	100
 13911  05DE  0141               	movlb	1	; select bank1
 13912  05DF  00EC               	movwf	_incInterval^(0+128)
 13913  05E0  3000               	movlw	0
 13914  05E1  00ED               	movwf	(_incInterval^(0+128)+1)
 13915  05E2                     l4794:	
 13916                           
 13917                           ;controller.c: 77:     if(isActive) {
 13918  05E2  0140               	movlb	0	; select bank0
 13919  05E3  0839               	movf	CONTROLLER_task@isActive,w
 13920  05E4  1903               	btfsc	3,2
 13921  05E5  2DF1               	goto	l4798
 13922                           
 13923                           ;controller.c: 78:         lastActiveTime = CLOCK_getTime();
 13924  05E6  3189  2150  3185   	fcall	_CLOCK_getTime
 13925  05E9  0140               	movlb	0	; select bank0
 13926  05EA  0821               	movf	?_CLOCK_getTime+1,w
 13927  05EB  0141               	movlb	1	; select bank1
 13928  05EC  00AE               	movwf	(_lastActiveTime+1)^(0+128)
 13929  05ED  0140               	movlb	0	; select bank0
 13930  05EE  0820               	movf	?_CLOCK_getTime,w
 13931  05EF  0141               	movlb	1	; select bank1
 13932  05F0  00AD               	movwf	_lastActiveTime^(0+128)
 13933  05F1                     l4798:	
 13934                           
 13935                           ;controller.c: 81:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 13936  05F1  3189  2150  3185   	fcall	_CLOCK_getTime
 13937  05F4  0141               	movlb	1	; select bank1
 13938  05F5  082D               	movf	_lastActiveTime^(0+128),w
 13939  05F6  0140               	movlb	0	; select bank0
 13940  05F7  0220               	subwf	?_CLOCK_getTime,w
 13941  05F8  00B7               	movwf	??_CONTROLLER_task
 13942  05F9  0141               	movlb	1	; select bank1
 13943  05FA  082E               	movf	(_lastActiveTime+1)^(0+128),w
 13944  05FB  0140               	movlb	0	; select bank0
 13945  05FC  3B21               	subwfb	?_CLOCK_getTime+1,w
 13946  05FD  00B8               	movwf	??_CONTROLLER_task+1
 13947  05FE  3013               	movlw	19
 13948  05FF  0238               	subwf	??_CONTROLLER_task+1,w
 13949  0600  3088               	movlw	136
 13950  0601  1903               	skipnz
 13951  0602  0237               	subwf	??_CONTROLLER_task,w
 13952  0603  1C03               	skipc
 13953  0604  2E16               	goto	l4804
 13954                           
 13955                           ;controller.c: 82:         TM1650_enable(0);
 13956  0605  3000               	movlw	0
 13957  0606  318A  228C  3185   	fcall	_TM1650_enable
 13958                           
 13959                           ;controller.c: 83:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 13960  0609  3189  2150         	fcall	_CLOCK_getTime
 13961  060B  0140               	movlb	0	; select bank0
 13962  060C  0820               	movf	?_CLOCK_getTime,w
 13963  060D  3E77               	addlw	119
 13964  060E  0141               	movlb	1	; select bank1
 13965  060F  00AD               	movwf	_lastActiveTime^(0+128)
 13966  0610  30EC               	movlw	236
 13967  0611  0140               	movlb	0	; select bank0
 13968  0612  3D21               	addwfc	?_CLOCK_getTime+1,w
 13969  0613  0141               	movlb	1	; select bank1
 13970  0614  00AE               	movwf	(_lastActiveTime+1)^(0+128)
 13971                           
 13972                           ;controller.c: 84:     } else{
 13973  0615  0008               	return
 13974  0616                     l4804:	
 13975                           
 13976                           ;controller.c: 85:         TM1650_enable(1);
 13977  0616  3001               	movlw	1
 13978  0617  318A  228C         	fcall	_TM1650_enable
 13979  0619  0008               	return
 13980  061A                     __end_of_CONTROLLER_task:	
 13981                           
 13982                           	psect	text34
 13983  0B2E                     __ptext34:	
 13984 ;; *************** function _address_inc *****************
 13985 ;; Defined at:
 13986 ;;		line 21 in file "controller.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;		None
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;		None
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1    wreg      void 
 13993 ;; Registers used:
 13994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14004 ;;Total ram usage:        0 bytes
 14005 ;; Hardware stack levels used:    1
 14006 ;; Hardware stack levels required when called:    9
 14007 ;; This function calls:
 14008 ;;		_TM1650_fastPrintNum
 14009 ;; This function is called by:
 14010 ;;		_CONTROLLER_task
 14011 ;; This function uses a non-reentrant model
 14012 ;;
 14013                           
 14014                           
 14015                           ;psect for function _address_inc
 14016  0B2E                     _address_inc:	
 14017                           
 14018                           ;controller.c: 23:     if(address == 512)
 14019                           
 14020                           ;incstack = 0
 14021                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14022  0B2E  3002               	movlw	2
 14023  0B2F  0141               	movlb	1	; select bank1
 14024  0B30  066F               	xorwf	(_address+1)^(0+128),w
 14025  0B31  046E               	iorwf	_address^(0+128),w
 14026  0B32  1D03               	btfss	3,2
 14027  0B33  2B39               	goto	l4564
 14028                           
 14029                           ;controller.c: 24:         address = 1;
 14030  0B34  3001               	movlw	1
 14031  0B35  00EE               	movwf	_address^(0+128)
 14032  0B36  3000               	movlw	0
 14033  0B37  00EF               	movwf	(_address^(0+128)+1)
 14034  0B38  2B3D               	goto	l4566
 14035  0B39                     l4564:	
 14036                           
 14037                           ;controller.c: 26:         address++;
 14038  0B39  3001               	movlw	1
 14039  0B3A  07EE               	addwf	_address^(0+128),f
 14040  0B3B  3000               	movlw	0
 14041  0B3C  3DEF               	addwfc	(_address+1)^(0+128),f
 14042  0B3D                     l4566:	
 14043                           
 14044                           ;controller.c: 29:     TM1650_fastPrintNum(address);
 14045  0B3D  086F               	movf	(_address+1)^(0+128),w
 14046  0B3E  0140               	movlb	0	; select bank0
 14047  0B3F  00B5               	movwf	TM1650_fastPrintNum@num+1
 14048  0B40  0141               	movlb	1	; select bank1
 14049  0B41  086E               	movf	_address^(0+128),w
 14050  0B42  0140               	movlb	0	; select bank0
 14051  0B43  00B4               	movwf	TM1650_fastPrintNum@num
 14052  0B44  3186  26EB         	fcall	_TM1650_fastPrintNum
 14053  0B46  0008               	return
 14054  0B47                     __end_of_address_inc:	
 14055                           
 14056                           	psect	text35
 14057  0AE5                     __ptext35:	
 14058 ;; *************** function _address_dec *****************
 14059 ;; Defined at:
 14060 ;;		line 35 in file "controller.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;		None
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;		None
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14078 ;;Total ram usage:        0 bytes
 14079 ;; Hardware stack levels used:    1
 14080 ;; Hardware stack levels required when called:    9
 14081 ;; This function calls:
 14082 ;;		_TM1650_fastPrintNum
 14083 ;; This function is called by:
 14084 ;;		_CONTROLLER_task
 14085 ;; This function uses a non-reentrant model
 14086 ;;
 14087                           
 14088                           
 14089                           ;psect for function _address_dec
 14090  0AE5                     _address_dec:	
 14091                           
 14092                           ;controller.c: 37:     if(address == 1)
 14093                           
 14094                           ;incstack = 0
 14095                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14096  0AE5  0141               	movlb	1	; select bank1
 14097  0AE6  036E               	decf	_address^(0+128),w
 14098  0AE7  046F               	iorwf	(_address+1)^(0+128),w
 14099  0AE8  1D03               	btfss	3,2
 14100  0AE9  2AEF               	goto	l4572
 14101                           
 14102                           ;controller.c: 38:         address = 512;
 14103  0AEA  3000               	movlw	0
 14104  0AEB  00EE               	movwf	_address^(0+128)
 14105  0AEC  3002               	movlw	2
 14106  0AED  00EF               	movwf	(_address^(0+128)+1)
 14107  0AEE  2AF3               	goto	l4574
 14108  0AEF                     l4572:	
 14109                           
 14110                           ;controller.c: 40:         address--;
 14111  0AEF  3001               	movlw	1
 14112  0AF0  02EE               	subwf	_address^(0+128),f
 14113  0AF1  3000               	movlw	0
 14114  0AF2  3BEF               	subwfb	(_address+1)^(0+128),f
 14115  0AF3                     l4574:	
 14116                           
 14117                           ;controller.c: 43:     TM1650_fastPrintNum(address);
 14118  0AF3  086F               	movf	(_address+1)^(0+128),w
 14119  0AF4  0140               	movlb	0	; select bank0
 14120  0AF5  00B5               	movwf	TM1650_fastPrintNum@num+1
 14121  0AF6  0141               	movlb	1	; select bank1
 14122  0AF7  086E               	movf	_address^(0+128),w
 14123  0AF8  0140               	movlb	0	; select bank0
 14124  0AF9  00B4               	movwf	TM1650_fastPrintNum@num
 14125  0AFA  3186  26EB         	fcall	_TM1650_fastPrintNum
 14126  0AFC  0008               	return
 14127  0AFD                     __end_of_address_dec:	
 14128                           
 14129                           	psect	text36
 14130  0A8C                     __ptext36:	
 14131 ;; *************** function _TM1650_enable *****************
 14132 ;; Defined at:
 14133 ;;		line 42 in file "tm1650.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;  enable          1    wreg     _Bool 
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;  enable          1   20[BANK0 ] _Bool 
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      void 
 14140 ;; Registers used:
 14141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14151 ;;Total ram usage:        1 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:    8
 14154 ;; This function calls:
 14155 ;;		_writeData
 14156 ;; This function is called by:
 14157 ;;		_CONTROLLER_task
 14158 ;;		_TM1650_init
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           
 14163                           ;psect for function _TM1650_enable
 14164  0A8C                     _TM1650_enable:	
 14165                           
 14166                           ;incstack = 0
 14167                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14168                           ;TM1650_enable@enable stored from wreg
 14169  0A8C  0140               	movlb	0	; select bank0
 14170  0A8D  00B4               	movwf	TM1650_enable@enable
 14171                           
 14172                           ;tm1650.c: 43:     if(enable){
 14173  0A8E  0834               	movf	TM1650_enable@enable,w
 14174  0A8F  1903               	btfsc	3,2
 14175  0A90  2A9A               	goto	l4582
 14176                           
 14177                           ;tm1650.c: 44:         writeData(0x24, 0x01);
 14178  0A91  01AE               	clrf	writeData@data
 14179  0A92  0AAE               	incf	writeData@data,f
 14180  0A93  3024               	movlw	36
 14181  0A94  318B  2363         	fcall	_writeData
 14182                           
 14183                           ;tm1650.c: 45:         tm1650_status = 1;
 14184  0A96  0141               	movlb	1	; select bank1
 14185  0A97  01B9               	clrf	_tm1650_status^(0+128)
 14186  0A98  0AB9               	incf	_tm1650_status^(0+128),f
 14187                           
 14188                           ;tm1650.c: 46:     } else {
 14189  0A99  0008               	return
 14190  0A9A                     l4582:	
 14191                           
 14192                           ;tm1650.c: 47:         writeData(0x24, 0x00);
 14193  0A9A  01AE               	clrf	writeData@data
 14194  0A9B  3024               	movlw	36
 14195  0A9C  318B  2363         	fcall	_writeData
 14196                           
 14197                           ;tm1650.c: 48:         tm1650_status = 0;
 14198  0A9E  0141               	movlb	1	; select bank1
 14199  0A9F  01B9               	clrf	_tm1650_status^(0+128)
 14200  0AA0  0008               	return
 14201  0AA1                     __end_of_TM1650_enable:	
 14202                           
 14203                           	psect	text37
 14204  0A0D                     __ptext37:	
 14205 ;; *************** function _BUTTONS_isHeld *****************
 14206 ;; Defined at:
 14207 ;;		line 109 in file "buttons.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  button          1    wreg     PTR struct .
 14210 ;;		 -> buttons(32), NULL(0), 
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;  button          1    0[BANK0 ] PTR struct .
 14213 ;;		 -> buttons(32), NULL(0), 
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1    wreg      _Bool 
 14216 ;; Registers used:
 14217 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14226 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14227 ;;Total ram usage:        1 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; Hardware stack levels required when called:    4
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		_CONTROLLER_task
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           
 14238                           ;psect for function _BUTTONS_isHeld
 14239  0A0D                     _BUTTONS_isHeld:	
 14240                           
 14241                           ;incstack = 0
 14242                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 14243                           ;BUTTONS_isHeld@button stored from wreg
 14244  0A0D  0140               	movlb	0	; select bank0
 14245  0A0E  00A0               	movwf	BUTTONS_isHeld@button
 14246                           
 14247                           ;buttons.c: 110:     if(button->event == EVENT_HELD){
 14248  0A0F  0820               	movf	BUTTONS_isHeld@button,w
 14249  0A10  3E07               	addlw	7
 14250  0A11  0086               	movwf	6
 14251  0A12  3001               	movlw	1	; select bank2/3
 14252  0A13  0087               	movwf	7
 14253  0A14  3003               	movlw	3
 14254  0A15  0601               	xorwf	1,w
 14255  0A16  1D03               	btfss	3,2
 14256  0A17  2A1A               	goto	l4556
 14257                           
 14258                           ;buttons.c: 111:         return 1;
 14259  0A18  3001               	movlw	1
 14260  0A19  0008               	return
 14261  0A1A                     l4556:	
 14262                           
 14263                           ;buttons.c: 114:     return 0;
 14264  0A1A  3000               	movlw	0
 14265  0A1B  0008               	return
 14266  0A1C                     __end_of_BUTTONS_isHeld:	
 14267                           
 14268                           	psect	text38
 14269  0A50                     __ptext38:	
 14270 ;; *************** function _BUTTONS_isClicked *****************
 14271 ;; Defined at:
 14272 ;;		line 100 in file "buttons.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;  button          1    wreg     PTR struct .
 14275 ;;		 -> buttons(32), NULL(0), 
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;  button          1    0[BANK0 ] PTR struct .
 14278 ;;		 -> buttons(32), NULL(0), 
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  1    wreg      _Bool 
 14281 ;; Registers used:
 14282 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14291 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14292 ;;Total ram usage:        1 bytes
 14293 ;; Hardware stack levels used:    1
 14294 ;; Hardware stack levels required when called:    4
 14295 ;; This function calls:
 14296 ;;		Nothing
 14297 ;; This function is called by:
 14298 ;;		_CONTROLLER_task
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           
 14303                           ;psect for function _BUTTONS_isClicked
 14304  0A50                     _BUTTONS_isClicked:	
 14305                           
 14306                           ;incstack = 0
 14307                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 14308                           ;BUTTONS_isClicked@button stored from wreg
 14309  0A50  0140               	movlb	0	; select bank0
 14310  0A51  00A0               	movwf	BUTTONS_isClicked@button
 14311                           
 14312                           ;buttons.c: 101:     if (button->event == EVENT_PRESSED) {
 14313  0A52  0820               	movf	BUTTONS_isClicked@button,w
 14314  0A53  3E07               	addlw	7
 14315  0A54  0086               	movwf	6
 14316  0A55  3001               	movlw	1	; select bank2/3
 14317  0A56  0087               	movwf	7
 14318  0A57  0301               	decf	1,w
 14319  0A58  1D03               	btfss	3,2
 14320  0A59  2A62               	goto	l4546
 14321                           
 14322                           ;buttons.c: 102:         button->event = EVENT_IDLE;
 14323  0A5A  0820               	movf	BUTTONS_isClicked@button,w
 14324  0A5B  3E07               	addlw	7
 14325  0A5C  0086               	movwf	6
 14326  0A5D  3001               	movlw	1	; select bank2/3
 14327  0A5E  0087               	movwf	7
 14328  0A5F  0181               	clrf	1
 14329                           
 14330                           ;buttons.c: 103:         return 1;
 14331  0A60  3001               	movlw	1
 14332  0A61  0008               	return
 14333  0A62                     l4546:	
 14334                           
 14335                           ;buttons.c: 106:     return 0;
 14336  0A62  3000               	movlw	0
 14337  0A63  0008               	return
 14338  0A64                     __end_of_BUTTONS_isClicked:	
 14339                           
 14340                           	psect	text39
 14341  09A2                     __ptext39:	
 14342 ;; *************** function _CONTROLLER_init *****************
 14343 ;; Defined at:
 14344 ;;		line 14 in file "controller.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;		None
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;		None
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14362 ;;Total ram usage:        0 bytes
 14363 ;; Hardware stack levels used:    1
 14364 ;; Hardware stack levels required when called:    9
 14365 ;; This function calls:
 14366 ;;		_TM1650_fastPrintNum
 14367 ;; This function is called by:
 14368 ;;		_main
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           
 14373                           ;psect for function _CONTROLLER_init
 14374  09A2                     _CONTROLLER_init:	
 14375                           
 14376                           ;controller.c: 15:     TM1650_fastPrintNum(address);
 14377                           
 14378                           ;incstack = 0
 14379                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14380  09A2  0141               	movlb	1	; select bank1
 14381  09A3  086F               	movf	(_address+1)^(0+128),w
 14382  09A4  0140               	movlb	0	; select bank0
 14383  09A5  00B5               	movwf	TM1650_fastPrintNum@num+1
 14384  09A6  0141               	movlb	1	; select bank1
 14385  09A7  086E               	movf	_address^(0+128),w
 14386  09A8  0140               	movlb	0	; select bank0
 14387  09A9  00B4               	movwf	TM1650_fastPrintNum@num
 14388  09AA  3186  26EB         	fcall	_TM1650_fastPrintNum
 14389  09AC  0008               	return
 14390  09AD                     __end_of_CONTROLLER_init:	
 14391                           
 14392                           	psect	text40
 14393  06EB                     __ptext40:	
 14394 ;; *************** function _TM1650_fastPrintNum *****************
 14395 ;; Defined at:
 14396 ;;		line 97 in file "tm1650.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;  num             2   20[BANK0 ] unsigned short 
 14399 ;; Auto vars:     Size  Location     Type
 14400 ;;		None
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      void 
 14403 ;; Registers used:
 14404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14413 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14414 ;;Total ram usage:        3 bytes
 14415 ;; Hardware stack levels used:    1
 14416 ;; Hardware stack levels required when called:    8
 14417 ;; This function calls:
 14418 ;;		___lwdiv
 14419 ;;		___lwmod
 14420 ;;		_writeData
 14421 ;; This function is called by:
 14422 ;;		_CONTROLLER_init
 14423 ;;		_address_inc
 14424 ;;		_address_dec
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           
 14429                           ;psect for function _TM1650_fastPrintNum
 14430  06EB                     _TM1650_fastPrintNum:	
 14431                           
 14432                           ;tm1650.c: 99:     if(num > 9999){
 14433                           
 14434                           ;incstack = 0
 14435                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14436  06EB  3027               	movlw	39
 14437  06EC  0140               	movlb	0	; select bank0
 14438  06ED  0235               	subwf	TM1650_fastPrintNum@num+1,w
 14439  06EE  3010               	movlw	16
 14440  06EF  1903               	skipnz
 14441  06F0  0234               	subwf	TM1650_fastPrintNum@num,w
 14442  06F1  1C03               	skipc
 14443  06F2  2F16               	goto	l4368
 14444                           
 14445                           ;tm1650.c: 100:         writeData(0x34, 0x79);
 14446  06F3  3079               	movlw	121
 14447  06F4  00B6               	movwf	??_TM1650_fastPrintNum
 14448  06F5  0836               	movf	??_TM1650_fastPrintNum,w
 14449  06F6  00AE               	movwf	writeData@data
 14450  06F7  3034               	movlw	52
 14451  06F8  318B  2363  3186   	fcall	_writeData
 14452                           
 14453                           ;tm1650.c: 101:         writeData(0x35, 0x79);
 14454  06FB  3079               	movlw	121
 14455  06FC  0140               	movlb	0	; select bank0
 14456  06FD  00B6               	movwf	??_TM1650_fastPrintNum
 14457  06FE  0836               	movf	??_TM1650_fastPrintNum,w
 14458  06FF  00AE               	movwf	writeData@data
 14459  0700  3035               	movlw	53
 14460  0701  318B  2363  3186   	fcall	_writeData
 14461                           
 14462                           ;tm1650.c: 102:         writeData(0x36, 0x79);
 14463  0704  3079               	movlw	121
 14464  0705  0140               	movlb	0	; select bank0
 14465  0706  00B6               	movwf	??_TM1650_fastPrintNum
 14466  0707  0836               	movf	??_TM1650_fastPrintNum,w
 14467  0708  00AE               	movwf	writeData@data
 14468  0709  3036               	movlw	54
 14469  070A  318B  2363  3186   	fcall	_writeData
 14470                           
 14471                           ;tm1650.c: 103:         writeData(0x37, 0x79);
 14472  070D  3079               	movlw	121
 14473  070E  0140               	movlb	0	; select bank0
 14474  070F  00B6               	movwf	??_TM1650_fastPrintNum
 14475  0710  0836               	movf	??_TM1650_fastPrintNum,w
 14476  0711  00AE               	movwf	writeData@data
 14477  0712  3037               	movlw	55
 14478  0713  318B  2363         	fcall	_writeData
 14479  0715  0008               	return
 14480  0716                     l4368:	
 14481                           
 14482                           ;tm1650.c: 107:     writeData(0x37, charTable[(num % 10) + 16]);
 14483  0716  300A               	movlw	10
 14484  0717  00A8               	movwf	___lwmod@divisor
 14485  0718  3000               	movlw	0
 14486  0719  00A9               	movwf	___lwmod@divisor+1
 14487  071A  0835               	movf	TM1650_fastPrintNum@num+1,w
 14488  071B  00AB               	movwf	___lwmod@dividend+1
 14489  071C  0834               	movf	TM1650_fastPrintNum@num,w
 14490  071D  00AA               	movwf	___lwmod@dividend
 14491  071E  318C  24AC  3186   	fcall	___lwmod
 14492  0721  0140               	movlb	0	; select bank0
 14493  0722  0829               	movf	?___lwmod+1,w
 14494  0723  0085               	movwf	5
 14495  0724  0828               	movf	?___lwmod,w
 14496  0725  0084               	movwf	4
 14497  0726  3010               	movlw	low ((_charTable+16)| (0+32768))
 14498  0727  0784               	addwf	4,f
 14499  0728  3090               	movlw	high ((_charTable+16)| (0+32768))
 14500  0729  3D85               	addwfc	5,f
 14501  072A  0800               	movf	0,w	;code access
 14502  072B  00B6               	movwf	??_TM1650_fastPrintNum
 14503  072C  0836               	movf	??_TM1650_fastPrintNum,w
 14504  072D  00AE               	movwf	writeData@data
 14505  072E  3037               	movlw	55
 14506  072F  318B  2363  3186   	fcall	_writeData
 14507                           
 14508                           ;tm1650.c: 108:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 14509  0732  300A               	movlw	10
 14510  0733  0140               	movlb	0	; select bank0
 14511  0734  00A8               	movwf	___lwmod@divisor
 14512  0735  3000               	movlw	0
 14513  0736  00A9               	movwf	___lwmod@divisor+1
 14514  0737  300A               	movlw	10
 14515  0738  00A0               	movwf	___lwdiv@divisor
 14516  0739  3000               	movlw	0
 14517  073A  00A1               	movwf	___lwdiv@divisor+1
 14518  073B  0835               	movf	TM1650_fastPrintNum@num+1,w
 14519  073C  00A3               	movwf	___lwdiv@dividend+1
 14520  073D  0834               	movf	TM1650_fastPrintNum@num,w
 14521  073E  00A2               	movwf	___lwdiv@dividend
 14522  073F  318D  259C  3186   	fcall	___lwdiv
 14523  0742  0140               	movlb	0	; select bank0
 14524  0743  0821               	movf	?___lwdiv+1,w
 14525  0744  00AB               	movwf	___lwmod@dividend+1
 14526  0745  0820               	movf	?___lwdiv,w
 14527  0746  00AA               	movwf	___lwmod@dividend
 14528  0747  318C  24AC  3186   	fcall	___lwmod
 14529  074A  0140               	movlb	0	; select bank0
 14530  074B  0829               	movf	?___lwmod+1,w
 14531  074C  0085               	movwf	5
 14532  074D  0828               	movf	?___lwmod,w
 14533  074E  0084               	movwf	4
 14534  074F  3010               	movlw	low ((_charTable+16)| (0+32768))
 14535  0750  0784               	addwf	4,f
 14536  0751  3090               	movlw	high ((_charTable+16)| (0+32768))
 14537  0752  3D85               	addwfc	5,f
 14538  0753  0800               	movf	0,w	;code access
 14539  0754  00B6               	movwf	??_TM1650_fastPrintNum
 14540  0755  0836               	movf	??_TM1650_fastPrintNum,w
 14541  0756  00AE               	movwf	writeData@data
 14542  0757  3036               	movlw	54
 14543  0758  318B  2363  3186   	fcall	_writeData
 14544                           
 14545                           ;tm1650.c: 109:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 14546  075B  300A               	movlw	10
 14547  075C  0140               	movlb	0	; select bank0
 14548  075D  00A8               	movwf	___lwmod@divisor
 14549  075E  3000               	movlw	0
 14550  075F  00A9               	movwf	___lwmod@divisor+1
 14551  0760  3064               	movlw	100
 14552  0761  00A0               	movwf	___lwdiv@divisor
 14553  0762  3000               	movlw	0
 14554  0763  00A1               	movwf	___lwdiv@divisor+1
 14555  0764  0835               	movf	TM1650_fastPrintNum@num+1,w
 14556  0765  00A3               	movwf	___lwdiv@dividend+1
 14557  0766  0834               	movf	TM1650_fastPrintNum@num,w
 14558  0767  00A2               	movwf	___lwdiv@dividend
 14559  0768  318D  259C  3186   	fcall	___lwdiv
 14560  076B  0140               	movlb	0	; select bank0
 14561  076C  0821               	movf	?___lwdiv+1,w
 14562  076D  00AB               	movwf	___lwmod@dividend+1
 14563  076E  0820               	movf	?___lwdiv,w
 14564  076F  00AA               	movwf	___lwmod@dividend
 14565  0770  318C  24AC  3186   	fcall	___lwmod
 14566  0773  0140               	movlb	0	; select bank0
 14567  0774  0829               	movf	?___lwmod+1,w
 14568  0775  0085               	movwf	5
 14569  0776  0828               	movf	?___lwmod,w
 14570  0777  0084               	movwf	4
 14571  0778  3010               	movlw	low ((_charTable+16)| (0+32768))
 14572  0779  0784               	addwf	4,f
 14573  077A  3090               	movlw	high ((_charTable+16)| (0+32768))
 14574  077B  3D85               	addwfc	5,f
 14575  077C  0800               	movf	0,w	;code access
 14576  077D  00B6               	movwf	??_TM1650_fastPrintNum
 14577  077E  0836               	movf	??_TM1650_fastPrintNum,w
 14578  077F  00AE               	movwf	writeData@data
 14579  0780  3035               	movlw	53
 14580  0781  318B  2363  3186   	fcall	_writeData
 14581                           
 14582                           ;tm1650.c: 110:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 14583  0784  300A               	movlw	10
 14584  0785  0140               	movlb	0	; select bank0
 14585  0786  00A8               	movwf	___lwmod@divisor
 14586  0787  3000               	movlw	0
 14587  0788  00A9               	movwf	___lwmod@divisor+1
 14588  0789  30E8               	movlw	232
 14589  078A  00A0               	movwf	___lwdiv@divisor
 14590  078B  3003               	movlw	3
 14591  078C  00A1               	movwf	___lwdiv@divisor+1
 14592  078D  0835               	movf	TM1650_fastPrintNum@num+1,w
 14593  078E  00A3               	movwf	___lwdiv@dividend+1
 14594  078F  0834               	movf	TM1650_fastPrintNum@num,w
 14595  0790  00A2               	movwf	___lwdiv@dividend
 14596  0791  318D  259C  3186   	fcall	___lwdiv
 14597  0794  0140               	movlb	0	; select bank0
 14598  0795  0821               	movf	?___lwdiv+1,w
 14599  0796  00AB               	movwf	___lwmod@dividend+1
 14600  0797  0820               	movf	?___lwdiv,w
 14601  0798  00AA               	movwf	___lwmod@dividend
 14602  0799  318C  24AC  3186   	fcall	___lwmod
 14603  079C  0140               	movlb	0	; select bank0
 14604  079D  0829               	movf	?___lwmod+1,w
 14605  079E  0085               	movwf	5
 14606  079F  0828               	movf	?___lwmod,w
 14607  07A0  0084               	movwf	4
 14608  07A1  3010               	movlw	low ((_charTable+16)| (0+32768))
 14609  07A2  0784               	addwf	4,f
 14610  07A3  3090               	movlw	high ((_charTable+16)| (0+32768))
 14611  07A4  3D85               	addwfc	5,f
 14612  07A5  0800               	movf	0,w	;code access
 14613  07A6  00B6               	movwf	??_TM1650_fastPrintNum
 14614  07A7  0836               	movf	??_TM1650_fastPrintNum,w
 14615  07A8  00AE               	movwf	writeData@data
 14616  07A9  3034               	movlw	52
 14617  07AA  318B  2363         	fcall	_writeData
 14618  07AC  0008               	return
 14619  07AD                     __end_of_TM1650_fastPrintNum:	
 14620                           
 14621                           	psect	text41
 14622  0B63                     __ptext41:	
 14623 ;; *************** function _writeData *****************
 14624 ;; Defined at:
 14625 ;;		line 32 in file "tm1650.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  address         1    wreg     unsigned char 
 14628 ;;  data            1   14[BANK0 ] unsigned char 
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;  address         1   18[BANK0 ] unsigned char 
 14631 ;;  status          1   19[BANK0 ] enum E11369
 14632 ;; Return value:  Size  Location     Type
 14633 ;;                  1    wreg      void 
 14634 ;; Registers used:
 14635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14636 ;; Tracked objects:
 14637 ;;		On entry : 0/0
 14638 ;;		On exit  : 0/0
 14639 ;;		Unchanged: 0/0
 14640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14641 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14642 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14643 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14644 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14645 ;;Total ram usage:        6 bytes
 14646 ;; Hardware stack levels used:    1
 14647 ;; Hardware stack levels required when called:    7
 14648 ;; This function calls:
 14649 ;;		_I2C1_MasterWrite
 14650 ;; This function is called by:
 14651 ;;		_TM1650_enable
 14652 ;;		_TM1650_setDigit
 14653 ;;		_TM1650_fastPrintNum
 14654 ;;		_TM1650_brightness
 14655 ;; This function uses a non-reentrant model
 14656 ;;
 14657                           
 14658                           
 14659                           ;psect for function _writeData
 14660  0B63                     _writeData:	
 14661                           
 14662                           ;incstack = 0
 14663                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14664                           ;writeData@address stored from wreg
 14665  0B63  0140               	movlb	0	; select bank0
 14666  0B64  00B2               	movwf	writeData@address
 14667                           
 14668                           ;tm1650.c: 34:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 14669  0B65  3002               	movlw	2
 14670  0B66  00AF               	movwf	??_writeData
 14671  0B67  082F               	movf	??_writeData,w
 14672  0B68  00B3               	movwf	writeData@status
 14673                           
 14674                           ;tm1650.c: 35:     I2C1_MasterWrite(&data, 1, address, &status);
 14675  0B69  01A7               	clrf	I2C1_MasterWrite@length
 14676  0B6A  0AA7               	incf	I2C1_MasterWrite@length,f
 14677  0B6B  0832               	movf	writeData@address,w
 14678  0B6C  00AF               	movwf	??_writeData
 14679  0B6D  01B0               	clrf	??_writeData+1
 14680  0B6E  082F               	movf	??_writeData,w
 14681  0B6F  00A8               	movwf	I2C1_MasterWrite@address
 14682  0B70  0830               	movf	??_writeData+1,w
 14683  0B71  00A9               	movwf	I2C1_MasterWrite@address+1
 14684  0B72  3033               	movlw	(low (writeData@status| 0))& (0+255)
 14685  0B73  00B1               	movwf	??_writeData+2
 14686  0B74  0831               	movf	??_writeData+2,w
 14687  0B75  00AA               	movwf	I2C1_MasterWrite@pflag
 14688  0B76  302E               	movlw	(low (writeData@data| 0))& (0+255)
 14689  0B77  318C  2457  318B   	fcall	_I2C1_MasterWrite
 14690  0B7A                     l4232:	
 14691                           ;tm1650.c: 37:     while( status == I2C1_MESSAGE_PENDING );
 14692                           
 14693  0B7A  3002               	movlw	2
 14694  0B7B  0140               	movlb	0	; select bank0
 14695  0B7C  0633               	xorwf	writeData@status,w
 14696  0B7D  1D03               	btfss	3,2
 14697  0B7E  0008               	return
 14698  0B7F  2B7A               	goto	l4232
 14699  0B80                     __end_of_writeData:	
 14700                           
 14701                           	psect	text42
 14702  0C57                     __ptext42:	
 14703 ;; *************** function _I2C1_MasterWrite *****************
 14704 ;; Defined at:
 14705 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;  pdata           1    wreg     PTR unsigned char 
 14708 ;;		 -> writeData@data(1), 
 14709 ;;  length          1    7[BANK0 ] unsigned char 
 14710 ;;  address         2    8[BANK0 ] unsigned short 
 14711 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 14712 ;;		 -> writeData@status(1), 
 14713 ;; Auto vars:     Size  Location     Type
 14714 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 14715 ;;		 -> writeData@data(1), 
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  1    wreg      void 
 14718 ;; Registers used:
 14719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14727 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14728 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14729 ;;Total ram usage:        7 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; Hardware stack levels required when called:    6
 14732 ;; This function calls:
 14733 ;;		_I2C1_MasterTRBInsert
 14734 ;;		_I2C1_MasterWriteTRBBuild
 14735 ;; This function is called by:
 14736 ;;		_writeData
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           
 14741                           ;psect for function _I2C1_MasterWrite
 14742  0C57                     _I2C1_MasterWrite:	
 14743                           
 14744                           ;incstack = 0
 14745                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14746                           ;I2C1_MasterWrite@pdata stored from wreg
 14747  0C57  0140               	movlb	0	; select bank0
 14748  0C58  00AD               	movwf	I2C1_MasterWrite@pdata
 14749                           
 14750                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 14751  0C59  0141               	movlb	1	; select bank1
 14752  0C5A  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 14753  0C5B  2C7A               	goto	l4226
 14754                           
 14755                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 14756  0C5C  0140               	movlb	0	; select bank0
 14757  0C5D  082D               	movf	I2C1_MasterWrite@pdata,w
 14758  0C5E  00AB               	movwf	??_I2C1_MasterWrite
 14759  0C5F  082B               	movf	??_I2C1_MasterWrite,w
 14760  0C60  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 14761  0C61  0827               	movf	I2C1_MasterWrite@length,w
 14762  0C62  00AC               	movwf	??_I2C1_MasterWrite+1
 14763  0C63  082C               	movf	??_I2C1_MasterWrite+1,w
 14764  0C64  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 14765  0C65  0829               	movf	I2C1_MasterWrite@address+1,w
 14766  0C66  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 14767  0C67  0828               	movf	I2C1_MasterWrite@address,w
 14768  0C68  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 14769  0C69  3040               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 14770  0C6A  318B  23A0  318C   	fcall	_I2C1_MasterWriteTRBBuild
 14771                           
 14772                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 14773  0C6D  3040               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 14774  0C6E  0140               	movlb	0	; select bank0
 14775  0C6F  00AB               	movwf	??_I2C1_MasterWrite
 14776  0C70  082B               	movf	??_I2C1_MasterWrite,w
 14777  0C71  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 14778  0C72  082A               	movf	I2C1_MasterWrite@pflag,w
 14779  0C73  00AC               	movwf	??_I2C1_MasterWrite+1
 14780  0C74  082C               	movf	??_I2C1_MasterWrite+1,w
 14781  0C75  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 14782  0C76  3001               	movlw	1
 14783  0C77  318F  2705         	fcall	_I2C1_MasterTRBInsert
 14784                           
 14785                           ;mcc_generated_files/i2c1.c: 613:     }
 14786  0C79  0008               	return
 14787  0C7A                     l4226:	
 14788                           
 14789                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 14790  0C7A  0140               	movlb	0	; select bank0
 14791  0C7B  082A               	movf	I2C1_MasterWrite@pflag,w
 14792  0C7C  0086               	movwf	6
 14793  0C7D  0187               	clrf	7
 14794  0C7E  0181               	clrf	1
 14795  0C7F  0A81               	incf	1,f
 14796  0C80  0008               	return
 14797  0C81                     __end_of_I2C1_MasterWrite:	
 14798                           
 14799                           	psect	text43
 14800  0BA0                     __ptext43:	
 14801 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 14802 ;; Defined at:
 14803 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 14804 ;; Parameters:    Size  Location     Type
 14805 ;;  ptrb            1    wreg     PTR struct .
 14806 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 14807 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 14808 ;;		 -> writeData@data(1), 
 14809 ;;  length          1    1[BANK0 ] unsigned char 
 14810 ;;  address         2    2[BANK0 ] unsigned short 
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;  ptrb            1    6[BANK0 ] PTR struct .
 14813 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 14814 ;; Return value:  Size  Location     Type
 14815 ;;                  1    wreg      void 
 14816 ;; Registers used:
 14817 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14818 ;; Tracked objects:
 14819 ;;		On entry : 0/0
 14820 ;;		On exit  : 0/0
 14821 ;;		Unchanged: 0/0
 14822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14826 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14827 ;;Total ram usage:        7 bytes
 14828 ;; Hardware stack levels used:    1
 14829 ;; Hardware stack levels required when called:    4
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		_I2C1_MasterWrite
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           
 14838                           ;psect for function _I2C1_MasterWriteTRBBuild
 14839  0BA0                     _I2C1_MasterWriteTRBBuild:	
 14840                           
 14841                           ;incstack = 0
 14842                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 14843                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 14844  0BA0  0140               	movlb	0	; select bank0
 14845  0BA1  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 14846                           
 14847                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 14848  0BA2  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 14849  0BA3  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 14850  0BA4  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 14851  0BA5  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14852  0BA6  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 14853  0BA7  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 14854  0BA8  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14855  0BA9  0086               	movwf	6
 14856  0BAA  3001               	movlw	1	; select bank2/3
 14857  0BAB  0087               	movwf	7
 14858  0BAC  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14859  0BAD  3FC0               	movwi [0]fsr1
 14860  0BAE  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 14861  0BAF  3FC1               	movwi [1]fsr1
 14862                           
 14863                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 14864  0BB0  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 14865  0BB1  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14866  0BB2  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14867  0BB3  3E02               	addlw	2
 14868  0BB4  0086               	movwf	6
 14869  0BB5  3001               	movlw	1	; select bank2/3
 14870  0BB6  0087               	movwf	7
 14871  0BB7  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14872  0BB8  0081               	movwf	1
 14873                           
 14874                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 14875  0BB9  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 14876  0BBA  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14877  0BBB  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14878  0BBC  3E03               	addlw	3
 14879  0BBD  0086               	movwf	6
 14880  0BBE  3001               	movlw	1	; select bank2/3
 14881  0BBF  0087               	movwf	7
 14882  0BC0  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14883  0BC1  0081               	movwf	1
 14884  0BC2  0008               	return
 14885  0BC3                     __end_of_I2C1_MasterWriteTRBBuild:	
 14886                           
 14887                           	psect	text44
 14888  0F05                     __ptext44:	
 14889 ;; *************** function _I2C1_MasterTRBInsert *****************
 14890 ;; Defined at:
 14891 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 14892 ;; Parameters:    Size  Location     Type
 14893 ;;  count           1    wreg     unsigned char 
 14894 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 14895 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 14896 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 14897 ;;		 -> writeData@status(1), 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;  count           1    3[BANK0 ] unsigned char 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      void 
 14902 ;; Registers used:
 14903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14912 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;Total ram usage:        4 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; Hardware stack levels required when called:    5
 14916 ;; This function calls:
 14917 ;;		_I2C1_WaitForLastPacketToComplete
 14918 ;; This function is called by:
 14919 ;;		_I2C1_MasterWrite
 14920 ;;		_I2C1_MasterRead
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           
 14925                           ;psect for function _I2C1_MasterTRBInsert
 14926  0F05                     _I2C1_MasterTRBInsert:	
 14927                           
 14928                           ;incstack = 0
 14929                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14930                           ;I2C1_MasterTRBInsert@count stored from wreg
 14931  0F05  0140               	movlb	0	; select bank0
 14932  0F06  00A3               	movwf	I2C1_MasterTRBInsert@count
 14933                           
 14934                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 14935  0F07  0141               	movlb	1	; select bank1
 14936  0F08  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 14937  0F09  2F44               	goto	l4214
 14938                           
 14939                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 14940  0F0A  3002               	movlw	2
 14941  0F0B  0140               	movlb	0	; select bank0
 14942  0F0C  00A2               	movwf	??_I2C1_MasterTRBInsert
 14943  0F0D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14944  0F0E  0086               	movwf	6
 14945  0F0F  0187               	clrf	7
 14946  0F10  0822               	movf	??_I2C1_MasterTRBInsert,w
 14947  0F11  0081               	movwf	1
 14948                           
 14949                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 14950  0F12  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 14951  0F13  00A2               	movwf	??_I2C1_MasterTRBInsert
 14952  0F14  0141               	movlb	1	; select bank1
 14953  0F15  0A20               	incf	_i2c1_object^(0+128),w
 14954  0F16  0086               	movwf	6
 14955  0F17  0187               	clrf	7
 14956  0F18  0140               	movlb	0	; select bank0
 14957  0F19  0822               	movf	??_I2C1_MasterTRBInsert,w
 14958  0F1A  0081               	movwf	1
 14959                           
 14960                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 14961  0F1B  0823               	movf	I2C1_MasterTRBInsert@count,w
 14962  0F1C  00A2               	movwf	??_I2C1_MasterTRBInsert
 14963  0F1D  0141               	movlb	1	; select bank1
 14964  0F1E  0820               	movf	_i2c1_object^(0+128),w
 14965  0F1F  0086               	movwf	6
 14966  0F20  0187               	clrf	7
 14967  0F21  0140               	movlb	0	; select bank0
 14968  0F22  0822               	movf	??_I2C1_MasterTRBInsert,w
 14969  0F23  0081               	movwf	1
 14970                           
 14971                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 14972  0F24  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14973  0F25  00A2               	movwf	??_I2C1_MasterTRBInsert
 14974  0F26  0141               	movlb	1	; select bank1
 14975  0F27  0820               	movf	_i2c1_object^(0+128),w
 14976  0F28  3E02               	addlw	2
 14977  0F29  0086               	movwf	6
 14978  0F2A  0187               	clrf	7
 14979  0F2B  0140               	movlb	0	; select bank0
 14980  0F2C  0822               	movf	??_I2C1_MasterTRBInsert,w
 14981  0F2D  0081               	movwf	1
 14982                           
 14983                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 14984  0F2E  3003               	movlw	3
 14985  0F2F  00A2               	movwf	??_I2C1_MasterTRBInsert
 14986  0F30  0822               	movf	??_I2C1_MasterTRBInsert,w
 14987  0F31  0141               	movlb	1	; select bank1
 14988  0F32  07A0               	addwf	_i2c1_object^(0+128),f
 14989                           
 14990                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 14991  0F33  0820               	movf	_i2c1_object^(0+128),w
 14992  0F34  3AC6               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 14993  0F35  1D03               	skipz
 14994  0F36  2F3D               	goto	l4210
 14995                           
 14996                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 14997  0F37  30C3               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 14998  0F38  0140               	movlb	0	; select bank0
 14999  0F39  00A2               	movwf	??_I2C1_MasterTRBInsert
 15000  0F3A  0822               	movf	??_I2C1_MasterTRBInsert,w
 15001  0F3B  0141               	movlb	1	; select bank1
 15002  0F3C  00A0               	movwf	_i2c1_object^(0+128)
 15003  0F3D                     l4210:	
 15004                           
 15005                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 15006  0F3D  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 15007                           
 15008                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 15009  0F3E  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15010  0F3F  0620               	xorwf	_i2c1_object^(0+128),w
 15011  0F40  1D03               	skipz
 15012  0F41  2F4A               	goto	l4216
 15013                           
 15014                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 15015  0F42  1422               	bsf	(_i2c1_object^(0+128)+2),0
 15016  0F43  2F4A               	goto	l4216
 15017  0F44                     l4214:	
 15018                           
 15019                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 15020  0F44  0140               	movlb	0	; select bank0
 15021  0F45  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 15022  0F46  0086               	movwf	6
 15023  0F47  0187               	clrf	7
 15024  0F48  0181               	clrf	1
 15025  0F49  0A81               	incf	1,f
 15026  0F4A                     l4216:	
 15027                           
 15028                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 15029  0F4A  0140               	movlb	0	; select bank0
 15030  0F4B  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 15031  0F4C  0086               	movwf	6
 15032  0F4D  0187               	clrf	7
 15033  0F4E  3002               	movlw	2
 15034  0F4F  0601               	xorwf	1,w
 15035  0F50  1D03               	btfss	3,2
 15036  0F51  0008               	return
 15037                           
 15038                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 15039  0F52  3189  211A         	fcall	_I2C1_WaitForLastPacketToComplete
 15040                           
 15041                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 15042  0F54  014E               	movlb	14	; select bank14
 15043  0F55  140F               	bsf	15,0	;volatile
 15044  0F56  0008               	return
 15045  0F57                     __end_of_I2C1_MasterTRBInsert:	
 15046                           
 15047                           	psect	text45
 15048  091A                     __ptext45:	
 15049 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 15050 ;; Defined at:
 15051 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;		None
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;		None
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      void 
 15058 ;; Registers used:
 15059 ;;		wreg, status,2, status,0
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15069 ;;Total ram usage:        0 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; Hardware stack levels required when called:    4
 15072 ;; This function calls:
 15073 ;;		Nothing
 15074 ;; This function is called by:
 15075 ;;		_I2C1_MasterTRBInsert
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           
 15079                           
 15080                           ;psect for function _I2C1_WaitForLastPacketToComplete
 15081  091A                     _I2C1_WaitForLastPacketToComplete:	
 15082  091A                     l4198:	
 15083                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 15084                           
 15085                           ;incstack = 0
 15086                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 15087                           
 15088                           
 15089                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 15090  091A  0141               	movlb	1	; select bank1
 15091  091B  0840               	movf	_i2c1_state^(0+128),w
 15092  091C  1903               	btfsc	3,2
 15093  091D  0008               	return
 15094  091E  291A               	goto	l4198
 15095  091F                     __end_of_I2C1_WaitForLastPacketToComplete:	
 15096                           
 15097                           	psect	text46
 15098  0CAC                     __ptext46:	
 15099 ;; *************** function ___lwmod *****************
 15100 ;; Defined at:
 15101 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  divisor         2    8[BANK0 ] unsigned int 
 15104 ;;  dividend        2   10[BANK0 ] unsigned int 
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;  counter         1   13[BANK0 ] unsigned char 
 15107 ;; Return value:  Size  Location     Type
 15108 ;;                  2    8[BANK0 ] unsigned int 
 15109 ;; Registers used:
 15110 ;;		wreg, status,2, status,0
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15119 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15120 ;;Total ram usage:        6 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:    4
 15123 ;; This function calls:
 15124 ;;		Nothing
 15125 ;; This function is called by:
 15126 ;;		_TM1650_fastPrintNum
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           
 15131                           ;psect for function ___lwmod
 15132  0CAC                     ___lwmod:	
 15133                           
 15134                           ;incstack = 0
 15135                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15136  0CAC  0140               	movlb	0	; select bank0
 15137  0CAD  0828               	movf	___lwmod@divisor,w
 15138  0CAE  0429               	iorwf	___lwmod@divisor+1,w
 15139  0CAF  1903               	btfsc	3,2
 15140  0CB0  2CD4               	goto	l3392
 15141  0CB1  01AD               	clrf	___lwmod@counter
 15142  0CB2  0AAD               	incf	___lwmod@counter,f
 15143  0CB3                     l3382:	
 15144  0CB3  1BA9               	btfsc	___lwmod@divisor+1,7
 15145  0CB4  2CBF               	goto	l3384
 15146  0CB5  3001               	movlw	1
 15147  0CB6                     u1705:	
 15148  0CB6  35A8               	lslf	___lwmod@divisor,f
 15149  0CB7  0DA9               	rlf	___lwmod@divisor+1,f
 15150  0CB8  0B89               	decfsz	9,f
 15151  0CB9  2CB6               	goto	u1705
 15152  0CBA  3001               	movlw	1
 15153  0CBB  00AC               	movwf	??___lwmod
 15154  0CBC  082C               	movf	??___lwmod,w
 15155  0CBD  07AD               	addwf	___lwmod@counter,f
 15156  0CBE  2CB3               	goto	l3382
 15157  0CBF                     l3384:	
 15158  0CBF  0829               	movf	___lwmod@divisor+1,w
 15159  0CC0  022B               	subwf	___lwmod@dividend+1,w
 15160  0CC1  1D03               	skipz
 15161  0CC2  2CC5               	goto	u1725
 15162  0CC3  0828               	movf	___lwmod@divisor,w
 15163  0CC4  022A               	subwf	___lwmod@dividend,w
 15164  0CC5                     u1725:	
 15165  0CC5  1C03               	skipc
 15166  0CC6  2CCB               	goto	l3388
 15167  0CC7  0828               	movf	___lwmod@divisor,w
 15168  0CC8  02AA               	subwf	___lwmod@dividend,f
 15169  0CC9  0829               	movf	___lwmod@divisor+1,w
 15170  0CCA  3BAB               	subwfb	___lwmod@dividend+1,f
 15171  0CCB                     l3388:	
 15172  0CCB  3001               	movlw	1
 15173  0CCC                     u1735:	
 15174  0CCC  36A9               	lsrf	___lwmod@divisor+1,f
 15175  0CCD  0CA8               	rrf	___lwmod@divisor,f
 15176  0CCE  0B89               	decfsz	9,f
 15177  0CCF  2CCC               	goto	u1735
 15178  0CD0  3001               	movlw	1
 15179  0CD1  02AD               	subwf	___lwmod@counter,f
 15180  0CD2  1D03               	btfss	3,2
 15181  0CD3  2CBF               	goto	l3384
 15182  0CD4                     l3392:	
 15183  0CD4  082B               	movf	___lwmod@dividend+1,w
 15184  0CD5  00A9               	movwf	?___lwmod+1
 15185  0CD6  082A               	movf	___lwmod@dividend,w
 15186  0CD7  00A8               	movwf	?___lwmod
 15187  0CD8  0008               	return
 15188  0CD9                     __end_of___lwmod:	
 15189                           
 15190                           	psect	text47
 15191  0925                     __ptext47:	
 15192 ;; *************** function _CLOCK_init *****************
 15193 ;; Defined at:
 15194 ;;		line 8 in file "clock.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;		None
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;		None
 15199 ;; Return value:  Size  Location     Type
 15200 ;;                  1    wreg      void 
 15201 ;; Registers used:
 15202 ;;		wreg, status,2, status,0, pclath, cstack
 15203 ;; Tracked objects:
 15204 ;;		On entry : 0/0
 15205 ;;		On exit  : 0/0
 15206 ;;		Unchanged: 0/0
 15207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15212 ;;Total ram usage:        0 bytes
 15213 ;; Hardware stack levels used:    1
 15214 ;; Hardware stack levels required when called:    5
 15215 ;; This function calls:
 15216 ;;		_TMR0_SetInterruptHandler
 15217 ;; This function is called by:
 15218 ;;		_main
 15219 ;; This function uses a non-reentrant model
 15220 ;;
 15221                           
 15222                           
 15223                           ;psect for function _CLOCK_init
 15224  0925                     _CLOCK_init:	
 15225                           
 15226                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 15227                           
 15228                           ;incstack = 0
 15229                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 15230  0925  301F               	movlw	low _CLOCK_timerCallback
 15231  0926  0140               	movlb	0	; select bank0
 15232  0927  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 15233  0928  3009               	movlw	high _CLOCK_timerCallback
 15234  0929  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 15235  092A  3189  2159         	fcall	_TMR0_SetInterruptHandler
 15236  092C  0008               	return
 15237  092D                     __end_of_CLOCK_init:	
 15238                           
 15239                           	psect	text48
 15240  0959                     __ptext48:	
 15241 ;; *************** function _TMR0_SetInterruptHandler *****************
 15242 ;; Defined at:
 15243 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15246 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;		None
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  1    wreg      void 
 15251 ;; Registers used:
 15252 ;;		wreg
 15253 ;; Tracked objects:
 15254 ;;		On entry : 0/0
 15255 ;;		On exit  : 0/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15262 ;;Total ram usage:        2 bytes
 15263 ;; Hardware stack levels used:    1
 15264 ;; Hardware stack levels required when called:    4
 15265 ;; This function calls:
 15266 ;;		Nothing
 15267 ;; This function is called by:
 15268 ;;		_TMR0_Initialize
 15269 ;;		_CLOCK_init
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           
 15274                           ;psect for function _TMR0_SetInterruptHandler
 15275  0959                     _TMR0_SetInterruptHandler:	
 15276                           
 15277                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 15278                           
 15279                           ;incstack = 0
 15280                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 15281  0959  0140               	movlb	0	; select bank0
 15282  095A  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 15283  095B  0142               	movlb	2	; select bank2
 15284  095C  00C7               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 15285  095D  0140               	movlb	0	; select bank0
 15286  095E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 15287  095F  0142               	movlb	2	; select bank2
 15288  0960  00C6               	movwf	_TMR0_InterruptHandler^(0+256)
 15289  0961  0008               	return
 15290  0962                     __end_of_TMR0_SetInterruptHandler:	
 15291                           
 15292                           	psect	text49
 15293  0453                     __ptext49:	
 15294 ;; *************** function _BUTTONS_task *****************
 15295 ;; Defined at:
 15296 ;;		line 59 in file "buttons.c"
 15297 ;; Parameters:    Size  Location     Type
 15298 ;;		None
 15299 ;; Auto vars:     Size  Location     Type
 15300 ;;  btn             1    8[BANK0 ] PTR struct .
 15301 ;;		 -> buttons(32), 
 15302 ;;  i               1    5[BANK0 ] unsigned char 
 15303 ;;  time            2    6[BANK0 ] unsigned short 
 15304 ;; Return value:  Size  Location     Type
 15305 ;;                  1    wreg      void 
 15306 ;; Registers used:
 15307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15308 ;; Tracked objects:
 15309 ;;		On entry : 0/0
 15310 ;;		On exit  : 0/0
 15311 ;;		Unchanged: 0/0
 15312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15314 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15315 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15316 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15317 ;;Total ram usage:        7 bytes
 15318 ;; Hardware stack levels used:    1
 15319 ;; Hardware stack levels required when called:    5
 15320 ;; This function calls:
 15321 ;;		_CLOCK_getTime
 15322 ;; This function is called by:
 15323 ;;		_main
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           
 15328                           ;psect for function _BUTTONS_task
 15329  0453                     _BUTTONS_task:	
 15330                           
 15331                           ;buttons.c: 61:     time_t time = CLOCK_getTime();
 15332                           
 15333                           ;incstack = 0
 15334                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15335  0453  3189  2150  3184   	fcall	_CLOCK_getTime
 15336  0456  0140               	movlb	0	; select bank0
 15337  0457  0821               	movf	?_CLOCK_getTime+1,w
 15338  0458  00A7               	movwf	BUTTONS_task@time+1
 15339  0459  0820               	movf	?_CLOCK_getTime,w
 15340  045A  00A6               	movwf	BUTTONS_task@time
 15341                           
 15342                           ;buttons.c: 64:     if (time - lastTime < 5)
 15343  045B  0141               	movlb	1	; select bank1
 15344  045C  0833               	movf	_lastTime^(0+128),w
 15345  045D  0140               	movlb	0	; select bank0
 15346  045E  0226               	subwf	BUTTONS_task@time,w
 15347  045F  00A2               	movwf	??_BUTTONS_task
 15348  0460  0141               	movlb	1	; select bank1
 15349  0461  0834               	movf	(_lastTime+1)^(0+128),w
 15350  0462  0140               	movlb	0	; select bank0
 15351  0463  3B27               	subwfb	BUTTONS_task@time+1,w
 15352  0464  00A3               	movwf	??_BUTTONS_task+1
 15353  0465  3000               	movlw	0
 15354  0466  0223               	subwf	??_BUTTONS_task+1,w
 15355  0467  3005               	movlw	5
 15356  0468  1903               	skipnz
 15357  0469  0222               	subwf	??_BUTTONS_task,w
 15358  046A  1C03               	btfss	3,0
 15359  046B  0008               	return
 15360                           
 15361                           ;buttons.c: 67:     lastTime = time;
 15362  046C  0827               	movf	BUTTONS_task@time+1,w
 15363  046D  0141               	movlb	1	; select bank1
 15364  046E  00B4               	movwf	(_lastTime+1)^(0+128)
 15365  046F  0140               	movlb	0	; select bank0
 15366  0470  0826               	movf	BUTTONS_task@time,w
 15367  0471  0141               	movlb	1	; select bank1
 15368  0472  00B3               	movwf	_lastTime^(0+128)
 15369                           
 15370                           ;buttons.c: 70:     for (uint8_t i = 0; i < 4; i++) {
 15371  0473  0140               	movlb	0	; select bank0
 15372  0474  01A5               	clrf	BUTTONS_task@i
 15373  0475                     l4710:	
 15374                           
 15375                           ;buttons.c: 71:         button_t* btn = buttons + i;
 15376  0475  0825               	movf	BUTTONS_task@i,w
 15377  0476  00A2               	movwf	??_BUTTONS_task
 15378  0477  3002               	movlw	2
 15379  0478                     u2945:	
 15380  0478  35A2               	lslf	??_BUTTONS_task,f
 15381  0479  3EFF               	addlw	-1
 15382  047A  1D03               	skipz
 15383  047B  2C78               	goto	u2945
 15384  047C  3522               	lslf	??_BUTTONS_task,w
 15385  047D  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 15386  047E  00A3               	movwf	??_BUTTONS_task+1
 15387  047F  0823               	movf	??_BUTTONS_task+1,w
 15388  0480  00A8               	movwf	BUTTONS_task@btn
 15389                           
 15390                           ;buttons.c: 74:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 15391  0481  0828               	movf	BUTTONS_task@btn,w
 15392  0482  0086               	movwf	6
 15393  0483  3001               	movlw	1	; select bank2/3
 15394  0484  0087               	movwf	7
 15395  0485  3F40               	moviw [0]fsr1
 15396  0486  00A2               	movwf	??_BUTTONS_task
 15397  0487  3F41               	moviw [1]fsr1
 15398  0488  00A3               	movwf	??_BUTTONS_task+1
 15399  0489  0822               	movf	??_BUTTONS_task,w
 15400  048A  0086               	movwf	6
 15401  048B  0823               	movf	??_BUTTONS_task+1,w
 15402  048C  0087               	movwf	7
 15403  048D  3001               	movlw	1
 15404  048E  00A4               	movwf	??_BUTTONS_task+2
 15405  048F  0828               	movf	BUTTONS_task@btn,w
 15406  0490  3E02               	addlw	2
 15407  0491  0084               	movwf	4
 15408  0492  3001               	movlw	1	; select bank2/3
 15409  0493  0085               	movwf	5
 15410  0494  0A00               	incf	0,w
 15411  0495  2C97               	goto	u2954
 15412  0496                     u2955:	
 15413  0496  35A4               	lslf	??_BUTTONS_task+2,f
 15414  0497                     u2954:	
 15415  0497  0B89               	decfsz	9,f
 15416  0498  2C96               	goto	u2955
 15417  0499  0824               	movf	??_BUTTONS_task+2,w
 15418  049A  0501               	andwf	1,w
 15419  049B  1D03               	btfss	3,2
 15420  049C  2CB6               	goto	l4718
 15421                           
 15422                           ;buttons.c: 75:             btn->state = STATE_PRESSED;
 15423  049D  0828               	movf	BUTTONS_task@btn,w
 15424  049E  3E03               	addlw	3
 15425  049F  0086               	movwf	6
 15426  04A0  3001               	movlw	1	; select bank2/3
 15427  04A1  0087               	movwf	7
 15428  04A2  0181               	clrf	1
 15429  04A3  0A81               	incf	1,f
 15430                           
 15431                           ;buttons.c: 76:             if(btn->event == EVENT_IDLE){
 15432  04A4  0828               	movf	BUTTONS_task@btn,w
 15433  04A5  3E07               	addlw	7
 15434  04A6  0086               	movwf	6
 15435  04A7  3001               	movlw	1	; select bank2/3
 15436  04A8  0087               	movwf	7
 15437  04A9  0801               	movf	1,w
 15438  04AA  1D03               	btfss	3,2
 15439  04AB  2CBC               	goto	l913
 15440                           
 15441                           ;buttons.c: 77:                 btn->lastHoldTime = time;
 15442  04AC  0828               	movf	BUTTONS_task@btn,w
 15443  04AD  3E05               	addlw	5
 15444  04AE  0086               	movwf	6
 15445  04AF  3001               	movlw	1	; select bank2/3
 15446  04B0  0087               	movwf	7
 15447  04B1  0826               	movf	BUTTONS_task@time,w
 15448  04B2  3FC0               	movwi [0]fsr1
 15449  04B3  0827               	movf	BUTTONS_task@time+1,w
 15450  04B4  3FC1               	movwi [1]fsr1
 15451  04B5  2CBC               	goto	l913
 15452  04B6                     l4718:	
 15453                           
 15454                           ;buttons.c: 80:             btn->state = STATE_UNPRESSED;
 15455  04B6  0828               	movf	BUTTONS_task@btn,w
 15456  04B7  3E03               	addlw	3
 15457  04B8  0086               	movwf	6
 15458  04B9  3001               	movlw	1	; select bank2/3
 15459  04BA  0087               	movwf	7
 15460  04BB  0181               	clrf	1
 15461  04BC                     l913:	
 15462                           ;buttons.c: 81:         }
 15463                           
 15464                           
 15465                           ;buttons.c: 83:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 15466  04BC  0828               	movf	BUTTONS_task@btn,w
 15467  04BD  3E03               	addlw	3
 15468  04BE  0086               	movwf	6
 15469  04BF  3001               	movlw	1	; select bank2/3
 15470  04C0  0087               	movwf	7
 15471  04C1  0801               	movf	1,w
 15472  04C2  1D03               	btfss	3,2
 15473  04C3  2CD4               	goto	l4724
 15474  04C4  0828               	movf	BUTTONS_task@btn,w
 15475  04C5  3E04               	addlw	4
 15476  04C6  0086               	movwf	6
 15477  04C7  3001               	movlw	1	; select bank2/3
 15478  04C8  0087               	movwf	7
 15479  04C9  0301               	decf	1,w
 15480  04CA  1D03               	btfss	3,2
 15481  04CB  2CD4               	goto	l4724
 15482                           
 15483                           ;buttons.c: 85:             btn->event = EVENT_PRESSED;
 15484  04CC  0828               	movf	BUTTONS_task@btn,w
 15485  04CD  3E07               	addlw	7
 15486  04CE  0086               	movwf	6
 15487  04CF  3001               	movlw	1	; select bank2/3
 15488  04D0  0087               	movwf	7
 15489  04D1  0181               	clrf	1
 15490  04D2  0A81               	incf	1,f
 15491                           
 15492                           ;buttons.c: 86:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 15493  04D3  2D21               	goto	l915
 15494  04D4                     l4724:	
 15495  04D4  0828               	movf	BUTTONS_task@btn,w
 15496  04D5  3E03               	addlw	3
 15497  04D6  0086               	movwf	6
 15498  04D7  3001               	movlw	1	; select bank2/3
 15499  04D8  0087               	movwf	7
 15500  04D9  0301               	decf	1,w
 15501  04DA  1D03               	btfss	3,2
 15502  04DB  2D02               	goto	l4734
 15503  04DC  0828               	movf	BUTTONS_task@btn,w
 15504  04DD  3E04               	addlw	4
 15505  04DE  0086               	movwf	6
 15506  04DF  3001               	movlw	1	; select bank2/3
 15507  04E0  0087               	movwf	7
 15508  04E1  0301               	decf	1,w
 15509  04E2  1D03               	btfss	3,2
 15510  04E3  2D02               	goto	l4734
 15511                           
 15512                           ;buttons.c: 87:             if(time - btn->lastHoldTime > 500){
 15513  04E4  0828               	movf	BUTTONS_task@btn,w
 15514  04E5  3E05               	addlw	5
 15515  04E6  0086               	movwf	6
 15516  04E7  3001               	movlw	1	; select bank2/3
 15517  04E8  0087               	movwf	7
 15518  04E9  3F40               	moviw [0]fsr1
 15519  04EA  0226               	subwf	BUTTONS_task@time,w
 15520  04EB  00A2               	movwf	??_BUTTONS_task
 15521  04EC  3F41               	moviw [1]fsr1
 15522  04ED  3B27               	subwfb	BUTTONS_task@time+1,w
 15523  04EE  00A3               	movwf	??_BUTTONS_task+1
 15524  04EF  3001               	movlw	1
 15525  04F0  0223               	subwf	??_BUTTONS_task+1,w
 15526  04F1  30F5               	movlw	245
 15527  04F2  1903               	skipnz
 15528  04F3  0222               	subwf	??_BUTTONS_task,w
 15529  04F4  1C03               	skipc
 15530  04F5  2CF8               	goto	l4732
 15531                           
 15532                           ;buttons.c: 88:                 btn->event = EVENT_HELD;
 15533  04F6  3003               	movlw	3
 15534  04F7  2CF9               	goto	L2
 15535  04F8                     l4732:	
 15536                           ;buttons.c: 89:             } else {
 15537                           
 15538                           
 15539                           ;buttons.c: 90:                 btn->event = EVENT_INTER_HOLD;
 15540  04F8  3002               	movlw	2
 15541  04F9                     L2:	
 15542  04F9  00A2               	movwf	??_BUTTONS_task
 15543  04FA  0828               	movf	BUTTONS_task@btn,w
 15544  04FB  3E07               	addlw	7
 15545  04FC  0086               	movwf	6
 15546  04FD  3001               	movlw	1	; select bank2/3
 15547  04FE  0087               	movwf	7
 15548  04FF  0822               	movf	??_BUTTONS_task,w
 15549  0500  0081               	movwf	1
 15550  0501  2D21               	goto	l915
 15551  0502                     l4734:	
 15552  0502  0828               	movf	BUTTONS_task@btn,w
 15553  0503  3E03               	addlw	3
 15554  0504  0086               	movwf	6
 15555  0505  3001               	movlw	1	; select bank2/3
 15556  0506  0087               	movwf	7
 15557  0507  0801               	movf	1,w
 15558  0508  1D03               	btfss	3,2
 15559  0509  2D21               	goto	l915
 15560  050A  0828               	movf	BUTTONS_task@btn,w
 15561  050B  3E04               	addlw	4
 15562  050C  0086               	movwf	6
 15563  050D  3001               	movlw	1	; select bank2/3
 15564  050E  0087               	movwf	7
 15565  050F  0301               	decf	1,w
 15566  0510  1D03               	btfss	3,2
 15567  0511  2D21               	goto	l915
 15568  0512  0828               	movf	BUTTONS_task@btn,w
 15569  0513  3E07               	addlw	7
 15570  0514  0086               	movwf	6
 15571  0515  3001               	movlw	1	; select bank2/3
 15572  0516  0087               	movwf	7
 15573  0517  3003               	movlw	3
 15574  0518  0601               	xorwf	1,w
 15575  0519  1D03               	btfss	3,2
 15576  051A  2D21               	goto	l915
 15577                           
 15578                           ;buttons.c: 93:             btn->event = EVENT_IDLE;
 15579  051B  0828               	movf	BUTTONS_task@btn,w
 15580  051C  3E07               	addlw	7
 15581  051D  0086               	movwf	6
 15582  051E  3001               	movlw	1	; select bank2/3
 15583  051F  0087               	movwf	7
 15584  0520  0181               	clrf	1
 15585  0521                     l915:	
 15586                           
 15587                           ;buttons.c: 96:         btn->lastState = btn->state;
 15588  0521  0828               	movf	BUTTONS_task@btn,w
 15589  0522  3E03               	addlw	3
 15590  0523  0086               	movwf	6
 15591  0524  3001               	movlw	1	; select bank2/3
 15592  0525  0087               	movwf	7
 15593  0526  0801               	movf	1,w
 15594  0527  00A2               	movwf	??_BUTTONS_task
 15595  0528  0828               	movf	BUTTONS_task@btn,w
 15596  0529  3E04               	addlw	4
 15597  052A  0086               	movwf	6
 15598  052B  3001               	movlw	1	; select bank2/3
 15599  052C  0087               	movwf	7
 15600  052D  0822               	movf	??_BUTTONS_task,w
 15601  052E  0081               	movwf	1
 15602                           
 15603                           ;buttons.c: 97:     }
 15604  052F  3001               	movlw	1
 15605  0530  00A2               	movwf	??_BUTTONS_task
 15606  0531  0822               	movf	??_BUTTONS_task,w
 15607  0532  07A5               	addwf	BUTTONS_task@i,f
 15608  0533  3004               	movlw	4
 15609  0534  0225               	subwf	BUTTONS_task@i,w
 15610  0535  1803               	btfsc	3,0
 15611  0536  0008               	return
 15612  0537  2C75               	goto	l4710
 15613  0538                     __end_of_BUTTONS_task:	
 15614                           
 15615                           	psect	text50
 15616  0EBD                     __ptext50:	
 15617 ;; *************** function _BUTTONS_init *****************
 15618 ;; Defined at:
 15619 ;;		line 26 in file "buttons.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;		None
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;		None
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  1    wreg      void 
 15626 ;; Registers used:
 15627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15636 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15637 ;;Total ram usage:        1 bytes
 15638 ;; Hardware stack levels used:    1
 15639 ;; Hardware stack levels required when called:    5
 15640 ;; This function calls:
 15641 ;;		_GPIO_init
 15642 ;;		_init
 15643 ;; This function is called by:
 15644 ;;		_main
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           
 15649                           ;psect for function _BUTTONS_init
 15650  0EBD                     _BUTTONS_init:	
 15651                           
 15652                           ;buttons.c: 27:     menu = &buttons[0];
 15653                           
 15654                           ;incstack = 0
 15655                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15656  0EBD  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 15657  0EBE  0140               	movlb	0	; select bank0
 15658  0EBF  00A5               	movwf	??_BUTTONS_init
 15659  0EC0  0825               	movf	??_BUTTONS_init,w
 15660  0EC1  0141               	movlb	1	; select bank1
 15661  0EC2  00BB               	movwf	_menu^(0+128)
 15662                           
 15663                           ;buttons.c: 28:     up = &buttons[1];
 15664  0EC3  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 15665  0EC4  0140               	movlb	0	; select bank0
 15666  0EC5  00A5               	movwf	??_BUTTONS_init
 15667  0EC6  0825               	movf	??_BUTTONS_init,w
 15668  0EC7  00F1               	movwf	_up
 15669                           
 15670                           ;buttons.c: 29:     down = &buttons[2];
 15671  0EC8  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 15672  0EC9  00A5               	movwf	??_BUTTONS_init
 15673  0ECA  0825               	movf	??_BUTTONS_init,w
 15674  0ECB  00F0               	movwf	_down
 15675                           
 15676                           ;buttons.c: 30:     enter = &buttons[3];
 15677  0ECC  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 15678  0ECD  00A5               	movwf	??_BUTTONS_init
 15679  0ECE  0825               	movf	??_BUTTONS_init,w
 15680  0ECF  0141               	movlb	1	; select bank1
 15681  0ED0  00BA               	movwf	_enter^(0+128)
 15682                           
 15683                           ;buttons.c: 32:     init(menu, &PORTC, 2);
 15684  0ED1  300E               	movlw	14
 15685  0ED2  0140               	movlb	0	; select bank0
 15686  0ED3  00A0               	movwf	init@port
 15687  0ED4  3000               	movlw	0
 15688  0ED5  00A1               	movwf	init@port+1
 15689  0ED6  3002               	movlw	2
 15690  0ED7  00A5               	movwf	??_BUTTONS_init
 15691  0ED8  0825               	movf	??_BUTTONS_init,w
 15692  0ED9  00A2               	movwf	init@pin
 15693  0EDA  0141               	movlb	1	; select bank1
 15694  0EDB  083B               	movf	_menu^(0+128),w
 15695  0EDC  318B  2380  318E   	fcall	_init
 15696                           
 15697                           ;buttons.c: 33:     init(enter, &PORTA, 2);
 15698  0EDF  300C               	movlw	12
 15699  0EE0  0140               	movlb	0	; select bank0
 15700  0EE1  00A0               	movwf	init@port
 15701  0EE2  3000               	movlw	0
 15702  0EE3  00A1               	movwf	init@port+1
 15703  0EE4  3002               	movlw	2
 15704  0EE5  00A5               	movwf	??_BUTTONS_init
 15705  0EE6  0825               	movf	??_BUTTONS_init,w
 15706  0EE7  00A2               	movwf	init@pin
 15707  0EE8  0141               	movlb	1	; select bank1
 15708  0EE9  083A               	movf	_enter^(0+128),w
 15709  0EEA  318B  2380  318E   	fcall	_init
 15710                           
 15711                           ;buttons.c: 34:     init(down, &PORTC, 0);
 15712  0EED  300E               	movlw	14
 15713  0EEE  0140               	movlb	0	; select bank0
 15714  0EEF  00A0               	movwf	init@port
 15715  0EF0  3000               	movlw	0
 15716  0EF1  00A1               	movwf	init@port+1
 15717  0EF2  01A2               	clrf	init@pin
 15718  0EF3  0870               	movf	_down,w
 15719  0EF4  318B  2380  318E   	fcall	_init
 15720                           
 15721                           ;buttons.c: 35:     init(up, &PORTC, 1);
 15722  0EF7  300E               	movlw	14
 15723  0EF8  0140               	movlb	0	; select bank0
 15724  0EF9  00A0               	movwf	init@port
 15725  0EFA  3000               	movlw	0
 15726  0EFB  00A1               	movwf	init@port+1
 15727  0EFC  01A2               	clrf	init@pin
 15728  0EFD  0AA2               	incf	init@pin,f
 15729  0EFE  0871               	movf	_up,w
 15730  0EFF  318B  2380  318E   	fcall	_init
 15731                           
 15732                           ;buttons.c: 37:     GPIO_init();
 15733  0F02  318A  222D         	fcall	_GPIO_init
 15734  0F04  0008               	return
 15735  0F05                     __end_of_BUTTONS_init:	
 15736                           
 15737                           	psect	text51
 15738  0B80                     __ptext51:	
 15739 ;; *************** function _init *****************
 15740 ;; Defined at:
 15741 ;;		line 19 in file "buttons.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;  btn             1    wreg     PTR struct .
 15744 ;;		 -> buttons(32), NULL(0), 
 15745 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 15746 ;;		 -> PORTA(1), PORTC(1), 
 15747 ;;  pin             1    2[BANK0 ] unsigned char 
 15748 ;; Auto vars:     Size  Location     Type
 15749 ;;  btn             1    4[BANK0 ] PTR struct .
 15750 ;;		 -> buttons(32), NULL(0), 
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  1    wreg      void 
 15753 ;; Registers used:
 15754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15763 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;Total ram usage:        5 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:    4
 15767 ;; This function calls:
 15768 ;;		Nothing
 15769 ;; This function is called by:
 15770 ;;		_BUTTONS_init
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           
 15775                           ;psect for function _init
 15776  0B80                     _init:	
 15777                           
 15778                           ;incstack = 0
 15779                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 15780                           ;init@btn stored from wreg
 15781  0B80  0140               	movlb	0	; select bank0
 15782  0B81  00A4               	movwf	init@btn
 15783                           
 15784                           ;buttons.c: 20:     btn->port = port;
 15785  0B82  0824               	movf	init@btn,w
 15786  0B83  0086               	movwf	6
 15787  0B84  3001               	movlw	1	; select bank2/3
 15788  0B85  0087               	movwf	7
 15789  0B86  0820               	movf	init@port,w
 15790  0B87  3FC0               	movwi [0]fsr1
 15791  0B88  0821               	movf	init@port+1,w
 15792  0B89  3FC1               	movwi [1]fsr1
 15793                           
 15794                           ;buttons.c: 21:     btn->pin = pin;
 15795  0B8A  0822               	movf	init@pin,w
 15796  0B8B  00A3               	movwf	??_init
 15797  0B8C  0824               	movf	init@btn,w
 15798  0B8D  3E02               	addlw	2
 15799  0B8E  0086               	movwf	6
 15800  0B8F  3001               	movlw	1	; select bank2/3
 15801  0B90  0087               	movwf	7
 15802  0B91  0823               	movf	??_init,w
 15803  0B92  0081               	movwf	1
 15804                           
 15805                           ;buttons.c: 22:     btn->state = STATE_UNPRESSED;
 15806  0B93  0824               	movf	init@btn,w
 15807  0B94  3E03               	addlw	3
 15808  0B95  0086               	movwf	6
 15809  0B96  3001               	movlw	1	; select bank2/3
 15810  0B97  0087               	movwf	7
 15811  0B98  0181               	clrf	1
 15812                           
 15813                           ;buttons.c: 23:     btn->event = EVENT_IDLE;
 15814  0B99  0824               	movf	init@btn,w
 15815  0B9A  3E07               	addlw	7
 15816  0B9B  0086               	movwf	6
 15817  0B9C  3001               	movlw	1	; select bank2/3
 15818  0B9D  0087               	movwf	7
 15819  0B9E  0181               	clrf	1
 15820  0B9F  0008               	return
 15821  0BA0                     __end_of_init:	
 15822                           
 15823                           	psect	text52
 15824  0A2D                     __ptext52:	
 15825 ;; *************** function _GPIO_init *****************
 15826 ;; Defined at:
 15827 ;;		line 41 in file "buttons.c"
 15828 ;; Parameters:    Size  Location     Type
 15829 ;;		None
 15830 ;; Auto vars:     Size  Location     Type
 15831 ;;		None
 15832 ;; Return value:  Size  Location     Type
 15833 ;;                  1    wreg      void 
 15834 ;; Registers used:
 15835 ;;		None
 15836 ;; Tracked objects:
 15837 ;;		On entry : 0/0
 15838 ;;		On exit  : 0/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15845 ;;Total ram usage:        0 bytes
 15846 ;; Hardware stack levels used:    1
 15847 ;; Hardware stack levels required when called:    4
 15848 ;; This function calls:
 15849 ;;		Nothing
 15850 ;; This function is called by:
 15851 ;;		_BUTTONS_init
 15852 ;; This function uses a non-reentrant model
 15853 ;;
 15854                           
 15855                           
 15856                           ;psect for function _GPIO_init
 15857  0A2D                     _GPIO_init:	
 15858                           
 15859                           ;buttons.c: 43:     TRISAbits.TRISA2 = 1;
 15860                           
 15861                           ;incstack = 0
 15862                           ; Regs used in _GPIO_init: []
 15863  0A2D  0140               	movlb	0	; select bank0
 15864  0A2E  1512               	bsf	18,2	;volatile
 15865                           
 15866                           ;buttons.c: 44:     ANSELAbits.ANSA2 = 0;
 15867  0A2F  017E               	movlb	62	; select bank62
 15868  0A30  1138               	bcf	56,2	;volatile
 15869                           
 15870                           ;buttons.c: 45:     WPUAbits.WPUA2 = 1;
 15871  0A31  1539               	bsf	57,2	;volatile
 15872                           
 15873                           ;buttons.c: 47:     TRISCbits.TRISC0 = 1;
 15874  0A32  0140               	movlb	0	; select bank0
 15875  0A33  1414               	bsf	20,0	;volatile
 15876                           
 15877                           ;buttons.c: 48:     TRISCbits.TRISC1 = 1;
 15878  0A34  1494               	bsf	20,1	;volatile
 15879                           
 15880                           ;buttons.c: 49:     TRISCbits.TRISC2 = 1;
 15881  0A35  1514               	bsf	20,2	;volatile
 15882                           
 15883                           ;buttons.c: 50:     ANSELCbits.ANSC0 = 0;
 15884  0A36  017E               	movlb	62	; select bank62
 15885  0A37  104E               	bcf	78,0	;volatile
 15886                           
 15887                           ;buttons.c: 51:     ANSELCbits.ANSC1 = 0;
 15888  0A38  10CE               	bcf	78,1	;volatile
 15889                           
 15890                           ;buttons.c: 52:     ANSELCbits.ANSC2 = 0;
 15891  0A39  114E               	bcf	78,2	;volatile
 15892                           
 15893                           ;buttons.c: 53:     WPUCbits.WPUC0 = 1;
 15894  0A3A  144F               	bsf	79,0	;volatile
 15895                           
 15896                           ;buttons.c: 54:     WPUCbits.WPUC1 = 1;
 15897  0A3B  14CF               	bsf	79,1	;volatile
 15898                           
 15899                           ;buttons.c: 55:     WPUCbits.WPUC2 = 1;
 15900  0A3C  154F               	bsf	79,2	;volatile
 15901  0A3D  0008               	return
 15902  0A3E                     __end_of_GPIO_init:	
 15903                           
 15904                           	psect	text53
 15905  061A                     __ptext53:	
 15906 ;; *************** function _BEAT_task *****************
 15907 ;; Defined at:
 15908 ;;		line 67 in file "beat.c"
 15909 ;; Parameters:    Size  Location     Type
 15910 ;;		None
 15911 ;; Auto vars:     Size  Location     Type
 15912 ;;  offset          2   10[BANK0 ] unsigned short 
 15913 ;; Return value:  Size  Location     Type
 15914 ;;                  1    wreg      void 
 15915 ;; Registers used:
 15916 ;;		wreg, status,2, status,0, pclath, cstack
 15917 ;; Tracked objects:
 15918 ;;		On entry : 0/0
 15919 ;;		On exit  : 0/0
 15920 ;;		Unchanged: 0/0
 15921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15925 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15926 ;;Total ram usage:        4 bytes
 15927 ;; Hardware stack levels used:    1
 15928 ;; Hardware stack levels required when called:    5
 15929 ;; This function calls:
 15930 ;;		_ADCC_SetUpperThreshold
 15931 ;;		_CLOCK_getTime
 15932 ;;		___lwdiv
 15933 ;; This function is called by:
 15934 ;;		_main
 15935 ;; This function uses a non-reentrant model
 15936 ;;
 15937                           
 15938                           
 15939                           ;psect for function _BEAT_task
 15940  061A                     _BEAT_task:	
 15941                           
 15942                           ;beat.c: 70:     if (CLOCK_getTime() - lastRun < delay)
 15943                           
 15944                           ;incstack = 0
 15945                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 15946  061A  3189  2150  3186   	fcall	_CLOCK_getTime
 15947  061D  0141               	movlb	1	; select bank1
 15948  061E  0829               	movf	_lastRun^(0+128),w
 15949  061F  0140               	movlb	0	; select bank0
 15950  0620  0220               	subwf	?_CLOCK_getTime,w
 15951  0621  00A8               	movwf	??_BEAT_task
 15952  0622  0141               	movlb	1	; select bank1
 15953  0623  082A               	movf	(_lastRun+1)^(0+128),w
 15954  0624  0140               	movlb	0	; select bank0
 15955  0625  3B21               	subwfb	?_CLOCK_getTime+1,w
 15956  0626  00A9               	movwf	??_BEAT_task+1
 15957  0627  0141               	movlb	1	; select bank1
 15958  0628  0869               	movf	(_delay+1)^(0+128),w
 15959  0629  0140               	movlb	0	; select bank0
 15960  062A  0229               	subwf	??_BEAT_task+1,w
 15961  062B  1D03               	skipz
 15962  062C  2E31               	goto	u3205
 15963  062D  0141               	movlb	1	; select bank1
 15964  062E  0868               	movf	_delay^(0+128),w
 15965  062F  0140               	movlb	0	; select bank0
 15966  0630  0228               	subwf	??_BEAT_task,w
 15967  0631                     u3205:	
 15968  0631  1C03               	btfss	3,0
 15969  0632  0008               	return
 15970                           
 15971                           ;beat.c: 73:     lastRun = CLOCK_getTime();
 15972  0633  3189  2150  3186   	fcall	_CLOCK_getTime
 15973  0636  0140               	movlb	0	; select bank0
 15974  0637  0821               	movf	?_CLOCK_getTime+1,w
 15975  0638  0141               	movlb	1	; select bank1
 15976  0639  00AA               	movwf	(_lastRun+1)^(0+128)
 15977  063A  0140               	movlb	0	; select bank0
 15978  063B  0820               	movf	?_CLOCK_getTime,w
 15979  063C  0141               	movlb	1	; select bank1
 15980  063D  00A9               	movwf	_lastRun^(0+128)
 15981                           
 15982                           ;beat.c: 75:     if (thresholdExceeded == 1) {
 15983  063E  0336               	decf	_thresholdExceeded^(0+128),w
 15984  063F  1D03               	btfss	3,2
 15985  0640  2E47               	goto	l4816
 15986                           
 15987                           ;beat.c: 79:         thresholdCount++;
 15988  0641  3001               	movlw	1
 15989  0642  0142               	movlb	2	; select bank2
 15990  0643  07B8               	addwf	_thresholdCount^(0+256),f
 15991  0644  3000               	movlw	0
 15992  0645  3DB9               	addwfc	(_thresholdCount+1)^(0+256),f
 15993                           
 15994                           ;beat.c: 80:     } else {
 15995  0646  2E4F               	goto	l4820
 15996  0647                     l4816:	
 15997                           
 15998                           ;beat.c: 82:         thresholdCount = 0;
 15999  0647  0142               	movlb	2	; select bank2
 16000  0648  01B8               	clrf	_thresholdCount^(0+256)
 16001  0649  01B9               	clrf	(_thresholdCount+1)^(0+256)
 16002                           
 16003                           ;beat.c: 83:         delay = 20;
 16004  064A  3014               	movlw	20
 16005  064B  0141               	movlb	1	; select bank1
 16006  064C  00E8               	movwf	_delay^(0+128)
 16007  064D  3000               	movlw	0
 16008  064E  00E9               	movwf	(_delay^(0+128)+1)
 16009  064F                     l4820:	
 16010                           
 16011                           ;beat.c: 89:     if (thresholdExceeded == 1 && lastDetected == 0) {
 16012  064F  0141               	movlb	1	; select bank1
 16013  0650  0336               	decf	_thresholdExceeded^(0+128),w
 16014  0651  1D03               	btfss	3,2
 16015  0652  2E95               	goto	l4838
 16016  0653  0835               	movf	_lastDetected^(0+128),w
 16017  0654  1D03               	btfss	3,2
 16018  0655  2E95               	goto	l4838
 16019                           
 16020                           ;beat.c: 91:         detected = 1;
 16021  0656  01B7               	clrf	_detected^(0+128)
 16022  0657  0AB7               	incf	_detected^(0+128),f
 16023                           
 16024                           ;beat.c: 94:         delay = 100;
 16025  0658  3064               	movlw	100
 16026  0659  00E8               	movwf	_delay^(0+128)
 16027  065A  3000               	movlw	0
 16028  065B  00E9               	movwf	(_delay^(0+128)+1)
 16029                           
 16030                           ;beat.c: 97:         time_t offset = CLOCK_getTime() - lastBeat;
 16031  065C  3189  2150  3186   	fcall	_CLOCK_getTime
 16032  065F  0141               	movlb	1	; select bank1
 16033  0660  082B               	movf	_lastBeat^(0+128),w
 16034  0661  0140               	movlb	0	; select bank0
 16035  0662  0220               	subwf	?_CLOCK_getTime,w
 16036  0663  00AA               	movwf	BEAT_task@offset
 16037  0664  0141               	movlb	1	; select bank1
 16038  0665  082C               	movf	(_lastBeat+1)^(0+128),w
 16039  0666  0140               	movlb	0	; select bank0
 16040  0667  3B21               	subwfb	?_CLOCK_getTime+1,w
 16041  0668  00AB               	movwf	BEAT_task@offset+1
 16042                           
 16043                           ;beat.c: 99:         lastBeat = CLOCK_getTime();
 16044  0669  3189  2150  3186   	fcall	_CLOCK_getTime
 16045  066C  0140               	movlb	0	; select bank0
 16046  066D  0821               	movf	?_CLOCK_getTime+1,w
 16047  066E  0141               	movlb	1	; select bank1
 16048  066F  00AC               	movwf	(_lastBeat+1)^(0+128)
 16049  0670  0140               	movlb	0	; select bank0
 16050  0671  0820               	movf	?_CLOCK_getTime,w
 16051  0672  0141               	movlb	1	; select bank1
 16052  0673  00AB               	movwf	_lastBeat^(0+128)
 16053                           
 16054                           ;beat.c: 101:         if (offset < 150)
 16055  0674  3000               	movlw	0
 16056  0675  0140               	movlb	0	; select bank0
 16057  0676  022B               	subwf	BEAT_task@offset+1,w
 16058  0677  3096               	movlw	150
 16059  0678  1903               	skipnz
 16060  0679  022A               	subwf	BEAT_task@offset,w
 16061  067A  1803               	skipnc
 16062  067B  2E82               	goto	l4836
 16063                           
 16064                           ;beat.c: 102:             bpm = 400;
 16065  067C  3090               	movlw	144
 16066  067D  0142               	movlb	2	; select bank2
 16067  067E  00BA               	movwf	_bpm^(0+256)
 16068  067F  3001               	movlw	1
 16069  0680  00BB               	movwf	(_bpm^(0+256)+1)
 16070  0681  2E95               	goto	l4838
 16071  0682                     l4836:	
 16072                           
 16073                           ;beat.c: 104:             bpm = 60 * 1000 / offset;
 16074  0682  082B               	movf	BEAT_task@offset+1,w
 16075  0683  00A1               	movwf	___lwdiv@divisor+1
 16076  0684  082A               	movf	BEAT_task@offset,w
 16077  0685  00A0               	movwf	___lwdiv@divisor
 16078  0686  3060               	movlw	96
 16079  0687  00A2               	movwf	___lwdiv@dividend
 16080  0688  30EA               	movlw	234
 16081  0689  00A3               	movwf	___lwdiv@dividend+1
 16082  068A  318D  259C  3186   	fcall	___lwdiv
 16083  068D  0140               	movlb	0	; select bank0
 16084  068E  0821               	movf	?___lwdiv+1,w
 16085  068F  0142               	movlb	2	; select bank2
 16086  0690  00BB               	movwf	(_bpm+1)^(0+256)
 16087  0691  0140               	movlb	0	; select bank0
 16088  0692  0820               	movf	?___lwdiv,w
 16089  0693  0142               	movlb	2	; select bank2
 16090  0694  00BA               	movwf	_bpm^(0+256)
 16091  0695                     l4838:	
 16092                           
 16093                           ;beat.c: 110:     lastDetected = thresholdExceeded;
 16094  0695  0141               	movlb	1	; select bank1
 16095  0696  0836               	movf	_thresholdExceeded^(0+128),w
 16096  0697  0140               	movlb	0	; select bank0
 16097  0698  00A8               	movwf	??_BEAT_task
 16098  0699  0828               	movf	??_BEAT_task,w
 16099  069A  0141               	movlb	1	; select bank1
 16100  069B  00B5               	movwf	_lastDetected^(0+128)
 16101                           
 16102                           ;beat.c: 111:     thresholdExceeded = 0;
 16103  069C  01B6               	clrf	_thresholdExceeded^(0+128)
 16104                           
 16105                           ;beat.c: 113:     if (thresholdCount > 3) {
 16106  069D  0142               	movlb	2	; select bank2
 16107  069E  0839               	movf	(_thresholdCount+1)^(0+256),w
 16108  069F  3A80               	xorlw	128
 16109  06A0  0140               	movlb	0	; select bank0
 16110  06A1  00A8               	movwf	??_BEAT_task
 16111  06A2  3080               	movlw	128
 16112  06A3  0228               	subwf	??_BEAT_task,w
 16113  06A4  1D03               	skipz
 16114  06A5  2EA9               	goto	u3255
 16115  06A6  3004               	movlw	4
 16116  06A7  0142               	movlb	2	; select bank2
 16117  06A8  0238               	subwf	_thresholdCount^(0+256),w
 16118  06A9                     u3255:	
 16119  06A9  1C03               	skipc
 16120  06AA  2EC8               	goto	l4852
 16121                           
 16122                           ;beat.c: 114:         threshold += 1;
 16123  06AB  3001               	movlw	1
 16124  06AC  0141               	movlb	1	; select bank1
 16125  06AD  07EA               	addwf	_threshold^(0+128),f
 16126  06AE  3000               	movlw	0
 16127  06AF  3DEB               	addwfc	(_threshold+1)^(0+128),f
 16128                           
 16129                           ;beat.c: 115:         ADCC_SetUpperThreshold(threshold);
 16130  06B0  086B               	movf	(_threshold+1)^(0+128),w
 16131  06B1  0140               	movlb	0	; select bank0
 16132  06B2  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16133  06B3  0141               	movlb	1	; select bank1
 16134  06B4  086A               	movf	_threshold^(0+128),w
 16135  06B5  0140               	movlb	0	; select bank0
 16136  06B6  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16137  06B7  3189  213E  3186   	fcall	_ADCC_SetUpperThreshold
 16138                           
 16139                           ;beat.c: 116:         thresholdCount = 0;
 16140  06BA  0142               	movlb	2	; select bank2
 16141  06BB  01B8               	clrf	_thresholdCount^(0+256)
 16142  06BC  01B9               	clrf	(_thresholdCount+1)^(0+256)
 16143                           
 16144                           ;beat.c: 119:         lastBeat = CLOCK_getTime();
 16145  06BD  3189  2150         	fcall	_CLOCK_getTime
 16146  06BF  0140               	movlb	0	; select bank0
 16147  06C0  0821               	movf	?_CLOCK_getTime+1,w
 16148  06C1  0141               	movlb	1	; select bank1
 16149  06C2  00AC               	movwf	(_lastBeat+1)^(0+128)
 16150  06C3  0140               	movlb	0	; select bank0
 16151  06C4  0820               	movf	?_CLOCK_getTime,w
 16152  06C5  0141               	movlb	1	; select bank1
 16153  06C6  00AB               	movwf	_lastBeat^(0+128)
 16154                           
 16155                           ;beat.c: 120:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16156  06C7  0008               	return
 16157  06C8                     l4852:	
 16158  06C8  3189  2150  3186   	fcall	_CLOCK_getTime
 16159  06CB  0141               	movlb	1	; select bank1
 16160  06CC  082B               	movf	_lastBeat^(0+128),w
 16161  06CD  0140               	movlb	0	; select bank0
 16162  06CE  0220               	subwf	?_CLOCK_getTime,w
 16163  06CF  00A8               	movwf	??_BEAT_task
 16164  06D0  0141               	movlb	1	; select bank1
 16165  06D1  082C               	movf	(_lastBeat+1)^(0+128),w
 16166  06D2  0140               	movlb	0	; select bank0
 16167  06D3  3B21               	subwfb	?_CLOCK_getTime+1,w
 16168  06D4  00A9               	movwf	??_BEAT_task+1
 16169  06D5  3003               	movlw	3
 16170  06D6  0229               	subwf	??_BEAT_task+1,w
 16171  06D7  30E9               	movlw	233
 16172  06D8  1903               	skipnz
 16173  06D9  0228               	subwf	??_BEAT_task,w
 16174  06DA  1C03               	skipc
 16175  06DB  0008               	return
 16176                           
 16177                           ;beat.c: 121:         threshold -= 1;
 16178  06DC  3001               	movlw	1
 16179  06DD  0141               	movlb	1	; select bank1
 16180  06DE  02EA               	subwf	_threshold^(0+128),f
 16181  06DF  3000               	movlw	0
 16182  06E0  3BEB               	subwfb	(_threshold+1)^(0+128),f
 16183                           
 16184                           ;beat.c: 122:         ADCC_SetUpperThreshold(threshold);
 16185  06E1  086B               	movf	(_threshold+1)^(0+128),w
 16186  06E2  0140               	movlb	0	; select bank0
 16187  06E3  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16188  06E4  0141               	movlb	1	; select bank1
 16189  06E5  086A               	movf	_threshold^(0+128),w
 16190  06E6  0140               	movlb	0	; select bank0
 16191  06E7  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16192  06E8  3189  213E         	fcall	_ADCC_SetUpperThreshold
 16193  06EA  0008               	return
 16194  06EB                     __end_of_BEAT_task:	
 16195                           
 16196                           	psect	text54
 16197  0D9C                     __ptext54:	
 16198 ;; *************** function ___lwdiv *****************
 16199 ;; Defined at:
 16200 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 16201 ;; Parameters:    Size  Location     Type
 16202 ;;  divisor         2    0[BANK0 ] unsigned int 
 16203 ;;  dividend        2    2[BANK0 ] unsigned int 
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;  quotient        2    5[BANK0 ] unsigned int 
 16206 ;;  counter         1    7[BANK0 ] unsigned char 
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  2    0[BANK0 ] unsigned int 
 16209 ;; Registers used:
 16210 ;;		wreg, status,2, status,0
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/0
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16217 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16220 ;;Total ram usage:        8 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; Hardware stack levels required when called:    4
 16223 ;; This function calls:
 16224 ;;		Nothing
 16225 ;; This function is called by:
 16226 ;;		_TM1650_fastPrintNum
 16227 ;;		_BEAT_task
 16228 ;; This function uses a non-reentrant model
 16229 ;;
 16230                           
 16231                           
 16232                           ;psect for function ___lwdiv
 16233  0D9C                     ___lwdiv:	
 16234                           
 16235                           ;incstack = 0
 16236                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16237  0D9C  0140               	movlb	0	; select bank0
 16238  0D9D  01A5               	clrf	___lwdiv@quotient
 16239  0D9E  01A6               	clrf	___lwdiv@quotient+1
 16240  0D9F  0820               	movf	___lwdiv@divisor,w
 16241  0DA0  0421               	iorwf	___lwdiv@divisor+1,w
 16242  0DA1  1903               	btfsc	3,2
 16243  0DA2  2DCC               	goto	l3370
 16244  0DA3  01A7               	clrf	___lwdiv@counter
 16245  0DA4  0AA7               	incf	___lwdiv@counter,f
 16246  0DA5                     l3358:	
 16247  0DA5  1BA1               	btfsc	___lwdiv@divisor+1,7
 16248  0DA6  2DB1               	goto	l3360
 16249  0DA7  3001               	movlw	1
 16250  0DA8                     u1635:	
 16251  0DA8  35A0               	lslf	___lwdiv@divisor,f
 16252  0DA9  0DA1               	rlf	___lwdiv@divisor+1,f
 16253  0DAA  0B89               	decfsz	9,f
 16254  0DAB  2DA8               	goto	u1635
 16255  0DAC  3001               	movlw	1
 16256  0DAD  00A4               	movwf	??___lwdiv
 16257  0DAE  0824               	movf	??___lwdiv,w
 16258  0DAF  07A7               	addwf	___lwdiv@counter,f
 16259  0DB0  2DA5               	goto	l3358
 16260  0DB1                     l3360:	
 16261  0DB1  3001               	movlw	1
 16262  0DB2                     u1655:	
 16263  0DB2  35A5               	lslf	___lwdiv@quotient,f
 16264  0DB3  0DA6               	rlf	___lwdiv@quotient+1,f
 16265  0DB4  0B89               	decfsz	9,f
 16266  0DB5  2DB2               	goto	u1655
 16267  0DB6  0821               	movf	___lwdiv@divisor+1,w
 16268  0DB7  0223               	subwf	___lwdiv@dividend+1,w
 16269  0DB8  1D03               	skipz
 16270  0DB9  2DBC               	goto	u1665
 16271  0DBA  0820               	movf	___lwdiv@divisor,w
 16272  0DBB  0222               	subwf	___lwdiv@dividend,w
 16273  0DBC                     u1665:	
 16274  0DBC  1C03               	skipc
 16275  0DBD  2DC3               	goto	l3366
 16276  0DBE  0820               	movf	___lwdiv@divisor,w
 16277  0DBF  02A2               	subwf	___lwdiv@dividend,f
 16278  0DC0  0821               	movf	___lwdiv@divisor+1,w
 16279  0DC1  3BA3               	subwfb	___lwdiv@dividend+1,f
 16280  0DC2  1425               	bsf	___lwdiv@quotient,0
 16281  0DC3                     l3366:	
 16282  0DC3  3001               	movlw	1
 16283  0DC4                     u1675:	
 16284  0DC4  36A1               	lsrf	___lwdiv@divisor+1,f
 16285  0DC5  0CA0               	rrf	___lwdiv@divisor,f
 16286  0DC6  0B89               	decfsz	9,f
 16287  0DC7  2DC4               	goto	u1675
 16288  0DC8  3001               	movlw	1
 16289  0DC9  02A7               	subwf	___lwdiv@counter,f
 16290  0DCA  1D03               	btfss	3,2
 16291  0DCB  2DB1               	goto	l3360
 16292  0DCC                     l3370:	
 16293  0DCC  0826               	movf	___lwdiv@quotient+1,w
 16294  0DCD  00A1               	movwf	?___lwdiv+1
 16295  0DCE  0825               	movf	___lwdiv@quotient,w
 16296  0DCF  00A0               	movwf	?___lwdiv
 16297  0DD0  0008               	return
 16298  0DD1                     __end_of___lwdiv:	
 16299                           
 16300                           	psect	text55
 16301  0950                     __ptext55:	
 16302 ;; *************** function _CLOCK_getTime *****************
 16303 ;; Defined at:
 16304 ;;		line 16 in file "clock.c"
 16305 ;; Parameters:    Size  Location     Type
 16306 ;;		None
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;		None
 16309 ;; Return value:  Size  Location     Type
 16310 ;;                  2    0[BANK0 ] unsigned short 
 16311 ;; Registers used:
 16312 ;;		wreg
 16313 ;; Tracked objects:
 16314 ;;		On entry : 0/0
 16315 ;;		On exit  : 0/0
 16316 ;;		Unchanged: 0/0
 16317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;Total ram usage:        2 bytes
 16323 ;; Hardware stack levels used:    1
 16324 ;; Hardware stack levels required when called:    4
 16325 ;; This function calls:
 16326 ;;		Nothing
 16327 ;; This function is called by:
 16328 ;;		_BUTTONS_task
 16329 ;;		_CONTROLLER_task
 16330 ;;		_BEAT_task
 16331 ;;		_LED_task
 16332 ;; This function uses a non-reentrant model
 16333 ;;
 16334                           
 16335                           
 16336                           ;psect for function _CLOCK_getTime
 16337  0950                     _CLOCK_getTime:	
 16338                           
 16339                           ;clock.c: 17:     return currentTime;
 16340                           
 16341                           ;incstack = 0
 16342                           ; Regs used in _CLOCK_getTime: [wreg]
 16343  0950  0141               	movlb	1	; select bank1
 16344  0951  0832               	movf	(_currentTime+1)^(0+128),w
 16345  0952  0140               	movlb	0	; select bank0
 16346  0953  00A1               	movwf	?_CLOCK_getTime+1
 16347  0954  0141               	movlb	1	; select bank1
 16348  0955  0831               	movf	_currentTime^(0+128),w
 16349  0956  0140               	movlb	0	; select bank0
 16350  0957  00A0               	movwf	?_CLOCK_getTime
 16351  0958  0008               	return
 16352  0959                     __end_of_CLOCK_getTime:	
 16353                           
 16354                           	psect	text56
 16355  0AB6                     __ptext56:	
 16356 ;; *************** function _BEAT_init *****************
 16357 ;; Defined at:
 16358 ;;		line 41 in file "beat.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;		None
 16361 ;; Auto vars:     Size  Location     Type
 16362 ;;		None
 16363 ;; Return value:  Size  Location     Type
 16364 ;;                  1    wreg      void 
 16365 ;; Registers used:
 16366 ;;		wreg, status,2, status,0, pclath, cstack
 16367 ;; Tracked objects:
 16368 ;;		On entry : 0/0
 16369 ;;		On exit  : 0/0
 16370 ;;		Unchanged: 0/0
 16371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16376 ;;Total ram usage:        0 bytes
 16377 ;; Hardware stack levels used:    1
 16378 ;; Hardware stack levels required when called:    5
 16379 ;; This function calls:
 16380 ;;		_ADCC_SetADTIInterruptHandler
 16381 ;;		_ADCC_SetUpperThreshold
 16382 ;;		_ADCC_StartConversion
 16383 ;; This function is called by:
 16384 ;;		_main
 16385 ;; This function uses a non-reentrant model
 16386 ;;
 16387                           
 16388                           
 16389                           ;psect for function _BEAT_init
 16390  0AB6                     _BEAT_init:	
 16391                           
 16392                           ;beat.c: 42:     ADCC_SetUpperThreshold(threshold);
 16393                           
 16394                           ;incstack = 0
 16395                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 16396  0AB6  0141               	movlb	1	; select bank1
 16397  0AB7  086B               	movf	(_threshold+1)^(0+128),w
 16398  0AB8  0140               	movlb	0	; select bank0
 16399  0AB9  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16400  0ABA  0141               	movlb	1	; select bank1
 16401  0ABB  086A               	movf	_threshold^(0+128),w
 16402  0ABC  0140               	movlb	0	; select bank0
 16403  0ABD  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16404  0ABE  3189  213E  318A   	fcall	_ADCC_SetUpperThreshold
 16405                           
 16406                           ;beat.c: 43:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 16407  0AC1  3012               	movlw	low _adcThresholdHandler
 16408  0AC2  0140               	movlb	0	; select bank0
 16409  0AC3  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 16410  0AC4  3009               	movlw	high _adcThresholdHandler
 16411  0AC5  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 16412  0AC6  3189  2135  318A   	fcall	_ADCC_SetADTIInterruptHandler
 16413                           
 16414                           ;beat.c: 44:     ADCC_StartConversion(0x0F);
 16415  0AC9  300F               	movlw	15
 16416  0ACA  3189  2147         	fcall	_ADCC_StartConversion
 16417  0ACC  0008               	return
 16418  0ACD                     __end_of_BEAT_init:	
 16419                           
 16420                           	psect	text57
 16421  0947                     __ptext57:	
 16422 ;; *************** function _ADCC_StartConversion *****************
 16423 ;; Defined at:
 16424 ;;		line 121 in file "mcc_generated_files/adcc.c"
 16425 ;; Parameters:    Size  Location     Type
 16426 ;;  channel         1    wreg     enum E10867
 16427 ;; Auto vars:     Size  Location     Type
 16428 ;;  channel         1    0[BANK0 ] enum E10867
 16429 ;; Return value:  Size  Location     Type
 16430 ;;                  1    wreg      void 
 16431 ;; Registers used:
 16432 ;;		wreg
 16433 ;; Tracked objects:
 16434 ;;		On entry : 0/0
 16435 ;;		On exit  : 0/0
 16436 ;;		Unchanged: 0/0
 16437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16442 ;;Total ram usage:        1 bytes
 16443 ;; Hardware stack levels used:    1
 16444 ;; Hardware stack levels required when called:    4
 16445 ;; This function calls:
 16446 ;;		Nothing
 16447 ;; This function is called by:
 16448 ;;		_BEAT_init
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           
 16453                           ;psect for function _ADCC_StartConversion
 16454  0947                     _ADCC_StartConversion:	
 16455                           
 16456                           ;incstack = 0
 16457                           ; Regs used in _ADCC_StartConversion: [wreg]
 16458                           ;ADCC_StartConversion@channel stored from wreg
 16459  0947  0140               	movlb	0	; select bank0
 16460  0948  00A0               	movwf	ADCC_StartConversion@channel
 16461                           
 16462                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 16463  0949  0820               	movf	ADCC_StartConversion@channel,w
 16464  094A  0141               	movlb	1	; select bank1
 16465  094B  009F               	movwf	31	;volatile
 16466                           
 16467                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 16468  094C  0142               	movlb	2	; select bank2
 16469  094D  1791               	bsf	17,7	;volatile
 16470                           
 16471                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 16472  094E  1411               	bsf	17,0	;volatile
 16473  094F  0008               	return
 16474  0950                     __end_of_ADCC_StartConversion:	
 16475                           
 16476                           	psect	text58
 16477  093E                     __ptext58:	
 16478 ;; *************** function _ADCC_SetUpperThreshold *****************
 16479 ;; Defined at:
 16480 ;;		line 251 in file "mcc_generated_files/adcc.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		wreg, status,2
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16498 ;;Total ram usage:        2 bytes
 16499 ;; Hardware stack levels used:    1
 16500 ;; Hardware stack levels required when called:    4
 16501 ;; This function calls:
 16502 ;;		Nothing
 16503 ;; This function is called by:
 16504 ;;		_BEAT_init
 16505 ;;		_BEAT_task
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           
 16510                           ;psect for function _ADCC_SetUpperThreshold
 16511  093E                     _ADCC_SetUpperThreshold:	
 16512                           
 16513                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 16514                           
 16515                           ;incstack = 0
 16516                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 16517  093E  0140               	movlb	0	; select bank0
 16518  093F  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 16519  0940  0141               	movlb	1	; select bank1
 16520  0941  008F               	movwf	15	;volatile
 16521                           
 16522                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 16523  0942  0140               	movlb	0	; select bank0
 16524  0943  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 16525  0944  0141               	movlb	1	; select bank1
 16526  0945  008E               	movwf	14	;volatile
 16527  0946  0008               	return
 16528  0947                     __end_of_ADCC_SetUpperThreshold:	
 16529                           
 16530                           	psect	text59
 16531  0935                     __ptext59:	
 16532 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 16533 ;; Defined at:
 16534 ;;		line 317 in file "mcc_generated_files/adcc.c"
 16535 ;; Parameters:    Size  Location     Type
 16536 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16537 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 16538 ;; Auto vars:     Size  Location     Type
 16539 ;;		None
 16540 ;; Return value:  Size  Location     Type
 16541 ;;                  1    wreg      void 
 16542 ;; Registers used:
 16543 ;;		wreg
 16544 ;; Tracked objects:
 16545 ;;		On entry : 0/0
 16546 ;;		On exit  : 0/0
 16547 ;;		Unchanged: 0/0
 16548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16553 ;;Total ram usage:        2 bytes
 16554 ;; Hardware stack levels used:    1
 16555 ;; Hardware stack levels required when called:    4
 16556 ;; This function calls:
 16557 ;;		Nothing
 16558 ;; This function is called by:
 16559 ;;		_ADCC_Initialize
 16560 ;;		_BEAT_init
 16561 ;; This function uses a non-reentrant model
 16562 ;;
 16563                           
 16564                           
 16565                           ;psect for function _ADCC_SetADTIInterruptHandler
 16566  0935                     _ADCC_SetADTIInterruptHandler:	
 16567                           
 16568                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 16569                           
 16570                           ;incstack = 0
 16571                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 16572  0935  0140               	movlb	0	; select bank0
 16573  0936  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 16574  0937  0142               	movlb	2	; select bank2
 16575  0938  00C5               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 16576  0939  0140               	movlb	0	; select bank0
 16577  093A  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 16578  093B  0142               	movlb	2	; select bank2
 16579  093C  00C4               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 16580  093D  0008               	return
 16581  093E                     __end_of_ADCC_SetADTIInterruptHandler:	
 16582                           
 16583                           	psect	intentry
 16584  0004                     __pintentry:	
 16585 ;; *************** function _INTERRUPT_InterruptManager *****************
 16586 ;; Defined at:
 16587 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16588 ;; Parameters:    Size  Location     Type
 16589 ;;		None
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;		None
 16592 ;; Return value:  Size  Location     Type
 16593 ;;                  1    wreg      void 
 16594 ;; Registers used:
 16595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16596 ;; Tracked objects:
 16597 ;;		On entry : 0/0
 16598 ;;		On exit  : 0/0
 16599 ;;		Unchanged: 0/0
 16600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16605 ;;Total ram usage:        0 bytes
 16606 ;; Hardware stack levels used:    1
 16607 ;; Hardware stack levels required when called:    3
 16608 ;; This function calls:
 16609 ;;		Absolute function
 16610 ;;		_ADCC_ThresholdISR
 16611 ;;		_DMX_interrupt
 16612 ;;		_EUSART1_Receive_ISR
 16613 ;;		_I2C1_BusCollisionISR
 16614 ;;		_I2C1_ISR
 16615 ;;		_TMR0_ISR
 16616 ;; This function is called by:
 16617 ;;		Interrupt level 1
 16618 ;; This function uses a non-reentrant model
 16619 ;;
 16620                           
 16621  0004                     _INTERRUPT_InterruptManager:	
 16622                           
 16623                           ;incstack = 0
 16624 ;; hardware stack exceeded
 16625  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16626                           
 16627                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16628  0005  3180               	pagesel	$
 16629                           
 16630                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 16631  0006  014E               	movlb	14	; select bank14
 16632  0007  1A96               	btfsc	22,5	;volatile
 16633  0008  1E8C               	btfss	12,5	;volatile
 16634  0009  280E               	goto	i1l423
 16635                           
 16636                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 16637  000A  3189  21F2  3180   	fcall	_TMR0_ISR
 16638                           
 16639                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 16640  000D  282D               	goto	i1l435
 16641  000E                     i1l423:	
 16642                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 16643                           
 16644  000E  1F0B               	btfss	11,6	;volatile
 16645  000F  282D               	goto	i1l435
 16646                           
 16647                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 16648  0010  1897               	btfsc	23,1	;volatile
 16649  0011  1C8D               	btfss	13,1	;volatile
 16650  0012  2817               	goto	i1l426
 16651                           
 16652                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             ADCC_ThresholdISR();
 16653  0013  3189  21E5  3180   	fcall	_ADCC_ThresholdISR
 16654                           
 16655                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16656  0016  282D               	goto	i1l435
 16657  0017                     i1l426:	
 16658                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 16659                           
 16660  0017  1A99               	btfsc	25,5	;volatile
 16661  0018  1E8F               	btfss	15,5	;volatile
 16662  0019  2821               	goto	i1l428
 16663                           
 16664                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART1_RxDefaultInterruptHandler();
 16665  001A  0142               	movlb	2	; select bank2
 16666  001B  084F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 16667  001C  008A               	movwf	10
 16668  001D  084E               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 16669  001E  000A               	callw
 16670  001F  3180               	pagesel	$
 16671                           
 16672                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 16673  0020  282D               	goto	i1l435
 16674  0021                     i1l428:	
 16675                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 16676                           
 16677  0021  1899               	btfsc	25,1	;volatile
 16678  0022  1C8F               	btfss	15,1	;volatile
 16679  0023  2828               	goto	i1l430
 16680                           
 16681                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             I2C1_BusCollisionISR();
 16682  0024  3189  210C  3180   	fcall	_I2C1_BusCollisionISR
 16683                           
 16684                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 16685  0027  282D               	goto	i1l435
 16686  0028                     i1l430:	
 16687                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 16688                           
 16689  0028  1819               	btfsc	25,0	;volatile
 16690  0029  1C0F               	btfss	15,0	;volatile
 16691  002A  282D               	goto	i1l435
 16692                           
 16693                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             I2C1_ISR();
 16694  002B  3183  2305         	fcall	_I2C1_ISR
 16695  002D                     i1l435:	
 16696                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 16697                           
 16698  002D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16699  002E  0009               	retfie
 16700  002F                     __end_of_INTERRUPT_InterruptManager:	
 16701                           
 16702                           	psect	text61
 16703  09F2                     __ptext61:	
 16704 ;; *************** function _TMR0_ISR *****************
 16705 ;; Defined at:
 16706 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      void 
 16713 ;; Registers used:
 16714 ;;		wreg, status,2, status,0, pclath, cstack
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    1
 16727 ;; This function calls:
 16728 ;;		Absolute function
 16729 ;;		_CLOCK_timerCallback
 16730 ;;		_TMR0_DefaultInterruptHandler
 16731 ;; This function is called by:
 16732 ;;		_INTERRUPT_InterruptManager
 16733 ;; This function uses a non-reentrant model
 16734 ;;
 16735                           
 16736                           
 16737                           ;psect for function _TMR0_ISR
 16738  09F2                     _TMR0_ISR:	
 16739                           
 16740                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 16741                           
 16742                           ;incstack = 0
 16743 ;; hardware stack exceeded
 16744                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16745  09F2  014E               	movlb	14	; select bank14
 16746  09F3  128C               	bcf	12,5	;volatile
 16747                           
 16748                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 16749  09F4  0142               	movlb	2	; select bank2
 16750  09F5  0846               	movf	_TMR0_InterruptHandler^(0+256),w
 16751  09F6  0447               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 16752  09F7  1903               	btfsc	3,2
 16753  09F8  0008               	return
 16754                           
 16755                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 16756  09F9  0847               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 16757  09FA  008A               	movwf	10
 16758  09FB  0846               	movf	_TMR0_InterruptHandler^(0+256),w
 16759  09FC  000A               	callw
 16760  09FD  3189               	pagesel	$
 16761  09FE  0008               	return
 16762  09FF                     __end_of_TMR0_ISR:	
 16763                           
 16764                           	psect	text62
 16765  091F                     __ptext62:	
 16766 ;; *************** function _CLOCK_timerCallback *****************
 16767 ;; Defined at:
 16768 ;;		line 20 in file "clock.c"
 16769 ;; Parameters:    Size  Location     Type
 16770 ;;		None
 16771 ;; Auto vars:     Size  Location     Type
 16772 ;;		None
 16773 ;; Return value:  Size  Location     Type
 16774 ;;                  1    wreg      void 
 16775 ;; Registers used:
 16776 ;;		wreg
 16777 ;; Tracked objects:
 16778 ;;		On entry : 0/0
 16779 ;;		On exit  : 0/0
 16780 ;;		Unchanged: 0/0
 16781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16786 ;;Total ram usage:        0 bytes
 16787 ;; Hardware stack levels used:    1
 16788 ;; This function calls:
 16789 ;;		Nothing
 16790 ;; This function is called by:
 16791 ;;		_CLOCK_init
 16792 ;;		_TMR0_ISR
 16793 ;; This function uses a non-reentrant model
 16794 ;;
 16795                           
 16796                           
 16797                           ;psect for function _CLOCK_timerCallback
 16798  091F                     _CLOCK_timerCallback:	
 16799                           
 16800                           ;clock.c: 21:     currentTime++;
 16801                           
 16802                           ;incstack = 0
 16803 ;; hardware stack exceeded
 16804                           ; Regs used in _CLOCK_timerCallback: [wreg]
 16805  091F  3001               	movlw	1
 16806  0920  0141               	movlb	1	; select bank1
 16807  0921  07B1               	addwf	_currentTime^(0+128),f
 16808  0922  3000               	movlw	0
 16809  0923  3DB2               	addwfc	(_currentTime+1)^(0+128),f
 16810  0924  0008               	return
 16811  0925                     __end_of_CLOCK_timerCallback:	
 16812                           
 16813                           	psect	text63
 16814  0908                     __ptext63:	
 16815 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16816 ;; Defined at:
 16817 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 16818 ;; Parameters:    Size  Location     Type
 16819 ;;		None
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      void 
 16824 ;; Registers used:
 16825 ;;		None
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16835 ;;Total ram usage:        0 bytes
 16836 ;; Hardware stack levels used:    1
 16837 ;; This function calls:
 16838 ;;		Nothing
 16839 ;; This function is called by:
 16840 ;;		_TMR0_Initialize
 16841 ;;		_TMR0_ISR
 16842 ;; This function uses a non-reentrant model
 16843 ;;
 16844                           
 16845                           
 16846                           ;psect for function _TMR0_DefaultInterruptHandler
 16847  0908                     _TMR0_DefaultInterruptHandler:	
 16848                           
 16849                           ;incstack = 0
 16850 ;; hardware stack exceeded
 16851                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 16852  0908  0008               	return
 16853  0909                     __end_of_TMR0_DefaultInterruptHandler:	
 16854                           
 16855                           	psect	text64
 16856  0305                     __ptext64:	
 16857 ;; *************** function _I2C1_ISR *****************
 16858 ;; Defined at:
 16859 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;		None
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;		None
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  1    wreg      void 
 16866 ;; Registers used:
 16867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16877 ;;Total ram usage:        4 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:    1
 16880 ;; This function calls:
 16881 ;;		_I2C1_FunctionComplete
 16882 ;;		_I2C1_Stop
 16883 ;; This function is called by:
 16884 ;;		_INTERRUPT_InterruptManager
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _I2C1_ISR
 16890  0305                     _I2C1_ISR:	
 16891                           
 16892                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 16893                           
 16894                           ;incstack = 0
 16895 ;; hardware stack exceeded
 16896                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16897  0305  014E               	movlb	14	; select bank14
 16898  0306  100F               	bcf	15,0	;volatile
 16899                           
 16900                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 16901  0307  0143               	movlb	3	; select bank3
 16902  0308  1F90               	btfss	16,7	;volatile
 16903  0309  2C26               	goto	i1l3812
 16904                           
 16905                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 16906  030A  1390               	bcf	16,7	;volatile
 16907                           
 16908                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 16909  030B  0141               	movlb	1	; select bank1
 16910  030C  01C0               	clrf	_i2c1_state^(0+128)
 16911                           
 16912                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 16913  030D  0872               	movf	_p_i2c1_current,w
 16914  030E  3E02               	addlw	2
 16915  030F  0086               	movwf	6
 16916  0310  0187               	clrf	7
 16917  0311  0801               	movf	1,w
 16918  0312  0086               	movwf	6
 16919  0313  0187               	clrf	7
 16920  0314  0181               	clrf	1
 16921  0315  0A81               	incf	1,f
 16922                           
 16923                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 16924  0316  01F2               	clrf	_p_i2c1_current
 16925  0317  0008               	return
 16926  0318                     i1l543:	
 16927                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 16928                           
 16929                           
 16930                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 16931  0318  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 16932  0319  0008               	return
 16933                           
 16934                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 16935  031A  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16936  031B  00F9               	movwf	??_I2C1_ISR
 16937  031C  0879               	movf	??_I2C1_ISR,w
 16938  031D  00F2               	movwf	_p_i2c1_current
 16939                           
 16940                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 16941  031E  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16942  031F  0086               	movwf	6
 16943  0320  0187               	clrf	7
 16944  0321  0801               	movf	1,w
 16945  0322  00F9               	movwf	??_I2C1_ISR
 16946  0323  0879               	movf	??_I2C1_ISR,w
 16947  0324  00BF               	movwf	_i2c1_trb_count^(0+128)
 16948                           
 16949                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 16950  0325  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16951  0326  0086               	movwf	6
 16952  0327  0187               	clrf	7
 16953  0328  3F41               	moviw [1]fsr1
 16954  0329  00F3               	movwf	_p_i2c1_trb_current
 16955                           
 16956                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 16957  032A  3003               	movlw	3
 16958  032B  00F9               	movwf	??_I2C1_ISR
 16959  032C  0879               	movf	??_I2C1_ISR,w
 16960  032D  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 16961                           
 16962                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 16963  032E  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16964  032F  3AC6               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 16965  0330  1D03               	skipz
 16966  0331  2B36               	goto	i1l3700
 16967                           
 16968                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 16969  0332  30C3               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 16970  0333  00F9               	movwf	??_I2C1_ISR
 16971  0334  0879               	movf	??_I2C1_ISR,w
 16972  0335  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 16973  0336                     i1l3700:	
 16974                           
 16975                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 16976  0336  1022               	bcf	(_i2c1_object^(0+128)+2),0
 16977                           
 16978                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 16979  0337  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16980  0338  0620               	xorwf	_i2c1_object^(0+128),w
 16981  0339  1903               	btfsc	3,2
 16982                           
 16983                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 16984  033A  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 16985                           
 16986                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 16987                           
 16988                           ;mcc_generated_files/i2c1.c: 290:                 }
 16989  033B  0143               	movlb	3	; select bank3
 16990  033C  1411               	bsf	17,0	;volatile
 16991  033D                     i1l3704:	
 16992                           
 16993                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 16994  033D  3002               	movlw	2
 16995  033E  00F9               	movwf	??_I2C1_ISR
 16996  033F  0879               	movf	??_I2C1_ISR,w
 16997  0340  0141               	movlb	1	; select bank1
 16998  0341  00C0               	movwf	_i2c1_state^(0+128)
 16999  0342  0008               	return
 17000  0343                     i1l548:	
 17001                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 17002                           
 17003  0343  2BCF               	goto	i1l569
 17004  0344                     i1l549:	
 17005                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 17006                           
 17007                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 17008                           
 17009                           
 17010                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 17011  0344  0143               	movlb	3	; select bank3
 17012  0345  1F11               	btfss	17,6	;volatile
 17013  0346  2B50               	goto	i1l3712
 17014                           
 17015                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 17016  0347  3001               	movlw	1
 17017  0348  00F9               	movwf	??_I2C1_ISR
 17018  0349  0879               	movf	??_I2C1_ISR,w
 17019  034A  0141               	movlb	1	; select bank1
 17020  034B  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17021                           
 17022                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17023  034C  3004               	movlw	4
 17024  034D  318A  22CD         	fcall	_I2C1_Stop
 17025                           
 17026                           ;mcc_generated_files/i2c1.c: 319:             }
 17027  034F  0008               	return
 17028  0350                     i1l3712:	
 17029                           
 17030                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 17031  0350  0876               	movf	I2C1_ISR@i2c_address+1,w
 17032  0351  00FA               	movwf	??_I2C1_ISR+1
 17033  0352  0875               	movf	I2C1_ISR@i2c_address,w
 17034  0353  00F9               	movwf	??_I2C1_ISR
 17035  0354  36FA               	lsrf	??_I2C1_ISR+1,f
 17036  0355  0CF9               	rrf	??_I2C1_ISR,f
 17037  0356  0879               	movf	??_I2C1_ISR,w
 17038  0357  008C               	movwf	12	;volatile
 17039                           
 17040                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 17041  0358  1C75               	btfss	I2C1_ISR@i2c_address,0
 17042  0359  2B60               	goto	i1l3718
 17043                           
 17044                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 17045  035A  300B               	movlw	11
 17046  035B  00F9               	movwf	??_I2C1_ISR
 17047  035C  0879               	movf	??_I2C1_ISR,w
 17048  035D  0141               	movlb	1	; select bank1
 17049  035E  00C0               	movwf	_i2c1_state^(0+128)
 17050                           
 17051                           ;mcc_generated_files/i2c1.c: 331:                 }
 17052  035F  0008               	return
 17053  0360                     i1l3718:	
 17054                           
 17055                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 17056  0360  3003               	movlw	3
 17057  0361  00F9               	movwf	??_I2C1_ISR
 17058  0362  0879               	movf	??_I2C1_ISR,w
 17059  0363  0141               	movlb	1	; select bank1
 17060  0364  00C0               	movwf	_i2c1_state^(0+128)
 17061  0365  0008               	return
 17062  0366                     i1l554:	
 17063                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 17064                           
 17065                           
 17066                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 17067  0366  0143               	movlb	3	; select bank3
 17068  0367  1F11               	btfss	17,6	;volatile
 17069  0368  2B72               	goto	i1l555
 17070                           
 17071                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 17072  0369  3001               	movlw	1
 17073  036A  00F9               	movwf	??_I2C1_ISR
 17074  036B  0879               	movf	??_I2C1_ISR,w
 17075  036C  0141               	movlb	1	; select bank1
 17076  036D  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17077                           
 17078                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17079  036E  3004               	movlw	4
 17080  036F  318A  22CD         	fcall	_I2C1_Stop
 17081                           
 17082                           ;mcc_generated_files/i2c1.c: 347:             }
 17083  0371  0008               	return
 17084  0372                     i1l555:	
 17085                           ;mcc_generated_files/i2c1.c: 348:             else
 17086                           
 17087                           
 17088                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 17089  0372  1491               	bsf	17,1	;volatile
 17090                           
 17091                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 17092  0373  0876               	movf	I2C1_ISR@i2c_address+1,w
 17093  0374  00FA               	movwf	??_I2C1_ISR+1
 17094  0375  0875               	movf	I2C1_ISR@i2c_address,w
 17095  0376  00F9               	movwf	??_I2C1_ISR
 17096  0377  087A               	movf	??_I2C1_ISR+1,w
 17097  0378  00F9               	movwf	??_I2C1_ISR
 17098  0379  01FA               	clrf	??_I2C1_ISR+1
 17099  037A  3006               	movlw	6
 17100  037B  0579               	andwf	??_I2C1_ISR,w
 17101  037C  00FB               	movwf	??_I2C1_ISR+2
 17102  037D  3000               	movlw	0
 17103  037E  057A               	andwf	??_I2C1_ISR+1,w
 17104  037F  00FC               	movwf	??_I2C1_ISR+3
 17105  0380  30F0               	movlw	240
 17106  0381  047B               	iorwf	??_I2C1_ISR+2,w
 17107  0382  00F5               	movwf	I2C1_ISR@i2c_address
 17108  0383  3000               	movlw	0
 17109  0384  047C               	iorwf	??_I2C1_ISR+3,w
 17110  0385  00F6               	movwf	I2C1_ISR@i2c_address+1
 17111                           
 17112                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 17113  0386  1475               	bsf	I2C1_ISR@i2c_address,0
 17114                           
 17115                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 17116  0387  0141               	movlb	1	; select bank1
 17117  0388  01BC               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 17118  0389  0ABC               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 17119  038A  2B3D               	goto	i1l3704
 17120  038B                     i1l3732:	
 17121                           
 17122                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 17123  038B  033C               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 17124  038C  1903               	btfsc	3,2
 17125  038D  2BA4               	goto	i1l3752
 17126                           
 17127                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 17128  038E  0873               	movf	_p_i2c1_trb_current,w
 17129  038F  0086               	movwf	6
 17130  0390  3001               	movlw	1	; select bank2/3
 17131  0391  0087               	movwf	7
 17132  0392  3F40               	moviw [0]fsr1
 17133  0393  00F5               	movwf	I2C1_ISR@i2c_address
 17134  0394  3F41               	moviw [1]fsr1
 17135  0395  00F6               	movwf	I2C1_ISR@i2c_address+1
 17136                           
 17137                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 17138  0396  0873               	movf	_p_i2c1_trb_current,w
 17139  0397  0086               	movwf	6
 17140  0398  3001               	movlw	1	; select bank2/3
 17141  0399  0087               	movwf	7
 17142  039A  3001               	movlw	1	; select bank2/3
 17143  039B  3F43               	moviw [3]fsr1
 17144  039C  00BE               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 17145                           
 17146                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 17147  039D  0873               	movf	_p_i2c1_trb_current,w
 17148  039E  0086               	movwf	6
 17149  039F  3001               	movlw	1	; select bank2/3
 17150  03A0  0087               	movwf	7
 17151  03A1  3001               	movlw	1	; select bank2/3
 17152  03A2  3F42               	moviw [2]fsr1
 17153  03A3  00BD               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 17154  03A4                     i1l3752:	
 17155                           
 17156                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 17157  03A4  0875               	movf	I2C1_ISR@i2c_address,w
 17158  03A5  0143               	movlb	3	; select bank3
 17159  03A6  008C               	movwf	12	;volatile
 17160                           
 17161                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 17162  03A7  1C75               	btfss	I2C1_ISR@i2c_address,0
 17163  03A8  2B60               	goto	i1l3718
 17164                           
 17165                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 17166  03A9  3005               	movlw	5
 17167  03AA  00F9               	movwf	??_I2C1_ISR
 17168  03AB  0879               	movf	??_I2C1_ISR,w
 17169  03AC  0141               	movlb	1	; select bank1
 17170  03AD  00C0               	movwf	_i2c1_state^(0+128)
 17171                           
 17172                           ;mcc_generated_files/i2c1.c: 419:                 }
 17173  03AE  0008               	return
 17174  03AF                     i1l565:	
 17175                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 17176                           
 17177                           
 17178                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 17179  03AF  0143               	movlb	3	; select bank3
 17180  03B0  1F11               	btfss	17,6	;volatile
 17181  03B1  2BBD               	goto	i1l3766
 17182                           
 17183                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 17184  03B2  3001               	movlw	1
 17185  03B3  00F9               	movwf	??_I2C1_ISR
 17186  03B4  0879               	movf	??_I2C1_ISR,w
 17187  03B5  0141               	movlb	1	; select bank1
 17188  03B6  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17189                           
 17190                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 17191  03B7  0143               	movlb	3	; select bank3
 17192  03B8  1311               	bcf	17,6	;volatile
 17193                           
 17194                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 17195  03B9  3005               	movlw	5
 17196  03BA  318A  22CD         	fcall	_I2C1_Stop
 17197                           
 17198                           ;mcc_generated_files/i2c1.c: 442:             }
 17199  03BC  0008               	return
 17200  03BD                     i1l3766:	
 17201                           
 17202                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 17203  03BD  3001               	movlw	1
 17204  03BE  0141               	movlb	1	; select bank1
 17205  03BF  02BD               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 17206  03C0  0A3D               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 17207  03C1  1D03               	btfss	3,2
 17208  03C2  2BD2               	goto	i1l3774
 17209                           
 17210                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 17211  03C3  3004               	movlw	4
 17212  03C4  00F9               	movwf	??_I2C1_ISR
 17213  03C5  0879               	movf	??_I2C1_ISR,w
 17214  03C6  07F3               	addwf	_p_i2c1_trb_current,f
 17215                           
 17216                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 17217  03C7  3001               	movlw	1
 17218  03C8  02BF               	subwf	_i2c1_trb_count^(0+128),f
 17219  03C9  1D03               	btfss	3,2
 17220  03CA  2BCF               	goto	i1l569
 17221                           
 17222                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17223  03CB  3000               	movlw	0
 17224  03CC  318A  22CD         	fcall	_I2C1_Stop
 17225                           
 17226                           ;mcc_generated_files/i2c1.c: 457:                     }
 17227  03CE  0008               	return
 17228  03CF                     i1l569:	
 17229                           ;mcc_generated_files/i2c1.c: 458:                     else
 17230                           
 17231                           
 17232                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 17233  03CF  0143               	movlb	3	; select bank3
 17234  03D0  1491               	bsf	17,1	;volatile
 17235  03D1  2B3D               	goto	i1l3704
 17236  03D2                     i1l3774:	
 17237                           
 17238                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 17239  03D2  083E               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 17240  03D3  0086               	movwf	6
 17241  03D4  0187               	clrf	7
 17242  03D5  0801               	movf	1,w
 17243  03D6  0143               	movlb	3	; select bank3
 17244  03D7  008C               	movwf	12	;volatile
 17245  03D8  3001               	movlw	1
 17246  03D9  00F9               	movwf	??_I2C1_ISR
 17247  03DA  0879               	movf	??_I2C1_ISR,w
 17248  03DB  0141               	movlb	1	; select bank1
 17249  03DC  07BE               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 17250  03DD  0008               	return
 17251  03DE                     i1l572:	
 17252                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 17253                           
 17254                           
 17255                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 17256  03DE  0143               	movlb	3	; select bank3
 17257  03DF  1F11               	btfss	17,6	;volatile
 17258  03E0  2BEC               	goto	i1l573
 17259                           
 17260                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 17261  03E1  3001               	movlw	1
 17262  03E2  00F9               	movwf	??_I2C1_ISR
 17263  03E3  0879               	movf	??_I2C1_ISR,w
 17264  03E4  0141               	movlb	1	; select bank1
 17265  03E5  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17266                           
 17267                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17268  03E6  3004               	movlw	4
 17269  03E7  318A  22CD         	fcall	_I2C1_Stop
 17270                           
 17271                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 17272  03E9  0143               	movlb	3	; select bank3
 17273  03EA  1311               	bcf	17,6	;volatile
 17274                           
 17275                           ;mcc_generated_files/i2c1.c: 495:             }
 17276  03EB  0008               	return
 17277  03EC                     i1l573:	
 17278                           ;mcc_generated_files/i2c1.c: 496:             else
 17279                           
 17280                           
 17281                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 17282  03EC  1591               	bsf	17,3	;volatile
 17283                           
 17284                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 17285  03ED  3008               	movlw	8
 17286  03EE  00F9               	movwf	??_I2C1_ISR
 17287  03EF  0879               	movf	??_I2C1_ISR,w
 17288  03F0  0141               	movlb	1	; select bank1
 17289  03F1  00C0               	movwf	_i2c1_state^(0+128)
 17290  03F2  0008               	return
 17291  03F3                     i1l3786:	
 17292                           
 17293                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 17294  03F3  3008               	movlw	8
 17295  03F4  00F9               	movwf	??_I2C1_ISR
 17296  03F5  0879               	movf	??_I2C1_ISR,w
 17297  03F6  00C0               	movwf	_i2c1_state^(0+128)
 17298                           
 17299                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 17300  03F7  0143               	movlb	3	; select bank3
 17301  03F8  1591               	bsf	17,3	;volatile
 17302                           
 17303                           ;mcc_generated_files/i2c1.c: 513:             break;
 17304  03F9  0008               	return
 17305  03FA                     i1l3790:	
 17306                           
 17307                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 17308  03FA  0143               	movlb	3	; select bank3
 17309  03FB  080C               	movf	12,w	;volatile
 17310  03FC  00F9               	movwf	??_I2C1_ISR
 17311  03FD  0141               	movlb	1	; select bank1
 17312  03FE  083E               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 17313  03FF  0086               	movwf	6
 17314  0400  0187               	clrf	7
 17315  0401  0879               	movf	??_I2C1_ISR,w
 17316  0402  0081               	movwf	1
 17317  0403  3001               	movlw	1
 17318  0404  00F9               	movwf	??_I2C1_ISR
 17319  0405  0879               	movf	??_I2C1_ISR,w
 17320  0406  07BE               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 17321                           
 17322                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 17323  0407  3001               	movlw	1
 17324  0408  02BD               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 17325  0409  1903               	btfsc	3,2
 17326  040A  2C13               	goto	i1l577
 17327                           
 17328                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 17329  040B  0143               	movlb	3	; select bank3
 17330  040C  1291               	bcf	17,5	;volatile
 17331                           
 17332                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 17333  040D  3006               	movlw	6
 17334  040E  00F9               	movwf	??_I2C1_ISR
 17335  040F  0879               	movf	??_I2C1_ISR,w
 17336  0410  0141               	movlb	1	; select bank1
 17337  0411  00C0               	movwf	_i2c1_state^(0+128)
 17338                           
 17339                           ;mcc_generated_files/i2c1.c: 532:             }
 17340  0412  2C17               	goto	i1l3802
 17341  0413                     i1l577:	
 17342                           ;mcc_generated_files/i2c1.c: 533:             else
 17343                           
 17344                           
 17345                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 17346  0413  0143               	movlb	3	; select bank3
 17347  0414  1691               	bsf	17,5	;volatile
 17348                           
 17349                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 17350  0415  318A  221C         	fcall	_I2C1_FunctionComplete
 17351  0417                     i1l3802:	
 17352                           
 17353                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 17354  0417  0143               	movlb	3	; select bank3
 17355  0418  1611               	bsf	17,4	;volatile
 17356                           
 17357                           ;mcc_generated_files/i2c1.c: 545:             break;
 17358  0419  0008               	return
 17359  041A                     i1l3804:	
 17360                           
 17361                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17362  041A  3000               	movlw	0
 17363  041B  318A  22CD         	fcall	_I2C1_Stop
 17364                           
 17365                           ;mcc_generated_files/i2c1.c: 552:             break;
 17366  041D  0008               	return
 17367  041E                     i1l3806:	
 17368                           
 17369                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 17370  041E  3001               	movlw	1
 17371  041F  00F9               	movwf	??_I2C1_ISR
 17372  0420  0879               	movf	??_I2C1_ISR,w
 17373  0421  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17374                           
 17375                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 17376  0422  3006               	movlw	6
 17377  0423  318A  22CD         	fcall	_I2C1_Stop
 17378                           
 17379                           ;mcc_generated_files/i2c1.c: 560:             break;
 17380  0425  0008               	return
 17381  0426                     i1l3812:	
 17382  0426  0141               	movlb	1	; select bank1
 17383  0427  0840               	movf	_i2c1_state^(0+128),w
 17384  0428  00F9               	movwf	??_I2C1_ISR
 17385  0429  01FA               	clrf	??_I2C1_ISR+1
 17386                           
 17387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17388                           ; Switch size 1, requested type "simple"
 17389                           ; Number of cases is 1, Range of values is 0 to 0
 17390                           ; switch strategies available:
 17391                           ; Name         Instructions Cycles
 17392                           ; simple_byte            4     3 (average)
 17393                           ; direct_byte            8     6 (fixed)
 17394                           ; jumptable            260     6 (fixed)
 17395                           ;	Chosen strategy is simple_byte
 17396  042A  087A               	movf	??_I2C1_ISR+1,w
 17397  042B  3A00               	xorlw	0	; case 0
 17398  042C  1903               	skipnz
 17399  042D  2C2F               	goto	i1l4938
 17400  042E  2C1E               	goto	i1l3806
 17401  042F                     i1l4938:	
 17402                           
 17403                           ; Switch size 1, requested type "simple"
 17404                           ; Number of cases is 11, Range of values is 0 to 11
 17405                           ; switch strategies available:
 17406                           ; Name         Instructions Cycles
 17407                           ; direct_byte           30     6 (fixed)
 17408                           ; simple_byte           34    18 (average)
 17409                           ; jumptable            260     6 (fixed)
 17410                           ;	Chosen strategy is simple_byte
 17411  042F  0879               	movf	??_I2C1_ISR,w
 17412  0430  3A00               	xorlw	0	; case 0
 17413  0431  1903               	skipnz
 17414  0432  2B18               	goto	i1l543
 17415  0433  3A01               	xorlw	1	; case 1
 17416  0434  1903               	skipnz
 17417  0435  2B43               	goto	i1l548
 17418  0436  3A03               	xorlw	3	; case 2
 17419  0437  1903               	skipnz
 17420  0438  2B8B               	goto	i1l3732
 17421  0439  3A01               	xorlw	1	; case 3
 17422  043A  1903               	skipnz
 17423  043B  2BAF               	goto	i1l565
 17424  043C  3A07               	xorlw	7	; case 4
 17425  043D  1903               	skipnz
 17426  043E  2C1A               	goto	i1l3804
 17427  043F  3A01               	xorlw	1	; case 5
 17428  0440  1903               	skipnz
 17429  0441  2BDE               	goto	i1l572
 17430  0442  3A03               	xorlw	3	; case 6
 17431  0443  1903               	skipnz
 17432  0444  2BF3               	goto	i1l3786
 17433  0445  3A01               	xorlw	1	; case 7
 17434  0446  1903               	skipnz
 17435  0447  2C1A               	goto	i1l3804
 17436  0448  3A0F               	xorlw	15	; case 8
 17437  0449  1903               	skipnz
 17438  044A  2BFA               	goto	i1l3790
 17439  044B  3A02               	xorlw	2	; case 10
 17440  044C  1903               	skipnz
 17441  044D  2B44               	goto	i1l549
 17442  044E  3A01               	xorlw	1	; case 11
 17443  044F  1903               	skipnz
 17444  0450  2B66               	goto	i1l554
 17445  0451  2C1E               	goto	i1l3806
 17446  0452  0008               	return
 17447  0453                     __end_of_I2C1_ISR:	
 17448                           
 17449                           	psect	text65
 17450  0ACD                     __ptext65:	
 17451 ;; *************** function _I2C1_Stop *****************
 17452 ;; Defined at:
 17453 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 17454 ;; Parameters:    Size  Location     Type
 17455 ;;  completion_c    1    wreg     enum E10866
 17456 ;; Auto vars:     Size  Location     Type
 17457 ;;  completion_c    1    1[COMMON] enum E10866
 17458 ;; Return value:  Size  Location     Type
 17459 ;;                  1    wreg      void 
 17460 ;; Registers used:
 17461 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17462 ;; Tracked objects:
 17463 ;;		On entry : 0/0
 17464 ;;		On exit  : 0/0
 17465 ;;		Unchanged: 0/0
 17466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17471 ;;Total ram usage:        2 bytes
 17472 ;; Hardware stack levels used:    1
 17473 ;; This function calls:
 17474 ;;		Nothing
 17475 ;; This function is called by:
 17476 ;;		_I2C1_ISR
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480                           
 17481                           ;psect for function _I2C1_Stop
 17482  0ACD                     _I2C1_Stop:	
 17483                           
 17484                           ;incstack = 0
 17485 ;; hardware stack exceeded
 17486                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 17487                           ;I2C1_Stop@completion_code stored from wreg
 17488  0ACD  00F8               	movwf	I2C1_Stop@completion_code
 17489                           
 17490                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 17491  0ACE  0143               	movlb	3	; select bank3
 17492  0ACF  1511               	bsf	17,2	;volatile
 17493                           
 17494                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 17495  0AD0  0872               	movf	_p_i2c1_current,w
 17496  0AD1  3E02               	addlw	2
 17497  0AD2  0086               	movwf	6
 17498  0AD3  0187               	clrf	7
 17499  0AD4  0801               	movf	1,w
 17500  0AD5  1903               	btfsc	3,2
 17501  0AD6  2AE2               	goto	i1l3518
 17502                           
 17503                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 17504  0AD7  0878               	movf	I2C1_Stop@completion_code,w
 17505  0AD8  00F7               	movwf	??_I2C1_Stop
 17506  0AD9  0872               	movf	_p_i2c1_current,w
 17507  0ADA  3E02               	addlw	2
 17508  0ADB  0086               	movwf	6
 17509  0ADC  0187               	clrf	7
 17510  0ADD  0801               	movf	1,w
 17511  0ADE  0086               	movwf	6
 17512  0ADF  0187               	clrf	7
 17513  0AE0  0877               	movf	??_I2C1_Stop,w
 17514  0AE1  0081               	movwf	1
 17515  0AE2                     i1l3518:	
 17516                           
 17517                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 17518  0AE2  0141               	movlb	1	; select bank1
 17519  0AE3  01C0               	clrf	_i2c1_state^(0+128)
 17520  0AE4  0008               	return
 17521  0AE5                     __end_of_I2C1_Stop:	
 17522                           
 17523                           	psect	text66
 17524  0A1C                     __ptext66:	
 17525 ;; *************** function _I2C1_FunctionComplete *****************
 17526 ;; Defined at:
 17527 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;		None
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;		None
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      void 
 17534 ;; Registers used:
 17535 ;;		wreg, status,2, status,0
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/0
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17545 ;;Total ram usage:        1 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; This function calls:
 17548 ;;		Nothing
 17549 ;; This function is called by:
 17550 ;;		_I2C1_ISR
 17551 ;; This function uses a non-reentrant model
 17552 ;;
 17553                           
 17554                           
 17555                           ;psect for function _I2C1_FunctionComplete
 17556  0A1C                     _I2C1_FunctionComplete:	
 17557                           
 17558                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 17559                           
 17560                           ;incstack = 0
 17561 ;; hardware stack exceeded
 17562                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 17563  0A1C  3004               	movlw	4
 17564  0A1D  00F7               	movwf	??_I2C1_FunctionComplete
 17565  0A1E  0877               	movf	??_I2C1_FunctionComplete,w
 17566  0A1F  07F3               	addwf	_p_i2c1_trb_current,f
 17567                           
 17568                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 17569  0A20  3001               	movlw	1
 17570  0A21  0141               	movlb	1	; select bank1
 17571  0A22  02BF               	subwf	_i2c1_trb_count^(0+128),f
 17572  0A23  1D03               	btfss	3,2
 17573  0A24  2A2A               	goto	i1l584
 17574                           
 17575                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 17576  0A25  3004               	movlw	4
 17577  0A26  00F7               	movwf	??_I2C1_FunctionComplete
 17578  0A27  0877               	movf	??_I2C1_FunctionComplete,w
 17579  0A28  00C0               	movwf	_i2c1_state^(0+128)
 17580                           
 17581                           ;mcc_generated_files/i2c1.c: 575:     }
 17582  0A29  0008               	return
 17583  0A2A                     i1l584:	
 17584                           ;mcc_generated_files/i2c1.c: 576:     else
 17585                           
 17586                           
 17587                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 17588  0A2A  01C0               	clrf	_i2c1_state^(0+128)
 17589  0A2B  0AC0               	incf	_i2c1_state^(0+128),f
 17590  0A2C  0008               	return
 17591  0A2D                     __end_of_I2C1_FunctionComplete:	
 17592                           
 17593                           	psect	text67
 17594  090C                     __ptext67:	
 17595 ;; *************** function _I2C1_BusCollisionISR *****************
 17596 ;; Defined at:
 17597 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 17598 ;; Parameters:    Size  Location     Type
 17599 ;;		None
 17600 ;; Auto vars:     Size  Location     Type
 17601 ;;		None
 17602 ;; Return value:  Size  Location     Type
 17603 ;;                  1    wreg      void 
 17604 ;; Registers used:
 17605 ;;		None
 17606 ;; Tracked objects:
 17607 ;;		On entry : 0/0
 17608 ;;		On exit  : 0/0
 17609 ;;		Unchanged: 0/0
 17610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17615 ;;Total ram usage:        0 bytes
 17616 ;; Hardware stack levels used:    1
 17617 ;; This function calls:
 17618 ;;		Nothing
 17619 ;; This function is called by:
 17620 ;;		_INTERRUPT_InterruptManager
 17621 ;; This function uses a non-reentrant model
 17622 ;;
 17623                           
 17624                           
 17625                           ;psect for function _I2C1_BusCollisionISR
 17626  090C                     _I2C1_BusCollisionISR:	
 17627                           
 17628                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 17629                           
 17630                           ;incstack = 0
 17631                           ; Regs used in _I2C1_BusCollisionISR: []
 17632  090C  014E               	movlb	14	; select bank14
 17633  090D  108F               	bcf	15,1	;volatile
 17634  090E  0008               	return
 17635  090F                     __end_of_I2C1_BusCollisionISR:	
 17636                           
 17637                           	psect	text68
 17638  0D38                     __ptext68:	
 17639 ;; *************** function _DMX_interrupt *****************
 17640 ;; Defined at:
 17641 ;;		line 22 in file "dmx.c"
 17642 ;; Parameters:    Size  Location     Type
 17643 ;;		None
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;  dummy           1    6[COMMON] volatile unsigned char 
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      void 
 17648 ;; Registers used:
 17649 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17650 ;; Tracked objects:
 17651 ;;		On entry : 0/0
 17652 ;;		On exit  : 0/0
 17653 ;;		Unchanged: 0/0
 17654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17657 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17658 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17659 ;;Total ram usage:        7 bytes
 17660 ;; Hardware stack levels used:    1
 17661 ;; This function calls:
 17662 ;;		Nothing
 17663 ;; This function is called by:
 17664 ;;		_DMX_init
 17665 ;;		_INTERRUPT_InterruptManager
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           
 17670                           ;psect for function _DMX_interrupt
 17671  0D38                     _DMX_interrupt:	
 17672                           
 17673                           ;dmx.c: 24:     if (RC1STAbits.OERR) {
 17674                           
 17675                           ;incstack = 0
 17676                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 17677  0D38  0142               	movlb	2	; select bank2
 17678  0D39  1C9D               	btfss	29,1	;volatile
 17679  0D3A  2D3D               	goto	i1l4062
 17680                           
 17681                           ;dmx.c: 25:         RC1STAbits.CREN = 0;
 17682  0D3B  121D               	bcf	29,4	;volatile
 17683                           
 17684                           ;dmx.c: 26:         RC1STAbits.CREN = 1;
 17685  0D3C  161D               	bsf	29,4	;volatile
 17686  0D3D                     i1l4062:	
 17687                           
 17688                           ;dmx.c: 29:     if (initial == 0 && !(RC1STAbits.FERR)) {
 17689  0D3D  0850               	movf	_initial^(0+256),w
 17690  0D3E  0451               	iorwf	(_initial+1)^(0+256),w
 17691  0D3F  1903               	btfsc	3,2
 17692  0D40  191D               	btfsc	29,2	;volatile
 17693  0D41  2D5E               	goto	i1l4070
 17694                           
 17695                           ;dmx.c: 30:         dmxArray[arrayIndex] = RC1REG;
 17696  0D42  0819               	movf	25,w	;volatile
 17697  0D43  00F7               	movwf	??_DMX_interrupt
 17698  0D44  01F8               	clrf	??_DMX_interrupt+1
 17699  0D45  0837               	movf	(_arrayIndex+1)^(0+256),w
 17700  0D46  00FA               	movwf	??_DMX_interrupt+3
 17701  0D47  0836               	movf	_arrayIndex^(0+256),w
 17702  0D48  00F9               	movwf	??_DMX_interrupt+2
 17703  0D49  35F9               	lslf	??_DMX_interrupt+2,f
 17704  0D4A  0DFA               	rlf	??_DMX_interrupt+3,f
 17705  0D4B  30EE               	movlw	238
 17706  0D4C  00FB               	movwf	??_DMX_interrupt+4
 17707  0D4D  3023               	movlw	35
 17708  0D4E  00FC               	movwf	??_DMX_interrupt+5
 17709  0D4F  0879               	movf	??_DMX_interrupt+2,w
 17710  0D50  077B               	addwf	??_DMX_interrupt+4,w
 17711  0D51  0086               	movwf	6
 17712  0D52  087A               	movf	??_DMX_interrupt+3,w
 17713  0D53  3D7C               	addwfc	??_DMX_interrupt+5,w
 17714  0D54  0087               	movwf	7
 17715  0D55  0877               	movf	??_DMX_interrupt,w
 17716  0D56  3FC0               	movwi [0]fsr1
 17717  0D57  0878               	movf	??_DMX_interrupt+1,w
 17718  0D58  3FC1               	movwi [1]fsr1
 17719                           
 17720                           ;dmx.c: 31:         arrayIndex += 1;
 17721  0D59  3001               	movlw	1
 17722  0D5A  07B6               	addwf	_arrayIndex^(0+256),f
 17723  0D5B  3000               	movlw	0
 17724  0D5C  3DB7               	addwfc	(_arrayIndex+1)^(0+256),f
 17725                           
 17726                           ;dmx.c: 32:     } else {
 17727  0D5D  2D66               	goto	i1l4074
 17728  0D5E                     i1l4070:	
 17729                           
 17730                           ;dmx.c: 33:         arrayIndex = 0;
 17731  0D5E  01B6               	clrf	_arrayIndex^(0+256)
 17732  0D5F  01B7               	clrf	(_arrayIndex+1)^(0+256)
 17733                           
 17734                           ;dmx.c: 34:         initial = 0;
 17735  0D60  01D0               	clrf	_initial^(0+256)
 17736  0D61  01D1               	clrf	(_initial+1)^(0+256)
 17737                           
 17738                           ;dmx.c: 35:         volatile uint8_t dummy = RC1REG;
 17739  0D62  0819               	movf	25,w	;volatile
 17740  0D63  00F7               	movwf	??_DMX_interrupt
 17741  0D64  0877               	movf	??_DMX_interrupt,w
 17742  0D65  00FD               	movwf	DMX_interrupt@dummy	;volatile
 17743  0D66                     i1l4074:	
 17744                           
 17745                           ;dmx.c: 38:     PIR3bits.RC1IF = 0;
 17746  0D66  014E               	movlb	14	; select bank14
 17747  0D67  128F               	bcf	15,5	;volatile
 17748  0D68  0008               	return
 17749  0D69                     __end_of_DMX_interrupt:	
 17750                           
 17751                           	psect	text69
 17752  0E3D                     __ptext69:	
 17753 ;; *************** function _EUSART1_Receive_ISR *****************
 17754 ;; Defined at:
 17755 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 17756 ;; Parameters:    Size  Location     Type
 17757 ;;		None
 17758 ;; Auto vars:     Size  Location     Type
 17759 ;;		None
 17760 ;; Return value:  Size  Location     Type
 17761 ;;                  1    wreg      void 
 17762 ;; Registers used:
 17763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17764 ;; Tracked objects:
 17765 ;;		On entry : 0/0
 17766 ;;		On exit  : 0/0
 17767 ;;		Unchanged: 0/0
 17768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17773 ;;Total ram usage:        0 bytes
 17774 ;; Hardware stack levels used:    1
 17775 ;; Hardware stack levels required when called:    2
 17776 ;; This function calls:
 17777 ;;		Absolute function
 17778 ;;		_EUSART1_DefaultErrorHandler
 17779 ;;		_EUSART1_DefaultFramingErrorHandler
 17780 ;;		_EUSART1_DefaultOverrunErrorHandler
 17781 ;;		_EUSART1_RxDataHandler
 17782 ;; This function is called by:
 17783 ;;		_EUSART1_Initialize
 17784 ;;		_INTERRUPT_InterruptManager
 17785 ;; This function uses a non-reentrant model
 17786 ;;
 17787                           
 17788                           
 17789                           ;psect for function _EUSART1_Receive_ISR
 17790  0E3D                     _EUSART1_Receive_ISR:	
 17791                           
 17792                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 17793                           
 17794                           ;incstack = 0
 17795 ;; hardware stack exceeded
 17796                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17797  0E3D  0140               	movlb	0	; select bank0
 17798  0E3E  086F               	movf	_eusart1RxHead,w	;volatile
 17799  0E3F  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17800  0E40  0086               	movwf	6
 17801  0E41  3001               	movlw	1	; select bank2/3
 17802  0E42  0087               	movwf	7
 17803  0E43  0181               	clrf	1
 17804                           
 17805                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 17806  0E44  0142               	movlb	2	; select bank2
 17807  0E45  1D1D               	btfss	29,2	;volatile
 17808  0E46  2E54               	goto	i1l3650
 17809                           
 17810                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 17811  0E47  0140               	movlb	0	; select bank0
 17812  0E48  086F               	movf	_eusart1RxHead,w	;volatile
 17813  0E49  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17814  0E4A  0086               	movwf	6
 17815  0E4B  3001               	movlw	1	; select bank2/3
 17816  0E4C  0087               	movwf	7
 17817  0E4D  1481               	bsf	1,1
 17818                           
 17819                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 17820  0E4E  0142               	movlb	2	; select bank2
 17821  0E4F  084D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 17822  0E50  008A               	movwf	10
 17823  0E51  084C               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 17824  0E52  000A               	callw
 17825  0E53  318E               	pagesel	$
 17826  0E54                     i1l3650:	
 17827                           
 17828                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 17829  0E54  0142               	movlb	2	; select bank2
 17830  0E55  1C9D               	btfss	29,1	;volatile
 17831  0E56  2E64               	goto	i1l3656
 17832                           
 17833                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17834  0E57  0140               	movlb	0	; select bank0
 17835  0E58  086F               	movf	_eusart1RxHead,w	;volatile
 17836  0E59  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17837  0E5A  0086               	movwf	6
 17838  0E5B  3001               	movlw	1	; select bank2/3
 17839  0E5C  0087               	movwf	7
 17840  0E5D  1501               	bsf	1,2
 17841                           
 17842                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 17843  0E5E  0142               	movlb	2	; select bank2
 17844  0E5F  084B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 17845  0E60  008A               	movwf	10
 17846  0E61  084A               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 17847  0E62  000A               	callw
 17848  0E63  318E               	pagesel	$
 17849  0E64                     i1l3656:	
 17850                           
 17851                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17852  0E64  0140               	movlb	0	; select bank0
 17853  0E65  086F               	movf	_eusart1RxHead,w	;volatile
 17854  0E66  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17855  0E67  0086               	movwf	6
 17856  0E68  3001               	movlw	1	; select bank2/3
 17857  0E69  0087               	movwf	7
 17858  0E6A  0801               	movf	1,w
 17859  0E6B  1903               	btfsc	3,2
 17860  0E6C  2E74               	goto	i1l3660
 17861                           
 17862                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 17863  0E6D  0142               	movlb	2	; select bank2
 17864  0E6E  0849               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 17865  0E6F  008A               	movwf	10
 17866  0E70  0848               	movf	_EUSART1_ErrorHandler^(0+256),w
 17867  0E71  000A               	callw
 17868  0E72  318E               	pagesel	$
 17869                           
 17870                           ;mcc_generated_files/eusart1.c: 188:     } else {
 17871  0E73  0008               	return
 17872  0E74                     i1l3660:	
 17873                           
 17874                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 17875  0E74  318B  2315         	fcall	_EUSART1_RxDataHandler
 17876  0E76  0008               	return
 17877  0E77                     __end_of_EUSART1_Receive_ISR:	
 17878                           
 17879                           	psect	text70
 17880  0916                     __ptext70:	
 17881 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17882 ;; Defined at:
 17883 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 17884 ;; Parameters:    Size  Location     Type
 17885 ;;		None
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;		None
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  1    wreg      void 
 17890 ;; Registers used:
 17891 ;;		None
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17901 ;;Total ram usage:        0 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; This function calls:
 17904 ;;		Nothing
 17905 ;; This function is called by:
 17906 ;;		_EUSART1_Initialize
 17907 ;;		_EUSART1_Receive_ISR
 17908 ;; This function uses a non-reentrant model
 17909 ;;
 17910                           
 17911                           
 17912                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 17913  0916                     _EUSART1_DefaultOverrunErrorHandler:	
 17914                           
 17915                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 17916                           
 17917                           ;incstack = 0
 17918 ;; hardware stack exceeded
 17919                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 17920  0916  0142               	movlb	2	; select bank2
 17921  0917  121D               	bcf	29,4	;volatile
 17922                           
 17923                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 17924  0918  161D               	bsf	29,4	;volatile
 17925  0919  0008               	return
 17926  091A                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 17927                           
 17928                           	psect	text71
 17929  0907                     __ptext71:	
 17930 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 17931 ;; Defined at:
 17932 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;		None
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;		None
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  1    wreg      void 
 17939 ;; Registers used:
 17940 ;;		None
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/0
 17943 ;;		On exit  : 0/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17950 ;;Total ram usage:        0 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; This function calls:
 17953 ;;		Nothing
 17954 ;; This function is called by:
 17955 ;;		_EUSART1_Initialize
 17956 ;;		_EUSART1_Receive_ISR
 17957 ;; This function uses a non-reentrant model
 17958 ;;
 17959                           
 17960                           
 17961                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 17962  0907                     _EUSART1_DefaultFramingErrorHandler:	
 17963                           
 17964                           ;incstack = 0
 17965 ;; hardware stack exceeded
 17966                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 17967  0907  0008               	return
 17968  0908                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 17969                           
 17970                           	psect	text72
 17971  0909                     __ptext72:	
 17972 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17973 ;; Defined at:
 17974 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 17975 ;; Parameters:    Size  Location     Type
 17976 ;;		None
 17977 ;; Auto vars:     Size  Location     Type
 17978 ;;		None
 17979 ;; Return value:  Size  Location     Type
 17980 ;;                  1    wreg      void 
 17981 ;; Registers used:
 17982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17983 ;; Tracked objects:
 17984 ;;		On entry : 0/0
 17985 ;;		On exit  : 0/0
 17986 ;;		Unchanged: 0/0
 17987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17992 ;;Total ram usage:        0 bytes
 17993 ;; Hardware stack levels used:    1
 17994 ;; Hardware stack levels required when called:    1
 17995 ;; This function calls:
 17996 ;;		_EUSART1_RxDataHandler
 17997 ;; This function is called by:
 17998 ;;		_EUSART1_Initialize
 17999 ;;		_EUSART1_Receive_ISR
 18000 ;; This function uses a non-reentrant model
 18001 ;;
 18002                           
 18003                           
 18004                           ;psect for function _EUSART1_DefaultErrorHandler
 18005  0909                     _EUSART1_DefaultErrorHandler:	
 18006                           
 18007                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 18008                           
 18009                           ;incstack = 0
 18010 ;; hardware stack exceeded
 18011                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18012  0909  318B  2315         	fcall	_EUSART1_RxDataHandler
 18013  090B  0008               	return
 18014  090C                     __end_of_EUSART1_DefaultErrorHandler:	
 18015                           
 18016                           	psect	text73
 18017  0B15                     __ptext73:	
 18018 ;; *************** function _EUSART1_RxDataHandler *****************
 18019 ;; Defined at:
 18020 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 18021 ;; Parameters:    Size  Location     Type
 18022 ;;		None
 18023 ;; Auto vars:     Size  Location     Type
 18024 ;;		None
 18025 ;; Return value:  Size  Location     Type
 18026 ;;                  1    wreg      void 
 18027 ;; Registers used:
 18028 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18029 ;; Tracked objects:
 18030 ;;		On entry : 0/0
 18031 ;;		On exit  : 0/0
 18032 ;;		Unchanged: 0/0
 18033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18038 ;;Total ram usage:        1 bytes
 18039 ;; Hardware stack levels used:    1
 18040 ;; This function calls:
 18041 ;;		Nothing
 18042 ;; This function is called by:
 18043 ;;		_EUSART1_Receive_ISR
 18044 ;;		_EUSART1_DefaultErrorHandler
 18045 ;; This function uses a non-reentrant model
 18046 ;;
 18047                           
 18048                           
 18049                           ;psect for function _EUSART1_RxDataHandler
 18050  0B15                     _EUSART1_RxDataHandler:	
 18051                           
 18052                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 18053                           
 18054                           ;incstack = 0
 18055 ;; hardware stack exceeded
 18056                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 18057  0B15  0142               	movlb	2	; select bank2
 18058  0B16  0819               	movf	25,w	;volatile
 18059  0B17  00F7               	movwf	??_EUSART1_RxDataHandler
 18060  0B18  0140               	movlb	0	; select bank0
 18061  0B19  086F               	movf	_eusart1RxHead,w
 18062  0B1A  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 18063  0B1B  0086               	movwf	6
 18064  0B1C  3001               	movlw	1	; select bank2/3
 18065  0B1D  0087               	movwf	7
 18066  0B1E  0877               	movf	??_EUSART1_RxDataHandler,w
 18067  0B1F  0081               	movwf	1
 18068  0B20  3001               	movlw	1
 18069  0B21  00F7               	movwf	??_EUSART1_RxDataHandler
 18070  0B22  0877               	movf	??_EUSART1_RxDataHandler,w
 18071  0B23  07EF               	addwf	_eusart1RxHead,f	;volatile
 18072                           
 18073                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 18074  0B24  3008               	movlw	8
 18075  0B25  026F               	subwf	_eusart1RxHead,w	;volatile
 18076  0B26  1803               	btfsc	3,0
 18077                           
 18078                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 18079  0B27  01EF               	clrf	_eusart1RxHead	;volatile
 18080                           
 18081                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 18082  0B28  3001               	movlw	1
 18083  0B29  00F7               	movwf	??_EUSART1_RxDataHandler
 18084  0B2A  0877               	movf	??_EUSART1_RxDataHandler,w
 18085  0B2B  0141               	movlb	1	; select bank1
 18086  0B2C  07C2               	addwf	_eusart1RxCount^(0+128),f	;volatile
 18087  0B2D  0008               	return
 18088  0B2E                     __end_of_EUSART1_RxDataHandler:	
 18089                           
 18090                           	psect	text74
 18091  09E5                     __ptext74:	
 18092 ;; *************** function _ADCC_ThresholdISR *****************
 18093 ;; Defined at:
 18094 ;;		line 308 in file "mcc_generated_files/adcc.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;		None
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;		None
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      void 
 18101 ;; Registers used:
 18102 ;;		wreg, status,2, status,0, pclath, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18112 ;;Total ram usage:        0 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:    1
 18115 ;; This function calls:
 18116 ;;		Absolute function
 18117 ;;		_ADCC_DefaultInterruptHandler
 18118 ;;		_adcThresholdHandler
 18119 ;; This function is called by:
 18120 ;;		_INTERRUPT_InterruptManager
 18121 ;; This function uses a non-reentrant model
 18122 ;;
 18123                           
 18124                           
 18125                           ;psect for function _ADCC_ThresholdISR
 18126  09E5                     _ADCC_ThresholdISR:	
 18127                           
 18128                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 18129                           
 18130                           ;incstack = 0
 18131 ;; hardware stack exceeded
 18132                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 18133  09E5  014E               	movlb	14	; select bank14
 18134  09E6  108D               	bcf	13,1	;volatile
 18135                           
 18136                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 18137  09E7  0142               	movlb	2	; select bank2
 18138  09E8  0844               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18139  09E9  0445               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18140  09EA  1903               	btfsc	3,2
 18141  09EB  0008               	return
 18142                           
 18143                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 18144  09EC  0845               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18145  09ED  008A               	movwf	10
 18146  09EE  0844               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18147  09EF  000A               	callw
 18148  09F0  3189               	pagesel	$
 18149  09F1  0008               	return
 18150  09F2                     __end_of_ADCC_ThresholdISR:	
 18151                           
 18152                           	psect	text75
 18153  0906                     __ptext75:	
 18154 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 18155 ;; Defined at:
 18156 ;;		line 320 in file "mcc_generated_files/adcc.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;		None
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;		None
 18161 ;; Return value:  Size  Location     Type
 18162 ;;                  1    wreg      void 
 18163 ;; Registers used:
 18164 ;;		None
 18165 ;; Tracked objects:
 18166 ;;		On entry : 0/0
 18167 ;;		On exit  : 0/0
 18168 ;;		Unchanged: 0/0
 18169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;Total ram usage:        0 bytes
 18175 ;; Hardware stack levels used:    1
 18176 ;; This function calls:
 18177 ;;		Nothing
 18178 ;; This function is called by:
 18179 ;;		_ADCC_Initialize
 18180 ;;		_ADCC_ThresholdISR
 18181 ;; This function uses a non-reentrant model
 18182 ;;
 18183                           
 18184                           
 18185                           ;psect for function _ADCC_DefaultInterruptHandler
 18186  0906                     _ADCC_DefaultInterruptHandler:	
 18187                           
 18188                           ;incstack = 0
 18189 ;; hardware stack exceeded
 18190                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 18191  0906  0008               	return
 18192  0907                     __end_of_ADCC_DefaultInterruptHandler:	
 18193                           
 18194                           	psect	text76
 18195  0912                     __ptext76:	
 18196 ;; *************** function _adcThresholdHandler *****************
 18197 ;; Defined at:
 18198 ;;		line 37 in file "beat.c"
 18199 ;; Parameters:    Size  Location     Type
 18200 ;;		None
 18201 ;; Auto vars:     Size  Location     Type
 18202 ;;		None
 18203 ;; Return value:  Size  Location     Type
 18204 ;;                  1    wreg      void 
 18205 ;; Registers used:
 18206 ;;		None
 18207 ;; Tracked objects:
 18208 ;;		On entry : 0/0
 18209 ;;		On exit  : 0/0
 18210 ;;		Unchanged: 0/0
 18211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18216 ;;Total ram usage:        0 bytes
 18217 ;; Hardware stack levels used:    1
 18218 ;; This function calls:
 18219 ;;		Nothing
 18220 ;; This function is called by:
 18221 ;;		_BEAT_init
 18222 ;;		_ADCC_ThresholdISR
 18223 ;; This function uses a non-reentrant model
 18224 ;;
 18225                           
 18226                           
 18227                           ;psect for function _adcThresholdHandler
 18228  0912                     _adcThresholdHandler:	
 18229                           
 18230                           ;beat.c: 38:     thresholdExceeded = 1;
 18231                           
 18232                           ;incstack = 0
 18233 ;; hardware stack exceeded
 18234                           ; Regs used in _adcThresholdHandler: []
 18235  0912  0141               	movlb	1	; select bank1
 18236  0913  01B6               	clrf	_thresholdExceeded^(0+128)
 18237  0914  0AB6               	incf	_thresholdExceeded^(0+128),f
 18238  0915  0008               	return
 18239  0916                     __end_of_adcThresholdHandler:	
 18240  007E                     btemp	set	126	;btemp
 18241  007E                     int$flags	set	126
 18242  007E                     wtemp0	set	126


Data Sizes:
    Strings     78
    Constant    96
    Data        10
    BSS         146
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80     34      80
    BANK2            80      0      50
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_1(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_1(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[2]), STR_2(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2942_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[2]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[2]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TM1650_scrollPrint@array	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1926$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_TM1650_scrollPrint
    _TM1650_scrollPrint->_printf
    _TM1650_init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_CLOCK_getTime
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TM1650_scrollPrint
    _TM1650_scrollPrint->_printf
    _TM1650_init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   57899
                                             32 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
                 _TM1650_scrollPrint
 ---------------------------------------------------------------------------------
 (1) _TM1650_scrollPrint                                  24    22      2   17794
                                             77 BANK0      2     0      2
                                             10 BANK1     22    22      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   18457
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   15756
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0       0
                                              2 BANK0      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   12347
                                             23 BANK0      3     3      0
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4632
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4632
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0     211
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     134
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4632
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  3     1      2    4632
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (17) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (16) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (17) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _address_dec
       _TM1650_fastPrintNum
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
     _address_inc
       _TM1650_fastPrintNum
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
   _LED_init
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _TM1650_scrollPrint
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     120       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      32      10       62.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     120      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 19:14:53 2019

                      ??_ADCC_SetUpperThreshold 0022                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                              _up 0071  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D1  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 0912  
                   __size_of_TM1650_scrollPrint 027E                                             l913 04BC  
                                           l915 0521                                             _PR2 028D  
                                           _bpm 013A                                             _pad 07AD  
                       __size_of_PMD_Initialize 000A                                 _TMR2_Initialize 09FF  
                               _PWM4_Initialize 09CE                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                              __end_of_I2C1_ISR 0453                                            l1151 0CA9  
                                          l1325 07C5                                            l1328 07E5  
                                          l4210 0F3D                                            l4300 0D20  
                                          l4214 0F44                                            l3360 0DB1  
                                          l4216 0F4A                                            l4232 0B7A  
                                          l3256 0B02                                            l3370 0DCC  
                                          l4226 0C7A                                            l4242 0BF5  
                                          l3258 0B0E                                            l4244 0BF7  
                                          l4260 0E33                                            l4332 0FCC  
                                          l3366 0DC3                                            l3358 0DA5  
                                          l3382 0CB3                                            l4270 0C35  
                                          l4326 0FAB                                            l4342 0FDD  
                          _ADCC_StartConversion 0947                                            l3384 0CBF  
                                          l3392 0CD4                                            l4600 0969  
                                          l4256 0E10                                            l4280 07C3  
                                          l4336 0FD2                                            l4290 07F1  
                                          l3388 0CCB                                            l4276 07BB  
                                          l4710 0475                                            l4198 091A  
                                          l4286 07C7                                            ?_pad 0049  
                                          l4368 0716                                            l4376 0CE2  
                                          l4546 0A62                                            l4298 0D17  
                                          l4378 0CFF                                            l4820 064F  
                                          l4732 04F8                                            l4724 04D4  
                                          l4556 0A1A                                            l4572 0AEF  
                                          l4564 0B39                                            l4804 0616  
                                          l4734 0502                                            l4718 04B6  
                                          l4582 0A9A                                            l4574 0AF3  
                                          l4566 0B3D                                            l4670 01BF  
                                          l4816 0647                                            l4770 059C  
                                          l4754 0551                                            l4852 06C8  
                                          l4836 0682                                            l4668 0132  
                                          l4838 0695                                            l4782 05BF  
                                          l4758 055C                                            l4794 05E2  
                                          l4786 05CD                                            l4788 05CF  
                                          l4798 05F1                                            l4896 0EB0  
                                ?_TM1650_enable 0077                                            STR_1 107C  
                                          STR_2 10A9                                            STR_3 10A7  
                                          STR_4 109C                                            STR_5 108D  
                                          STR_6 1073                                            STR_7 1060  
                                          STR_8 106A                                            STR_9 1085  
                       __end_of_PWM1_Initialize 09B8                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u3105 0579                                            u3115 0594  
                                          u3205 0631                                            u3135 05B9  
                                          u1705 0CB6                                            _T2PR 028D  
                                          u1635 0DA8                                            u1725 0CC5  
                                          u3317 0E80                                            u1655 0DB2  
                                          u3255 06A9                                            u1735 0CCC  
                                          u3407 02FD                                            u3327 0EA3  
                                          u1665 0DBC                                            u3337 00A2  
                                          u1675 0DC4                                            u3347 00DA  
                                          u3357 0128                                            u3367 01B2  
                                          u2745 0E31                                            u3377 0235  
                                          u3387 028F                                            _PMD0 0796  
                                          u3397 02C6                                            u2925 014A  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u2945 0478                                            u2785 07D1  
                                          _PMD5 079B                                            u2954 0497  
                                          _PMD6 079C                                            u2955 0496  
                                          _PMD7 079D                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0077  
                                          _ctoa 0D08                                            _main 0E77  
                                          _down 0070                                            _init 0B80  
                                          _menu 00BB                                            _prec 0132  
                                          _nout 0130                                            pad@i 004D  
                                          pad@p 004A                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 004F  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 002F  
                       __end_of_TM1650_setDigit 0A50                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                _BUTTONS_isHeld 0A0D                                           ??_pad 004C  
                       __end_of_PWM2_Initialize 09C3                         __end_of_TMR0_Initialize 0A78  
                                    _i2c1_state 00C0                  ??_TMR0_DefaultInterruptHandler 0077  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 0998                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                __end_of_LED_init 0912  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0052                                __end_of_LED_task 0CAC  
                                         ?_main 0077                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                           _ADREF 0116  
                             __end_of_I2C1_Stop 0AE5                                           STR_10 1095  
                                         STR_11 10A3                                   __CFG_WDTE$OFF 0000  
                                         _ADRPT 009A                                           _T2CON 028E  
                                         _T2HLT 028F                                 __end_of___lwdiv 0DD1  
                    _ADCC_ADTI_InterruptHandler 0144                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l430 0028  
                                         i1l423 000E                                 __end_of___lwmod 0CD9  
                                         i1l426 0017                                           i1l435 002D  
                                         i1l428 0021                                           i1l543 0318  
                                         i1l554 0366                                           i1l555 0372  
                                         i1l572 03DE                                           i1l548 0343  
                                         i1l573 03EC                                           i1l565 03AF  
                                         i1l549 0344                                           i1l584 0A2A  
                                         i1l577 0413                                           i1l569 03CF  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 0058  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 090F                       ?_TMR0_SetInterruptHandler 0020  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 09FF  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 00E8  
                                         _flags 00A7                                           _enter 00BA  
                         ?_ADCC_StartConversion 0077                                           _fputc 0E06  
                                         _fputs 0C31                                           pad@fp 0051  
                                         _width 00A5                                           ctoa@c 0052  
                                         _putch 0BE7                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 09CE                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 0ACD  
                             __end_of_BEAT_task 06EB                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0908  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0077  
           ?_EUSART1_DefaultFramingErrorHandler 0077              _EUSART1_DefaultFramingErrorHandler 0907  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 0A1C  
                               __initialization 0031                            TM1650_setDigit@digit 0036  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                                  __end_of_ctoa 0D38                      __end_of_EUSART1_Initialize 0E06  
                                  __end_of_main 0EBD                                    __end_of_init 0BA0  
                               _CONTROLLER_init 09A2                                 _CONTROLLER_task 0538  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 0959  
                       __end_of_PWM4_Initialize 09D9                         __end_of_TMR2_Initialize 0A0D  
                   ?_INTERRUPT_InterruptManager 0077                                     _i2c1_object 00A0  
                                        ??_ctoa 0054                                          ??_main 00E6  
                                        ??_init 0023                               __end_of_GPIO_init 0A3E  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        ?_fputc 0039                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0041  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR3H 0315                                          _CCPR1L 030C  
                                        _CCPR4H 0319                                          _CCPR2L 0310  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0077                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0077                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l4070 0D5E                                          i1l4062 0D3D  
                                        i1l4074 0D66                                          i1l3700 0336  
                                        i1l3518 0AE2                                          i1l3712 0350  
                                        i1l3704 033D                                          i1l3650 0E54  
                                        i1l3802 0417                                          i1l3660 0E74  
                                        i1l3804 041A                                          i1l3732 038B  
                                        i1l3812 0426                                          i1l3806 041E  
                                        i1l3718 0360                                          i1l3656 0E64  
                                        i1l3752 03A4                                  __CFG_WDTCCS$SC 0000  
                                        i1l3790 03FA                                          i1l3774 03D2  
                                        i1l3766 03BD                                          i1l3786 03F3  
                                        i1l4938 042F                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                               ?_BUTTONS_isHeld 0077                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0067  
                                _p_i2c1_current 0072                     __end_of_TM1650_fastPrintNum 07AD  
                             _ADCC_ThresholdISR 09E5                                  __CFG_STVREN$ON 0000  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                                       ?_I2C1_ISR 0077  
                                        _printf 0AA1                          __size_of_BEAT_detected 0009  
                                        pad@buf 0049                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0057  
                                _lastActiveTime 00AD                                          _strlen 0AFD  
                          __size_of_TM1650_init 0014                                 _ADCC_Initialize 0C0B  
                                        fputc@c 0039                                  _PMD_Initialize 0998  
                                        fputs@c 0045                                    ??_CLOCK_init 0022  
                                        fputs@i 0046                                          fputs@s 0048  
                           ??_ADCC_ThresholdISR 0077                          ??_ADCC_StartConversion 0020  
                                        putch@n 0038                                __end_of_vfprintf 0D08  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 093E  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                   _tm1650_status 00B9  
                               _eusart1RxBuffer 0128                                ?_PWM3_Initialize 0077  
                             _SYSTEM_Initialize 0BC3                         __end_of__initialization 0083  
                       __end_of_CONTROLLER_init 09AD                         __end_of_CONTROLLER_task 061A  
                            ?_SYSTEM_Initialize 0077                                       ?_LED_init 0077  
                                     ?_LED_task 0077                                  _i2c1_trb_count 00BF  
                __size_of_EUSART1_RxDataHandler 0019                       __end_of_ADCC_ThresholdISR 09F2  
                 __end_of_EUSART1_RxDataHandler 0B2E                           _I2C1_FunctionComplete 0A1C  
                          _I2C1_BusCollisionISR 090C                                  __pcstackCOMMON 0077  
                            __end_of_CLOCK_init 092D                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 092D                                    __pidataBANK2 0002  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0077  
                                 __end_of_fputc 0E3D                                   __end_of_fputs 0C57  
                                 __end_of_putch 0C0B                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 0D38                            __end_of_BUTTONS_init 0F05  
                        __end_of_PMD_Initialize 09A2                            __end_of_BUTTONS_task 0538  
                   __end_of_EUSART1_Receive_ISR 0E77                               _thresholdExceeded 00B6  
                   ADCC_StartConversion@channel 0020                                         ??_fputc 003C  
                     __end_of_SYSTEM_Initialize 0BE7                                         ??_fputs 0042  
                                       ??_putch 0037                                   _eusart1RxHead 006F  
                                 _eusart1RxTail 0074                                      __pbssBANK0 006F  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 0962                                      ??_LED_init 0020  
                                    ??_LED_task 0022                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 0974                                      __pmaintext 0E77  
              __end_of_TMR0_SetInterruptHandler 0962                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 0C31                                      __pintentry 0004  
                               _I2C1_Initialize 0B47                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                      __end_of_TM1650_scrollPrint 0305  
                                ?_DMX_interrupt 0077                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 093E           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 0935                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00C6                                 ?_PMD_Initialize 0077  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 097D  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 0974  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A9  
                                     _I2C1_Stop 0ACD                                      _arrayIndex 0136  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                             __end_of_charTable 1060                             _CLOCK_timerCallback 091F  
                                ?_BEAT_detected 0077                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0037  
                              ?_CONTROLLER_init 0077                                   ??_address_inc 0037  
                              ?_CONTROLLER_task 0077                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0077                                       _BEAT_init 0AB6  
                 __size_of_I2C1_MasterTRBInsert 0052                                       _BEAT_task 061A  
                       _TM1650_scrollPrint$3380 00DE                         _TM1650_scrollPrint$3378 00E2  
                       _TM1650_scrollPrint$3379 00E0                      __size_of_ADCC_ThresholdISR 000D  
                       TM1650_scrollPrint@array 006D                              _p_i2c1_trb_current 0073  
                          ?_CLOCK_timerCallback 0077                                         ___lwdiv 0D9C  
                                       ___lwmod 0CAC                                       ?_vfprintf 0061  
                                       _address 00EE                                         __ptext1 0087  
                                       __ptext2 0A78                                         __ptext3 0AA1  
                                       __ptext4 0CD9                                         __ptext5 0F57  
                                       __ptext6 0D08                                         __ptext7 07AD  
                                       __ptext8 0AFD                                         __ptext9 0C31  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 00A9                           _OSCILLATOR_Initialize 098F  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0150                                         _buttons 01C0  
                            _EUSART1_Initialize 0DD1                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0077                     __end_of_adcThresholdHandler 0916  
                 ??_EUSART1_DefaultErrorHandler 0078                      __size_of_SYSTEM_Initialize 0024  
                          I2C1_ISR@pi2c_buf_ptr 00BE                                         clrloop0 09DA  
                          end_of_initialization 0083                                       _T2RSTbits 0291  
                                     _GPIO_init 0A2D                             ?_EUSART1_Initialize 0077  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003B  
                   _EUSART1_OverrunErrorHandler 014A                                         fputs@fp 0041  
                        ??_I2C1_BusCollisionISR 0077                         __end_of_I2C1_Initialize 0B63  
         __end_of_EUSART1_SetRxInterruptHandler 098F          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 0986                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                               __end_of_vfpfcnvrt 1000  
                         __size_of_BUTTONS_init 0048                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 0AFD                             __end_of_address_inc 0B47  
                              ?_ADCC_Initialize 0077                                      ??_vfprintf 0064  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                      _TMR0_SetInterruptHandler 0959                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 014E                               __end_of_writeData 0B80  
                       ?_ADCC_SetUpperThreshold 0020                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 0AA1               I2C1_ISR@i2c_10bit_address_restart 00BC  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                  _BUTTONS_init 0EBD                                    _BUTTONS_task 0453  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_init 0003  
                             __size_of_LED_task 002B                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006D                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0060                         I2C1_MasterWrite@trBlock 0140  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                      __size_of_TM1650_setDigit 0012                          ?_OSCILLATOR_Initialize 0077  
                __end_of_ADCC_SetUpperThreshold 0947                    __size_of_TM1650_fastPrintNum 00C2  
                                __end_of_printf 0AB6                                  __end_of_strlen 0B15  
                                  _lastDetected 00B5                             start_initialization 0031  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 0033  
                           TM1650_setDigit@data 0034                                     __end_of_pad 0800  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 0A50                              ?_BUTTONS_isClicked 0077  
                                   _address_dec 0AE5                                     _address_inc 0B2E  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0077  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0061  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 0B15                  ?_EUSART1_SetRxInterruptHandler 0020  
                                   __pdataBANK1 00E8                                     __pdataBANK2 0150  
                                 _CLOCK_getTime 0950                                        ??_printf 0069  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00C2                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 0A8C                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 014E                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00C6  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 00C3                       __end_of_BUTTONS_isClicked 0A64  
                            _TM1650_scrollPrint 0087                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 003A  
                           ?_TM1650_scrollPrint 006D                                       _charTable 1000  
                         _TMR0_InterruptHandler 0146                                       __pnvBANK2 0144  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 0D69  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0305  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 007E  
                               writeData@status 0033                            ??_TM1650_scrollPrint 00D0  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 0C57  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 0F57  
    __end_of_EUSART1_DefaultOverrunErrorHandler 091A     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 0916                            _EUSART1_ErrorHandler 0148  
                       _EUSART1_SetErrorHandler 096B                               ??_TM1650_setDigit 0035  
                              ___lwdiv@quotient 0025                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 091F  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 091A  
                        I2C1_MasterRead@trBlock 013C                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                                      _LATCbits 001A                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 09D9                                        _PIE0bits 0716  
                                      _LED_init 090F                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 0C81  
           __size_of_INTERRUPT_InterruptManager 002B                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                     _incInterval 00EC  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0077                         CONTROLLER_task@isActive 0039  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 09F2  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_init 000B  
                      __size_of_CONTROLLER_task 00E2                                     _TM1650_init 0A78  
                                     _threshold 00EA                                       _vfpfcnvrt 0F57  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                              DMX_interrupt@dummy 007D  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 0B63                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 005F                                     _lastIncTime 00AF  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 0925  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 06EB  
                                    _ADSTATbits 0115                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0063                                      vfprintf@fp 0066  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00BD  
                       ??_OSCILLATOR_Initialize 0020                           __end_of_DMX_interrupt 0D69  
                   __size_of_EUSART1_Initialize 0035                                      ?_vfpfcnvrt 0058  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 0BC3                                      _ANSELAbits 1F38  
                                    _ANSELCbits 1F4E                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 090C  
                   _EUSART1_DefaultErrorHandler 0909                                     _currentTime 00B1  
                                    _CLOCK_init 0925                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0075                                 ___lwdiv@counter 0027  
                                      _detected 00B7                                      ?_writeData 002E  
                                      __ptext10 0E06                                        __ptext11 0BE7  
                                      __ptext20 0998                                        __ptext12 0A3E  
                                      __ptext21 0D69                                        __ptext13 0BC3  
                                      __ptext30 0C81                                        __ptext22 098F  
                                      __ptext14 09FF                             TM1650_scrollPrint@i 00E4  
                                      __ptext31 0962                                        __ptext23 0B47  
                                      __ptext15 0A64                                        __ptext40 06EB  
                                      __ptext32 090F                                        __ptext24 0DD1  
                                      __ptext16 09CE                                        __ptext41 0B63  
                                      __ptext33 0538                                        __ptext25 0986  
                                      __ptext17 09C3                                        __ptext50 0EBD  
                                      __ptext42 0C57                                        __ptext34 0B2E  
                                      __ptext26 097D                                        __ptext18 09B8  
                                      __ptext51 0B80                                        __ptext43 0BA0  
                                      __ptext35 0AE5                                        __ptext27 0974  
                                      __ptext19 09AD                                        __ptext52 0A2D  
                                      __ptext44 0F05                                        __ptext36 0A8C  
                                      __ptext28 096B                                        __ptext61 09F2  
                                      __ptext53 061A                                        __ptext45 091A  
                                      __ptext37 0A0D                                        __ptext29 0C0B  
                                      __ptext70 0916                                        __ptext62 091F  
                                      __ptext54 0D9C                                        __ptext46 0CAC  
                                      __ptext38 0A50                                        __ptext71 0907  
                                      __ptext63 0908                                        __ptext55 0950  
                                      __ptext47 0925                                        __ptext39 09A2  
                                      __ptext72 0909                                        __ptext64 0305  
                                      __ptext56 0AB6                                        __ptext48 0959  
                                      __ptext73 0B15                                        __ptext65 0ACD  
                                      __ptext57 0947                                        __ptext49 0453  
                                      __ptext74 09E5                                        __ptext66 0A1C  
                                      __ptext58 093E                                        __ptext75 0906  
                                      __ptext67 090C                                        __ptext59 0935  
                                      __ptext76 0912                                        __ptext68 0D38  
                                      __ptext69 0E3D                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 096B  
                                      _lastBeat 00AB                                        _lastTime 00B3  
                                 __size_of_ctoa 0030                                   __size_of_main 0046  
                                 __size_of_init 0020                                    ?_address_dec 0077  
          __end_of_TMR0_DefaultInterruptHandler 0909           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0908                                    ?_address_inc 0077  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 0F05  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 0950                                        int$flags 007E  
                                      _position 00B8                         __size_of_BUTTONS_isHeld 000F  
                                      _vfprintf 0CD9              __end_of_INTERRUPT_InterruptManager 002F  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00C6  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 014C  
                           _EUSART1_Receive_ISR 0E3D                           ??_TM1650_fastPrintNum 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0037  
                             ??_CONTROLLER_task 0037                                        init@port 0020  
                                __pstringtext10 10A3                                  __pstringtext11 10A9  
                                __pstringtext12 0000            __end_of_ADCC_DefaultInterruptHandler 0907  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0906  
                                      intlevel1 0000                                  _thresholdCount 0138  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 002E  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 0C81                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 0986  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 097D  
                 __end_of_I2C1_FunctionComplete 0A2D                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 09AD                   ?_TMR0_DefaultInterruptHandler 0077  
                        TM1650_fastPrintNum@num 0034                               _lastLedActiveTime 0134  
                                      printf@ap 006C  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                               _TM1650_setDigit 0A3E                                     ??_vfpfcnvrt 005A  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00C1  
                                 __pstringtext1 1000                                   __pstringtext2 1060  
                                 __pstringtext3 106A                                   __pstringtext4 1073  
                                 __pstringtext5 107C                                   __pstringtext6 1085  
                                 __pstringtext7 108D                                   __pstringtext8 1095  
                                 __pstringtext9 109C                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 0A64  
                               _PWM2_Initialize 09B8                                 ___lwmod@counter 002D  
                      _I2C1_MasterWriteTRBBuild 0BA0                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 0D9C  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 0A8C  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0077  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 09C3  
