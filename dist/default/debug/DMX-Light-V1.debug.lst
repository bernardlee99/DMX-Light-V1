

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 27 20:42:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1
     9                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1
    10                           	psect	nvBANK6,global,class=BANK6,space=1,delta=1
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	stringtext3,global,class=STRCODE,delta=2
    13                           	psect	stringtext4,global,class=STRCODE,delta=2
    14                           	psect	stringtext5,global,class=STRCODE,delta=2
    15                           	psect	stringtext6,global,class=STRCODE,delta=2
    16                           	psect	stringtext7,global,class=STRCODE,delta=2
    17                           	psect	stringtext8,global,class=STRCODE,delta=2
    18                           	psect	stringtext9,global,class=STRCODE,delta=2
    19                           	psect	stringtext10,global,class=STRCODE,delta=2
    20                           	psect	stringtext11,global,class=STRCODE,delta=2
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	stringtext26,global,class=STRCODE,delta=2
    36                           	psect	stringtext27,global,class=STRCODE,delta=2
    37                           	psect	stringtext28,global,class=STRCODE,delta=2
    38                           	psect	stringtext29,global,class=STRCODE,delta=2
    39                           	psect	stringtext30,global,class=STRCODE,delta=2
    40                           	psect	stringtext31,global,class=STRCODE,delta=2
    41                           	psect	cinit,global,class=CODE,merge=1,delta=2
    42                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    43                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    44                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    45                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    46                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    47                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    48                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    49                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    50                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    51                           	psect	inittext,global,class=CODE,delta=2
    52                           	psect	clrtext,global,class=CODE,delta=2
    53                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    54                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    55                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    56                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    57                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    58                           	psect	text1,local,class=CODE,merge=1,delta=2
    59                           	psect	text2,local,class=CODE,merge=1,delta=2
    60                           	psect	text3,local,class=CODE,merge=1,delta=2
    61                           	psect	text4,local,class=CODE,merge=1,delta=2
    62                           	psect	text5,local,class=CODE,merge=1,delta=2
    63                           	psect	text6,local,class=CODE,merge=1,delta=2
    64                           	psect	text7,local,class=CODE,merge=1,delta=2
    65                           	psect	text8,local,class=CODE,merge=1,delta=2
    66                           	psect	text9,local,class=CODE,merge=1,delta=2
    67                           	psect	text10,local,class=CODE,merge=1,delta=2
    68                           	psect	text11,local,class=CODE,merge=1,delta=2
    69                           	psect	text12,local,class=CODE,merge=1,delta=2
    70                           	psect	text13,local,class=CODE,merge=1,delta=2
    71                           	psect	text14,local,class=CODE,merge=1,delta=2
    72                           	psect	text15,local,class=CODE,merge=1,delta=2
    73                           	psect	text16,local,class=CODE,merge=1,delta=2
    74                           	psect	text17,local,class=CODE,merge=1,delta=2
    75                           	psect	text18,local,class=CODE,merge=1,delta=2
    76                           	psect	text19,local,class=CODE,merge=1,delta=2
    77                           	psect	text20,local,class=CODE,merge=1,delta=2
    78                           	psect	text21,local,class=CODE,merge=1,delta=2
    79                           	psect	text22,local,class=CODE,merge=1,delta=2
    80                           	psect	text23,local,class=CODE,merge=1,delta=2
    81                           	psect	text24,local,class=CODE,merge=1,delta=2
    82                           	psect	text25,local,class=CODE,merge=1,delta=2
    83                           	psect	text26,local,class=CODE,merge=1,delta=2
    84                           	psect	text27,local,class=CODE,merge=1,delta=2
    85                           	psect	text28,local,class=CODE,merge=1,delta=2
    86                           	psect	text29,local,class=CODE,merge=1,delta=2
    87                           	psect	text30,local,class=CODE,merge=1,delta=2
    88                           	psect	text31,local,class=CODE,merge=1,delta=2
    89                           	psect	text32,local,class=CODE,merge=1,delta=2
    90                           	psect	text33,local,class=CODE,merge=1,delta=2
    91                           	psect	text34,local,class=CODE,merge=1,delta=2
    92                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    93                           	psect	text36,local,class=CODE,merge=1,delta=2
    94                           	psect	text37,local,class=CODE,merge=1,delta=2
    95                           	psect	text38,local,class=CODE,merge=1,delta=2
    96                           	psect	text39,local,class=CODE,merge=1,delta=2
    97                           	psect	text40,local,class=CODE,merge=1,delta=2
    98                           	psect	text41,local,class=CODE,merge=1,delta=2
    99                           	psect	text42,local,class=CODE,merge=1,delta=2
   100                           	psect	text43,local,class=CODE,merge=1,delta=2
   101                           	psect	text44,local,class=CODE,merge=1,delta=2
   102                           	psect	text45,local,class=CODE,merge=1,delta=2
   103                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text47,local,class=CODE,merge=1,delta=2
   105                           	psect	text48,local,class=CODE,merge=1,delta=2
   106                           	psect	text49,local,class=CODE,merge=1,delta=2
   107                           	psect	text50,local,class=CODE,merge=1,delta=2
   108                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text54,local,class=CODE,merge=1,delta=2
   112                           	psect	text55,local,class=CODE,merge=1,delta=2
   113                           	psect	text56,local,class=CODE,merge=1,delta=2
   114                           	psect	text57,local,class=CODE,merge=1,delta=2
   115                           	psect	text58,local,class=CODE,merge=1,delta=2
   116                           	psect	text59,local,class=CODE,merge=1,delta=2
   117                           	psect	text60,local,class=CODE,merge=1,delta=2
   118                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text64,local,class=CODE,merge=1,delta=2
   122                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text66,local,class=CODE,merge=1,delta=2
   124                           	psect	text67,local,class=CODE,merge=1,delta=2
   125                           	psect	text68,local,class=CODE,merge=1,delta=2
   126                           	psect	text69,local,class=CODE,merge=1,delta=2
   127                           	psect	text70,local,class=CODE,merge=1,delta=2
   128                           	psect	text71,local,class=CODE,merge=1,delta=2
   129                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   130                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   131                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
   133                           	psect	text76,local,class=CODE,merge=1,delta=2
   134                           	psect	text77,local,class=CODE,merge=1,delta=2,group=1
   135                           	psect	text78,local,class=CODE,merge=1,delta=2,group=1
   136                           	psect	text79,local,class=CODE,merge=1,delta=2,group=1
   137                           	psect	text80,local,class=CODE,merge=1,delta=2,group=1
   138                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   139                           	psect	text82,local,class=CODE,merge=1,delta=2
   140                           	psect	text83,local,class=CODE,merge=1,delta=2
   141                           	psect	text84,local,class=CODE,merge=1,delta=2
   142                           	psect	text85,local,class=CODE,merge=1,delta=2
   143                           	psect	text86,local,class=CODE,merge=1,delta=2
   144                           	psect	text87,local,class=CODE,merge=1,delta=2
   145                           	psect	text88,local,class=CODE,merge=1,delta=2
   146                           	psect	text89,local,class=CODE,merge=1,delta=2
   147                           	psect	text90,local,class=CODE,merge=1,delta=2
   148                           	psect	text91,local,class=CODE,merge=1,delta=2,group=1
   149                           	psect	text92,local,class=CODE,merge=1,delta=2
   150                           	psect	text93,local,class=CODE,merge=1,delta=2
   151                           	psect	text94,local,class=CODE,merge=1,delta=2
   152                           	psect	text95,local,class=CODE,merge=1,delta=2
   153                           	psect	text96,local,class=CODE,merge=1,delta=2
   154                           	psect	intentry,global,class=CODE,delta=2
   155                           	psect	text98,local,class=CODE,merge=1,delta=2
   156                           	psect	text99,local,class=CODE,merge=1,delta=2
   157                           	psect	text100,local,class=CODE,merge=1,delta=2
   158                           	psect	text101,local,class=CODE,merge=1,delta=2
   159                           	psect	text102,local,class=CODE,merge=1,delta=2
   160                           	psect	text103,local,class=CODE,merge=1,delta=2
   161                           	psect	text104,local,class=CODE,merge=1,delta=2
   162                           	psect	text105,local,class=CODE,merge=1,delta=2
   163                           	psect	text106,local,class=CODE,merge=1,delta=2
   164                           	psect	text107,local,class=CODE,merge=1,delta=2
   165                           	psect	text108,local,class=CODE,merge=1,delta=2
   166                           	psect	text109,local,class=CODE,merge=1,delta=2
   167                           	psect	text110,local,class=CODE,merge=1,delta=2
   168                           	psect	text111,local,class=CODE,merge=1,delta=2
   169                           	psect	text112,local,class=CODE,merge=1,delta=2
   170                           	psect	text113,local,class=CODE,merge=1,delta=2
   171                           	dabs	1,0xCA0,32
   172                           	dabs	1,0xC20,80
   173                           	dabs	1,0xBA0,80
   174                           	dabs	1,0xB20,80
   175                           	dabs	1,0xAA0,80
   176                           	dabs	1,0xA20,80
   177                           	dabs	1,0x9A0,80
   178                           	dabs	1,0x920,80
   179                           	dabs	1,0x8A0,80
   180                           	dabs	1,0x820,80
   181                           	dabs	1,0x7A0,80
   182                           	dabs	1,0x720,80
   183                           	dabs	1,0x6A0,80
   184                           	dabs	1,0x64E,34
   185                           	dabs	1,0x23EE,0,_dmxArray
   186                           	dabs	1,0x7E,2
   187  0000                     
   188                           ; Version 2.10
   189                           ; Generated 31/07/2019 GMT
   190                           ; 
   191                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   192                           ; All rights reserved.
   193                           ; 
   194                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   195                           ; 
   196                           ; Redistribution and use in source and binary forms, with or without modification, are
   197                           ; permitted provided that the following conditions are met:
   198                           ; 
   199                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   200                           ;        conditions and the following disclaimer.
   201                           ; 
   202                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   203                           ;        of conditions and the following disclaimer in the documentation and/or other
   204                           ;        materials provided with the distribution.
   205                           ; 
   206                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   207                           ;        software without specific prior written permission.
   208                           ; 
   209                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   210                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   211                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   212                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   213                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   214                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   215                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   216                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   217                           ; 
   218                           ; 
   219                           ; Code-generator required, PIC16F18446 Definitions
   220                           ; 
   221                           ; SFR Addresses
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  008C                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  010F                     	;# 
   277  0110                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0113                     	;# 
   281  0114                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  0119                     	;# 
   288  0119                     	;# 
   289  011A                     	;# 
   290  011A                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011B                     	;# 
   294  011B                     	;# 
   295  011B                     	;# 
   296  011B                     	;# 
   297  011C                     	;# 
   298  011C                     	;# 
   299  011C                     	;# 
   300  011D                     	;# 
   301  011D                     	;# 
   302  011D                     	;# 
   303  011E                     	;# 
   304  011E                     	;# 
   305  011E                     	;# 
   306  011F                     	;# 
   307  011F                     	;# 
   308  011F                     	;# 
   309  011F                     	;# 
   310  011F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  018E                     	;# 
   314  018F                     	;# 
   315  0190                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0196                     	;# 
   319  0197                     	;# 
   320  0198                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  020C                     	;# 
   326  020D                     	;# 
   327  020E                     	;# 
   328  020E                     	;# 
   329  020F                     	;# 
   330  020F                     	;# 
   331  0210                     	;# 
   332  0210                     	;# 
   333  0211                     	;# 
   334  0211                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0214                     	;# 
   338  0214                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0218                     	;# 
   346  0219                     	;# 
   347  021A                     	;# 
   348  021A                     	;# 
   349  021B                     	;# 
   350  021B                     	;# 
   351  021C                     	;# 
   352  021C                     	;# 
   353  021D                     	;# 
   354  021D                     	;# 
   355  021E                     	;# 
   356  021F                     	;# 
   357  028C                     	;# 
   358  028C                     	;# 
   359  028D                     	;# 
   360  028D                     	;# 
   361  028E                     	;# 
   362  028F                     	;# 
   363  0290                     	;# 
   364  0291                     	;# 
   365  0292                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0293                     	;# 
   369  0294                     	;# 
   370  0295                     	;# 
   371  0296                     	;# 
   372  0297                     	;# 
   373  0298                     	;# 
   374  0298                     	;# 
   375  0299                     	;# 
   376  0299                     	;# 
   377  029A                     	;# 
   378  029B                     	;# 
   379  029C                     	;# 
   380  029D                     	;# 
   381  029F                     	;# 
   382  030C                     	;# 
   383  030C                     	;# 
   384  030D                     	;# 
   385  030E                     	;# 
   386  030F                     	;# 
   387  0310                     	;# 
   388  0310                     	;# 
   389  0311                     	;# 
   390  0312                     	;# 
   391  0313                     	;# 
   392  0314                     	;# 
   393  0314                     	;# 
   394  0315                     	;# 
   395  0316                     	;# 
   396  0317                     	;# 
   397  0318                     	;# 
   398  0318                     	;# 
   399  0319                     	;# 
   400  031A                     	;# 
   401  031B                     	;# 
   402  038C                     	;# 
   403  038C                     	;# 
   404  038D                     	;# 
   405  038E                     	;# 
   406  0390                     	;# 
   407  0390                     	;# 
   408  0391                     	;# 
   409  0392                     	;# 
   410  048C                     	;# 
   411  048C                     	;# 
   412  048D                     	;# 
   413  048E                     	;# 
   414  048F                     	;# 
   415  048F                     	;# 
   416  0490                     	;# 
   417  0491                     	;# 
   418  0492                     	;# 
   419  0492                     	;# 
   420  0493                     	;# 
   421  0494                     	;# 
   422  0495                     	;# 
   423  0495                     	;# 
   424  0496                     	;# 
   425  0497                     	;# 
   426  0498                     	;# 
   427  0499                     	;# 
   428  049A                     	;# 
   429  049B                     	;# 
   430  049C                     	;# 
   431  049D                     	;# 
   432  058C                     	;# 
   433  058C                     	;# 
   434  058D                     	;# 
   435  058E                     	;# 
   436  058F                     	;# 
   437  058F                     	;# 
   438  0590                     	;# 
   439  0591                     	;# 
   440  0592                     	;# 
   441  0593                     	;# 
   442  059C                     	;# 
   443  059C                     	;# 
   444  059D                     	;# 
   445  059D                     	;# 
   446  059E                     	;# 
   447  059F                     	;# 
   448  060C                     	;# 
   449  060C                     	;# 
   450  060D                     	;# 
   451  060D                     	;# 
   452  060E                     	;# 
   453  060F                     	;# 
   454  0610                     	;# 
   455  0611                     	;# 
   456  0612                     	;# 
   457  0613                     	;# 
   458  0614                     	;# 
   459  0616                     	;# 
   460  0616                     	;# 
   461  0617                     	;# 
   462  0617                     	;# 
   463  0618                     	;# 
   464  0619                     	;# 
   465  061A                     	;# 
   466  061B                     	;# 
   467  061C                     	;# 
   468  061D                     	;# 
   469  061E                     	;# 
   470  070C                     	;# 
   471  070D                     	;# 
   472  070E                     	;# 
   473  070F                     	;# 
   474  0710                     	;# 
   475  0711                     	;# 
   476  0712                     	;# 
   477  0713                     	;# 
   478  0714                     	;# 
   479  0716                     	;# 
   480  0717                     	;# 
   481  0718                     	;# 
   482  0719                     	;# 
   483  071A                     	;# 
   484  071B                     	;# 
   485  071C                     	;# 
   486  071D                     	;# 
   487  071E                     	;# 
   488  0796                     	;# 
   489  0797                     	;# 
   490  0798                     	;# 
   491  0799                     	;# 
   492  079A                     	;# 
   493  079B                     	;# 
   494  079C                     	;# 
   495  079D                     	;# 
   496  080C                     	;# 
   497  080D                     	;# 
   498  080E                     	;# 
   499  080F                     	;# 
   500  0810                     	;# 
   501  0811                     	;# 
   502  0812                     	;# 
   503  0813                     	;# 
   504  0814                     	;# 
   505  081A                     	;# 
   506  081A                     	;# 
   507  081B                     	;# 
   508  081C                     	;# 
   509  081C                     	;# 
   510  081D                     	;# 
   511  081E                     	;# 
   512  081F                     	;# 
   513  088C                     	;# 
   514  088D                     	;# 
   515  088E                     	;# 
   516  088F                     	;# 
   517  0890                     	;# 
   518  0891                     	;# 
   519  0892                     	;# 
   520  0893                     	;# 
   521  0895                     	;# 
   522  0896                     	;# 
   523  0897                     	;# 
   524  0898                     	;# 
   525  0899                     	;# 
   526  089A                     	;# 
   527  089B                     	;# 
   528  090C                     	;# 
   529  090E                     	;# 
   530  090F                     	;# 
   531  091F                     	;# 
   532  098F                     	;# 
   533  098F                     	;# 
   534  0990                     	;# 
   535  0991                     	;# 
   536  0992                     	;# 
   537  0993                     	;# 
   538  0994                     	;# 
   539  0995                     	;# 
   540  0996                     	;# 
   541  0997                     	;# 
   542  1E0F                     	;# 
   543  1E10                     	;# 
   544  1E11                     	;# 
   545  1E12                     	;# 
   546  1E13                     	;# 
   547  1E14                     	;# 
   548  1E15                     	;# 
   549  1E16                     	;# 
   550  1E17                     	;# 
   551  1E18                     	;# 
   552  1E19                     	;# 
   553  1E1A                     	;# 
   554  1E1B                     	;# 
   555  1E1C                     	;# 
   556  1E1D                     	;# 
   557  1E1E                     	;# 
   558  1E1F                     	;# 
   559  1E20                     	;# 
   560  1E21                     	;# 
   561  1E22                     	;# 
   562  1E23                     	;# 
   563  1E24                     	;# 
   564  1E25                     	;# 
   565  1E26                     	;# 
   566  1E27                     	;# 
   567  1E28                     	;# 
   568  1E29                     	;# 
   569  1E2A                     	;# 
   570  1E2B                     	;# 
   571  1E2C                     	;# 
   572  1E2D                     	;# 
   573  1E2E                     	;# 
   574  1E2F                     	;# 
   575  1E30                     	;# 
   576  1E31                     	;# 
   577  1E32                     	;# 
   578  1E33                     	;# 
   579  1E34                     	;# 
   580  1E35                     	;# 
   581  1E36                     	;# 
   582  1E37                     	;# 
   583  1E8F                     	;# 
   584  1E90                     	;# 
   585  1E91                     	;# 
   586  1E92                     	;# 
   587  1E93                     	;# 
   588  1E94                     	;# 
   589  1E95                     	;# 
   590  1E96                     	;# 
   591  1E97                     	;# 
   592  1E9C                     	;# 
   593  1E9D                     	;# 
   594  1E9E                     	;# 
   595  1EA1                     	;# 
   596  1EA2                     	;# 
   597  1EA3                     	;# 
   598  1EA4                     	;# 
   599  1EA9                     	;# 
   600  1EAA                     	;# 
   601  1EB1                     	;# 
   602  1EB2                     	;# 
   603  1EB8                     	;# 
   604  1EB9                     	;# 
   605  1EBA                     	;# 
   606  1EBB                     	;# 
   607  1EBC                     	;# 
   608  1EBD                     	;# 
   609  1EBE                     	;# 
   610  1EC3                     	;# 
   611  1EC5                     	;# 
   612  1EC6                     	;# 
   613  1EC7                     	;# 
   614  1EC8                     	;# 
   615  1EC9                     	;# 
   616  1ECA                     	;# 
   617  1ECB                     	;# 
   618  1ECB                     	;# 
   619  1ECB                     	;# 
   620  1ECC                     	;# 
   621  1ECC                     	;# 
   622  1ECC                     	;# 
   623  1F10                     	;# 
   624  1F11                     	;# 
   625  1F12                     	;# 
   626  1F14                     	;# 
   627  1F15                     	;# 
   628  1F1C                     	;# 
   629  1F1D                     	;# 
   630  1F1E                     	;# 
   631  1F1F                     	;# 
   632  1F20                     	;# 
   633  1F21                     	;# 
   634  1F22                     	;# 
   635  1F23                     	;# 
   636  1F24                     	;# 
   637  1F25                     	;# 
   638  1F26                     	;# 
   639  1F27                     	;# 
   640  1F38                     	;# 
   641  1F39                     	;# 
   642  1F3A                     	;# 
   643  1F3B                     	;# 
   644  1F3C                     	;# 
   645  1F3D                     	;# 
   646  1F3E                     	;# 
   647  1F3F                     	;# 
   648  1F43                     	;# 
   649  1F44                     	;# 
   650  1F45                     	;# 
   651  1F46                     	;# 
   652  1F47                     	;# 
   653  1F48                     	;# 
   654  1F49                     	;# 
   655  1F4A                     	;# 
   656  1F4E                     	;# 
   657  1F4F                     	;# 
   658  1F50                     	;# 
   659  1F51                     	;# 
   660  1F52                     	;# 
   661  1F53                     	;# 
   662  1F54                     	;# 
   663  1F55                     	;# 
   664  1FE4                     	;# 
   665  1FE5                     	;# 
   666  1FE6                     	;# 
   667  1FE7                     	;# 
   668  1FE8                     	;# 
   669  1FE8                     	;# 
   670  1FE9                     	;# 
   671  1FEA                     	;# 
   672  1FEB                     	;# 
   673  1FED                     	;# 
   674  1FEE                     	;# 
   675  1FEF                     	;# 
   676  0000                     	;# 
   677  0001                     	;# 
   678  0002                     	;# 
   679  0003                     	;# 
   680  0004                     	;# 
   681  0005                     	;# 
   682  0006                     	;# 
   683  0007                     	;# 
   684  0008                     	;# 
   685  0009                     	;# 
   686  000A                     	;# 
   687  000B                     	;# 
   688  000C                     	;# 
   689  000D                     	;# 
   690  000E                     	;# 
   691  0012                     	;# 
   692  0013                     	;# 
   693  0014                     	;# 
   694  0018                     	;# 
   695  0019                     	;# 
   696  001A                     	;# 
   697  008C                     	;# 
   698  008C                     	;# 
   699  008D                     	;# 
   700  008E                     	;# 
   701  008E                     	;# 
   702  008F                     	;# 
   703  0090                     	;# 
   704  0090                     	;# 
   705  0091                     	;# 
   706  0092                     	;# 
   707  0092                     	;# 
   708  0093                     	;# 
   709  0094                     	;# 
   710  0094                     	;# 
   711  0095                     	;# 
   712  0096                     	;# 
   713  0096                     	;# 
   714  0097                     	;# 
   715  0098                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009D                     	;# 
   723  009E                     	;# 
   724  009F                     	;# 
   725  010C                     	;# 
   726  010C                     	;# 
   727  010D                     	;# 
   728  010E                     	;# 
   729  010F                     	;# 
   730  010F                     	;# 
   731  0110                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  0119                     	;# 
   742  0119                     	;# 
   743  011A                     	;# 
   744  011A                     	;# 
   745  011A                     	;# 
   746  011B                     	;# 
   747  011B                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011C                     	;# 
   752  011C                     	;# 
   753  011C                     	;# 
   754  011D                     	;# 
   755  011D                     	;# 
   756  011D                     	;# 
   757  011E                     	;# 
   758  011E                     	;# 
   759  011E                     	;# 
   760  011F                     	;# 
   761  011F                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  018C                     	;# 
   766  018D                     	;# 
   767  018E                     	;# 
   768  018F                     	;# 
   769  0190                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0196                     	;# 
   773  0197                     	;# 
   774  0198                     	;# 
   775  0199                     	;# 
   776  019A                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  020C                     	;# 
   780  020D                     	;# 
   781  020E                     	;# 
   782  020E                     	;# 
   783  020F                     	;# 
   784  020F                     	;# 
   785  0210                     	;# 
   786  0210                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0216                     	;# 
   796  0216                     	;# 
   797  0217                     	;# 
   798  0217                     	;# 
   799  0218                     	;# 
   800  0219                     	;# 
   801  021A                     	;# 
   802  021A                     	;# 
   803  021B                     	;# 
   804  021B                     	;# 
   805  021C                     	;# 
   806  021C                     	;# 
   807  021D                     	;# 
   808  021D                     	;# 
   809  021E                     	;# 
   810  021F                     	;# 
   811  028C                     	;# 
   812  028C                     	;# 
   813  028D                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  028F                     	;# 
   817  0290                     	;# 
   818  0291                     	;# 
   819  0292                     	;# 
   820  0292                     	;# 
   821  0293                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0296                     	;# 
   826  0297                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  0299                     	;# 
   831  029A                     	;# 
   832  029B                     	;# 
   833  029C                     	;# 
   834  029D                     	;# 
   835  029F                     	;# 
   836  030C                     	;# 
   837  030C                     	;# 
   838  030D                     	;# 
   839  030E                     	;# 
   840  030F                     	;# 
   841  0310                     	;# 
   842  0310                     	;# 
   843  0311                     	;# 
   844  0312                     	;# 
   845  0313                     	;# 
   846  0314                     	;# 
   847  0314                     	;# 
   848  0315                     	;# 
   849  0316                     	;# 
   850  0317                     	;# 
   851  0318                     	;# 
   852  0318                     	;# 
   853  0319                     	;# 
   854  031A                     	;# 
   855  031B                     	;# 
   856  038C                     	;# 
   857  038C                     	;# 
   858  038D                     	;# 
   859  038E                     	;# 
   860  0390                     	;# 
   861  0390                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  048C                     	;# 
   865  048C                     	;# 
   866  048D                     	;# 
   867  048E                     	;# 
   868  048F                     	;# 
   869  048F                     	;# 
   870  0490                     	;# 
   871  0491                     	;# 
   872  0492                     	;# 
   873  0492                     	;# 
   874  0493                     	;# 
   875  0494                     	;# 
   876  0495                     	;# 
   877  0495                     	;# 
   878  0496                     	;# 
   879  0497                     	;# 
   880  0498                     	;# 
   881  0499                     	;# 
   882  049A                     	;# 
   883  049B                     	;# 
   884  049C                     	;# 
   885  049D                     	;# 
   886  058C                     	;# 
   887  058C                     	;# 
   888  058D                     	;# 
   889  058E                     	;# 
   890  058F                     	;# 
   891  058F                     	;# 
   892  0590                     	;# 
   893  0591                     	;# 
   894  0592                     	;# 
   895  0593                     	;# 
   896  059C                     	;# 
   897  059C                     	;# 
   898  059D                     	;# 
   899  059D                     	;# 
   900  059E                     	;# 
   901  059F                     	;# 
   902  060C                     	;# 
   903  060C                     	;# 
   904  060D                     	;# 
   905  060D                     	;# 
   906  060E                     	;# 
   907  060F                     	;# 
   908  0610                     	;# 
   909  0611                     	;# 
   910  0612                     	;# 
   911  0613                     	;# 
   912  0614                     	;# 
   913  0616                     	;# 
   914  0616                     	;# 
   915  0617                     	;# 
   916  0617                     	;# 
   917  0618                     	;# 
   918  0619                     	;# 
   919  061A                     	;# 
   920  061B                     	;# 
   921  061C                     	;# 
   922  061D                     	;# 
   923  061E                     	;# 
   924  070C                     	;# 
   925  070D                     	;# 
   926  070E                     	;# 
   927  070F                     	;# 
   928  0710                     	;# 
   929  0711                     	;# 
   930  0712                     	;# 
   931  0713                     	;# 
   932  0714                     	;# 
   933  0716                     	;# 
   934  0717                     	;# 
   935  0718                     	;# 
   936  0719                     	;# 
   937  071A                     	;# 
   938  071B                     	;# 
   939  071C                     	;# 
   940  071D                     	;# 
   941  071E                     	;# 
   942  0796                     	;# 
   943  0797                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  079C                     	;# 
   949  079D                     	;# 
   950  080C                     	;# 
   951  080D                     	;# 
   952  080E                     	;# 
   953  080F                     	;# 
   954  0810                     	;# 
   955  0811                     	;# 
   956  0812                     	;# 
   957  0813                     	;# 
   958  0814                     	;# 
   959  081A                     	;# 
   960  081A                     	;# 
   961  081B                     	;# 
   962  081C                     	;# 
   963  081C                     	;# 
   964  081D                     	;# 
   965  081E                     	;# 
   966  081F                     	;# 
   967  088C                     	;# 
   968  088D                     	;# 
   969  088E                     	;# 
   970  088F                     	;# 
   971  0890                     	;# 
   972  0891                     	;# 
   973  0892                     	;# 
   974  0893                     	;# 
   975  0895                     	;# 
   976  0896                     	;# 
   977  0897                     	;# 
   978  0898                     	;# 
   979  0899                     	;# 
   980  089A                     	;# 
   981  089B                     	;# 
   982  090C                     	;# 
   983  090E                     	;# 
   984  090F                     	;# 
   985  091F                     	;# 
   986  098F                     	;# 
   987  098F                     	;# 
   988  0990                     	;# 
   989  0991                     	;# 
   990  0992                     	;# 
   991  0993                     	;# 
   992  0994                     	;# 
   993  0995                     	;# 
   994  0996                     	;# 
   995  0997                     	;# 
   996  1E0F                     	;# 
   997  1E10                     	;# 
   998  1E11                     	;# 
   999  1E12                     	;# 
  1000  1E13                     	;# 
  1001  1E14                     	;# 
  1002  1E15                     	;# 
  1003  1E16                     	;# 
  1004  1E17                     	;# 
  1005  1E18                     	;# 
  1006  1E19                     	;# 
  1007  1E1A                     	;# 
  1008  1E1B                     	;# 
  1009  1E1C                     	;# 
  1010  1E1D                     	;# 
  1011  1E1E                     	;# 
  1012  1E1F                     	;# 
  1013  1E20                     	;# 
  1014  1E21                     	;# 
  1015  1E22                     	;# 
  1016  1E23                     	;# 
  1017  1E24                     	;# 
  1018  1E25                     	;# 
  1019  1E26                     	;# 
  1020  1E27                     	;# 
  1021  1E28                     	;# 
  1022  1E29                     	;# 
  1023  1E2A                     	;# 
  1024  1E2B                     	;# 
  1025  1E2C                     	;# 
  1026  1E2D                     	;# 
  1027  1E2E                     	;# 
  1028  1E2F                     	;# 
  1029  1E30                     	;# 
  1030  1E31                     	;# 
  1031  1E32                     	;# 
  1032  1E33                     	;# 
  1033  1E34                     	;# 
  1034  1E35                     	;# 
  1035  1E36                     	;# 
  1036  1E37                     	;# 
  1037  1E8F                     	;# 
  1038  1E90                     	;# 
  1039  1E91                     	;# 
  1040  1E92                     	;# 
  1041  1E93                     	;# 
  1042  1E94                     	;# 
  1043  1E95                     	;# 
  1044  1E96                     	;# 
  1045  1E97                     	;# 
  1046  1E9C                     	;# 
  1047  1E9D                     	;# 
  1048  1E9E                     	;# 
  1049  1EA1                     	;# 
  1050  1EA2                     	;# 
  1051  1EA3                     	;# 
  1052  1EA4                     	;# 
  1053  1EA9                     	;# 
  1054  1EAA                     	;# 
  1055  1EB1                     	;# 
  1056  1EB2                     	;# 
  1057  1EB8                     	;# 
  1058  1EB9                     	;# 
  1059  1EBA                     	;# 
  1060  1EBB                     	;# 
  1061  1EBC                     	;# 
  1062  1EBD                     	;# 
  1063  1EBE                     	;# 
  1064  1EC3                     	;# 
  1065  1EC5                     	;# 
  1066  1EC6                     	;# 
  1067  1EC7                     	;# 
  1068  1EC8                     	;# 
  1069  1EC9                     	;# 
  1070  1ECA                     	;# 
  1071  1ECB                     	;# 
  1072  1ECB                     	;# 
  1073  1ECB                     	;# 
  1074  1ECC                     	;# 
  1075  1ECC                     	;# 
  1076  1ECC                     	;# 
  1077  1F10                     	;# 
  1078  1F11                     	;# 
  1079  1F12                     	;# 
  1080  1F14                     	;# 
  1081  1F15                     	;# 
  1082  1F1C                     	;# 
  1083  1F1D                     	;# 
  1084  1F1E                     	;# 
  1085  1F1F                     	;# 
  1086  1F20                     	;# 
  1087  1F21                     	;# 
  1088  1F22                     	;# 
  1089  1F23                     	;# 
  1090  1F24                     	;# 
  1091  1F25                     	;# 
  1092  1F26                     	;# 
  1093  1F27                     	;# 
  1094  1F38                     	;# 
  1095  1F39                     	;# 
  1096  1F3A                     	;# 
  1097  1F3B                     	;# 
  1098  1F3C                     	;# 
  1099  1F3D                     	;# 
  1100  1F3E                     	;# 
  1101  1F3F                     	;# 
  1102  1F43                     	;# 
  1103  1F44                     	;# 
  1104  1F45                     	;# 
  1105  1F46                     	;# 
  1106  1F47                     	;# 
  1107  1F48                     	;# 
  1108  1F49                     	;# 
  1109  1F4A                     	;# 
  1110  1F4E                     	;# 
  1111  1F4F                     	;# 
  1112  1F50                     	;# 
  1113  1F51                     	;# 
  1114  1F52                     	;# 
  1115  1F53                     	;# 
  1116  1F54                     	;# 
  1117  1F55                     	;# 
  1118  1FE4                     	;# 
  1119  1FE5                     	;# 
  1120  1FE6                     	;# 
  1121  1FE7                     	;# 
  1122  1FE8                     	;# 
  1123  1FE8                     	;# 
  1124  1FE9                     	;# 
  1125  1FEA                     	;# 
  1126  1FEB                     	;# 
  1127  1FED                     	;# 
  1128  1FEE                     	;# 
  1129  1FEF                     	;# 
  1130  0000                     	;# 
  1131  0001                     	;# 
  1132  0002                     	;# 
  1133  0003                     	;# 
  1134  0004                     	;# 
  1135  0005                     	;# 
  1136  0006                     	;# 
  1137  0007                     	;# 
  1138  0008                     	;# 
  1139  0009                     	;# 
  1140  000A                     	;# 
  1141  000B                     	;# 
  1142  000C                     	;# 
  1143  000D                     	;# 
  1144  000E                     	;# 
  1145  0012                     	;# 
  1146  0013                     	;# 
  1147  0014                     	;# 
  1148  0018                     	;# 
  1149  0019                     	;# 
  1150  001A                     	;# 
  1151  008C                     	;# 
  1152  008C                     	;# 
  1153  008D                     	;# 
  1154  008E                     	;# 
  1155  008E                     	;# 
  1156  008F                     	;# 
  1157  0090                     	;# 
  1158  0090                     	;# 
  1159  0091                     	;# 
  1160  0092                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0094                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0096                     	;# 
  1167  0096                     	;# 
  1168  0097                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009A                     	;# 
  1172  009B                     	;# 
  1173  009B                     	;# 
  1174  009C                     	;# 
  1175  009D                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  009F                     	;# 
  1179  010C                     	;# 
  1180  010C                     	;# 
  1181  010D                     	;# 
  1182  010E                     	;# 
  1183  010F                     	;# 
  1184  010F                     	;# 
  1185  0110                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0115                     	;# 
  1191  0116                     	;# 
  1192  0117                     	;# 
  1193  0118                     	;# 
  1194  0119                     	;# 
  1195  0119                     	;# 
  1196  0119                     	;# 
  1197  011A                     	;# 
  1198  011A                     	;# 
  1199  011A                     	;# 
  1200  011B                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011C                     	;# 
  1206  011C                     	;# 
  1207  011C                     	;# 
  1208  011D                     	;# 
  1209  011D                     	;# 
  1210  011D                     	;# 
  1211  011E                     	;# 
  1212  011E                     	;# 
  1213  011E                     	;# 
  1214  011F                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  018C                     	;# 
  1220  018D                     	;# 
  1221  018E                     	;# 
  1222  018F                     	;# 
  1223  0190                     	;# 
  1224  0191                     	;# 
  1225  0192                     	;# 
  1226  0196                     	;# 
  1227  0197                     	;# 
  1228  0198                     	;# 
  1229  0199                     	;# 
  1230  019A                     	;# 
  1231  019B                     	;# 
  1232  019C                     	;# 
  1233  020C                     	;# 
  1234  020D                     	;# 
  1235  020E                     	;# 
  1236  020E                     	;# 
  1237  020F                     	;# 
  1238  020F                     	;# 
  1239  0210                     	;# 
  1240  0210                     	;# 
  1241  0211                     	;# 
  1242  0211                     	;# 
  1243  0212                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0214                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0216                     	;# 
  1250  0216                     	;# 
  1251  0217                     	;# 
  1252  0217                     	;# 
  1253  0218                     	;# 
  1254  0219                     	;# 
  1255  021A                     	;# 
  1256  021A                     	;# 
  1257  021B                     	;# 
  1258  021B                     	;# 
  1259  021C                     	;# 
  1260  021C                     	;# 
  1261  021D                     	;# 
  1262  021D                     	;# 
  1263  021E                     	;# 
  1264  021F                     	;# 
  1265  028C                     	;# 
  1266  028C                     	;# 
  1267  028D                     	;# 
  1268  028D                     	;# 
  1269  028E                     	;# 
  1270  028F                     	;# 
  1271  0290                     	;# 
  1272  0291                     	;# 
  1273  0292                     	;# 
  1274  0292                     	;# 
  1275  0293                     	;# 
  1276  0293                     	;# 
  1277  0294                     	;# 
  1278  0295                     	;# 
  1279  0296                     	;# 
  1280  0297                     	;# 
  1281  0298                     	;# 
  1282  0298                     	;# 
  1283  0299                     	;# 
  1284  0299                     	;# 
  1285  029A                     	;# 
  1286  029B                     	;# 
  1287  029C                     	;# 
  1288  029D                     	;# 
  1289  029F                     	;# 
  1290  030C                     	;# 
  1291  030C                     	;# 
  1292  030D                     	;# 
  1293  030E                     	;# 
  1294  030F                     	;# 
  1295  0310                     	;# 
  1296  0310                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0314                     	;# 
  1301  0314                     	;# 
  1302  0315                     	;# 
  1303  0316                     	;# 
  1304  0317                     	;# 
  1305  0318                     	;# 
  1306  0318                     	;# 
  1307  0319                     	;# 
  1308  031A                     	;# 
  1309  031B                     	;# 
  1310  038C                     	;# 
  1311  038C                     	;# 
  1312  038D                     	;# 
  1313  038E                     	;# 
  1314  0390                     	;# 
  1315  0390                     	;# 
  1316  0391                     	;# 
  1317  0392                     	;# 
  1318  048C                     	;# 
  1319  048C                     	;# 
  1320  048D                     	;# 
  1321  048E                     	;# 
  1322  048F                     	;# 
  1323  048F                     	;# 
  1324  0490                     	;# 
  1325  0491                     	;# 
  1326  0492                     	;# 
  1327  0492                     	;# 
  1328  0493                     	;# 
  1329  0494                     	;# 
  1330  0495                     	;# 
  1331  0495                     	;# 
  1332  0496                     	;# 
  1333  0497                     	;# 
  1334  0498                     	;# 
  1335  0499                     	;# 
  1336  049A                     	;# 
  1337  049B                     	;# 
  1338  049C                     	;# 
  1339  049D                     	;# 
  1340  058C                     	;# 
  1341  058C                     	;# 
  1342  058D                     	;# 
  1343  058E                     	;# 
  1344  058F                     	;# 
  1345  058F                     	;# 
  1346  0590                     	;# 
  1347  0591                     	;# 
  1348  0592                     	;# 
  1349  0593                     	;# 
  1350  059C                     	;# 
  1351  059C                     	;# 
  1352  059D                     	;# 
  1353  059D                     	;# 
  1354  059E                     	;# 
  1355  059F                     	;# 
  1356  060C                     	;# 
  1357  060C                     	;# 
  1358  060D                     	;# 
  1359  060D                     	;# 
  1360  060E                     	;# 
  1361  060F                     	;# 
  1362  0610                     	;# 
  1363  0611                     	;# 
  1364  0612                     	;# 
  1365  0613                     	;# 
  1366  0614                     	;# 
  1367  0616                     	;# 
  1368  0616                     	;# 
  1369  0617                     	;# 
  1370  0617                     	;# 
  1371  0618                     	;# 
  1372  0619                     	;# 
  1373  061A                     	;# 
  1374  061B                     	;# 
  1375  061C                     	;# 
  1376  061D                     	;# 
  1377  061E                     	;# 
  1378  070C                     	;# 
  1379  070D                     	;# 
  1380  070E                     	;# 
  1381  070F                     	;# 
  1382  0710                     	;# 
  1383  0711                     	;# 
  1384  0712                     	;# 
  1385  0713                     	;# 
  1386  0714                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0718                     	;# 
  1390  0719                     	;# 
  1391  071A                     	;# 
  1392  071B                     	;# 
  1393  071C                     	;# 
  1394  071D                     	;# 
  1395  071E                     	;# 
  1396  0796                     	;# 
  1397  0797                     	;# 
  1398  0798                     	;# 
  1399  0799                     	;# 
  1400  079A                     	;# 
  1401  079B                     	;# 
  1402  079C                     	;# 
  1403  079D                     	;# 
  1404  080C                     	;# 
  1405  080D                     	;# 
  1406  080E                     	;# 
  1407  080F                     	;# 
  1408  0810                     	;# 
  1409  0811                     	;# 
  1410  0812                     	;# 
  1411  0813                     	;# 
  1412  0814                     	;# 
  1413  081A                     	;# 
  1414  081A                     	;# 
  1415  081B                     	;# 
  1416  081C                     	;# 
  1417  081C                     	;# 
  1418  081D                     	;# 
  1419  081E                     	;# 
  1420  081F                     	;# 
  1421  088C                     	;# 
  1422  088D                     	;# 
  1423  088E                     	;# 
  1424  088F                     	;# 
  1425  0890                     	;# 
  1426  0891                     	;# 
  1427  0892                     	;# 
  1428  0893                     	;# 
  1429  0895                     	;# 
  1430  0896                     	;# 
  1431  0897                     	;# 
  1432  0898                     	;# 
  1433  0899                     	;# 
  1434  089A                     	;# 
  1435  089B                     	;# 
  1436  090C                     	;# 
  1437  090E                     	;# 
  1438  090F                     	;# 
  1439  091F                     	;# 
  1440  098F                     	;# 
  1441  098F                     	;# 
  1442  0990                     	;# 
  1443  0991                     	;# 
  1444  0992                     	;# 
  1445  0993                     	;# 
  1446  0994                     	;# 
  1447  0995                     	;# 
  1448  0996                     	;# 
  1449  0997                     	;# 
  1450  1E0F                     	;# 
  1451  1E10                     	;# 
  1452  1E11                     	;# 
  1453  1E12                     	;# 
  1454  1E13                     	;# 
  1455  1E14                     	;# 
  1456  1E15                     	;# 
  1457  1E16                     	;# 
  1458  1E17                     	;# 
  1459  1E18                     	;# 
  1460  1E19                     	;# 
  1461  1E1A                     	;# 
  1462  1E1B                     	;# 
  1463  1E1C                     	;# 
  1464  1E1D                     	;# 
  1465  1E1E                     	;# 
  1466  1E1F                     	;# 
  1467  1E20                     	;# 
  1468  1E21                     	;# 
  1469  1E22                     	;# 
  1470  1E23                     	;# 
  1471  1E24                     	;# 
  1472  1E25                     	;# 
  1473  1E26                     	;# 
  1474  1E27                     	;# 
  1475  1E28                     	;# 
  1476  1E29                     	;# 
  1477  1E2A                     	;# 
  1478  1E2B                     	;# 
  1479  1E2C                     	;# 
  1480  1E2D                     	;# 
  1481  1E2E                     	;# 
  1482  1E2F                     	;# 
  1483  1E30                     	;# 
  1484  1E31                     	;# 
  1485  1E32                     	;# 
  1486  1E33                     	;# 
  1487  1E34                     	;# 
  1488  1E35                     	;# 
  1489  1E36                     	;# 
  1490  1E37                     	;# 
  1491  1E8F                     	;# 
  1492  1E90                     	;# 
  1493  1E91                     	;# 
  1494  1E92                     	;# 
  1495  1E93                     	;# 
  1496  1E94                     	;# 
  1497  1E95                     	;# 
  1498  1E96                     	;# 
  1499  1E97                     	;# 
  1500  1E9C                     	;# 
  1501  1E9D                     	;# 
  1502  1E9E                     	;# 
  1503  1EA1                     	;# 
  1504  1EA2                     	;# 
  1505  1EA3                     	;# 
  1506  1EA4                     	;# 
  1507  1EA9                     	;# 
  1508  1EAA                     	;# 
  1509  1EB1                     	;# 
  1510  1EB2                     	;# 
  1511  1EB8                     	;# 
  1512  1EB9                     	;# 
  1513  1EBA                     	;# 
  1514  1EBB                     	;# 
  1515  1EBC                     	;# 
  1516  1EBD                     	;# 
  1517  1EBE                     	;# 
  1518  1EC3                     	;# 
  1519  1EC5                     	;# 
  1520  1EC6                     	;# 
  1521  1EC7                     	;# 
  1522  1EC8                     	;# 
  1523  1EC9                     	;# 
  1524  1ECA                     	;# 
  1525  1ECB                     	;# 
  1526  1ECB                     	;# 
  1527  1ECB                     	;# 
  1528  1ECC                     	;# 
  1529  1ECC                     	;# 
  1530  1ECC                     	;# 
  1531  1F10                     	;# 
  1532  1F11                     	;# 
  1533  1F12                     	;# 
  1534  1F14                     	;# 
  1535  1F15                     	;# 
  1536  1F1C                     	;# 
  1537  1F1D                     	;# 
  1538  1F1E                     	;# 
  1539  1F1F                     	;# 
  1540  1F20                     	;# 
  1541  1F21                     	;# 
  1542  1F22                     	;# 
  1543  1F23                     	;# 
  1544  1F24                     	;# 
  1545  1F25                     	;# 
  1546  1F26                     	;# 
  1547  1F27                     	;# 
  1548  1F38                     	;# 
  1549  1F39                     	;# 
  1550  1F3A                     	;# 
  1551  1F3B                     	;# 
  1552  1F3C                     	;# 
  1553  1F3D                     	;# 
  1554  1F3E                     	;# 
  1555  1F3F                     	;# 
  1556  1F43                     	;# 
  1557  1F44                     	;# 
  1558  1F45                     	;# 
  1559  1F46                     	;# 
  1560  1F47                     	;# 
  1561  1F48                     	;# 
  1562  1F49                     	;# 
  1563  1F4A                     	;# 
  1564  1F4E                     	;# 
  1565  1F4F                     	;# 
  1566  1F50                     	;# 
  1567  1F51                     	;# 
  1568  1F52                     	;# 
  1569  1F53                     	;# 
  1570  1F54                     	;# 
  1571  1F55                     	;# 
  1572  1FE4                     	;# 
  1573  1FE5                     	;# 
  1574  1FE6                     	;# 
  1575  1FE7                     	;# 
  1576  1FE8                     	;# 
  1577  1FE8                     	;# 
  1578  1FE9                     	;# 
  1579  1FEA                     	;# 
  1580  1FEB                     	;# 
  1581  1FED                     	;# 
  1582  1FEE                     	;# 
  1583  1FEF                     	;# 
  1584  0000                     	;# 
  1585  0001                     	;# 
  1586  0002                     	;# 
  1587  0003                     	;# 
  1588  0004                     	;# 
  1589  0005                     	;# 
  1590  0006                     	;# 
  1591  0007                     	;# 
  1592  0008                     	;# 
  1593  0009                     	;# 
  1594  000A                     	;# 
  1595  000B                     	;# 
  1596  000C                     	;# 
  1597  000D                     	;# 
  1598  000E                     	;# 
  1599  0012                     	;# 
  1600  0013                     	;# 
  1601  0014                     	;# 
  1602  0018                     	;# 
  1603  0019                     	;# 
  1604  001A                     	;# 
  1605  008C                     	;# 
  1606  008C                     	;# 
  1607  008D                     	;# 
  1608  008E                     	;# 
  1609  008E                     	;# 
  1610  008F                     	;# 
  1611  0090                     	;# 
  1612  0090                     	;# 
  1613  0091                     	;# 
  1614  0092                     	;# 
  1615  0092                     	;# 
  1616  0093                     	;# 
  1617  0094                     	;# 
  1618  0094                     	;# 
  1619  0095                     	;# 
  1620  0096                     	;# 
  1621  0096                     	;# 
  1622  0097                     	;# 
  1623  0098                     	;# 
  1624  0099                     	;# 
  1625  009A                     	;# 
  1626  009B                     	;# 
  1627  009B                     	;# 
  1628  009C                     	;# 
  1629  009D                     	;# 
  1630  009D                     	;# 
  1631  009E                     	;# 
  1632  009F                     	;# 
  1633  010C                     	;# 
  1634  010C                     	;# 
  1635  010D                     	;# 
  1636  010E                     	;# 
  1637  010F                     	;# 
  1638  010F                     	;# 
  1639  0110                     	;# 
  1640  0111                     	;# 
  1641  0112                     	;# 
  1642  0113                     	;# 
  1643  0114                     	;# 
  1644  0115                     	;# 
  1645  0116                     	;# 
  1646  0117                     	;# 
  1647  0118                     	;# 
  1648  0119                     	;# 
  1649  0119                     	;# 
  1650  0119                     	;# 
  1651  011A                     	;# 
  1652  011A                     	;# 
  1653  011A                     	;# 
  1654  011B                     	;# 
  1655  011B                     	;# 
  1656  011B                     	;# 
  1657  011B                     	;# 
  1658  011B                     	;# 
  1659  011C                     	;# 
  1660  011C                     	;# 
  1661  011C                     	;# 
  1662  011D                     	;# 
  1663  011D                     	;# 
  1664  011D                     	;# 
  1665  011E                     	;# 
  1666  011E                     	;# 
  1667  011E                     	;# 
  1668  011F                     	;# 
  1669  011F                     	;# 
  1670  011F                     	;# 
  1671  011F                     	;# 
  1672  011F                     	;# 
  1673  018C                     	;# 
  1674  018D                     	;# 
  1675  018E                     	;# 
  1676  018F                     	;# 
  1677  0190                     	;# 
  1678  0191                     	;# 
  1679  0192                     	;# 
  1680  0196                     	;# 
  1681  0197                     	;# 
  1682  0198                     	;# 
  1683  0199                     	;# 
  1684  019A                     	;# 
  1685  019B                     	;# 
  1686  019C                     	;# 
  1687  020C                     	;# 
  1688  020D                     	;# 
  1689  020E                     	;# 
  1690  020E                     	;# 
  1691  020F                     	;# 
  1692  020F                     	;# 
  1693  0210                     	;# 
  1694  0210                     	;# 
  1695  0211                     	;# 
  1696  0211                     	;# 
  1697  0212                     	;# 
  1698  0213                     	;# 
  1699  0214                     	;# 
  1700  0214                     	;# 
  1701  0215                     	;# 
  1702  0215                     	;# 
  1703  0216                     	;# 
  1704  0216                     	;# 
  1705  0217                     	;# 
  1706  0217                     	;# 
  1707  0218                     	;# 
  1708  0219                     	;# 
  1709  021A                     	;# 
  1710  021A                     	;# 
  1711  021B                     	;# 
  1712  021B                     	;# 
  1713  021C                     	;# 
  1714  021C                     	;# 
  1715  021D                     	;# 
  1716  021D                     	;# 
  1717  021E                     	;# 
  1718  021F                     	;# 
  1719  028C                     	;# 
  1720  028C                     	;# 
  1721  028D                     	;# 
  1722  028D                     	;# 
  1723  028E                     	;# 
  1724  028F                     	;# 
  1725  0290                     	;# 
  1726  0291                     	;# 
  1727  0292                     	;# 
  1728  0292                     	;# 
  1729  0293                     	;# 
  1730  0293                     	;# 
  1731  0294                     	;# 
  1732  0295                     	;# 
  1733  0296                     	;# 
  1734  0297                     	;# 
  1735  0298                     	;# 
  1736  0298                     	;# 
  1737  0299                     	;# 
  1738  0299                     	;# 
  1739  029A                     	;# 
  1740  029B                     	;# 
  1741  029C                     	;# 
  1742  029D                     	;# 
  1743  029F                     	;# 
  1744  030C                     	;# 
  1745  030C                     	;# 
  1746  030D                     	;# 
  1747  030E                     	;# 
  1748  030F                     	;# 
  1749  0310                     	;# 
  1750  0310                     	;# 
  1751  0311                     	;# 
  1752  0312                     	;# 
  1753  0313                     	;# 
  1754  0314                     	;# 
  1755  0314                     	;# 
  1756  0315                     	;# 
  1757  0316                     	;# 
  1758  0317                     	;# 
  1759  0318                     	;# 
  1760  0318                     	;# 
  1761  0319                     	;# 
  1762  031A                     	;# 
  1763  031B                     	;# 
  1764  038C                     	;# 
  1765  038C                     	;# 
  1766  038D                     	;# 
  1767  038E                     	;# 
  1768  0390                     	;# 
  1769  0390                     	;# 
  1770  0391                     	;# 
  1771  0392                     	;# 
  1772  048C                     	;# 
  1773  048C                     	;# 
  1774  048D                     	;# 
  1775  048E                     	;# 
  1776  048F                     	;# 
  1777  048F                     	;# 
  1778  0490                     	;# 
  1779  0491                     	;# 
  1780  0492                     	;# 
  1781  0492                     	;# 
  1782  0493                     	;# 
  1783  0494                     	;# 
  1784  0495                     	;# 
  1785  0495                     	;# 
  1786  0496                     	;# 
  1787  0497                     	;# 
  1788  0498                     	;# 
  1789  0499                     	;# 
  1790  049A                     	;# 
  1791  049B                     	;# 
  1792  049C                     	;# 
  1793  049D                     	;# 
  1794  058C                     	;# 
  1795  058C                     	;# 
  1796  058D                     	;# 
  1797  058E                     	;# 
  1798  058F                     	;# 
  1799  058F                     	;# 
  1800  0590                     	;# 
  1801  0591                     	;# 
  1802  0592                     	;# 
  1803  0593                     	;# 
  1804  059C                     	;# 
  1805  059C                     	;# 
  1806  059D                     	;# 
  1807  059D                     	;# 
  1808  059E                     	;# 
  1809  059F                     	;# 
  1810  060C                     	;# 
  1811  060C                     	;# 
  1812  060D                     	;# 
  1813  060D                     	;# 
  1814  060E                     	;# 
  1815  060F                     	;# 
  1816  0610                     	;# 
  1817  0611                     	;# 
  1818  0612                     	;# 
  1819  0613                     	;# 
  1820  0614                     	;# 
  1821  0616                     	;# 
  1822  0616                     	;# 
  1823  0617                     	;# 
  1824  0617                     	;# 
  1825  0618                     	;# 
  1826  0619                     	;# 
  1827  061A                     	;# 
  1828  061B                     	;# 
  1829  061C                     	;# 
  1830  061D                     	;# 
  1831  061E                     	;# 
  1832  070C                     	;# 
  1833  070D                     	;# 
  1834  070E                     	;# 
  1835  070F                     	;# 
  1836  0710                     	;# 
  1837  0711                     	;# 
  1838  0712                     	;# 
  1839  0713                     	;# 
  1840  0714                     	;# 
  1841  0716                     	;# 
  1842  0717                     	;# 
  1843  0718                     	;# 
  1844  0719                     	;# 
  1845  071A                     	;# 
  1846  071B                     	;# 
  1847  071C                     	;# 
  1848  071D                     	;# 
  1849  071E                     	;# 
  1850  0796                     	;# 
  1851  0797                     	;# 
  1852  0798                     	;# 
  1853  0799                     	;# 
  1854  079A                     	;# 
  1855  079B                     	;# 
  1856  079C                     	;# 
  1857  079D                     	;# 
  1858  080C                     	;# 
  1859  080D                     	;# 
  1860  080E                     	;# 
  1861  080F                     	;# 
  1862  0810                     	;# 
  1863  0811                     	;# 
  1864  0812                     	;# 
  1865  0813                     	;# 
  1866  0814                     	;# 
  1867  081A                     	;# 
  1868  081A                     	;# 
  1869  081B                     	;# 
  1870  081C                     	;# 
  1871  081C                     	;# 
  1872  081D                     	;# 
  1873  081E                     	;# 
  1874  081F                     	;# 
  1875  088C                     	;# 
  1876  088D                     	;# 
  1877  088E                     	;# 
  1878  088F                     	;# 
  1879  0890                     	;# 
  1880  0891                     	;# 
  1881  0892                     	;# 
  1882  0893                     	;# 
  1883  0895                     	;# 
  1884  0896                     	;# 
  1885  0897                     	;# 
  1886  0898                     	;# 
  1887  0899                     	;# 
  1888  089A                     	;# 
  1889  089B                     	;# 
  1890  090C                     	;# 
  1891  090E                     	;# 
  1892  090F                     	;# 
  1893  091F                     	;# 
  1894  098F                     	;# 
  1895  098F                     	;# 
  1896  0990                     	;# 
  1897  0991                     	;# 
  1898  0992                     	;# 
  1899  0993                     	;# 
  1900  0994                     	;# 
  1901  0995                     	;# 
  1902  0996                     	;# 
  1903  0997                     	;# 
  1904  1E0F                     	;# 
  1905  1E10                     	;# 
  1906  1E11                     	;# 
  1907  1E12                     	;# 
  1908  1E13                     	;# 
  1909  1E14                     	;# 
  1910  1E15                     	;# 
  1911  1E16                     	;# 
  1912  1E17                     	;# 
  1913  1E18                     	;# 
  1914  1E19                     	;# 
  1915  1E1A                     	;# 
  1916  1E1B                     	;# 
  1917  1E1C                     	;# 
  1918  1E1D                     	;# 
  1919  1E1E                     	;# 
  1920  1E1F                     	;# 
  1921  1E20                     	;# 
  1922  1E21                     	;# 
  1923  1E22                     	;# 
  1924  1E23                     	;# 
  1925  1E24                     	;# 
  1926  1E25                     	;# 
  1927  1E26                     	;# 
  1928  1E27                     	;# 
  1929  1E28                     	;# 
  1930  1E29                     	;# 
  1931  1E2A                     	;# 
  1932  1E2B                     	;# 
  1933  1E2C                     	;# 
  1934  1E2D                     	;# 
  1935  1E2E                     	;# 
  1936  1E2F                     	;# 
  1937  1E30                     	;# 
  1938  1E31                     	;# 
  1939  1E32                     	;# 
  1940  1E33                     	;# 
  1941  1E34                     	;# 
  1942  1E35                     	;# 
  1943  1E36                     	;# 
  1944  1E37                     	;# 
  1945  1E8F                     	;# 
  1946  1E90                     	;# 
  1947  1E91                     	;# 
  1948  1E92                     	;# 
  1949  1E93                     	;# 
  1950  1E94                     	;# 
  1951  1E95                     	;# 
  1952  1E96                     	;# 
  1953  1E97                     	;# 
  1954  1E9C                     	;# 
  1955  1E9D                     	;# 
  1956  1E9E                     	;# 
  1957  1EA1                     	;# 
  1958  1EA2                     	;# 
  1959  1EA3                     	;# 
  1960  1EA4                     	;# 
  1961  1EA9                     	;# 
  1962  1EAA                     	;# 
  1963  1EB1                     	;# 
  1964  1EB2                     	;# 
  1965  1EB8                     	;# 
  1966  1EB9                     	;# 
  1967  1EBA                     	;# 
  1968  1EBB                     	;# 
  1969  1EBC                     	;# 
  1970  1EBD                     	;# 
  1971  1EBE                     	;# 
  1972  1EC3                     	;# 
  1973  1EC5                     	;# 
  1974  1EC6                     	;# 
  1975  1EC7                     	;# 
  1976  1EC8                     	;# 
  1977  1EC9                     	;# 
  1978  1ECA                     	;# 
  1979  1ECB                     	;# 
  1980  1ECB                     	;# 
  1981  1ECB                     	;# 
  1982  1ECC                     	;# 
  1983  1ECC                     	;# 
  1984  1ECC                     	;# 
  1985  1F10                     	;# 
  1986  1F11                     	;# 
  1987  1F12                     	;# 
  1988  1F14                     	;# 
  1989  1F15                     	;# 
  1990  1F1C                     	;# 
  1991  1F1D                     	;# 
  1992  1F1E                     	;# 
  1993  1F1F                     	;# 
  1994  1F20                     	;# 
  1995  1F21                     	;# 
  1996  1F22                     	;# 
  1997  1F23                     	;# 
  1998  1F24                     	;# 
  1999  1F25                     	;# 
  2000  1F26                     	;# 
  2001  1F27                     	;# 
  2002  1F38                     	;# 
  2003  1F39                     	;# 
  2004  1F3A                     	;# 
  2005  1F3B                     	;# 
  2006  1F3C                     	;# 
  2007  1F3D                     	;# 
  2008  1F3E                     	;# 
  2009  1F3F                     	;# 
  2010  1F43                     	;# 
  2011  1F44                     	;# 
  2012  1F45                     	;# 
  2013  1F46                     	;# 
  2014  1F47                     	;# 
  2015  1F48                     	;# 
  2016  1F49                     	;# 
  2017  1F4A                     	;# 
  2018  1F4E                     	;# 
  2019  1F4F                     	;# 
  2020  1F50                     	;# 
  2021  1F51                     	;# 
  2022  1F52                     	;# 
  2023  1F53                     	;# 
  2024  1F54                     	;# 
  2025  1F55                     	;# 
  2026  1FE4                     	;# 
  2027  1FE5                     	;# 
  2028  1FE6                     	;# 
  2029  1FE7                     	;# 
  2030  1FE8                     	;# 
  2031  1FE8                     	;# 
  2032  1FE9                     	;# 
  2033  1FEA                     	;# 
  2034  1FEB                     	;# 
  2035  1FED                     	;# 
  2036  1FEE                     	;# 
  2037  1FEF                     	;# 
  2038  0000                     	;# 
  2039  0001                     	;# 
  2040  0002                     	;# 
  2041  0003                     	;# 
  2042  0004                     	;# 
  2043  0005                     	;# 
  2044  0006                     	;# 
  2045  0007                     	;# 
  2046  0008                     	;# 
  2047  0009                     	;# 
  2048  000A                     	;# 
  2049  000B                     	;# 
  2050  000C                     	;# 
  2051  000D                     	;# 
  2052  000E                     	;# 
  2053  0012                     	;# 
  2054  0013                     	;# 
  2055  0014                     	;# 
  2056  0018                     	;# 
  2057  0019                     	;# 
  2058  001A                     	;# 
  2059  008C                     	;# 
  2060  008C                     	;# 
  2061  008D                     	;# 
  2062  008E                     	;# 
  2063  008E                     	;# 
  2064  008F                     	;# 
  2065  0090                     	;# 
  2066  0090                     	;# 
  2067  0091                     	;# 
  2068  0092                     	;# 
  2069  0092                     	;# 
  2070  0093                     	;# 
  2071  0094                     	;# 
  2072  0094                     	;# 
  2073  0095                     	;# 
  2074  0096                     	;# 
  2075  0096                     	;# 
  2076  0097                     	;# 
  2077  0098                     	;# 
  2078  0099                     	;# 
  2079  009A                     	;# 
  2080  009B                     	;# 
  2081  009B                     	;# 
  2082  009C                     	;# 
  2083  009D                     	;# 
  2084  009D                     	;# 
  2085  009E                     	;# 
  2086  009F                     	;# 
  2087  010C                     	;# 
  2088  010C                     	;# 
  2089  010D                     	;# 
  2090  010E                     	;# 
  2091  010F                     	;# 
  2092  010F                     	;# 
  2093  0110                     	;# 
  2094  0111                     	;# 
  2095  0112                     	;# 
  2096  0113                     	;# 
  2097  0114                     	;# 
  2098  0115                     	;# 
  2099  0116                     	;# 
  2100  0117                     	;# 
  2101  0118                     	;# 
  2102  0119                     	;# 
  2103  0119                     	;# 
  2104  0119                     	;# 
  2105  011A                     	;# 
  2106  011A                     	;# 
  2107  011A                     	;# 
  2108  011B                     	;# 
  2109  011B                     	;# 
  2110  011B                     	;# 
  2111  011B                     	;# 
  2112  011B                     	;# 
  2113  011C                     	;# 
  2114  011C                     	;# 
  2115  011C                     	;# 
  2116  011D                     	;# 
  2117  011D                     	;# 
  2118  011D                     	;# 
  2119  011E                     	;# 
  2120  011E                     	;# 
  2121  011E                     	;# 
  2122  011F                     	;# 
  2123  011F                     	;# 
  2124  011F                     	;# 
  2125  011F                     	;# 
  2126  011F                     	;# 
  2127  018C                     	;# 
  2128  018D                     	;# 
  2129  018E                     	;# 
  2130  018F                     	;# 
  2131  0190                     	;# 
  2132  0191                     	;# 
  2133  0192                     	;# 
  2134  0196                     	;# 
  2135  0197                     	;# 
  2136  0198                     	;# 
  2137  0199                     	;# 
  2138  019A                     	;# 
  2139  019B                     	;# 
  2140  019C                     	;# 
  2141  020C                     	;# 
  2142  020D                     	;# 
  2143  020E                     	;# 
  2144  020E                     	;# 
  2145  020F                     	;# 
  2146  020F                     	;# 
  2147  0210                     	;# 
  2148  0210                     	;# 
  2149  0211                     	;# 
  2150  0211                     	;# 
  2151  0212                     	;# 
  2152  0213                     	;# 
  2153  0214                     	;# 
  2154  0214                     	;# 
  2155  0215                     	;# 
  2156  0215                     	;# 
  2157  0216                     	;# 
  2158  0216                     	;# 
  2159  0217                     	;# 
  2160  0217                     	;# 
  2161  0218                     	;# 
  2162  0219                     	;# 
  2163  021A                     	;# 
  2164  021A                     	;# 
  2165  021B                     	;# 
  2166  021B                     	;# 
  2167  021C                     	;# 
  2168  021C                     	;# 
  2169  021D                     	;# 
  2170  021D                     	;# 
  2171  021E                     	;# 
  2172  021F                     	;# 
  2173  028C                     	;# 
  2174  028C                     	;# 
  2175  028D                     	;# 
  2176  028D                     	;# 
  2177  028E                     	;# 
  2178  028F                     	;# 
  2179  0290                     	;# 
  2180  0291                     	;# 
  2181  0292                     	;# 
  2182  0292                     	;# 
  2183  0293                     	;# 
  2184  0293                     	;# 
  2185  0294                     	;# 
  2186  0295                     	;# 
  2187  0296                     	;# 
  2188  0297                     	;# 
  2189  0298                     	;# 
  2190  0298                     	;# 
  2191  0299                     	;# 
  2192  0299                     	;# 
  2193  029A                     	;# 
  2194  029B                     	;# 
  2195  029C                     	;# 
  2196  029D                     	;# 
  2197  029F                     	;# 
  2198  030C                     	;# 
  2199  030C                     	;# 
  2200  030D                     	;# 
  2201  030E                     	;# 
  2202  030F                     	;# 
  2203  0310                     	;# 
  2204  0310                     	;# 
  2205  0311                     	;# 
  2206  0312                     	;# 
  2207  0313                     	;# 
  2208  0314                     	;# 
  2209  0314                     	;# 
  2210  0315                     	;# 
  2211  0316                     	;# 
  2212  0317                     	;# 
  2213  0318                     	;# 
  2214  0318                     	;# 
  2215  0319                     	;# 
  2216  031A                     	;# 
  2217  031B                     	;# 
  2218  038C                     	;# 
  2219  038C                     	;# 
  2220  038D                     	;# 
  2221  038E                     	;# 
  2222  0390                     	;# 
  2223  0390                     	;# 
  2224  0391                     	;# 
  2225  0392                     	;# 
  2226  048C                     	;# 
  2227  048C                     	;# 
  2228  048D                     	;# 
  2229  048E                     	;# 
  2230  048F                     	;# 
  2231  048F                     	;# 
  2232  0490                     	;# 
  2233  0491                     	;# 
  2234  0492                     	;# 
  2235  0492                     	;# 
  2236  0493                     	;# 
  2237  0494                     	;# 
  2238  0495                     	;# 
  2239  0495                     	;# 
  2240  0496                     	;# 
  2241  0497                     	;# 
  2242  0498                     	;# 
  2243  0499                     	;# 
  2244  049A                     	;# 
  2245  049B                     	;# 
  2246  049C                     	;# 
  2247  049D                     	;# 
  2248  058C                     	;# 
  2249  058C                     	;# 
  2250  058D                     	;# 
  2251  058E                     	;# 
  2252  058F                     	;# 
  2253  058F                     	;# 
  2254  0590                     	;# 
  2255  0591                     	;# 
  2256  0592                     	;# 
  2257  0593                     	;# 
  2258  059C                     	;# 
  2259  059C                     	;# 
  2260  059D                     	;# 
  2261  059D                     	;# 
  2262  059E                     	;# 
  2263  059F                     	;# 
  2264  060C                     	;# 
  2265  060C                     	;# 
  2266  060D                     	;# 
  2267  060D                     	;# 
  2268  060E                     	;# 
  2269  060F                     	;# 
  2270  0610                     	;# 
  2271  0611                     	;# 
  2272  0612                     	;# 
  2273  0613                     	;# 
  2274  0614                     	;# 
  2275  0616                     	;# 
  2276  0616                     	;# 
  2277  0617                     	;# 
  2278  0617                     	;# 
  2279  0618                     	;# 
  2280  0619                     	;# 
  2281  061A                     	;# 
  2282  061B                     	;# 
  2283  061C                     	;# 
  2284  061D                     	;# 
  2285  061E                     	;# 
  2286  070C                     	;# 
  2287  070D                     	;# 
  2288  070E                     	;# 
  2289  070F                     	;# 
  2290  0710                     	;# 
  2291  0711                     	;# 
  2292  0712                     	;# 
  2293  0713                     	;# 
  2294  0714                     	;# 
  2295  0716                     	;# 
  2296  0717                     	;# 
  2297  0718                     	;# 
  2298  0719                     	;# 
  2299  071A                     	;# 
  2300  071B                     	;# 
  2301  071C                     	;# 
  2302  071D                     	;# 
  2303  071E                     	;# 
  2304  0796                     	;# 
  2305  0797                     	;# 
  2306  0798                     	;# 
  2307  0799                     	;# 
  2308  079A                     	;# 
  2309  079B                     	;# 
  2310  079C                     	;# 
  2311  079D                     	;# 
  2312  080C                     	;# 
  2313  080D                     	;# 
  2314  080E                     	;# 
  2315  080F                     	;# 
  2316  0810                     	;# 
  2317  0811                     	;# 
  2318  0812                     	;# 
  2319  0813                     	;# 
  2320  0814                     	;# 
  2321  081A                     	;# 
  2322  081A                     	;# 
  2323  081B                     	;# 
  2324  081C                     	;# 
  2325  081C                     	;# 
  2326  081D                     	;# 
  2327  081E                     	;# 
  2328  081F                     	;# 
  2329  088C                     	;# 
  2330  088D                     	;# 
  2331  088E                     	;# 
  2332  088F                     	;# 
  2333  0890                     	;# 
  2334  0891                     	;# 
  2335  0892                     	;# 
  2336  0893                     	;# 
  2337  0895                     	;# 
  2338  0896                     	;# 
  2339  0897                     	;# 
  2340  0898                     	;# 
  2341  0899                     	;# 
  2342  089A                     	;# 
  2343  089B                     	;# 
  2344  090C                     	;# 
  2345  090E                     	;# 
  2346  090F                     	;# 
  2347  091F                     	;# 
  2348  098F                     	;# 
  2349  098F                     	;# 
  2350  0990                     	;# 
  2351  0991                     	;# 
  2352  0992                     	;# 
  2353  0993                     	;# 
  2354  0994                     	;# 
  2355  0995                     	;# 
  2356  0996                     	;# 
  2357  0997                     	;# 
  2358  1E0F                     	;# 
  2359  1E10                     	;# 
  2360  1E11                     	;# 
  2361  1E12                     	;# 
  2362  1E13                     	;# 
  2363  1E14                     	;# 
  2364  1E15                     	;# 
  2365  1E16                     	;# 
  2366  1E17                     	;# 
  2367  1E18                     	;# 
  2368  1E19                     	;# 
  2369  1E1A                     	;# 
  2370  1E1B                     	;# 
  2371  1E1C                     	;# 
  2372  1E1D                     	;# 
  2373  1E1E                     	;# 
  2374  1E1F                     	;# 
  2375  1E20                     	;# 
  2376  1E21                     	;# 
  2377  1E22                     	;# 
  2378  1E23                     	;# 
  2379  1E24                     	;# 
  2380  1E25                     	;# 
  2381  1E26                     	;# 
  2382  1E27                     	;# 
  2383  1E28                     	;# 
  2384  1E29                     	;# 
  2385  1E2A                     	;# 
  2386  1E2B                     	;# 
  2387  1E2C                     	;# 
  2388  1E2D                     	;# 
  2389  1E2E                     	;# 
  2390  1E2F                     	;# 
  2391  1E30                     	;# 
  2392  1E31                     	;# 
  2393  1E32                     	;# 
  2394  1E33                     	;# 
  2395  1E34                     	;# 
  2396  1E35                     	;# 
  2397  1E36                     	;# 
  2398  1E37                     	;# 
  2399  1E8F                     	;# 
  2400  1E90                     	;# 
  2401  1E91                     	;# 
  2402  1E92                     	;# 
  2403  1E93                     	;# 
  2404  1E94                     	;# 
  2405  1E95                     	;# 
  2406  1E96                     	;# 
  2407  1E97                     	;# 
  2408  1E9C                     	;# 
  2409  1E9D                     	;# 
  2410  1E9E                     	;# 
  2411  1EA1                     	;# 
  2412  1EA2                     	;# 
  2413  1EA3                     	;# 
  2414  1EA4                     	;# 
  2415  1EA9                     	;# 
  2416  1EAA                     	;# 
  2417  1EB1                     	;# 
  2418  1EB2                     	;# 
  2419  1EB8                     	;# 
  2420  1EB9                     	;# 
  2421  1EBA                     	;# 
  2422  1EBB                     	;# 
  2423  1EBC                     	;# 
  2424  1EBD                     	;# 
  2425  1EBE                     	;# 
  2426  1EC3                     	;# 
  2427  1EC5                     	;# 
  2428  1EC6                     	;# 
  2429  1EC7                     	;# 
  2430  1EC8                     	;# 
  2431  1EC9                     	;# 
  2432  1ECA                     	;# 
  2433  1ECB                     	;# 
  2434  1ECB                     	;# 
  2435  1ECB                     	;# 
  2436  1ECC                     	;# 
  2437  1ECC                     	;# 
  2438  1ECC                     	;# 
  2439  1F10                     	;# 
  2440  1F11                     	;# 
  2441  1F12                     	;# 
  2442  1F14                     	;# 
  2443  1F15                     	;# 
  2444  1F1C                     	;# 
  2445  1F1D                     	;# 
  2446  1F1E                     	;# 
  2447  1F1F                     	;# 
  2448  1F20                     	;# 
  2449  1F21                     	;# 
  2450  1F22                     	;# 
  2451  1F23                     	;# 
  2452  1F24                     	;# 
  2453  1F25                     	;# 
  2454  1F26                     	;# 
  2455  1F27                     	;# 
  2456  1F38                     	;# 
  2457  1F39                     	;# 
  2458  1F3A                     	;# 
  2459  1F3B                     	;# 
  2460  1F3C                     	;# 
  2461  1F3D                     	;# 
  2462  1F3E                     	;# 
  2463  1F3F                     	;# 
  2464  1F43                     	;# 
  2465  1F44                     	;# 
  2466  1F45                     	;# 
  2467  1F46                     	;# 
  2468  1F47                     	;# 
  2469  1F48                     	;# 
  2470  1F49                     	;# 
  2471  1F4A                     	;# 
  2472  1F4E                     	;# 
  2473  1F4F                     	;# 
  2474  1F50                     	;# 
  2475  1F51                     	;# 
  2476  1F52                     	;# 
  2477  1F53                     	;# 
  2478  1F54                     	;# 
  2479  1F55                     	;# 
  2480  1FE4                     	;# 
  2481  1FE5                     	;# 
  2482  1FE6                     	;# 
  2483  1FE7                     	;# 
  2484  1FE8                     	;# 
  2485  1FE8                     	;# 
  2486  1FE9                     	;# 
  2487  1FEA                     	;# 
  2488  1FEB                     	;# 
  2489  1FED                     	;# 
  2490  1FEE                     	;# 
  2491  1FEF                     	;# 
  2492  0000                     	;# 
  2493  0001                     	;# 
  2494  0002                     	;# 
  2495  0003                     	;# 
  2496  0004                     	;# 
  2497  0005                     	;# 
  2498  0006                     	;# 
  2499  0007                     	;# 
  2500  0008                     	;# 
  2501  0009                     	;# 
  2502  000A                     	;# 
  2503  000B                     	;# 
  2504  000C                     	;# 
  2505  000D                     	;# 
  2506  000E                     	;# 
  2507  0012                     	;# 
  2508  0013                     	;# 
  2509  0014                     	;# 
  2510  0018                     	;# 
  2511  0019                     	;# 
  2512  001A                     	;# 
  2513  008C                     	;# 
  2514  008C                     	;# 
  2515  008D                     	;# 
  2516  008E                     	;# 
  2517  008E                     	;# 
  2518  008F                     	;# 
  2519  0090                     	;# 
  2520  0090                     	;# 
  2521  0091                     	;# 
  2522  0092                     	;# 
  2523  0092                     	;# 
  2524  0093                     	;# 
  2525  0094                     	;# 
  2526  0094                     	;# 
  2527  0095                     	;# 
  2528  0096                     	;# 
  2529  0096                     	;# 
  2530  0097                     	;# 
  2531  0098                     	;# 
  2532  0099                     	;# 
  2533  009A                     	;# 
  2534  009B                     	;# 
  2535  009B                     	;# 
  2536  009C                     	;# 
  2537  009D                     	;# 
  2538  009D                     	;# 
  2539  009E                     	;# 
  2540  009F                     	;# 
  2541  010C                     	;# 
  2542  010C                     	;# 
  2543  010D                     	;# 
  2544  010E                     	;# 
  2545  010F                     	;# 
  2546  010F                     	;# 
  2547  0110                     	;# 
  2548  0111                     	;# 
  2549  0112                     	;# 
  2550  0113                     	;# 
  2551  0114                     	;# 
  2552  0115                     	;# 
  2553  0116                     	;# 
  2554  0117                     	;# 
  2555  0118                     	;# 
  2556  0119                     	;# 
  2557  0119                     	;# 
  2558  0119                     	;# 
  2559  011A                     	;# 
  2560  011A                     	;# 
  2561  011A                     	;# 
  2562  011B                     	;# 
  2563  011B                     	;# 
  2564  011B                     	;# 
  2565  011B                     	;# 
  2566  011B                     	;# 
  2567  011C                     	;# 
  2568  011C                     	;# 
  2569  011C                     	;# 
  2570  011D                     	;# 
  2571  011D                     	;# 
  2572  011D                     	;# 
  2573  011E                     	;# 
  2574  011E                     	;# 
  2575  011E                     	;# 
  2576  011F                     	;# 
  2577  011F                     	;# 
  2578  011F                     	;# 
  2579  011F                     	;# 
  2580  011F                     	;# 
  2581  018C                     	;# 
  2582  018D                     	;# 
  2583  018E                     	;# 
  2584  018F                     	;# 
  2585  0190                     	;# 
  2586  0191                     	;# 
  2587  0192                     	;# 
  2588  0196                     	;# 
  2589  0197                     	;# 
  2590  0198                     	;# 
  2591  0199                     	;# 
  2592  019A                     	;# 
  2593  019B                     	;# 
  2594  019C                     	;# 
  2595  020C                     	;# 
  2596  020D                     	;# 
  2597  020E                     	;# 
  2598  020E                     	;# 
  2599  020F                     	;# 
  2600  020F                     	;# 
  2601  0210                     	;# 
  2602  0210                     	;# 
  2603  0211                     	;# 
  2604  0211                     	;# 
  2605  0212                     	;# 
  2606  0213                     	;# 
  2607  0214                     	;# 
  2608  0214                     	;# 
  2609  0215                     	;# 
  2610  0215                     	;# 
  2611  0216                     	;# 
  2612  0216                     	;# 
  2613  0217                     	;# 
  2614  0217                     	;# 
  2615  0218                     	;# 
  2616  0219                     	;# 
  2617  021A                     	;# 
  2618  021A                     	;# 
  2619  021B                     	;# 
  2620  021B                     	;# 
  2621  021C                     	;# 
  2622  021C                     	;# 
  2623  021D                     	;# 
  2624  021D                     	;# 
  2625  021E                     	;# 
  2626  021F                     	;# 
  2627  028C                     	;# 
  2628  028C                     	;# 
  2629  028D                     	;# 
  2630  028D                     	;# 
  2631  028E                     	;# 
  2632  028F                     	;# 
  2633  0290                     	;# 
  2634  0291                     	;# 
  2635  0292                     	;# 
  2636  0292                     	;# 
  2637  0293                     	;# 
  2638  0293                     	;# 
  2639  0294                     	;# 
  2640  0295                     	;# 
  2641  0296                     	;# 
  2642  0297                     	;# 
  2643  0298                     	;# 
  2644  0298                     	;# 
  2645  0299                     	;# 
  2646  0299                     	;# 
  2647  029A                     	;# 
  2648  029B                     	;# 
  2649  029C                     	;# 
  2650  029D                     	;# 
  2651  029F                     	;# 
  2652  030C                     	;# 
  2653  030C                     	;# 
  2654  030D                     	;# 
  2655  030E                     	;# 
  2656  030F                     	;# 
  2657  0310                     	;# 
  2658  0310                     	;# 
  2659  0311                     	;# 
  2660  0312                     	;# 
  2661  0313                     	;# 
  2662  0314                     	;# 
  2663  0314                     	;# 
  2664  0315                     	;# 
  2665  0316                     	;# 
  2666  0317                     	;# 
  2667  0318                     	;# 
  2668  0318                     	;# 
  2669  0319                     	;# 
  2670  031A                     	;# 
  2671  031B                     	;# 
  2672  038C                     	;# 
  2673  038C                     	;# 
  2674  038D                     	;# 
  2675  038E                     	;# 
  2676  0390                     	;# 
  2677  0390                     	;# 
  2678  0391                     	;# 
  2679  0392                     	;# 
  2680  048C                     	;# 
  2681  048C                     	;# 
  2682  048D                     	;# 
  2683  048E                     	;# 
  2684  048F                     	;# 
  2685  048F                     	;# 
  2686  0490                     	;# 
  2687  0491                     	;# 
  2688  0492                     	;# 
  2689  0492                     	;# 
  2690  0493                     	;# 
  2691  0494                     	;# 
  2692  0495                     	;# 
  2693  0495                     	;# 
  2694  0496                     	;# 
  2695  0497                     	;# 
  2696  0498                     	;# 
  2697  0499                     	;# 
  2698  049A                     	;# 
  2699  049B                     	;# 
  2700  049C                     	;# 
  2701  049D                     	;# 
  2702  058C                     	;# 
  2703  058C                     	;# 
  2704  058D                     	;# 
  2705  058E                     	;# 
  2706  058F                     	;# 
  2707  058F                     	;# 
  2708  0590                     	;# 
  2709  0591                     	;# 
  2710  0592                     	;# 
  2711  0593                     	;# 
  2712  059C                     	;# 
  2713  059C                     	;# 
  2714  059D                     	;# 
  2715  059D                     	;# 
  2716  059E                     	;# 
  2717  059F                     	;# 
  2718  060C                     	;# 
  2719  060C                     	;# 
  2720  060D                     	;# 
  2721  060D                     	;# 
  2722  060E                     	;# 
  2723  060F                     	;# 
  2724  0610                     	;# 
  2725  0611                     	;# 
  2726  0612                     	;# 
  2727  0613                     	;# 
  2728  0614                     	;# 
  2729  0616                     	;# 
  2730  0616                     	;# 
  2731  0617                     	;# 
  2732  0617                     	;# 
  2733  0618                     	;# 
  2734  0619                     	;# 
  2735  061A                     	;# 
  2736  061B                     	;# 
  2737  061C                     	;# 
  2738  061D                     	;# 
  2739  061E                     	;# 
  2740  070C                     	;# 
  2741  070D                     	;# 
  2742  070E                     	;# 
  2743  070F                     	;# 
  2744  0710                     	;# 
  2745  0711                     	;# 
  2746  0712                     	;# 
  2747  0713                     	;# 
  2748  0714                     	;# 
  2749  0716                     	;# 
  2750  0717                     	;# 
  2751  0718                     	;# 
  2752  0719                     	;# 
  2753  071A                     	;# 
  2754  071B                     	;# 
  2755  071C                     	;# 
  2756  071D                     	;# 
  2757  071E                     	;# 
  2758  0796                     	;# 
  2759  0797                     	;# 
  2760  0798                     	;# 
  2761  0799                     	;# 
  2762  079A                     	;# 
  2763  079B                     	;# 
  2764  079C                     	;# 
  2765  079D                     	;# 
  2766  080C                     	;# 
  2767  080D                     	;# 
  2768  080E                     	;# 
  2769  080F                     	;# 
  2770  0810                     	;# 
  2771  0811                     	;# 
  2772  0812                     	;# 
  2773  0813                     	;# 
  2774  0814                     	;# 
  2775  081A                     	;# 
  2776  081A                     	;# 
  2777  081B                     	;# 
  2778  081C                     	;# 
  2779  081C                     	;# 
  2780  081D                     	;# 
  2781  081E                     	;# 
  2782  081F                     	;# 
  2783  088C                     	;# 
  2784  088D                     	;# 
  2785  088E                     	;# 
  2786  088F                     	;# 
  2787  0890                     	;# 
  2788  0891                     	;# 
  2789  0892                     	;# 
  2790  0893                     	;# 
  2791  0895                     	;# 
  2792  0896                     	;# 
  2793  0897                     	;# 
  2794  0898                     	;# 
  2795  0899                     	;# 
  2796  089A                     	;# 
  2797  089B                     	;# 
  2798  090C                     	;# 
  2799  090E                     	;# 
  2800  090F                     	;# 
  2801  091F                     	;# 
  2802  098F                     	;# 
  2803  098F                     	;# 
  2804  0990                     	;# 
  2805  0991                     	;# 
  2806  0992                     	;# 
  2807  0993                     	;# 
  2808  0994                     	;# 
  2809  0995                     	;# 
  2810  0996                     	;# 
  2811  0997                     	;# 
  2812  1E0F                     	;# 
  2813  1E10                     	;# 
  2814  1E11                     	;# 
  2815  1E12                     	;# 
  2816  1E13                     	;# 
  2817  1E14                     	;# 
  2818  1E15                     	;# 
  2819  1E16                     	;# 
  2820  1E17                     	;# 
  2821  1E18                     	;# 
  2822  1E19                     	;# 
  2823  1E1A                     	;# 
  2824  1E1B                     	;# 
  2825  1E1C                     	;# 
  2826  1E1D                     	;# 
  2827  1E1E                     	;# 
  2828  1E1F                     	;# 
  2829  1E20                     	;# 
  2830  1E21                     	;# 
  2831  1E22                     	;# 
  2832  1E23                     	;# 
  2833  1E24                     	;# 
  2834  1E25                     	;# 
  2835  1E26                     	;# 
  2836  1E27                     	;# 
  2837  1E28                     	;# 
  2838  1E29                     	;# 
  2839  1E2A                     	;# 
  2840  1E2B                     	;# 
  2841  1E2C                     	;# 
  2842  1E2D                     	;# 
  2843  1E2E                     	;# 
  2844  1E2F                     	;# 
  2845  1E30                     	;# 
  2846  1E31                     	;# 
  2847  1E32                     	;# 
  2848  1E33                     	;# 
  2849  1E34                     	;# 
  2850  1E35                     	;# 
  2851  1E36                     	;# 
  2852  1E37                     	;# 
  2853  1E8F                     	;# 
  2854  1E90                     	;# 
  2855  1E91                     	;# 
  2856  1E92                     	;# 
  2857  1E93                     	;# 
  2858  1E94                     	;# 
  2859  1E95                     	;# 
  2860  1E96                     	;# 
  2861  1E97                     	;# 
  2862  1E9C                     	;# 
  2863  1E9D                     	;# 
  2864  1E9E                     	;# 
  2865  1EA1                     	;# 
  2866  1EA2                     	;# 
  2867  1EA3                     	;# 
  2868  1EA4                     	;# 
  2869  1EA9                     	;# 
  2870  1EAA                     	;# 
  2871  1EB1                     	;# 
  2872  1EB2                     	;# 
  2873  1EB8                     	;# 
  2874  1EB9                     	;# 
  2875  1EBA                     	;# 
  2876  1EBB                     	;# 
  2877  1EBC                     	;# 
  2878  1EBD                     	;# 
  2879  1EBE                     	;# 
  2880  1EC3                     	;# 
  2881  1EC5                     	;# 
  2882  1EC6                     	;# 
  2883  1EC7                     	;# 
  2884  1EC8                     	;# 
  2885  1EC9                     	;# 
  2886  1ECA                     	;# 
  2887  1ECB                     	;# 
  2888  1ECB                     	;# 
  2889  1ECB                     	;# 
  2890  1ECC                     	;# 
  2891  1ECC                     	;# 
  2892  1ECC                     	;# 
  2893  1F10                     	;# 
  2894  1F11                     	;# 
  2895  1F12                     	;# 
  2896  1F14                     	;# 
  2897  1F15                     	;# 
  2898  1F1C                     	;# 
  2899  1F1D                     	;# 
  2900  1F1E                     	;# 
  2901  1F1F                     	;# 
  2902  1F20                     	;# 
  2903  1F21                     	;# 
  2904  1F22                     	;# 
  2905  1F23                     	;# 
  2906  1F24                     	;# 
  2907  1F25                     	;# 
  2908  1F26                     	;# 
  2909  1F27                     	;# 
  2910  1F38                     	;# 
  2911  1F39                     	;# 
  2912  1F3A                     	;# 
  2913  1F3B                     	;# 
  2914  1F3C                     	;# 
  2915  1F3D                     	;# 
  2916  1F3E                     	;# 
  2917  1F3F                     	;# 
  2918  1F43                     	;# 
  2919  1F44                     	;# 
  2920  1F45                     	;# 
  2921  1F46                     	;# 
  2922  1F47                     	;# 
  2923  1F48                     	;# 
  2924  1F49                     	;# 
  2925  1F4A                     	;# 
  2926  1F4E                     	;# 
  2927  1F4F                     	;# 
  2928  1F50                     	;# 
  2929  1F51                     	;# 
  2930  1F52                     	;# 
  2931  1F53                     	;# 
  2932  1F54                     	;# 
  2933  1F55                     	;# 
  2934  1FE4                     	;# 
  2935  1FE5                     	;# 
  2936  1FE6                     	;# 
  2937  1FE7                     	;# 
  2938  1FE8                     	;# 
  2939  1FE8                     	;# 
  2940  1FE9                     	;# 
  2941  1FEA                     	;# 
  2942  1FEB                     	;# 
  2943  1FED                     	;# 
  2944  1FEE                     	;# 
  2945  1FEF                     	;# 
  2946  0000                     	;# 
  2947  0001                     	;# 
  2948  0002                     	;# 
  2949  0003                     	;# 
  2950  0004                     	;# 
  2951  0005                     	;# 
  2952  0006                     	;# 
  2953  0007                     	;# 
  2954  0008                     	;# 
  2955  0009                     	;# 
  2956  000A                     	;# 
  2957  000B                     	;# 
  2958  000C                     	;# 
  2959  000D                     	;# 
  2960  000E                     	;# 
  2961  0012                     	;# 
  2962  0013                     	;# 
  2963  0014                     	;# 
  2964  0018                     	;# 
  2965  0019                     	;# 
  2966  001A                     	;# 
  2967  008C                     	;# 
  2968  008C                     	;# 
  2969  008D                     	;# 
  2970  008E                     	;# 
  2971  008E                     	;# 
  2972  008F                     	;# 
  2973  0090                     	;# 
  2974  0090                     	;# 
  2975  0091                     	;# 
  2976  0092                     	;# 
  2977  0092                     	;# 
  2978  0093                     	;# 
  2979  0094                     	;# 
  2980  0094                     	;# 
  2981  0095                     	;# 
  2982  0096                     	;# 
  2983  0096                     	;# 
  2984  0097                     	;# 
  2985  0098                     	;# 
  2986  0099                     	;# 
  2987  009A                     	;# 
  2988  009B                     	;# 
  2989  009B                     	;# 
  2990  009C                     	;# 
  2991  009D                     	;# 
  2992  009D                     	;# 
  2993  009E                     	;# 
  2994  009F                     	;# 
  2995  010C                     	;# 
  2996  010C                     	;# 
  2997  010D                     	;# 
  2998  010E                     	;# 
  2999  010F                     	;# 
  3000  010F                     	;# 
  3001  0110                     	;# 
  3002  0111                     	;# 
  3003  0112                     	;# 
  3004  0113                     	;# 
  3005  0114                     	;# 
  3006  0115                     	;# 
  3007  0116                     	;# 
  3008  0117                     	;# 
  3009  0118                     	;# 
  3010  0119                     	;# 
  3011  0119                     	;# 
  3012  0119                     	;# 
  3013  011A                     	;# 
  3014  011A                     	;# 
  3015  011A                     	;# 
  3016  011B                     	;# 
  3017  011B                     	;# 
  3018  011B                     	;# 
  3019  011B                     	;# 
  3020  011B                     	;# 
  3021  011C                     	;# 
  3022  011C                     	;# 
  3023  011C                     	;# 
  3024  011D                     	;# 
  3025  011D                     	;# 
  3026  011D                     	;# 
  3027  011E                     	;# 
  3028  011E                     	;# 
  3029  011E                     	;# 
  3030  011F                     	;# 
  3031  011F                     	;# 
  3032  011F                     	;# 
  3033  011F                     	;# 
  3034  011F                     	;# 
  3035  018C                     	;# 
  3036  018D                     	;# 
  3037  018E                     	;# 
  3038  018F                     	;# 
  3039  0190                     	;# 
  3040  0191                     	;# 
  3041  0192                     	;# 
  3042  0196                     	;# 
  3043  0197                     	;# 
  3044  0198                     	;# 
  3045  0199                     	;# 
  3046  019A                     	;# 
  3047  019B                     	;# 
  3048  019C                     	;# 
  3049  020C                     	;# 
  3050  020D                     	;# 
  3051  020E                     	;# 
  3052  020E                     	;# 
  3053  020F                     	;# 
  3054  020F                     	;# 
  3055  0210                     	;# 
  3056  0210                     	;# 
  3057  0211                     	;# 
  3058  0211                     	;# 
  3059  0212                     	;# 
  3060  0213                     	;# 
  3061  0214                     	;# 
  3062  0214                     	;# 
  3063  0215                     	;# 
  3064  0215                     	;# 
  3065  0216                     	;# 
  3066  0216                     	;# 
  3067  0217                     	;# 
  3068  0217                     	;# 
  3069  0218                     	;# 
  3070  0219                     	;# 
  3071  021A                     	;# 
  3072  021A                     	;# 
  3073  021B                     	;# 
  3074  021B                     	;# 
  3075  021C                     	;# 
  3076  021C                     	;# 
  3077  021D                     	;# 
  3078  021D                     	;# 
  3079  021E                     	;# 
  3080  021F                     	;# 
  3081  028C                     	;# 
  3082  028C                     	;# 
  3083  028D                     	;# 
  3084  028D                     	;# 
  3085  028E                     	;# 
  3086  028F                     	;# 
  3087  0290                     	;# 
  3088  0291                     	;# 
  3089  0292                     	;# 
  3090  0292                     	;# 
  3091  0293                     	;# 
  3092  0293                     	;# 
  3093  0294                     	;# 
  3094  0295                     	;# 
  3095  0296                     	;# 
  3096  0297                     	;# 
  3097  0298                     	;# 
  3098  0298                     	;# 
  3099  0299                     	;# 
  3100  0299                     	;# 
  3101  029A                     	;# 
  3102  029B                     	;# 
  3103  029C                     	;# 
  3104  029D                     	;# 
  3105  029F                     	;# 
  3106  030C                     	;# 
  3107  030C                     	;# 
  3108  030D                     	;# 
  3109  030E                     	;# 
  3110  030F                     	;# 
  3111  0310                     	;# 
  3112  0310                     	;# 
  3113  0311                     	;# 
  3114  0312                     	;# 
  3115  0313                     	;# 
  3116  0314                     	;# 
  3117  0314                     	;# 
  3118  0315                     	;# 
  3119  0316                     	;# 
  3120  0317                     	;# 
  3121  0318                     	;# 
  3122  0318                     	;# 
  3123  0319                     	;# 
  3124  031A                     	;# 
  3125  031B                     	;# 
  3126  038C                     	;# 
  3127  038C                     	;# 
  3128  038D                     	;# 
  3129  038E                     	;# 
  3130  0390                     	;# 
  3131  0390                     	;# 
  3132  0391                     	;# 
  3133  0392                     	;# 
  3134  048C                     	;# 
  3135  048C                     	;# 
  3136  048D                     	;# 
  3137  048E                     	;# 
  3138  048F                     	;# 
  3139  048F                     	;# 
  3140  0490                     	;# 
  3141  0491                     	;# 
  3142  0492                     	;# 
  3143  0492                     	;# 
  3144  0493                     	;# 
  3145  0494                     	;# 
  3146  0495                     	;# 
  3147  0495                     	;# 
  3148  0496                     	;# 
  3149  0497                     	;# 
  3150  0498                     	;# 
  3151  0499                     	;# 
  3152  049A                     	;# 
  3153  049B                     	;# 
  3154  049C                     	;# 
  3155  049D                     	;# 
  3156  058C                     	;# 
  3157  058C                     	;# 
  3158  058D                     	;# 
  3159  058E                     	;# 
  3160  058F                     	;# 
  3161  058F                     	;# 
  3162  0590                     	;# 
  3163  0591                     	;# 
  3164  0592                     	;# 
  3165  0593                     	;# 
  3166  059C                     	;# 
  3167  059C                     	;# 
  3168  059D                     	;# 
  3169  059D                     	;# 
  3170  059E                     	;# 
  3171  059F                     	;# 
  3172  060C                     	;# 
  3173  060C                     	;# 
  3174  060D                     	;# 
  3175  060D                     	;# 
  3176  060E                     	;# 
  3177  060F                     	;# 
  3178  0610                     	;# 
  3179  0611                     	;# 
  3180  0612                     	;# 
  3181  0613                     	;# 
  3182  0614                     	;# 
  3183  0616                     	;# 
  3184  0616                     	;# 
  3185  0617                     	;# 
  3186  0617                     	;# 
  3187  0618                     	;# 
  3188  0619                     	;# 
  3189  061A                     	;# 
  3190  061B                     	;# 
  3191  061C                     	;# 
  3192  061D                     	;# 
  3193  061E                     	;# 
  3194  070C                     	;# 
  3195  070D                     	;# 
  3196  070E                     	;# 
  3197  070F                     	;# 
  3198  0710                     	;# 
  3199  0711                     	;# 
  3200  0712                     	;# 
  3201  0713                     	;# 
  3202  0714                     	;# 
  3203  0716                     	;# 
  3204  0717                     	;# 
  3205  0718                     	;# 
  3206  0719                     	;# 
  3207  071A                     	;# 
  3208  071B                     	;# 
  3209  071C                     	;# 
  3210  071D                     	;# 
  3211  071E                     	;# 
  3212  0796                     	;# 
  3213  0797                     	;# 
  3214  0798                     	;# 
  3215  0799                     	;# 
  3216  079A                     	;# 
  3217  079B                     	;# 
  3218  079C                     	;# 
  3219  079D                     	;# 
  3220  080C                     	;# 
  3221  080D                     	;# 
  3222  080E                     	;# 
  3223  080F                     	;# 
  3224  0810                     	;# 
  3225  0811                     	;# 
  3226  0812                     	;# 
  3227  0813                     	;# 
  3228  0814                     	;# 
  3229  081A                     	;# 
  3230  081A                     	;# 
  3231  081B                     	;# 
  3232  081C                     	;# 
  3233  081C                     	;# 
  3234  081D                     	;# 
  3235  081E                     	;# 
  3236  081F                     	;# 
  3237  088C                     	;# 
  3238  088D                     	;# 
  3239  088E                     	;# 
  3240  088F                     	;# 
  3241  0890                     	;# 
  3242  0891                     	;# 
  3243  0892                     	;# 
  3244  0893                     	;# 
  3245  0895                     	;# 
  3246  0896                     	;# 
  3247  0897                     	;# 
  3248  0898                     	;# 
  3249  0899                     	;# 
  3250  089A                     	;# 
  3251  089B                     	;# 
  3252  090C                     	;# 
  3253  090E                     	;# 
  3254  090F                     	;# 
  3255  091F                     	;# 
  3256  098F                     	;# 
  3257  098F                     	;# 
  3258  0990                     	;# 
  3259  0991                     	;# 
  3260  0992                     	;# 
  3261  0993                     	;# 
  3262  0994                     	;# 
  3263  0995                     	;# 
  3264  0996                     	;# 
  3265  0997                     	;# 
  3266  1E0F                     	;# 
  3267  1E10                     	;# 
  3268  1E11                     	;# 
  3269  1E12                     	;# 
  3270  1E13                     	;# 
  3271  1E14                     	;# 
  3272  1E15                     	;# 
  3273  1E16                     	;# 
  3274  1E17                     	;# 
  3275  1E18                     	;# 
  3276  1E19                     	;# 
  3277  1E1A                     	;# 
  3278  1E1B                     	;# 
  3279  1E1C                     	;# 
  3280  1E1D                     	;# 
  3281  1E1E                     	;# 
  3282  1E1F                     	;# 
  3283  1E20                     	;# 
  3284  1E21                     	;# 
  3285  1E22                     	;# 
  3286  1E23                     	;# 
  3287  1E24                     	;# 
  3288  1E25                     	;# 
  3289  1E26                     	;# 
  3290  1E27                     	;# 
  3291  1E28                     	;# 
  3292  1E29                     	;# 
  3293  1E2A                     	;# 
  3294  1E2B                     	;# 
  3295  1E2C                     	;# 
  3296  1E2D                     	;# 
  3297  1E2E                     	;# 
  3298  1E2F                     	;# 
  3299  1E30                     	;# 
  3300  1E31                     	;# 
  3301  1E32                     	;# 
  3302  1E33                     	;# 
  3303  1E34                     	;# 
  3304  1E35                     	;# 
  3305  1E36                     	;# 
  3306  1E37                     	;# 
  3307  1E8F                     	;# 
  3308  1E90                     	;# 
  3309  1E91                     	;# 
  3310  1E92                     	;# 
  3311  1E93                     	;# 
  3312  1E94                     	;# 
  3313  1E95                     	;# 
  3314  1E96                     	;# 
  3315  1E97                     	;# 
  3316  1E9C                     	;# 
  3317  1E9D                     	;# 
  3318  1E9E                     	;# 
  3319  1EA1                     	;# 
  3320  1EA2                     	;# 
  3321  1EA3                     	;# 
  3322  1EA4                     	;# 
  3323  1EA9                     	;# 
  3324  1EAA                     	;# 
  3325  1EB1                     	;# 
  3326  1EB2                     	;# 
  3327  1EB8                     	;# 
  3328  1EB9                     	;# 
  3329  1EBA                     	;# 
  3330  1EBB                     	;# 
  3331  1EBC                     	;# 
  3332  1EBD                     	;# 
  3333  1EBE                     	;# 
  3334  1EC3                     	;# 
  3335  1EC5                     	;# 
  3336  1EC6                     	;# 
  3337  1EC7                     	;# 
  3338  1EC8                     	;# 
  3339  1EC9                     	;# 
  3340  1ECA                     	;# 
  3341  1ECB                     	;# 
  3342  1ECB                     	;# 
  3343  1ECB                     	;# 
  3344  1ECC                     	;# 
  3345  1ECC                     	;# 
  3346  1ECC                     	;# 
  3347  1F10                     	;# 
  3348  1F11                     	;# 
  3349  1F12                     	;# 
  3350  1F14                     	;# 
  3351  1F15                     	;# 
  3352  1F1C                     	;# 
  3353  1F1D                     	;# 
  3354  1F1E                     	;# 
  3355  1F1F                     	;# 
  3356  1F20                     	;# 
  3357  1F21                     	;# 
  3358  1F22                     	;# 
  3359  1F23                     	;# 
  3360  1F24                     	;# 
  3361  1F25                     	;# 
  3362  1F26                     	;# 
  3363  1F27                     	;# 
  3364  1F38                     	;# 
  3365  1F39                     	;# 
  3366  1F3A                     	;# 
  3367  1F3B                     	;# 
  3368  1F3C                     	;# 
  3369  1F3D                     	;# 
  3370  1F3E                     	;# 
  3371  1F3F                     	;# 
  3372  1F43                     	;# 
  3373  1F44                     	;# 
  3374  1F45                     	;# 
  3375  1F46                     	;# 
  3376  1F47                     	;# 
  3377  1F48                     	;# 
  3378  1F49                     	;# 
  3379  1F4A                     	;# 
  3380  1F4E                     	;# 
  3381  1F4F                     	;# 
  3382  1F50                     	;# 
  3383  1F51                     	;# 
  3384  1F52                     	;# 
  3385  1F53                     	;# 
  3386  1F54                     	;# 
  3387  1F55                     	;# 
  3388  1FE4                     	;# 
  3389  1FE5                     	;# 
  3390  1FE6                     	;# 
  3391  1FE7                     	;# 
  3392  1FE8                     	;# 
  3393  1FE8                     	;# 
  3394  1FE9                     	;# 
  3395  1FEA                     	;# 
  3396  1FEB                     	;# 
  3397  1FED                     	;# 
  3398  1FEE                     	;# 
  3399  1FEF                     	;# 
  3400  0000                     	;# 
  3401  0001                     	;# 
  3402  0002                     	;# 
  3403  0003                     	;# 
  3404  0004                     	;# 
  3405  0005                     	;# 
  3406  0006                     	;# 
  3407  0007                     	;# 
  3408  0008                     	;# 
  3409  0009                     	;# 
  3410  000A                     	;# 
  3411  000B                     	;# 
  3412  000C                     	;# 
  3413  000D                     	;# 
  3414  000E                     	;# 
  3415  0012                     	;# 
  3416  0013                     	;# 
  3417  0014                     	;# 
  3418  0018                     	;# 
  3419  0019                     	;# 
  3420  001A                     	;# 
  3421  008C                     	;# 
  3422  008C                     	;# 
  3423  008D                     	;# 
  3424  008E                     	;# 
  3425  008E                     	;# 
  3426  008F                     	;# 
  3427  0090                     	;# 
  3428  0090                     	;# 
  3429  0091                     	;# 
  3430  0092                     	;# 
  3431  0092                     	;# 
  3432  0093                     	;# 
  3433  0094                     	;# 
  3434  0094                     	;# 
  3435  0095                     	;# 
  3436  0096                     	;# 
  3437  0096                     	;# 
  3438  0097                     	;# 
  3439  0098                     	;# 
  3440  0099                     	;# 
  3441  009A                     	;# 
  3442  009B                     	;# 
  3443  009B                     	;# 
  3444  009C                     	;# 
  3445  009D                     	;# 
  3446  009D                     	;# 
  3447  009E                     	;# 
  3448  009F                     	;# 
  3449  010C                     	;# 
  3450  010C                     	;# 
  3451  010D                     	;# 
  3452  010E                     	;# 
  3453  010F                     	;# 
  3454  010F                     	;# 
  3455  0110                     	;# 
  3456  0111                     	;# 
  3457  0112                     	;# 
  3458  0113                     	;# 
  3459  0114                     	;# 
  3460  0115                     	;# 
  3461  0116                     	;# 
  3462  0117                     	;# 
  3463  0118                     	;# 
  3464  0119                     	;# 
  3465  0119                     	;# 
  3466  0119                     	;# 
  3467  011A                     	;# 
  3468  011A                     	;# 
  3469  011A                     	;# 
  3470  011B                     	;# 
  3471  011B                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011B                     	;# 
  3475  011C                     	;# 
  3476  011C                     	;# 
  3477  011C                     	;# 
  3478  011D                     	;# 
  3479  011D                     	;# 
  3480  011D                     	;# 
  3481  011E                     	;# 
  3482  011E                     	;# 
  3483  011E                     	;# 
  3484  011F                     	;# 
  3485  011F                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  011F                     	;# 
  3489  018C                     	;# 
  3490  018D                     	;# 
  3491  018E                     	;# 
  3492  018F                     	;# 
  3493  0190                     	;# 
  3494  0191                     	;# 
  3495  0192                     	;# 
  3496  0196                     	;# 
  3497  0197                     	;# 
  3498  0198                     	;# 
  3499  0199                     	;# 
  3500  019A                     	;# 
  3501  019B                     	;# 
  3502  019C                     	;# 
  3503  020C                     	;# 
  3504  020D                     	;# 
  3505  020E                     	;# 
  3506  020E                     	;# 
  3507  020F                     	;# 
  3508  020F                     	;# 
  3509  0210                     	;# 
  3510  0210                     	;# 
  3511  0211                     	;# 
  3512  0211                     	;# 
  3513  0212                     	;# 
  3514  0213                     	;# 
  3515  0214                     	;# 
  3516  0214                     	;# 
  3517  0215                     	;# 
  3518  0215                     	;# 
  3519  0216                     	;# 
  3520  0216                     	;# 
  3521  0217                     	;# 
  3522  0217                     	;# 
  3523  0218                     	;# 
  3524  0219                     	;# 
  3525  021A                     	;# 
  3526  021A                     	;# 
  3527  021B                     	;# 
  3528  021B                     	;# 
  3529  021C                     	;# 
  3530  021C                     	;# 
  3531  021D                     	;# 
  3532  021D                     	;# 
  3533  021E                     	;# 
  3534  021F                     	;# 
  3535  028C                     	;# 
  3536  028C                     	;# 
  3537  028D                     	;# 
  3538  028D                     	;# 
  3539  028E                     	;# 
  3540  028F                     	;# 
  3541  0290                     	;# 
  3542  0291                     	;# 
  3543  0292                     	;# 
  3544  0292                     	;# 
  3545  0293                     	;# 
  3546  0293                     	;# 
  3547  0294                     	;# 
  3548  0295                     	;# 
  3549  0296                     	;# 
  3550  0297                     	;# 
  3551  0298                     	;# 
  3552  0298                     	;# 
  3553  0299                     	;# 
  3554  0299                     	;# 
  3555  029A                     	;# 
  3556  029B                     	;# 
  3557  029C                     	;# 
  3558  029D                     	;# 
  3559  029F                     	;# 
  3560  030C                     	;# 
  3561  030C                     	;# 
  3562  030D                     	;# 
  3563  030E                     	;# 
  3564  030F                     	;# 
  3565  0310                     	;# 
  3566  0310                     	;# 
  3567  0311                     	;# 
  3568  0312                     	;# 
  3569  0313                     	;# 
  3570  0314                     	;# 
  3571  0314                     	;# 
  3572  0315                     	;# 
  3573  0316                     	;# 
  3574  0317                     	;# 
  3575  0318                     	;# 
  3576  0318                     	;# 
  3577  0319                     	;# 
  3578  031A                     	;# 
  3579  031B                     	;# 
  3580  038C                     	;# 
  3581  038C                     	;# 
  3582  038D                     	;# 
  3583  038E                     	;# 
  3584  0390                     	;# 
  3585  0390                     	;# 
  3586  0391                     	;# 
  3587  0392                     	;# 
  3588  048C                     	;# 
  3589  048C                     	;# 
  3590  048D                     	;# 
  3591  048E                     	;# 
  3592  048F                     	;# 
  3593  048F                     	;# 
  3594  0490                     	;# 
  3595  0491                     	;# 
  3596  0492                     	;# 
  3597  0492                     	;# 
  3598  0493                     	;# 
  3599  0494                     	;# 
  3600  0495                     	;# 
  3601  0495                     	;# 
  3602  0496                     	;# 
  3603  0497                     	;# 
  3604  0498                     	;# 
  3605  0499                     	;# 
  3606  049A                     	;# 
  3607  049B                     	;# 
  3608  049C                     	;# 
  3609  049D                     	;# 
  3610  058C                     	;# 
  3611  058C                     	;# 
  3612  058D                     	;# 
  3613  058E                     	;# 
  3614  058F                     	;# 
  3615  058F                     	;# 
  3616  0590                     	;# 
  3617  0591                     	;# 
  3618  0592                     	;# 
  3619  0593                     	;# 
  3620  059C                     	;# 
  3621  059C                     	;# 
  3622  059D                     	;# 
  3623  059D                     	;# 
  3624  059E                     	;# 
  3625  059F                     	;# 
  3626  060C                     	;# 
  3627  060C                     	;# 
  3628  060D                     	;# 
  3629  060D                     	;# 
  3630  060E                     	;# 
  3631  060F                     	;# 
  3632  0610                     	;# 
  3633  0611                     	;# 
  3634  0612                     	;# 
  3635  0613                     	;# 
  3636  0614                     	;# 
  3637  0616                     	;# 
  3638  0616                     	;# 
  3639  0617                     	;# 
  3640  0617                     	;# 
  3641  0618                     	;# 
  3642  0619                     	;# 
  3643  061A                     	;# 
  3644  061B                     	;# 
  3645  061C                     	;# 
  3646  061D                     	;# 
  3647  061E                     	;# 
  3648  070C                     	;# 
  3649  070D                     	;# 
  3650  070E                     	;# 
  3651  070F                     	;# 
  3652  0710                     	;# 
  3653  0711                     	;# 
  3654  0712                     	;# 
  3655  0713                     	;# 
  3656  0714                     	;# 
  3657  0716                     	;# 
  3658  0717                     	;# 
  3659  0718                     	;# 
  3660  0719                     	;# 
  3661  071A                     	;# 
  3662  071B                     	;# 
  3663  071C                     	;# 
  3664  071D                     	;# 
  3665  071E                     	;# 
  3666  0796                     	;# 
  3667  0797                     	;# 
  3668  0798                     	;# 
  3669  0799                     	;# 
  3670  079A                     	;# 
  3671  079B                     	;# 
  3672  079C                     	;# 
  3673  079D                     	;# 
  3674  080C                     	;# 
  3675  080D                     	;# 
  3676  080E                     	;# 
  3677  080F                     	;# 
  3678  0810                     	;# 
  3679  0811                     	;# 
  3680  0812                     	;# 
  3681  0813                     	;# 
  3682  0814                     	;# 
  3683  081A                     	;# 
  3684  081A                     	;# 
  3685  081B                     	;# 
  3686  081C                     	;# 
  3687  081C                     	;# 
  3688  081D                     	;# 
  3689  081E                     	;# 
  3690  081F                     	;# 
  3691  088C                     	;# 
  3692  088D                     	;# 
  3693  088E                     	;# 
  3694  088F                     	;# 
  3695  0890                     	;# 
  3696  0891                     	;# 
  3697  0892                     	;# 
  3698  0893                     	;# 
  3699  0895                     	;# 
  3700  0896                     	;# 
  3701  0897                     	;# 
  3702  0898                     	;# 
  3703  0899                     	;# 
  3704  089A                     	;# 
  3705  089B                     	;# 
  3706  090C                     	;# 
  3707  090E                     	;# 
  3708  090F                     	;# 
  3709  091F                     	;# 
  3710  098F                     	;# 
  3711  098F                     	;# 
  3712  0990                     	;# 
  3713  0991                     	;# 
  3714  0992                     	;# 
  3715  0993                     	;# 
  3716  0994                     	;# 
  3717  0995                     	;# 
  3718  0996                     	;# 
  3719  0997                     	;# 
  3720  1E0F                     	;# 
  3721  1E10                     	;# 
  3722  1E11                     	;# 
  3723  1E12                     	;# 
  3724  1E13                     	;# 
  3725  1E14                     	;# 
  3726  1E15                     	;# 
  3727  1E16                     	;# 
  3728  1E17                     	;# 
  3729  1E18                     	;# 
  3730  1E19                     	;# 
  3731  1E1A                     	;# 
  3732  1E1B                     	;# 
  3733  1E1C                     	;# 
  3734  1E1D                     	;# 
  3735  1E1E                     	;# 
  3736  1E1F                     	;# 
  3737  1E20                     	;# 
  3738  1E21                     	;# 
  3739  1E22                     	;# 
  3740  1E23                     	;# 
  3741  1E24                     	;# 
  3742  1E25                     	;# 
  3743  1E26                     	;# 
  3744  1E27                     	;# 
  3745  1E28                     	;# 
  3746  1E29                     	;# 
  3747  1E2A                     	;# 
  3748  1E2B                     	;# 
  3749  1E2C                     	;# 
  3750  1E2D                     	;# 
  3751  1E2E                     	;# 
  3752  1E2F                     	;# 
  3753  1E30                     	;# 
  3754  1E31                     	;# 
  3755  1E32                     	;# 
  3756  1E33                     	;# 
  3757  1E34                     	;# 
  3758  1E35                     	;# 
  3759  1E36                     	;# 
  3760  1E37                     	;# 
  3761  1E8F                     	;# 
  3762  1E90                     	;# 
  3763  1E91                     	;# 
  3764  1E92                     	;# 
  3765  1E93                     	;# 
  3766  1E94                     	;# 
  3767  1E95                     	;# 
  3768  1E96                     	;# 
  3769  1E97                     	;# 
  3770  1E9C                     	;# 
  3771  1E9D                     	;# 
  3772  1E9E                     	;# 
  3773  1EA1                     	;# 
  3774  1EA2                     	;# 
  3775  1EA3                     	;# 
  3776  1EA4                     	;# 
  3777  1EA9                     	;# 
  3778  1EAA                     	;# 
  3779  1EB1                     	;# 
  3780  1EB2                     	;# 
  3781  1EB8                     	;# 
  3782  1EB9                     	;# 
  3783  1EBA                     	;# 
  3784  1EBB                     	;# 
  3785  1EBC                     	;# 
  3786  1EBD                     	;# 
  3787  1EBE                     	;# 
  3788  1EC3                     	;# 
  3789  1EC5                     	;# 
  3790  1EC6                     	;# 
  3791  1EC7                     	;# 
  3792  1EC8                     	;# 
  3793  1EC9                     	;# 
  3794  1ECA                     	;# 
  3795  1ECB                     	;# 
  3796  1ECB                     	;# 
  3797  1ECB                     	;# 
  3798  1ECC                     	;# 
  3799  1ECC                     	;# 
  3800  1ECC                     	;# 
  3801  1F10                     	;# 
  3802  1F11                     	;# 
  3803  1F12                     	;# 
  3804  1F14                     	;# 
  3805  1F15                     	;# 
  3806  1F1C                     	;# 
  3807  1F1D                     	;# 
  3808  1F1E                     	;# 
  3809  1F1F                     	;# 
  3810  1F20                     	;# 
  3811  1F21                     	;# 
  3812  1F22                     	;# 
  3813  1F23                     	;# 
  3814  1F24                     	;# 
  3815  1F25                     	;# 
  3816  1F26                     	;# 
  3817  1F27                     	;# 
  3818  1F38                     	;# 
  3819  1F39                     	;# 
  3820  1F3A                     	;# 
  3821  1F3B                     	;# 
  3822  1F3C                     	;# 
  3823  1F3D                     	;# 
  3824  1F3E                     	;# 
  3825  1F3F                     	;# 
  3826  1F43                     	;# 
  3827  1F44                     	;# 
  3828  1F45                     	;# 
  3829  1F46                     	;# 
  3830  1F47                     	;# 
  3831  1F48                     	;# 
  3832  1F49                     	;# 
  3833  1F4A                     	;# 
  3834  1F4E                     	;# 
  3835  1F4F                     	;# 
  3836  1F50                     	;# 
  3837  1F51                     	;# 
  3838  1F52                     	;# 
  3839  1F53                     	;# 
  3840  1F54                     	;# 
  3841  1F55                     	;# 
  3842  1FE4                     	;# 
  3843  1FE5                     	;# 
  3844  1FE6                     	;# 
  3845  1FE7                     	;# 
  3846  1FE8                     	;# 
  3847  1FE8                     	;# 
  3848  1FE9                     	;# 
  3849  1FEA                     	;# 
  3850  1FEB                     	;# 
  3851  1FED                     	;# 
  3852  1FEE                     	;# 
  3853  1FEF                     	;# 
  3854  0000                     	;# 
  3855  0001                     	;# 
  3856  0002                     	;# 
  3857  0003                     	;# 
  3858  0004                     	;# 
  3859  0005                     	;# 
  3860  0006                     	;# 
  3861  0007                     	;# 
  3862  0008                     	;# 
  3863  0009                     	;# 
  3864  000A                     	;# 
  3865  000B                     	;# 
  3866  000C                     	;# 
  3867  000D                     	;# 
  3868  000E                     	;# 
  3869  0012                     	;# 
  3870  0013                     	;# 
  3871  0014                     	;# 
  3872  0018                     	;# 
  3873  0019                     	;# 
  3874  001A                     	;# 
  3875  008C                     	;# 
  3876  008C                     	;# 
  3877  008D                     	;# 
  3878  008E                     	;# 
  3879  008E                     	;# 
  3880  008F                     	;# 
  3881  0090                     	;# 
  3882  0090                     	;# 
  3883  0091                     	;# 
  3884  0092                     	;# 
  3885  0092                     	;# 
  3886  0093                     	;# 
  3887  0094                     	;# 
  3888  0094                     	;# 
  3889  0095                     	;# 
  3890  0096                     	;# 
  3891  0096                     	;# 
  3892  0097                     	;# 
  3893  0098                     	;# 
  3894  0099                     	;# 
  3895  009A                     	;# 
  3896  009B                     	;# 
  3897  009B                     	;# 
  3898  009C                     	;# 
  3899  009D                     	;# 
  3900  009D                     	;# 
  3901  009E                     	;# 
  3902  009F                     	;# 
  3903  010C                     	;# 
  3904  010C                     	;# 
  3905  010D                     	;# 
  3906  010E                     	;# 
  3907  010F                     	;# 
  3908  010F                     	;# 
  3909  0110                     	;# 
  3910  0111                     	;# 
  3911  0112                     	;# 
  3912  0113                     	;# 
  3913  0114                     	;# 
  3914  0115                     	;# 
  3915  0116                     	;# 
  3916  0117                     	;# 
  3917  0118                     	;# 
  3918  0119                     	;# 
  3919  0119                     	;# 
  3920  0119                     	;# 
  3921  011A                     	;# 
  3922  011A                     	;# 
  3923  011A                     	;# 
  3924  011B                     	;# 
  3925  011B                     	;# 
  3926  011B                     	;# 
  3927  011B                     	;# 
  3928  011B                     	;# 
  3929  011C                     	;# 
  3930  011C                     	;# 
  3931  011C                     	;# 
  3932  011D                     	;# 
  3933  011D                     	;# 
  3934  011D                     	;# 
  3935  011E                     	;# 
  3936  011E                     	;# 
  3937  011E                     	;# 
  3938  011F                     	;# 
  3939  011F                     	;# 
  3940  011F                     	;# 
  3941  011F                     	;# 
  3942  011F                     	;# 
  3943  018C                     	;# 
  3944  018D                     	;# 
  3945  018E                     	;# 
  3946  018F                     	;# 
  3947  0190                     	;# 
  3948  0191                     	;# 
  3949  0192                     	;# 
  3950  0196                     	;# 
  3951  0197                     	;# 
  3952  0198                     	;# 
  3953  0199                     	;# 
  3954  019A                     	;# 
  3955  019B                     	;# 
  3956  019C                     	;# 
  3957  020C                     	;# 
  3958  020D                     	;# 
  3959  020E                     	;# 
  3960  020E                     	;# 
  3961  020F                     	;# 
  3962  020F                     	;# 
  3963  0210                     	;# 
  3964  0210                     	;# 
  3965  0211                     	;# 
  3966  0211                     	;# 
  3967  0212                     	;# 
  3968  0213                     	;# 
  3969  0214                     	;# 
  3970  0214                     	;# 
  3971  0215                     	;# 
  3972  0215                     	;# 
  3973  0216                     	;# 
  3974  0216                     	;# 
  3975  0217                     	;# 
  3976  0217                     	;# 
  3977  0218                     	;# 
  3978  0219                     	;# 
  3979  021A                     	;# 
  3980  021A                     	;# 
  3981  021B                     	;# 
  3982  021B                     	;# 
  3983  021C                     	;# 
  3984  021C                     	;# 
  3985  021D                     	;# 
  3986  021D                     	;# 
  3987  021E                     	;# 
  3988  021F                     	;# 
  3989  028C                     	;# 
  3990  028C                     	;# 
  3991  028D                     	;# 
  3992  028D                     	;# 
  3993  028E                     	;# 
  3994  028F                     	;# 
  3995  0290                     	;# 
  3996  0291                     	;# 
  3997  0292                     	;# 
  3998  0292                     	;# 
  3999  0293                     	;# 
  4000  0293                     	;# 
  4001  0294                     	;# 
  4002  0295                     	;# 
  4003  0296                     	;# 
  4004  0297                     	;# 
  4005  0298                     	;# 
  4006  0298                     	;# 
  4007  0299                     	;# 
  4008  0299                     	;# 
  4009  029A                     	;# 
  4010  029B                     	;# 
  4011  029C                     	;# 
  4012  029D                     	;# 
  4013  029F                     	;# 
  4014  030C                     	;# 
  4015  030C                     	;# 
  4016  030D                     	;# 
  4017  030E                     	;# 
  4018  030F                     	;# 
  4019  0310                     	;# 
  4020  0310                     	;# 
  4021  0311                     	;# 
  4022  0312                     	;# 
  4023  0313                     	;# 
  4024  0314                     	;# 
  4025  0314                     	;# 
  4026  0315                     	;# 
  4027  0316                     	;# 
  4028  0317                     	;# 
  4029  0318                     	;# 
  4030  0318                     	;# 
  4031  0319                     	;# 
  4032  031A                     	;# 
  4033  031B                     	;# 
  4034  038C                     	;# 
  4035  038C                     	;# 
  4036  038D                     	;# 
  4037  038E                     	;# 
  4038  0390                     	;# 
  4039  0390                     	;# 
  4040  0391                     	;# 
  4041  0392                     	;# 
  4042  048C                     	;# 
  4043  048C                     	;# 
  4044  048D                     	;# 
  4045  048E                     	;# 
  4046  048F                     	;# 
  4047  048F                     	;# 
  4048  0490                     	;# 
  4049  0491                     	;# 
  4050  0492                     	;# 
  4051  0492                     	;# 
  4052  0493                     	;# 
  4053  0494                     	;# 
  4054  0495                     	;# 
  4055  0495                     	;# 
  4056  0496                     	;# 
  4057  0497                     	;# 
  4058  0498                     	;# 
  4059  0499                     	;# 
  4060  049A                     	;# 
  4061  049B                     	;# 
  4062  049C                     	;# 
  4063  049D                     	;# 
  4064  058C                     	;# 
  4065  058C                     	;# 
  4066  058D                     	;# 
  4067  058E                     	;# 
  4068  058F                     	;# 
  4069  058F                     	;# 
  4070  0590                     	;# 
  4071  0591                     	;# 
  4072  0592                     	;# 
  4073  0593                     	;# 
  4074  059C                     	;# 
  4075  059C                     	;# 
  4076  059D                     	;# 
  4077  059D                     	;# 
  4078  059E                     	;# 
  4079  059F                     	;# 
  4080  060C                     	;# 
  4081  060C                     	;# 
  4082  060D                     	;# 
  4083  060D                     	;# 
  4084  060E                     	;# 
  4085  060F                     	;# 
  4086  0610                     	;# 
  4087  0611                     	;# 
  4088  0612                     	;# 
  4089  0613                     	;# 
  4090  0614                     	;# 
  4091  0616                     	;# 
  4092  0616                     	;# 
  4093  0617                     	;# 
  4094  0617                     	;# 
  4095  0618                     	;# 
  4096  0619                     	;# 
  4097  061A                     	;# 
  4098  061B                     	;# 
  4099  061C                     	;# 
  4100  061D                     	;# 
  4101  061E                     	;# 
  4102  070C                     	;# 
  4103  070D                     	;# 
  4104  070E                     	;# 
  4105  070F                     	;# 
  4106  0710                     	;# 
  4107  0711                     	;# 
  4108  0712                     	;# 
  4109  0713                     	;# 
  4110  0714                     	;# 
  4111  0716                     	;# 
  4112  0717                     	;# 
  4113  0718                     	;# 
  4114  0719                     	;# 
  4115  071A                     	;# 
  4116  071B                     	;# 
  4117  071C                     	;# 
  4118  071D                     	;# 
  4119  071E                     	;# 
  4120  0796                     	;# 
  4121  0797                     	;# 
  4122  0798                     	;# 
  4123  0799                     	;# 
  4124  079A                     	;# 
  4125  079B                     	;# 
  4126  079C                     	;# 
  4127  079D                     	;# 
  4128  080C                     	;# 
  4129  080D                     	;# 
  4130  080E                     	;# 
  4131  080F                     	;# 
  4132  0810                     	;# 
  4133  0811                     	;# 
  4134  0812                     	;# 
  4135  0813                     	;# 
  4136  0814                     	;# 
  4137  081A                     	;# 
  4138  081A                     	;# 
  4139  081B                     	;# 
  4140  081C                     	;# 
  4141  081C                     	;# 
  4142  081D                     	;# 
  4143  081E                     	;# 
  4144  081F                     	;# 
  4145  088C                     	;# 
  4146  088D                     	;# 
  4147  088E                     	;# 
  4148  088F                     	;# 
  4149  0890                     	;# 
  4150  0891                     	;# 
  4151  0892                     	;# 
  4152  0893                     	;# 
  4153  0895                     	;# 
  4154  0896                     	;# 
  4155  0897                     	;# 
  4156  0898                     	;# 
  4157  0899                     	;# 
  4158  089A                     	;# 
  4159  089B                     	;# 
  4160  090C                     	;# 
  4161  090E                     	;# 
  4162  090F                     	;# 
  4163  091F                     	;# 
  4164  098F                     	;# 
  4165  098F                     	;# 
  4166  0990                     	;# 
  4167  0991                     	;# 
  4168  0992                     	;# 
  4169  0993                     	;# 
  4170  0994                     	;# 
  4171  0995                     	;# 
  4172  0996                     	;# 
  4173  0997                     	;# 
  4174  1E0F                     	;# 
  4175  1E10                     	;# 
  4176  1E11                     	;# 
  4177  1E12                     	;# 
  4178  1E13                     	;# 
  4179  1E14                     	;# 
  4180  1E15                     	;# 
  4181  1E16                     	;# 
  4182  1E17                     	;# 
  4183  1E18                     	;# 
  4184  1E19                     	;# 
  4185  1E1A                     	;# 
  4186  1E1B                     	;# 
  4187  1E1C                     	;# 
  4188  1E1D                     	;# 
  4189  1E1E                     	;# 
  4190  1E1F                     	;# 
  4191  1E20                     	;# 
  4192  1E21                     	;# 
  4193  1E22                     	;# 
  4194  1E23                     	;# 
  4195  1E24                     	;# 
  4196  1E25                     	;# 
  4197  1E26                     	;# 
  4198  1E27                     	;# 
  4199  1E28                     	;# 
  4200  1E29                     	;# 
  4201  1E2A                     	;# 
  4202  1E2B                     	;# 
  4203  1E2C                     	;# 
  4204  1E2D                     	;# 
  4205  1E2E                     	;# 
  4206  1E2F                     	;# 
  4207  1E30                     	;# 
  4208  1E31                     	;# 
  4209  1E32                     	;# 
  4210  1E33                     	;# 
  4211  1E34                     	;# 
  4212  1E35                     	;# 
  4213  1E36                     	;# 
  4214  1E37                     	;# 
  4215  1E8F                     	;# 
  4216  1E90                     	;# 
  4217  1E91                     	;# 
  4218  1E92                     	;# 
  4219  1E93                     	;# 
  4220  1E94                     	;# 
  4221  1E95                     	;# 
  4222  1E96                     	;# 
  4223  1E97                     	;# 
  4224  1E9C                     	;# 
  4225  1E9D                     	;# 
  4226  1E9E                     	;# 
  4227  1EA1                     	;# 
  4228  1EA2                     	;# 
  4229  1EA3                     	;# 
  4230  1EA4                     	;# 
  4231  1EA9                     	;# 
  4232  1EAA                     	;# 
  4233  1EB1                     	;# 
  4234  1EB2                     	;# 
  4235  1EB8                     	;# 
  4236  1EB9                     	;# 
  4237  1EBA                     	;# 
  4238  1EBB                     	;# 
  4239  1EBC                     	;# 
  4240  1EBD                     	;# 
  4241  1EBE                     	;# 
  4242  1EC3                     	;# 
  4243  1EC5                     	;# 
  4244  1EC6                     	;# 
  4245  1EC7                     	;# 
  4246  1EC8                     	;# 
  4247  1EC9                     	;# 
  4248  1ECA                     	;# 
  4249  1ECB                     	;# 
  4250  1ECB                     	;# 
  4251  1ECB                     	;# 
  4252  1ECC                     	;# 
  4253  1ECC                     	;# 
  4254  1ECC                     	;# 
  4255  1F10                     	;# 
  4256  1F11                     	;# 
  4257  1F12                     	;# 
  4258  1F14                     	;# 
  4259  1F15                     	;# 
  4260  1F1C                     	;# 
  4261  1F1D                     	;# 
  4262  1F1E                     	;# 
  4263  1F1F                     	;# 
  4264  1F20                     	;# 
  4265  1F21                     	;# 
  4266  1F22                     	;# 
  4267  1F23                     	;# 
  4268  1F24                     	;# 
  4269  1F25                     	;# 
  4270  1F26                     	;# 
  4271  1F27                     	;# 
  4272  1F38                     	;# 
  4273  1F39                     	;# 
  4274  1F3A                     	;# 
  4275  1F3B                     	;# 
  4276  1F3C                     	;# 
  4277  1F3D                     	;# 
  4278  1F3E                     	;# 
  4279  1F3F                     	;# 
  4280  1F43                     	;# 
  4281  1F44                     	;# 
  4282  1F45                     	;# 
  4283  1F46                     	;# 
  4284  1F47                     	;# 
  4285  1F48                     	;# 
  4286  1F49                     	;# 
  4287  1F4A                     	;# 
  4288  1F4E                     	;# 
  4289  1F4F                     	;# 
  4290  1F50                     	;# 
  4291  1F51                     	;# 
  4292  1F52                     	;# 
  4293  1F53                     	;# 
  4294  1F54                     	;# 
  4295  1F55                     	;# 
  4296  1FE4                     	;# 
  4297  1FE5                     	;# 
  4298  1FE6                     	;# 
  4299  1FE7                     	;# 
  4300  1FE8                     	;# 
  4301  1FE8                     	;# 
  4302  1FE9                     	;# 
  4303  1FEA                     	;# 
  4304  1FEB                     	;# 
  4305  1FED                     	;# 
  4306  1FEE                     	;# 
  4307  1FEF                     	;# 
  4308  0000                     	;# 
  4309  0001                     	;# 
  4310  0002                     	;# 
  4311  0003                     	;# 
  4312  0004                     	;# 
  4313  0005                     	;# 
  4314  0006                     	;# 
  4315  0007                     	;# 
  4316  0008                     	;# 
  4317  0009                     	;# 
  4318  000A                     	;# 
  4319  000B                     	;# 
  4320  000C                     	;# 
  4321  000D                     	;# 
  4322  000E                     	;# 
  4323  0012                     	;# 
  4324  0013                     	;# 
  4325  0014                     	;# 
  4326  0018                     	;# 
  4327  0019                     	;# 
  4328  001A                     	;# 
  4329  008C                     	;# 
  4330  008C                     	;# 
  4331  008D                     	;# 
  4332  008E                     	;# 
  4333  008E                     	;# 
  4334  008F                     	;# 
  4335  0090                     	;# 
  4336  0090                     	;# 
  4337  0091                     	;# 
  4338  0092                     	;# 
  4339  0092                     	;# 
  4340  0093                     	;# 
  4341  0094                     	;# 
  4342  0094                     	;# 
  4343  0095                     	;# 
  4344  0096                     	;# 
  4345  0096                     	;# 
  4346  0097                     	;# 
  4347  0098                     	;# 
  4348  0099                     	;# 
  4349  009A                     	;# 
  4350  009B                     	;# 
  4351  009B                     	;# 
  4352  009C                     	;# 
  4353  009D                     	;# 
  4354  009D                     	;# 
  4355  009E                     	;# 
  4356  009F                     	;# 
  4357  010C                     	;# 
  4358  010C                     	;# 
  4359  010D                     	;# 
  4360  010E                     	;# 
  4361  010F                     	;# 
  4362  010F                     	;# 
  4363  0110                     	;# 
  4364  0111                     	;# 
  4365  0112                     	;# 
  4366  0113                     	;# 
  4367  0114                     	;# 
  4368  0115                     	;# 
  4369  0116                     	;# 
  4370  0117                     	;# 
  4371  0118                     	;# 
  4372  0119                     	;# 
  4373  0119                     	;# 
  4374  0119                     	;# 
  4375  011A                     	;# 
  4376  011A                     	;# 
  4377  011A                     	;# 
  4378  011B                     	;# 
  4379  011B                     	;# 
  4380  011B                     	;# 
  4381  011B                     	;# 
  4382  011B                     	;# 
  4383  011C                     	;# 
  4384  011C                     	;# 
  4385  011C                     	;# 
  4386  011D                     	;# 
  4387  011D                     	;# 
  4388  011D                     	;# 
  4389  011E                     	;# 
  4390  011E                     	;# 
  4391  011E                     	;# 
  4392  011F                     	;# 
  4393  011F                     	;# 
  4394  011F                     	;# 
  4395  011F                     	;# 
  4396  011F                     	;# 
  4397  018C                     	;# 
  4398  018D                     	;# 
  4399  018E                     	;# 
  4400  018F                     	;# 
  4401  0190                     	;# 
  4402  0191                     	;# 
  4403  0192                     	;# 
  4404  0196                     	;# 
  4405  0197                     	;# 
  4406  0198                     	;# 
  4407  0199                     	;# 
  4408  019A                     	;# 
  4409  019B                     	;# 
  4410  019C                     	;# 
  4411  020C                     	;# 
  4412  020D                     	;# 
  4413  020E                     	;# 
  4414  020E                     	;# 
  4415  020F                     	;# 
  4416  020F                     	;# 
  4417  0210                     	;# 
  4418  0210                     	;# 
  4419  0211                     	;# 
  4420  0211                     	;# 
  4421  0212                     	;# 
  4422  0213                     	;# 
  4423  0214                     	;# 
  4424  0214                     	;# 
  4425  0215                     	;# 
  4426  0215                     	;# 
  4427  0216                     	;# 
  4428  0216                     	;# 
  4429  0217                     	;# 
  4430  0217                     	;# 
  4431  0218                     	;# 
  4432  0219                     	;# 
  4433  021A                     	;# 
  4434  021A                     	;# 
  4435  021B                     	;# 
  4436  021B                     	;# 
  4437  021C                     	;# 
  4438  021C                     	;# 
  4439  021D                     	;# 
  4440  021D                     	;# 
  4441  021E                     	;# 
  4442  021F                     	;# 
  4443  028C                     	;# 
  4444  028C                     	;# 
  4445  028D                     	;# 
  4446  028D                     	;# 
  4447  028E                     	;# 
  4448  028F                     	;# 
  4449  0290                     	;# 
  4450  0291                     	;# 
  4451  0292                     	;# 
  4452  0292                     	;# 
  4453  0293                     	;# 
  4454  0293                     	;# 
  4455  0294                     	;# 
  4456  0295                     	;# 
  4457  0296                     	;# 
  4458  0297                     	;# 
  4459  0298                     	;# 
  4460  0298                     	;# 
  4461  0299                     	;# 
  4462  0299                     	;# 
  4463  029A                     	;# 
  4464  029B                     	;# 
  4465  029C                     	;# 
  4466  029D                     	;# 
  4467  029F                     	;# 
  4468  030C                     	;# 
  4469  030C                     	;# 
  4470  030D                     	;# 
  4471  030E                     	;# 
  4472  030F                     	;# 
  4473  0310                     	;# 
  4474  0310                     	;# 
  4475  0311                     	;# 
  4476  0312                     	;# 
  4477  0313                     	;# 
  4478  0314                     	;# 
  4479  0314                     	;# 
  4480  0315                     	;# 
  4481  0316                     	;# 
  4482  0317                     	;# 
  4483  0318                     	;# 
  4484  0318                     	;# 
  4485  0319                     	;# 
  4486  031A                     	;# 
  4487  031B                     	;# 
  4488  038C                     	;# 
  4489  038C                     	;# 
  4490  038D                     	;# 
  4491  038E                     	;# 
  4492  0390                     	;# 
  4493  0390                     	;# 
  4494  0391                     	;# 
  4495  0392                     	;# 
  4496  048C                     	;# 
  4497  048C                     	;# 
  4498  048D                     	;# 
  4499  048E                     	;# 
  4500  048F                     	;# 
  4501  048F                     	;# 
  4502  0490                     	;# 
  4503  0491                     	;# 
  4504  0492                     	;# 
  4505  0492                     	;# 
  4506  0493                     	;# 
  4507  0494                     	;# 
  4508  0495                     	;# 
  4509  0495                     	;# 
  4510  0496                     	;# 
  4511  0497                     	;# 
  4512  0498                     	;# 
  4513  0499                     	;# 
  4514  049A                     	;# 
  4515  049B                     	;# 
  4516  049C                     	;# 
  4517  049D                     	;# 
  4518  058C                     	;# 
  4519  058C                     	;# 
  4520  058D                     	;# 
  4521  058E                     	;# 
  4522  058F                     	;# 
  4523  058F                     	;# 
  4524  0590                     	;# 
  4525  0591                     	;# 
  4526  0592                     	;# 
  4527  0593                     	;# 
  4528  059C                     	;# 
  4529  059C                     	;# 
  4530  059D                     	;# 
  4531  059D                     	;# 
  4532  059E                     	;# 
  4533  059F                     	;# 
  4534  060C                     	;# 
  4535  060C                     	;# 
  4536  060D                     	;# 
  4537  060D                     	;# 
  4538  060E                     	;# 
  4539  060F                     	;# 
  4540  0610                     	;# 
  4541  0611                     	;# 
  4542  0612                     	;# 
  4543  0613                     	;# 
  4544  0614                     	;# 
  4545  0616                     	;# 
  4546  0616                     	;# 
  4547  0617                     	;# 
  4548  0617                     	;# 
  4549  0618                     	;# 
  4550  0619                     	;# 
  4551  061A                     	;# 
  4552  061B                     	;# 
  4553  061C                     	;# 
  4554  061D                     	;# 
  4555  061E                     	;# 
  4556  070C                     	;# 
  4557  070D                     	;# 
  4558  070E                     	;# 
  4559  070F                     	;# 
  4560  0710                     	;# 
  4561  0711                     	;# 
  4562  0712                     	;# 
  4563  0713                     	;# 
  4564  0714                     	;# 
  4565  0716                     	;# 
  4566  0717                     	;# 
  4567  0718                     	;# 
  4568  0719                     	;# 
  4569  071A                     	;# 
  4570  071B                     	;# 
  4571  071C                     	;# 
  4572  071D                     	;# 
  4573  071E                     	;# 
  4574  0796                     	;# 
  4575  0797                     	;# 
  4576  0798                     	;# 
  4577  0799                     	;# 
  4578  079A                     	;# 
  4579  079B                     	;# 
  4580  079C                     	;# 
  4581  079D                     	;# 
  4582  080C                     	;# 
  4583  080D                     	;# 
  4584  080E                     	;# 
  4585  080F                     	;# 
  4586  0810                     	;# 
  4587  0811                     	;# 
  4588  0812                     	;# 
  4589  0813                     	;# 
  4590  0814                     	;# 
  4591  081A                     	;# 
  4592  081A                     	;# 
  4593  081B                     	;# 
  4594  081C                     	;# 
  4595  081C                     	;# 
  4596  081D                     	;# 
  4597  081E                     	;# 
  4598  081F                     	;# 
  4599  088C                     	;# 
  4600  088D                     	;# 
  4601  088E                     	;# 
  4602  088F                     	;# 
  4603  0890                     	;# 
  4604  0891                     	;# 
  4605  0892                     	;# 
  4606  0893                     	;# 
  4607  0895                     	;# 
  4608  0896                     	;# 
  4609  0897                     	;# 
  4610  0898                     	;# 
  4611  0899                     	;# 
  4612  089A                     	;# 
  4613  089B                     	;# 
  4614  090C                     	;# 
  4615  090E                     	;# 
  4616  090F                     	;# 
  4617  091F                     	;# 
  4618  098F                     	;# 
  4619  098F                     	;# 
  4620  0990                     	;# 
  4621  0991                     	;# 
  4622  0992                     	;# 
  4623  0993                     	;# 
  4624  0994                     	;# 
  4625  0995                     	;# 
  4626  0996                     	;# 
  4627  0997                     	;# 
  4628  1E0F                     	;# 
  4629  1E10                     	;# 
  4630  1E11                     	;# 
  4631  1E12                     	;# 
  4632  1E13                     	;# 
  4633  1E14                     	;# 
  4634  1E15                     	;# 
  4635  1E16                     	;# 
  4636  1E17                     	;# 
  4637  1E18                     	;# 
  4638  1E19                     	;# 
  4639  1E1A                     	;# 
  4640  1E1B                     	;# 
  4641  1E1C                     	;# 
  4642  1E1D                     	;# 
  4643  1E1E                     	;# 
  4644  1E1F                     	;# 
  4645  1E20                     	;# 
  4646  1E21                     	;# 
  4647  1E22                     	;# 
  4648  1E23                     	;# 
  4649  1E24                     	;# 
  4650  1E25                     	;# 
  4651  1E26                     	;# 
  4652  1E27                     	;# 
  4653  1E28                     	;# 
  4654  1E29                     	;# 
  4655  1E2A                     	;# 
  4656  1E2B                     	;# 
  4657  1E2C                     	;# 
  4658  1E2D                     	;# 
  4659  1E2E                     	;# 
  4660  1E2F                     	;# 
  4661  1E30                     	;# 
  4662  1E31                     	;# 
  4663  1E32                     	;# 
  4664  1E33                     	;# 
  4665  1E34                     	;# 
  4666  1E35                     	;# 
  4667  1E36                     	;# 
  4668  1E37                     	;# 
  4669  1E8F                     	;# 
  4670  1E90                     	;# 
  4671  1E91                     	;# 
  4672  1E92                     	;# 
  4673  1E93                     	;# 
  4674  1E94                     	;# 
  4675  1E95                     	;# 
  4676  1E96                     	;# 
  4677  1E97                     	;# 
  4678  1E9C                     	;# 
  4679  1E9D                     	;# 
  4680  1E9E                     	;# 
  4681  1EA1                     	;# 
  4682  1EA2                     	;# 
  4683  1EA3                     	;# 
  4684  1EA4                     	;# 
  4685  1EA9                     	;# 
  4686  1EAA                     	;# 
  4687  1EB1                     	;# 
  4688  1EB2                     	;# 
  4689  1EB8                     	;# 
  4690  1EB9                     	;# 
  4691  1EBA                     	;# 
  4692  1EBB                     	;# 
  4693  1EBC                     	;# 
  4694  1EBD                     	;# 
  4695  1EBE                     	;# 
  4696  1EC3                     	;# 
  4697  1EC5                     	;# 
  4698  1EC6                     	;# 
  4699  1EC7                     	;# 
  4700  1EC8                     	;# 
  4701  1EC9                     	;# 
  4702  1ECA                     	;# 
  4703  1ECB                     	;# 
  4704  1ECB                     	;# 
  4705  1ECB                     	;# 
  4706  1ECC                     	;# 
  4707  1ECC                     	;# 
  4708  1ECC                     	;# 
  4709  1F10                     	;# 
  4710  1F11                     	;# 
  4711  1F12                     	;# 
  4712  1F14                     	;# 
  4713  1F15                     	;# 
  4714  1F1C                     	;# 
  4715  1F1D                     	;# 
  4716  1F1E                     	;# 
  4717  1F1F                     	;# 
  4718  1F20                     	;# 
  4719  1F21                     	;# 
  4720  1F22                     	;# 
  4721  1F23                     	;# 
  4722  1F24                     	;# 
  4723  1F25                     	;# 
  4724  1F26                     	;# 
  4725  1F27                     	;# 
  4726  1F38                     	;# 
  4727  1F39                     	;# 
  4728  1F3A                     	;# 
  4729  1F3B                     	;# 
  4730  1F3C                     	;# 
  4731  1F3D                     	;# 
  4732  1F3E                     	;# 
  4733  1F3F                     	;# 
  4734  1F43                     	;# 
  4735  1F44                     	;# 
  4736  1F45                     	;# 
  4737  1F46                     	;# 
  4738  1F47                     	;# 
  4739  1F48                     	;# 
  4740  1F49                     	;# 
  4741  1F4A                     	;# 
  4742  1F4E                     	;# 
  4743  1F4F                     	;# 
  4744  1F50                     	;# 
  4745  1F51                     	;# 
  4746  1F52                     	;# 
  4747  1F53                     	;# 
  4748  1F54                     	;# 
  4749  1F55                     	;# 
  4750  1FE4                     	;# 
  4751  1FE5                     	;# 
  4752  1FE6                     	;# 
  4753  1FE7                     	;# 
  4754  1FE8                     	;# 
  4755  1FE8                     	;# 
  4756  1FE9                     	;# 
  4757  1FEA                     	;# 
  4758  1FEB                     	;# 
  4759  1FED                     	;# 
  4760  1FEE                     	;# 
  4761  1FEF                     	;# 
  4762  0000                     	;# 
  4763  0001                     	;# 
  4764  0002                     	;# 
  4765  0003                     	;# 
  4766  0004                     	;# 
  4767  0005                     	;# 
  4768  0006                     	;# 
  4769  0007                     	;# 
  4770  0008                     	;# 
  4771  0009                     	;# 
  4772  000A                     	;# 
  4773  000B                     	;# 
  4774  000C                     	;# 
  4775  000D                     	;# 
  4776  000E                     	;# 
  4777  0012                     	;# 
  4778  0013                     	;# 
  4779  0014                     	;# 
  4780  0018                     	;# 
  4781  0019                     	;# 
  4782  001A                     	;# 
  4783  008C                     	;# 
  4784  008C                     	;# 
  4785  008D                     	;# 
  4786  008E                     	;# 
  4787  008E                     	;# 
  4788  008F                     	;# 
  4789  0090                     	;# 
  4790  0090                     	;# 
  4791  0091                     	;# 
  4792  0092                     	;# 
  4793  0092                     	;# 
  4794  0093                     	;# 
  4795  0094                     	;# 
  4796  0094                     	;# 
  4797  0095                     	;# 
  4798  0096                     	;# 
  4799  0096                     	;# 
  4800  0097                     	;# 
  4801  0098                     	;# 
  4802  0099                     	;# 
  4803  009A                     	;# 
  4804  009B                     	;# 
  4805  009B                     	;# 
  4806  009C                     	;# 
  4807  009D                     	;# 
  4808  009D                     	;# 
  4809  009E                     	;# 
  4810  009F                     	;# 
  4811  010C                     	;# 
  4812  010C                     	;# 
  4813  010D                     	;# 
  4814  010E                     	;# 
  4815  010F                     	;# 
  4816  010F                     	;# 
  4817  0110                     	;# 
  4818  0111                     	;# 
  4819  0112                     	;# 
  4820  0113                     	;# 
  4821  0114                     	;# 
  4822  0115                     	;# 
  4823  0116                     	;# 
  4824  0117                     	;# 
  4825  0118                     	;# 
  4826  0119                     	;# 
  4827  0119                     	;# 
  4828  0119                     	;# 
  4829  011A                     	;# 
  4830  011A                     	;# 
  4831  011A                     	;# 
  4832  011B                     	;# 
  4833  011B                     	;# 
  4834  011B                     	;# 
  4835  011B                     	;# 
  4836  011B                     	;# 
  4837  011C                     	;# 
  4838  011C                     	;# 
  4839  011C                     	;# 
  4840  011D                     	;# 
  4841  011D                     	;# 
  4842  011D                     	;# 
  4843  011E                     	;# 
  4844  011E                     	;# 
  4845  011E                     	;# 
  4846  011F                     	;# 
  4847  011F                     	;# 
  4848  011F                     	;# 
  4849  011F                     	;# 
  4850  011F                     	;# 
  4851  018C                     	;# 
  4852  018D                     	;# 
  4853  018E                     	;# 
  4854  018F                     	;# 
  4855  0190                     	;# 
  4856  0191                     	;# 
  4857  0192                     	;# 
  4858  0196                     	;# 
  4859  0197                     	;# 
  4860  0198                     	;# 
  4861  0199                     	;# 
  4862  019A                     	;# 
  4863  019B                     	;# 
  4864  019C                     	;# 
  4865  020C                     	;# 
  4866  020D                     	;# 
  4867  020E                     	;# 
  4868  020E                     	;# 
  4869  020F                     	;# 
  4870  020F                     	;# 
  4871  0210                     	;# 
  4872  0210                     	;# 
  4873  0211                     	;# 
  4874  0211                     	;# 
  4875  0212                     	;# 
  4876  0213                     	;# 
  4877  0214                     	;# 
  4878  0214                     	;# 
  4879  0215                     	;# 
  4880  0215                     	;# 
  4881  0216                     	;# 
  4882  0216                     	;# 
  4883  0217                     	;# 
  4884  0217                     	;# 
  4885  0218                     	;# 
  4886  0219                     	;# 
  4887  021A                     	;# 
  4888  021A                     	;# 
  4889  021B                     	;# 
  4890  021B                     	;# 
  4891  021C                     	;# 
  4892  021C                     	;# 
  4893  021D                     	;# 
  4894  021D                     	;# 
  4895  021E                     	;# 
  4896  021F                     	;# 
  4897  028C                     	;# 
  4898  028C                     	;# 
  4899  028D                     	;# 
  4900  028D                     	;# 
  4901  028E                     	;# 
  4902  028F                     	;# 
  4903  0290                     	;# 
  4904  0291                     	;# 
  4905  0292                     	;# 
  4906  0292                     	;# 
  4907  0293                     	;# 
  4908  0293                     	;# 
  4909  0294                     	;# 
  4910  0295                     	;# 
  4911  0296                     	;# 
  4912  0297                     	;# 
  4913  0298                     	;# 
  4914  0298                     	;# 
  4915  0299                     	;# 
  4916  0299                     	;# 
  4917  029A                     	;# 
  4918  029B                     	;# 
  4919  029C                     	;# 
  4920  029D                     	;# 
  4921  029F                     	;# 
  4922  030C                     	;# 
  4923  030C                     	;# 
  4924  030D                     	;# 
  4925  030E                     	;# 
  4926  030F                     	;# 
  4927  0310                     	;# 
  4928  0310                     	;# 
  4929  0311                     	;# 
  4930  0312                     	;# 
  4931  0313                     	;# 
  4932  0314                     	;# 
  4933  0314                     	;# 
  4934  0315                     	;# 
  4935  0316                     	;# 
  4936  0317                     	;# 
  4937  0318                     	;# 
  4938  0318                     	;# 
  4939  0319                     	;# 
  4940  031A                     	;# 
  4941  031B                     	;# 
  4942  038C                     	;# 
  4943  038C                     	;# 
  4944  038D                     	;# 
  4945  038E                     	;# 
  4946  0390                     	;# 
  4947  0390                     	;# 
  4948  0391                     	;# 
  4949  0392                     	;# 
  4950  048C                     	;# 
  4951  048C                     	;# 
  4952  048D                     	;# 
  4953  048E                     	;# 
  4954  048F                     	;# 
  4955  048F                     	;# 
  4956  0490                     	;# 
  4957  0491                     	;# 
  4958  0492                     	;# 
  4959  0492                     	;# 
  4960  0493                     	;# 
  4961  0494                     	;# 
  4962  0495                     	;# 
  4963  0495                     	;# 
  4964  0496                     	;# 
  4965  0497                     	;# 
  4966  0498                     	;# 
  4967  0499                     	;# 
  4968  049A                     	;# 
  4969  049B                     	;# 
  4970  049C                     	;# 
  4971  049D                     	;# 
  4972  058C                     	;# 
  4973  058C                     	;# 
  4974  058D                     	;# 
  4975  058E                     	;# 
  4976  058F                     	;# 
  4977  058F                     	;# 
  4978  0590                     	;# 
  4979  0591                     	;# 
  4980  0592                     	;# 
  4981  0593                     	;# 
  4982  059C                     	;# 
  4983  059C                     	;# 
  4984  059D                     	;# 
  4985  059D                     	;# 
  4986  059E                     	;# 
  4987  059F                     	;# 
  4988  060C                     	;# 
  4989  060C                     	;# 
  4990  060D                     	;# 
  4991  060D                     	;# 
  4992  060E                     	;# 
  4993  060F                     	;# 
  4994  0610                     	;# 
  4995  0611                     	;# 
  4996  0612                     	;# 
  4997  0613                     	;# 
  4998  0614                     	;# 
  4999  0616                     	;# 
  5000  0616                     	;# 
  5001  0617                     	;# 
  5002  0617                     	;# 
  5003  0618                     	;# 
  5004  0619                     	;# 
  5005  061A                     	;# 
  5006  061B                     	;# 
  5007  061C                     	;# 
  5008  061D                     	;# 
  5009  061E                     	;# 
  5010  070C                     	;# 
  5011  070D                     	;# 
  5012  070E                     	;# 
  5013  070F                     	;# 
  5014  0710                     	;# 
  5015  0711                     	;# 
  5016  0712                     	;# 
  5017  0713                     	;# 
  5018  0714                     	;# 
  5019  0716                     	;# 
  5020  0717                     	;# 
  5021  0718                     	;# 
  5022  0719                     	;# 
  5023  071A                     	;# 
  5024  071B                     	;# 
  5025  071C                     	;# 
  5026  071D                     	;# 
  5027  071E                     	;# 
  5028  0796                     	;# 
  5029  0797                     	;# 
  5030  0798                     	;# 
  5031  0799                     	;# 
  5032  079A                     	;# 
  5033  079B                     	;# 
  5034  079C                     	;# 
  5035  079D                     	;# 
  5036  080C                     	;# 
  5037  080D                     	;# 
  5038  080E                     	;# 
  5039  080F                     	;# 
  5040  0810                     	;# 
  5041  0811                     	;# 
  5042  0812                     	;# 
  5043  0813                     	;# 
  5044  0814                     	;# 
  5045  081A                     	;# 
  5046  081A                     	;# 
  5047  081B                     	;# 
  5048  081C                     	;# 
  5049  081C                     	;# 
  5050  081D                     	;# 
  5051  081E                     	;# 
  5052  081F                     	;# 
  5053  088C                     	;# 
  5054  088D                     	;# 
  5055  088E                     	;# 
  5056  088F                     	;# 
  5057  0890                     	;# 
  5058  0891                     	;# 
  5059  0892                     	;# 
  5060  0893                     	;# 
  5061  0895                     	;# 
  5062  0896                     	;# 
  5063  0897                     	;# 
  5064  0898                     	;# 
  5065  0899                     	;# 
  5066  089A                     	;# 
  5067  089B                     	;# 
  5068  090C                     	;# 
  5069  090E                     	;# 
  5070  090F                     	;# 
  5071  091F                     	;# 
  5072  098F                     	;# 
  5073  098F                     	;# 
  5074  0990                     	;# 
  5075  0991                     	;# 
  5076  0992                     	;# 
  5077  0993                     	;# 
  5078  0994                     	;# 
  5079  0995                     	;# 
  5080  0996                     	;# 
  5081  0997                     	;# 
  5082  1E0F                     	;# 
  5083  1E10                     	;# 
  5084  1E11                     	;# 
  5085  1E12                     	;# 
  5086  1E13                     	;# 
  5087  1E14                     	;# 
  5088  1E15                     	;# 
  5089  1E16                     	;# 
  5090  1E17                     	;# 
  5091  1E18                     	;# 
  5092  1E19                     	;# 
  5093  1E1A                     	;# 
  5094  1E1B                     	;# 
  5095  1E1C                     	;# 
  5096  1E1D                     	;# 
  5097  1E1E                     	;# 
  5098  1E1F                     	;# 
  5099  1E20                     	;# 
  5100  1E21                     	;# 
  5101  1E22                     	;# 
  5102  1E23                     	;# 
  5103  1E24                     	;# 
  5104  1E25                     	;# 
  5105  1E26                     	;# 
  5106  1E27                     	;# 
  5107  1E28                     	;# 
  5108  1E29                     	;# 
  5109  1E2A                     	;# 
  5110  1E2B                     	;# 
  5111  1E2C                     	;# 
  5112  1E2D                     	;# 
  5113  1E2E                     	;# 
  5114  1E2F                     	;# 
  5115  1E30                     	;# 
  5116  1E31                     	;# 
  5117  1E32                     	;# 
  5118  1E33                     	;# 
  5119  1E34                     	;# 
  5120  1E35                     	;# 
  5121  1E36                     	;# 
  5122  1E37                     	;# 
  5123  1E8F                     	;# 
  5124  1E90                     	;# 
  5125  1E91                     	;# 
  5126  1E92                     	;# 
  5127  1E93                     	;# 
  5128  1E94                     	;# 
  5129  1E95                     	;# 
  5130  1E96                     	;# 
  5131  1E97                     	;# 
  5132  1E9C                     	;# 
  5133  1E9D                     	;# 
  5134  1E9E                     	;# 
  5135  1EA1                     	;# 
  5136  1EA2                     	;# 
  5137  1EA3                     	;# 
  5138  1EA4                     	;# 
  5139  1EA9                     	;# 
  5140  1EAA                     	;# 
  5141  1EB1                     	;# 
  5142  1EB2                     	;# 
  5143  1EB8                     	;# 
  5144  1EB9                     	;# 
  5145  1EBA                     	;# 
  5146  1EBB                     	;# 
  5147  1EBC                     	;# 
  5148  1EBD                     	;# 
  5149  1EBE                     	;# 
  5150  1EC3                     	;# 
  5151  1EC5                     	;# 
  5152  1EC6                     	;# 
  5153  1EC7                     	;# 
  5154  1EC8                     	;# 
  5155  1EC9                     	;# 
  5156  1ECA                     	;# 
  5157  1ECB                     	;# 
  5158  1ECB                     	;# 
  5159  1ECB                     	;# 
  5160  1ECC                     	;# 
  5161  1ECC                     	;# 
  5162  1ECC                     	;# 
  5163  1F10                     	;# 
  5164  1F11                     	;# 
  5165  1F12                     	;# 
  5166  1F14                     	;# 
  5167  1F15                     	;# 
  5168  1F1C                     	;# 
  5169  1F1D                     	;# 
  5170  1F1E                     	;# 
  5171  1F1F                     	;# 
  5172  1F20                     	;# 
  5173  1F21                     	;# 
  5174  1F22                     	;# 
  5175  1F23                     	;# 
  5176  1F24                     	;# 
  5177  1F25                     	;# 
  5178  1F26                     	;# 
  5179  1F27                     	;# 
  5180  1F38                     	;# 
  5181  1F39                     	;# 
  5182  1F3A                     	;# 
  5183  1F3B                     	;# 
  5184  1F3C                     	;# 
  5185  1F3D                     	;# 
  5186  1F3E                     	;# 
  5187  1F3F                     	;# 
  5188  1F43                     	;# 
  5189  1F44                     	;# 
  5190  1F45                     	;# 
  5191  1F46                     	;# 
  5192  1F47                     	;# 
  5193  1F48                     	;# 
  5194  1F49                     	;# 
  5195  1F4A                     	;# 
  5196  1F4E                     	;# 
  5197  1F4F                     	;# 
  5198  1F50                     	;# 
  5199  1F51                     	;# 
  5200  1F52                     	;# 
  5201  1F53                     	;# 
  5202  1F54                     	;# 
  5203  1F55                     	;# 
  5204  1FE4                     	;# 
  5205  1FE5                     	;# 
  5206  1FE6                     	;# 
  5207  1FE7                     	;# 
  5208  1FE8                     	;# 
  5209  1FE8                     	;# 
  5210  1FE9                     	;# 
  5211  1FEA                     	;# 
  5212  1FEB                     	;# 
  5213  1FED                     	;# 
  5214  1FEE                     	;# 
  5215  1FEF                     	;# 
  5216  0000                     	;# 
  5217  0001                     	;# 
  5218  0002                     	;# 
  5219  0003                     	;# 
  5220  0004                     	;# 
  5221  0005                     	;# 
  5222  0006                     	;# 
  5223  0007                     	;# 
  5224  0008                     	;# 
  5225  0009                     	;# 
  5226  000A                     	;# 
  5227  000B                     	;# 
  5228  000C                     	;# 
  5229  000D                     	;# 
  5230  000E                     	;# 
  5231  0012                     	;# 
  5232  0013                     	;# 
  5233  0014                     	;# 
  5234  0018                     	;# 
  5235  0019                     	;# 
  5236  001A                     	;# 
  5237  008C                     	;# 
  5238  008C                     	;# 
  5239  008D                     	;# 
  5240  008E                     	;# 
  5241  008E                     	;# 
  5242  008F                     	;# 
  5243  0090                     	;# 
  5244  0090                     	;# 
  5245  0091                     	;# 
  5246  0092                     	;# 
  5247  0092                     	;# 
  5248  0093                     	;# 
  5249  0094                     	;# 
  5250  0094                     	;# 
  5251  0095                     	;# 
  5252  0096                     	;# 
  5253  0096                     	;# 
  5254  0097                     	;# 
  5255  0098                     	;# 
  5256  0099                     	;# 
  5257  009A                     	;# 
  5258  009B                     	;# 
  5259  009B                     	;# 
  5260  009C                     	;# 
  5261  009D                     	;# 
  5262  009D                     	;# 
  5263  009E                     	;# 
  5264  009F                     	;# 
  5265  010C                     	;# 
  5266  010C                     	;# 
  5267  010D                     	;# 
  5268  010E                     	;# 
  5269  010F                     	;# 
  5270  010F                     	;# 
  5271  0110                     	;# 
  5272  0111                     	;# 
  5273  0112                     	;# 
  5274  0113                     	;# 
  5275  0114                     	;# 
  5276  0115                     	;# 
  5277  0116                     	;# 
  5278  0117                     	;# 
  5279  0118                     	;# 
  5280  0119                     	;# 
  5281  0119                     	;# 
  5282  0119                     	;# 
  5283  011A                     	;# 
  5284  011A                     	;# 
  5285  011A                     	;# 
  5286  011B                     	;# 
  5287  011B                     	;# 
  5288  011B                     	;# 
  5289  011B                     	;# 
  5290  011B                     	;# 
  5291  011C                     	;# 
  5292  011C                     	;# 
  5293  011C                     	;# 
  5294  011D                     	;# 
  5295  011D                     	;# 
  5296  011D                     	;# 
  5297  011E                     	;# 
  5298  011E                     	;# 
  5299  011E                     	;# 
  5300  011F                     	;# 
  5301  011F                     	;# 
  5302  011F                     	;# 
  5303  011F                     	;# 
  5304  011F                     	;# 
  5305  018C                     	;# 
  5306  018D                     	;# 
  5307  018E                     	;# 
  5308  018F                     	;# 
  5309  0190                     	;# 
  5310  0191                     	;# 
  5311  0192                     	;# 
  5312  0196                     	;# 
  5313  0197                     	;# 
  5314  0198                     	;# 
  5315  0199                     	;# 
  5316  019A                     	;# 
  5317  019B                     	;# 
  5318  019C                     	;# 
  5319  020C                     	;# 
  5320  020D                     	;# 
  5321  020E                     	;# 
  5322  020E                     	;# 
  5323  020F                     	;# 
  5324  020F                     	;# 
  5325  0210                     	;# 
  5326  0210                     	;# 
  5327  0211                     	;# 
  5328  0211                     	;# 
  5329  0212                     	;# 
  5330  0213                     	;# 
  5331  0214                     	;# 
  5332  0214                     	;# 
  5333  0215                     	;# 
  5334  0215                     	;# 
  5335  0216                     	;# 
  5336  0216                     	;# 
  5337  0217                     	;# 
  5338  0217                     	;# 
  5339  0218                     	;# 
  5340  0219                     	;# 
  5341  021A                     	;# 
  5342  021A                     	;# 
  5343  021B                     	;# 
  5344  021B                     	;# 
  5345  021C                     	;# 
  5346  021C                     	;# 
  5347  021D                     	;# 
  5348  021D                     	;# 
  5349  021E                     	;# 
  5350  021F                     	;# 
  5351  028C                     	;# 
  5352  028C                     	;# 
  5353  028D                     	;# 
  5354  028D                     	;# 
  5355  028E                     	;# 
  5356  028F                     	;# 
  5357  0290                     	;# 
  5358  0291                     	;# 
  5359  0292                     	;# 
  5360  0292                     	;# 
  5361  0293                     	;# 
  5362  0293                     	;# 
  5363  0294                     	;# 
  5364  0295                     	;# 
  5365  0296                     	;# 
  5366  0297                     	;# 
  5367  0298                     	;# 
  5368  0298                     	;# 
  5369  0299                     	;# 
  5370  0299                     	;# 
  5371  029A                     	;# 
  5372  029B                     	;# 
  5373  029C                     	;# 
  5374  029D                     	;# 
  5375  029F                     	;# 
  5376  030C                     	;# 
  5377  030C                     	;# 
  5378  030D                     	;# 
  5379  030E                     	;# 
  5380  030F                     	;# 
  5381  0310                     	;# 
  5382  0310                     	;# 
  5383  0311                     	;# 
  5384  0312                     	;# 
  5385  0313                     	;# 
  5386  0314                     	;# 
  5387  0314                     	;# 
  5388  0315                     	;# 
  5389  0316                     	;# 
  5390  0317                     	;# 
  5391  0318                     	;# 
  5392  0318                     	;# 
  5393  0319                     	;# 
  5394  031A                     	;# 
  5395  031B                     	;# 
  5396  038C                     	;# 
  5397  038C                     	;# 
  5398  038D                     	;# 
  5399  038E                     	;# 
  5400  0390                     	;# 
  5401  0390                     	;# 
  5402  0391                     	;# 
  5403  0392                     	;# 
  5404  048C                     	;# 
  5405  048C                     	;# 
  5406  048D                     	;# 
  5407  048E                     	;# 
  5408  048F                     	;# 
  5409  048F                     	;# 
  5410  0490                     	;# 
  5411  0491                     	;# 
  5412  0492                     	;# 
  5413  0492                     	;# 
  5414  0493                     	;# 
  5415  0494                     	;# 
  5416  0495                     	;# 
  5417  0495                     	;# 
  5418  0496                     	;# 
  5419  0497                     	;# 
  5420  0498                     	;# 
  5421  0499                     	;# 
  5422  049A                     	;# 
  5423  049B                     	;# 
  5424  049C                     	;# 
  5425  049D                     	;# 
  5426  058C                     	;# 
  5427  058C                     	;# 
  5428  058D                     	;# 
  5429  058E                     	;# 
  5430  058F                     	;# 
  5431  058F                     	;# 
  5432  0590                     	;# 
  5433  0591                     	;# 
  5434  0592                     	;# 
  5435  0593                     	;# 
  5436  059C                     	;# 
  5437  059C                     	;# 
  5438  059D                     	;# 
  5439  059D                     	;# 
  5440  059E                     	;# 
  5441  059F                     	;# 
  5442  060C                     	;# 
  5443  060C                     	;# 
  5444  060D                     	;# 
  5445  060D                     	;# 
  5446  060E                     	;# 
  5447  060F                     	;# 
  5448  0610                     	;# 
  5449  0611                     	;# 
  5450  0612                     	;# 
  5451  0613                     	;# 
  5452  0614                     	;# 
  5453  0616                     	;# 
  5454  0616                     	;# 
  5455  0617                     	;# 
  5456  0617                     	;# 
  5457  0618                     	;# 
  5458  0619                     	;# 
  5459  061A                     	;# 
  5460  061B                     	;# 
  5461  061C                     	;# 
  5462  061D                     	;# 
  5463  061E                     	;# 
  5464  070C                     	;# 
  5465  070D                     	;# 
  5466  070E                     	;# 
  5467  070F                     	;# 
  5468  0710                     	;# 
  5469  0711                     	;# 
  5470  0712                     	;# 
  5471  0713                     	;# 
  5472  0714                     	;# 
  5473  0716                     	;# 
  5474  0717                     	;# 
  5475  0718                     	;# 
  5476  0719                     	;# 
  5477  071A                     	;# 
  5478  071B                     	;# 
  5479  071C                     	;# 
  5480  071D                     	;# 
  5481  071E                     	;# 
  5482  0796                     	;# 
  5483  0797                     	;# 
  5484  0798                     	;# 
  5485  0799                     	;# 
  5486  079A                     	;# 
  5487  079B                     	;# 
  5488  079C                     	;# 
  5489  079D                     	;# 
  5490  080C                     	;# 
  5491  080D                     	;# 
  5492  080E                     	;# 
  5493  080F                     	;# 
  5494  0810                     	;# 
  5495  0811                     	;# 
  5496  0812                     	;# 
  5497  0813                     	;# 
  5498  0814                     	;# 
  5499  081A                     	;# 
  5500  081A                     	;# 
  5501  081B                     	;# 
  5502  081C                     	;# 
  5503  081C                     	;# 
  5504  081D                     	;# 
  5505  081E                     	;# 
  5506  081F                     	;# 
  5507  088C                     	;# 
  5508  088D                     	;# 
  5509  088E                     	;# 
  5510  088F                     	;# 
  5511  0890                     	;# 
  5512  0891                     	;# 
  5513  0892                     	;# 
  5514  0893                     	;# 
  5515  0895                     	;# 
  5516  0896                     	;# 
  5517  0897                     	;# 
  5518  0898                     	;# 
  5519  0899                     	;# 
  5520  089A                     	;# 
  5521  089B                     	;# 
  5522  090C                     	;# 
  5523  090E                     	;# 
  5524  090F                     	;# 
  5525  091F                     	;# 
  5526  098F                     	;# 
  5527  098F                     	;# 
  5528  0990                     	;# 
  5529  0991                     	;# 
  5530  0992                     	;# 
  5531  0993                     	;# 
  5532  0994                     	;# 
  5533  0995                     	;# 
  5534  0996                     	;# 
  5535  0997                     	;# 
  5536  1E0F                     	;# 
  5537  1E10                     	;# 
  5538  1E11                     	;# 
  5539  1E12                     	;# 
  5540  1E13                     	;# 
  5541  1E14                     	;# 
  5542  1E15                     	;# 
  5543  1E16                     	;# 
  5544  1E17                     	;# 
  5545  1E18                     	;# 
  5546  1E19                     	;# 
  5547  1E1A                     	;# 
  5548  1E1B                     	;# 
  5549  1E1C                     	;# 
  5550  1E1D                     	;# 
  5551  1E1E                     	;# 
  5552  1E1F                     	;# 
  5553  1E20                     	;# 
  5554  1E21                     	;# 
  5555  1E22                     	;# 
  5556  1E23                     	;# 
  5557  1E24                     	;# 
  5558  1E25                     	;# 
  5559  1E26                     	;# 
  5560  1E27                     	;# 
  5561  1E28                     	;# 
  5562  1E29                     	;# 
  5563  1E2A                     	;# 
  5564  1E2B                     	;# 
  5565  1E2C                     	;# 
  5566  1E2D                     	;# 
  5567  1E2E                     	;# 
  5568  1E2F                     	;# 
  5569  1E30                     	;# 
  5570  1E31                     	;# 
  5571  1E32                     	;# 
  5572  1E33                     	;# 
  5573  1E34                     	;# 
  5574  1E35                     	;# 
  5575  1E36                     	;# 
  5576  1E37                     	;# 
  5577  1E8F                     	;# 
  5578  1E90                     	;# 
  5579  1E91                     	;# 
  5580  1E92                     	;# 
  5581  1E93                     	;# 
  5582  1E94                     	;# 
  5583  1E95                     	;# 
  5584  1E96                     	;# 
  5585  1E97                     	;# 
  5586  1E9C                     	;# 
  5587  1E9D                     	;# 
  5588  1E9E                     	;# 
  5589  1EA1                     	;# 
  5590  1EA2                     	;# 
  5591  1EA3                     	;# 
  5592  1EA4                     	;# 
  5593  1EA9                     	;# 
  5594  1EAA                     	;# 
  5595  1EB1                     	;# 
  5596  1EB2                     	;# 
  5597  1EB8                     	;# 
  5598  1EB9                     	;# 
  5599  1EBA                     	;# 
  5600  1EBB                     	;# 
  5601  1EBC                     	;# 
  5602  1EBD                     	;# 
  5603  1EBE                     	;# 
  5604  1EC3                     	;# 
  5605  1EC5                     	;# 
  5606  1EC6                     	;# 
  5607  1EC7                     	;# 
  5608  1EC8                     	;# 
  5609  1EC9                     	;# 
  5610  1ECA                     	;# 
  5611  1ECB                     	;# 
  5612  1ECB                     	;# 
  5613  1ECB                     	;# 
  5614  1ECC                     	;# 
  5615  1ECC                     	;# 
  5616  1ECC                     	;# 
  5617  1F10                     	;# 
  5618  1F11                     	;# 
  5619  1F12                     	;# 
  5620  1F14                     	;# 
  5621  1F15                     	;# 
  5622  1F1C                     	;# 
  5623  1F1D                     	;# 
  5624  1F1E                     	;# 
  5625  1F1F                     	;# 
  5626  1F20                     	;# 
  5627  1F21                     	;# 
  5628  1F22                     	;# 
  5629  1F23                     	;# 
  5630  1F24                     	;# 
  5631  1F25                     	;# 
  5632  1F26                     	;# 
  5633  1F27                     	;# 
  5634  1F38                     	;# 
  5635  1F39                     	;# 
  5636  1F3A                     	;# 
  5637  1F3B                     	;# 
  5638  1F3C                     	;# 
  5639  1F3D                     	;# 
  5640  1F3E                     	;# 
  5641  1F3F                     	;# 
  5642  1F43                     	;# 
  5643  1F44                     	;# 
  5644  1F45                     	;# 
  5645  1F46                     	;# 
  5646  1F47                     	;# 
  5647  1F48                     	;# 
  5648  1F49                     	;# 
  5649  1F4A                     	;# 
  5650  1F4E                     	;# 
  5651  1F4F                     	;# 
  5652  1F50                     	;# 
  5653  1F51                     	;# 
  5654  1F52                     	;# 
  5655  1F53                     	;# 
  5656  1F54                     	;# 
  5657  1F55                     	;# 
  5658  1FE4                     	;# 
  5659  1FE5                     	;# 
  5660  1FE6                     	;# 
  5661  1FE7                     	;# 
  5662  1FE8                     	;# 
  5663  1FE8                     	;# 
  5664  1FE9                     	;# 
  5665  1FEA                     	;# 
  5666  1FEB                     	;# 
  5667  1FED                     	;# 
  5668  1FEE                     	;# 
  5669  1FEF                     	;# 
  5670  0000                     	;# 
  5671  0001                     	;# 
  5672  0002                     	;# 
  5673  0003                     	;# 
  5674  0004                     	;# 
  5675  0005                     	;# 
  5676  0006                     	;# 
  5677  0007                     	;# 
  5678  0008                     	;# 
  5679  0009                     	;# 
  5680  000A                     	;# 
  5681  000B                     	;# 
  5682  000C                     	;# 
  5683  000D                     	;# 
  5684  000E                     	;# 
  5685  0012                     	;# 
  5686  0013                     	;# 
  5687  0014                     	;# 
  5688  0018                     	;# 
  5689  0019                     	;# 
  5690  001A                     	;# 
  5691  008C                     	;# 
  5692  008C                     	;# 
  5693  008D                     	;# 
  5694  008E                     	;# 
  5695  008E                     	;# 
  5696  008F                     	;# 
  5697  0090                     	;# 
  5698  0090                     	;# 
  5699  0091                     	;# 
  5700  0092                     	;# 
  5701  0092                     	;# 
  5702  0093                     	;# 
  5703  0094                     	;# 
  5704  0094                     	;# 
  5705  0095                     	;# 
  5706  0096                     	;# 
  5707  0096                     	;# 
  5708  0097                     	;# 
  5709  0098                     	;# 
  5710  0099                     	;# 
  5711  009A                     	;# 
  5712  009B                     	;# 
  5713  009B                     	;# 
  5714  009C                     	;# 
  5715  009D                     	;# 
  5716  009D                     	;# 
  5717  009E                     	;# 
  5718  009F                     	;# 
  5719  010C                     	;# 
  5720  010C                     	;# 
  5721  010D                     	;# 
  5722  010E                     	;# 
  5723  010F                     	;# 
  5724  010F                     	;# 
  5725  0110                     	;# 
  5726  0111                     	;# 
  5727  0112                     	;# 
  5728  0113                     	;# 
  5729  0114                     	;# 
  5730  0115                     	;# 
  5731  0116                     	;# 
  5732  0117                     	;# 
  5733  0118                     	;# 
  5734  0119                     	;# 
  5735  0119                     	;# 
  5736  0119                     	;# 
  5737  011A                     	;# 
  5738  011A                     	;# 
  5739  011A                     	;# 
  5740  011B                     	;# 
  5741  011B                     	;# 
  5742  011B                     	;# 
  5743  011B                     	;# 
  5744  011B                     	;# 
  5745  011C                     	;# 
  5746  011C                     	;# 
  5747  011C                     	;# 
  5748  011D                     	;# 
  5749  011D                     	;# 
  5750  011D                     	;# 
  5751  011E                     	;# 
  5752  011E                     	;# 
  5753  011E                     	;# 
  5754  011F                     	;# 
  5755  011F                     	;# 
  5756  011F                     	;# 
  5757  011F                     	;# 
  5758  011F                     	;# 
  5759  018C                     	;# 
  5760  018D                     	;# 
  5761  018E                     	;# 
  5762  018F                     	;# 
  5763  0190                     	;# 
  5764  0191                     	;# 
  5765  0192                     	;# 
  5766  0196                     	;# 
  5767  0197                     	;# 
  5768  0198                     	;# 
  5769  0199                     	;# 
  5770  019A                     	;# 
  5771  019B                     	;# 
  5772  019C                     	;# 
  5773  020C                     	;# 
  5774  020D                     	;# 
  5775  020E                     	;# 
  5776  020E                     	;# 
  5777  020F                     	;# 
  5778  020F                     	;# 
  5779  0210                     	;# 
  5780  0210                     	;# 
  5781  0211                     	;# 
  5782  0211                     	;# 
  5783  0212                     	;# 
  5784  0213                     	;# 
  5785  0214                     	;# 
  5786  0214                     	;# 
  5787  0215                     	;# 
  5788  0215                     	;# 
  5789  0216                     	;# 
  5790  0216                     	;# 
  5791  0217                     	;# 
  5792  0217                     	;# 
  5793  0218                     	;# 
  5794  0219                     	;# 
  5795  021A                     	;# 
  5796  021A                     	;# 
  5797  021B                     	;# 
  5798  021B                     	;# 
  5799  021C                     	;# 
  5800  021C                     	;# 
  5801  021D                     	;# 
  5802  021D                     	;# 
  5803  021E                     	;# 
  5804  021F                     	;# 
  5805  028C                     	;# 
  5806  028C                     	;# 
  5807  028D                     	;# 
  5808  028D                     	;# 
  5809  028E                     	;# 
  5810  028F                     	;# 
  5811  0290                     	;# 
  5812  0291                     	;# 
  5813  0292                     	;# 
  5814  0292                     	;# 
  5815  0293                     	;# 
  5816  0293                     	;# 
  5817  0294                     	;# 
  5818  0295                     	;# 
  5819  0296                     	;# 
  5820  0297                     	;# 
  5821  0298                     	;# 
  5822  0298                     	;# 
  5823  0299                     	;# 
  5824  0299                     	;# 
  5825  029A                     	;# 
  5826  029B                     	;# 
  5827  029C                     	;# 
  5828  029D                     	;# 
  5829  029F                     	;# 
  5830  030C                     	;# 
  5831  030C                     	;# 
  5832  030D                     	;# 
  5833  030E                     	;# 
  5834  030F                     	;# 
  5835  0310                     	;# 
  5836  0310                     	;# 
  5837  0311                     	;# 
  5838  0312                     	;# 
  5839  0313                     	;# 
  5840  0314                     	;# 
  5841  0314                     	;# 
  5842  0315                     	;# 
  5843  0316                     	;# 
  5844  0317                     	;# 
  5845  0318                     	;# 
  5846  0318                     	;# 
  5847  0319                     	;# 
  5848  031A                     	;# 
  5849  031B                     	;# 
  5850  038C                     	;# 
  5851  038C                     	;# 
  5852  038D                     	;# 
  5853  038E                     	;# 
  5854  0390                     	;# 
  5855  0390                     	;# 
  5856  0391                     	;# 
  5857  0392                     	;# 
  5858  048C                     	;# 
  5859  048C                     	;# 
  5860  048D                     	;# 
  5861  048E                     	;# 
  5862  048F                     	;# 
  5863  048F                     	;# 
  5864  0490                     	;# 
  5865  0491                     	;# 
  5866  0492                     	;# 
  5867  0492                     	;# 
  5868  0493                     	;# 
  5869  0494                     	;# 
  5870  0495                     	;# 
  5871  0495                     	;# 
  5872  0496                     	;# 
  5873  0497                     	;# 
  5874  0498                     	;# 
  5875  0499                     	;# 
  5876  049A                     	;# 
  5877  049B                     	;# 
  5878  049C                     	;# 
  5879  049D                     	;# 
  5880  058C                     	;# 
  5881  058C                     	;# 
  5882  058D                     	;# 
  5883  058E                     	;# 
  5884  058F                     	;# 
  5885  058F                     	;# 
  5886  0590                     	;# 
  5887  0591                     	;# 
  5888  0592                     	;# 
  5889  0593                     	;# 
  5890  059C                     	;# 
  5891  059C                     	;# 
  5892  059D                     	;# 
  5893  059D                     	;# 
  5894  059E                     	;# 
  5895  059F                     	;# 
  5896  060C                     	;# 
  5897  060C                     	;# 
  5898  060D                     	;# 
  5899  060D                     	;# 
  5900  060E                     	;# 
  5901  060F                     	;# 
  5902  0610                     	;# 
  5903  0611                     	;# 
  5904  0612                     	;# 
  5905  0613                     	;# 
  5906  0614                     	;# 
  5907  0616                     	;# 
  5908  0616                     	;# 
  5909  0617                     	;# 
  5910  0617                     	;# 
  5911  0618                     	;# 
  5912  0619                     	;# 
  5913  061A                     	;# 
  5914  061B                     	;# 
  5915  061C                     	;# 
  5916  061D                     	;# 
  5917  061E                     	;# 
  5918  070C                     	;# 
  5919  070D                     	;# 
  5920  070E                     	;# 
  5921  070F                     	;# 
  5922  0710                     	;# 
  5923  0711                     	;# 
  5924  0712                     	;# 
  5925  0713                     	;# 
  5926  0714                     	;# 
  5927  0716                     	;# 
  5928  0717                     	;# 
  5929  0718                     	;# 
  5930  0719                     	;# 
  5931  071A                     	;# 
  5932  071B                     	;# 
  5933  071C                     	;# 
  5934  071D                     	;# 
  5935  071E                     	;# 
  5936  0796                     	;# 
  5937  0797                     	;# 
  5938  0798                     	;# 
  5939  0799                     	;# 
  5940  079A                     	;# 
  5941  079B                     	;# 
  5942  079C                     	;# 
  5943  079D                     	;# 
  5944  080C                     	;# 
  5945  080D                     	;# 
  5946  080E                     	;# 
  5947  080F                     	;# 
  5948  0810                     	;# 
  5949  0811                     	;# 
  5950  0812                     	;# 
  5951  0813                     	;# 
  5952  0814                     	;# 
  5953  081A                     	;# 
  5954  081A                     	;# 
  5955  081B                     	;# 
  5956  081C                     	;# 
  5957  081C                     	;# 
  5958  081D                     	;# 
  5959  081E                     	;# 
  5960  081F                     	;# 
  5961  088C                     	;# 
  5962  088D                     	;# 
  5963  088E                     	;# 
  5964  088F                     	;# 
  5965  0890                     	;# 
  5966  0891                     	;# 
  5967  0892                     	;# 
  5968  0893                     	;# 
  5969  0895                     	;# 
  5970  0896                     	;# 
  5971  0897                     	;# 
  5972  0898                     	;# 
  5973  0899                     	;# 
  5974  089A                     	;# 
  5975  089B                     	;# 
  5976  090C                     	;# 
  5977  090E                     	;# 
  5978  090F                     	;# 
  5979  091F                     	;# 
  5980  098F                     	;# 
  5981  098F                     	;# 
  5982  0990                     	;# 
  5983  0991                     	;# 
  5984  0992                     	;# 
  5985  0993                     	;# 
  5986  0994                     	;# 
  5987  0995                     	;# 
  5988  0996                     	;# 
  5989  0997                     	;# 
  5990  1E0F                     	;# 
  5991  1E10                     	;# 
  5992  1E11                     	;# 
  5993  1E12                     	;# 
  5994  1E13                     	;# 
  5995  1E14                     	;# 
  5996  1E15                     	;# 
  5997  1E16                     	;# 
  5998  1E17                     	;# 
  5999  1E18                     	;# 
  6000  1E19                     	;# 
  6001  1E1A                     	;# 
  6002  1E1B                     	;# 
  6003  1E1C                     	;# 
  6004  1E1D                     	;# 
  6005  1E1E                     	;# 
  6006  1E1F                     	;# 
  6007  1E20                     	;# 
  6008  1E21                     	;# 
  6009  1E22                     	;# 
  6010  1E23                     	;# 
  6011  1E24                     	;# 
  6012  1E25                     	;# 
  6013  1E26                     	;# 
  6014  1E27                     	;# 
  6015  1E28                     	;# 
  6016  1E29                     	;# 
  6017  1E2A                     	;# 
  6018  1E2B                     	;# 
  6019  1E2C                     	;# 
  6020  1E2D                     	;# 
  6021  1E2E                     	;# 
  6022  1E2F                     	;# 
  6023  1E30                     	;# 
  6024  1E31                     	;# 
  6025  1E32                     	;# 
  6026  1E33                     	;# 
  6027  1E34                     	;# 
  6028  1E35                     	;# 
  6029  1E36                     	;# 
  6030  1E37                     	;# 
  6031  1E8F                     	;# 
  6032  1E90                     	;# 
  6033  1E91                     	;# 
  6034  1E92                     	;# 
  6035  1E93                     	;# 
  6036  1E94                     	;# 
  6037  1E95                     	;# 
  6038  1E96                     	;# 
  6039  1E97                     	;# 
  6040  1E9C                     	;# 
  6041  1E9D                     	;# 
  6042  1E9E                     	;# 
  6043  1EA1                     	;# 
  6044  1EA2                     	;# 
  6045  1EA3                     	;# 
  6046  1EA4                     	;# 
  6047  1EA9                     	;# 
  6048  1EAA                     	;# 
  6049  1EB1                     	;# 
  6050  1EB2                     	;# 
  6051  1EB8                     	;# 
  6052  1EB9                     	;# 
  6053  1EBA                     	;# 
  6054  1EBB                     	;# 
  6055  1EBC                     	;# 
  6056  1EBD                     	;# 
  6057  1EBE                     	;# 
  6058  1EC3                     	;# 
  6059  1EC5                     	;# 
  6060  1EC6                     	;# 
  6061  1EC7                     	;# 
  6062  1EC8                     	;# 
  6063  1EC9                     	;# 
  6064  1ECA                     	;# 
  6065  1ECB                     	;# 
  6066  1ECB                     	;# 
  6067  1ECB                     	;# 
  6068  1ECC                     	;# 
  6069  1ECC                     	;# 
  6070  1ECC                     	;# 
  6071  1F10                     	;# 
  6072  1F11                     	;# 
  6073  1F12                     	;# 
  6074  1F14                     	;# 
  6075  1F15                     	;# 
  6076  1F1C                     	;# 
  6077  1F1D                     	;# 
  6078  1F1E                     	;# 
  6079  1F1F                     	;# 
  6080  1F20                     	;# 
  6081  1F21                     	;# 
  6082  1F22                     	;# 
  6083  1F23                     	;# 
  6084  1F24                     	;# 
  6085  1F25                     	;# 
  6086  1F26                     	;# 
  6087  1F27                     	;# 
  6088  1F38                     	;# 
  6089  1F39                     	;# 
  6090  1F3A                     	;# 
  6091  1F3B                     	;# 
  6092  1F3C                     	;# 
  6093  1F3D                     	;# 
  6094  1F3E                     	;# 
  6095  1F3F                     	;# 
  6096  1F43                     	;# 
  6097  1F44                     	;# 
  6098  1F45                     	;# 
  6099  1F46                     	;# 
  6100  1F47                     	;# 
  6101  1F48                     	;# 
  6102  1F49                     	;# 
  6103  1F4A                     	;# 
  6104  1F4E                     	;# 
  6105  1F4F                     	;# 
  6106  1F50                     	;# 
  6107  1F51                     	;# 
  6108  1F52                     	;# 
  6109  1F53                     	;# 
  6110  1F54                     	;# 
  6111  1F55                     	;# 
  6112  1FE4                     	;# 
  6113  1FE5                     	;# 
  6114  1FE6                     	;# 
  6115  1FE7                     	;# 
  6116  1FE8                     	;# 
  6117  1FE8                     	;# 
  6118  1FE9                     	;# 
  6119  1FEA                     	;# 
  6120  1FEB                     	;# 
  6121  1FED                     	;# 
  6122  1FEE                     	;# 
  6123  1FEF                     	;# 
  6124  0000                     	;# 
  6125  0001                     	;# 
  6126  0002                     	;# 
  6127  0003                     	;# 
  6128  0004                     	;# 
  6129  0005                     	;# 
  6130  0006                     	;# 
  6131  0007                     	;# 
  6132  0008                     	;# 
  6133  0009                     	;# 
  6134  000A                     	;# 
  6135  000B                     	;# 
  6136  000C                     	;# 
  6137  000D                     	;# 
  6138  000E                     	;# 
  6139  0012                     	;# 
  6140  0013                     	;# 
  6141  0014                     	;# 
  6142  0018                     	;# 
  6143  0019                     	;# 
  6144  001A                     	;# 
  6145  008C                     	;# 
  6146  008C                     	;# 
  6147  008D                     	;# 
  6148  008E                     	;# 
  6149  008E                     	;# 
  6150  008F                     	;# 
  6151  0090                     	;# 
  6152  0090                     	;# 
  6153  0091                     	;# 
  6154  0092                     	;# 
  6155  0092                     	;# 
  6156  0093                     	;# 
  6157  0094                     	;# 
  6158  0094                     	;# 
  6159  0095                     	;# 
  6160  0096                     	;# 
  6161  0096                     	;# 
  6162  0097                     	;# 
  6163  0098                     	;# 
  6164  0099                     	;# 
  6165  009A                     	;# 
  6166  009B                     	;# 
  6167  009B                     	;# 
  6168  009C                     	;# 
  6169  009D                     	;# 
  6170  009D                     	;# 
  6171  009E                     	;# 
  6172  009F                     	;# 
  6173  010C                     	;# 
  6174  010C                     	;# 
  6175  010D                     	;# 
  6176  010E                     	;# 
  6177  010F                     	;# 
  6178  010F                     	;# 
  6179  0110                     	;# 
  6180  0111                     	;# 
  6181  0112                     	;# 
  6182  0113                     	;# 
  6183  0114                     	;# 
  6184  0115                     	;# 
  6185  0116                     	;# 
  6186  0117                     	;# 
  6187  0118                     	;# 
  6188  0119                     	;# 
  6189  0119                     	;# 
  6190  0119                     	;# 
  6191  011A                     	;# 
  6192  011A                     	;# 
  6193  011A                     	;# 
  6194  011B                     	;# 
  6195  011B                     	;# 
  6196  011B                     	;# 
  6197  011B                     	;# 
  6198  011B                     	;# 
  6199  011C                     	;# 
  6200  011C                     	;# 
  6201  011C                     	;# 
  6202  011D                     	;# 
  6203  011D                     	;# 
  6204  011D                     	;# 
  6205  011E                     	;# 
  6206  011E                     	;# 
  6207  011E                     	;# 
  6208  011F                     	;# 
  6209  011F                     	;# 
  6210  011F                     	;# 
  6211  011F                     	;# 
  6212  011F                     	;# 
  6213  018C                     	;# 
  6214  018D                     	;# 
  6215  018E                     	;# 
  6216  018F                     	;# 
  6217  0190                     	;# 
  6218  0191                     	;# 
  6219  0192                     	;# 
  6220  0196                     	;# 
  6221  0197                     	;# 
  6222  0198                     	;# 
  6223  0199                     	;# 
  6224  019A                     	;# 
  6225  019B                     	;# 
  6226  019C                     	;# 
  6227  020C                     	;# 
  6228  020D                     	;# 
  6229  020E                     	;# 
  6230  020E                     	;# 
  6231  020F                     	;# 
  6232  020F                     	;# 
  6233  0210                     	;# 
  6234  0210                     	;# 
  6235  0211                     	;# 
  6236  0211                     	;# 
  6237  0212                     	;# 
  6238  0213                     	;# 
  6239  0214                     	;# 
  6240  0214                     	;# 
  6241  0215                     	;# 
  6242  0215                     	;# 
  6243  0216                     	;# 
  6244  0216                     	;# 
  6245  0217                     	;# 
  6246  0217                     	;# 
  6247  0218                     	;# 
  6248  0219                     	;# 
  6249  021A                     	;# 
  6250  021A                     	;# 
  6251  021B                     	;# 
  6252  021B                     	;# 
  6253  021C                     	;# 
  6254  021C                     	;# 
  6255  021D                     	;# 
  6256  021D                     	;# 
  6257  021E                     	;# 
  6258  021F                     	;# 
  6259  028C                     	;# 
  6260  028C                     	;# 
  6261  028D                     	;# 
  6262  028D                     	;# 
  6263  028E                     	;# 
  6264  028F                     	;# 
  6265  0290                     	;# 
  6266  0291                     	;# 
  6267  0292                     	;# 
  6268  0292                     	;# 
  6269  0293                     	;# 
  6270  0293                     	;# 
  6271  0294                     	;# 
  6272  0295                     	;# 
  6273  0296                     	;# 
  6274  0297                     	;# 
  6275  0298                     	;# 
  6276  0298                     	;# 
  6277  0299                     	;# 
  6278  0299                     	;# 
  6279  029A                     	;# 
  6280  029B                     	;# 
  6281  029C                     	;# 
  6282  029D                     	;# 
  6283  029F                     	;# 
  6284  030C                     	;# 
  6285  030C                     	;# 
  6286  030D                     	;# 
  6287  030E                     	;# 
  6288  030F                     	;# 
  6289  0310                     	;# 
  6290  0310                     	;# 
  6291  0311                     	;# 
  6292  0312                     	;# 
  6293  0313                     	;# 
  6294  0314                     	;# 
  6295  0314                     	;# 
  6296  0315                     	;# 
  6297  0316                     	;# 
  6298  0317                     	;# 
  6299  0318                     	;# 
  6300  0318                     	;# 
  6301  0319                     	;# 
  6302  031A                     	;# 
  6303  031B                     	;# 
  6304  038C                     	;# 
  6305  038C                     	;# 
  6306  038D                     	;# 
  6307  038E                     	;# 
  6308  0390                     	;# 
  6309  0390                     	;# 
  6310  0391                     	;# 
  6311  0392                     	;# 
  6312  048C                     	;# 
  6313  048C                     	;# 
  6314  048D                     	;# 
  6315  048E                     	;# 
  6316  048F                     	;# 
  6317  048F                     	;# 
  6318  0490                     	;# 
  6319  0491                     	;# 
  6320  0492                     	;# 
  6321  0492                     	;# 
  6322  0493                     	;# 
  6323  0494                     	;# 
  6324  0495                     	;# 
  6325  0495                     	;# 
  6326  0496                     	;# 
  6327  0497                     	;# 
  6328  0498                     	;# 
  6329  0499                     	;# 
  6330  049A                     	;# 
  6331  049B                     	;# 
  6332  049C                     	;# 
  6333  049D                     	;# 
  6334  058C                     	;# 
  6335  058C                     	;# 
  6336  058D                     	;# 
  6337  058E                     	;# 
  6338  058F                     	;# 
  6339  058F                     	;# 
  6340  0590                     	;# 
  6341  0591                     	;# 
  6342  0592                     	;# 
  6343  0593                     	;# 
  6344  059C                     	;# 
  6345  059C                     	;# 
  6346  059D                     	;# 
  6347  059D                     	;# 
  6348  059E                     	;# 
  6349  059F                     	;# 
  6350  060C                     	;# 
  6351  060C                     	;# 
  6352  060D                     	;# 
  6353  060D                     	;# 
  6354  060E                     	;# 
  6355  060F                     	;# 
  6356  0610                     	;# 
  6357  0611                     	;# 
  6358  0612                     	;# 
  6359  0613                     	;# 
  6360  0614                     	;# 
  6361  0616                     	;# 
  6362  0616                     	;# 
  6363  0617                     	;# 
  6364  0617                     	;# 
  6365  0618                     	;# 
  6366  0619                     	;# 
  6367  061A                     	;# 
  6368  061B                     	;# 
  6369  061C                     	;# 
  6370  061D                     	;# 
  6371  061E                     	;# 
  6372  070C                     	;# 
  6373  070D                     	;# 
  6374  070E                     	;# 
  6375  070F                     	;# 
  6376  0710                     	;# 
  6377  0711                     	;# 
  6378  0712                     	;# 
  6379  0713                     	;# 
  6380  0714                     	;# 
  6381  0716                     	;# 
  6382  0717                     	;# 
  6383  0718                     	;# 
  6384  0719                     	;# 
  6385  071A                     	;# 
  6386  071B                     	;# 
  6387  071C                     	;# 
  6388  071D                     	;# 
  6389  071E                     	;# 
  6390  0796                     	;# 
  6391  0797                     	;# 
  6392  0798                     	;# 
  6393  0799                     	;# 
  6394  079A                     	;# 
  6395  079B                     	;# 
  6396  079C                     	;# 
  6397  079D                     	;# 
  6398  080C                     	;# 
  6399  080D                     	;# 
  6400  080E                     	;# 
  6401  080F                     	;# 
  6402  0810                     	;# 
  6403  0811                     	;# 
  6404  0812                     	;# 
  6405  0813                     	;# 
  6406  0814                     	;# 
  6407  081A                     	;# 
  6408  081A                     	;# 
  6409  081B                     	;# 
  6410  081C                     	;# 
  6411  081C                     	;# 
  6412  081D                     	;# 
  6413  081E                     	;# 
  6414  081F                     	;# 
  6415  088C                     	;# 
  6416  088D                     	;# 
  6417  088E                     	;# 
  6418  088F                     	;# 
  6419  0890                     	;# 
  6420  0891                     	;# 
  6421  0892                     	;# 
  6422  0893                     	;# 
  6423  0895                     	;# 
  6424  0896                     	;# 
  6425  0897                     	;# 
  6426  0898                     	;# 
  6427  0899                     	;# 
  6428  089A                     	;# 
  6429  089B                     	;# 
  6430  090C                     	;# 
  6431  090E                     	;# 
  6432  090F                     	;# 
  6433  091F                     	;# 
  6434  098F                     	;# 
  6435  098F                     	;# 
  6436  0990                     	;# 
  6437  0991                     	;# 
  6438  0992                     	;# 
  6439  0993                     	;# 
  6440  0994                     	;# 
  6441  0995                     	;# 
  6442  0996                     	;# 
  6443  0997                     	;# 
  6444  1E0F                     	;# 
  6445  1E10                     	;# 
  6446  1E11                     	;# 
  6447  1E12                     	;# 
  6448  1E13                     	;# 
  6449  1E14                     	;# 
  6450  1E15                     	;# 
  6451  1E16                     	;# 
  6452  1E17                     	;# 
  6453  1E18                     	;# 
  6454  1E19                     	;# 
  6455  1E1A                     	;# 
  6456  1E1B                     	;# 
  6457  1E1C                     	;# 
  6458  1E1D                     	;# 
  6459  1E1E                     	;# 
  6460  1E1F                     	;# 
  6461  1E20                     	;# 
  6462  1E21                     	;# 
  6463  1E22                     	;# 
  6464  1E23                     	;# 
  6465  1E24                     	;# 
  6466  1E25                     	;# 
  6467  1E26                     	;# 
  6468  1E27                     	;# 
  6469  1E28                     	;# 
  6470  1E29                     	;# 
  6471  1E2A                     	;# 
  6472  1E2B                     	;# 
  6473  1E2C                     	;# 
  6474  1E2D                     	;# 
  6475  1E2E                     	;# 
  6476  1E2F                     	;# 
  6477  1E30                     	;# 
  6478  1E31                     	;# 
  6479  1E32                     	;# 
  6480  1E33                     	;# 
  6481  1E34                     	;# 
  6482  1E35                     	;# 
  6483  1E36                     	;# 
  6484  1E37                     	;# 
  6485  1E8F                     	;# 
  6486  1E90                     	;# 
  6487  1E91                     	;# 
  6488  1E92                     	;# 
  6489  1E93                     	;# 
  6490  1E94                     	;# 
  6491  1E95                     	;# 
  6492  1E96                     	;# 
  6493  1E97                     	;# 
  6494  1E9C                     	;# 
  6495  1E9D                     	;# 
  6496  1E9E                     	;# 
  6497  1EA1                     	;# 
  6498  1EA2                     	;# 
  6499  1EA3                     	;# 
  6500  1EA4                     	;# 
  6501  1EA9                     	;# 
  6502  1EAA                     	;# 
  6503  1EB1                     	;# 
  6504  1EB2                     	;# 
  6505  1EB8                     	;# 
  6506  1EB9                     	;# 
  6507  1EBA                     	;# 
  6508  1EBB                     	;# 
  6509  1EBC                     	;# 
  6510  1EBD                     	;# 
  6511  1EBE                     	;# 
  6512  1EC3                     	;# 
  6513  1EC5                     	;# 
  6514  1EC6                     	;# 
  6515  1EC7                     	;# 
  6516  1EC8                     	;# 
  6517  1EC9                     	;# 
  6518  1ECA                     	;# 
  6519  1ECB                     	;# 
  6520  1ECB                     	;# 
  6521  1ECB                     	;# 
  6522  1ECC                     	;# 
  6523  1ECC                     	;# 
  6524  1ECC                     	;# 
  6525  1F10                     	;# 
  6526  1F11                     	;# 
  6527  1F12                     	;# 
  6528  1F14                     	;# 
  6529  1F15                     	;# 
  6530  1F1C                     	;# 
  6531  1F1D                     	;# 
  6532  1F1E                     	;# 
  6533  1F1F                     	;# 
  6534  1F20                     	;# 
  6535  1F21                     	;# 
  6536  1F22                     	;# 
  6537  1F23                     	;# 
  6538  1F24                     	;# 
  6539  1F25                     	;# 
  6540  1F26                     	;# 
  6541  1F27                     	;# 
  6542  1F38                     	;# 
  6543  1F39                     	;# 
  6544  1F3A                     	;# 
  6545  1F3B                     	;# 
  6546  1F3C                     	;# 
  6547  1F3D                     	;# 
  6548  1F3E                     	;# 
  6549  1F3F                     	;# 
  6550  1F43                     	;# 
  6551  1F44                     	;# 
  6552  1F45                     	;# 
  6553  1F46                     	;# 
  6554  1F47                     	;# 
  6555  1F48                     	;# 
  6556  1F49                     	;# 
  6557  1F4A                     	;# 
  6558  1F4E                     	;# 
  6559  1F4F                     	;# 
  6560  1F50                     	;# 
  6561  1F51                     	;# 
  6562  1F52                     	;# 
  6563  1F53                     	;# 
  6564  1F54                     	;# 
  6565  1F55                     	;# 
  6566  1FE4                     	;# 
  6567  1FE5                     	;# 
  6568  1FE6                     	;# 
  6569  1FE7                     	;# 
  6570  1FE8                     	;# 
  6571  1FE8                     	;# 
  6572  1FE9                     	;# 
  6573  1FEA                     	;# 
  6574  1FEB                     	;# 
  6575  1FED                     	;# 
  6576  1FEE                     	;# 
  6577  1FEF                     	;# 
  6578  0000                     	;# 
  6579  0001                     	;# 
  6580  0002                     	;# 
  6581  0003                     	;# 
  6582  0004                     	;# 
  6583  0005                     	;# 
  6584  0006                     	;# 
  6585  0007                     	;# 
  6586  0008                     	;# 
  6587  0009                     	;# 
  6588  000A                     	;# 
  6589  000B                     	;# 
  6590  000C                     	;# 
  6591  000D                     	;# 
  6592  000E                     	;# 
  6593  0012                     	;# 
  6594  0013                     	;# 
  6595  0014                     	;# 
  6596  0018                     	;# 
  6597  0019                     	;# 
  6598  001A                     	;# 
  6599  008C                     	;# 
  6600  008C                     	;# 
  6601  008D                     	;# 
  6602  008E                     	;# 
  6603  008E                     	;# 
  6604  008F                     	;# 
  6605  0090                     	;# 
  6606  0090                     	;# 
  6607  0091                     	;# 
  6608  0092                     	;# 
  6609  0092                     	;# 
  6610  0093                     	;# 
  6611  0094                     	;# 
  6612  0094                     	;# 
  6613  0095                     	;# 
  6614  0096                     	;# 
  6615  0096                     	;# 
  6616  0097                     	;# 
  6617  0098                     	;# 
  6618  0099                     	;# 
  6619  009A                     	;# 
  6620  009B                     	;# 
  6621  009B                     	;# 
  6622  009C                     	;# 
  6623  009D                     	;# 
  6624  009D                     	;# 
  6625  009E                     	;# 
  6626  009F                     	;# 
  6627  010C                     	;# 
  6628  010C                     	;# 
  6629  010D                     	;# 
  6630  010E                     	;# 
  6631  010F                     	;# 
  6632  010F                     	;# 
  6633  0110                     	;# 
  6634  0111                     	;# 
  6635  0112                     	;# 
  6636  0113                     	;# 
  6637  0114                     	;# 
  6638  0115                     	;# 
  6639  0116                     	;# 
  6640  0117                     	;# 
  6641  0118                     	;# 
  6642  0119                     	;# 
  6643  0119                     	;# 
  6644  0119                     	;# 
  6645  011A                     	;# 
  6646  011A                     	;# 
  6647  011A                     	;# 
  6648  011B                     	;# 
  6649  011B                     	;# 
  6650  011B                     	;# 
  6651  011B                     	;# 
  6652  011B                     	;# 
  6653  011C                     	;# 
  6654  011C                     	;# 
  6655  011C                     	;# 
  6656  011D                     	;# 
  6657  011D                     	;# 
  6658  011D                     	;# 
  6659  011E                     	;# 
  6660  011E                     	;# 
  6661  011E                     	;# 
  6662  011F                     	;# 
  6663  011F                     	;# 
  6664  011F                     	;# 
  6665  011F                     	;# 
  6666  011F                     	;# 
  6667  018C                     	;# 
  6668  018D                     	;# 
  6669  018E                     	;# 
  6670  018F                     	;# 
  6671  0190                     	;# 
  6672  0191                     	;# 
  6673  0192                     	;# 
  6674  0196                     	;# 
  6675  0197                     	;# 
  6676  0198                     	;# 
  6677  0199                     	;# 
  6678  019A                     	;# 
  6679  019B                     	;# 
  6680  019C                     	;# 
  6681  020C                     	;# 
  6682  020D                     	;# 
  6683  020E                     	;# 
  6684  020E                     	;# 
  6685  020F                     	;# 
  6686  020F                     	;# 
  6687  0210                     	;# 
  6688  0210                     	;# 
  6689  0211                     	;# 
  6690  0211                     	;# 
  6691  0212                     	;# 
  6692  0213                     	;# 
  6693  0214                     	;# 
  6694  0214                     	;# 
  6695  0215                     	;# 
  6696  0215                     	;# 
  6697  0216                     	;# 
  6698  0216                     	;# 
  6699  0217                     	;# 
  6700  0217                     	;# 
  6701  0218                     	;# 
  6702  0219                     	;# 
  6703  021A                     	;# 
  6704  021A                     	;# 
  6705  021B                     	;# 
  6706  021B                     	;# 
  6707  021C                     	;# 
  6708  021C                     	;# 
  6709  021D                     	;# 
  6710  021D                     	;# 
  6711  021E                     	;# 
  6712  021F                     	;# 
  6713  028C                     	;# 
  6714  028C                     	;# 
  6715  028D                     	;# 
  6716  028D                     	;# 
  6717  028E                     	;# 
  6718  028F                     	;# 
  6719  0290                     	;# 
  6720  0291                     	;# 
  6721  0292                     	;# 
  6722  0292                     	;# 
  6723  0293                     	;# 
  6724  0293                     	;# 
  6725  0294                     	;# 
  6726  0295                     	;# 
  6727  0296                     	;# 
  6728  0297                     	;# 
  6729  0298                     	;# 
  6730  0298                     	;# 
  6731  0299                     	;# 
  6732  0299                     	;# 
  6733  029A                     	;# 
  6734  029B                     	;# 
  6735  029C                     	;# 
  6736  029D                     	;# 
  6737  029F                     	;# 
  6738  030C                     	;# 
  6739  030C                     	;# 
  6740  030D                     	;# 
  6741  030E                     	;# 
  6742  030F                     	;# 
  6743  0310                     	;# 
  6744  0310                     	;# 
  6745  0311                     	;# 
  6746  0312                     	;# 
  6747  0313                     	;# 
  6748  0314                     	;# 
  6749  0314                     	;# 
  6750  0315                     	;# 
  6751  0316                     	;# 
  6752  0317                     	;# 
  6753  0318                     	;# 
  6754  0318                     	;# 
  6755  0319                     	;# 
  6756  031A                     	;# 
  6757  031B                     	;# 
  6758  038C                     	;# 
  6759  038C                     	;# 
  6760  038D                     	;# 
  6761  038E                     	;# 
  6762  0390                     	;# 
  6763  0390                     	;# 
  6764  0391                     	;# 
  6765  0392                     	;# 
  6766  048C                     	;# 
  6767  048C                     	;# 
  6768  048D                     	;# 
  6769  048E                     	;# 
  6770  048F                     	;# 
  6771  048F                     	;# 
  6772  0490                     	;# 
  6773  0491                     	;# 
  6774  0492                     	;# 
  6775  0492                     	;# 
  6776  0493                     	;# 
  6777  0494                     	;# 
  6778  0495                     	;# 
  6779  0495                     	;# 
  6780  0496                     	;# 
  6781  0497                     	;# 
  6782  0498                     	;# 
  6783  0499                     	;# 
  6784  049A                     	;# 
  6785  049B                     	;# 
  6786  049C                     	;# 
  6787  049D                     	;# 
  6788  058C                     	;# 
  6789  058C                     	;# 
  6790  058D                     	;# 
  6791  058E                     	;# 
  6792  058F                     	;# 
  6793  058F                     	;# 
  6794  0590                     	;# 
  6795  0591                     	;# 
  6796  0592                     	;# 
  6797  0593                     	;# 
  6798  059C                     	;# 
  6799  059C                     	;# 
  6800  059D                     	;# 
  6801  059D                     	;# 
  6802  059E                     	;# 
  6803  059F                     	;# 
  6804  060C                     	;# 
  6805  060C                     	;# 
  6806  060D                     	;# 
  6807  060D                     	;# 
  6808  060E                     	;# 
  6809  060F                     	;# 
  6810  0610                     	;# 
  6811  0611                     	;# 
  6812  0612                     	;# 
  6813  0613                     	;# 
  6814  0614                     	;# 
  6815  0616                     	;# 
  6816  0616                     	;# 
  6817  0617                     	;# 
  6818  0617                     	;# 
  6819  0618                     	;# 
  6820  0619                     	;# 
  6821  061A                     	;# 
  6822  061B                     	;# 
  6823  061C                     	;# 
  6824  061D                     	;# 
  6825  061E                     	;# 
  6826  070C                     	;# 
  6827  070D                     	;# 
  6828  070E                     	;# 
  6829  070F                     	;# 
  6830  0710                     	;# 
  6831  0711                     	;# 
  6832  0712                     	;# 
  6833  0713                     	;# 
  6834  0714                     	;# 
  6835  0716                     	;# 
  6836  0717                     	;# 
  6837  0718                     	;# 
  6838  0719                     	;# 
  6839  071A                     	;# 
  6840  071B                     	;# 
  6841  071C                     	;# 
  6842  071D                     	;# 
  6843  071E                     	;# 
  6844  0796                     	;# 
  6845  0797                     	;# 
  6846  0798                     	;# 
  6847  0799                     	;# 
  6848  079A                     	;# 
  6849  079B                     	;# 
  6850  079C                     	;# 
  6851  079D                     	;# 
  6852  080C                     	;# 
  6853  080D                     	;# 
  6854  080E                     	;# 
  6855  080F                     	;# 
  6856  0810                     	;# 
  6857  0811                     	;# 
  6858  0812                     	;# 
  6859  0813                     	;# 
  6860  0814                     	;# 
  6861  081A                     	;# 
  6862  081A                     	;# 
  6863  081B                     	;# 
  6864  081C                     	;# 
  6865  081C                     	;# 
  6866  081D                     	;# 
  6867  081E                     	;# 
  6868  081F                     	;# 
  6869  088C                     	;# 
  6870  088D                     	;# 
  6871  088E                     	;# 
  6872  088F                     	;# 
  6873  0890                     	;# 
  6874  0891                     	;# 
  6875  0892                     	;# 
  6876  0893                     	;# 
  6877  0895                     	;# 
  6878  0896                     	;# 
  6879  0897                     	;# 
  6880  0898                     	;# 
  6881  0899                     	;# 
  6882  089A                     	;# 
  6883  089B                     	;# 
  6884  090C                     	;# 
  6885  090E                     	;# 
  6886  090F                     	;# 
  6887  091F                     	;# 
  6888  098F                     	;# 
  6889  098F                     	;# 
  6890  0990                     	;# 
  6891  0991                     	;# 
  6892  0992                     	;# 
  6893  0993                     	;# 
  6894  0994                     	;# 
  6895  0995                     	;# 
  6896  0996                     	;# 
  6897  0997                     	;# 
  6898  1E0F                     	;# 
  6899  1E10                     	;# 
  6900  1E11                     	;# 
  6901  1E12                     	;# 
  6902  1E13                     	;# 
  6903  1E14                     	;# 
  6904  1E15                     	;# 
  6905  1E16                     	;# 
  6906  1E17                     	;# 
  6907  1E18                     	;# 
  6908  1E19                     	;# 
  6909  1E1A                     	;# 
  6910  1E1B                     	;# 
  6911  1E1C                     	;# 
  6912  1E1D                     	;# 
  6913  1E1E                     	;# 
  6914  1E1F                     	;# 
  6915  1E20                     	;# 
  6916  1E21                     	;# 
  6917  1E22                     	;# 
  6918  1E23                     	;# 
  6919  1E24                     	;# 
  6920  1E25                     	;# 
  6921  1E26                     	;# 
  6922  1E27                     	;# 
  6923  1E28                     	;# 
  6924  1E29                     	;# 
  6925  1E2A                     	;# 
  6926  1E2B                     	;# 
  6927  1E2C                     	;# 
  6928  1E2D                     	;# 
  6929  1E2E                     	;# 
  6930  1E2F                     	;# 
  6931  1E30                     	;# 
  6932  1E31                     	;# 
  6933  1E32                     	;# 
  6934  1E33                     	;# 
  6935  1E34                     	;# 
  6936  1E35                     	;# 
  6937  1E36                     	;# 
  6938  1E37                     	;# 
  6939  1E8F                     	;# 
  6940  1E90                     	;# 
  6941  1E91                     	;# 
  6942  1E92                     	;# 
  6943  1E93                     	;# 
  6944  1E94                     	;# 
  6945  1E95                     	;# 
  6946  1E96                     	;# 
  6947  1E97                     	;# 
  6948  1E9C                     	;# 
  6949  1E9D                     	;# 
  6950  1E9E                     	;# 
  6951  1EA1                     	;# 
  6952  1EA2                     	;# 
  6953  1EA3                     	;# 
  6954  1EA4                     	;# 
  6955  1EA9                     	;# 
  6956  1EAA                     	;# 
  6957  1EB1                     	;# 
  6958  1EB2                     	;# 
  6959  1EB8                     	;# 
  6960  1EB9                     	;# 
  6961  1EBA                     	;# 
  6962  1EBB                     	;# 
  6963  1EBC                     	;# 
  6964  1EBD                     	;# 
  6965  1EBE                     	;# 
  6966  1EC3                     	;# 
  6967  1EC5                     	;# 
  6968  1EC6                     	;# 
  6969  1EC7                     	;# 
  6970  1EC8                     	;# 
  6971  1EC9                     	;# 
  6972  1ECA                     	;# 
  6973  1ECB                     	;# 
  6974  1ECB                     	;# 
  6975  1ECB                     	;# 
  6976  1ECC                     	;# 
  6977  1ECC                     	;# 
  6978  1ECC                     	;# 
  6979  1F10                     	;# 
  6980  1F11                     	;# 
  6981  1F12                     	;# 
  6982  1F14                     	;# 
  6983  1F15                     	;# 
  6984  1F1C                     	;# 
  6985  1F1D                     	;# 
  6986  1F1E                     	;# 
  6987  1F1F                     	;# 
  6988  1F20                     	;# 
  6989  1F21                     	;# 
  6990  1F22                     	;# 
  6991  1F23                     	;# 
  6992  1F24                     	;# 
  6993  1F25                     	;# 
  6994  1F26                     	;# 
  6995  1F27                     	;# 
  6996  1F38                     	;# 
  6997  1F39                     	;# 
  6998  1F3A                     	;# 
  6999  1F3B                     	;# 
  7000  1F3C                     	;# 
  7001  1F3D                     	;# 
  7002  1F3E                     	;# 
  7003  1F3F                     	;# 
  7004  1F43                     	;# 
  7005  1F44                     	;# 
  7006  1F45                     	;# 
  7007  1F46                     	;# 
  7008  1F47                     	;# 
  7009  1F48                     	;# 
  7010  1F49                     	;# 
  7011  1F4A                     	;# 
  7012  1F4E                     	;# 
  7013  1F4F                     	;# 
  7014  1F50                     	;# 
  7015  1F51                     	;# 
  7016  1F52                     	;# 
  7017  1F53                     	;# 
  7018  1F54                     	;# 
  7019  1F55                     	;# 
  7020  1FE4                     	;# 
  7021  1FE5                     	;# 
  7022  1FE6                     	;# 
  7023  1FE7                     	;# 
  7024  1FE8                     	;# 
  7025  1FE8                     	;# 
  7026  1FE9                     	;# 
  7027  1FEA                     	;# 
  7028  1FEB                     	;# 
  7029  1FED                     	;# 
  7030  1FEE                     	;# 
  7031  1FEF                     	;# 
  7032  0000                     	;# 
  7033  0001                     	;# 
  7034  0002                     	;# 
  7035  0003                     	;# 
  7036  0004                     	;# 
  7037  0005                     	;# 
  7038  0006                     	;# 
  7039  0007                     	;# 
  7040  0008                     	;# 
  7041  0009                     	;# 
  7042  000A                     	;# 
  7043  000B                     	;# 
  7044  000C                     	;# 
  7045  000D                     	;# 
  7046  000E                     	;# 
  7047  0012                     	;# 
  7048  0013                     	;# 
  7049  0014                     	;# 
  7050  0018                     	;# 
  7051  0019                     	;# 
  7052  001A                     	;# 
  7053  008C                     	;# 
  7054  008C                     	;# 
  7055  008D                     	;# 
  7056  008E                     	;# 
  7057  008E                     	;# 
  7058  008F                     	;# 
  7059  0090                     	;# 
  7060  0090                     	;# 
  7061  0091                     	;# 
  7062  0092                     	;# 
  7063  0092                     	;# 
  7064  0093                     	;# 
  7065  0094                     	;# 
  7066  0094                     	;# 
  7067  0095                     	;# 
  7068  0096                     	;# 
  7069  0096                     	;# 
  7070  0097                     	;# 
  7071  0098                     	;# 
  7072  0099                     	;# 
  7073  009A                     	;# 
  7074  009B                     	;# 
  7075  009B                     	;# 
  7076  009C                     	;# 
  7077  009D                     	;# 
  7078  009D                     	;# 
  7079  009E                     	;# 
  7080  009F                     	;# 
  7081  010C                     	;# 
  7082  010C                     	;# 
  7083  010D                     	;# 
  7084  010E                     	;# 
  7085  010F                     	;# 
  7086  010F                     	;# 
  7087  0110                     	;# 
  7088  0111                     	;# 
  7089  0112                     	;# 
  7090  0113                     	;# 
  7091  0114                     	;# 
  7092  0115                     	;# 
  7093  0116                     	;# 
  7094  0117                     	;# 
  7095  0118                     	;# 
  7096  0119                     	;# 
  7097  0119                     	;# 
  7098  0119                     	;# 
  7099  011A                     	;# 
  7100  011A                     	;# 
  7101  011A                     	;# 
  7102  011B                     	;# 
  7103  011B                     	;# 
  7104  011B                     	;# 
  7105  011B                     	;# 
  7106  011B                     	;# 
  7107  011C                     	;# 
  7108  011C                     	;# 
  7109  011C                     	;# 
  7110  011D                     	;# 
  7111  011D                     	;# 
  7112  011D                     	;# 
  7113  011E                     	;# 
  7114  011E                     	;# 
  7115  011E                     	;# 
  7116  011F                     	;# 
  7117  011F                     	;# 
  7118  011F                     	;# 
  7119  011F                     	;# 
  7120  011F                     	;# 
  7121  018C                     	;# 
  7122  018D                     	;# 
  7123  018E                     	;# 
  7124  018F                     	;# 
  7125  0190                     	;# 
  7126  0191                     	;# 
  7127  0192                     	;# 
  7128  0196                     	;# 
  7129  0197                     	;# 
  7130  0198                     	;# 
  7131  0199                     	;# 
  7132  019A                     	;# 
  7133  019B                     	;# 
  7134  019C                     	;# 
  7135  020C                     	;# 
  7136  020D                     	;# 
  7137  020E                     	;# 
  7138  020E                     	;# 
  7139  020F                     	;# 
  7140  020F                     	;# 
  7141  0210                     	;# 
  7142  0210                     	;# 
  7143  0211                     	;# 
  7144  0211                     	;# 
  7145  0212                     	;# 
  7146  0213                     	;# 
  7147  0214                     	;# 
  7148  0214                     	;# 
  7149  0215                     	;# 
  7150  0215                     	;# 
  7151  0216                     	;# 
  7152  0216                     	;# 
  7153  0217                     	;# 
  7154  0217                     	;# 
  7155  0218                     	;# 
  7156  0219                     	;# 
  7157  021A                     	;# 
  7158  021A                     	;# 
  7159  021B                     	;# 
  7160  021B                     	;# 
  7161  021C                     	;# 
  7162  021C                     	;# 
  7163  021D                     	;# 
  7164  021D                     	;# 
  7165  021E                     	;# 
  7166  021F                     	;# 
  7167  028C                     	;# 
  7168  028C                     	;# 
  7169  028D                     	;# 
  7170  028D                     	;# 
  7171  028E                     	;# 
  7172  028F                     	;# 
  7173  0290                     	;# 
  7174  0291                     	;# 
  7175  0292                     	;# 
  7176  0292                     	;# 
  7177  0293                     	;# 
  7178  0293                     	;# 
  7179  0294                     	;# 
  7180  0295                     	;# 
  7181  0296                     	;# 
  7182  0297                     	;# 
  7183  0298                     	;# 
  7184  0298                     	;# 
  7185  0299                     	;# 
  7186  0299                     	;# 
  7187  029A                     	;# 
  7188  029B                     	;# 
  7189  029C                     	;# 
  7190  029D                     	;# 
  7191  029F                     	;# 
  7192  030C                     	;# 
  7193  030C                     	;# 
  7194  030D                     	;# 
  7195  030E                     	;# 
  7196  030F                     	;# 
  7197  0310                     	;# 
  7198  0310                     	;# 
  7199  0311                     	;# 
  7200  0312                     	;# 
  7201  0313                     	;# 
  7202  0314                     	;# 
  7203  0314                     	;# 
  7204  0315                     	;# 
  7205  0316                     	;# 
  7206  0317                     	;# 
  7207  0318                     	;# 
  7208  0318                     	;# 
  7209  0319                     	;# 
  7210  031A                     	;# 
  7211  031B                     	;# 
  7212  038C                     	;# 
  7213  038C                     	;# 
  7214  038D                     	;# 
  7215  038E                     	;# 
  7216  0390                     	;# 
  7217  0390                     	;# 
  7218  0391                     	;# 
  7219  0392                     	;# 
  7220  048C                     	;# 
  7221  048C                     	;# 
  7222  048D                     	;# 
  7223  048E                     	;# 
  7224  048F                     	;# 
  7225  048F                     	;# 
  7226  0490                     	;# 
  7227  0491                     	;# 
  7228  0492                     	;# 
  7229  0492                     	;# 
  7230  0493                     	;# 
  7231  0494                     	;# 
  7232  0495                     	;# 
  7233  0495                     	;# 
  7234  0496                     	;# 
  7235  0497                     	;# 
  7236  0498                     	;# 
  7237  0499                     	;# 
  7238  049A                     	;# 
  7239  049B                     	;# 
  7240  049C                     	;# 
  7241  049D                     	;# 
  7242  058C                     	;# 
  7243  058C                     	;# 
  7244  058D                     	;# 
  7245  058E                     	;# 
  7246  058F                     	;# 
  7247  058F                     	;# 
  7248  0590                     	;# 
  7249  0591                     	;# 
  7250  0592                     	;# 
  7251  0593                     	;# 
  7252  059C                     	;# 
  7253  059C                     	;# 
  7254  059D                     	;# 
  7255  059D                     	;# 
  7256  059E                     	;# 
  7257  059F                     	;# 
  7258  060C                     	;# 
  7259  060C                     	;# 
  7260  060D                     	;# 
  7261  060D                     	;# 
  7262  060E                     	;# 
  7263  060F                     	;# 
  7264  0610                     	;# 
  7265  0611                     	;# 
  7266  0612                     	;# 
  7267  0613                     	;# 
  7268  0614                     	;# 
  7269  0616                     	;# 
  7270  0616                     	;# 
  7271  0617                     	;# 
  7272  0617                     	;# 
  7273  0618                     	;# 
  7274  0619                     	;# 
  7275  061A                     	;# 
  7276  061B                     	;# 
  7277  061C                     	;# 
  7278  061D                     	;# 
  7279  061E                     	;# 
  7280  070C                     	;# 
  7281  070D                     	;# 
  7282  070E                     	;# 
  7283  070F                     	;# 
  7284  0710                     	;# 
  7285  0711                     	;# 
  7286  0712                     	;# 
  7287  0713                     	;# 
  7288  0714                     	;# 
  7289  0716                     	;# 
  7290  0717                     	;# 
  7291  0718                     	;# 
  7292  0719                     	;# 
  7293  071A                     	;# 
  7294  071B                     	;# 
  7295  071C                     	;# 
  7296  071D                     	;# 
  7297  071E                     	;# 
  7298  0796                     	;# 
  7299  0797                     	;# 
  7300  0798                     	;# 
  7301  0799                     	;# 
  7302  079A                     	;# 
  7303  079B                     	;# 
  7304  079C                     	;# 
  7305  079D                     	;# 
  7306  080C                     	;# 
  7307  080D                     	;# 
  7308  080E                     	;# 
  7309  080F                     	;# 
  7310  0810                     	;# 
  7311  0811                     	;# 
  7312  0812                     	;# 
  7313  0813                     	;# 
  7314  0814                     	;# 
  7315  081A                     	;# 
  7316  081A                     	;# 
  7317  081B                     	;# 
  7318  081C                     	;# 
  7319  081C                     	;# 
  7320  081D                     	;# 
  7321  081E                     	;# 
  7322  081F                     	;# 
  7323  088C                     	;# 
  7324  088D                     	;# 
  7325  088E                     	;# 
  7326  088F                     	;# 
  7327  0890                     	;# 
  7328  0891                     	;# 
  7329  0892                     	;# 
  7330  0893                     	;# 
  7331  0895                     	;# 
  7332  0896                     	;# 
  7333  0897                     	;# 
  7334  0898                     	;# 
  7335  0899                     	;# 
  7336  089A                     	;# 
  7337  089B                     	;# 
  7338  090C                     	;# 
  7339  090E                     	;# 
  7340  090F                     	;# 
  7341  091F                     	;# 
  7342  098F                     	;# 
  7343  098F                     	;# 
  7344  0990                     	;# 
  7345  0991                     	;# 
  7346  0992                     	;# 
  7347  0993                     	;# 
  7348  0994                     	;# 
  7349  0995                     	;# 
  7350  0996                     	;# 
  7351  0997                     	;# 
  7352  1E0F                     	;# 
  7353  1E10                     	;# 
  7354  1E11                     	;# 
  7355  1E12                     	;# 
  7356  1E13                     	;# 
  7357  1E14                     	;# 
  7358  1E15                     	;# 
  7359  1E16                     	;# 
  7360  1E17                     	;# 
  7361  1E18                     	;# 
  7362  1E19                     	;# 
  7363  1E1A                     	;# 
  7364  1E1B                     	;# 
  7365  1E1C                     	;# 
  7366  1E1D                     	;# 
  7367  1E1E                     	;# 
  7368  1E1F                     	;# 
  7369  1E20                     	;# 
  7370  1E21                     	;# 
  7371  1E22                     	;# 
  7372  1E23                     	;# 
  7373  1E24                     	;# 
  7374  1E25                     	;# 
  7375  1E26                     	;# 
  7376  1E27                     	;# 
  7377  1E28                     	;# 
  7378  1E29                     	;# 
  7379  1E2A                     	;# 
  7380  1E2B                     	;# 
  7381  1E2C                     	;# 
  7382  1E2D                     	;# 
  7383  1E2E                     	;# 
  7384  1E2F                     	;# 
  7385  1E30                     	;# 
  7386  1E31                     	;# 
  7387  1E32                     	;# 
  7388  1E33                     	;# 
  7389  1E34                     	;# 
  7390  1E35                     	;# 
  7391  1E36                     	;# 
  7392  1E37                     	;# 
  7393  1E8F                     	;# 
  7394  1E90                     	;# 
  7395  1E91                     	;# 
  7396  1E92                     	;# 
  7397  1E93                     	;# 
  7398  1E94                     	;# 
  7399  1E95                     	;# 
  7400  1E96                     	;# 
  7401  1E97                     	;# 
  7402  1E9C                     	;# 
  7403  1E9D                     	;# 
  7404  1E9E                     	;# 
  7405  1EA1                     	;# 
  7406  1EA2                     	;# 
  7407  1EA3                     	;# 
  7408  1EA4                     	;# 
  7409  1EA9                     	;# 
  7410  1EAA                     	;# 
  7411  1EB1                     	;# 
  7412  1EB2                     	;# 
  7413  1EB8                     	;# 
  7414  1EB9                     	;# 
  7415  1EBA                     	;# 
  7416  1EBB                     	;# 
  7417  1EBC                     	;# 
  7418  1EBD                     	;# 
  7419  1EBE                     	;# 
  7420  1EC3                     	;# 
  7421  1EC5                     	;# 
  7422  1EC6                     	;# 
  7423  1EC7                     	;# 
  7424  1EC8                     	;# 
  7425  1EC9                     	;# 
  7426  1ECA                     	;# 
  7427  1ECB                     	;# 
  7428  1ECB                     	;# 
  7429  1ECB                     	;# 
  7430  1ECC                     	;# 
  7431  1ECC                     	;# 
  7432  1ECC                     	;# 
  7433  1F10                     	;# 
  7434  1F11                     	;# 
  7435  1F12                     	;# 
  7436  1F14                     	;# 
  7437  1F15                     	;# 
  7438  1F1C                     	;# 
  7439  1F1D                     	;# 
  7440  1F1E                     	;# 
  7441  1F1F                     	;# 
  7442  1F20                     	;# 
  7443  1F21                     	;# 
  7444  1F22                     	;# 
  7445  1F23                     	;# 
  7446  1F24                     	;# 
  7447  1F25                     	;# 
  7448  1F26                     	;# 
  7449  1F27                     	;# 
  7450  1F38                     	;# 
  7451  1F39                     	;# 
  7452  1F3A                     	;# 
  7453  1F3B                     	;# 
  7454  1F3C                     	;# 
  7455  1F3D                     	;# 
  7456  1F3E                     	;# 
  7457  1F3F                     	;# 
  7458  1F43                     	;# 
  7459  1F44                     	;# 
  7460  1F45                     	;# 
  7461  1F46                     	;# 
  7462  1F47                     	;# 
  7463  1F48                     	;# 
  7464  1F49                     	;# 
  7465  1F4A                     	;# 
  7466  1F4E                     	;# 
  7467  1F4F                     	;# 
  7468  1F50                     	;# 
  7469  1F51                     	;# 
  7470  1F52                     	;# 
  7471  1F53                     	;# 
  7472  1F54                     	;# 
  7473  1F55                     	;# 
  7474  1FE4                     	;# 
  7475  1FE5                     	;# 
  7476  1FE6                     	;# 
  7477  1FE7                     	;# 
  7478  1FE8                     	;# 
  7479  1FE8                     	;# 
  7480  1FE9                     	;# 
  7481  1FEA                     	;# 
  7482  1FEB                     	;# 
  7483  1FED                     	;# 
  7484  1FEE                     	;# 
  7485  1FEF                     	;# 
  7486  0000                     	;# 
  7487  0001                     	;# 
  7488  0002                     	;# 
  7489  0003                     	;# 
  7490  0004                     	;# 
  7491  0005                     	;# 
  7492  0006                     	;# 
  7493  0007                     	;# 
  7494  0008                     	;# 
  7495  0009                     	;# 
  7496  000A                     	;# 
  7497  000B                     	;# 
  7498  000C                     	;# 
  7499  000D                     	;# 
  7500  000E                     	;# 
  7501  0012                     	;# 
  7502  0013                     	;# 
  7503  0014                     	;# 
  7504  0018                     	;# 
  7505  0019                     	;# 
  7506  001A                     	;# 
  7507  008C                     	;# 
  7508  008C                     	;# 
  7509  008D                     	;# 
  7510  008E                     	;# 
  7511  008E                     	;# 
  7512  008F                     	;# 
  7513  0090                     	;# 
  7514  0090                     	;# 
  7515  0091                     	;# 
  7516  0092                     	;# 
  7517  0092                     	;# 
  7518  0093                     	;# 
  7519  0094                     	;# 
  7520  0094                     	;# 
  7521  0095                     	;# 
  7522  0096                     	;# 
  7523  0096                     	;# 
  7524  0097                     	;# 
  7525  0098                     	;# 
  7526  0099                     	;# 
  7527  009A                     	;# 
  7528  009B                     	;# 
  7529  009B                     	;# 
  7530  009C                     	;# 
  7531  009D                     	;# 
  7532  009D                     	;# 
  7533  009E                     	;# 
  7534  009F                     	;# 
  7535  010C                     	;# 
  7536  010C                     	;# 
  7537  010D                     	;# 
  7538  010E                     	;# 
  7539  010F                     	;# 
  7540  010F                     	;# 
  7541  0110                     	;# 
  7542  0111                     	;# 
  7543  0112                     	;# 
  7544  0113                     	;# 
  7545  0114                     	;# 
  7546  0115                     	;# 
  7547  0116                     	;# 
  7548  0117                     	;# 
  7549  0118                     	;# 
  7550  0119                     	;# 
  7551  0119                     	;# 
  7552  0119                     	;# 
  7553  011A                     	;# 
  7554  011A                     	;# 
  7555  011A                     	;# 
  7556  011B                     	;# 
  7557  011B                     	;# 
  7558  011B                     	;# 
  7559  011B                     	;# 
  7560  011B                     	;# 
  7561  011C                     	;# 
  7562  011C                     	;# 
  7563  011C                     	;# 
  7564  011D                     	;# 
  7565  011D                     	;# 
  7566  011D                     	;# 
  7567  011E                     	;# 
  7568  011E                     	;# 
  7569  011E                     	;# 
  7570  011F                     	;# 
  7571  011F                     	;# 
  7572  011F                     	;# 
  7573  011F                     	;# 
  7574  011F                     	;# 
  7575  018C                     	;# 
  7576  018D                     	;# 
  7577  018E                     	;# 
  7578  018F                     	;# 
  7579  0190                     	;# 
  7580  0191                     	;# 
  7581  0192                     	;# 
  7582  0196                     	;# 
  7583  0197                     	;# 
  7584  0198                     	;# 
  7585  0199                     	;# 
  7586  019A                     	;# 
  7587  019B                     	;# 
  7588  019C                     	;# 
  7589  020C                     	;# 
  7590  020D                     	;# 
  7591  020E                     	;# 
  7592  020E                     	;# 
  7593  020F                     	;# 
  7594  020F                     	;# 
  7595  0210                     	;# 
  7596  0210                     	;# 
  7597  0211                     	;# 
  7598  0211                     	;# 
  7599  0212                     	;# 
  7600  0213                     	;# 
  7601  0214                     	;# 
  7602  0214                     	;# 
  7603  0215                     	;# 
  7604  0215                     	;# 
  7605  0216                     	;# 
  7606  0216                     	;# 
  7607  0217                     	;# 
  7608  0217                     	;# 
  7609  0218                     	;# 
  7610  0219                     	;# 
  7611  021A                     	;# 
  7612  021A                     	;# 
  7613  021B                     	;# 
  7614  021B                     	;# 
  7615  021C                     	;# 
  7616  021C                     	;# 
  7617  021D                     	;# 
  7618  021D                     	;# 
  7619  021E                     	;# 
  7620  021F                     	;# 
  7621  028C                     	;# 
  7622  028C                     	;# 
  7623  028D                     	;# 
  7624  028D                     	;# 
  7625  028E                     	;# 
  7626  028F                     	;# 
  7627  0290                     	;# 
  7628  0291                     	;# 
  7629  0292                     	;# 
  7630  0292                     	;# 
  7631  0293                     	;# 
  7632  0293                     	;# 
  7633  0294                     	;# 
  7634  0295                     	;# 
  7635  0296                     	;# 
  7636  0297                     	;# 
  7637  0298                     	;# 
  7638  0298                     	;# 
  7639  0299                     	;# 
  7640  0299                     	;# 
  7641  029A                     	;# 
  7642  029B                     	;# 
  7643  029C                     	;# 
  7644  029D                     	;# 
  7645  029F                     	;# 
  7646  030C                     	;# 
  7647  030C                     	;# 
  7648  030D                     	;# 
  7649  030E                     	;# 
  7650  030F                     	;# 
  7651  0310                     	;# 
  7652  0310                     	;# 
  7653  0311                     	;# 
  7654  0312                     	;# 
  7655  0313                     	;# 
  7656  0314                     	;# 
  7657  0314                     	;# 
  7658  0315                     	;# 
  7659  0316                     	;# 
  7660  0317                     	;# 
  7661  0318                     	;# 
  7662  0318                     	;# 
  7663  0319                     	;# 
  7664  031A                     	;# 
  7665  031B                     	;# 
  7666  038C                     	;# 
  7667  038C                     	;# 
  7668  038D                     	;# 
  7669  038E                     	;# 
  7670  0390                     	;# 
  7671  0390                     	;# 
  7672  0391                     	;# 
  7673  0392                     	;# 
  7674  048C                     	;# 
  7675  048C                     	;# 
  7676  048D                     	;# 
  7677  048E                     	;# 
  7678  048F                     	;# 
  7679  048F                     	;# 
  7680  0490                     	;# 
  7681  0491                     	;# 
  7682  0492                     	;# 
  7683  0492                     	;# 
  7684  0493                     	;# 
  7685  0494                     	;# 
  7686  0495                     	;# 
  7687  0495                     	;# 
  7688  0496                     	;# 
  7689  0497                     	;# 
  7690  0498                     	;# 
  7691  0499                     	;# 
  7692  049A                     	;# 
  7693  049B                     	;# 
  7694  049C                     	;# 
  7695  049D                     	;# 
  7696  058C                     	;# 
  7697  058C                     	;# 
  7698  058D                     	;# 
  7699  058E                     	;# 
  7700  058F                     	;# 
  7701  058F                     	;# 
  7702  0590                     	;# 
  7703  0591                     	;# 
  7704  0592                     	;# 
  7705  0593                     	;# 
  7706  059C                     	;# 
  7707  059C                     	;# 
  7708  059D                     	;# 
  7709  059D                     	;# 
  7710  059E                     	;# 
  7711  059F                     	;# 
  7712  060C                     	;# 
  7713  060C                     	;# 
  7714  060D                     	;# 
  7715  060D                     	;# 
  7716  060E                     	;# 
  7717  060F                     	;# 
  7718  0610                     	;# 
  7719  0611                     	;# 
  7720  0612                     	;# 
  7721  0613                     	;# 
  7722  0614                     	;# 
  7723  0616                     	;# 
  7724  0616                     	;# 
  7725  0617                     	;# 
  7726  0617                     	;# 
  7727  0618                     	;# 
  7728  0619                     	;# 
  7729  061A                     	;# 
  7730  061B                     	;# 
  7731  061C                     	;# 
  7732  061D                     	;# 
  7733  061E                     	;# 
  7734  070C                     	;# 
  7735  070D                     	;# 
  7736  070E                     	;# 
  7737  070F                     	;# 
  7738  0710                     	;# 
  7739  0711                     	;# 
  7740  0712                     	;# 
  7741  0713                     	;# 
  7742  0714                     	;# 
  7743  0716                     	;# 
  7744  0717                     	;# 
  7745  0718                     	;# 
  7746  0719                     	;# 
  7747  071A                     	;# 
  7748  071B                     	;# 
  7749  071C                     	;# 
  7750  071D                     	;# 
  7751  071E                     	;# 
  7752  0796                     	;# 
  7753  0797                     	;# 
  7754  0798                     	;# 
  7755  0799                     	;# 
  7756  079A                     	;# 
  7757  079B                     	;# 
  7758  079C                     	;# 
  7759  079D                     	;# 
  7760  080C                     	;# 
  7761  080D                     	;# 
  7762  080E                     	;# 
  7763  080F                     	;# 
  7764  0810                     	;# 
  7765  0811                     	;# 
  7766  0812                     	;# 
  7767  0813                     	;# 
  7768  0814                     	;# 
  7769  081A                     	;# 
  7770  081A                     	;# 
  7771  081B                     	;# 
  7772  081C                     	;# 
  7773  081C                     	;# 
  7774  081D                     	;# 
  7775  081E                     	;# 
  7776  081F                     	;# 
  7777  088C                     	;# 
  7778  088D                     	;# 
  7779  088E                     	;# 
  7780  088F                     	;# 
  7781  0890                     	;# 
  7782  0891                     	;# 
  7783  0892                     	;# 
  7784  0893                     	;# 
  7785  0895                     	;# 
  7786  0896                     	;# 
  7787  0897                     	;# 
  7788  0898                     	;# 
  7789  0899                     	;# 
  7790  089A                     	;# 
  7791  089B                     	;# 
  7792  090C                     	;# 
  7793  090E                     	;# 
  7794  090F                     	;# 
  7795  091F                     	;# 
  7796  098F                     	;# 
  7797  098F                     	;# 
  7798  0990                     	;# 
  7799  0991                     	;# 
  7800  0992                     	;# 
  7801  0993                     	;# 
  7802  0994                     	;# 
  7803  0995                     	;# 
  7804  0996                     	;# 
  7805  0997                     	;# 
  7806  1E0F                     	;# 
  7807  1E10                     	;# 
  7808  1E11                     	;# 
  7809  1E12                     	;# 
  7810  1E13                     	;# 
  7811  1E14                     	;# 
  7812  1E15                     	;# 
  7813  1E16                     	;# 
  7814  1E17                     	;# 
  7815  1E18                     	;# 
  7816  1E19                     	;# 
  7817  1E1A                     	;# 
  7818  1E1B                     	;# 
  7819  1E1C                     	;# 
  7820  1E1D                     	;# 
  7821  1E1E                     	;# 
  7822  1E1F                     	;# 
  7823  1E20                     	;# 
  7824  1E21                     	;# 
  7825  1E22                     	;# 
  7826  1E23                     	;# 
  7827  1E24                     	;# 
  7828  1E25                     	;# 
  7829  1E26                     	;# 
  7830  1E27                     	;# 
  7831  1E28                     	;# 
  7832  1E29                     	;# 
  7833  1E2A                     	;# 
  7834  1E2B                     	;# 
  7835  1E2C                     	;# 
  7836  1E2D                     	;# 
  7837  1E2E                     	;# 
  7838  1E2F                     	;# 
  7839  1E30                     	;# 
  7840  1E31                     	;# 
  7841  1E32                     	;# 
  7842  1E33                     	;# 
  7843  1E34                     	;# 
  7844  1E35                     	;# 
  7845  1E36                     	;# 
  7846  1E37                     	;# 
  7847  1E8F                     	;# 
  7848  1E90                     	;# 
  7849  1E91                     	;# 
  7850  1E92                     	;# 
  7851  1E93                     	;# 
  7852  1E94                     	;# 
  7853  1E95                     	;# 
  7854  1E96                     	;# 
  7855  1E97                     	;# 
  7856  1E9C                     	;# 
  7857  1E9D                     	;# 
  7858  1E9E                     	;# 
  7859  1EA1                     	;# 
  7860  1EA2                     	;# 
  7861  1EA3                     	;# 
  7862  1EA4                     	;# 
  7863  1EA9                     	;# 
  7864  1EAA                     	;# 
  7865  1EB1                     	;# 
  7866  1EB2                     	;# 
  7867  1EB8                     	;# 
  7868  1EB9                     	;# 
  7869  1EBA                     	;# 
  7870  1EBB                     	;# 
  7871  1EBC                     	;# 
  7872  1EBD                     	;# 
  7873  1EBE                     	;# 
  7874  1EC3                     	;# 
  7875  1EC5                     	;# 
  7876  1EC6                     	;# 
  7877  1EC7                     	;# 
  7878  1EC8                     	;# 
  7879  1EC9                     	;# 
  7880  1ECA                     	;# 
  7881  1ECB                     	;# 
  7882  1ECB                     	;# 
  7883  1ECB                     	;# 
  7884  1ECC                     	;# 
  7885  1ECC                     	;# 
  7886  1ECC                     	;# 
  7887  1F10                     	;# 
  7888  1F11                     	;# 
  7889  1F12                     	;# 
  7890  1F14                     	;# 
  7891  1F15                     	;# 
  7892  1F1C                     	;# 
  7893  1F1D                     	;# 
  7894  1F1E                     	;# 
  7895  1F1F                     	;# 
  7896  1F20                     	;# 
  7897  1F21                     	;# 
  7898  1F22                     	;# 
  7899  1F23                     	;# 
  7900  1F24                     	;# 
  7901  1F25                     	;# 
  7902  1F26                     	;# 
  7903  1F27                     	;# 
  7904  1F38                     	;# 
  7905  1F39                     	;# 
  7906  1F3A                     	;# 
  7907  1F3B                     	;# 
  7908  1F3C                     	;# 
  7909  1F3D                     	;# 
  7910  1F3E                     	;# 
  7911  1F3F                     	;# 
  7912  1F43                     	;# 
  7913  1F44                     	;# 
  7914  1F45                     	;# 
  7915  1F46                     	;# 
  7916  1F47                     	;# 
  7917  1F48                     	;# 
  7918  1F49                     	;# 
  7919  1F4A                     	;# 
  7920  1F4E                     	;# 
  7921  1F4F                     	;# 
  7922  1F50                     	;# 
  7923  1F51                     	;# 
  7924  1F52                     	;# 
  7925  1F53                     	;# 
  7926  1F54                     	;# 
  7927  1F55                     	;# 
  7928  1FE4                     	;# 
  7929  1FE5                     	;# 
  7930  1FE6                     	;# 
  7931  1FE7                     	;# 
  7932  1FE8                     	;# 
  7933  1FE8                     	;# 
  7934  1FE9                     	;# 
  7935  1FEA                     	;# 
  7936  1FEB                     	;# 
  7937  1FED                     	;# 
  7938  1FEE                     	;# 
  7939  1FEF                     	;# 
  7940  0000                     	;# 
  7941  0001                     	;# 
  7942  0002                     	;# 
  7943  0003                     	;# 
  7944  0004                     	;# 
  7945  0005                     	;# 
  7946  0006                     	;# 
  7947  0007                     	;# 
  7948  0008                     	;# 
  7949  0009                     	;# 
  7950  000A                     	;# 
  7951  000B                     	;# 
  7952  000C                     	;# 
  7953  000D                     	;# 
  7954  000E                     	;# 
  7955  0012                     	;# 
  7956  0013                     	;# 
  7957  0014                     	;# 
  7958  0018                     	;# 
  7959  0019                     	;# 
  7960  001A                     	;# 
  7961  008C                     	;# 
  7962  008C                     	;# 
  7963  008D                     	;# 
  7964  008E                     	;# 
  7965  008E                     	;# 
  7966  008F                     	;# 
  7967  0090                     	;# 
  7968  0090                     	;# 
  7969  0091                     	;# 
  7970  0092                     	;# 
  7971  0092                     	;# 
  7972  0093                     	;# 
  7973  0094                     	;# 
  7974  0094                     	;# 
  7975  0095                     	;# 
  7976  0096                     	;# 
  7977  0096                     	;# 
  7978  0097                     	;# 
  7979  0098                     	;# 
  7980  0099                     	;# 
  7981  009A                     	;# 
  7982  009B                     	;# 
  7983  009B                     	;# 
  7984  009C                     	;# 
  7985  009D                     	;# 
  7986  009D                     	;# 
  7987  009E                     	;# 
  7988  009F                     	;# 
  7989  010C                     	;# 
  7990  010C                     	;# 
  7991  010D                     	;# 
  7992  010E                     	;# 
  7993  010F                     	;# 
  7994  010F                     	;# 
  7995  0110                     	;# 
  7996  0111                     	;# 
  7997  0112                     	;# 
  7998  0113                     	;# 
  7999  0114                     	;# 
  8000  0115                     	;# 
  8001  0116                     	;# 
  8002  0117                     	;# 
  8003  0118                     	;# 
  8004  0119                     	;# 
  8005  0119                     	;# 
  8006  0119                     	;# 
  8007  011A                     	;# 
  8008  011A                     	;# 
  8009  011A                     	;# 
  8010  011B                     	;# 
  8011  011B                     	;# 
  8012  011B                     	;# 
  8013  011B                     	;# 
  8014  011B                     	;# 
  8015  011C                     	;# 
  8016  011C                     	;# 
  8017  011C                     	;# 
  8018  011D                     	;# 
  8019  011D                     	;# 
  8020  011D                     	;# 
  8021  011E                     	;# 
  8022  011E                     	;# 
  8023  011E                     	;# 
  8024  011F                     	;# 
  8025  011F                     	;# 
  8026  011F                     	;# 
  8027  011F                     	;# 
  8028  011F                     	;# 
  8029  018C                     	;# 
  8030  018D                     	;# 
  8031  018E                     	;# 
  8032  018F                     	;# 
  8033  0190                     	;# 
  8034  0191                     	;# 
  8035  0192                     	;# 
  8036  0196                     	;# 
  8037  0197                     	;# 
  8038  0198                     	;# 
  8039  0199                     	;# 
  8040  019A                     	;# 
  8041  019B                     	;# 
  8042  019C                     	;# 
  8043  020C                     	;# 
  8044  020D                     	;# 
  8045  020E                     	;# 
  8046  020E                     	;# 
  8047  020F                     	;# 
  8048  020F                     	;# 
  8049  0210                     	;# 
  8050  0210                     	;# 
  8051  0211                     	;# 
  8052  0211                     	;# 
  8053  0212                     	;# 
  8054  0213                     	;# 
  8055  0214                     	;# 
  8056  0214                     	;# 
  8057  0215                     	;# 
  8058  0215                     	;# 
  8059  0216                     	;# 
  8060  0216                     	;# 
  8061  0217                     	;# 
  8062  0217                     	;# 
  8063  0218                     	;# 
  8064  0219                     	;# 
  8065  021A                     	;# 
  8066  021A                     	;# 
  8067  021B                     	;# 
  8068  021B                     	;# 
  8069  021C                     	;# 
  8070  021C                     	;# 
  8071  021D                     	;# 
  8072  021D                     	;# 
  8073  021E                     	;# 
  8074  021F                     	;# 
  8075  028C                     	;# 
  8076  028C                     	;# 
  8077  028D                     	;# 
  8078  028D                     	;# 
  8079  028E                     	;# 
  8080  028F                     	;# 
  8081  0290                     	;# 
  8082  0291                     	;# 
  8083  0292                     	;# 
  8084  0292                     	;# 
  8085  0293                     	;# 
  8086  0293                     	;# 
  8087  0294                     	;# 
  8088  0295                     	;# 
  8089  0296                     	;# 
  8090  0297                     	;# 
  8091  0298                     	;# 
  8092  0298                     	;# 
  8093  0299                     	;# 
  8094  0299                     	;# 
  8095  029A                     	;# 
  8096  029B                     	;# 
  8097  029C                     	;# 
  8098  029D                     	;# 
  8099  029F                     	;# 
  8100  030C                     	;# 
  8101  030C                     	;# 
  8102  030D                     	;# 
  8103  030E                     	;# 
  8104  030F                     	;# 
  8105  0310                     	;# 
  8106  0310                     	;# 
  8107  0311                     	;# 
  8108  0312                     	;# 
  8109  0313                     	;# 
  8110  0314                     	;# 
  8111  0314                     	;# 
  8112  0315                     	;# 
  8113  0316                     	;# 
  8114  0317                     	;# 
  8115  0318                     	;# 
  8116  0318                     	;# 
  8117  0319                     	;# 
  8118  031A                     	;# 
  8119  031B                     	;# 
  8120  038C                     	;# 
  8121  038C                     	;# 
  8122  038D                     	;# 
  8123  038E                     	;# 
  8124  0390                     	;# 
  8125  0390                     	;# 
  8126  0391                     	;# 
  8127  0392                     	;# 
  8128  048C                     	;# 
  8129  048C                     	;# 
  8130  048D                     	;# 
  8131  048E                     	;# 
  8132  048F                     	;# 
  8133  048F                     	;# 
  8134  0490                     	;# 
  8135  0491                     	;# 
  8136  0492                     	;# 
  8137  0492                     	;# 
  8138  0493                     	;# 
  8139  0494                     	;# 
  8140  0495                     	;# 
  8141  0495                     	;# 
  8142  0496                     	;# 
  8143  0497                     	;# 
  8144  0498                     	;# 
  8145  0499                     	;# 
  8146  049A                     	;# 
  8147  049B                     	;# 
  8148  049C                     	;# 
  8149  049D                     	;# 
  8150  058C                     	;# 
  8151  058C                     	;# 
  8152  058D                     	;# 
  8153  058E                     	;# 
  8154  058F                     	;# 
  8155  058F                     	;# 
  8156  0590                     	;# 
  8157  0591                     	;# 
  8158  0592                     	;# 
  8159  0593                     	;# 
  8160  059C                     	;# 
  8161  059C                     	;# 
  8162  059D                     	;# 
  8163  059D                     	;# 
  8164  059E                     	;# 
  8165  059F                     	;# 
  8166  060C                     	;# 
  8167  060C                     	;# 
  8168  060D                     	;# 
  8169  060D                     	;# 
  8170  060E                     	;# 
  8171  060F                     	;# 
  8172  0610                     	;# 
  8173  0611                     	;# 
  8174  0612                     	;# 
  8175  0613                     	;# 
  8176  0614                     	;# 
  8177  0616                     	;# 
  8178  0616                     	;# 
  8179  0617                     	;# 
  8180  0617                     	;# 
  8181  0618                     	;# 
  8182  0619                     	;# 
  8183  061A                     	;# 
  8184  061B                     	;# 
  8185  061C                     	;# 
  8186  061D                     	;# 
  8187  061E                     	;# 
  8188  070C                     	;# 
  8189  070D                     	;# 
  8190  070E                     	;# 
  8191  070F                     	;# 
  8192  0710                     	;# 
  8193  0711                     	;# 
  8194  0712                     	;# 
  8195  0713                     	;# 
  8196  0714                     	;# 
  8197  0716                     	;# 
  8198  0717                     	;# 
  8199  0718                     	;# 
  8200  0719                     	;# 
  8201  071A                     	;# 
  8202  071B                     	;# 
  8203  071C                     	;# 
  8204  071D                     	;# 
  8205  071E                     	;# 
  8206  0796                     	;# 
  8207  0797                     	;# 
  8208  0798                     	;# 
  8209  0799                     	;# 
  8210  079A                     	;# 
  8211  079B                     	;# 
  8212  079C                     	;# 
  8213  079D                     	;# 
  8214  080C                     	;# 
  8215  080D                     	;# 
  8216  080E                     	;# 
  8217  080F                     	;# 
  8218  0810                     	;# 
  8219  0811                     	;# 
  8220  0812                     	;# 
  8221  0813                     	;# 
  8222  0814                     	;# 
  8223  081A                     	;# 
  8224  081A                     	;# 
  8225  081B                     	;# 
  8226  081C                     	;# 
  8227  081C                     	;# 
  8228  081D                     	;# 
  8229  081E                     	;# 
  8230  081F                     	;# 
  8231  088C                     	;# 
  8232  088D                     	;# 
  8233  088E                     	;# 
  8234  088F                     	;# 
  8235  0890                     	;# 
  8236  0891                     	;# 
  8237  0892                     	;# 
  8238  0893                     	;# 
  8239  0895                     	;# 
  8240  0896                     	;# 
  8241  0897                     	;# 
  8242  0898                     	;# 
  8243  0899                     	;# 
  8244  089A                     	;# 
  8245  089B                     	;# 
  8246  090C                     	;# 
  8247  090E                     	;# 
  8248  090F                     	;# 
  8249  091F                     	;# 
  8250  098F                     	;# 
  8251  098F                     	;# 
  8252  0990                     	;# 
  8253  0991                     	;# 
  8254  0992                     	;# 
  8255  0993                     	;# 
  8256  0994                     	;# 
  8257  0995                     	;# 
  8258  0996                     	;# 
  8259  0997                     	;# 
  8260  1E0F                     	;# 
  8261  1E10                     	;# 
  8262  1E11                     	;# 
  8263  1E12                     	;# 
  8264  1E13                     	;# 
  8265  1E14                     	;# 
  8266  1E15                     	;# 
  8267  1E16                     	;# 
  8268  1E17                     	;# 
  8269  1E18                     	;# 
  8270  1E19                     	;# 
  8271  1E1A                     	;# 
  8272  1E1B                     	;# 
  8273  1E1C                     	;# 
  8274  1E1D                     	;# 
  8275  1E1E                     	;# 
  8276  1E1F                     	;# 
  8277  1E20                     	;# 
  8278  1E21                     	;# 
  8279  1E22                     	;# 
  8280  1E23                     	;# 
  8281  1E24                     	;# 
  8282  1E25                     	;# 
  8283  1E26                     	;# 
  8284  1E27                     	;# 
  8285  1E28                     	;# 
  8286  1E29                     	;# 
  8287  1E2A                     	;# 
  8288  1E2B                     	;# 
  8289  1E2C                     	;# 
  8290  1E2D                     	;# 
  8291  1E2E                     	;# 
  8292  1E2F                     	;# 
  8293  1E30                     	;# 
  8294  1E31                     	;# 
  8295  1E32                     	;# 
  8296  1E33                     	;# 
  8297  1E34                     	;# 
  8298  1E35                     	;# 
  8299  1E36                     	;# 
  8300  1E37                     	;# 
  8301  1E8F                     	;# 
  8302  1E90                     	;# 
  8303  1E91                     	;# 
  8304  1E92                     	;# 
  8305  1E93                     	;# 
  8306  1E94                     	;# 
  8307  1E95                     	;# 
  8308  1E96                     	;# 
  8309  1E97                     	;# 
  8310  1E9C                     	;# 
  8311  1E9D                     	;# 
  8312  1E9E                     	;# 
  8313  1EA1                     	;# 
  8314  1EA2                     	;# 
  8315  1EA3                     	;# 
  8316  1EA4                     	;# 
  8317  1EA9                     	;# 
  8318  1EAA                     	;# 
  8319  1EB1                     	;# 
  8320  1EB2                     	;# 
  8321  1EB8                     	;# 
  8322  1EB9                     	;# 
  8323  1EBA                     	;# 
  8324  1EBB                     	;# 
  8325  1EBC                     	;# 
  8326  1EBD                     	;# 
  8327  1EBE                     	;# 
  8328  1EC3                     	;# 
  8329  1EC5                     	;# 
  8330  1EC6                     	;# 
  8331  1EC7                     	;# 
  8332  1EC8                     	;# 
  8333  1EC9                     	;# 
  8334  1ECA                     	;# 
  8335  1ECB                     	;# 
  8336  1ECB                     	;# 
  8337  1ECB                     	;# 
  8338  1ECC                     	;# 
  8339  1ECC                     	;# 
  8340  1ECC                     	;# 
  8341  1F10                     	;# 
  8342  1F11                     	;# 
  8343  1F12                     	;# 
  8344  1F14                     	;# 
  8345  1F15                     	;# 
  8346  1F1C                     	;# 
  8347  1F1D                     	;# 
  8348  1F1E                     	;# 
  8349  1F1F                     	;# 
  8350  1F20                     	;# 
  8351  1F21                     	;# 
  8352  1F22                     	;# 
  8353  1F23                     	;# 
  8354  1F24                     	;# 
  8355  1F25                     	;# 
  8356  1F26                     	;# 
  8357  1F27                     	;# 
  8358  1F38                     	;# 
  8359  1F39                     	;# 
  8360  1F3A                     	;# 
  8361  1F3B                     	;# 
  8362  1F3C                     	;# 
  8363  1F3D                     	;# 
  8364  1F3E                     	;# 
  8365  1F3F                     	;# 
  8366  1F43                     	;# 
  8367  1F44                     	;# 
  8368  1F45                     	;# 
  8369  1F46                     	;# 
  8370  1F47                     	;# 
  8371  1F48                     	;# 
  8372  1F49                     	;# 
  8373  1F4A                     	;# 
  8374  1F4E                     	;# 
  8375  1F4F                     	;# 
  8376  1F50                     	;# 
  8377  1F51                     	;# 
  8378  1F52                     	;# 
  8379  1F53                     	;# 
  8380  1F54                     	;# 
  8381  1F55                     	;# 
  8382  1FE4                     	;# 
  8383  1FE5                     	;# 
  8384  1FE6                     	;# 
  8385  1FE7                     	;# 
  8386  1FE8                     	;# 
  8387  1FE8                     	;# 
  8388  1FE9                     	;# 
  8389  1FEA                     	;# 
  8390  1FEB                     	;# 
  8391  1FED                     	;# 
  8392  1FEE                     	;# 
  8393  1FEF                     	;# 
  8394  0000                     	;# 
  8395  0001                     	;# 
  8396  0002                     	;# 
  8397  0003                     	;# 
  8398  0004                     	;# 
  8399  0005                     	;# 
  8400  0006                     	;# 
  8401  0007                     	;# 
  8402  0008                     	;# 
  8403  0009                     	;# 
  8404  000A                     	;# 
  8405  000B                     	;# 
  8406  000C                     	;# 
  8407  000D                     	;# 
  8408  000E                     	;# 
  8409  0012                     	;# 
  8410  0013                     	;# 
  8411  0014                     	;# 
  8412  0018                     	;# 
  8413  0019                     	;# 
  8414  001A                     	;# 
  8415  008C                     	;# 
  8416  008C                     	;# 
  8417  008D                     	;# 
  8418  008E                     	;# 
  8419  008E                     	;# 
  8420  008F                     	;# 
  8421  0090                     	;# 
  8422  0090                     	;# 
  8423  0091                     	;# 
  8424  0092                     	;# 
  8425  0092                     	;# 
  8426  0093                     	;# 
  8427  0094                     	;# 
  8428  0094                     	;# 
  8429  0095                     	;# 
  8430  0096                     	;# 
  8431  0096                     	;# 
  8432  0097                     	;# 
  8433  0098                     	;# 
  8434  0099                     	;# 
  8435  009A                     	;# 
  8436  009B                     	;# 
  8437  009B                     	;# 
  8438  009C                     	;# 
  8439  009D                     	;# 
  8440  009D                     	;# 
  8441  009E                     	;# 
  8442  009F                     	;# 
  8443  010C                     	;# 
  8444  010C                     	;# 
  8445  010D                     	;# 
  8446  010E                     	;# 
  8447  010F                     	;# 
  8448  010F                     	;# 
  8449  0110                     	;# 
  8450  0111                     	;# 
  8451  0112                     	;# 
  8452  0113                     	;# 
  8453  0114                     	;# 
  8454  0115                     	;# 
  8455  0116                     	;# 
  8456  0117                     	;# 
  8457  0118                     	;# 
  8458  0119                     	;# 
  8459  0119                     	;# 
  8460  0119                     	;# 
  8461  011A                     	;# 
  8462  011A                     	;# 
  8463  011A                     	;# 
  8464  011B                     	;# 
  8465  011B                     	;# 
  8466  011B                     	;# 
  8467  011B                     	;# 
  8468  011B                     	;# 
  8469  011C                     	;# 
  8470  011C                     	;# 
  8471  011C                     	;# 
  8472  011D                     	;# 
  8473  011D                     	;# 
  8474  011D                     	;# 
  8475  011E                     	;# 
  8476  011E                     	;# 
  8477  011E                     	;# 
  8478  011F                     	;# 
  8479  011F                     	;# 
  8480  011F                     	;# 
  8481  011F                     	;# 
  8482  011F                     	;# 
  8483  018C                     	;# 
  8484  018D                     	;# 
  8485  018E                     	;# 
  8486  018F                     	;# 
  8487  0190                     	;# 
  8488  0191                     	;# 
  8489  0192                     	;# 
  8490  0196                     	;# 
  8491  0197                     	;# 
  8492  0198                     	;# 
  8493  0199                     	;# 
  8494  019A                     	;# 
  8495  019B                     	;# 
  8496  019C                     	;# 
  8497  020C                     	;# 
  8498  020D                     	;# 
  8499  020E                     	;# 
  8500  020E                     	;# 
  8501  020F                     	;# 
  8502  020F                     	;# 
  8503  0210                     	;# 
  8504  0210                     	;# 
  8505  0211                     	;# 
  8506  0211                     	;# 
  8507  0212                     	;# 
  8508  0213                     	;# 
  8509  0214                     	;# 
  8510  0214                     	;# 
  8511  0215                     	;# 
  8512  0215                     	;# 
  8513  0216                     	;# 
  8514  0216                     	;# 
  8515  0217                     	;# 
  8516  0217                     	;# 
  8517  0218                     	;# 
  8518  0219                     	;# 
  8519  021A                     	;# 
  8520  021A                     	;# 
  8521  021B                     	;# 
  8522  021B                     	;# 
  8523  021C                     	;# 
  8524  021C                     	;# 
  8525  021D                     	;# 
  8526  021D                     	;# 
  8527  021E                     	;# 
  8528  021F                     	;# 
  8529  028C                     	;# 
  8530  028C                     	;# 
  8531  028D                     	;# 
  8532  028D                     	;# 
  8533  028E                     	;# 
  8534  028F                     	;# 
  8535  0290                     	;# 
  8536  0291                     	;# 
  8537  0292                     	;# 
  8538  0292                     	;# 
  8539  0293                     	;# 
  8540  0293                     	;# 
  8541  0294                     	;# 
  8542  0295                     	;# 
  8543  0296                     	;# 
  8544  0297                     	;# 
  8545  0298                     	;# 
  8546  0298                     	;# 
  8547  0299                     	;# 
  8548  0299                     	;# 
  8549  029A                     	;# 
  8550  029B                     	;# 
  8551  029C                     	;# 
  8552  029D                     	;# 
  8553  029F                     	;# 
  8554  030C                     	;# 
  8555  030C                     	;# 
  8556  030D                     	;# 
  8557  030E                     	;# 
  8558  030F                     	;# 
  8559  0310                     	;# 
  8560  0310                     	;# 
  8561  0311                     	;# 
  8562  0312                     	;# 
  8563  0313                     	;# 
  8564  0314                     	;# 
  8565  0314                     	;# 
  8566  0315                     	;# 
  8567  0316                     	;# 
  8568  0317                     	;# 
  8569  0318                     	;# 
  8570  0318                     	;# 
  8571  0319                     	;# 
  8572  031A                     	;# 
  8573  031B                     	;# 
  8574  038C                     	;# 
  8575  038C                     	;# 
  8576  038D                     	;# 
  8577  038E                     	;# 
  8578  0390                     	;# 
  8579  0390                     	;# 
  8580  0391                     	;# 
  8581  0392                     	;# 
  8582  048C                     	;# 
  8583  048C                     	;# 
  8584  048D                     	;# 
  8585  048E                     	;# 
  8586  048F                     	;# 
  8587  048F                     	;# 
  8588  0490                     	;# 
  8589  0491                     	;# 
  8590  0492                     	;# 
  8591  0492                     	;# 
  8592  0493                     	;# 
  8593  0494                     	;# 
  8594  0495                     	;# 
  8595  0495                     	;# 
  8596  0496                     	;# 
  8597  0497                     	;# 
  8598  0498                     	;# 
  8599  0499                     	;# 
  8600  049A                     	;# 
  8601  049B                     	;# 
  8602  049C                     	;# 
  8603  049D                     	;# 
  8604  058C                     	;# 
  8605  058C                     	;# 
  8606  058D                     	;# 
  8607  058E                     	;# 
  8608  058F                     	;# 
  8609  058F                     	;# 
  8610  0590                     	;# 
  8611  0591                     	;# 
  8612  0592                     	;# 
  8613  0593                     	;# 
  8614  059C                     	;# 
  8615  059C                     	;# 
  8616  059D                     	;# 
  8617  059D                     	;# 
  8618  059E                     	;# 
  8619  059F                     	;# 
  8620  060C                     	;# 
  8621  060C                     	;# 
  8622  060D                     	;# 
  8623  060D                     	;# 
  8624  060E                     	;# 
  8625  060F                     	;# 
  8626  0610                     	;# 
  8627  0611                     	;# 
  8628  0612                     	;# 
  8629  0613                     	;# 
  8630  0614                     	;# 
  8631  0616                     	;# 
  8632  0616                     	;# 
  8633  0617                     	;# 
  8634  0617                     	;# 
  8635  0618                     	;# 
  8636  0619                     	;# 
  8637  061A                     	;# 
  8638  061B                     	;# 
  8639  061C                     	;# 
  8640  061D                     	;# 
  8641  061E                     	;# 
  8642  070C                     	;# 
  8643  070D                     	;# 
  8644  070E                     	;# 
  8645  070F                     	;# 
  8646  0710                     	;# 
  8647  0711                     	;# 
  8648  0712                     	;# 
  8649  0713                     	;# 
  8650  0714                     	;# 
  8651  0716                     	;# 
  8652  0717                     	;# 
  8653  0718                     	;# 
  8654  0719                     	;# 
  8655  071A                     	;# 
  8656  071B                     	;# 
  8657  071C                     	;# 
  8658  071D                     	;# 
  8659  071E                     	;# 
  8660  0796                     	;# 
  8661  0797                     	;# 
  8662  0798                     	;# 
  8663  0799                     	;# 
  8664  079A                     	;# 
  8665  079B                     	;# 
  8666  079C                     	;# 
  8667  079D                     	;# 
  8668  080C                     	;# 
  8669  080D                     	;# 
  8670  080E                     	;# 
  8671  080F                     	;# 
  8672  0810                     	;# 
  8673  0811                     	;# 
  8674  0812                     	;# 
  8675  0813                     	;# 
  8676  0814                     	;# 
  8677  081A                     	;# 
  8678  081A                     	;# 
  8679  081B                     	;# 
  8680  081C                     	;# 
  8681  081C                     	;# 
  8682  081D                     	;# 
  8683  081E                     	;# 
  8684  081F                     	;# 
  8685  088C                     	;# 
  8686  088D                     	;# 
  8687  088E                     	;# 
  8688  088F                     	;# 
  8689  0890                     	;# 
  8690  0891                     	;# 
  8691  0892                     	;# 
  8692  0893                     	;# 
  8693  0895                     	;# 
  8694  0896                     	;# 
  8695  0897                     	;# 
  8696  0898                     	;# 
  8697  0899                     	;# 
  8698  089A                     	;# 
  8699  089B                     	;# 
  8700  090C                     	;# 
  8701  090E                     	;# 
  8702  090F                     	;# 
  8703  091F                     	;# 
  8704  098F                     	;# 
  8705  098F                     	;# 
  8706  0990                     	;# 
  8707  0991                     	;# 
  8708  0992                     	;# 
  8709  0993                     	;# 
  8710  0994                     	;# 
  8711  0995                     	;# 
  8712  0996                     	;# 
  8713  0997                     	;# 
  8714  1E0F                     	;# 
  8715  1E10                     	;# 
  8716  1E11                     	;# 
  8717  1E12                     	;# 
  8718  1E13                     	;# 
  8719  1E14                     	;# 
  8720  1E15                     	;# 
  8721  1E16                     	;# 
  8722  1E17                     	;# 
  8723  1E18                     	;# 
  8724  1E19                     	;# 
  8725  1E1A                     	;# 
  8726  1E1B                     	;# 
  8727  1E1C                     	;# 
  8728  1E1D                     	;# 
  8729  1E1E                     	;# 
  8730  1E1F                     	;# 
  8731  1E20                     	;# 
  8732  1E21                     	;# 
  8733  1E22                     	;# 
  8734  1E23                     	;# 
  8735  1E24                     	;# 
  8736  1E25                     	;# 
  8737  1E26                     	;# 
  8738  1E27                     	;# 
  8739  1E28                     	;# 
  8740  1E29                     	;# 
  8741  1E2A                     	;# 
  8742  1E2B                     	;# 
  8743  1E2C                     	;# 
  8744  1E2D                     	;# 
  8745  1E2E                     	;# 
  8746  1E2F                     	;# 
  8747  1E30                     	;# 
  8748  1E31                     	;# 
  8749  1E32                     	;# 
  8750  1E33                     	;# 
  8751  1E34                     	;# 
  8752  1E35                     	;# 
  8753  1E36                     	;# 
  8754  1E37                     	;# 
  8755  1E8F                     	;# 
  8756  1E90                     	;# 
  8757  1E91                     	;# 
  8758  1E92                     	;# 
  8759  1E93                     	;# 
  8760  1E94                     	;# 
  8761  1E95                     	;# 
  8762  1E96                     	;# 
  8763  1E97                     	;# 
  8764  1E9C                     	;# 
  8765  1E9D                     	;# 
  8766  1E9E                     	;# 
  8767  1EA1                     	;# 
  8768  1EA2                     	;# 
  8769  1EA3                     	;# 
  8770  1EA4                     	;# 
  8771  1EA9                     	;# 
  8772  1EAA                     	;# 
  8773  1EB1                     	;# 
  8774  1EB2                     	;# 
  8775  1EB8                     	;# 
  8776  1EB9                     	;# 
  8777  1EBA                     	;# 
  8778  1EBB                     	;# 
  8779  1EBC                     	;# 
  8780  1EBD                     	;# 
  8781  1EBE                     	;# 
  8782  1EC3                     	;# 
  8783  1EC5                     	;# 
  8784  1EC6                     	;# 
  8785  1EC7                     	;# 
  8786  1EC8                     	;# 
  8787  1EC9                     	;# 
  8788  1ECA                     	;# 
  8789  1ECB                     	;# 
  8790  1ECB                     	;# 
  8791  1ECB                     	;# 
  8792  1ECC                     	;# 
  8793  1ECC                     	;# 
  8794  1ECC                     	;# 
  8795  1F10                     	;# 
  8796  1F11                     	;# 
  8797  1F12                     	;# 
  8798  1F14                     	;# 
  8799  1F15                     	;# 
  8800  1F1C                     	;# 
  8801  1F1D                     	;# 
  8802  1F1E                     	;# 
  8803  1F1F                     	;# 
  8804  1F20                     	;# 
  8805  1F21                     	;# 
  8806  1F22                     	;# 
  8807  1F23                     	;# 
  8808  1F24                     	;# 
  8809  1F25                     	;# 
  8810  1F26                     	;# 
  8811  1F27                     	;# 
  8812  1F38                     	;# 
  8813  1F39                     	;# 
  8814  1F3A                     	;# 
  8815  1F3B                     	;# 
  8816  1F3C                     	;# 
  8817  1F3D                     	;# 
  8818  1F3E                     	;# 
  8819  1F3F                     	;# 
  8820  1F43                     	;# 
  8821  1F44                     	;# 
  8822  1F45                     	;# 
  8823  1F46                     	;# 
  8824  1F47                     	;# 
  8825  1F48                     	;# 
  8826  1F49                     	;# 
  8827  1F4A                     	;# 
  8828  1F4E                     	;# 
  8829  1F4F                     	;# 
  8830  1F50                     	;# 
  8831  1F51                     	;# 
  8832  1F52                     	;# 
  8833  1F53                     	;# 
  8834  1F54                     	;# 
  8835  1F55                     	;# 
  8836  1FE4                     	;# 
  8837  1FE5                     	;# 
  8838  1FE6                     	;# 
  8839  1FE7                     	;# 
  8840  1FE8                     	;# 
  8841  1FE8                     	;# 
  8842  1FE9                     	;# 
  8843  1FEA                     	;# 
  8844  1FEB                     	;# 
  8845  1FED                     	;# 
  8846  1FEE                     	;# 
  8847  1FEF                     	;# 
  8848  0000                     	;# 
  8849  0001                     	;# 
  8850  0002                     	;# 
  8851  0003                     	;# 
  8852  0004                     	;# 
  8853  0005                     	;# 
  8854  0006                     	;# 
  8855  0007                     	;# 
  8856  0008                     	;# 
  8857  0009                     	;# 
  8858  000A                     	;# 
  8859  000B                     	;# 
  8860  000C                     	;# 
  8861  000D                     	;# 
  8862  000E                     	;# 
  8863  0012                     	;# 
  8864  0013                     	;# 
  8865  0014                     	;# 
  8866  0018                     	;# 
  8867  0019                     	;# 
  8868  001A                     	;# 
  8869  008C                     	;# 
  8870  008C                     	;# 
  8871  008D                     	;# 
  8872  008E                     	;# 
  8873  008E                     	;# 
  8874  008F                     	;# 
  8875  0090                     	;# 
  8876  0090                     	;# 
  8877  0091                     	;# 
  8878  0092                     	;# 
  8879  0092                     	;# 
  8880  0093                     	;# 
  8881  0094                     	;# 
  8882  0094                     	;# 
  8883  0095                     	;# 
  8884  0096                     	;# 
  8885  0096                     	;# 
  8886  0097                     	;# 
  8887  0098                     	;# 
  8888  0099                     	;# 
  8889  009A                     	;# 
  8890  009B                     	;# 
  8891  009B                     	;# 
  8892  009C                     	;# 
  8893  009D                     	;# 
  8894  009D                     	;# 
  8895  009E                     	;# 
  8896  009F                     	;# 
  8897  010C                     	;# 
  8898  010C                     	;# 
  8899  010D                     	;# 
  8900  010E                     	;# 
  8901  010F                     	;# 
  8902  010F                     	;# 
  8903  0110                     	;# 
  8904  0111                     	;# 
  8905  0112                     	;# 
  8906  0113                     	;# 
  8907  0114                     	;# 
  8908  0115                     	;# 
  8909  0116                     	;# 
  8910  0117                     	;# 
  8911  0118                     	;# 
  8912  0119                     	;# 
  8913  0119                     	;# 
  8914  0119                     	;# 
  8915  011A                     	;# 
  8916  011A                     	;# 
  8917  011A                     	;# 
  8918  011B                     	;# 
  8919  011B                     	;# 
  8920  011B                     	;# 
  8921  011B                     	;# 
  8922  011B                     	;# 
  8923  011C                     	;# 
  8924  011C                     	;# 
  8925  011C                     	;# 
  8926  011D                     	;# 
  8927  011D                     	;# 
  8928  011D                     	;# 
  8929  011E                     	;# 
  8930  011E                     	;# 
  8931  011E                     	;# 
  8932  011F                     	;# 
  8933  011F                     	;# 
  8934  011F                     	;# 
  8935  011F                     	;# 
  8936  011F                     	;# 
  8937  018C                     	;# 
  8938  018D                     	;# 
  8939  018E                     	;# 
  8940  018F                     	;# 
  8941  0190                     	;# 
  8942  0191                     	;# 
  8943  0192                     	;# 
  8944  0196                     	;# 
  8945  0197                     	;# 
  8946  0198                     	;# 
  8947  0199                     	;# 
  8948  019A                     	;# 
  8949  019B                     	;# 
  8950  019C                     	;# 
  8951  020C                     	;# 
  8952  020D                     	;# 
  8953  020E                     	;# 
  8954  020E                     	;# 
  8955  020F                     	;# 
  8956  020F                     	;# 
  8957  0210                     	;# 
  8958  0210                     	;# 
  8959  0211                     	;# 
  8960  0211                     	;# 
  8961  0212                     	;# 
  8962  0213                     	;# 
  8963  0214                     	;# 
  8964  0214                     	;# 
  8965  0215                     	;# 
  8966  0215                     	;# 
  8967  0216                     	;# 
  8968  0216                     	;# 
  8969  0217                     	;# 
  8970  0217                     	;# 
  8971  0218                     	;# 
  8972  0219                     	;# 
  8973  021A                     	;# 
  8974  021A                     	;# 
  8975  021B                     	;# 
  8976  021B                     	;# 
  8977  021C                     	;# 
  8978  021C                     	;# 
  8979  021D                     	;# 
  8980  021D                     	;# 
  8981  021E                     	;# 
  8982  021F                     	;# 
  8983  028C                     	;# 
  8984  028C                     	;# 
  8985  028D                     	;# 
  8986  028D                     	;# 
  8987  028E                     	;# 
  8988  028F                     	;# 
  8989  0290                     	;# 
  8990  0291                     	;# 
  8991  0292                     	;# 
  8992  0292                     	;# 
  8993  0293                     	;# 
  8994  0293                     	;# 
  8995  0294                     	;# 
  8996  0295                     	;# 
  8997  0296                     	;# 
  8998  0297                     	;# 
  8999  0298                     	;# 
  9000  0298                     	;# 
  9001  0299                     	;# 
  9002  0299                     	;# 
  9003  029A                     	;# 
  9004  029B                     	;# 
  9005  029C                     	;# 
  9006  029D                     	;# 
  9007  029F                     	;# 
  9008  030C                     	;# 
  9009  030C                     	;# 
  9010  030D                     	;# 
  9011  030E                     	;# 
  9012  030F                     	;# 
  9013  0310                     	;# 
  9014  0310                     	;# 
  9015  0311                     	;# 
  9016  0312                     	;# 
  9017  0313                     	;# 
  9018  0314                     	;# 
  9019  0314                     	;# 
  9020  0315                     	;# 
  9021  0316                     	;# 
  9022  0317                     	;# 
  9023  0318                     	;# 
  9024  0318                     	;# 
  9025  0319                     	;# 
  9026  031A                     	;# 
  9027  031B                     	;# 
  9028  038C                     	;# 
  9029  038C                     	;# 
  9030  038D                     	;# 
  9031  038E                     	;# 
  9032  0390                     	;# 
  9033  0390                     	;# 
  9034  0391                     	;# 
  9035  0392                     	;# 
  9036  048C                     	;# 
  9037  048C                     	;# 
  9038  048D                     	;# 
  9039  048E                     	;# 
  9040  048F                     	;# 
  9041  048F                     	;# 
  9042  0490                     	;# 
  9043  0491                     	;# 
  9044  0492                     	;# 
  9045  0492                     	;# 
  9046  0493                     	;# 
  9047  0494                     	;# 
  9048  0495                     	;# 
  9049  0495                     	;# 
  9050  0496                     	;# 
  9051  0497                     	;# 
  9052  0498                     	;# 
  9053  0499                     	;# 
  9054  049A                     	;# 
  9055  049B                     	;# 
  9056  049C                     	;# 
  9057  049D                     	;# 
  9058  058C                     	;# 
  9059  058C                     	;# 
  9060  058D                     	;# 
  9061  058E                     	;# 
  9062  058F                     	;# 
  9063  058F                     	;# 
  9064  0590                     	;# 
  9065  0591                     	;# 
  9066  0592                     	;# 
  9067  0593                     	;# 
  9068  059C                     	;# 
  9069  059C                     	;# 
  9070  059D                     	;# 
  9071  059D                     	;# 
  9072  059E                     	;# 
  9073  059F                     	;# 
  9074  060C                     	;# 
  9075  060C                     	;# 
  9076  060D                     	;# 
  9077  060D                     	;# 
  9078  060E                     	;# 
  9079  060F                     	;# 
  9080  0610                     	;# 
  9081  0611                     	;# 
  9082  0612                     	;# 
  9083  0613                     	;# 
  9084  0614                     	;# 
  9085  0616                     	;# 
  9086  0616                     	;# 
  9087  0617                     	;# 
  9088  0617                     	;# 
  9089  0618                     	;# 
  9090  0619                     	;# 
  9091  061A                     	;# 
  9092  061B                     	;# 
  9093  061C                     	;# 
  9094  061D                     	;# 
  9095  061E                     	;# 
  9096  070C                     	;# 
  9097  070D                     	;# 
  9098  070E                     	;# 
  9099  070F                     	;# 
  9100  0710                     	;# 
  9101  0711                     	;# 
  9102  0712                     	;# 
  9103  0713                     	;# 
  9104  0714                     	;# 
  9105  0716                     	;# 
  9106  0717                     	;# 
  9107  0718                     	;# 
  9108  0719                     	;# 
  9109  071A                     	;# 
  9110  071B                     	;# 
  9111  071C                     	;# 
  9112  071D                     	;# 
  9113  071E                     	;# 
  9114  0796                     	;# 
  9115  0797                     	;# 
  9116  0798                     	;# 
  9117  0799                     	;# 
  9118  079A                     	;# 
  9119  079B                     	;# 
  9120  079C                     	;# 
  9121  079D                     	;# 
  9122  080C                     	;# 
  9123  080D                     	;# 
  9124  080E                     	;# 
  9125  080F                     	;# 
  9126  0810                     	;# 
  9127  0811                     	;# 
  9128  0812                     	;# 
  9129  0813                     	;# 
  9130  0814                     	;# 
  9131  081A                     	;# 
  9132  081A                     	;# 
  9133  081B                     	;# 
  9134  081C                     	;# 
  9135  081C                     	;# 
  9136  081D                     	;# 
  9137  081E                     	;# 
  9138  081F                     	;# 
  9139  088C                     	;# 
  9140  088D                     	;# 
  9141  088E                     	;# 
  9142  088F                     	;# 
  9143  0890                     	;# 
  9144  0891                     	;# 
  9145  0892                     	;# 
  9146  0893                     	;# 
  9147  0895                     	;# 
  9148  0896                     	;# 
  9149  0897                     	;# 
  9150  0898                     	;# 
  9151  0899                     	;# 
  9152  089A                     	;# 
  9153  089B                     	;# 
  9154  090C                     	;# 
  9155  090E                     	;# 
  9156  090F                     	;# 
  9157  091F                     	;# 
  9158  098F                     	;# 
  9159  098F                     	;# 
  9160  0990                     	;# 
  9161  0991                     	;# 
  9162  0992                     	;# 
  9163  0993                     	;# 
  9164  0994                     	;# 
  9165  0995                     	;# 
  9166  0996                     	;# 
  9167  0997                     	;# 
  9168  1E0F                     	;# 
  9169  1E10                     	;# 
  9170  1E11                     	;# 
  9171  1E12                     	;# 
  9172  1E13                     	;# 
  9173  1E14                     	;# 
  9174  1E15                     	;# 
  9175  1E16                     	;# 
  9176  1E17                     	;# 
  9177  1E18                     	;# 
  9178  1E19                     	;# 
  9179  1E1A                     	;# 
  9180  1E1B                     	;# 
  9181  1E1C                     	;# 
  9182  1E1D                     	;# 
  9183  1E1E                     	;# 
  9184  1E1F                     	;# 
  9185  1E20                     	;# 
  9186  1E21                     	;# 
  9187  1E22                     	;# 
  9188  1E23                     	;# 
  9189  1E24                     	;# 
  9190  1E25                     	;# 
  9191  1E26                     	;# 
  9192  1E27                     	;# 
  9193  1E28                     	;# 
  9194  1E29                     	;# 
  9195  1E2A                     	;# 
  9196  1E2B                     	;# 
  9197  1E2C                     	;# 
  9198  1E2D                     	;# 
  9199  1E2E                     	;# 
  9200  1E2F                     	;# 
  9201  1E30                     	;# 
  9202  1E31                     	;# 
  9203  1E32                     	;# 
  9204  1E33                     	;# 
  9205  1E34                     	;# 
  9206  1E35                     	;# 
  9207  1E36                     	;# 
  9208  1E37                     	;# 
  9209  1E8F                     	;# 
  9210  1E90                     	;# 
  9211  1E91                     	;# 
  9212  1E92                     	;# 
  9213  1E93                     	;# 
  9214  1E94                     	;# 
  9215  1E95                     	;# 
  9216  1E96                     	;# 
  9217  1E97                     	;# 
  9218  1E9C                     	;# 
  9219  1E9D                     	;# 
  9220  1E9E                     	;# 
  9221  1EA1                     	;# 
  9222  1EA2                     	;# 
  9223  1EA3                     	;# 
  9224  1EA4                     	;# 
  9225  1EA9                     	;# 
  9226  1EAA                     	;# 
  9227  1EB1                     	;# 
  9228  1EB2                     	;# 
  9229  1EB8                     	;# 
  9230  1EB9                     	;# 
  9231  1EBA                     	;# 
  9232  1EBB                     	;# 
  9233  1EBC                     	;# 
  9234  1EBD                     	;# 
  9235  1EBE                     	;# 
  9236  1EC3                     	;# 
  9237  1EC5                     	;# 
  9238  1EC6                     	;# 
  9239  1EC7                     	;# 
  9240  1EC8                     	;# 
  9241  1EC9                     	;# 
  9242  1ECA                     	;# 
  9243  1ECB                     	;# 
  9244  1ECB                     	;# 
  9245  1ECB                     	;# 
  9246  1ECC                     	;# 
  9247  1ECC                     	;# 
  9248  1ECC                     	;# 
  9249  1F10                     	;# 
  9250  1F11                     	;# 
  9251  1F12                     	;# 
  9252  1F14                     	;# 
  9253  1F15                     	;# 
  9254  1F1C                     	;# 
  9255  1F1D                     	;# 
  9256  1F1E                     	;# 
  9257  1F1F                     	;# 
  9258  1F20                     	;# 
  9259  1F21                     	;# 
  9260  1F22                     	;# 
  9261  1F23                     	;# 
  9262  1F24                     	;# 
  9263  1F25                     	;# 
  9264  1F26                     	;# 
  9265  1F27                     	;# 
  9266  1F38                     	;# 
  9267  1F39                     	;# 
  9268  1F3A                     	;# 
  9269  1F3B                     	;# 
  9270  1F3C                     	;# 
  9271  1F3D                     	;# 
  9272  1F3E                     	;# 
  9273  1F3F                     	;# 
  9274  1F43                     	;# 
  9275  1F44                     	;# 
  9276  1F45                     	;# 
  9277  1F46                     	;# 
  9278  1F47                     	;# 
  9279  1F48                     	;# 
  9280  1F49                     	;# 
  9281  1F4A                     	;# 
  9282  1F4E                     	;# 
  9283  1F4F                     	;# 
  9284  1F50                     	;# 
  9285  1F51                     	;# 
  9286  1F52                     	;# 
  9287  1F53                     	;# 
  9288  1F54                     	;# 
  9289  1F55                     	;# 
  9290  1FE4                     	;# 
  9291  1FE5                     	;# 
  9292  1FE6                     	;# 
  9293  1FE7                     	;# 
  9294  1FE8                     	;# 
  9295  1FE8                     	;# 
  9296  1FE9                     	;# 
  9297  1FEA                     	;# 
  9298  1FEB                     	;# 
  9299  1FED                     	;# 
  9300  1FEE                     	;# 
  9301  1FEF                     	;# 
  9302  0000                     	;# 
  9303  0001                     	;# 
  9304  0002                     	;# 
  9305  0003                     	;# 
  9306  0004                     	;# 
  9307  0005                     	;# 
  9308  0006                     	;# 
  9309  0007                     	;# 
  9310  0008                     	;# 
  9311  0009                     	;# 
  9312  000A                     	;# 
  9313  000B                     	;# 
  9314  000C                     	;# 
  9315  000D                     	;# 
  9316  000E                     	;# 
  9317  0012                     	;# 
  9318  0013                     	;# 
  9319  0014                     	;# 
  9320  0018                     	;# 
  9321  0019                     	;# 
  9322  001A                     	;# 
  9323  008C                     	;# 
  9324  008C                     	;# 
  9325  008D                     	;# 
  9326  008E                     	;# 
  9327  008E                     	;# 
  9328  008F                     	;# 
  9329  0090                     	;# 
  9330  0090                     	;# 
  9331  0091                     	;# 
  9332  0092                     	;# 
  9333  0092                     	;# 
  9334  0093                     	;# 
  9335  0094                     	;# 
  9336  0094                     	;# 
  9337  0095                     	;# 
  9338  0096                     	;# 
  9339  0096                     	;# 
  9340  0097                     	;# 
  9341  0098                     	;# 
  9342  0099                     	;# 
  9343  009A                     	;# 
  9344  009B                     	;# 
  9345  009B                     	;# 
  9346  009C                     	;# 
  9347  009D                     	;# 
  9348  009D                     	;# 
  9349  009E                     	;# 
  9350  009F                     	;# 
  9351  010C                     	;# 
  9352  010C                     	;# 
  9353  010D                     	;# 
  9354  010E                     	;# 
  9355  010F                     	;# 
  9356  010F                     	;# 
  9357  0110                     	;# 
  9358  0111                     	;# 
  9359  0112                     	;# 
  9360  0113                     	;# 
  9361  0114                     	;# 
  9362  0115                     	;# 
  9363  0116                     	;# 
  9364  0117                     	;# 
  9365  0118                     	;# 
  9366  0119                     	;# 
  9367  0119                     	;# 
  9368  0119                     	;# 
  9369  011A                     	;# 
  9370  011A                     	;# 
  9371  011A                     	;# 
  9372  011B                     	;# 
  9373  011B                     	;# 
  9374  011B                     	;# 
  9375  011B                     	;# 
  9376  011B                     	;# 
  9377  011C                     	;# 
  9378  011C                     	;# 
  9379  011C                     	;# 
  9380  011D                     	;# 
  9381  011D                     	;# 
  9382  011D                     	;# 
  9383  011E                     	;# 
  9384  011E                     	;# 
  9385  011E                     	;# 
  9386  011F                     	;# 
  9387  011F                     	;# 
  9388  011F                     	;# 
  9389  011F                     	;# 
  9390  011F                     	;# 
  9391  018C                     	;# 
  9392  018D                     	;# 
  9393  018E                     	;# 
  9394  018F                     	;# 
  9395  0190                     	;# 
  9396  0191                     	;# 
  9397  0192                     	;# 
  9398  0196                     	;# 
  9399  0197                     	;# 
  9400  0198                     	;# 
  9401  0199                     	;# 
  9402  019A                     	;# 
  9403  019B                     	;# 
  9404  019C                     	;# 
  9405  020C                     	;# 
  9406  020D                     	;# 
  9407  020E                     	;# 
  9408  020E                     	;# 
  9409  020F                     	;# 
  9410  020F                     	;# 
  9411  0210                     	;# 
  9412  0210                     	;# 
  9413  0211                     	;# 
  9414  0211                     	;# 
  9415  0212                     	;# 
  9416  0213                     	;# 
  9417  0214                     	;# 
  9418  0214                     	;# 
  9419  0215                     	;# 
  9420  0215                     	;# 
  9421  0216                     	;# 
  9422  0216                     	;# 
  9423  0217                     	;# 
  9424  0217                     	;# 
  9425  0218                     	;# 
  9426  0219                     	;# 
  9427  021A                     	;# 
  9428  021A                     	;# 
  9429  021B                     	;# 
  9430  021B                     	;# 
  9431  021C                     	;# 
  9432  021C                     	;# 
  9433  021D                     	;# 
  9434  021D                     	;# 
  9435  021E                     	;# 
  9436  021F                     	;# 
  9437  028C                     	;# 
  9438  028C                     	;# 
  9439  028D                     	;# 
  9440  028D                     	;# 
  9441  028E                     	;# 
  9442  028F                     	;# 
  9443  0290                     	;# 
  9444  0291                     	;# 
  9445  0292                     	;# 
  9446  0292                     	;# 
  9447  0293                     	;# 
  9448  0293                     	;# 
  9449  0294                     	;# 
  9450  0295                     	;# 
  9451  0296                     	;# 
  9452  0297                     	;# 
  9453  0298                     	;# 
  9454  0298                     	;# 
  9455  0299                     	;# 
  9456  0299                     	;# 
  9457  029A                     	;# 
  9458  029B                     	;# 
  9459  029C                     	;# 
  9460  029D                     	;# 
  9461  029F                     	;# 
  9462  030C                     	;# 
  9463  030C                     	;# 
  9464  030D                     	;# 
  9465  030E                     	;# 
  9466  030F                     	;# 
  9467  0310                     	;# 
  9468  0310                     	;# 
  9469  0311                     	;# 
  9470  0312                     	;# 
  9471  0313                     	;# 
  9472  0314                     	;# 
  9473  0314                     	;# 
  9474  0315                     	;# 
  9475  0316                     	;# 
  9476  0317                     	;# 
  9477  0318                     	;# 
  9478  0318                     	;# 
  9479  0319                     	;# 
  9480  031A                     	;# 
  9481  031B                     	;# 
  9482  038C                     	;# 
  9483  038C                     	;# 
  9484  038D                     	;# 
  9485  038E                     	;# 
  9486  0390                     	;# 
  9487  0390                     	;# 
  9488  0391                     	;# 
  9489  0392                     	;# 
  9490  048C                     	;# 
  9491  048C                     	;# 
  9492  048D                     	;# 
  9493  048E                     	;# 
  9494  048F                     	;# 
  9495  048F                     	;# 
  9496  0490                     	;# 
  9497  0491                     	;# 
  9498  0492                     	;# 
  9499  0492                     	;# 
  9500  0493                     	;# 
  9501  0494                     	;# 
  9502  0495                     	;# 
  9503  0495                     	;# 
  9504  0496                     	;# 
  9505  0497                     	;# 
  9506  0498                     	;# 
  9507  0499                     	;# 
  9508  049A                     	;# 
  9509  049B                     	;# 
  9510  049C                     	;# 
  9511  049D                     	;# 
  9512  058C                     	;# 
  9513  058C                     	;# 
  9514  058D                     	;# 
  9515  058E                     	;# 
  9516  058F                     	;# 
  9517  058F                     	;# 
  9518  0590                     	;# 
  9519  0591                     	;# 
  9520  0592                     	;# 
  9521  0593                     	;# 
  9522  059C                     	;# 
  9523  059C                     	;# 
  9524  059D                     	;# 
  9525  059D                     	;# 
  9526  059E                     	;# 
  9527  059F                     	;# 
  9528  060C                     	;# 
  9529  060C                     	;# 
  9530  060D                     	;# 
  9531  060D                     	;# 
  9532  060E                     	;# 
  9533  060F                     	;# 
  9534  0610                     	;# 
  9535  0611                     	;# 
  9536  0612                     	;# 
  9537  0613                     	;# 
  9538  0614                     	;# 
  9539  0616                     	;# 
  9540  0616                     	;# 
  9541  0617                     	;# 
  9542  0617                     	;# 
  9543  0618                     	;# 
  9544  0619                     	;# 
  9545  061A                     	;# 
  9546  061B                     	;# 
  9547  061C                     	;# 
  9548  061D                     	;# 
  9549  061E                     	;# 
  9550  070C                     	;# 
  9551  070D                     	;# 
  9552  070E                     	;# 
  9553  070F                     	;# 
  9554  0710                     	;# 
  9555  0711                     	;# 
  9556  0712                     	;# 
  9557  0713                     	;# 
  9558  0714                     	;# 
  9559  0716                     	;# 
  9560  0717                     	;# 
  9561  0718                     	;# 
  9562  0719                     	;# 
  9563  071A                     	;# 
  9564  071B                     	;# 
  9565  071C                     	;# 
  9566  071D                     	;# 
  9567  071E                     	;# 
  9568  0796                     	;# 
  9569  0797                     	;# 
  9570  0798                     	;# 
  9571  0799                     	;# 
  9572  079A                     	;# 
  9573  079B                     	;# 
  9574  079C                     	;# 
  9575  079D                     	;# 
  9576  080C                     	;# 
  9577  080D                     	;# 
  9578  080E                     	;# 
  9579  080F                     	;# 
  9580  0810                     	;# 
  9581  0811                     	;# 
  9582  0812                     	;# 
  9583  0813                     	;# 
  9584  0814                     	;# 
  9585  081A                     	;# 
  9586  081A                     	;# 
  9587  081B                     	;# 
  9588  081C                     	;# 
  9589  081C                     	;# 
  9590  081D                     	;# 
  9591  081E                     	;# 
  9592  081F                     	;# 
  9593  088C                     	;# 
  9594  088D                     	;# 
  9595  088E                     	;# 
  9596  088F                     	;# 
  9597  0890                     	;# 
  9598  0891                     	;# 
  9599  0892                     	;# 
  9600  0893                     	;# 
  9601  0895                     	;# 
  9602  0896                     	;# 
  9603  0897                     	;# 
  9604  0898                     	;# 
  9605  0899                     	;# 
  9606  089A                     	;# 
  9607  089B                     	;# 
  9608  090C                     	;# 
  9609  090E                     	;# 
  9610  090F                     	;# 
  9611  091F                     	;# 
  9612  098F                     	;# 
  9613  098F                     	;# 
  9614  0990                     	;# 
  9615  0991                     	;# 
  9616  0992                     	;# 
  9617  0993                     	;# 
  9618  0994                     	;# 
  9619  0995                     	;# 
  9620  0996                     	;# 
  9621  0997                     	;# 
  9622  1E0F                     	;# 
  9623  1E10                     	;# 
  9624  1E11                     	;# 
  9625  1E12                     	;# 
  9626  1E13                     	;# 
  9627  1E14                     	;# 
  9628  1E15                     	;# 
  9629  1E16                     	;# 
  9630  1E17                     	;# 
  9631  1E18                     	;# 
  9632  1E19                     	;# 
  9633  1E1A                     	;# 
  9634  1E1B                     	;# 
  9635  1E1C                     	;# 
  9636  1E1D                     	;# 
  9637  1E1E                     	;# 
  9638  1E1F                     	;# 
  9639  1E20                     	;# 
  9640  1E21                     	;# 
  9641  1E22                     	;# 
  9642  1E23                     	;# 
  9643  1E24                     	;# 
  9644  1E25                     	;# 
  9645  1E26                     	;# 
  9646  1E27                     	;# 
  9647  1E28                     	;# 
  9648  1E29                     	;# 
  9649  1E2A                     	;# 
  9650  1E2B                     	;# 
  9651  1E2C                     	;# 
  9652  1E2D                     	;# 
  9653  1E2E                     	;# 
  9654  1E2F                     	;# 
  9655  1E30                     	;# 
  9656  1E31                     	;# 
  9657  1E32                     	;# 
  9658  1E33                     	;# 
  9659  1E34                     	;# 
  9660  1E35                     	;# 
  9661  1E36                     	;# 
  9662  1E37                     	;# 
  9663  1E8F                     	;# 
  9664  1E90                     	;# 
  9665  1E91                     	;# 
  9666  1E92                     	;# 
  9667  1E93                     	;# 
  9668  1E94                     	;# 
  9669  1E95                     	;# 
  9670  1E96                     	;# 
  9671  1E97                     	;# 
  9672  1E9C                     	;# 
  9673  1E9D                     	;# 
  9674  1E9E                     	;# 
  9675  1EA1                     	;# 
  9676  1EA2                     	;# 
  9677  1EA3                     	;# 
  9678  1EA4                     	;# 
  9679  1EA9                     	;# 
  9680  1EAA                     	;# 
  9681  1EB1                     	;# 
  9682  1EB2                     	;# 
  9683  1EB8                     	;# 
  9684  1EB9                     	;# 
  9685  1EBA                     	;# 
  9686  1EBB                     	;# 
  9687  1EBC                     	;# 
  9688  1EBD                     	;# 
  9689  1EBE                     	;# 
  9690  1EC3                     	;# 
  9691  1EC5                     	;# 
  9692  1EC6                     	;# 
  9693  1EC7                     	;# 
  9694  1EC8                     	;# 
  9695  1EC9                     	;# 
  9696  1ECA                     	;# 
  9697  1ECB                     	;# 
  9698  1ECB                     	;# 
  9699  1ECB                     	;# 
  9700  1ECC                     	;# 
  9701  1ECC                     	;# 
  9702  1ECC                     	;# 
  9703  1F10                     	;# 
  9704  1F11                     	;# 
  9705  1F12                     	;# 
  9706  1F14                     	;# 
  9707  1F15                     	;# 
  9708  1F1C                     	;# 
  9709  1F1D                     	;# 
  9710  1F1E                     	;# 
  9711  1F1F                     	;# 
  9712  1F20                     	;# 
  9713  1F21                     	;# 
  9714  1F22                     	;# 
  9715  1F23                     	;# 
  9716  1F24                     	;# 
  9717  1F25                     	;# 
  9718  1F26                     	;# 
  9719  1F27                     	;# 
  9720  1F38                     	;# 
  9721  1F39                     	;# 
  9722  1F3A                     	;# 
  9723  1F3B                     	;# 
  9724  1F3C                     	;# 
  9725  1F3D                     	;# 
  9726  1F3E                     	;# 
  9727  1F3F                     	;# 
  9728  1F43                     	;# 
  9729  1F44                     	;# 
  9730  1F45                     	;# 
  9731  1F46                     	;# 
  9732  1F47                     	;# 
  9733  1F48                     	;# 
  9734  1F49                     	;# 
  9735  1F4A                     	;# 
  9736  1F4E                     	;# 
  9737  1F4F                     	;# 
  9738  1F50                     	;# 
  9739  1F51                     	;# 
  9740  1F52                     	;# 
  9741  1F53                     	;# 
  9742  1F54                     	;# 
  9743  1F55                     	;# 
  9744  1FE4                     	;# 
  9745  1FE5                     	;# 
  9746  1FE6                     	;# 
  9747  1FE7                     	;# 
  9748  1FE8                     	;# 
  9749  1FE8                     	;# 
  9750  1FE9                     	;# 
  9751  1FEA                     	;# 
  9752  1FEB                     	;# 
  9753  1FED                     	;# 
  9754  1FEE                     	;# 
  9755  1FEF                     	;_dmxArray
  9756                           
  9757                           	psect	idataBANK2
  9758  2DC1                     __pidataBANK2:	
  9759                           
  9760                           ;initializer for _delay
  9761  2DC1  340A               	retlw	10
  9762  2DC2  3400               	retlw	0
  9763                           
  9764                           ;initializer for _threshold
  9765  2DC3  3490               	retlw	144
  9766  2DC4  3406               	retlw	6
  9767                           
  9768                           ;initializer for _incInterval
  9769  2DC5  3464               	retlw	100
  9770  2DC6  3400               	retlw	0
  9771                           
  9772                           ;initializer for _address
  9773  2DC7  3401               	retlw	1
  9774  2DC8  3400               	retlw	0
  9775                           
  9776                           ;initializer for _animationSpeed
  9777  2DC9  3405               	retlw	5
  9778                           
  9779                           ;initializer for _animationBrightness
  9780  2DCA  3405               	retlw	5
  9781                           
  9782                           ;initializer for _animationModeSelected
  9783  2DCB  3401               	retlw	1
  9784                           
  9785                           ;initializer for _startup
  9786  2DCC  3401               	retlw	1
  9787                           
  9788                           ;initializer for _beatBrightness
  9789  2DCD  3405               	retlw	5
  9790                           
  9791                           	psect	idataBANK3
  9792  0002                     __pidataBANK3:	
  9793                           
  9794                           ;initializer for _initial
  9795  0002  3401               	retlw	1
  9796  0003  3400               	retlw	0
  9797                           
  9798                           	psect	stringtext1
  9799  2800                     __pstringtext1:	
  9800  2800                     _charTable:	
  9801  2800  3400               	retlw	0
  9802  2801  3482               	retlw	130
  9803  2802  3421               	retlw	33
  9804  2803  3400               	retlw	0
  9805  2804  3400               	retlw	0
  9806  2805  3400               	retlw	0
  9807  2806  3400               	retlw	0
  9808  2807  3402               	retlw	2
  9809  2808  3439               	retlw	57
  9810  2809  340F               	retlw	15
  9811  280A  3400               	retlw	0
  9812  280B  3400               	retlw	0
  9813  280C  3400               	retlw	0
  9814  280D  3440               	retlw	64
  9815  280E  3480               	retlw	128
  9816  280F  3400               	retlw	0
  9817  2810  343F               	retlw	63
  9818  2811  3406               	retlw	6
  9819  2812  345B               	retlw	91
  9820  2813  344F               	retlw	79
  9821  2814  3466               	retlw	102
  9822  2815  346D               	retlw	109
  9823  2816  347D               	retlw	125
  9824  2817  3407               	retlw	7
  9825  2818  347F               	retlw	127
  9826  2819  346F               	retlw	111
  9827  281A  3400               	retlw	0
  9828  281B  3400               	retlw	0
  9829  281C  3400               	retlw	0
  9830  281D  3448               	retlw	72
  9831  281E  3400               	retlw	0
  9832  281F  3453               	retlw	83
  9833  2820  3400               	retlw	0
  9834  2821  3477               	retlw	119
  9835  2822  347C               	retlw	124
  9836  2823  3439               	retlw	57
  9837  2824  345E               	retlw	94
  9838  2825  3479               	retlw	121
  9839  2826  3471               	retlw	113
  9840  2827  346F               	retlw	111
  9841  2828  3476               	retlw	118
  9842  2829  3406               	retlw	6
  9843  282A  341E               	retlw	30
  9844  282B  3400               	retlw	0
  9845  282C  3438               	retlw	56
  9846  282D  3400               	retlw	0
  9847  282E  3454               	retlw	84
  9848  282F  343F               	retlw	63
  9849  2830  3473               	retlw	115
  9850  2831  3467               	retlw	103
  9851  2832  3450               	retlw	80
  9852  2833  346D               	retlw	109
  9853  2834  3478               	retlw	120
  9854  2835  343E               	retlw	62
  9855  2836  3400               	retlw	0
  9856  2837  3400               	retlw	0
  9857  2838  3400               	retlw	0
  9858  2839  346E               	retlw	110
  9859  283A  3400               	retlw	0
  9860  283B  3439               	retlw	57
  9861  283C  3400               	retlw	0
  9862  283D  340F               	retlw	15
  9863  283E  3400               	retlw	0
  9864  283F  3408               	retlw	8
  9865  2840  3463               	retlw	99
  9866  2841  345F               	retlw	95
  9867  2842  347C               	retlw	124
  9868  2843  3458               	retlw	88
  9869  2844  345E               	retlw	94
  9870  2845  347B               	retlw	123
  9871  2846  3471               	retlw	113
  9872  2847  346F               	retlw	111
  9873  2848  3474               	retlw	116
  9874  2849  3402               	retlw	2
  9875  284A  341E               	retlw	30
  9876  284B  3400               	retlw	0
  9877  284C  3406               	retlw	6
  9878  284D  3400               	retlw	0
  9879  284E  3454               	retlw	84
  9880  284F  345C               	retlw	92
  9881  2850  3473               	retlw	115
  9882  2851  3467               	retlw	103
  9883  2852  3450               	retlw	80
  9884  2853  346D               	retlw	109
  9885  2854  3478               	retlw	120
  9886  2855  341C               	retlw	28
  9887  2856  3400               	retlw	0
  9888  2857  3400               	retlw	0
  9889  2858  3400               	retlw	0
  9890  2859  346E               	retlw	110
  9891  285A  3400               	retlw	0
  9892  285B  3439               	retlw	57
  9893  285C  3430               	retlw	48
  9894  285D  340F               	retlw	15
  9895  285E  3400               	retlw	0
  9896  285F  3400               	retlw	0
  9897  2860                     __end_of_charTable:	
  9898                           
  9899                           	psect	nvBANK3
  9900  01E9                     __pnvBANK3:	
  9901  01E9                     _ADCC_ADTI_InterruptHandler:	
  9902  01E9                     	ds	2
  9903  01EB                     _TMR0_InterruptHandler:	
  9904  01EB                     	ds	2
  9905                           
  9906                           	psect	nvBANK4
  9907  026A                     __pnvBANK4:	
  9908  026A                     _EUSART1_FramingErrorHandler:	
  9909  026A                     	ds	2
  9910  026C                     _EUSART1_RxDefaultInterruptHandler:	
  9911  026C                     	ds	2
  9912                           
  9913                           	psect	nvBANK5
  9914  02EA                     __pnvBANK5:	
  9915  02EA                     _EUSART1_OverrunErrorHandler:	
  9916  02EA                     	ds	2
  9917                           
  9918                           	psect	nvBANK6
  9919  0357                     __pnvBANK6:	
  9920  0357                     _EUSART1_ErrorHandler:	
  9921  0357                     	ds	2
  9922  0014                     _TRISCbits	set	20
  9923  0012                     _TRISAbits	set	18
  9924  000B                     _INTCONbits	set	11
  9925  0014                     _TRISC	set	20
  9926  0013                     _TRISB	set	19
  9927  0012                     _TRISA	set	18
  9928  001A                     _LATC	set	26
  9929  0019                     _LATB	set	25
  9930  0018                     _LATA	set	24
  9931  000C                     _PORTA	set	12
  9932  000E                     _PORTC	set	14
  9933  00D5                     _LATC5	set	213
  9934  0090                     _ADERRL	set	144
  9935  0091                     _ADERRH	set	145
  9936  009B                     _ADPREVL	set	155
  9937  009C                     _ADPREVH	set	156
  9938  0094                     _ADFLTRL	set	148
  9939  0095                     _ADFLTRH	set	149
  9940  0096                     _ADACCL	set	150
  9941  0097                     _ADACCH	set	151
  9942  0099                     _ADCNT	set	153
  9943  009D                     _ADRESL	set	157
  9944  009E                     _ADRESH	set	158
  9945  009F                     _ADPCH	set	159
  9946  009A                     _ADRPT	set	154
  9947  0098                     _ADACCU	set	152
  9948  0093                     _ADSTPTH	set	147
  9949  0092                     _ADSTPTL	set	146
  9950  008F                     _ADUTHH	set	143
  9951  008E                     _ADUTHL	set	142
  9952  008D                     _ADLTHH	set	141
  9953  008C                     _ADLTHL	set	140
  9954  0112                     _ADCON1bits	set	274
  9955  0115                     _ADSTATbits	set	277
  9956  0113                     _ADCON2bits	set	275
  9957  0114                     _ADCON3bits	set	276
  9958  0111                     _ADCON0bits	set	273
  9959  0111                     _ADCON0	set	273
  9960  0118                     _ADCLK	set	280
  9961  0117                     _ADACT	set	279
  9962  0116                     _ADREF	set	278
  9963  0115                     _ADSTAT	set	277
  9964  0114                     _ADCON3	set	276
  9965  0113                     _ADCON2	set	275
  9966  0112                     _ADCON1	set	274
  9967  0110                     _ADPREH	set	272
  9968  010F                     _ADPREL	set	271
  9969  010E                     _ADCAP	set	270
  9970  010D                     _ADACQH	set	269
  9971  010C                     _ADACQL	set	268
  9972  0119                     _RC1REG	set	281
  9973  011D                     _RC1STAbits	set	285
  9974  011A                     _TX1REG	set	282
  9975  011E                     _TX1STAbits	set	286
  9976  011C                     _SP1BRGH	set	284
  9977  011B                     _SP1BRGL	set	283
  9978  011E                     _TX1STA	set	286
  9979  011D                     _RC1STA	set	285
  9980  011F                     _BAUD1CON	set	287
  9981  018C                     _SSP1BUF	set	396
  9982  0191                     _SSP1CON2bits	set	401
  9983  0190                     _SSP1CON1bits	set	400
  9984  018D                     _SSP1ADD	set	397
  9985  0192                     _SSP1CON3	set	402
  9986  0190                     _SSP1CON1	set	400
  9987  018F                     _SSP1STAT	set	399
  9988  021E                     _CCPTMRS0bits	set	542
  9989  028D                     _PR2	set	653
  9990  028C                     _TMR2	set	652
  9991  028E                     _T2CONbits	set	654
  9992  0291                     _T2RSTbits	set	657
  9993  028F                     _T2HLTbits	set	655
  9994  028E                     _T2CON	set	654
  9995  028C                     _T2TMR	set	652
  9996  028D                     _T2PR	set	653
  9997  0291                     _T2RST	set	657
  9998  028F                     _T2HLT	set	655
  9999  0290                     _T2CLKCON	set	656
 10000  0312                     _CCP2CONbits	set	786
 10001  0310                     _CCPR2L	set	784
 10002  0311                     _CCPR2H	set	785
 10003  0312                     _CCP2CON	set	786
 10004  030E                     _CCP1CONbits	set	782
 10005  030C                     _CCPR1L	set	780
 10006  030D                     _CCPR1H	set	781
 10007  030E                     _CCP1CON	set	782
 10008  031A                     _CCP4CONbits	set	794
 10009  0318                     _CCPR4L	set	792
 10010  0319                     _CCPR4H	set	793
 10011  031A                     _CCP4CON	set	794
 10012  0316                     _CCP3CONbits	set	790
 10013  0314                     _CCPR3L	set	788
 10014  0315                     _CCPR3H	set	789
 10015  0316                     _CCP3CON	set	790
 10016  059E                     _T0CON0bits	set	1438
 10017  059E                     _T0CON0	set	1438
 10018  059C                     _TMR0L	set	1436
 10019  059D                     _TMR0H	set	1437
 10020  059F                     _T0CON1	set	1439
 10021  070D                     _PIR1bits	set	1805
 10022  0717                     _PIE1bits	set	1815
 10023  070C                     _PIR0bits	set	1804
 10024  0716                     _PIE0bits	set	1814
 10025  070F                     _PIR3bits	set	1807
 10026  0719                     _PIE3bits	set	1817
 10027  0710                     _PIR4bits	set	1808
 10028  079D                     _PMD7	set	1949
 10029  079C                     _PMD6	set	1948
 10030  079B                     _PMD5	set	1947
 10031  079A                     _PMD4	set	1946
 10032  0799                     _PMD3	set	1945
 10033  0798                     _PMD2	set	1944
 10034  0797                     _PMD1	set	1943
 10035  0796                     _PMD0	set	1942
 10036  0892                     _OSCTUNE	set	2194
 10037  0893                     _OSCFRQ	set	2195
 10038  0891                     _OSCEN	set	2193
 10039  088F                     _OSCCON3	set	2191
 10040  088D                     _OSCCON1	set	2189
 10041  1ECB                     _RX1DTPPS	set	7883
 10042  1EC6                     _SSP1DATPPS	set	7878
 10043  1EC5                     _SSP1CLKPPS	set	7877
 10044  1F4F                     _WPUCbits	set	8015
 10045  1F4E                     _ANSELCbits	set	8014
 10046  1F39                     _WPUAbits	set	7993
 10047  1F38                     _ANSELAbits	set	7992
 10048  1F27                     _RC7PPS	set	7975
 10049  1F26                     _RC6PPS	set	7974
 10050  1F25                     _RC5PPS	set	7973
 10051  1F15                     _RA5PPS	set	7957
 10052  1F24                     _RC4PPS	set	7972
 10053  1F23                     _RC3PPS	set	7971
 10054  1F14                     _RA4PPS	set	7956
 10055  1F51                     _SLRCONC	set	8017
 10056  1F46                     _SLRCONB	set	8006
 10057  1F3B                     _SLRCONA	set	7995
 10058  1F50                     _ODCONC	set	8016
 10059  1F45                     _ODCONB	set	8005
 10060  1F3A                     _ODCONA	set	7994
 10061  1F4F                     _WPUC	set	8015
 10062  1F39                     _WPUA	set	7993
 10063  1F44                     _WPUB	set	8004
 10064  1F38                     _ANSELA	set	7992
 10065  1F43                     _ANSELB	set	8003
 10066  1F4E                     _ANSELC	set	8014
 10067                           
 10068                           	psect	stringtext2
 10069  3000                     __pstringtext2:	
 10070  3000                     STR_26:	
 10071  3000  3425               	retlw	37	;'%'
 10072  3001  3463               	retlw	99	;'c'
 10073  3002  3425               	retlw	37	;'%'
 10074  3003  3463               	retlw	99	;'c'
 10075  3004  3425               	retlw	37	;'%'
 10076  3005  3463               	retlw	99	;'c'
 10077  3006  3425               	retlw	37	;'%'
 10078  3007  3463               	retlw	99	;'c'
 10079  3008  340D               	retlw	13
 10080  3009  3400               	retlw	0
 10081                           
 10082                           	psect	stringtext3
 10083  300A                     __pstringtext3:	
 10084  300A                     STR_27:	
 10085  300A  3425               	retlw	37	;'%'
 10086  300B  3463               	retlw	99	;'c'
 10087  300C  3425               	retlw	37	;'%'
 10088  300D  3463               	retlw	99	;'c'
 10089  300E  3425               	retlw	37	;'%'
 10090  300F  3463               	retlw	99	;'c'
 10091  3010  3420               	retlw	32	;' '
 10092  3011  340D               	retlw	13
 10093  3012  3400               	retlw	0
 10094                           
 10095                           	psect	stringtext4
 10096  3013                     __pstringtext4:	
 10097  3013                     STR_25:	
 10098  3013  3420               	retlw	32	;' '
 10099  3014  3425               	retlw	37	;'%'
 10100  3015  3463               	retlw	99	;'c'
 10101  3016  3425               	retlw	37	;'%'
 10102  3017  3463               	retlw	99	;'c'
 10103  3018  3425               	retlw	37	;'%'
 10104  3019  3463               	retlw	99	;'c'
 10105  301A  340D               	retlw	13
 10106  301B  3400               	retlw	0
 10107                           
 10108                           	psect	stringtext5
 10109  301C                     __pstringtext5:	
 10110  301C                     STR_22:	
 10111  301C  3448               	retlw	72	;'H'
 10112  301D  3445               	retlw	69	;'E'
 10113  301E  3459               	retlw	89	;'Y'
 10114  301F  3459               	retlw	89	;'Y'
 10115  3020  3459               	retlw	89	;'Y'
 10116  3021  3459               	retlw	89	;'Y'
 10117  3022  3459               	retlw	89	;'Y'
 10118  3023  3459               	retlw	89	;'Y'
 10119  3024  3400               	retlw	0
 10120                           
 10121                           	psect	stringtext6
 10122  3025                     __pstringtext6:	
 10123  3025                     STR_28:	
 10124  3025  3425               	retlw	37	;'%'
 10125  3026  3463               	retlw	99	;'c'
 10126  3027  3425               	retlw	37	;'%'
 10127  3028  3463               	retlw	99	;'c'
 10128  3029  3420               	retlw	32	;' '
 10129  302A  3420               	retlw	32	;' '
 10130  302B  340D               	retlw	13
 10131  302C  3400               	retlw	0
 10132                           
 10133                           	psect	stringtext7
 10134  302D                     __pstringtext7:	
 10135  302D                     STR_24:	
 10136  302D  3420               	retlw	32	;' '
 10137  302E  3420               	retlw	32	;' '
 10138  302F  3425               	retlw	37	;'%'
 10139  3030  3463               	retlw	99	;'c'
 10140  3031  3425               	retlw	37	;'%'
 10141  3032  3463               	retlw	99	;'c'
 10142  3033  340D               	retlw	13
 10143  3034  3400               	retlw	0
 10144                           
 10145                           	psect	stringtext8
 10146  3035                     __pstringtext8:	
 10147  3035                     STR_29:	
 10148  3035  3425               	retlw	37	;'%'
 10149  3036  3463               	retlw	99	;'c'
 10150  3037  3420               	retlw	32	;' '
 10151  3038  3420               	retlw	32	;' '
 10152  3039  3420               	retlw	32	;' '
 10153  303A  340D               	retlw	13
 10154  303B  3400               	retlw	0
 10155                           
 10156                           	psect	stringtext9
 10157  303C                     __pstringtext9:	
 10158  303C                     STR_23:	
 10159  303C  3420               	retlw	32	;' '
 10160  303D  3420               	retlw	32	;' '
 10161  303E  3420               	retlw	32	;' '
 10162  303F  3425               	retlw	37	;'%'
 10163  3040  3463               	retlw	99	;'c'
 10164  3041  340D               	retlw	13
 10165  3042  3400               	retlw	0
 10166                           
 10167                           	psect	stringtext10
 10168  3043                     __pstringtext10:	
 10169  3043                     STR_30:	
 10170  3043  3420               	retlw	32	;' '
 10171  3044  3420               	retlw	32	;' '
 10172  3045  3420               	retlw	32	;' '
 10173  3046  3420               	retlw	32	;' '
 10174  3047  340D               	retlw	13
 10175  3048  3400               	retlw	0
 10176                           
 10177                           	psect	stringtext11
 10178  3049                     __pstringtext11:	
 10179  3049                     STR_5:	
 10180  3049  3442               	retlw	66	;'B'
 10181  304A  3420               	retlw	32	;' '
 10182  304B  3420               	retlw	32	;' '
 10183  304C  3420               	retlw	32	;' '
 10184  304D  340D               	retlw	13
 10185  304E  3400               	retlw	0
 10186                           
 10187                           	psect	stringtext12
 10188  304F                     __pstringtext12:	
 10189  304F                     STR_7:	
 10190  304F  3443               	retlw	67	;'C'
 10191  3050  3420               	retlw	32	;' '
 10192  3051  3420               	retlw	32	;' '
 10193  3052  3420               	retlw	32	;' '
 10194  3053  340D               	retlw	13
 10195  3054  3400               	retlw	0
 10196                           
 10197                           	psect	stringtext13
 10198  3055                     __pstringtext13:	
 10199  3055                     STR_1:	
 10200  3055  3450               	retlw	80	;'P'
 10201  3056  3443               	retlw	67	;'C'
 10202  3057  3420               	retlw	32	;' '
 10203  3058  3420               	retlw	32	;' '
 10204  3059  340D               	retlw	13
 10205  305A  3400               	retlw	0
 10206                           
 10207                           	psect	stringtext14
 10208  305B                     __pstringtext14:	
 10209  305B                     STR_4:	
 10210  305B  344C               	retlw	76	;'L'
 10211  305C  3445               	retlw	69	;'E'
 10212  305D  3444               	retlw	68	;'D'
 10213  305E  3420               	retlw	32	;' '
 10214  305F  340D               	retlw	13
 10215  3060  3400               	retlw	0
 10216                           
 10217                           	psect	stringtext15
 10218  3061                     __pstringtext15:	
 10219  3061                     STR_3:	
 10220  3061  3441               	retlw	65	;'A'
 10221  3062  344E               	retlw	78	;'N'
 10222  3063  3449               	retlw	73	;'I'
 10223  3064  3420               	retlw	32	;' '
 10224  3065  340D               	retlw	13
 10225  3066  3400               	retlw	0
 10226                           
 10227                           	psect	stringtext16
 10228  3067                     __pstringtext16:	
 10229  3067                     STR_8:	
 10230  3067  3441               	retlw	65	;'A'
 10231  3068  344C               	retlw	76	;'L'
 10232  3069  344C               	retlw	76	;'L'
 10233  306A  3420               	retlw	32	;' '
 10234  306B  340D               	retlw	13
 10235  306C  3400               	retlw	0
 10236                           
 10237                           	psect	stringtext17
 10238  306D                     __pstringtext17:	
 10239  306D                     STR_6:	
 10240  306D  3446               	retlw	70	;'F'
 10241  306E  3441               	retlw	65	;'A'
 10242  306F  3444               	retlw	68	;'D'
 10243  3070  3445               	retlw	69	;'E'
 10244  3071  340D               	retlw	13
 10245  3072  3400               	retlw	0
 10246                           
 10247                           	psect	stringtext18
 10248  3073                     __pstringtext18:	
 10249  3073                     STR_2:	
 10250  3073  3442               	retlw	66	;'B'
 10251  3074  3445               	retlw	69	;'E'
 10252  3075  3441               	retlw	65	;'A'
 10253  3076  3454               	retlw	84	;'T'
 10254  3077  340D               	retlw	13
 10255  3078  3400               	retlw	0
 10256                           
 10257                           	psect	stringtext19
 10258  3079                     __pstringtext19:	
 10259  3079                     STR_20:	
 10260  3079  3420               	retlw	32	;' '
 10261  307A  3420               	retlw	32	;' '
 10262  307B  3420               	retlw	32	;' '
 10263  307C  3420               	retlw	32	;' '
 10264  307D  3400               	retlw	0
 10265                           
 10266                           	psect	stringtext20
 10267  307E                     __pstringtext20:	
 10268  307E                     STR_12:	
 10269  307E  3441               	retlw	65	;'A'
 10270  307F  342D               	retlw	45	;'-'
 10271  3080  340D               	retlw	13
 10272  3081  3400               	retlw	0
 10273                           
 10274                           	psect	stringtext21
 10275  3082                     __pstringtext21:	
 10276  3082                     STR_9:	
 10277  3082  3442               	retlw	66	;'B'
 10278  3083  342D               	retlw	45	;'-'
 10279  3084  340D               	retlw	13
 10280  3085  3400               	retlw	0
 10281                           
 10282                           	psect	stringtext22
 10283  3086                     __pstringtext22:	
 10284  3086                     STR_11:	
 10285  3086  3443               	retlw	67	;'C'
 10286  3087  342D               	retlw	45	;'-'
 10287  3088  340D               	retlw	13
 10288  3089  3400               	retlw	0
 10289                           
 10290                           	psect	stringtext23
 10291  308A                     __pstringtext23:	
 10292  308A                     STR_10:	
 10293  308A  3446               	retlw	70	;'F'
 10294  308B  342D               	retlw	45	;'-'
 10295  308C  340D               	retlw	13
 10296  308D  3400               	retlw	0
 10297                           
 10298                           	psect	stringtext24
 10299  308E                     __pstringtext24:	
 10300  308E                     STR_19:	
 10301  308E  3453               	retlw	83	;'S'
 10302  308F  3450               	retlw	80	;'P'
 10303  3090  340D               	retlw	13
 10304  3091  3400               	retlw	0
 10305                           
 10306                           	psect	stringtext25
 10307  3092                     __pstringtext25:	
 10308  3092                     STR_17:	
 10309  3092  3441               	retlw	65	;'A'
 10310  3093  346E               	retlw	110	;'n'
 10311  3094  340D               	retlw	13
 10312  3095  3400               	retlw	0
 10313                           
 10314                           	psect	stringtext26
 10315  3096                     __pstringtext26:	
 10316  3096                     STR_18:	
 10317  3096  3442               	retlw	66	;'B'
 10318  3097  3472               	retlw	114	;'r'
 10319  3098  340D               	retlw	13
 10320  3099  3400               	retlw	0
 10321                           
 10322                           	psect	stringtext27
 10323  309A                     __pstringtext27:	
 10324  309A                     STR_31:	
 10325  309A  3464               	retlw	100	;'d'
 10326  309B  340D               	retlw	13
 10327  309C  3400               	retlw	0
 10328                           
 10329                           	psect	stringtext28
 10330  309D                     __pstringtext28:	
 10331  309D                     STR_15:	
 10332  309D  3462               	retlw	98	;'b'
 10333  309E  340D               	retlw	13
 10334  309F  3400               	retlw	0
 10335                           
 10336                           	psect	stringtext29
 10337  30A0                     __pstringtext29:	
 10338  30A0                     STR_14:	
 10339  30A0  3467               	retlw	103	;'g'
 10340  30A1  340D               	retlw	13
 10341  30A2  3400               	retlw	0
 10342                           
 10343                           	psect	stringtext30
 10344  30A3                     __pstringtext30:	
 10345  30A3                     STR_16:	
 10346  30A3  3468               	retlw	104	;'h'
 10347  30A4  340D               	retlw	13
 10348  30A5  3400               	retlw	0
 10349                           
 10350                           	psect	stringtext31
 10351  0000                     __pstringtext31:	
 10352  3047                     
 10353                           ; #config settings
 10354  0000                     
 10355                           	psect	cinit
 10356  004E                     start_initialization:	
 10357  004E                     __initialization:		;BIGRAM
 10358                           
 10359                           ; Initialize objects allocated to BANK2
 10360  004E  30C1               	movlw	low __pidataBANK2
 10361  004F  0084               	movwf	4
 10362  0050  30AD               	movlw	(high __pidataBANK2)| (0+128)
 10363  0051  0085               	movwf	5
 10364  0052  305C               	movlw	low __pdataBANK2
 10365  0053  0086               	movwf	6
 10366  0054  3001               	movlw	high __pdataBANK2
 10367  0055  0087               	movwf	7
 10368  0056  3000               	movlw	0
 10369  0057  00FF               	movwf	btemp+1
 10370  0058  300D               	movlw	13
 10371  0059  31AD  25B5  3180   	fcall	init_ram
 10372                           
 10373                           ; Initialize objects allocated to BANK3
 10374  005C  0143               	movlb	3	; select bank3
 10375  005D  3180  2002  3180   	fcall	__pidataBANK3	;fetch initializer
 10376  0060  00ED               	movwf	__pdataBANK3& (0+127)
 10377  0061  3180  2003  3180   	fcall	__pidataBANK3+1	;fetch initializer
 10378  0064  00EE               	movwf	(__pdataBANK3+1)& (0+127)
 10379                           
 10380                           ; Clear objects allocated to BIGRAM
 10381  0065  30EE               	movlw	low (0+9198)
 10382  0066  0084               	movwf	4
 10383  0067  3023               	movlw	high (0+9198)
 10384  0068  0085               	movwf	5
 10385  0069  3002               	movlw	2
 10386  006A  00FE               	movwf	btemp
 10387  006B  3004               	movlw	4
 10388  006C  00FF               	movwf	btemp+1
 10389  006D  31AD  25A9  3180   	fcall	clear_ram0
 10390                           
 10391                           ; Clear objects allocated to COMMON
 10392  0070  01F0               	clrf	__pbssCOMMON& (0+127)
 10393  0071  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10394  0072  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10395  0073  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10396  0074  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10397  0075  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10398  0076  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10399                           
 10400                           ; Clear objects allocated to BANK2
 10401  0077  3020               	movlw	low __pbssBANK2
 10402  0078  0084               	movwf	4
 10403  0079  3001               	movlw	high __pbssBANK2
 10404  007A  0085               	movwf	5
 10405  007B  303C               	movlw	60
 10406  007C  00FE               	movwf	btemp
 10407  007D  3000               	movlw	0
 10408  007E  00FF               	movwf	btemp+1
 10409  007F  31AD  25A9  3180   	fcall	clear_ram0
 10410                           
 10411                           ; Clear objects allocated to BANK3
 10412  0082  30A0               	movlw	low __pbssBANK3
 10413  0083  0084               	movwf	4
 10414  0084  3001               	movlw	high __pbssBANK3
 10415  0085  0085               	movwf	5
 10416  0086  3049               	movlw	73
 10417  0087  00FE               	movwf	btemp
 10418  0088  3000               	movlw	0
 10419  0089  00FF               	movwf	btemp+1
 10420  008A  31AD  25A9  3180   	fcall	clear_ram0
 10421                           
 10422                           ; Clear objects allocated to BANK4
 10423  008D  3020               	movlw	low __pbssBANK4
 10424  008E  0084               	movwf	4
 10425  008F  3002               	movlw	high __pbssBANK4
 10426  0090  0085               	movwf	5
 10427  0091  304A               	movlw	74
 10428  0092  00FE               	movwf	btemp
 10429  0093  3000               	movlw	0
 10430  0094  00FF               	movwf	btemp+1
 10431  0095  31AD  25A9  3180   	fcall	clear_ram0
 10432                           
 10433                           ; Clear objects allocated to BANK5
 10434  0098  30A0               	movlw	low __pbssBANK5
 10435  0099  0084               	movwf	4
 10436  009A  3002               	movlw	high __pbssBANK5
 10437  009B  0085               	movwf	5
 10438  009C  304A               	movlw	74
 10439  009D  00FE               	movwf	btemp
 10440  009E  3000               	movlw	0
 10441  009F  00FF               	movwf	btemp+1
 10442  00A0  31AD  25A9  3180   	fcall	clear_ram0
 10443                           
 10444                           ; Clear objects allocated to BANK6
 10445  00A3  3020               	movlw	low __pbssBANK6
 10446  00A4  0084               	movwf	4
 10447  00A5  3003               	movlw	high __pbssBANK6
 10448  00A6  0085               	movwf	5
 10449  00A7  3037               	movlw	55
 10450  00A8  00FE               	movwf	btemp
 10451  00A9  3000               	movlw	0
 10452  00AA  00FF               	movwf	btemp+1
 10453  00AB  31AD  25A9  3180   	fcall	clear_ram0
 10454                           
 10455                           ; Clear objects allocated to BANK7
 10456  00AE  30A0               	movlw	low __pbssBANK7
 10457  00AF  0084               	movwf	4
 10458  00B0  3003               	movlw	high __pbssBANK7
 10459  00B1  0085               	movwf	5
 10460  00B2  3040               	movlw	64
 10461  00B3  00FE               	movwf	btemp
 10462  00B4  3000               	movlw	0
 10463  00B5  00FF               	movwf	btemp+1
 10464  00B6  31AD  25A9  3180   	fcall	clear_ram0
 10465  00B9                     end_of_initialization:	
 10466                           ;End of C runtime variable initialization code
 10467                           
 10468  00B9                     __end_of__initialization:	
 10469  00B9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10470  00BA  0140               	movlb	0
 10471  00BB  31A3  2B13         	ljmp	_main	;jump to C main() function
 10472                           
 10473                           	psect	bssCOMMON
 10474  0070                     __pbssCOMMON:	
 10475  0070                     _currentState:	
 10476  0070                     	ds	2
 10477  0072                     _currentMenu:	
 10478  0072                     	ds	2
 10479  0074                     _downState:	
 10480  0074                     	ds	1
 10481  0075                     _upState:	
 10482  0075                     	ds	1
 10483  0076                     _eusart1RxHead:	
 10484  0076                     	ds	1
 10485                           
 10486                           	psect	bssBANK2
 10487  0120                     __pbssBANK2:	
 10488  0120                     _i2c1_object:	
 10489  0120                     	ds	5
 10490  0125                     _manualColor:	
 10491  0125                     	ds	4
 10492  0129                     _width:	
 10493  0129                     	ds	2
 10494  012B                     _flags:	
 10495  012B                     	ds	2
 10496  012D                     _lastBeatLedChange:	
 10497  012D                     	ds	2
 10498  012F                     _lastLedActiveTime:	
 10499  012F                     	ds	2
 10500  0131                     _lastRun:	
 10501  0131                     	ds	2
 10502  0133                     _lastBeat:	
 10503  0133                     	ds	2
 10504  0135                     _lastIncTime:	
 10505  0135                     	ds	2
 10506  0137                     _previousTask:	
 10507  0137                     	ds	2
 10508  0139                     _currentTime:	
 10509  0139                     	ds	2
 10510  013B                     _lastTime:	
 10511  013B                     	ds	2
 10512  013D                     _p_i2c1_trb_current:	
 10513  013D                     	ds	2
 10514  013F                     _lastDetected:	
 10515  013F                     	ds	1
 10516  0140                     _thresholdExceeded:	
 10517  0140                     	ds	1
 10518  0141                     _detected:	
 10519  0141                     	ds	1
 10520  0142                     _position:	
 10521  0142                     	ds	1
 10522  0143                     _tm1650_status:	
 10523  0143                     	ds	1
 10524  0144                     _animationBrightnessControl:	
 10525  0144                     	ds	1
 10526  0145                     _colorModeSelected:	
 10527  0145                     	ds	1
 10528  0146                     _beatHold:	
 10529  0146                     	ds	1
 10530  0147                     _enterPressed:	
 10531  0147                     	ds	1
 10532  0148                     _menuPressed:	
 10533  0148                     	ds	1
 10534  0149                     _currentSelection:	
 10535  0149                     	ds	1
 10536  014A                     _menuSelected:	
 10537  014A                     	ds	1
 10538  014B                     _enterState:	
 10539  014B                     	ds	1
 10540  014C                     _menuState:	
 10541  014C                     	ds	1
 10542  014D                     _enter:	
 10543  014D                     	ds	1
 10544  014E                     _down:	
 10545  014E                     	ds	1
 10546  014F                     _up:	
 10547  014F                     	ds	1
 10548  0150                     _menu:	
 10549  0150                     	ds	1
 10550  0151                     I2C1_ISR@i2c_10bit_address_restart:	
 10551  0151                     	ds	1
 10552  0152                     I2C1_ISR@i2c_bytes_left:	
 10553  0152                     	ds	1
 10554  0153                     I2C1_ISR@pi2c_buf_ptr:	
 10555  0153                     	ds	1
 10556  0154                     _p_i2c1_current:	
 10557  0154                     	ds	1
 10558  0155                     _i2c1_trb_count:	
 10559  0155                     	ds	1
 10560  0156                     _i2c1_state:	
 10561  0156                     	ds	1
 10562  0157                     _eusart1RxLastError:	
 10563  0157                     	ds	1
 10564  0158                     _eusart1RxCount:	
 10565  0158                     	ds	1
 10566  0159                     _eusart1RxTail:	
 10567  0159                     	ds	1
 10568  015A                     I2C1_ISR@i2c_address:	
 10569  015A                     	ds	2
 10570                           
 10571                           	psect	dataBANK2
 10572  015C                     __pdataBANK2:	
 10573  015C                     _delay:	
 10574  015C                     	ds	2
 10575  015E                     _threshold:	
 10576  015E                     	ds	2
 10577  0160                     _incInterval:	
 10578  0160                     	ds	2
 10579  0162                     _address:	
 10580  0162                     	ds	2
 10581  0164                     _animationSpeed:	
 10582  0164                     	ds	1
 10583  0165                     _animationBrightness:	
 10584  0165                     	ds	1
 10585  0166                     _animationModeSelected:	
 10586  0166                     	ds	1
 10587  0167                     _startup:	
 10588  0167                     	ds	1
 10589  0168                     _beatBrightness:	
 10590  0168                     	ds	1
 10591                           
 10592                           	psect	bssBANK3
 10593  01A0                     __pbssBANK3:	
 10594  01A0                     _animationHue:	
 10595  01A0                     	ds	10
 10596  01AA                     _eusart1RxStatusBuffer:	
 10597  01AA                     	ds	8
 10598  01B2                     _nout:	
 10599  01B2                     	ds	2
 10600  01B4                     _prec:	
 10601  01B4                     	ds	2
 10602  01B6                     _arrayIndex:	
 10603  01B6                     	ds	2
 10604  01B8                     _thresholdCount:	
 10605  01B8                     	ds	2
 10606  01BA                     _bpm:	
 10607  01BA                     	ds	2
 10608  01BC                     _lastActiveTime:	
 10609  01BC                     	ds	2
 10610  01BE                     _startTime:	
 10611  01BE                     	ds	2
 10612  01C0                     _manual:	
 10613  01C0                     	ds	11
 10614  01CB                     _animation:	
 10615  01CB                     	ds	11
 10616  01D6                     _beat:	
 10617  01D6                     	ds	11
 10618  01E1                     I2C1_MasterWrite@trBlock:	
 10619  01E1                     	ds	4
 10620  01E5                     _i2c1_tr_queue:	
 10621  01E5                     	ds	4
 10622                           
 10623                           	psect	dataBANK3
 10624  01ED                     __pdataBANK3:	
 10625  01ED                     _initial:	
 10626  01ED                     	ds	2
 10627                           
 10628                           	psect	bssBANK4
 10629  0220                     __pbssBANK4:	
 10630  0220                     _animationColor:	
 10631  0220                     	ds	4
 10632  0224                     _animationBrightnessCtrl:	
 10633  0224                     	ds	11
 10634  022F                     _beatMixed:	
 10635  022F                     	ds	11
 10636  023A                     _beatCont:	
 10637  023A                     	ds	11
 10638  0245                     _beatFade:	
 10639  0245                     	ds	11
 10640  0250                     _beatStrobe:	
 10641  0250                     	ds	11
 10642  025B                     _dmx:	
 10643  025B                     	ds	11
 10644  0266                     I2C1_MasterRead@trBlock:	
 10645  0266                     	ds	4
 10646                           
 10647                           	psect	bssBANK5
 10648  02A0                     __pbssBANK5:	
 10649  02A0                     _eusart1RxBuffer:	
 10650  02A0                     	ds	8
 10651  02A8                     _manualRed:	
 10652  02A8                     	ds	11
 10653  02B3                     _beatMixedTask:	
 10654  02B3                     	ds	11
 10655  02BE                     _beatContTask:	
 10656  02BE                     	ds	11
 10657  02C9                     _beatFadeTask:	
 10658  02C9                     	ds	11
 10659  02D4                     _beatStrobeTask:	
 10660  02D4                     	ds	11
 10661  02DF                     _dmx_task:	
 10662  02DF                     	ds	11
 10663                           
 10664                           	psect	bssBANK6
 10665  0320                     __pbssBANK6:	
 10666  0320                     _manualWhite:	
 10667  0320                     	ds	11
 10668  032B                     _manualBlue:	
 10669  032B                     	ds	11
 10670  0336                     _manualGreen:	
 10671  0336                     	ds	11
 10672  0341                     _animationSpeedCtrl:	
 10673  0341                     	ds	11
 10674  034C                     _animationType:	
 10675  034C                     	ds	11
 10676                           
 10677                           	psect	bssBANK7
 10678  03A0                     __pbssBANK7:	
 10679  03A0                     _dbuf:	
 10680  03A0                     	ds	32
 10681  03C0                     _buttons:	
 10682  03C0                     	ds	32
 10683                           
 10684                           	psect	inittext
 10685  2DB5                     init_ram:	
 10686  2DB5  00FE               	movwf	btemp
 10687  2DB6                     initloop:	
 10688  2DB6  0012               	moviw fsr0++
 10689  2DB7  001E               	movwi fsr1++
 10690  2DB8  3001               	movlw	1
 10691  2DB9  02FE               	subwf	btemp,f
 10692  2DBA  3000               	movlw	0
 10693  2DBB  3BFF               	subwfb	btemp+1,f
 10694  2DBC  087F               	movf	btemp+1,w
 10695  2DBD  047E               	iorwf	btemp,w
 10696  2DBE  1D03               	skipz
 10697  2DBF  2DB6               	goto	initloop
 10698  2DC0  3400               	retlw	0
 10699                           
 10700                           	psect	clrtext
 10701  2DA9                     clear_ram0:	
 10702                           ;	Called with FSR0 containing the base address, and
 10703                           ;	btemp/btemp+1 has the size to clear
 10704                           
 10705  2DA9  0064               	clrwdt	;clear the watchdog before getting into this loop
 10706  2DAA                     clrloop0:	
 10707  2DAA  0180               	clrf	0	;clear RAM location pointed to by FSR
 10708  2DAB  3101               	addfsr 0,1
 10709  2DAC  3001               	movlw	1
 10710  2DAD  02FE               	subwf	btemp,f
 10711  2DAE  3000               	movlw	0
 10712  2DAF  3BFF               	subwfb	btemp+1,f
 10713  2DB0  087F               	movf	btemp+1,w
 10714  2DB1  047E               	iorwf	btemp,w
 10715  2DB2  1D03               	skipz
 10716  2DB3  2DAA               	goto	clrloop0	;have we reached the end yet?
 10717  2DB4  3400               	retlw	0	;all done for this memory range, return
 10718                           
 10719                           	psect	cstackBANK2
 10720  0169                     __pcstackBANK2:	
 10721  0169                     ??_CONTROL_ANIMATION:	
 10722                           
 10723                           ; 1 bytes @ 0x0
 10724  0169                     	ds	2
 10725  016B                     ??_CONTROLLER_task:	
 10726                           
 10727                           ; 1 bytes @ 0x2
 10728  016B                     	ds	2
 10729  016D                     ??_main:	
 10730                           
 10731                           ; 1 bytes @ 0x4
 10732  016D                     	ds	2
 10733                           
 10734                           	psect	cstackBANK1
 10735  00A0                     __pcstackBANK1:	
 10736  00A0                     ?_printf:	
 10737  00A0                     ?_HueToRGB:	
 10738                           ; 2 bytes @ 0x0
 10739                           
 10740  00A0                     printf@fmt:	
 10741                           ; 4 bytes @ 0x0
 10742                           
 10743  00A0                     HueToRGB@v1:	
 10744                           ; 2 bytes @ 0x0
 10745                           
 10746                           
 10747                           ; 4 bytes @ 0x0
 10748  00A0                     	ds	4
 10749  00A4                     HueToRGB@v2:	
 10750                           
 10751                           ; 4 bytes @ 0x4
 10752  00A4                     	ds	4
 10753  00A8                     HueToRGB@vH:	
 10754                           
 10755                           ; 4 bytes @ 0x8
 10756  00A8                     	ds	4
 10757  00AC                     _HueToRGB$4179:	
 10758                           
 10759                           ; 4 bytes @ 0xC
 10760  00AC                     	ds	4
 10761  00B0                     ?___fltol:	
 10762  00B0                     ___fltol@f1:	
 10763                           ; 4 bytes @ 0x10
 10764                           
 10765                           
 10766                           ; 4 bytes @ 0x10
 10767  00B0                     	ds	4
 10768  00B4                     ??___fltol:	
 10769                           
 10770                           ; 1 bytes @ 0x14
 10771  00B4                     	ds	5
 10772  00B9                     ?_PWM3_LoadDutyValue:	
 10773  00B9                     ?_PWM4_LoadDutyValue:	
 10774                           ; 1 bytes @ 0x19
 10775                           
 10776  00B9                     ?_PWM1_LoadDutyValue:	
 10777                           ; 1 bytes @ 0x19
 10778                           
 10779  00B9                     ?_PWM2_LoadDutyValue:	
 10780                           ; 1 bytes @ 0x19
 10781                           
 10782  00B9                     ?_HSLToRGB:	
 10783                           ; 1 bytes @ 0x19
 10784                           
 10785  00B9                     ?_beatBrightnessCalculation:	
 10786                           ; 4 bytes @ 0x19
 10787                           
 10788  00B9                     PWM3_LoadDutyValue@dutyValue:	
 10789                           ; 4 bytes @ 0x19
 10790                           
 10791  00B9                     PWM4_LoadDutyValue@dutyValue:	
 10792                           ; 2 bytes @ 0x19
 10793                           
 10794  00B9                     PWM1_LoadDutyValue@dutyValue:	
 10795                           ; 2 bytes @ 0x19
 10796                           
 10797  00B9                     PWM2_LoadDutyValue@dutyValue:	
 10798                           ; 2 bytes @ 0x19
 10799                           
 10800  00B9                     HSLToRGB@hsl:	
 10801                           ; 2 bytes @ 0x19
 10802                           
 10803                           
 10804                           ; 10 bytes @ 0x19
 10805  00B9                     	ds	4
 10806  00BD                     ??_beatBrightnessCalculation:	
 10807                           
 10808                           ; 1 bytes @ 0x1D
 10809  00BD                     	ds	5
 10810  00C2                     beatBrightnessCalculation@temp:	
 10811                           
 10812                           ; 1 bytes @ 0x22
 10813  00C2                     	ds	1
 10814  00C3                     ??_HSLToRGB:	
 10815  00C3                     ?_beatColorCreator:	
 10816                           ; 1 bytes @ 0x23
 10817                           
 10818  00C3                     beatColorCreator@inGreen:	
 10819                           ; 4 bytes @ 0x23
 10820                           
 10821                           
 10822                           ; 1 bytes @ 0x23
 10823  00C3                     	ds	1
 10824  00C4                     beatColorCreator@inBlue:	
 10825  00C4                     _HSLToRGB$4180:	
 10826                           ; 1 bytes @ 0x24
 10827                           
 10828                           
 10829                           ; 4 bytes @ 0x24
 10830  00C4                     	ds	1
 10831  00C5                     beatColorCreator@inWhite:	
 10832                           
 10833                           ; 1 bytes @ 0x25
 10834  00C5                     	ds	2
 10835  00C7                     ??_beatColorCreator:	
 10836                           
 10837                           ; 1 bytes @ 0x27
 10838  00C7                     	ds	1
 10839  00C8                     beatColorCreator@inRed:	
 10840  00C8                     _HSLToRGB$4183:	
 10841                           ; 1 bytes @ 0x28
 10842                           
 10843                           
 10844                           ; 4 bytes @ 0x28
 10845  00C8                     	ds	1
 10846  00C9                     _beatColorCreator$4196:	
 10847                           
 10848                           ; 4 bytes @ 0x29
 10849  00C9                     	ds	3
 10850  00CC                     _HSLToRGB$4181:	
 10851                           
 10852                           ; 4 bytes @ 0x2C
 10853  00CC                     	ds	1
 10854  00CD                     beatColorCreator@tempColor:	
 10855                           
 10856                           ; 4 bytes @ 0x2D
 10857  00CD                     	ds	3
 10858  00D0                     _HSLToRGB$4182:	
 10859                           
 10860                           ; 4 bytes @ 0x30
 10861  00D0                     	ds	1
 10862  00D1                     ?_LED_setColor:	
 10863  00D1                     LED_setColor@input:	
 10864                           ; 1 bytes @ 0x31
 10865                           
 10866                           
 10867                           ; 4 bytes @ 0x31
 10868  00D1                     	ds	3
 10869  00D4                     HSLToRGB@v1:	
 10870                           
 10871                           ; 4 bytes @ 0x34
 10872  00D4                     	ds	1
 10873  00D5                     ??_LED_setColor:	
 10874                           
 10875                           ; 1 bytes @ 0x35
 10876  00D5                     	ds	3
 10877  00D8                     HSLToRGB@hue:	
 10878                           
 10879                           ; 4 bytes @ 0x38
 10880  00D8                     	ds	1
 10881  00D9                     ??_CONTROL_MANUAL:	
 10882  00D9                     ??_LED_task_DMX:	
 10883                           ; 1 bytes @ 0x39
 10884                           
 10885  00D9                     ??_LED_task_BEAT_STROBE:	
 10886                           ; 1 bytes @ 0x39
 10887                           
 10888                           
 10889                           ; 1 bytes @ 0x39
 10890  00D9                     	ds	2
 10891  00DB                     LED_task_BEAT_STROBE@beatState:	
 10892                           
 10893                           ; 1 bytes @ 0x3B
 10894  00DB                     	ds	1
 10895  00DC                     HSLToRGB@v2:	
 10896                           
 10897                           ; 4 bytes @ 0x3C
 10898  00DC                     	ds	2
 10899  00DE                     LED_task_DMX@dmx:	
 10900                           
 10901                           ; 4 bytes @ 0x3E
 10902  00DE                     	ds	2
 10903  00E0                     HSLToRGB@rgb:	
 10904                           
 10905                           ; 4 bytes @ 0x40
 10906  00E0                     	ds	2
 10907  00E2                     ??_CONTROL_DMX:	
 10908                           
 10909                           ; 1 bytes @ 0x42
 10910  00E2                     	ds	2
 10911  00E4                     ??_LED_task_BEAT_CONTINUOUS:	
 10912  00E4                     ?_LED_task_ANIMATION:	
 10913                           ; 1 bytes @ 0x44
 10914                           
 10915  00E4                     LED_task_ANIMATION@brightness:	
 10916                           ; 1 bytes @ 0x44
 10917                           
 10918                           
 10919                           ; 1 bytes @ 0x44
 10920  00E4                     	ds	1
 10921  00E5                     LED_task_ANIMATION@speed:	
 10922                           
 10923                           ; 1 bytes @ 0x45
 10924  00E5                     	ds	1
 10925  00E6                     ??_LED_task_ANIMATION:	
 10926  00E6                     LED_task_BEAT_CONTINUOUS@beatState:	
 10927                           ; 1 bytes @ 0x46
 10928                           
 10929                           
 10930                           ; 1 bytes @ 0x46
 10931  00E6                     	ds	1
 10932  00E7                     ??_CONTROL_BEAT:	
 10933                           
 10934                           ; 1 bytes @ 0x47
 10935  00E7                     	ds	3
 10936  00EA                     LED_task_ANIMATION@mode:	
 10937                           
 10938                           ; 1 bytes @ 0x4A
 10939  00EA                     	ds	1
 10940  00EB                     LED_task_ANIMATION@animationColor:	
 10941                           
 10942                           ; 4 bytes @ 0x4B
 10943  00EB                     	ds	4
 10944  00EF                     LED_task_ANIMATION@calculatedSpeed:	
 10945                           
 10946                           ; 1 bytes @ 0x4F
 10947  00EF                     	ds	1
 10948                           
 10949                           	psect	cstackCOMMON
 10950  0077                     __pcstackCOMMON:	
 10951  0077                     ?_PMD_Initialize:	
 10952  0077                     ?_PIN_MANAGER_Initialize:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955  0077                     ?_OSCILLATOR_Initialize:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958  0077                     ?_I2C1_Initialize:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961  0077                     ?_PWM1_Initialize:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964  0077                     ?_PWM2_Initialize:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967  0077                     ?_ADCC_Initialize:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970  0077                     ?_PWM4_Initialize:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973  0077                     ?_PWM3_Initialize:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976  0077                     ?_TMR2_Initialize:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979  0077                     ?_TMR0_Initialize:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982  0077                     ?_EUSART1_Initialize:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985  0077                     ?_EUSART1_Receive_ISR:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10995                           ; 1 bytes @ 0x0
 10996                           
 10997  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10998                           ; 1 bytes @ 0x0
 10999                           
 11000  0077                     ?_EUSART1_DefaultErrorHandler:	
 11001                           ; 1 bytes @ 0x0
 11002                           
 11003  0077                     ?_EUSART1_RxDataHandler:	
 11004                           ; 1 bytes @ 0x0
 11005                           
 11006  0077                     ??_EUSART1_RxDataHandler:	
 11007                           ; 1 bytes @ 0x0
 11008                           
 11009  0077                     ?_TMR0_ISR:	
 11010                           ; 1 bytes @ 0x0
 11011                           
 11012  0077                     ??_TMR0_ISR:	
 11013                           ; 1 bytes @ 0x0
 11014                           
 11015  0077                     ?_I2C1_BusCollisionISR:	
 11016                           ; 1 bytes @ 0x0
 11017                           
 11018  0077                     ??_I2C1_BusCollisionISR:	
 11019                           ; 1 bytes @ 0x0
 11020                           
 11021  0077                     ?_I2C1_ISR:	
 11022                           ; 1 bytes @ 0x0
 11023                           
 11024  0077                     ?_ADCC_ThresholdISR:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027  0077                     ??_ADCC_ThresholdISR:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030  0077                     ?_TMR0_DefaultInterruptHandler:	
 11031                           ; 1 bytes @ 0x0
 11032                           
 11033  0077                     ??_TMR0_DefaultInterruptHandler:	
 11034                           ; 1 bytes @ 0x0
 11035                           
 11036  0077                     ?_I2C1_Stop:	
 11037                           ; 1 bytes @ 0x0
 11038                           
 11039  0077                     ??_I2C1_Stop:	
 11040                           ; 1 bytes @ 0x0
 11041                           
 11042  0077                     ?_I2C1_FunctionComplete:	
 11043                           ; 1 bytes @ 0x0
 11044                           
 11045  0077                     ??_I2C1_FunctionComplete:	
 11046                           ; 1 bytes @ 0x0
 11047                           
 11048  0077                     ?_ADCC_DefaultInterruptHandler:	
 11049                           ; 1 bytes @ 0x0
 11050                           
 11051  0077                     ??_ADCC_DefaultInterruptHandler:	
 11052                           ; 1 bytes @ 0x0
 11053                           
 11054  0077                     ?_CLOCK_init:	
 11055                           ; 1 bytes @ 0x0
 11056                           
 11057  0077                     ?_BUTTONS_init:	
 11058                           ; 1 bytes @ 0x0
 11059                           
 11060  0077                     ?_BEAT_init:	
 11061                           ; 1 bytes @ 0x0
 11062                           
 11063  0077                     ?_LED_init:	
 11064                           ; 1 bytes @ 0x0
 11065                           
 11066  0077                     ?_CONTROLLER_init:	
 11067                           ; 1 bytes @ 0x0
 11068                           
 11069  0077                     ?_TM1650_init:	
 11070                           ; 1 bytes @ 0x0
 11071                           
 11072  0077                     ?_DMX_init:	
 11073                           ; 1 bytes @ 0x0
 11074                           
 11075  0077                     ?_BUTTONS_task:	
 11076                           ; 1 bytes @ 0x0
 11077                           
 11078  0077                     ?_CONTROLLER_task:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081  0077                     ?_BEAT_task:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084  0077                     ?_GPIO_init:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087  0077                     ?_CLOCK_timerCallback:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090  0077                     ??_CLOCK_timerCallback:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093  0077                     ?_CONTROL_DMX:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096  0077                     ?_CONTROL_ANIMATION:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099  0077                     ?_CONTROL_MANUAL:	
 11100                           ; 1 bytes @ 0x0
 11101                           
 11102  0077                     ?_CONTROL_BEAT:	
 11103                           ; 1 bytes @ 0x0
 11104                           
 11105  0077                     ?_LED_task_DMX:	
 11106                           ; 1 bytes @ 0x0
 11107                           
 11108  0077                     ?_address_inc:	
 11109                           ; 1 bytes @ 0x0
 11110                           
 11111  0077                     ?_address_dec:	
 11112                           ; 1 bytes @ 0x0
 11113                           
 11114  0077                     ?_LED_task_BEAT_STROBE:	
 11115                           ; 1 bytes @ 0x0
 11116                           
 11117  0077                     ?_LED_task_BEAT_FADE:	
 11118                           ; 1 bytes @ 0x0
 11119                           
 11120  0077                     ?_LED_task_BEAT_CONTINUOUS:	
 11121                           ; 1 bytes @ 0x0
 11122                           
 11123  0077                     ?_LED_task_BEAT_MIXED:	
 11124                           ; 1 bytes @ 0x0
 11125                           
 11126  0077                     ?_TM1650_fastPrintNum_2digit:	
 11127                           ; 1 bytes @ 0x0
 11128                           
 11129  0077                     ?_LED_task_MANUAL:	
 11130                           ; 1 bytes @ 0x0
 11131                           
 11132  0077                     ?_colorInc:	
 11133                           ; 1 bytes @ 0x0
 11134                           
 11135  0077                     ?_colorDec:	
 11136                           ; 1 bytes @ 0x0
 11137                           
 11138  0077                     ?_DMX_interrupt:	
 11139                           ; 1 bytes @ 0x0
 11140                           
 11141  0077                     ??_DMX_interrupt:	
 11142                           ; 1 bytes @ 0x0
 11143                           
 11144  0077                     ?_SYSTEM_Initialize:	
 11145                           ; 1 bytes @ 0x0
 11146                           
 11147  0077                     ?_INTERRUPT_InterruptManager:	
 11148                           ; 1 bytes @ 0x0
 11149                           
 11150  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 11151                           ; 1 bytes @ 0x0
 11152                           
 11153  0077                     ?_ADCC_StartConversion:	
 11154                           ; 1 bytes @ 0x0
 11155                           
 11156  0077                     ?_main:	
 11157                           ; 1 bytes @ 0x0
 11158                           
 11159  0077                     ?_BUTTONS_isClicked:	
 11160                           ; 1 bytes @ 0x0
 11161                           
 11162  0077                     ?_BUTTONS_isHeld:	
 11163                           ; 1 bytes @ 0x0
 11164                           
 11165  0077                     ?_getCurrentMenu:	
 11166                           ; 1 bytes @ 0x0
 11167                           
 11168  0077                     ?_TM1650_enable:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171  0077                     ?_putch:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174  0077                     ?_adcThresholdHandler:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177  0077                     ??_adcThresholdHandler:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180  0077                     ?_BEAT_detected:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183  0077                     ?_DMX_getAddress:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186                           
 11187                           ; 1 bytes @ 0x0
 11188  0077                     	ds	1
 11189  0078                     ??_EUSART1_Receive_ISR:	
 11190  0078                     ??_EUSART1_DefaultErrorHandler:	
 11191                           ; 1 bytes @ 0x1
 11192                           
 11193  0078                     I2C1_Stop@completion_code:	
 11194                           ; 1 bytes @ 0x1
 11195                           
 11196                           
 11197                           ; 1 bytes @ 0x1
 11198  0078                     	ds	1
 11199  0079                     ??_I2C1_ISR:	
 11200                           
 11201                           ; 1 bytes @ 0x2
 11202  0079                     	ds	4
 11203  007D                     DMX_interrupt@dummy:	
 11204                           
 11205                           ; 1 bytes @ 0x6
 11206  007D                     	ds	1
 11207  007E                     ??_INTERRUPT_InterruptManager:	
 11208                           
 11209                           	psect	cstackBANK0
 11210  0020                     __pcstackBANK0:	
 11211                           ; 1 bytes @ 0x7
 11212                           
 11213  0020                     ?___fleq:	
 11214  0020                     ??_PMD_Initialize:	
 11215                           ; 1 bit 
 11216                           
 11217  0020                     ??_PIN_MANAGER_Initialize:	
 11218                           ; 1 bytes @ 0x0
 11219                           
 11220  0020                     ??_OSCILLATOR_Initialize:	
 11221                           ; 1 bytes @ 0x0
 11222                           
 11223  0020                     ??_I2C1_Initialize:	
 11224                           ; 1 bytes @ 0x0
 11225                           
 11226  0020                     ??_PWM1_Initialize:	
 11227                           ; 1 bytes @ 0x0
 11228                           
 11229  0020                     ??_PWM2_Initialize:	
 11230                           ; 1 bytes @ 0x0
 11231                           
 11232  0020                     ??_PWM4_Initialize:	
 11233                           ; 1 bytes @ 0x0
 11234                           
 11235  0020                     ??_PWM3_Initialize:	
 11236                           ; 1 bytes @ 0x0
 11237                           
 11238  0020                     ??_TMR2_Initialize:	
 11239                           ; 1 bytes @ 0x0
 11240                           
 11241  0020                     ?_EUSART1_SetRxInterruptHandler:	
 11242                           ; 1 bytes @ 0x0
 11243                           
 11244  0020                     ?_EUSART1_SetFramingErrorHandler:	
 11245                           ; 1 bytes @ 0x0
 11246                           
 11247  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 11248                           ; 1 bytes @ 0x0
 11249                           
 11250  0020                     ?_EUSART1_SetErrorHandler:	
 11251                           ; 1 bytes @ 0x0
 11252                           
 11253  0020                     ?_TMR0_SetInterruptHandler:	
 11254                           ; 1 bytes @ 0x0
 11255                           
 11256  0020                     ?_I2C1_MasterWriteTRBBuild:	
 11257                           ; 1 bytes @ 0x0
 11258                           
 11259  0020                     ?_I2C1_MasterTRBInsert:	
 11260                           ; 1 bytes @ 0x0
 11261                           
 11262  0020                     ?_ADCC_SetADTIInterruptHandler:	
 11263                           ; 1 bytes @ 0x0
 11264                           
 11265  0020                     ??_LED_init:	
 11266                           ; 1 bytes @ 0x0
 11267                           
 11268  0020                     ??_CONTROLLER_init:	
 11269                           ; 1 bytes @ 0x0
 11270                           
 11271  0020                     ??_GPIO_init:	
 11272                           ; 1 bytes @ 0x0
 11273                           
 11274  0020                     ??_LED_task_BEAT_FADE:	
 11275                           ; 1 bytes @ 0x0
 11276                           
 11277  0020                     ??_LED_task_BEAT_MIXED:	
 11278                           ; 1 bytes @ 0x0
 11279                           
 11280  0020                     ??_colorInc:	
 11281                           ; 1 bytes @ 0x0
 11282                           
 11283  0020                     ??_colorDec:	
 11284                           ; 1 bytes @ 0x0
 11285                           
 11286  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11287                           ; 1 bytes @ 0x0
 11288                           
 11289  0020                     ??_ADCC_StartConversion:	
 11290                           ; 1 bytes @ 0x0
 11291                           
 11292  0020                     ?_ADCC_SetUpperThreshold:	
 11293                           ; 1 bytes @ 0x0
 11294                           
 11295  0020                     ?_init:	
 11296                           ; 1 bytes @ 0x0
 11297                           
 11298  0020                     ??_BUTTONS_isClicked:	
 11299                           ; 1 bytes @ 0x0
 11300                           
 11301  0020                     ??_BUTTONS_isHeld:	
 11302                           ; 1 bytes @ 0x0
 11303                           
 11304  0020                     ??_getCurrentMenu:	
 11305                           ; 1 bytes @ 0x0
 11306                           
 11307  0020                     ??_BEAT_detected:	
 11308                           ; 1 bytes @ 0x0
 11309                           
 11310  0020                     ??_DMX_getAddress:	
 11311                           ; 1 bytes @ 0x0
 11312                           
 11313  0020                     ?___bmul:	
 11314                           ; 1 bytes @ 0x0
 11315                           
 11316  0020                     ?_CLOCK_getTime:	
 11317                           ; 1 bytes @ 0x0
 11318                           
 11319  0020                     ?_strlen:	
 11320                           ; 2 bytes @ 0x0
 11321                           
 11322  0020                     ?__Umul8_16:	
 11323                           ; 2 bytes @ 0x0
 11324                           
 11325  0020                     ?___awdiv:	
 11326                           ; 2 bytes @ 0x0
 11327                           
 11328  0020                     ?___lwdiv:	
 11329                           ; 2 bytes @ 0x0
 11330                           
 11331  0020                     ?___xxtofl:	
 11332                           ; 2 bytes @ 0x0
 11333                           
 11334  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11335                           ; 4 bytes @ 0x0
 11336                           
 11337  0020                     ADCC_StartConversion@channel:	
 11338                           ; 1 bytes @ 0x0
 11339                           
 11340  0020                     BUTTONS_isClicked@button:	
 11341                           ; 1 bytes @ 0x0
 11342                           
 11343  0020                     BUTTONS_isHeld@button:	
 11344                           ; 1 bytes @ 0x0
 11345                           
 11346  0020                     ___bmul@multiplicand:	
 11347                           ; 1 bytes @ 0x0
 11348                           
 11349  0020                     __Umul8_16@multiplicand:	
 11350                           ; 1 bytes @ 0x0
 11351                           
 11352  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11353                           ; 1 bytes @ 0x0
 11354                           
 11355  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11356                           ; 2 bytes @ 0x0
 11357                           
 11358  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11359                           ; 2 bytes @ 0x0
 11360                           
 11361  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11362                           ; 2 bytes @ 0x0
 11363                           
 11364  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11365                           ; 2 bytes @ 0x0
 11366                           
 11367  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11368                           ; 2 bytes @ 0x0
 11369                           
 11370  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11371                           ; 2 bytes @ 0x0
 11372                           
 11373  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11374                           ; 2 bytes @ 0x0
 11375                           
 11376  0020                     init@port:	
 11377                           ; 2 bytes @ 0x0
 11378                           
 11379  0020                     ___awdiv@divisor:	
 11380                           ; 2 bytes @ 0x0
 11381                           
 11382  0020                     ___lwdiv@divisor:	
 11383                           ; 2 bytes @ 0x0
 11384                           
 11385  0020                     strlen@s:	
 11386                           ; 2 bytes @ 0x0
 11387                           
 11388  0020                     ___fleq@ff1:	
 11389                           ; 2 bytes @ 0x0
 11390                           
 11391  0020                     ___xxtofl@val:	
 11392                           ; 4 bytes @ 0x0
 11393                           
 11394                           
 11395                           ; 4 bytes @ 0x0
 11396  0020                     	ds	1
 11397  0021                     ??___bmul:	
 11398  0021                     I2C1_MasterWriteTRBBuild@length:	
 11399                           ; 1 bytes @ 0x1
 11400                           
 11401                           
 11402                           ; 1 bytes @ 0x1
 11403  0021                     	ds	1
 11404  0022                     ??_ADCC_Initialize:	
 11405  0022                     ??_TMR0_Initialize:	
 11406                           ; 1 bytes @ 0x2
 11407                           
 11408  0022                     ??_EUSART1_Initialize:	
 11409                           ; 1 bytes @ 0x2
 11410                           
 11411  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11412                           ; 1 bytes @ 0x2
 11413                           
 11414  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11415                           ; 1 bytes @ 0x2
 11416                           
 11417  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11418                           ; 1 bytes @ 0x2
 11419                           
 11420  0022                     ??_EUSART1_SetErrorHandler:	
 11421                           ; 1 bytes @ 0x2
 11422                           
 11423  0022                     ??_TMR0_SetInterruptHandler:	
 11424                           ; 1 bytes @ 0x2
 11425                           
 11426  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11427                           ; 1 bytes @ 0x2
 11428                           
 11429  0022                     ??_CLOCK_init:	
 11430                           ; 1 bytes @ 0x2
 11431                           
 11432  0022                     ??_BEAT_init:	
 11433                           ; 1 bytes @ 0x2
 11434                           
 11435  0022                     ??_CLOCK_getTime:	
 11436                           ; 1 bytes @ 0x2
 11437                           
 11438  0022                     ??_BUTTONS_task:	
 11439                           ; 1 bytes @ 0x2
 11440                           
 11441  0022                     ??_strlen:	
 11442                           ; 1 bytes @ 0x2
 11443                           
 11444  0022                     ??__Umul8_16:	
 11445                           ; 1 bytes @ 0x2
 11446                           
 11447  0022                     ??_SYSTEM_Initialize:	
 11448                           ; 1 bytes @ 0x2
 11449                           
 11450  0022                     ??_ADCC_SetUpperThreshold:	
 11451                           ; 1 bytes @ 0x2
 11452                           
 11453  0022                     I2C1_MasterTRBInsert@pflag:	
 11454                           ; 1 bytes @ 0x2
 11455                           
 11456  0022                     init@pin:	
 11457                           ; 1 bytes @ 0x2
 11458                           
 11459  0022                     ___bmul@product:	
 11460                           ; 1 bytes @ 0x2
 11461                           
 11462  0022                     I2C1_MasterWriteTRBBuild@address:	
 11463                           ; 1 bytes @ 0x2
 11464                           
 11465  0022                     ___awdiv@dividend:	
 11466                           ; 2 bytes @ 0x2
 11467                           
 11468  0022                     ___lwdiv@dividend:	
 11469                           ; 2 bytes @ 0x2
 11470                           
 11471                           
 11472                           ; 2 bytes @ 0x2
 11473  0022                     	ds	1
 11474  0023                     ??_I2C1_MasterTRBInsert:	
 11475  0023                     ??_init:	
 11476                           ; 1 bytes @ 0x3
 11477                           
 11478  0023                     ___bmul@multiplier:	
 11479                           ; 1 bytes @ 0x3
 11480                           
 11481  0023                     strlen@a:	
 11482                           ; 1 bytes @ 0x3
 11483                           
 11484                           
 11485                           ; 2 bytes @ 0x3
 11486  0023                     	ds	1
 11487  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11488  0024                     ??___awdiv:	
 11489                           ; 1 bytes @ 0x4
 11490                           
 11491  0024                     ??___lwdiv:	
 11492                           ; 1 bytes @ 0x4
 11493                           
 11494  0024                     ??___xxtofl:	
 11495                           ; 1 bytes @ 0x4
 11496                           
 11497  0024                     I2C1_MasterTRBInsert@count:	
 11498                           ; 1 bytes @ 0x4
 11499                           
 11500  0024                     init@btn:	
 11501                           ; 1 bytes @ 0x4
 11502                           
 11503  0024                     __Umul8_16@product:	
 11504                           ; 1 bytes @ 0x4
 11505                           
 11506  0024                     ___fleq@ff2:	
 11507                           ; 2 bytes @ 0x4
 11508                           
 11509                           
 11510                           ; 4 bytes @ 0x4
 11511  0024                     	ds	1
 11512  0025                     ??_BUTTONS_init:	
 11513  0025                     BUTTONS_task@i:	
 11514                           ; 1 bytes @ 0x5
 11515                           
 11516  0025                     ___awdiv@counter:	
 11517                           ; 1 bytes @ 0x5
 11518                           
 11519  0025                     ___lwdiv@counter:	
 11520                           ; 1 bytes @ 0x5
 11521                           
 11522                           
 11523                           ; 1 bytes @ 0x5
 11524  0025                     	ds	1
 11525  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11526  0026                     ___awdiv@sign:	
 11527                           ; 1 bytes @ 0x6
 11528                           
 11529  0026                     BUTTONS_task@time:	
 11530                           ; 1 bytes @ 0x6
 11531                           
 11532  0026                     ___lwdiv@quotient:	
 11533                           ; 2 bytes @ 0x6
 11534                           
 11535  0026                     __Umul8_16@word_mpld:	
 11536                           ; 2 bytes @ 0x6
 11537                           
 11538                           
 11539                           ; 2 bytes @ 0x6
 11540  0026                     	ds	1
 11541  0027                     ?_I2C1_MasterWrite:	
 11542  0027                     I2C1_MasterWrite@length:	
 11543                           ; 1 bytes @ 0x7
 11544                           
 11545  0027                     ___awdiv@quotient:	
 11546                           ; 1 bytes @ 0x7
 11547                           
 11548                           
 11549                           ; 2 bytes @ 0x7
 11550  0027                     	ds	1
 11551  0028                     ??_BEAT_task:	
 11552  0028                     ??___fleq:	
 11553                           ; 1 bytes @ 0x8
 11554                           
 11555  0028                     ?___lwmod:	
 11556                           ; 1 bytes @ 0x8
 11557                           
 11558  0028                     BUTTONS_task@btn:	
 11559                           ; 2 bytes @ 0x8
 11560                           
 11561  0028                     ___xxtofl@sign:	
 11562                           ; 1 bytes @ 0x8
 11563                           
 11564  0028                     __Umul8_16@multiplier:	
 11565                           ; 1 bytes @ 0x8
 11566                           
 11567  0028                     I2C1_MasterWrite@address:	
 11568                           ; 1 bytes @ 0x8
 11569                           
 11570  0028                     ___lwmod@divisor:	
 11571                           ; 2 bytes @ 0x8
 11572                           
 11573                           
 11574                           ; 2 bytes @ 0x8
 11575  0028                     	ds	1
 11576  0029                     ?___awmod:	
 11577  0029                     ?___fladd:	
 11578                           ; 2 bytes @ 0x9
 11579                           
 11580  0029                     ___xxtofl@exp:	
 11581                           ; 4 bytes @ 0x9
 11582                           
 11583  0029                     ___awmod@divisor:	
 11584                           ; 1 bytes @ 0x9
 11585                           
 11586  0029                     ___fladd@b:	
 11587                           ; 2 bytes @ 0x9
 11588                           
 11589                           
 11590                           ; 4 bytes @ 0x9
 11591  0029                     	ds	1
 11592  002A                     I2C1_MasterWrite@pflag:	
 11593  002A                     BEAT_task@offset:	
 11594                           ; 1 bytes @ 0xA
 11595                           
 11596  002A                     ___lwmod@dividend:	
 11597                           ; 2 bytes @ 0xA
 11598                           
 11599  002A                     ___xxtofl@arg:	
 11600                           ; 2 bytes @ 0xA
 11601                           
 11602                           
 11603                           ; 4 bytes @ 0xA
 11604  002A                     	ds	1
 11605  002B                     ??_I2C1_MasterWrite:	
 11606  002B                     ___awmod@dividend:	
 11607                           ; 1 bytes @ 0xB
 11608                           
 11609                           
 11610                           ; 2 bytes @ 0xB
 11611  002B                     	ds	1
 11612  002C                     ??___lwmod:	
 11613                           
 11614                           ; 1 bytes @ 0xC
 11615  002C                     	ds	1
 11616  002D                     ??___awmod:	
 11617  002D                     I2C1_MasterWrite@pdata:	
 11618                           ; 1 bytes @ 0xD
 11619                           
 11620  002D                     ___lwmod@counter:	
 11621                           ; 1 bytes @ 0xD
 11622                           
 11623  002D                     ___fladd@a:	
 11624                           ; 1 bytes @ 0xD
 11625                           
 11626                           
 11627                           ; 4 bytes @ 0xD
 11628  002D                     	ds	1
 11629  002E                     ?___fldiv:	
 11630  002E                     ___awmod@counter:	
 11631                           ; 4 bytes @ 0xE
 11632                           
 11633  002E                     ___fldiv@a:	
 11634                           ; 1 bytes @ 0xE
 11635                           
 11636                           
 11637                           ; 4 bytes @ 0xE
 11638  002E                     	ds	1
 11639  002F                     ___awmod@sign:	
 11640                           
 11641                           ; 1 bytes @ 0xF
 11642  002F                     	ds	1
 11643  0030                     ?_writeData:	
 11644  0030                     writeData@data:	
 11645                           ; 1 bytes @ 0x10
 11646                           
 11647                           
 11648                           ; 1 bytes @ 0x10
 11649  0030                     	ds	1
 11650  0031                     ??_writeData:	
 11651  0031                     ??___fladd:	
 11652                           ; 1 bytes @ 0x11
 11653                           
 11654                           
 11655                           ; 1 bytes @ 0x11
 11656  0031                     	ds	1
 11657  0032                     ___fldiv@b:	
 11658                           
 11659                           ; 4 bytes @ 0x12
 11660  0032                     	ds	2
 11661  0034                     writeData@address:	
 11662                           
 11663                           ; 1 bytes @ 0x14
 11664  0034                     	ds	1
 11665  0035                     writeData@status:	
 11666                           
 11667                           ; 1 bytes @ 0x15
 11668  0035                     	ds	1
 11669  0036                     ??_TM1650_fastPrintNum_2digit:	
 11670  0036                     ?_TM1650_fastPrintNum_3digit:	
 11671                           ; 1 bytes @ 0x16
 11672                           
 11673  0036                     ??_TM1650_enable:	
 11674                           ; 1 bytes @ 0x16
 11675                           
 11676  0036                     ?_TM1650_setDigit:	
 11677                           ; 1 bytes @ 0x16
 11678                           
 11679  0036                     ?_TM1650_fastPrintNum:	
 11680                           ; 1 bytes @ 0x16
 11681                           
 11682  0036                     ??___fldiv:	
 11683                           ; 1 bytes @ 0x16
 11684                           
 11685  0036                     TM1650_enable@enable:	
 11686                           ; 1 bytes @ 0x16
 11687                           
 11688  0036                     TM1650_setDigit@data:	
 11689                           ; 1 bytes @ 0x16
 11690                           
 11691  0036                     TM1650_fastPrintNum@num:	
 11692                           ; 1 bytes @ 0x16
 11693                           
 11694  0036                     TM1650_fastPrintNum_3digit@num:	
 11695                           ; 2 bytes @ 0x16
 11696                           
 11697                           
 11698                           ; 2 bytes @ 0x16
 11699  0036                     	ds	1
 11700  0037                     ??_TM1650_setDigit:	
 11701                           
 11702                           ; 1 bytes @ 0x17
 11703  0037                     	ds	1
 11704  0038                     ??_TM1650_fastPrintNum_3digit:	
 11705  0038                     ??_TM1650_fastPrintNum:	
 11706                           ; 1 bytes @ 0x18
 11707                           
 11708  0038                     TM1650_setDigit@digit:	
 11709                           ; 1 bytes @ 0x18
 11710                           
 11711                           
 11712                           ; 1 bytes @ 0x18
 11713  0038                     	ds	1
 11714  0039                     ??_DMX_init:	
 11715  0039                     ??_putch:	
 11716                           ; 1 bytes @ 0x19
 11717                           
 11718  0039                     TM1650_fastPrintNum_2digit@num:	
 11719                           ; 1 bytes @ 0x19
 11720                           
 11721  0039                     ___fladd@signs:	
 11722                           ; 1 bytes @ 0x19
 11723                           
 11724                           
 11725                           ; 1 bytes @ 0x19
 11726  0039                     	ds	1
 11727  003A                     putch@n:	
 11728  003A                     ___fladd@aexp:	
 11729                           ; 1 bytes @ 0x1A
 11730                           
 11731                           
 11732                           ; 1 bytes @ 0x1A
 11733  003A                     	ds	1
 11734  003B                     ?_fputc:	
 11735  003B                     ___fladd@bexp:	
 11736                           ; 2 bytes @ 0x1B
 11737                           
 11738  003B                     fputc@c:	
 11739                           ; 1 bytes @ 0x1B
 11740                           
 11741  003B                     ___fldiv@rem:	
 11742                           ; 2 bytes @ 0x1B
 11743                           
 11744                           
 11745                           ; 4 bytes @ 0x1B
 11746  003B                     	ds	1
 11747  003C                     ___fladd@grs:	
 11748                           
 11749                           ; 1 bytes @ 0x1C
 11750  003C                     	ds	1
 11751  003D                     fputc@fp:	
 11752                           
 11753                           ; 1 bytes @ 0x1D
 11754  003D                     	ds	1
 11755  003E                     ??_fputc:	
 11756                           
 11757                           ; 1 bytes @ 0x1E
 11758  003E                     	ds	1
 11759  003F                     ___fldiv@sign:	
 11760                           
 11761                           ; 1 bytes @ 0x1F
 11762  003F                     	ds	1
 11763  0040                     ___fldiv@new_exp:	
 11764                           
 11765                           ; 2 bytes @ 0x20
 11766  0040                     	ds	2
 11767  0042                     ___fldiv@grs:	
 11768                           
 11769                           ; 4 bytes @ 0x22
 11770  0042                     	ds	1
 11771  0043                     ?_fputs:	
 11772  0043                     fputs@fp:	
 11773                           ; 2 bytes @ 0x23
 11774                           
 11775                           
 11776                           ; 1 bytes @ 0x23
 11777  0043                     	ds	1
 11778  0044                     ??_fputs:	
 11779                           
 11780                           ; 1 bytes @ 0x24
 11781  0044                     	ds	2
 11782  0046                     ___fldiv@bexp:	
 11783                           
 11784                           ; 1 bytes @ 0x26
 11785  0046                     	ds	1
 11786  0047                     ___fldiv@aexp:	
 11787  0047                     fputs@c:	
 11788                           ; 1 bytes @ 0x27
 11789                           
 11790                           
 11791                           ; 1 bytes @ 0x27
 11792  0047                     	ds	1
 11793  0048                     ?___flmul:	
 11794  0048                     fputs@s:	
 11795                           ; 4 bytes @ 0x28
 11796                           
 11797  0048                     ___flmul@b:	
 11798                           ; 1 bytes @ 0x28
 11799                           
 11800                           
 11801                           ; 4 bytes @ 0x28
 11802  0048                     	ds	1
 11803  0049                     fputs@i:	
 11804                           
 11805                           ; 2 bytes @ 0x29
 11806  0049                     	ds	2
 11807  004B                     ?_pad:	
 11808  004B                     pad@buf:	
 11809                           ; 2 bytes @ 0x2B
 11810                           
 11811                           
 11812                           ; 1 bytes @ 0x2B
 11813  004B                     	ds	1
 11814  004C                     pad@p:	
 11815  004C                     ___flmul@a:	
 11816                           ; 2 bytes @ 0x2C
 11817                           
 11818                           
 11819                           ; 4 bytes @ 0x2C
 11820  004C                     	ds	2
 11821  004E                     ??_pad:	
 11822                           
 11823                           ; 1 bytes @ 0x2E
 11824  004E                     	ds	1
 11825  004F                     pad@i:	
 11826                           
 11827                           ; 2 bytes @ 0x2F
 11828  004F                     	ds	1
 11829  0050                     ??___flmul:	
 11830                           
 11831                           ; 1 bytes @ 0x30
 11832  0050                     	ds	1
 11833  0051                     pad@w:	
 11834                           
 11835                           ; 2 bytes @ 0x31
 11836  0051                     	ds	2
 11837  0053                     pad@fp:	
 11838                           
 11839                           ; 1 bytes @ 0x33
 11840  0053                     	ds	1
 11841  0054                     ?_ctoa:	
 11842  0054                     ctoa@c:	
 11843                           ; 2 bytes @ 0x34
 11844                           
 11845                           
 11846                           ; 1 bytes @ 0x34
 11847  0054                     	ds	1
 11848  0055                     ___flmul@sign:	
 11849                           
 11850                           ; 1 bytes @ 0x35
 11851  0055                     	ds	1
 11852  0056                     ??_ctoa:	
 11853  0056                     ___flmul@aexp:	
 11854                           ; 1 bytes @ 0x36
 11855                           
 11856                           
 11857                           ; 1 bytes @ 0x36
 11858  0056                     	ds	1
 11859  0057                     ctoa@fp:	
 11860  0057                     ___flmul@bexp:	
 11861                           ; 1 bytes @ 0x37
 11862                           
 11863                           
 11864                           ; 1 bytes @ 0x37
 11865  0057                     	ds	1
 11866  0058                     ctoa@w:	
 11867  0058                     ___flmul@grs:	
 11868                           ; 2 bytes @ 0x38
 11869                           
 11870                           
 11871                           ; 4 bytes @ 0x38
 11872  0058                     	ds	2
 11873  005A                     ?_vfpfcnvrt:	
 11874  005A                     vfpfcnvrt@fmt:	
 11875                           ; 2 bytes @ 0x3A
 11876                           
 11877                           
 11878                           ; 1 bytes @ 0x3A
 11879  005A                     	ds	1
 11880  005B                     vfpfcnvrt@ap:	
 11881                           
 11882                           ; 1 bytes @ 0x3B
 11883  005B                     	ds	1
 11884  005C                     ??_vfpfcnvrt:	
 11885  005C                     ___flmul@prod:	
 11886                           ; 1 bytes @ 0x3C
 11887                           
 11888                           
 11889                           ; 4 bytes @ 0x3C
 11890  005C                     	ds	4
 11891  0060                     ___flmul@temp:	
 11892                           
 11893                           ; 2 bytes @ 0x40
 11894  0060                     	ds	1
 11895  0061                     vfpfcnvrt@c:	
 11896                           
 11897                           ; 1 bytes @ 0x41
 11898  0061                     	ds	1
 11899  0062                     ?___flge:	
 11900  0062                     ?___flsub:	
 11901                           ; 1 bit 
 11902                           
 11903  0062                     vfpfcnvrt@fp:	
 11904                           ; 4 bytes @ 0x42
 11905                           
 11906  0062                     ___flge@ff1:	
 11907                           ; 1 bytes @ 0x42
 11908                           
 11909  0062                     ___flsub@a:	
 11910                           ; 4 bytes @ 0x42
 11911                           
 11912                           
 11913                           ; 4 bytes @ 0x42
 11914  0062                     	ds	1
 11915  0063                     ?_vfprintf:	
 11916  0063                     vfprintf@fmt:	
 11917                           ; 2 bytes @ 0x43
 11918                           
 11919                           
 11920                           ; 2 bytes @ 0x43
 11921  0063                     	ds	2
 11922  0065                     vfprintf@ap:	
 11923                           
 11924                           ; 1 bytes @ 0x45
 11925  0065                     	ds	1
 11926  0066                     ??_vfprintf:	
 11927  0066                     ___flge@ff2:	
 11928                           ; 1 bytes @ 0x46
 11929                           
 11930  0066                     ___flsub@b:	
 11931                           ; 4 bytes @ 0x46
 11932                           
 11933                           
 11934                           ; 4 bytes @ 0x46
 11935  0066                     	ds	2
 11936  0068                     vfprintf@fp:	
 11937                           
 11938                           ; 1 bytes @ 0x48
 11939  0068                     	ds	1
 11940  0069                     vfprintf@cfmt:	
 11941                           
 11942                           ; 2 bytes @ 0x49
 11943  0069                     	ds	1
 11944  006A                     ??___flge:	
 11945  006A                     ??___flsub:	
 11946                           ; 1 bytes @ 0x4A
 11947                           
 11948                           
 11949                           ; 1 bytes @ 0x4A
 11950  006A                     	ds	1
 11951  006B                     ??_printf:	
 11952                           
 11953                           ; 1 bytes @ 0x4B
 11954  006B                     	ds	3
 11955  006E                     ??_HueToRGB:	
 11956  006E                     ___fltol@sign1:	
 11957                           ; 1 bytes @ 0x4E
 11958                           
 11959  006E                     printf@ap:	
 11960                           ; 1 bytes @ 0x4E
 11961                           
 11962                           
 11963                           ; 1 bytes @ 0x4E
 11964  006E                     	ds	1
 11965  006F                     ??_TM1650_init:	
 11966  006F                     ??_address_inc:	
 11967                           ; 1 bytes @ 0x4F
 11968                           
 11969  006F                     ??_address_dec:	
 11970                           ; 1 bytes @ 0x4F
 11971                           
 11972  006F                     ___fltol@exp1:	
 11973                           ; 1 bytes @ 0x4F
 11974                           
 11975                           
 11976                           ; 1 bytes @ 0x4F
 11977  006F                     	ds	1
 11978  0070                     ??_LED_task_MANUAL:	
 11979  0070                     ??_PWM3_LoadDutyValue:	
 11980                           ; 1 bytes @ 0x50
 11981                           
 11982  0070                     ??_PWM4_LoadDutyValue:	
 11983                           ; 1 bytes @ 0x50
 11984                           
 11985  0070                     ??_PWM1_LoadDutyValue:	
 11986                           ; 1 bytes @ 0x50
 11987                           
 11988  0070                     ??_PWM2_LoadDutyValue:	
 11989                           ; 1 bytes @ 0x50
 11990                           
 11991                           
 11992                           	psect	maintext
 11993  2313                     __pmaintext:	
 11994                           ; 1 bytes @ 0x50
 11995 ;;
 11996 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11997 ;;
 11998 ;; *************** function _main *****************
 11999 ;; Defined at:
 12000 ;;		line 58 in file "main.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : B3F/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12016 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;Total ram usage:        2 bytes
 12019 ;; Hardware stack levels required when called:   20
 12020 ;; This function calls:
 12021 ;;		_BEAT_init
 12022 ;;		_BEAT_task
 12023 ;;		_BUTTONS_init
 12024 ;;		_BUTTONS_task
 12025 ;;		_CLOCK_getTime
 12026 ;;		_CLOCK_init
 12027 ;;		_CONTROLLER_init
 12028 ;;		_CONTROLLER_task
 12029 ;;		_DMX_init
 12030 ;;		_LED_init
 12031 ;;		_SYSTEM_Initialize
 12032 ;;		_TM1650_init
 12033 ;; This function is called by:
 12034 ;;		Startup code after reset
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           
 12039                           ;psect for function _main
 12040  2313                     _main:	
 12041  2313                     l12981:	
 12042                           ;incstack = 0
 12043 ;; hardware stack exceeded
 12044                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12045                           
 12046                           
 12047                           ;main.c: 61:     SYSTEM_Initialize();
 12048  2313  31A0  20F4  31A3   	fcall	_SYSTEM_Initialize
 12049  2316                     l12983:	
 12050                           
 12051                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 12052  2316  3015               	movlw	21
 12053  2317  0142               	movlb	2	; select bank2
 12054  2318  00EE               	movwf	(??_main^(0+256)+1)
 12055  2319  304B               	movlw	75
 12056  231A  00ED               	movwf	??_main^(0+256)
 12057  231B  30BE               	movlw	190
 12058  231C                     u15067:	
 12059  231C  0B89               	decfsz	9,f
 12060  231D  2B1C               	goto	u15067
 12061  231E  0BED               	decfsz	??_main^(0+256),f
 12062  231F  2B1C               	goto	u15067
 12063  2320  0BEE               	decfsz	(??_main^(0+256)+1),f
 12064  2321  2B1C               	goto	u15067
 12065  2322  0000               	nop
 12066  2323                     l12985:	
 12067                           
 12068                           ;main.c: 63:     CLOCK_init();
 12069  2323  31AD  2532  31A3   	fcall	_CLOCK_init
 12070  2326                     l12987:	
 12071                           
 12072                           ;main.c: 64:     BUTTONS_init();
 12073  2326  31A3  23D1  31A3   	fcall	_BUTTONS_init
 12074  2329                     l12989:	
 12075                           
 12076                           ;main.c: 65:     BEAT_init();
 12077  2329  31AE  26C5  31A3   	fcall	_BEAT_init
 12078  232C                     l12991:	
 12079                           
 12080                           ;main.c: 66:     LED_init();
 12081  232C  31AF  272A  31A3   	fcall	_LED_init
 12082  232F                     l12993:	
 12083                           
 12084                           ;main.c: 67:     CONTROLLER_init();
 12085  232F  3189  2181  31A3   	fcall	_CONTROLLER_init
 12086  2332                     l12995:	
 12087                           
 12088                           ;main.c: 69:     (INTCONbits.GIE = 1);
 12089  2332  178B               	bsf	11,7	;volatile
 12090  2333                     l12997:	
 12091                           
 12092                           ;main.c: 70:     (INTCONbits.PEIE = 1);
 12093  2333  170B               	bsf	11,6	;volatile
 12094  2334                     l12999:	
 12095                           
 12096                           ;main.c: 72:     TM1650_init();
 12097  2334  31AE  266E  31A3   	fcall	_TM1650_init
 12098  2337                     l13001:	
 12099                           
 12100                           ;main.c: 73:     DMX_init();
 12101  2337  31AE  2645  31A3   	fcall	_DMX_init
 12102  233A                     l13003:	
 12103                           
 12104                           ;main.c: 74:     startTime = CLOCK_getTime();
 12105  233A  31AD  2520  31A3   	fcall	_CLOCK_getTime
 12106  233D  0140               	movlb	0	; select bank0
 12107  233E  0821               	movf	?_CLOCK_getTime+1,w
 12108  233F  0143               	movlb	3	; select bank3
 12109  2340  00BF               	movwf	(_startTime+1)^(0+384)
 12110  2341  0140               	movlb	0	; select bank0
 12111  2342  0820               	movf	?_CLOCK_getTime,w
 12112  2343  0143               	movlb	3	; select bank3
 12113  2344  00BE               	movwf	_startTime^(0+384)
 12114  2345                     l13005:	
 12115                           
 12116                           ;main.c: 79:     {;main.c: 80:         BUTTONS_task();
 12117  2345  3190  2035  31A3   	fcall	_BUTTONS_task
 12118  2348                     l13007:	
 12119                           
 12120                           ;main.c: 81:         CONTROLLER_task();
 12121  2348  3192  2257  31A3   	fcall	_CONTROLLER_task
 12122  234B                     l13009:	
 12123                           
 12124                           ;main.c: 82:         BEAT_task();
 12125  234B  319D  254F  31A3   	fcall	_BEAT_task
 12126  234E  2B45               	goto	l13005
 12127  234F  3180  284C         	ljmp	start
 12128  2351                     __end_of_main:	
 12129                           
 12130                           	psect	text1
 12131  2E6E                     __ptext1:	
 12132 ;; *************** function _TM1650_init *****************
 12133 ;; Defined at:
 12134 ;;		line 51 in file "tm1650.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;		None
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12152 ;;Total ram usage:        0 bytes
 12153 ;; Hardware stack levels used:    1
 12154 ;; Hardware stack levels required when called:   17
 12155 ;; This function calls:
 12156 ;;		_TM1650_enable
 12157 ;;		_printf
 12158 ;; This function is called by:
 12159 ;;		_main
 12160 ;; This function uses a non-reentrant model
 12161 ;;
 12162                           
 12163                           
 12164                           ;psect for function _TM1650_init
 12165  2E6E                     _TM1650_init:	
 12166  2E6E                     l12755:	
 12167                           ;incstack = 0
 12168 ;; hardware stack exceeded
 12169                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12170                           
 12171                           
 12172                           ;tm1650.c: 53:     TM1650_enable(1);
 12173  2E6E  3001               	movlw	1
 12174  2E6F  31AE  26DD  31AE   	fcall	_TM1650_enable
 12175  2E72                     l12757:	
 12176                           
 12177                           ;tm1650.c: 54:     printf("    ");
 12178  2E72  3079               	movlw	low (STR_20| (0+32768))
 12179  2E73  0141               	movlb	1	; select bank1
 12180  2E74  00A0               	movwf	printf@fmt^(0+128)
 12181  2E75  30B0               	movlw	high (STR_20| (0+32768))
 12182  2E76  00A1               	movwf	(printf@fmt^(0+128)+1)
 12183  2E77  31AE  26AF  31AE   	fcall	_printf
 12184  2E7A                     l12759:	
 12185                           
 12186                           ;tm1650.c: 55:     printf("\r");
 12187  2E7A  3047               	movlw	low ((STR_30+4)| (0+32768))
 12188  2E7B  0141               	movlb	1	; select bank1
 12189  2E7C  00A0               	movwf	printf@fmt^(0+128)
 12190  2E7D  30B0               	movlw	high ((STR_30+4)| (0+32768))
 12191  2E7E  00A1               	movwf	(printf@fmt^(0+128)+1)
 12192  2E7F  31AE  26AF  31AE   	fcall	_printf
 12193  2E82                     l1238:	
 12194  2E82  0008               	return
 12195  2E83                     __end_of_TM1650_init:	
 12196                           
 12197                           	psect	text2
 12198  2EDD                     __ptext2:	
 12199 ;; *************** function _TM1650_enable *****************
 12200 ;; Defined at:
 12201 ;;		line 41 in file "tm1650.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;  enable          1    wreg     _Bool 
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;  enable          1   22[BANK0 ] _Bool 
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12219 ;;Total ram usage:        1 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    8
 12222 ;; This function calls:
 12223 ;;		_writeData
 12224 ;; This function is called by:
 12225 ;;		_TM1650_init
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function _TM1650_enable
 12231  2EDD                     _TM1650_enable:	
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12235                           ;TM1650_enable@enable stored from wreg
 12236  2EDD  0140               	movlb	0	; select bank0
 12237  2EDE  00B6               	movwf	TM1650_enable@enable
 12238  2EDF                     l12297:	
 12239                           
 12240                           ;tm1650.c: 42:     if(enable){
 12241  2EDF  0836               	movf	TM1650_enable@enable,w
 12242  2EE0  1903               	btfsc	3,2
 12243  2EE1  2EE3               	goto	u14361
 12244  2EE2  2EE4               	goto	u14360
 12245  2EE3                     u14361:	
 12246  2EE3  2EEE               	goto	l12303
 12247  2EE4                     u14360:	
 12248  2EE4                     l12299:	
 12249                           
 12250                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 12251  2EE4  01B0               	clrf	writeData@data
 12252  2EE5  0AB0               	incf	writeData@data,f
 12253  2EE6  3024               	movlw	36
 12254  2EE7  31AF  277D  31AE   	fcall	_writeData
 12255  2EEA                     l12301:	
 12256                           
 12257                           ;tm1650.c: 44:         tm1650_status = 1;
 12258  2EEA  0142               	movlb	2	; select bank2
 12259  2EEB  01C3               	clrf	_tm1650_status^(0+256)
 12260  2EEC  0AC3               	incf	_tm1650_status^(0+256),f
 12261                           
 12262                           ;tm1650.c: 45:     } else {
 12263  2EED  2EF5               	goto	l1235
 12264  2EEE                     l12303:	
 12265                           
 12266                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 12267  2EEE  01B0               	clrf	writeData@data
 12268  2EEF  3024               	movlw	36
 12269  2EF0  31AF  277D  31AE   	fcall	_writeData
 12270  2EF3                     l12305:	
 12271                           
 12272                           ;tm1650.c: 47:         tm1650_status = 0;
 12273  2EF3  0142               	movlb	2	; select bank2
 12274  2EF4  01C3               	clrf	_tm1650_status^(0+256)
 12275  2EF5                     l1235:	
 12276  2EF5  0008               	return
 12277  2EF6                     __end_of_TM1650_enable:	
 12278                           
 12279                           	psect	text3
 12280  20F4                     __ptext3:	
 12281 ;; *************** function _SYSTEM_Initialize *****************
 12282 ;; Defined at:
 12283 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;		None
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      void 
 12290 ;; Registers used:
 12291 ;;		wreg, status,2, status,0, pclath, cstack
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12301 ;;Total ram usage:        0 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:    6
 12304 ;; This function calls:
 12305 ;;		_ADCC_Initialize
 12306 ;;		_EUSART1_Initialize
 12307 ;;		_I2C1_Initialize
 12308 ;;		_OSCILLATOR_Initialize
 12309 ;;		_PIN_MANAGER_Initialize
 12310 ;;		_PMD_Initialize
 12311 ;;		_PWM1_Initialize
 12312 ;;		_PWM2_Initialize
 12313 ;;		_PWM3_Initialize
 12314 ;;		_PWM4_Initialize
 12315 ;;		_TMR0_Initialize
 12316 ;;		_TMR2_Initialize
 12317 ;; This function is called by:
 12318 ;;		_main
 12319 ;; This function uses a non-reentrant model
 12320 ;;
 12321                           
 12322                           
 12323                           ;psect for function _SYSTEM_Initialize
 12324  20F4                     _SYSTEM_Initialize:	
 12325  20F4                     l12317:	
 12326                           ;incstack = 0
 12327                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12328                           
 12329                           
 12330                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12331  20F4  31AD  2568  31A0   	fcall	_PMD_Initialize
 12332  20F7                     l12319:	
 12333                           
 12334                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12335  20F7  3190  2000  31A0   	fcall	_PIN_MANAGER_Initialize
 12336  20FA                     l12321:	
 12337                           
 12338                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12339  20FA  31AD  255F  31A0   	fcall	_OSCILLATOR_Initialize
 12340  20FD                     l12323:	
 12341                           
 12342                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 12343  20FD  31AF  2761  31A0   	fcall	_I2C1_Initialize
 12344  2100                     l12325:	
 12345                           
 12346                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 12347  2100  31AD  257D  31A0   	fcall	_PWM1_Initialize
 12348  2103                     l12327:	
 12349                           
 12350                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 12351  2103  31AD  2588  31A0   	fcall	_PWM2_Initialize
 12352  2106                     l12329:	
 12353                           
 12354                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12355  2106  31A1  2119  31A0   	fcall	_ADCC_Initialize
 12356  2109                     l12331:	
 12357                           
 12358                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12359  2109  31AD  259E  31A0   	fcall	_PWM4_Initialize
 12360  210C                     l12333:	
 12361                           
 12362                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12363  210C  31AD  2593  31A0   	fcall	_PWM3_Initialize
 12364  210F                     l12335:	
 12365                           
 12366                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12367  210F  31AD  25CE  31A0   	fcall	_TMR2_Initialize
 12368  2112                     l12337:	
 12369                           
 12370                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12371  2112  31AE  2659  31A0   	fcall	_TMR0_Initialize
 12372  2115                     l12339:	
 12373                           
 12374                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12375  2115  31A2  2228  31A0   	fcall	_EUSART1_Initialize
 12376  2118                     l55:	
 12377  2118  0008               	return
 12378  2119                     __end_of_SYSTEM_Initialize:	
 12379                           
 12380                           	psect	text4
 12381  2DCE                     __ptext4:	
 12382 ;; *************** function _TMR2_Initialize *****************
 12383 ;; Defined at:
 12384 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;		None
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;		None
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg, status,2
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;Total ram usage:        0 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:    4
 12405 ;; This function calls:
 12406 ;;		Nothing
 12407 ;; This function is called by:
 12408 ;;		_SYSTEM_Initialize
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           
 12413                           ;psect for function _TMR2_Initialize
 12414  2DCE                     _TMR2_Initialize:	
 12415  2DCE                     l9363:	
 12416                           ;incstack = 0
 12417                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12418                           
 12419                           
 12420                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12421  2DCE  3001               	movlw	1
 12422  2DCF  0145               	movlb	5	; select bank5
 12423  2DD0  0090               	movwf	16	;volatile
 12424  2DD1                     l9365:	
 12425                           
 12426                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12427  2DD1  018F               	clrf	15	;volatile
 12428  2DD2                     l9367:	
 12429                           
 12430                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12431  2DD2  0191               	clrf	17	;volatile
 12432                           
 12433                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12434  2DD3  30FF               	movlw	255
 12435  2DD4  008D               	movwf	13	;volatile
 12436  2DD5                     l9369:	
 12437                           
 12438                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12439  2DD5  018C               	clrf	12	;volatile
 12440  2DD6                     l9371:	
 12441                           
 12442                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12443  2DD6  014E               	movlb	14	; select bank14
 12444  2DD7  1090               	bcf	16,1	;volatile
 12445  2DD8                     l9373:	
 12446                           
 12447                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12448  2DD8  30F0               	movlw	240
 12449  2DD9  0145               	movlb	5	; select bank5
 12450  2DDA  008E               	movwf	14	;volatile
 12451  2DDB                     l150:	
 12452  2DDB  0008               	return
 12453  2DDC                     __end_of_TMR2_Initialize:	
 12454                           
 12455                           	psect	text5
 12456  2E59                     __ptext5:	
 12457 ;; *************** function _TMR0_Initialize *****************
 12458 ;; Defined at:
 12459 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, status,2, status,0, pclath, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:    5
 12480 ;; This function calls:
 12481 ;;		_TMR0_SetInterruptHandler
 12482 ;; This function is called by:
 12483 ;;		_SYSTEM_Initialize
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           
 12488                           ;psect for function _TMR0_Initialize
 12489  2E59                     _TMR0_Initialize:	
 12490  2E59                     l11997:	
 12491                           ;incstack = 0
 12492                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12493                           
 12494                           
 12495                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12496  2E59  3045               	movlw	69
 12497  2E5A  014B               	movlb	11	; select bank11
 12498  2E5B  009F               	movwf	31	;volatile
 12499                           
 12500                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12501  2E5C  30F9               	movlw	249
 12502  2E5D  009D               	movwf	29	;volatile
 12503  2E5E                     l11999:	
 12504                           
 12505                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12506  2E5E  019C               	clrf	28	;volatile
 12507  2E5F                     l12001:	
 12508                           
 12509                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12510  2E5F  014E               	movlb	14	; select bank14
 12511  2E60  128C               	bcf	12,5	;volatile
 12512  2E61                     l12003:	
 12513                           
 12514                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12515  2E61  1696               	bsf	22,5	;volatile
 12516  2E62                     l12005:	
 12517                           
 12518                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12519  2E62  30E1               	movlw	low _TMR0_DefaultInterruptHandler
 12520  2E63  0140               	movlb	0	; select bank0
 12521  2E64  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12522  2E65  302C               	movlw	high _TMR0_DefaultInterruptHandler
 12523  2E66  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12524  2E67  31AD  2529  31AE   	fcall	_TMR0_SetInterruptHandler
 12525  2E6A                     l12007:	
 12526                           
 12527                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12528  2E6A  3080               	movlw	128
 12529  2E6B  014B               	movlb	11	; select bank11
 12530  2E6C  009E               	movwf	30	;volatile
 12531  2E6D                     l464:	
 12532  2E6D  0008               	return
 12533  2E6E                     __end_of_TMR0_Initialize:	
 12534                           
 12535                           	psect	text6
 12536  2D9E                     __ptext6:	
 12537 ;; *************** function _PWM4_Initialize *****************
 12538 ;; Defined at:
 12539 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;		None
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  1    wreg      void 
 12546 ;; Registers used:
 12547 ;;		wreg, status,2, status,0
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:    4
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_SYSTEM_Initialize
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           
 12568                           ;psect for function _PWM4_Initialize
 12569  2D9E                     _PWM4_Initialize:	
 12570  2D9E                     l9347:	
 12571                           ;incstack = 0
 12572                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12573                           
 12574                           
 12575                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12576  2D9E  308C               	movlw	140
 12577  2D9F  0146               	movlb	6	; select bank6
 12578  2DA0  009A               	movwf	26	;volatile
 12579  2DA1                     l9349:	
 12580                           
 12581                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12582  2DA1  0199               	clrf	25	;volatile
 12583  2DA2                     l9351:	
 12584                           
 12585                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12586  2DA2  0198               	clrf	24	;volatile
 12587  2DA3                     l9353:	
 12588                           
 12589                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12590  2DA3  0144               	movlb	4	; select bank4
 12591  2DA4  081E               	movf	30,w	;volatile
 12592  2DA5  393F               	andlw	-193
 12593  2DA6  3840               	iorlw	64
 12594  2DA7  009E               	movwf	30	;volatile
 12595  2DA8                     l225:	
 12596  2DA8  0008               	return
 12597  2DA9                     __end_of_PWM4_Initialize:	
 12598                           
 12599                           	psect	text7
 12600  2D93                     __ptext7:	
 12601 ;; *************** function _PWM3_Initialize *****************
 12602 ;; Defined at:
 12603 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12604 ;; Parameters:    Size  Location     Type
 12605 ;;		None
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;		None
 12608 ;; Return value:  Size  Location     Type
 12609 ;;                  1    wreg      void 
 12610 ;; Registers used:
 12611 ;;		wreg, status,2, status,0
 12612 ;; Tracked objects:
 12613 ;;		On entry : 0/0
 12614 ;;		On exit  : 0/0
 12615 ;;		Unchanged: 0/0
 12616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12621 ;;Total ram usage:        0 bytes
 12622 ;; Hardware stack levels used:    1
 12623 ;; Hardware stack levels required when called:    4
 12624 ;; This function calls:
 12625 ;;		Nothing
 12626 ;; This function is called by:
 12627 ;;		_SYSTEM_Initialize
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631                           
 12632                           ;psect for function _PWM3_Initialize
 12633  2D93                     _PWM3_Initialize:	
 12634  2D93                     l9355:	
 12635                           ;incstack = 0
 12636                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12637                           
 12638                           
 12639                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12640  2D93  308C               	movlw	140
 12641  2D94  0146               	movlb	6	; select bank6
 12642  2D95  0096               	movwf	22	;volatile
 12643  2D96                     l9357:	
 12644                           
 12645                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12646  2D96  0195               	clrf	21	;volatile
 12647  2D97                     l9359:	
 12648                           
 12649                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12650  2D97  0194               	clrf	20	;volatile
 12651  2D98                     l9361:	
 12652                           
 12653                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12654  2D98  0144               	movlb	4	; select bank4
 12655  2D99  081E               	movf	30,w	;volatile
 12656  2D9A  39CF               	andlw	-49
 12657  2D9B  3810               	iorlw	16
 12658  2D9C  009E               	movwf	30	;volatile
 12659  2D9D                     l203:	
 12660  2D9D  0008               	return
 12661  2D9E                     __end_of_PWM3_Initialize:	
 12662                           
 12663                           	psect	text8
 12664  2D88                     __ptext8:	
 12665 ;; *************** function _PWM2_Initialize *****************
 12666 ;; Defined at:
 12667 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;		None
 12670 ;; Auto vars:     Size  Location     Type
 12671 ;;		None
 12672 ;; Return value:  Size  Location     Type
 12673 ;;                  1    wreg      void 
 12674 ;; Registers used:
 12675 ;;		wreg, status,2, status,0
 12676 ;; Tracked objects:
 12677 ;;		On entry : 0/0
 12678 ;;		On exit  : 0/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;Total ram usage:        0 bytes
 12686 ;; Hardware stack levels used:    1
 12687 ;; Hardware stack levels required when called:    4
 12688 ;; This function calls:
 12689 ;;		Nothing
 12690 ;; This function is called by:
 12691 ;;		_SYSTEM_Initialize
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           
 12696                           ;psect for function _PWM2_Initialize
 12697  2D88                     _PWM2_Initialize:	
 12698  2D88                     l9325:	
 12699                           ;incstack = 0
 12700                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12701                           
 12702                           
 12703                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12704  2D88  308C               	movlw	140
 12705  2D89  0146               	movlb	6	; select bank6
 12706  2D8A  0092               	movwf	18	;volatile
 12707  2D8B                     l9327:	
 12708                           
 12709                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12710  2D8B  0191               	clrf	17	;volatile
 12711  2D8C                     l9329:	
 12712                           
 12713                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12714  2D8C  0190               	clrf	16	;volatile
 12715  2D8D                     l9331:	
 12716                           
 12717                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12718  2D8D  0144               	movlb	4	; select bank4
 12719  2D8E  081E               	movf	30,w	;volatile
 12720  2D8F  39F3               	andlw	-13
 12721  2D90  3804               	iorlw	4
 12722  2D91  009E               	movwf	30	;volatile
 12723  2D92                     l269:	
 12724  2D92  0008               	return
 12725  2D93                     __end_of_PWM2_Initialize:	
 12726                           
 12727                           	psect	text9
 12728  2D7D                     __ptext9:	
 12729 ;; *************** function _PWM1_Initialize *****************
 12730 ;; Defined at:
 12731 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;		None
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;		None
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, status,2, status,0
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12749 ;;Total ram usage:        0 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:    4
 12752 ;; This function calls:
 12753 ;;		Nothing
 12754 ;; This function is called by:
 12755 ;;		_SYSTEM_Initialize
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           
 12760                           ;psect for function _PWM1_Initialize
 12761  2D7D                     _PWM1_Initialize:	
 12762  2D7D                     l9317:	
 12763                           ;incstack = 0
 12764                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12765                           
 12766                           
 12767                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12768  2D7D  308C               	movlw	140
 12769  2D7E  0146               	movlb	6	; select bank6
 12770  2D7F  008E               	movwf	14	;volatile
 12771  2D80                     l9319:	
 12772                           
 12773                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12774  2D80  018D               	clrf	13	;volatile
 12775  2D81                     l9321:	
 12776                           
 12777                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12778  2D81  018C               	clrf	12	;volatile
 12779  2D82                     l9323:	
 12780                           
 12781                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12782  2D82  0144               	movlb	4	; select bank4
 12783  2D83  081E               	movf	30,w	;volatile
 12784  2D84  39FC               	andlw	-4
 12785  2D85  3801               	iorlw	1
 12786  2D86  009E               	movwf	30	;volatile
 12787  2D87                     l247:	
 12788  2D87  0008               	return
 12789  2D88                     __end_of_PWM1_Initialize:	
 12790                           
 12791                           	psect	text10
 12792  2D68                     __ptext10:	
 12793 ;; *************** function _PMD_Initialize *****************
 12794 ;; Defined at:
 12795 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;		None
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;		None
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  1    wreg      void 
 12802 ;; Registers used:
 12803 ;;		status,2
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12813 ;;Total ram usage:        0 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    4
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_SYSTEM_Initialize
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           
 12824                           ;psect for function _PMD_Initialize
 12825  2D68                     _PMD_Initialize:	
 12826  2D68                     l9245:	
 12827                           ;incstack = 0
 12828                           ; Regs used in _PMD_Initialize: [status,2]
 12829                           
 12830                           
 12831                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12832  2D68  014F               	movlb	15	; select bank15
 12833  2D69  0196               	clrf	22	;volatile
 12834                           
 12835                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12836  2D6A  0197               	clrf	23	;volatile
 12837                           
 12838                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12839  2D6B  0198               	clrf	24	;volatile
 12840                           
 12841                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12842  2D6C  0199               	clrf	25	;volatile
 12843                           
 12844                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12845  2D6D  019A               	clrf	26	;volatile
 12846                           
 12847                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12848  2D6E  019B               	clrf	27	;volatile
 12849                           
 12850                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12851  2D6F  019C               	clrf	28	;volatile
 12852                           
 12853                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12854  2D70  019D               	clrf	29	;volatile
 12855  2D71                     l61:	
 12856  2D71  0008               	return
 12857  2D72                     __end_of_PMD_Initialize:	
 12858                           
 12859                           	psect	text11
 12860  1000                     __ptext11:	
 12861 ;; *************** function _PIN_MANAGER_Initialize *****************
 12862 ;; Defined at:
 12863 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;		None
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      void 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;Total ram usage:        0 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    4
 12884 ;; This function calls:
 12885 ;;		Nothing
 12886 ;; This function is called by:
 12887 ;;		_SYSTEM_Initialize
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           
 12892                           ;psect for function _PIN_MANAGER_Initialize
 12893  1000                     _PIN_MANAGER_Initialize:	
 12894  1000                     l9247:	
 12895                           ;incstack = 0
 12896                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12897                           
 12898                           
 12899                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12900  1000  0140               	movlb	0	; select bank0
 12901  1001  0198               	clrf	24	;volatile
 12902                           
 12903                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12904  1002  0199               	clrf	25	;volatile
 12905                           
 12906                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12907  1003  019A               	clrf	26	;volatile
 12908  1004                     l9249:	
 12909                           
 12910                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12911  1004  303F               	movlw	63
 12912  1005  0092               	movwf	18	;volatile
 12913  1006                     l9251:	
 12914                           
 12915                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12916  1006  30F0               	movlw	240
 12917  1007  0093               	movwf	19	;volatile
 12918  1008                     l9253:	
 12919                           
 12920                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12921  1008  3006               	movlw	6
 12922  1009  0094               	movwf	20	;volatile
 12923  100A                     l9255:	
 12924                           
 12925                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12926  100A  30FF               	movlw	255
 12927  100B  017E               	movlb	62	; select bank62
 12928  100C  00CE               	movwf	78	;volatile
 12929  100D                     l9257:	
 12930                           
 12931                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12932  100D  30E0               	movlw	224
 12933  100E  00C3               	movwf	67	;volatile
 12934  100F                     l9259:	
 12935                           
 12936                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12937  100F  3007               	movlw	7
 12938  1010  00B8               	movwf	56	;volatile
 12939                           
 12940                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12941  1011  01C4               	clrf	68	;volatile
 12942                           
 12943                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12944  1012  01B9               	clrf	57	;volatile
 12945                           
 12946                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12947  1013  01CF               	clrf	79	;volatile
 12948                           
 12949                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12950  1014  01BA               	clrf	58	;volatile
 12951                           
 12952                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12953  1015  01C5               	clrf	69	;volatile
 12954                           
 12955                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12956  1016  01D0               	clrf	80	;volatile
 12957  1017                     l9261:	
 12958                           
 12959                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12960  1017  3037               	movlw	55
 12961  1018  00BB               	movwf	59	;volatile
 12962  1019                     l9263:	
 12963                           
 12964                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12965  1019  30F0               	movlw	240
 12966  101A  00C6               	movwf	70	;volatile
 12967  101B                     l9265:	
 12968                           
 12969                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12970  101B  30FF               	movlw	255
 12971  101C  00D1               	movwf	81	;volatile
 12972  101D                     l9267:	
 12973                           
 12974                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12975  101D  3005               	movlw	5
 12976  101E  017D               	movlb	61	; select bank61
 12977  101F  00C5               	movwf	69	;volatile
 12978  1020                     l9269:	
 12979                           
 12980                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12981  1020  3014               	movlw	20
 12982  1021  017E               	movlb	62	; select bank62
 12983  1022  0094               	movwf	20	;volatile
 12984  1023                     l9271:	
 12985                           
 12986                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12987  1023  300B               	movlw	11
 12988  1024  00A3               	movwf	35	;volatile
 12989  1025                     l9273:	
 12990                           
 12991                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12992  1025  300C               	movlw	12
 12993  1026  00A4               	movwf	36	;volatile
 12994  1027                     l9275:	
 12995                           
 12996                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12997  1027  3013               	movlw	19
 12998  1028  0095               	movwf	21	;volatile
 12999  1029                     l9277:	
 13000                           
 13001                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 13002  1029  3009               	movlw	9
 13003  102A  00A5               	movwf	37	;volatile
 13004  102B                     l9279:	
 13005                           
 13006                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 13007  102B  300A               	movlw	10
 13008  102C  00A6               	movwf	38	;volatile
 13009  102D                     l9281:	
 13010                           
 13011                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 13012  102D  3009               	movlw	9
 13013  102E  00A7               	movwf	39	;volatile
 13014  102F                     l9283:	
 13015                           
 13016                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 13017  102F  3004               	movlw	4
 13018  1030  017D               	movlb	61	; select bank61
 13019  1031  00C6               	movwf	70	;volatile
 13020  1032                     l9285:	
 13021                           
 13022                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 13023  1032  300C               	movlw	12
 13024  1033  00CB               	movwf	75	;volatile
 13025  1034                     l120:	
 13026  1034  0008               	return
 13027  1035                     __end_of_PIN_MANAGER_Initialize:	
 13028                           
 13029                           	psect	text12
 13030  2D5F                     __ptext12:	
 13031 ;; *************** function _OSCILLATOR_Initialize *****************
 13032 ;; Defined at:
 13033 ;;		line 66 in file "mcc_generated_files/mcc.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;		None
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;		None
 13038 ;; Return value:  Size  Location     Type
 13039 ;;                  1    wreg      void 
 13040 ;; Registers used:
 13041 ;;		wreg, status,2
 13042 ;; Tracked objects:
 13043 ;;		On entry : 0/0
 13044 ;;		On exit  : 0/0
 13045 ;;		Unchanged: 0/0
 13046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13051 ;;Total ram usage:        0 bytes
 13052 ;; Hardware stack levels used:    1
 13053 ;; Hardware stack levels required when called:    4
 13054 ;; This function calls:
 13055 ;;		Nothing
 13056 ;; This function is called by:
 13057 ;;		_SYSTEM_Initialize
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           
 13062                           ;psect for function _OSCILLATOR_Initialize
 13063  2D5F                     _OSCILLATOR_Initialize:	
 13064  2D5F                     l9287:	
 13065                           ;incstack = 0
 13066                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13067                           
 13068                           
 13069                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 13070  2D5F  3060               	movlw	96
 13071  2D60  0151               	movlb	17	; select bank17
 13072  2D61  008D               	movwf	13	;volatile
 13073  2D62                     l9289:	
 13074                           
 13075                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 13076  2D62  018F               	clrf	15	;volatile
 13077  2D63                     l9291:	
 13078                           
 13079                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 13080  2D63  0191               	clrf	17	;volatile
 13081                           
 13082                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 13083  2D64  3006               	movlw	6
 13084  2D65  0093               	movwf	19	;volatile
 13085  2D66                     l9293:	
 13086                           
 13087                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 13088  2D66  0192               	clrf	18	;volatile
 13089  2D67                     l58:	
 13090  2D67  0008               	return
 13091  2D68                     __end_of_OSCILLATOR_Initialize:	
 13092                           
 13093                           	psect	text13
 13094  2F61                     __ptext13:	
 13095 ;; *************** function _I2C1_Initialize *****************
 13096 ;; Defined at:
 13097 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;		None
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;		None
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      void 
 13104 ;; Registers used:
 13105 ;;		wreg, status,2
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13115 ;;Total ram usage:        1 bytes
 13116 ;; Hardware stack levels used:    1
 13117 ;; Hardware stack levels required when called:    4
 13118 ;; This function calls:
 13119 ;;		Nothing
 13120 ;; This function is called by:
 13121 ;;		_SYSTEM_Initialize
 13122 ;; This function uses a non-reentrant model
 13123 ;;
 13124                           
 13125                           
 13126                           ;psect for function _I2C1_Initialize
 13127  2F61                     _I2C1_Initialize:	
 13128  2F61                     l9295:	
 13129                           ;incstack = 0
 13130                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 13131                           
 13132                           
 13133                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 13134  2F61  30E5               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 13135  2F62  0140               	movlb	0	; select bank0
 13136  2F63  00A0               	movwf	??_I2C1_Initialize
 13137  2F64  0820               	movf	??_I2C1_Initialize,w
 13138  2F65  0142               	movlb	2	; select bank2
 13139  2F66  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 13140                           
 13141                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 13142  2F67  30E5               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 13143  2F68  0140               	movlb	0	; select bank0
 13144  2F69  00A0               	movwf	??_I2C1_Initialize
 13145  2F6A  0820               	movf	??_I2C1_Initialize,w
 13146  2F6B  0142               	movlb	2	; select bank2
 13147  2F6C  00A0               	movwf	_i2c1_object^(0+256)
 13148  2F6D                     l9297:	
 13149                           
 13150                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 13151  2F6D  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 13152  2F6E                     l9299:	
 13153                           
 13154                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 13155  2F6E  1022               	bcf	(_i2c1_object^(0+256)+2),0
 13156  2F6F                     l9301:	
 13157                           
 13158                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 13159  2F6F  01A4               	clrf	(_i2c1_object^(0+256)+4)
 13160  2F70                     l9303:	
 13161                           
 13162                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 13163  2F70  0143               	movlb	3	; select bank3
 13164  2F71  018F               	clrf	15	;volatile
 13165                           
 13166                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 13167  2F72  3028               	movlw	40
 13168  2F73  0090               	movwf	16	;volatile
 13169  2F74                     l9305:	
 13170                           
 13171                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 13172  2F74  0192               	clrf	18	;volatile
 13173  2F75                     l9307:	
 13174                           
 13175                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 13176  2F75  304F               	movlw	79
 13177  2F76  008D               	movwf	13	;volatile
 13178  2F77                     l9309:	
 13179                           
 13180                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 13181  2F77  014E               	movlb	14	; select bank14
 13182  2F78  100F               	bcf	15,0	;volatile
 13183  2F79                     l9311:	
 13184                           
 13185                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 13186  2F79  108F               	bcf	15,1	;volatile
 13187  2F7A                     l9313:	
 13188                           
 13189                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 13190  2F7A  1419               	bsf	25,0	;volatile
 13191  2F7B                     l9315:	
 13192                           
 13193                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 13194  2F7B  1499               	bsf	25,1	;volatile
 13195  2F7C                     l532:	
 13196  2F7C  0008               	return
 13197  2F7D                     __end_of_I2C1_Initialize:	
 13198                           
 13199                           	psect	text14
 13200  2228                     __ptext14:	
 13201 ;; *************** function _EUSART1_Initialize *****************
 13202 ;; Defined at:
 13203 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;		None
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      void 
 13210 ;; Registers used:
 13211 ;;		wreg, status,2, status,0, pclath, cstack
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;Total ram usage:        0 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:    5
 13224 ;; This function calls:
 13225 ;;		_EUSART1_SetErrorHandler
 13226 ;;		_EUSART1_SetFramingErrorHandler
 13227 ;;		_EUSART1_SetOverrunErrorHandler
 13228 ;;		_EUSART1_SetRxInterruptHandler
 13229 ;; This function is called by:
 13230 ;;		_SYSTEM_Initialize
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           
 13235                           ;psect for function _EUSART1_Initialize
 13236  2228                     _EUSART1_Initialize:	
 13237  2228                     l12009:	
 13238                           ;incstack = 0
 13239                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13240                           
 13241                           
 13242                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 13243  2228  014E               	movlb	14	; select bank14
 13244  2229  1299               	bcf	25,5	;volatile
 13245  222A                     l12011:	
 13246                           
 13247                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 13248  222A  305C               	movlw	low _EUSART1_Receive_ISR
 13249  222B  0140               	movlb	0	; select bank0
 13250  222C  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13251  222D  3022               	movlw	high _EUSART1_Receive_ISR
 13252  222E  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13253  222F  31AD  253B  31A2   	fcall	_EUSART1_SetRxInterruptHandler
 13254  2232                     l12013:	
 13255                           
 13256                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 13257  2232  3008               	movlw	8
 13258  2233  0142               	movlb	2	; select bank2
 13259  2234  009F               	movwf	31	;volatile
 13260  2235                     l12015:	
 13261                           
 13262                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 13263  2235  3090               	movlw	144
 13264  2236  009D               	movwf	29	;volatile
 13265  2237                     l12017:	
 13266                           
 13267                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 13268  2237  3004               	movlw	4
 13269  2238  009E               	movwf	30	;volatile
 13270  2239                     l12019:	
 13271                           
 13272                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 13273  2239  301F               	movlw	31
 13274  223A  009B               	movwf	27	;volatile
 13275  223B                     l12021:	
 13276                           
 13277                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 13278  223B  019C               	clrf	28	;volatile
 13279  223C                     l12023:	
 13280                           
 13281                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 13282  223C  30E0               	movlw	low _EUSART1_DefaultFramingErrorHandler
 13283  223D  0140               	movlb	0	; select bank0
 13284  223E  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13285  223F  302C               	movlw	high _EUSART1_DefaultFramingErrorHandler
 13286  2240  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13287  2241  31AD  254D  31A2   	fcall	_EUSART1_SetFramingErrorHandler
 13288  2244                     l12025:	
 13289                           
 13290                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 13291  2244  30ED               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 13292  2245  0140               	movlb	0	; select bank0
 13293  2246  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13294  2247  302C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 13295  2248  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13296  2249  31AD  2556  31A2   	fcall	_EUSART1_SetOverrunErrorHandler
 13297  224C                     l12027:	
 13298                           
 13299                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 13300  224C  30E9               	movlw	low _EUSART1_DefaultErrorHandler
 13301  224D  0140               	movlb	0	; select bank0
 13302  224E  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13303  224F  302C               	movlw	high _EUSART1_DefaultErrorHandler
 13304  2250  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13305  2251  31AD  2544  31A2   	fcall	_EUSART1_SetErrorHandler
 13306                           
 13307                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 13308  2254  0142               	movlb	2	; select bank2
 13309  2255  01D7               	clrf	_eusart1RxLastError^(0+256)	;volatile
 13310                           
 13311                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 13312  2256  01F6               	clrf	_eusart1RxHead	;volatile
 13313                           
 13314                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 13315  2257  01D9               	clrf	_eusart1RxTail^(0+256)	;volatile
 13316                           
 13317                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 13318  2258  01D8               	clrf	_eusart1RxCount^(0+256)	;volatile
 13319  2259                     l12029:	
 13320                           
 13321                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 13322  2259  014E               	movlb	14	; select bank14
 13323  225A  1699               	bsf	25,5	;volatile
 13324  225B                     l341:	
 13325  225B  0008               	return
 13326  225C                     __end_of_EUSART1_Initialize:	
 13327                           
 13328                           	psect	text15
 13329  2D56                     __ptext15:	
 13330 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13331 ;; Defined at:
 13332 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13335 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      void 
 13340 ;; Registers used:
 13341 ;;		wreg
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13347 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;Total ram usage:        2 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:    4
 13354 ;; This function calls:
 13355 ;;		Nothing
 13356 ;; This function is called by:
 13357 ;;		_EUSART1_Initialize
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           
 13362                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13363  2D56                     _EUSART1_SetOverrunErrorHandler:	
 13364  2D56                     l8983:	
 13365                           ;incstack = 0
 13366                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13367                           
 13368                           
 13369                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 13370  2D56  0140               	movlb	0	; select bank0
 13371  2D57  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13372  2D58  0145               	movlb	5	; select bank5
 13373  2D59  00EB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+640)
 13374  2D5A  0140               	movlb	0	; select bank0
 13375  2D5B  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13376  2D5C  0145               	movlb	5	; select bank5
 13377  2D5D  00EA               	movwf	_EUSART1_OverrunErrorHandler^(0+640)
 13378  2D5E                     l394:	
 13379  2D5E  0008               	return
 13380  2D5F                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13381                           
 13382                           	psect	text16
 13383  2D4D                     __ptext16:	
 13384 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13385 ;; Defined at:
 13386 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13389 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;		None
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  1    wreg      void 
 13394 ;; Registers used:
 13395 ;;		wreg
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;Total ram usage:        2 bytes
 13406 ;; Hardware stack levels used:    1
 13407 ;; Hardware stack levels required when called:    4
 13408 ;; This function calls:
 13409 ;;		Nothing
 13410 ;; This function is called by:
 13411 ;;		_EUSART1_Initialize
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           
 13416                           ;psect for function _EUSART1_SetFramingErrorHandler
 13417  2D4D                     _EUSART1_SetFramingErrorHandler:	
 13418  2D4D                     l8981:	
 13419                           ;incstack = 0
 13420                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13421                           
 13422                           
 13423                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 13424  2D4D  0140               	movlb	0	; select bank0
 13425  2D4E  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13426  2D4F  0144               	movlb	4	; select bank4
 13427  2D50  00EB               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+512)
 13428  2D51  0140               	movlb	0	; select bank0
 13429  2D52  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13430  2D53  0144               	movlb	4	; select bank4
 13431  2D54  00EA               	movwf	_EUSART1_FramingErrorHandler^(0+512)
 13432  2D55                     l391:	
 13433  2D55  0008               	return
 13434  2D56                     __end_of_EUSART1_SetFramingErrorHandler:	
 13435                           
 13436                           	psect	text17
 13437  2D44                     __ptext17:	
 13438 ;; *************** function _EUSART1_SetErrorHandler *****************
 13439 ;; Defined at:
 13440 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 13441 ;; Parameters:    Size  Location     Type
 13442 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13443 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;		None
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  1    wreg      void 
 13448 ;; Registers used:
 13449 ;;		wreg
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13458 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13459 ;;Total ram usage:        2 bytes
 13460 ;; Hardware stack levels used:    1
 13461 ;; Hardware stack levels required when called:    4
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_EUSART1_Initialize
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469                           
 13470                           ;psect for function _EUSART1_SetErrorHandler
 13471  2D44                     _EUSART1_SetErrorHandler:	
 13472  2D44                     l8985:	
 13473                           ;incstack = 0
 13474                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13475                           
 13476                           
 13477                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 13478  2D44  0140               	movlb	0	; select bank0
 13479  2D45  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13480  2D46  0146               	movlb	6	; select bank6
 13481  2D47  00D8               	movwf	(_EUSART1_ErrorHandler+1)^(0+768)
 13482  2D48  0140               	movlb	0	; select bank0
 13483  2D49  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13484  2D4A  0146               	movlb	6	; select bank6
 13485  2D4B  00D7               	movwf	_EUSART1_ErrorHandler^(0+768)
 13486  2D4C                     l397:	
 13487  2D4C  0008               	return
 13488  2D4D                     __end_of_EUSART1_SetErrorHandler:	
 13489                           
 13490                           	psect	text18
 13491  2119                     __ptext18:	
 13492 ;; *************** function _ADCC_Initialize *****************
 13493 ;; Defined at:
 13494 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;		None
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;		None
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		wreg, status,2, status,0, pclath, cstack
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;Total ram usage:        0 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:    5
 13515 ;; This function calls:
 13516 ;;		_ADCC_SetADTIInterruptHandler
 13517 ;; This function is called by:
 13518 ;;		_SYSTEM_Initialize
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           
 13523                           ;psect for function _ADCC_Initialize
 13524  2119                     _ADCC_Initialize:	
 13525  2119                     l11983:	
 13526                           ;incstack = 0
 13527                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13528                           
 13529                           
 13530                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13531  2119  0141               	movlb	1	; select bank1
 13532  211A  018C               	clrf	12	;volatile
 13533                           
 13534                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13535  211B  018D               	clrf	13	;volatile
 13536                           
 13537                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13538  211C  018E               	clrf	14	;volatile
 13539                           
 13540                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13541  211D  018F               	clrf	15	;volatile
 13542                           
 13543                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13544  211E  0192               	clrf	18	;volatile
 13545                           
 13546                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13547  211F  0193               	clrf	19	;volatile
 13548                           
 13549                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13550  2120  0198               	clrf	24	;volatile
 13551                           
 13552                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13553  2121  019A               	clrf	26	;volatile
 13554                           
 13555                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13556  2122  019F               	clrf	31	;volatile
 13557                           
 13558                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13559  2123  0142               	movlb	2	; select bank2
 13560  2124  018C               	clrf	12	;volatile
 13561                           
 13562                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13563  2125  018D               	clrf	13	;volatile
 13564                           
 13565                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13566  2126  018E               	clrf	14	;volatile
 13567                           
 13568                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13569  2127  018F               	clrf	15	;volatile
 13570                           
 13571                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13572  2128  0190               	clrf	16	;volatile
 13573                           
 13574                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13575  2129  0192               	clrf	18	;volatile
 13576  212A                     l11985:	
 13577                           
 13578                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13579  212A  3054               	movlw	84
 13580  212B  0093               	movwf	19	;volatile
 13581  212C                     l11987:	
 13582                           
 13583                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13584  212C  3056               	movlw	86
 13585  212D  0094               	movwf	20	;volatile
 13586                           
 13587                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13588  212E  0195               	clrf	21	;volatile
 13589                           
 13590                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13591  212F  0196               	clrf	22	;volatile
 13592                           
 13593                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13594  2130  0197               	clrf	23	;volatile
 13595                           
 13596                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13597  2131  0198               	clrf	24	;volatile
 13598  2132                     l11989:	
 13599                           
 13600                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13601  2132  30D4               	movlw	212
 13602  2133  0091               	movwf	17	;volatile
 13603  2134                     l11991:	
 13604                           
 13605                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13606  2134  014E               	movlb	14	; select bank14
 13607  2135  108D               	bcf	13,1	;volatile
 13608  2136                     l11993:	
 13609                           
 13610                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13611  2136  1497               	bsf	23,1	;volatile
 13612  2137                     l11995:	
 13613                           
 13614                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13615  2137  30DF               	movlw	low _ADCC_DefaultInterruptHandler
 13616  2138  0140               	movlb	0	; select bank0
 13617  2139  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13618  213A  302C               	movlw	high _ADCC_DefaultInterruptHandler
 13619  213B  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13620  213C  31AD  2505  31A1   	fcall	_ADCC_SetADTIInterruptHandler
 13621  213F                     l730:	
 13622  213F  0008               	return
 13623  2140                     __end_of_ADCC_Initialize:	
 13624                           
 13625                           	psect	text19
 13626  2F2A                     __ptext19:	
 13627 ;; *************** function _LED_init *****************
 13628 ;; Defined at:
 13629 ;;		line 49 in file "led.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;		None
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;		None
 13634 ;; Return value:  Size  Location     Type
 13635 ;;                  1    wreg      void 
 13636 ;; Registers used:
 13637 ;;		wreg, status,2
 13638 ;; Tracked objects:
 13639 ;;		On entry : 0/0
 13640 ;;		On exit  : 0/0
 13641 ;;		Unchanged: 0/0
 13642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13647 ;;Total ram usage:        0 bytes
 13648 ;; Hardware stack levels used:    1
 13649 ;; Hardware stack levels required when called:    4
 13650 ;; This function calls:
 13651 ;;		Nothing
 13652 ;; This function is called by:
 13653 ;;		_main
 13654 ;; This function uses a non-reentrant model
 13655 ;;
 13656                           
 13657                           
 13658                           ;psect for function _LED_init
 13659  2F2A                     _LED_init:	
 13660  2F2A                     l9905:	
 13661                           ;incstack = 0
 13662                           ; Regs used in _LED_init: [wreg+status,2]
 13663                           
 13664                           
 13665                           ;led.c: 50:     manualColor.red = 0;
 13666  2F2A  0142               	movlb	2	; select bank2
 13667  2F2B  01A6               	clrf	(_manualColor^(0+256)+1)
 13668                           
 13669                           ;led.c: 51:     manualColor.green = 0;
 13670  2F2C  01A7               	clrf	(_manualColor^(0+256)+2)
 13671                           
 13672                           ;led.c: 52:     manualColor.blue = 0;
 13673  2F2D  01A8               	clrf	(_manualColor^(0+256)+3)
 13674                           
 13675                           ;led.c: 53:     manualColor.white = 0;
 13676  2F2E  01A5               	clrf	_manualColor^(0+256)
 13677  2F2F                     l9907:	
 13678                           
 13679                           ;led.c: 54:     TRISCbits.TRISC5 = 0;
 13680  2F2F  0140               	movlb	0	; select bank0
 13681  2F30  1294               	bcf	20,5	;volatile
 13682                           
 13683                           ;led.c: 55:     animationHue.hue = 0;
 13684  2F31  0143               	movlb	3	; select bank3
 13685  2F32  01A0               	clrf	_animationHue^(0+384)
 13686  2F33  01A1               	clrf	(_animationHue+1)^(0+384)
 13687  2F34                     l9909:	
 13688                           
 13689                           ;led.c: 56:     animationHue.light = 0.50f;
 13690  2F34  303F               	movlw	63
 13691  2F35  00A9               	movwf	((_animationHue+3)^(0+384)+6)
 13692  2F36  3000               	movlw	0
 13693  2F37  00A8               	movwf	((_animationHue+2)^(0+384)+6)
 13694  2F38  3000               	movlw	0
 13695  2F39  00A7               	movwf	((_animationHue+1)^(0+384)+6)
 13696  2F3A  3000               	movlw	0
 13697  2F3B  00A6               	movwf	(_animationHue^(0+384)+6)
 13698  2F3C                     l9911:	
 13699                           
 13700                           ;led.c: 57:     animationHue.saturation = 0.76f;
 13701  2F3C  303F               	movlw	63
 13702  2F3D  00A5               	movwf	((_animationHue+3)^(0+384)+2)
 13703  2F3E  3042               	movlw	66
 13704  2F3F  00A4               	movwf	((_animationHue+2)^(0+384)+2)
 13705  2F40  308F               	movlw	143
 13706  2F41  00A3               	movwf	((_animationHue+1)^(0+384)+2)
 13707  2F42  305C               	movlw	92
 13708  2F43  00A2               	movwf	(_animationHue^(0+384)+2)
 13709  2F44                     l1430:	
 13710  2F44  0008               	return
 13711  2F45                     __end_of_LED_init:	
 13712                           
 13713                           	psect	text20
 13714  2E45                     __ptext20:	
 13715 ;; *************** function _DMX_init *****************
 13716 ;; Defined at:
 13717 ;;		line 21 in file "dmx.c"
 13718 ;; Parameters:    Size  Location     Type
 13719 ;;		None
 13720 ;; Auto vars:     Size  Location     Type
 13721 ;;		None
 13722 ;; Return value:  Size  Location     Type
 13723 ;;                  1    wreg      void 
 13724 ;; Registers used:
 13725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13726 ;; Tracked objects:
 13727 ;;		On entry : 0/0
 13728 ;;		On exit  : 0/0
 13729 ;;		Unchanged: 0/0
 13730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13735 ;;Total ram usage:        0 bytes
 13736 ;; Hardware stack levels used:    1
 13737 ;; Hardware stack levels required when called:    9
 13738 ;; This function calls:
 13739 ;;		_EUSART1_SetRxInterruptHandler
 13740 ;;		_TM1650_fastPrintNum
 13741 ;; This function is called by:
 13742 ;;		_main
 13743 ;; This function uses a non-reentrant model
 13744 ;;
 13745                           
 13746                           
 13747                           ;psect for function _DMX_init
 13748  2E45                     _DMX_init:	
 13749  2E45                     l12761:	
 13750                           ;incstack = 0
 13751                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13752                           
 13753                           
 13754                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13755  2E45  3099               	movlw	low _DMX_interrupt
 13756  2E46  0140               	movlb	0	; select bank0
 13757  2E47  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13758  2E48  3022               	movlw	high _DMX_interrupt
 13759  2E49  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13760  2E4A  31AD  253B  31AE   	fcall	_EUSART1_SetRxInterruptHandler
 13761  2E4D                     l12763:	
 13762                           
 13763                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 13764  2E4D  0142               	movlb	2	; select bank2
 13765  2E4E  0863               	movf	(_address+1)^(0+256),w
 13766  2E4F  0140               	movlb	0	; select bank0
 13767  2E50  00B7               	movwf	TM1650_fastPrintNum@num+1
 13768  2E51  0142               	movlb	2	; select bank2
 13769  2E52  0862               	movf	_address^(0+256),w
 13770  2E53  0140               	movlb	0	; select bank0
 13771  2E54  00B6               	movwf	TM1650_fastPrintNum@num
 13772  2E55  319C  2489  31AE   	fcall	_TM1650_fastPrintNum
 13773  2E58                     l1356:	
 13774  2E58  0008               	return
 13775  2E59                     __end_of_DMX_init:	
 13776                           
 13777                           	psect	text21
 13778  1C89                     __ptext21:	
 13779 ;; *************** function _TM1650_fastPrintNum *****************
 13780 ;; Defined at:
 13781 ;;		line 101 in file "tm1650.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  num             2   22[BANK0 ] unsigned short 
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;		None
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      void 
 13788 ;; Registers used:
 13789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13798 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13799 ;;Total ram usage:        3 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:    8
 13802 ;; This function calls:
 13803 ;;		___lwdiv
 13804 ;;		___lwmod
 13805 ;;		_writeData
 13806 ;; This function is called by:
 13807 ;;		_DMX_init
 13808 ;; This function uses a non-reentrant model
 13809 ;;
 13810                           
 13811                           
 13812                           ;psect for function _TM1650_fastPrintNum
 13813  1C89                     _TM1650_fastPrintNum:	
 13814  1C89                     l12307:	
 13815                           ;incstack = 0
 13816                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13817                           
 13818                           
 13819                           ;tm1650.c: 103:     if(num > 9999){
 13820  1C89  3027               	movlw	39
 13821  1C8A  0140               	movlb	0	; select bank0
 13822  1C8B  0237               	subwf	TM1650_fastPrintNum@num+1,w
 13823  1C8C  3010               	movlw	16
 13824  1C8D  1903               	skipnz
 13825  1C8E  0236               	subwf	TM1650_fastPrintNum@num,w
 13826  1C8F  1C03               	skipc
 13827  1C90  2C92               	goto	u14371
 13828  1C91  2C93               	goto	u14370
 13829  1C92                     u14371:	
 13830  1C92  2CB7               	goto	l12313
 13831  1C93                     u14370:	
 13832  1C93                     l12309:	
 13833                           
 13834                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 13835  1C93  3079               	movlw	121
 13836  1C94  00B8               	movwf	??_TM1650_fastPrintNum
 13837  1C95  0838               	movf	??_TM1650_fastPrintNum,w
 13838  1C96  00B0               	movwf	writeData@data
 13839  1C97  3034               	movlw	52
 13840  1C98  31AF  277D  319C   	fcall	_writeData
 13841                           
 13842                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 13843  1C9B  3079               	movlw	121
 13844  1C9C  0140               	movlb	0	; select bank0
 13845  1C9D  00B8               	movwf	??_TM1650_fastPrintNum
 13846  1C9E  0838               	movf	??_TM1650_fastPrintNum,w
 13847  1C9F  00B0               	movwf	writeData@data
 13848  1CA0  3035               	movlw	53
 13849  1CA1  31AF  277D  319C   	fcall	_writeData
 13850                           
 13851                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 13852  1CA4  3079               	movlw	121
 13853  1CA5  0140               	movlb	0	; select bank0
 13854  1CA6  00B8               	movwf	??_TM1650_fastPrintNum
 13855  1CA7  0838               	movf	??_TM1650_fastPrintNum,w
 13856  1CA8  00B0               	movwf	writeData@data
 13857  1CA9  3036               	movlw	54
 13858  1CAA  31AF  277D  319C   	fcall	_writeData
 13859                           
 13860                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 13861  1CAD  3079               	movlw	121
 13862  1CAE  0140               	movlb	0	; select bank0
 13863  1CAF  00B8               	movwf	??_TM1650_fastPrintNum
 13864  1CB0  0838               	movf	??_TM1650_fastPrintNum,w
 13865  1CB1  00B0               	movwf	writeData@data
 13866  1CB2  3037               	movlw	55
 13867  1CB3  31AF  277D  319C   	fcall	_writeData
 13868  1CB6  2D4E               	goto	l1257
 13869  1CB7                     l12313:	
 13870                           
 13871                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 13872  1CB7  300A               	movlw	10
 13873  1CB8  00A8               	movwf	___lwmod@divisor
 13874  1CB9  3000               	movlw	0
 13875  1CBA  00A9               	movwf	___lwmod@divisor+1
 13876  1CBB  0837               	movf	TM1650_fastPrintNum@num+1,w
 13877  1CBC  00AB               	movwf	___lwmod@dividend+1
 13878  1CBD  0836               	movf	TM1650_fastPrintNum@num,w
 13879  1CBE  00AA               	movwf	___lwmod@dividend
 13880  1CBF  3198  2003  319C   	fcall	___lwmod
 13881  1CC2  0140               	movlb	0	; select bank0
 13882  1CC3  0829               	movf	?___lwmod+1,w
 13883  1CC4  0085               	movwf	5
 13884  1CC5  0828               	movf	?___lwmod,w
 13885  1CC6  0084               	movwf	4
 13886  1CC7  3010               	movlw	low ((_charTable+16)| (0+32768))
 13887  1CC8  0784               	addwf	4,f
 13888  1CC9  30A8               	movlw	high ((_charTable+16)| (0+32768))
 13889  1CCA  3D85               	addwfc	5,f
 13890  1CCB  0800               	movf	0,w	;code access
 13891  1CCC  00B8               	movwf	??_TM1650_fastPrintNum
 13892  1CCD  0838               	movf	??_TM1650_fastPrintNum,w
 13893  1CCE  00B0               	movwf	writeData@data
 13894  1CCF  3037               	movlw	55
 13895  1CD0  31AF  277D  319C   	fcall	_writeData
 13896                           
 13897                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 13898  1CD3  300A               	movlw	10
 13899  1CD4  0140               	movlb	0	; select bank0
 13900  1CD5  00A8               	movwf	___lwmod@divisor
 13901  1CD6  3000               	movlw	0
 13902  1CD7  00A9               	movwf	___lwmod@divisor+1
 13903  1CD8  300A               	movlw	10
 13904  1CD9  00A0               	movwf	___lwdiv@divisor
 13905  1CDA  3000               	movlw	0
 13906  1CDB  00A1               	movwf	___lwdiv@divisor+1
 13907  1CDC  0837               	movf	TM1650_fastPrintNum@num+1,w
 13908  1CDD  00A3               	movwf	___lwdiv@dividend+1
 13909  1CDE  0836               	movf	TM1650_fastPrintNum@num,w
 13910  1CDF  00A2               	movwf	___lwdiv@dividend
 13911  1CE0  31A2  22D6  319C   	fcall	___lwdiv
 13912  1CE3  0140               	movlb	0	; select bank0
 13913  1CE4  0821               	movf	?___lwdiv+1,w
 13914  1CE5  00AB               	movwf	___lwmod@dividend+1
 13915  1CE6  0820               	movf	?___lwdiv,w
 13916  1CE7  00AA               	movwf	___lwmod@dividend
 13917  1CE8  3198  2003  319C   	fcall	___lwmod
 13918  1CEB  0140               	movlb	0	; select bank0
 13919  1CEC  0829               	movf	?___lwmod+1,w
 13920  1CED  0085               	movwf	5
 13921  1CEE  0828               	movf	?___lwmod,w
 13922  1CEF  0084               	movwf	4
 13923  1CF0  3010               	movlw	low ((_charTable+16)| (0+32768))
 13924  1CF1  0784               	addwf	4,f
 13925  1CF2  30A8               	movlw	high ((_charTable+16)| (0+32768))
 13926  1CF3  3D85               	addwfc	5,f
 13927  1CF4  0800               	movf	0,w	;code access
 13928  1CF5  00B8               	movwf	??_TM1650_fastPrintNum
 13929  1CF6  0838               	movf	??_TM1650_fastPrintNum,w
 13930  1CF7  00B0               	movwf	writeData@data
 13931  1CF8  3036               	movlw	54
 13932  1CF9  31AF  277D  319C   	fcall	_writeData
 13933                           
 13934                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 13935  1CFC  300A               	movlw	10
 13936  1CFD  0140               	movlb	0	; select bank0
 13937  1CFE  00A8               	movwf	___lwmod@divisor
 13938  1CFF  3000               	movlw	0
 13939  1D00  00A9               	movwf	___lwmod@divisor+1
 13940  1D01  3064               	movlw	100
 13941  1D02  00A0               	movwf	___lwdiv@divisor
 13942  1D03  3000               	movlw	0
 13943  1D04  00A1               	movwf	___lwdiv@divisor+1
 13944  1D05  0837               	movf	TM1650_fastPrintNum@num+1,w
 13945  1D06  00A3               	movwf	___lwdiv@dividend+1
 13946  1D07  0836               	movf	TM1650_fastPrintNum@num,w
 13947  1D08  00A2               	movwf	___lwdiv@dividend
 13948  1D09  31A2  22D6  319C   	fcall	___lwdiv
 13949  1D0C  0140               	movlb	0	; select bank0
 13950  1D0D  0821               	movf	?___lwdiv+1,w
 13951  1D0E  00AB               	movwf	___lwmod@dividend+1
 13952  1D0F  0820               	movf	?___lwdiv,w
 13953  1D10  00AA               	movwf	___lwmod@dividend
 13954  1D11  3198  2003  319C   	fcall	___lwmod
 13955  1D14  0140               	movlb	0	; select bank0
 13956  1D15  0829               	movf	?___lwmod+1,w
 13957  1D16  0085               	movwf	5
 13958  1D17  0828               	movf	?___lwmod,w
 13959  1D18  0084               	movwf	4
 13960  1D19  3010               	movlw	low ((_charTable+16)| (0+32768))
 13961  1D1A  0784               	addwf	4,f
 13962  1D1B  30A8               	movlw	high ((_charTable+16)| (0+32768))
 13963  1D1C  3D85               	addwfc	5,f
 13964  1D1D  0800               	movf	0,w	;code access
 13965  1D1E  00B8               	movwf	??_TM1650_fastPrintNum
 13966  1D1F  0838               	movf	??_TM1650_fastPrintNum,w
 13967  1D20  00B0               	movwf	writeData@data
 13968  1D21  3035               	movlw	53
 13969  1D22  31AF  277D  319C   	fcall	_writeData
 13970                           
 13971                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 13972  1D25  300A               	movlw	10
 13973  1D26  0140               	movlb	0	; select bank0
 13974  1D27  00A8               	movwf	___lwmod@divisor
 13975  1D28  3000               	movlw	0
 13976  1D29  00A9               	movwf	___lwmod@divisor+1
 13977  1D2A  30E8               	movlw	232
 13978  1D2B  00A0               	movwf	___lwdiv@divisor
 13979  1D2C  3003               	movlw	3
 13980  1D2D  00A1               	movwf	___lwdiv@divisor+1
 13981  1D2E  0837               	movf	TM1650_fastPrintNum@num+1,w
 13982  1D2F  00A3               	movwf	___lwdiv@dividend+1
 13983  1D30  0836               	movf	TM1650_fastPrintNum@num,w
 13984  1D31  00A2               	movwf	___lwdiv@dividend
 13985  1D32  31A2  22D6  319C   	fcall	___lwdiv
 13986  1D35  0140               	movlb	0	; select bank0
 13987  1D36  0821               	movf	?___lwdiv+1,w
 13988  1D37  00AB               	movwf	___lwmod@dividend+1
 13989  1D38  0820               	movf	?___lwdiv,w
 13990  1D39  00AA               	movwf	___lwmod@dividend
 13991  1D3A  3198  2003  319C   	fcall	___lwmod
 13992  1D3D  0140               	movlb	0	; select bank0
 13993  1D3E  0829               	movf	?___lwmod+1,w
 13994  1D3F  0085               	movwf	5
 13995  1D40  0828               	movf	?___lwmod,w
 13996  1D41  0084               	movwf	4
 13997  1D42  3010               	movlw	low ((_charTable+16)| (0+32768))
 13998  1D43  0784               	addwf	4,f
 13999  1D44  30A8               	movlw	high ((_charTable+16)| (0+32768))
 14000  1D45  3D85               	addwfc	5,f
 14001  1D46  0800               	movf	0,w	;code access
 14002  1D47  00B8               	movwf	??_TM1650_fastPrintNum
 14003  1D48  0838               	movf	??_TM1650_fastPrintNum,w
 14004  1D49  00B0               	movwf	writeData@data
 14005  1D4A  3034               	movlw	52
 14006  1D4B  31AF  277D  319C   	fcall	_writeData
 14007  1D4E                     l1257:	
 14008  1D4E  0008               	return
 14009  1D4F                     __end_of_TM1650_fastPrintNum:	
 14010                           
 14011                           	psect	text22
 14012  2D3B                     __ptext22:	
 14013 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 14014 ;; Defined at:
 14015 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 14018 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;		None
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  1    wreg      void 
 14023 ;; Registers used:
 14024 ;;		wreg
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;Total ram usage:        2 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    4
 14037 ;; This function calls:
 14038 ;;		Nothing
 14039 ;; This function is called by:
 14040 ;;		_EUSART1_Initialize
 14041 ;;		_DMX_init
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           
 14046                           ;psect for function _EUSART1_SetRxInterruptHandler
 14047  2D3B                     _EUSART1_SetRxInterruptHandler:	
 14048  2D3B                     l11727:	
 14049                           ;incstack = 0
 14050                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 14051                           
 14052                           
 14053                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 14054  2D3B  0140               	movlb	0	; select bank0
 14055  2D3C  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 14056  2D3D  0144               	movlb	4	; select bank4
 14057  2D3E  00ED               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+512)
 14058  2D3F  0140               	movlb	0	; select bank0
 14059  2D40  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 14060  2D41  0144               	movlb	4	; select bank4
 14061  2D42  00EC               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+512)
 14062  2D43                     l400:	
 14063  2D43  0008               	return
 14064  2D44                     __end_of_EUSART1_SetRxInterruptHandler:	
 14065                           
 14066                           	psect	text23
 14067  1257                     __ptext23:	
 14068 ;; *************** function _CONTROLLER_task *****************
 14069 ;; Defined at:
 14070 ;;		line 236 in file "controller.c"
 14071 ;; Parameters:    Size  Location     Type
 14072 ;;		None
 14073 ;; Auto vars:     Size  Location     Type
 14074 ;;		None
 14075 ;; Return value:  Size  Location     Type
 14076 ;;                  1    wreg      void 
 14077 ;; Registers used:
 14078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14079 ;; Tracked objects:
 14080 ;;		On entry : 0/0
 14081 ;;		On exit  : 0/0
 14082 ;;		Unchanged: 0/0
 14083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14086 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14087 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14088 ;;Total ram usage:        2 bytes
 14089 ;; Hardware stack levels used:    1
 14090 ;; Hardware stack levels required when called:   19
 14091 ;; This function calls:
 14092 ;;		Absolute function
 14093 ;;		_BUTTONS_isClicked
 14094 ;;		_CONTROL_ANIMATION
 14095 ;;		_CONTROL_BEAT
 14096 ;;		_CONTROL_DMX
 14097 ;;		_CONTROL_MANUAL
 14098 ;;		_printf
 14099 ;; This function is called by:
 14100 ;;		_main
 14101 ;; This function uses a non-reentrant model
 14102 ;;
 14103                           
 14104                           
 14105                           ;psect for function _CONTROLLER_task
 14106  1257                     _CONTROLLER_task:	
 14107  1257                     l12817:	
 14108                           ;incstack = 0
 14109 ;; hardware stack exceeded
 14110                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14111                           
 14112                           
 14113                           ;controller.c: 238:     if(startup == 1){
 14114  1257  0142               	movlb	2	; select bank2
 14115  1258  0367               	decf	_startup^(0+256),w
 14116  1259  1D03               	btfss	3,2
 14117  125A  2A5C               	goto	u14721
 14118  125B  2A5D               	goto	u14720
 14119  125C                     u14721:	
 14120  125C  2A62               	goto	l12823
 14121  125D                     u14720:	
 14122  125D                     l12819:	
 14123                           
 14124                           ;controller.c: 239:         currentMenu = &dmx;
 14125  125D  305B               	movlw	low _dmx
 14126  125E  00F2               	movwf	_currentMenu
 14127  125F  3002               	movlw	high _dmx
 14128  1260  00F3               	movwf	_currentMenu+1
 14129  1261                     l12821:	
 14130                           
 14131                           ;controller.c: 240:         startup = 0;
 14132  1261  01E7               	clrf	_startup^(0+256)
 14133  1262                     l12823:	
 14134                           
 14135                           ;controller.c: 243:     upState = BUTTONS_isClicked(up);
 14136  1262  084F               	movf	_up^(0+256),w
 14137  1263  31AE  2683  3192   	fcall	_BUTTONS_isClicked
 14138  1266  0142               	movlb	2	; select bank2
 14139  1267  00EB               	movwf	??_CONTROLLER_task^(0+256)
 14140  1268  086B               	movf	??_CONTROLLER_task^(0+256),w
 14141  1269  00F5               	movwf	_upState
 14142  126A                     l12825:	
 14143                           
 14144                           ;controller.c: 244:     downState = BUTTONS_isClicked(down);
 14145  126A  084E               	movf	_down^(0+256),w
 14146  126B  31AE  2683  3192   	fcall	_BUTTONS_isClicked
 14147  126E  0142               	movlb	2	; select bank2
 14148  126F  00EB               	movwf	??_CONTROLLER_task^(0+256)
 14149  1270  086B               	movf	??_CONTROLLER_task^(0+256),w
 14150  1271  00F4               	movwf	_downState
 14151  1272                     l12827:	
 14152                           
 14153                           ;controller.c: 245:     menuState = BUTTONS_isClicked(menu);
 14154  1272  0850               	movf	_menu^(0+256),w
 14155  1273  31AE  2683  3192   	fcall	_BUTTONS_isClicked
 14156  1276  0142               	movlb	2	; select bank2
 14157  1277  00EB               	movwf	??_CONTROLLER_task^(0+256)
 14158  1278  086B               	movf	??_CONTROLLER_task^(0+256),w
 14159  1279  00CC               	movwf	_menuState^(0+256)
 14160  127A                     l12829:	
 14161                           
 14162                           ;controller.c: 246:     enterState = BUTTONS_isClicked(enter);
 14163  127A  084D               	movf	_enter^(0+256),w
 14164  127B  31AE  2683  3192   	fcall	_BUTTONS_isClicked
 14165  127E  0142               	movlb	2	; select bank2
 14166  127F  00EB               	movwf	??_CONTROLLER_task^(0+256)
 14167  1280  086B               	movf	??_CONTROLLER_task^(0+256),w
 14168  1281  00CB               	movwf	_enterState^(0+256)
 14169  1282                     l12831:	
 14170                           
 14171                           ;controller.c: 248:     if(menuState){
 14172  1282  084C               	movf	_menuState^(0+256),w
 14173  1283  1903               	btfsc	3,2
 14174  1284  2A86               	goto	u14731
 14175  1285  2A87               	goto	u14730
 14176  1286                     u14731:	
 14177  1286  2A91               	goto	l12835
 14178  1287                     u14730:	
 14179  1287                     l12833:	
 14180                           
 14181                           ;controller.c: 249:         currentMenu = currentMenu->parent;
 14182  1287  0872               	movf	_currentMenu,w
 14183  1288  0086               	movwf	6
 14184  1289  0873               	movf	_currentMenu+1,w
 14185  128A  0087               	movwf	7
 14186  128B  3146               	addfsr 1,6
 14187  128C  3F40               	moviw [0]fsr1
 14188  128D  00F2               	movwf	_currentMenu
 14189  128E  3F41               	moviw [1]fsr1
 14190  128F  00F3               	movwf	_currentMenu+1
 14191                           
 14192                           ;controller.c: 250:     } else if(upState && currentMenu->nextItem != ((void*)0)){
 14193  1290  2B45               	goto	l12875
 14194  1291                     l12835:	
 14195  1291  0875               	movf	_upState,w
 14196  1292  1903               	btfsc	3,2
 14197  1293  2A95               	goto	u14741
 14198  1294  2A96               	goto	u14740
 14199  1295                     u14741:	
 14200  1295  2AA9               	goto	l12841
 14201  1296                     u14740:	
 14202  1296                     l12837:	
 14203  1296  0872               	movf	_currentMenu,w
 14204  1297  0086               	movwf	6
 14205  1298  0873               	movf	_currentMenu+1,w
 14206  1299  0087               	movwf	7
 14207  129A  0016               	moviw fsr1++
 14208  129B  0401               	iorwf	1,w
 14209  129C  1903               	btfsc	3,2
 14210  129D  2A9F               	goto	u14751
 14211  129E  2AA0               	goto	u14750
 14212  129F                     u14751:	
 14213  129F  2AA9               	goto	l12841
 14214  12A0                     u14750:	
 14215  12A0                     l12839:	
 14216                           
 14217                           ;controller.c: 251:         currentMenu = currentMenu->nextItem;
 14218  12A0  0872               	movf	_currentMenu,w
 14219  12A1  0086               	movwf	6
 14220  12A2  0873               	movf	_currentMenu+1,w
 14221  12A3  0087               	movwf	7
 14222  12A4  3F40               	moviw [0]fsr1
 14223  12A5  00F2               	movwf	_currentMenu
 14224  12A6  3F41               	moviw [1]fsr1
 14225  12A7  00F3               	movwf	_currentMenu+1
 14226                           
 14227                           ;controller.c: 252:     } else if(downState && currentMenu->prevItem != ((void*)0)){
 14228  12A8  2B45               	goto	l12875
 14229  12A9                     l12841:	
 14230  12A9  0874               	movf	_downState,w
 14231  12AA  1903               	btfsc	3,2
 14232  12AB  2AAD               	goto	u14761
 14233  12AC  2AAE               	goto	u14760
 14234  12AD                     u14761:	
 14235  12AD  2AC3               	goto	l12847
 14236  12AE                     u14760:	
 14237  12AE                     l12843:	
 14238  12AE  0872               	movf	_currentMenu,w
 14239  12AF  0086               	movwf	6
 14240  12B0  0873               	movf	_currentMenu+1,w
 14241  12B1  0087               	movwf	7
 14242  12B2  3142               	addfsr 1,2
 14243  12B3  0016               	moviw fsr1++
 14244  12B4  0401               	iorwf	1,w
 14245  12B5  1903               	btfsc	3,2
 14246  12B6  2AB8               	goto	u14771
 14247  12B7  2AB9               	goto	u14770
 14248  12B8                     u14771:	
 14249  12B8  2AC3               	goto	l12847
 14250  12B9                     u14770:	
 14251  12B9                     l12845:	
 14252                           
 14253                           ;controller.c: 253:         currentMenu = currentMenu->prevItem;
 14254  12B9  0872               	movf	_currentMenu,w
 14255  12BA  0086               	movwf	6
 14256  12BB  0873               	movf	_currentMenu+1,w
 14257  12BC  0087               	movwf	7
 14258  12BD  3142               	addfsr 1,2
 14259  12BE  3F40               	moviw [0]fsr1
 14260  12BF  00F2               	movwf	_currentMenu
 14261  12C0  3F41               	moviw [1]fsr1
 14262  12C1  00F3               	movwf	_currentMenu+1
 14263                           
 14264                           ;controller.c: 254:     } else if(enterState && currentMenu->config != ((void*)0)){
 14265  12C2  2B45               	goto	l12875
 14266  12C3                     l12847:	
 14267  12C3  084B               	movf	_enterState^(0+256),w
 14268  12C4  1903               	btfsc	3,2
 14269  12C5  2AC7               	goto	u14781
 14270  12C6  2AC8               	goto	u14780
 14271  12C7                     u14781:	
 14272  12C7  2AE6               	goto	l1094
 14273  12C8                     u14780:	
 14274  12C8                     l12849:	
 14275  12C8  0872               	movf	_currentMenu,w
 14276  12C9  0086               	movwf	6
 14277  12CA  0873               	movf	_currentMenu+1,w
 14278  12CB  0087               	movwf	7
 14279  12CC  3144               	addfsr 1,4
 14280  12CD  0016               	moviw fsr1++
 14281  12CE  0401               	iorwf	1,w
 14282  12CF  1903               	btfsc	3,2
 14283  12D0  2AD2               	goto	u14791
 14284  12D1  2AD3               	goto	u14790
 14285  12D2                     u14791:	
 14286  12D2  2AE6               	goto	l1094
 14287  12D3                     u14790:	
 14288  12D3                     l12851:	
 14289                           
 14290                           ;controller.c: 255:         currentMenu = currentMenu->config;
 14291  12D3  0872               	movf	_currentMenu,w
 14292  12D4  0086               	movwf	6
 14293  12D5  0873               	movf	_currentMenu+1,w
 14294  12D6  0087               	movwf	7
 14295  12D7  3144               	addfsr 1,4
 14296  12D8  3F40               	moviw [0]fsr1
 14297  12D9  00F2               	movwf	_currentMenu
 14298  12DA  3F41               	moviw [1]fsr1
 14299  12DB  00F3               	movwf	_currentMenu+1
 14300                           
 14301                           ;controller.c: 256:         previousTask = currentMenu->task;
 14302  12DC  0872               	movf	_currentMenu,w
 14303  12DD  0086               	movwf	6
 14304  12DE  0873               	movf	_currentMenu+1,w
 14305  12DF  0087               	movwf	7
 14306  12E0  3149               	addfsr 1,9
 14307  12E1  3F40               	moviw [0]fsr1
 14308  12E2  00B7               	movwf	_previousTask^(0+256)
 14309  12E3  3F41               	moviw [1]fsr1
 14310  12E4  00B8               	movwf	(_previousTask+1)^(0+256)
 14311  12E5  2B45               	goto	l12875
 14312  12E6                     l1094:	
 14313                           
 14314                           ;controller.c: 259:     switch(currentMenu->name){
 14315  12E6  2B45               	goto	l12875
 14316  12E7                     l12853:	
 14317                           
 14318                           ;controller.c: 261:             printf("PC  \r");
 14319  12E7  3055               	movlw	low (STR_1| (0+32768))
 14320  12E8  0141               	movlb	1	; select bank1
 14321  12E9  00A0               	movwf	printf@fmt^(0+128)
 14322  12EA  30B0               	movlw	high (STR_1| (0+32768))
 14323  12EB  00A1               	movwf	(printf@fmt^(0+128)+1)
 14324  12EC  31AE  26AF  3192   	fcall	_printf
 14325                           
 14326                           ;controller.c: 262:             break;
 14327  12EF  2B6C               	goto	l1112
 14328  12F0                     l12855:	
 14329                           
 14330                           ;controller.c: 265:             printf("BEAT\r");
 14331  12F0  3073               	movlw	low (STR_2| (0+32768))
 14332  12F1  0141               	movlb	1	; select bank1
 14333  12F2  00A0               	movwf	printf@fmt^(0+128)
 14334  12F3  30B0               	movlw	high (STR_2| (0+32768))
 14335  12F4  00A1               	movwf	(printf@fmt^(0+128)+1)
 14336  12F5  31AE  26AF  3192   	fcall	_printf
 14337                           
 14338                           ;controller.c: 266:             break;
 14339  12F8  2B6C               	goto	l1112
 14340  12F9                     l12857:	
 14341                           
 14342                           ;controller.c: 269:             printf("ANI \r");
 14343  12F9  3061               	movlw	low (STR_3| (0+32768))
 14344  12FA  0141               	movlb	1	; select bank1
 14345  12FB  00A0               	movwf	printf@fmt^(0+128)
 14346  12FC  30B0               	movlw	high (STR_3| (0+32768))
 14347  12FD  00A1               	movwf	(printf@fmt^(0+128)+1)
 14348  12FE  31AE  26AF  3192   	fcall	_printf
 14349                           
 14350                           ;controller.c: 270:             break;
 14351  1301  2B6C               	goto	l1112
 14352  1302                     l12859:	
 14353                           
 14354                           ;controller.c: 273:             printf("LED \r");
 14355  1302  305B               	movlw	low (STR_4| (0+32768))
 14356  1303  0141               	movlb	1	; select bank1
 14357  1304  00A0               	movwf	printf@fmt^(0+128)
 14358  1305  30B0               	movlw	high (STR_4| (0+32768))
 14359  1306  00A1               	movwf	(printf@fmt^(0+128)+1)
 14360  1307  31AE  26AF  3192   	fcall	_printf
 14361                           
 14362                           ;controller.c: 274:             break;
 14363  130A  2B6C               	goto	l1112
 14364  130B                     l12861:	
 14365                           
 14366                           ;controller.c: 277:             printf("B   \r");
 14367  130B  3049               	movlw	low (STR_5| (0+32768))
 14368  130C  0141               	movlb	1	; select bank1
 14369  130D  00A0               	movwf	printf@fmt^(0+128)
 14370  130E  30B0               	movlw	high (STR_5| (0+32768))
 14371  130F  00A1               	movwf	(printf@fmt^(0+128)+1)
 14372  1310  31AE  26AF  3192   	fcall	_printf
 14373                           
 14374                           ;controller.c: 278:             break;
 14375  1313  2B6C               	goto	l1112
 14376  1314                     l12863:	
 14377                           
 14378                           ;controller.c: 281:             printf("FADE\r");
 14379  1314  306D               	movlw	low (STR_6| (0+32768))
 14380  1315  0141               	movlb	1	; select bank1
 14381  1316  00A0               	movwf	printf@fmt^(0+128)
 14382  1317  30B0               	movlw	high (STR_6| (0+32768))
 14383  1318  00A1               	movwf	(printf@fmt^(0+128)+1)
 14384  1319  31AE  26AF  3192   	fcall	_printf
 14385                           
 14386                           ;controller.c: 282:             break;
 14387  131C  2B6C               	goto	l1112
 14388  131D                     l12865:	
 14389                           
 14390                           ;controller.c: 285:             printf("C   \r");
 14391  131D  304F               	movlw	low (STR_7| (0+32768))
 14392  131E  0141               	movlb	1	; select bank1
 14393  131F  00A0               	movwf	printf@fmt^(0+128)
 14394  1320  30B0               	movlw	high (STR_7| (0+32768))
 14395  1321  00A1               	movwf	(printf@fmt^(0+128)+1)
 14396  1322  31AE  26AF  3192   	fcall	_printf
 14397                           
 14398                           ;controller.c: 286:             break;
 14399  1325  2B6C               	goto	l1112
 14400  1326                     l12867:	
 14401                           
 14402                           ;controller.c: 289:             printf("ALL \r");
 14403  1326  3067               	movlw	low (STR_8| (0+32768))
 14404  1327  0141               	movlb	1	; select bank1
 14405  1328  00A0               	movwf	printf@fmt^(0+128)
 14406  1329  30B0               	movlw	high (STR_8| (0+32768))
 14407  132A  00A1               	movwf	(printf@fmt^(0+128)+1)
 14408  132B  31AE  26AF  3192   	fcall	_printf
 14409                           
 14410                           ;controller.c: 290:             break;
 14411  132E  2B6C               	goto	l1112
 14412  132F                     l12869:	
 14413                           
 14414                           ;controller.c: 293:             if(currentMenu->task != ((void*)0))
 14415  132F  0872               	movf	_currentMenu,w
 14416  1330  0086               	movwf	6
 14417  1331  0873               	movf	_currentMenu+1,w
 14418  1332  0087               	movwf	7
 14419  1333  3149               	addfsr 1,9
 14420  1334  0016               	moviw fsr1++
 14421  1335  0401               	iorwf	1,w
 14422  1336  1903               	btfsc	3,2
 14423  1337  2B39               	goto	u14801
 14424  1338  2B3A               	goto	u14800
 14425  1339                     u14801:	
 14426  1339  2B6C               	goto	l1112
 14427  133A                     u14800:	
 14428  133A                     l12871:	
 14429                           
 14430                           ;controller.c: 294:             currentMenu->task();
 14431  133A  0872               	movf	_currentMenu,w
 14432  133B  0086               	movwf	6
 14433  133C  0873               	movf	_currentMenu+1,w
 14434  133D  0087               	movwf	7
 14435  133E  3149               	addfsr 1,9
 14436  133F  3F41               	moviw [1]fsr1
 14437  1340  008A               	movwf	10
 14438  1341  3F40               	moviw [0]fsr1
 14439  1342  000A               	callw
 14440  1343  3192               	pagesel	$
 14441  1344  2B6C               	goto	l1112
 14442  1345                     l12875:	
 14443  1345  0872               	movf	_currentMenu,w
 14444  1346  0086               	movwf	6
 14445  1347  0873               	movf	_currentMenu+1,w
 14446  1348  0087               	movwf	7
 14447  1349  3148               	addfsr 1,8
 14448  134A  0801               	movf	1,w
 14449  134B  00EB               	movwf	??_CONTROLLER_task^(0+256)
 14450  134C  01EC               	clrf	(??_CONTROLLER_task^(0+256)+1)
 14451                           
 14452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14453                           ; Switch size 1, requested type "simple"
 14454                           ; Number of cases is 1, Range of values is 0 to 0
 14455                           ; switch strategies available:
 14456                           ; Name         Instructions Cycles
 14457                           ; simple_byte            4     3 (average)
 14458                           ; direct_byte            8     6 (fixed)
 14459                           ; jumptable            260     6 (fixed)
 14460                           ;	Chosen strategy is simple_byte
 14461  134D  086C               	movf	(??_CONTROLLER_task+1)^(0+256),w
 14462  134E  3A00               	xorlw	0	; case 0
 14463  134F  1903               	skipnz
 14464  1350  2B52               	goto	l13229
 14465  1351  2B2F               	goto	l12869
 14466  1352                     l13229:	
 14467                           
 14468                           ; Switch size 1, requested type "simple"
 14469                           ; Number of cases is 8, Range of values is 0 to 8
 14470                           ; switch strategies available:
 14471                           ; Name         Instructions Cycles
 14472                           ; direct_byte           24     6 (fixed)
 14473                           ; simple_byte           25    13 (average)
 14474                           ; jumptable            260     6 (fixed)
 14475                           ;	Chosen strategy is simple_byte
 14476  1352  086B               	movf	??_CONTROLLER_task^(0+256),w
 14477  1353  3A00               	xorlw	0	; case 0
 14478  1354  1903               	skipnz
 14479  1355  2AE7               	goto	l12853
 14480  1356  3A01               	xorlw	1	; case 1
 14481  1357  1903               	skipnz
 14482  1358  2AF0               	goto	l12855
 14483  1359  3A03               	xorlw	3	; case 2
 14484  135A  1903               	skipnz
 14485  135B  2AF9               	goto	l12857
 14486  135C  3A01               	xorlw	1	; case 3
 14487  135D  1903               	skipnz
 14488  135E  2B02               	goto	l12859
 14489  135F  3A06               	xorlw	6	; case 5
 14490  1360  1903               	skipnz
 14491  1361  2B0B               	goto	l12861
 14492  1362  3A03               	xorlw	3	; case 6
 14493  1363  1903               	skipnz
 14494  1364  2B14               	goto	l12863
 14495  1365  3A01               	xorlw	1	; case 7
 14496  1366  1903               	skipnz
 14497  1367  2B1D               	goto	l12865
 14498  1368  3A0F               	xorlw	15	; case 8
 14499  1369  1903               	skipnz
 14500  136A  2B26               	goto	l12867
 14501  136B  2B2F               	goto	l12869
 14502  136C                     l1112:	
 14503  136C  0008               	return
 14504  136D                     __end_of_CONTROLLER_task:	
 14505                           
 14506                           	psect	text24
 14507  2708                     __ptext24:	
 14508 ;; *************** function _CONTROL_BEAT *****************
 14509 ;; Defined at:
 14510 ;;		line 335 in file "controller.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;		None
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;		None
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      void 
 14517 ;; Registers used:
 14518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14526 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14527 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14528 ;;Total ram usage:        2 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:   17
 14531 ;; This function calls:
 14532 ;;		_LED_task_BEAT_CONTINUOUS
 14533 ;;		_LED_task_BEAT_FADE
 14534 ;;		_LED_task_BEAT_MIXED
 14535 ;;		_LED_task_BEAT_STROBE
 14536 ;;		_TM1650_fastPrintNum_2digit
 14537 ;;		_printf
 14538 ;; This function is called by:
 14539 ;;		_CONTROLLER_init
 14540 ;;		_CONTROLLER_task
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           
 14545                           ;psect for function _CONTROL_BEAT
 14546  2708                     _CONTROL_BEAT:	
 14547  2708                     l12121:	
 14548                           ;incstack = 0
 14549 ;; hardware stack exceeded
 14550                           ; Regs used in _CONTROL_BEAT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14551                           
 14552                           
 14553                           ;controller.c: 337:     switch(currentMenu->name){
 14554  2708  2F35               	goto	l12139
 14555  2709                     l12123:	
 14556                           
 14557                           ;controller.c: 340:             printf("B-\r");
 14558  2709  3082               	movlw	low (STR_9| (0+32768))
 14559  270A  00A0               	movwf	printf@fmt^(0+128)
 14560  270B  30B0               	movlw	high (STR_9| (0+32768))
 14561  270C  00A1               	movwf	(printf@fmt^(0+128)+1)
 14562  270D  31AE  26AF  31A7   	fcall	_printf
 14563  2710                     l12125:	
 14564                           
 14565                           ;controller.c: 341:             LED_task_BEAT_STROBE();
 14566  2710  3196  261D  31A7   	fcall	_LED_task_BEAT_STROBE
 14567                           
 14568                           ;controller.c: 342:             break;
 14569  2713  2F51               	goto	l12141
 14570  2714                     l12127:	
 14571                           
 14572                           ;controller.c: 345:             printf("F-\r");
 14573  2714  308A               	movlw	low (STR_10| (0+32768))
 14574  2715  00A0               	movwf	printf@fmt^(0+128)
 14575  2716  30B0               	movlw	high (STR_10| (0+32768))
 14576  2717  00A1               	movwf	(printf@fmt^(0+128)+1)
 14577  2718  31AE  26AF  31A7   	fcall	_printf
 14578  271B                     l12129:	
 14579                           
 14580                           ;controller.c: 346:             LED_task_BEAT_FADE();
 14581  271B  3188  2000  31A7   	fcall	_LED_task_BEAT_FADE
 14582                           
 14583                           ;controller.c: 347:             break;
 14584  271E  2F51               	goto	l12141
 14585  271F                     l12131:	
 14586                           
 14587                           ;controller.c: 350:             printf("C-\r");
 14588  271F  3086               	movlw	low (STR_11| (0+32768))
 14589  2720  00A0               	movwf	printf@fmt^(0+128)
 14590  2721  30B0               	movlw	high (STR_11| (0+32768))
 14591  2722  00A1               	movwf	(printf@fmt^(0+128)+1)
 14592  2723  31AE  26AF  31A7   	fcall	_printf
 14593                           
 14594                           ;controller.c: 351:             LED_task_BEAT_CONTINUOUS();
 14595  2726  319B  2327  31A7   	fcall	_LED_task_BEAT_CONTINUOUS
 14596                           
 14597                           ;controller.c: 352:             break;
 14598  2729  2F51               	goto	l12141
 14599  272A                     l12133:	
 14600                           
 14601                           ;controller.c: 355:             printf("A-\r");
 14602  272A  307E               	movlw	low (STR_12| (0+32768))
 14603  272B  00A0               	movwf	printf@fmt^(0+128)
 14604  272C  30B0               	movlw	high (STR_12| (0+32768))
 14605  272D  00A1               	movwf	(printf@fmt^(0+128)+1)
 14606  272E  31AE  26AF  31A7   	fcall	_printf
 14607  2731                     l12135:	
 14608                           
 14609                           ;controller.c: 356:             LED_task_BEAT_MIXED();
 14610  2731  3188  2001  31A7   	fcall	_LED_task_BEAT_MIXED
 14611                           
 14612                           ;controller.c: 357:             break;
 14613  2734  2F51               	goto	l12141
 14614  2735                     l12139:	
 14615  2735  0872               	movf	_currentMenu,w
 14616  2736  0086               	movwf	6
 14617  2737  0873               	movf	_currentMenu+1,w
 14618  2738  0087               	movwf	7
 14619  2739  3148               	addfsr 1,8
 14620  273A  0801               	movf	1,w
 14621  273B  0141               	movlb	1	; select bank1
 14622  273C  00E7               	movwf	??_CONTROL_BEAT^(0+128)
 14623  273D  01E8               	clrf	(??_CONTROL_BEAT^(0+128)+1)
 14624                           
 14625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14626                           ; Switch size 1, requested type "simple"
 14627                           ; Number of cases is 1, Range of values is 0 to 0
 14628                           ; switch strategies available:
 14629                           ; Name         Instructions Cycles
 14630                           ; simple_byte            4     3 (average)
 14631                           ; direct_byte            8     6 (fixed)
 14632                           ; jumptable            260     6 (fixed)
 14633                           ;	Chosen strategy is simple_byte
 14634  273E  0868               	movf	(??_CONTROL_BEAT+1)^(0+128),w
 14635  273F  3A00               	xorlw	0	; case 0
 14636  2740  1903               	skipnz
 14637  2741  2F43               	goto	l13231
 14638  2742  2F51               	goto	l12141
 14639  2743                     l13231:	
 14640                           
 14641                           ; Switch size 1, requested type "simple"
 14642                           ; Number of cases is 4, Range of values is 9 to 12
 14643                           ; switch strategies available:
 14644                           ; Name         Instructions Cycles
 14645                           ; simple_byte           13     7 (average)
 14646                           ; direct_byte           17     9 (fixed)
 14647                           ; jumptable            263     9 (fixed)
 14648                           ;	Chosen strategy is simple_byte
 14649  2743  0867               	movf	??_CONTROL_BEAT^(0+128),w
 14650  2744  3A09               	xorlw	9	; case 9
 14651  2745  1903               	skipnz
 14652  2746  2F09               	goto	l12123
 14653  2747  3A03               	xorlw	3	; case 10
 14654  2748  1903               	skipnz
 14655  2749  2F14               	goto	l12127
 14656  274A  3A01               	xorlw	1	; case 11
 14657  274B  1903               	skipnz
 14658  274C  2F1F               	goto	l12131
 14659  274D  3A07               	xorlw	7	; case 12
 14660  274E  1903               	skipnz
 14661  274F  2F2A               	goto	l12133
 14662  2750  2F51               	goto	l12141
 14663  2751                     l12141:	
 14664                           
 14665                           ;controller.c: 361:     TM1650_fastPrintNum_2digit(beatBrightness);
 14666  2751  0142               	movlb	2	; select bank2
 14667  2752  0868               	movf	_beatBrightness^(0+256),w
 14668  2753  31A6  2690  31A7   	fcall	_TM1650_fastPrintNum_2digit
 14669  2756                     l12143:	
 14670                           
 14671                           ;controller.c: 363:     if (upState) {
 14672  2756  0875               	movf	_upState,w
 14673  2757  1903               	btfsc	3,2
 14674  2758  2F5A               	goto	u13991
 14675  2759  2F5B               	goto	u13990
 14676  275A                     u13991:	
 14677  275A  2F70               	goto	l12151
 14678  275B                     u13990:	
 14679  275B                     l12145:	
 14680                           
 14681                           ;controller.c: 364:         if(beatBrightness < 9){
 14682  275B  3009               	movlw	9
 14683  275C  0142               	movlb	2	; select bank2
 14684  275D  0268               	subwf	_beatBrightness^(0+256),w
 14685  275E  1803               	skipnc
 14686  275F  2F61               	goto	u14001
 14687  2760  2F62               	goto	u14000
 14688  2761                     u14001:	
 14689  2761  2F69               	goto	l12149
 14690  2762                     u14000:	
 14691  2762                     l12147:	
 14692                           
 14693                           ;controller.c: 365:             beatBrightness++;
 14694  2762  3001               	movlw	1
 14695  2763  0141               	movlb	1	; select bank1
 14696  2764  00E7               	movwf	??_CONTROL_BEAT^(0+128)
 14697  2765  0867               	movf	??_CONTROL_BEAT^(0+128),w
 14698  2766  0142               	movlb	2	; select bank2
 14699  2767  07E8               	addwf	_beatBrightness^(0+256),f
 14700                           
 14701                           ;controller.c: 366:         } else {
 14702  2768  2F7F               	goto	l1149
 14703  2769                     l12149:	
 14704                           
 14705                           ;controller.c: 367:             beatBrightness = 9;
 14706  2769  3009               	movlw	9
 14707  276A  0141               	movlb	1	; select bank1
 14708  276B  00E7               	movwf	??_CONTROL_BEAT^(0+128)
 14709  276C  0867               	movf	??_CONTROL_BEAT^(0+128),w
 14710  276D  0142               	movlb	2	; select bank2
 14711  276E  00E8               	movwf	_beatBrightness^(0+256)
 14712  276F  2F7F               	goto	l1149
 14713  2770                     l12151:	
 14714  2770  0874               	movf	_downState,w
 14715  2771  1903               	btfsc	3,2
 14716  2772  2F74               	goto	u14011
 14717  2773  2F75               	goto	u14010
 14718  2774                     u14011:	
 14719  2774  2F7F               	goto	l1149
 14720  2775                     u14010:	
 14721  2775                     l12153:	
 14722                           
 14723                           ;controller.c: 370:         if(beatBrightness > 0){
 14724  2775  0142               	movlb	2	; select bank2
 14725  2776  0868               	movf	_beatBrightness^(0+256),w
 14726  2777  1903               	btfsc	3,2
 14727  2778  2F7A               	goto	u14021
 14728  2779  2F7B               	goto	u14020
 14729  277A                     u14021:	
 14730  277A  2F7E               	goto	l12157
 14731  277B                     u14020:	
 14732  277B                     l12155:	
 14733                           
 14734                           ;controller.c: 371:             beatBrightness--;
 14735  277B  3001               	movlw	1
 14736  277C  02E8               	subwf	_beatBrightness^(0+256),f
 14737                           
 14738                           ;controller.c: 372:         } else {
 14739  277D  2F7F               	goto	l1149
 14740  277E                     l12157:	
 14741                           
 14742                           ;controller.c: 373:             beatBrightness = 0;
 14743  277E  01E8               	clrf	_beatBrightness^(0+256)
 14744  277F                     l1149:	
 14745  277F  0008               	return
 14746  2780                     __end_of_CONTROL_BEAT:	
 14747                           
 14748                           	psect	text25
 14749  1146                     __ptext25:	
 14750 ;; *************** function _CONTROL_ANIMATION *****************
 14751 ;; Defined at:
 14752 ;;		line 444 in file "controller.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;		None
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;		None
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14768 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14769 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14770 ;;Total ram usage:        2 bytes
 14771 ;; Hardware stack levels used:    1
 14772 ;; Hardware stack levels required when called:   17
 14773 ;; This function calls:
 14774 ;;		_LED_task_ANIMATION
 14775 ;;		_TM1650_fastPrintNum_2digit
 14776 ;;		_printf
 14777 ;; This function is called by:
 14778 ;;		_CONTROLLER_init
 14779 ;;		_CONTROLLER_task
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           
 14784                           ;psect for function _CONTROL_ANIMATION
 14785  1146                     _CONTROL_ANIMATION:	
 14786  1146                     l12227:	
 14787                           ;incstack = 0
 14788 ;; hardware stack exceeded
 14789                           ; Regs used in _CONTROL_ANIMATION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14790                           
 14791                           
 14792                           ;controller.c: 446:     if (upState && currentMenu->name == A_SELECTION) {
 14793  1146  0875               	movf	_upState,w
 14794  1147  1903               	btfsc	3,2
 14795  1148  294A               	goto	u14151
 14796  1149  294B               	goto	u14150
 14797  114A                     u14151:	
 14798  114A  2967               	goto	l12237
 14799  114B                     u14150:	
 14800  114B                     l12229:	
 14801  114B  0872               	movf	_currentMenu,w
 14802  114C  0086               	movwf	6
 14803  114D  0873               	movf	_currentMenu+1,w
 14804  114E  0087               	movwf	7
 14805  114F  3148               	addfsr 1,8
 14806  1150  3012               	movlw	18
 14807  1151  0601               	xorwf	1,w
 14808  1152  1D03               	btfss	3,2
 14809  1153  2955               	goto	u14161
 14810  1154  2956               	goto	u14160
 14811  1155                     u14161:	
 14812  1155  2967               	goto	l12237
 14813  1156                     u14160:	
 14814  1156                     l12231:	
 14815                           
 14816                           ;controller.c: 447:         if (animationModeSelected < 10) {
 14817  1156  300A               	movlw	10
 14818  1157  0142               	movlb	2	; select bank2
 14819  1158  0266               	subwf	_animationModeSelected^(0+256),w
 14820  1159  1803               	skipnc
 14821  115A  295C               	goto	u14171
 14822  115B  295D               	goto	u14170
 14823  115C                     u14171:	
 14824  115C  2962               	goto	l12235
 14825  115D                     u14170:	
 14826  115D                     l12233:	
 14827                           
 14828                           ;controller.c: 448:             animationModeSelected++;
 14829  115D  3001               	movlw	1
 14830  115E  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 14831  115F  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 14832  1160  07E6               	addwf	_animationModeSelected^(0+256),f
 14833                           
 14834                           ;controller.c: 449:         } else {
 14835  1161  29FB               	goto	l12285
 14836  1162                     l12235:	
 14837                           
 14838                           ;controller.c: 450:             animationModeSelected = 10;
 14839  1162  300A               	movlw	10
 14840  1163  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 14841  1164  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 14842  1165  00E6               	movwf	_animationModeSelected^(0+256)
 14843  1166  29FB               	goto	l12285
 14844  1167                     l12237:	
 14845  1167  0874               	movf	_downState,w
 14846  1168  1903               	btfsc	3,2
 14847  1169  296B               	goto	u14181
 14848  116A  296C               	goto	u14180
 14849  116B                     u14181:	
 14850  116B  2984               	goto	l12245
 14851  116C                     u14180:	
 14852  116C                     l12239:	
 14853  116C  0872               	movf	_currentMenu,w
 14854  116D  0086               	movwf	6
 14855  116E  0873               	movf	_currentMenu+1,w
 14856  116F  0087               	movwf	7
 14857  1170  3148               	addfsr 1,8
 14858  1171  3012               	movlw	18
 14859  1172  0601               	xorwf	1,w
 14860  1173  1D03               	btfss	3,2
 14861  1174  2976               	goto	u14191
 14862  1175  2977               	goto	u14190
 14863  1176                     u14191:	
 14864  1176  2984               	goto	l12245
 14865  1177                     u14190:	
 14866  1177                     l12241:	
 14867                           
 14868                           ;controller.c: 453:         if (animationModeSelected > 1) {
 14869  1177  3002               	movlw	2
 14870  1178  0142               	movlb	2	; select bank2
 14871  1179  0266               	subwf	_animationModeSelected^(0+256),w
 14872  117A  1C03               	skipc
 14873  117B  297D               	goto	u14201
 14874  117C  297E               	goto	u14200
 14875  117D                     u14201:	
 14876  117D  2981               	goto	l1182
 14877  117E                     u14200:	
 14878  117E                     l12243:	
 14879                           
 14880                           ;controller.c: 454:             animationModeSelected--;
 14881  117E  3001               	movlw	1
 14882  117F  02E6               	subwf	_animationModeSelected^(0+256),f
 14883                           
 14884                           ;controller.c: 455:         } else {
 14885  1180  29FB               	goto	l12285
 14886  1181                     l1182:	
 14887                           
 14888                           ;controller.c: 456:             animationModeSelected = 1;
 14889  1181  01E6               	clrf	_animationModeSelected^(0+256)
 14890  1182  0AE6               	incf	_animationModeSelected^(0+256),f
 14891  1183  29FB               	goto	l12285
 14892  1184                     l12245:	
 14893  1184  0875               	movf	_upState,w
 14894  1185  1903               	btfsc	3,2
 14895  1186  2988               	goto	u14211
 14896  1187  2989               	goto	u14210
 14897  1188                     u14211:	
 14898  1188  29A5               	goto	l12255
 14899  1189                     u14210:	
 14900  1189                     l12247:	
 14901  1189  0872               	movf	_currentMenu,w
 14902  118A  0086               	movwf	6
 14903  118B  0873               	movf	_currentMenu+1,w
 14904  118C  0087               	movwf	7
 14905  118D  3148               	addfsr 1,8
 14906  118E  3011               	movlw	17
 14907  118F  0601               	xorwf	1,w
 14908  1190  1D03               	btfss	3,2
 14909  1191  2993               	goto	u14221
 14910  1192  2994               	goto	u14220
 14911  1193                     u14221:	
 14912  1193  29A5               	goto	l12255
 14913  1194                     u14220:	
 14914  1194                     l12249:	
 14915                           
 14916                           ;controller.c: 459:         if (animationBrightness < 10) {
 14917  1194  300A               	movlw	10
 14918  1195  0142               	movlb	2	; select bank2
 14919  1196  0265               	subwf	_animationBrightness^(0+256),w
 14920  1197  1803               	skipnc
 14921  1198  299A               	goto	u14231
 14922  1199  299B               	goto	u14230
 14923  119A                     u14231:	
 14924  119A  29A0               	goto	l12253
 14925  119B                     u14230:	
 14926  119B                     l12251:	
 14927                           
 14928                           ;controller.c: 460:             animationBrightness++;
 14929  119B  3001               	movlw	1
 14930  119C  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 14931  119D  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 14932  119E  07E5               	addwf	_animationBrightness^(0+256),f
 14933                           
 14934                           ;controller.c: 461:         } else {
 14935  119F  29FB               	goto	l12285
 14936  11A0                     l12253:	
 14937                           
 14938                           ;controller.c: 462:             animationBrightness = 10;
 14939  11A0  300A               	movlw	10
 14940  11A1  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 14941  11A2  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 14942  11A3  00E5               	movwf	_animationBrightness^(0+256)
 14943  11A4  29FB               	goto	l12285
 14944  11A5                     l12255:	
 14945  11A5  0874               	movf	_downState,w
 14946  11A6  1903               	btfsc	3,2
 14947  11A7  29A9               	goto	u14241
 14948  11A8  29AA               	goto	u14240
 14949  11A9                     u14241:	
 14950  11A9  29C0               	goto	l12265
 14951  11AA                     u14240:	
 14952  11AA                     l12257:	
 14953  11AA  0872               	movf	_currentMenu,w
 14954  11AB  0086               	movwf	6
 14955  11AC  0873               	movf	_currentMenu+1,w
 14956  11AD  0087               	movwf	7
 14957  11AE  3148               	addfsr 1,8
 14958  11AF  3011               	movlw	17
 14959  11B0  0601               	xorwf	1,w
 14960  11B1  1D03               	btfss	3,2
 14961  11B2  29B4               	goto	u14251
 14962  11B3  29B5               	goto	u14250
 14963  11B4                     u14251:	
 14964  11B4  29C0               	goto	l12265
 14965  11B5                     u14250:	
 14966  11B5                     l12259:	
 14967                           
 14968                           ;controller.c: 465:         if (animationBrightness > 0) {
 14969  11B5  0142               	movlb	2	; select bank2
 14970  11B6  0865               	movf	_animationBrightness^(0+256),w
 14971  11B7  1903               	btfsc	3,2
 14972  11B8  29BA               	goto	u14261
 14973  11B9  29BB               	goto	u14260
 14974  11BA                     u14261:	
 14975  11BA  29BE               	goto	l12263
 14976  11BB                     u14260:	
 14977  11BB                     l12261:	
 14978                           
 14979                           ;controller.c: 466:             animationBrightness--;
 14980  11BB  3001               	movlw	1
 14981  11BC  02E5               	subwf	_animationBrightness^(0+256),f
 14982                           
 14983                           ;controller.c: 467:         } else {
 14984  11BD  29FB               	goto	l12285
 14985  11BE                     l12263:	
 14986                           
 14987                           ;controller.c: 468:             animationBrightness = 0;
 14988  11BE  01E5               	clrf	_animationBrightness^(0+256)
 14989  11BF  29FB               	goto	l12285
 14990  11C0                     l12265:	
 14991  11C0  0875               	movf	_upState,w
 14992  11C1  1903               	btfsc	3,2
 14993  11C2  29C4               	goto	u14271
 14994  11C3  29C5               	goto	u14270
 14995  11C4                     u14271:	
 14996  11C4  29E1               	goto	l12275
 14997  11C5                     u14270:	
 14998  11C5                     l12267:	
 14999  11C5  0872               	movf	_currentMenu,w
 15000  11C6  0086               	movwf	6
 15001  11C7  0873               	movf	_currentMenu+1,w
 15002  11C8  0087               	movwf	7
 15003  11C9  3148               	addfsr 1,8
 15004  11CA  3013               	movlw	19
 15005  11CB  0601               	xorwf	1,w
 15006  11CC  1D03               	btfss	3,2
 15007  11CD  29CF               	goto	u14281
 15008  11CE  29D0               	goto	u14280
 15009  11CF                     u14281:	
 15010  11CF  29E1               	goto	l12275
 15011  11D0                     u14280:	
 15012  11D0                     l12269:	
 15013                           
 15014                           ;controller.c: 471:         if (animationSpeed < 10) {
 15015  11D0  300A               	movlw	10
 15016  11D1  0142               	movlb	2	; select bank2
 15017  11D2  0264               	subwf	_animationSpeed^(0+256),w
 15018  11D3  1803               	skipnc
 15019  11D4  29D6               	goto	u14291
 15020  11D5  29D7               	goto	u14290
 15021  11D6                     u14291:	
 15022  11D6  29DC               	goto	l12273
 15023  11D7                     u14290:	
 15024  11D7                     l12271:	
 15025                           
 15026                           ;controller.c: 472:             animationSpeed++;
 15027  11D7  3001               	movlw	1
 15028  11D8  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 15029  11D9  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 15030  11DA  07E4               	addwf	_animationSpeed^(0+256),f
 15031                           
 15032                           ;controller.c: 473:         } else {
 15033  11DB  29FB               	goto	l12285
 15034  11DC                     l12273:	
 15035                           
 15036                           ;controller.c: 474:             animationSpeed = 10;
 15037  11DC  300A               	movlw	10
 15038  11DD  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 15039  11DE  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 15040  11DF  00E4               	movwf	_animationSpeed^(0+256)
 15041  11E0  29FB               	goto	l12285
 15042  11E1                     l12275:	
 15043  11E1  0874               	movf	_downState,w
 15044  11E2  1903               	btfsc	3,2
 15045  11E3  29E5               	goto	u14301
 15046  11E4  29E6               	goto	u14300
 15047  11E5                     u14301:	
 15048  11E5  29FB               	goto	l12285
 15049  11E6                     u14300:	
 15050  11E6                     l12277:	
 15051  11E6  0872               	movf	_currentMenu,w
 15052  11E7  0086               	movwf	6
 15053  11E8  0873               	movf	_currentMenu+1,w
 15054  11E9  0087               	movwf	7
 15055  11EA  3148               	addfsr 1,8
 15056  11EB  3013               	movlw	19
 15057  11EC  0601               	xorwf	1,w
 15058  11ED  1D03               	btfss	3,2
 15059  11EE  29F0               	goto	u14311
 15060  11EF  29F1               	goto	u14310
 15061  11F0                     u14311:	
 15062  11F0  29FB               	goto	l12285
 15063  11F1                     u14310:	
 15064  11F1                     l12279:	
 15065                           
 15066                           ;controller.c: 477:         if (animationSpeed > 0) {
 15067  11F1  0142               	movlb	2	; select bank2
 15068  11F2  0864               	movf	_animationSpeed^(0+256),w
 15069  11F3  1903               	btfsc	3,2
 15070  11F4  29F6               	goto	u14321
 15071  11F5  29F7               	goto	u14320
 15072  11F6                     u14321:	
 15073  11F6  29FA               	goto	l12283
 15074  11F7                     u14320:	
 15075  11F7                     l12281:	
 15076                           
 15077                           ;controller.c: 478:             animationSpeed--;
 15078  11F7  3001               	movlw	1
 15079  11F8  02E4               	subwf	_animationSpeed^(0+256),f
 15080                           
 15081                           ;controller.c: 479:         } else {
 15082  11F9  29FB               	goto	l12285
 15083  11FA                     l12283:	
 15084                           
 15085                           ;controller.c: 480:             animationSpeed = 0;
 15086  11FA  01E4               	clrf	_animationSpeed^(0+256)
 15087  11FB                     l12285:	
 15088                           
 15089                           ;controller.c: 484:     if(currentMenu->name == A_SELECTION){
 15090  11FB  0872               	movf	_currentMenu,w
 15091  11FC  0086               	movwf	6
 15092  11FD  0873               	movf	_currentMenu+1,w
 15093  11FE  0087               	movwf	7
 15094  11FF  3148               	addfsr 1,8
 15095  1200  3012               	movlw	18
 15096  1201  0601               	xorwf	1,w
 15097  1202  1D03               	btfss	3,2
 15098  1203  2A05               	goto	u14331
 15099  1204  2A06               	goto	u14330
 15100  1205                     u14331:	
 15101  1205  2A14               	goto	l12289
 15102  1206                     u14330:	
 15103  1206                     l12287:	
 15104                           
 15105                           ;controller.c: 485:         printf("An\r");
 15106  1206  3092               	movlw	low (STR_17| (0+32768))
 15107  1207  0141               	movlb	1	; select bank1
 15108  1208  00A0               	movwf	printf@fmt^(0+128)
 15109  1209  30B0               	movlw	high (STR_17| (0+32768))
 15110  120A  00A1               	movwf	(printf@fmt^(0+128)+1)
 15111  120B  31AE  26AF  3191   	fcall	_printf
 15112                           
 15113                           ;controller.c: 486:         TM1650_fastPrintNum_2digit(animationModeSelected);
 15114  120E  0142               	movlb	2	; select bank2
 15115  120F  0866               	movf	_animationModeSelected^(0+256),w
 15116  1210  31A6  2690  3191   	fcall	_TM1650_fastPrintNum_2digit
 15117                           
 15118                           ;controller.c: 487:     } else if(currentMenu->name == A_BRIGHTNESS){
 15119  1213  2A45               	goto	l1201
 15120  1214                     l12289:	
 15121  1214  0872               	movf	_currentMenu,w
 15122  1215  0086               	movwf	6
 15123  1216  0873               	movf	_currentMenu+1,w
 15124  1217  0087               	movwf	7
 15125  1218  3148               	addfsr 1,8
 15126  1219  3011               	movlw	17
 15127  121A  0601               	xorwf	1,w
 15128  121B  1D03               	btfss	3,2
 15129  121C  2A1E               	goto	u14341
 15130  121D  2A1F               	goto	u14340
 15131  121E                     u14341:	
 15132  121E  2A2D               	goto	l12293
 15133  121F                     u14340:	
 15134  121F                     l12291:	
 15135                           
 15136                           ;controller.c: 488:         printf("Br\r");
 15137  121F  3096               	movlw	low (STR_18| (0+32768))
 15138  1220  0141               	movlb	1	; select bank1
 15139  1221  00A0               	movwf	printf@fmt^(0+128)
 15140  1222  30B0               	movlw	high (STR_18| (0+32768))
 15141  1223  00A1               	movwf	(printf@fmt^(0+128)+1)
 15142  1224  31AE  26AF  3191   	fcall	_printf
 15143                           
 15144                           ;controller.c: 489:         TM1650_fastPrintNum_2digit(animationBrightness);
 15145  1227  0142               	movlb	2	; select bank2
 15146  1228  0865               	movf	_animationBrightness^(0+256),w
 15147  1229  31A6  2690  3191   	fcall	_TM1650_fastPrintNum_2digit
 15148                           
 15149                           ;controller.c: 490:     } else if(currentMenu->name == A_SPEED){
 15150  122C  2A45               	goto	l1201
 15151  122D                     l12293:	
 15152  122D  0872               	movf	_currentMenu,w
 15153  122E  0086               	movwf	6
 15154  122F  0873               	movf	_currentMenu+1,w
 15155  1230  0087               	movwf	7
 15156  1231  3148               	addfsr 1,8
 15157  1232  3013               	movlw	19
 15158  1233  0601               	xorwf	1,w
 15159  1234  1D03               	btfss	3,2
 15160  1235  2A37               	goto	u14351
 15161  1236  2A38               	goto	u14350
 15162  1237                     u14351:	
 15163  1237  2A45               	goto	l1201
 15164  1238                     u14350:	
 15165  1238                     l12295:	
 15166                           
 15167                           ;controller.c: 491:         printf("SP\r");
 15168  1238  308E               	movlw	low (STR_19| (0+32768))
 15169  1239  0141               	movlb	1	; select bank1
 15170  123A  00A0               	movwf	printf@fmt^(0+128)
 15171  123B  30B0               	movlw	high (STR_19| (0+32768))
 15172  123C  00A1               	movwf	(printf@fmt^(0+128)+1)
 15173  123D  31AE  26AF  3191   	fcall	_printf
 15174                           
 15175                           ;controller.c: 492:         TM1650_fastPrintNum_2digit(animationSpeed);
 15176  1240  0142               	movlb	2	; select bank2
 15177  1241  0864               	movf	_animationSpeed^(0+256),w
 15178  1242  31A6  2690  3191   	fcall	_TM1650_fastPrintNum_2digit
 15179  1245                     l1201:	
 15180                           
 15181                           ;controller.c: 495:     LED_task_ANIMATION(animationModeSelected, animationBrightness, a
      +                          nimationSpeed);
 15182  1245  0142               	movlb	2	; select bank2
 15183  1246  0865               	movf	_animationBrightness^(0+256),w
 15184  1247  00E9               	movwf	??_CONTROL_ANIMATION^(0+256)
 15185  1248  0869               	movf	??_CONTROL_ANIMATION^(0+256),w
 15186  1249  0141               	movlb	1	; select bank1
 15187  124A  00E4               	movwf	LED_task_ANIMATION@brightness^(0+128)
 15188  124B  0142               	movlb	2	; select bank2
 15189  124C  0864               	movf	_animationSpeed^(0+256),w
 15190  124D  00EA               	movwf	(??_CONTROL_ANIMATION+1)^(0+256)
 15191  124E  086A               	movf	(??_CONTROL_ANIMATION+1)^(0+256),w
 15192  124F  0141               	movlb	1	; select bank1
 15193  1250  00E5               	movwf	LED_task_ANIMATION@speed^(0+128)
 15194  1251  0142               	movlb	2	; select bank2
 15195  1252  0866               	movf	_animationModeSelected^(0+256),w
 15196  1253  319F  2713  3191   	fcall	_LED_task_ANIMATION
 15197  1256                     l1205:	
 15198  1256  0008               	return
 15199  1257                     __end_of_CONTROL_ANIMATION:	
 15200                           
 15201                           	psect	text26
 15202  1E31                     __ptext26:	
 15203 ;; *************** function _CONTROL_DMX *****************
 15204 ;; Defined at:
 15205 ;;		line 305 in file "controller.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;		None
 15208 ;; Auto vars:     Size  Location     Type
 15209 ;;		None
 15210 ;; Return value:  Size  Location     Type
 15211 ;;                  1    wreg      void 
 15212 ;; Registers used:
 15213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15214 ;; Tracked objects:
 15215 ;;		On entry : 0/0
 15216 ;;		On exit  : 0/0
 15217 ;;		Unchanged: 0/0
 15218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15221 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15222 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15223 ;;Total ram usage:        2 bytes
 15224 ;; Hardware stack levels used:    1
 15225 ;; Hardware stack levels required when called:   18
 15226 ;; This function calls:
 15227 ;;		_BUTTONS_isHeld
 15228 ;;		_CLOCK_getTime
 15229 ;;		_LED_task_DMX
 15230 ;;		_address_dec
 15231 ;;		_address_inc
 15232 ;; This function is called by:
 15233 ;;		_CONTROLLER_init
 15234 ;;		_CONTROLLER_task
 15235 ;; This function uses a non-reentrant model
 15236 ;;
 15237                           
 15238                           
 15239                           ;psect for function _CONTROL_DMX
 15240  1E31                     _CONTROL_DMX:	
 15241  1E31                     l12073:	
 15242                           ;incstack = 0
 15243 ;; hardware stack exceeded
 15244                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15245                           
 15246                           
 15247                           ;controller.c: 307:     LED_task_DMX();
 15248  1E31  31A6  262C  319E   	fcall	_LED_task_DMX
 15249                           
 15250                           ;controller.c: 309:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 15251  1E34  0142               	movlb	2	; select bank2
 15252  1E35  084F               	movf	_up^(0+256),w
 15253  1E36  3187  27EF  319E   	fcall	_BUTTONS_isHeld
 15254  1E39  3A00               	xorlw	0
 15255  1E3A  1903               	skipnz
 15256  1E3B  2E3D               	goto	u13861
 15257  1E3C  2E3E               	goto	u13860
 15258  1E3D                     u13861:	
 15259  1E3D  2E7D               	goto	l12085
 15260  1E3E                     u13860:	
 15261  1E3E                     l12075:	
 15262  1E3E  31AD  2520  319E   	fcall	_CLOCK_getTime
 15263  1E41  0142               	movlb	2	; select bank2
 15264  1E42  0835               	movf	_lastIncTime^(0+256),w
 15265  1E43  0140               	movlb	0	; select bank0
 15266  1E44  0220               	subwf	?_CLOCK_getTime,w
 15267  1E45  0141               	movlb	1	; select bank1
 15268  1E46  00E2               	movwf	??_CONTROL_DMX^(0+128)
 15269  1E47  0142               	movlb	2	; select bank2
 15270  1E48  0836               	movf	(_lastIncTime+1)^(0+256),w
 15271  1E49  0140               	movlb	0	; select bank0
 15272  1E4A  3B21               	subwfb	?_CLOCK_getTime+1,w
 15273  1E4B  0141               	movlb	1	; select bank1
 15274  1E4C  00E3               	movwf	(??_CONTROL_DMX+1)^(0+128)
 15275  1E4D  0863               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15276  1E4E  0142               	movlb	2	; select bank2
 15277  1E4F  0261               	subwf	(_incInterval+1)^(0+256),w
 15278  1E50  1D03               	skipz
 15279  1E51  2E56               	goto	u13875
 15280  1E52  0141               	movlb	1	; select bank1
 15281  1E53  0862               	movf	??_CONTROL_DMX^(0+128),w
 15282  1E54  0142               	movlb	2	; select bank2
 15283  1E55  0260               	subwf	_incInterval^(0+256),w
 15284  1E56                     u13875:	
 15285  1E56  1803               	skipnc
 15286  1E57  2E59               	goto	u13871
 15287  1E58  2E5A               	goto	u13870
 15288  1E59                     u13871:	
 15289  1E59  2E7D               	goto	l12085
 15290  1E5A                     u13870:	
 15291  1E5A                     l12077:	
 15292                           
 15293                           ;controller.c: 310:         address_inc();
 15294  1E5A  31A0  20CF  319E   	fcall	_address_inc
 15295  1E5D                     l12079:	
 15296                           
 15297                           ;controller.c: 311:         lastIncTime = CLOCK_getTime();
 15298  1E5D  31AD  2520  319E   	fcall	_CLOCK_getTime
 15299  1E60  0140               	movlb	0	; select bank0
 15300  1E61  0821               	movf	?_CLOCK_getTime+1,w
 15301  1E62  0142               	movlb	2	; select bank2
 15302  1E63  00B6               	movwf	(_lastIncTime+1)^(0+256)
 15303  1E64  0140               	movlb	0	; select bank0
 15304  1E65  0820               	movf	?_CLOCK_getTime,w
 15305  1E66  0142               	movlb	2	; select bank2
 15306  1E67  00B5               	movwf	_lastIncTime^(0+256)
 15307  1E68                     l12081:	
 15308                           
 15309                           ;controller.c: 312:         if(incInterval > 20){
 15310  1E68  0861               	movf	(_incInterval+1)^(0+256),w
 15311  1E69  3A80               	xorlw	128
 15312  1E6A  0141               	movlb	1	; select bank1
 15313  1E6B  00E2               	movwf	??_CONTROL_DMX^(0+128)
 15314  1E6C  3080               	movlw	128
 15315  1E6D  0262               	subwf	??_CONTROL_DMX^(0+128),w
 15316  1E6E  1D03               	skipz
 15317  1E6F  2E73               	goto	u13885
 15318  1E70  3015               	movlw	21
 15319  1E71  0142               	movlb	2	; select bank2
 15320  1E72  0260               	subwf	_incInterval^(0+256),w
 15321  1E73                     u13885:	
 15322  1E73  1C03               	skipc
 15323  1E74  2E76               	goto	u13881
 15324  1E75  2E77               	goto	u13880
 15325  1E76                     u13881:	
 15326  1E76  2F12               	goto	l1133
 15327  1E77                     u13880:	
 15328  1E77                     l12083:	
 15329                           
 15330                           ;controller.c: 313:             incInterval-=1;
 15331  1E77  30FF               	movlw	255
 15332  1E78  0142               	movlb	2	; select bank2
 15333  1E79  07E0               	addwf	_incInterval^(0+256),f
 15334  1E7A  30FF               	movlw	255
 15335  1E7B  3DE1               	addwfc	(_incInterval+1)^(0+256),f
 15336  1E7C  2F12               	goto	l1133
 15337  1E7D                     l12085:	
 15338  1E7D  0142               	movlb	2	; select bank2
 15339  1E7E  084E               	movf	_down^(0+256),w
 15340  1E7F  3187  27EF  319E   	fcall	_BUTTONS_isHeld
 15341  1E82  3A00               	xorlw	0
 15342  1E83  1903               	skipnz
 15343  1E84  2E86               	goto	u13891
 15344  1E85  2E87               	goto	u13890
 15345  1E86                     u13891:	
 15346  1E86  2EC2               	goto	l12097
 15347  1E87                     u13890:	
 15348  1E87                     l12087:	
 15349  1E87  31AD  2520  319E   	fcall	_CLOCK_getTime
 15350  1E8A  0142               	movlb	2	; select bank2
 15351  1E8B  0835               	movf	_lastIncTime^(0+256),w
 15352  1E8C  0140               	movlb	0	; select bank0
 15353  1E8D  0220               	subwf	?_CLOCK_getTime,w
 15354  1E8E  0141               	movlb	1	; select bank1
 15355  1E8F  00E2               	movwf	??_CONTROL_DMX^(0+128)
 15356  1E90  0142               	movlb	2	; select bank2
 15357  1E91  0836               	movf	(_lastIncTime+1)^(0+256),w
 15358  1E92  0140               	movlb	0	; select bank0
 15359  1E93  3B21               	subwfb	?_CLOCK_getTime+1,w
 15360  1E94  0141               	movlb	1	; select bank1
 15361  1E95  00E3               	movwf	(??_CONTROL_DMX+1)^(0+128)
 15362  1E96  0863               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15363  1E97  0142               	movlb	2	; select bank2
 15364  1E98  0261               	subwf	(_incInterval+1)^(0+256),w
 15365  1E99  1D03               	skipz
 15366  1E9A  2E9F               	goto	u13905
 15367  1E9B  0141               	movlb	1	; select bank1
 15368  1E9C  0862               	movf	??_CONTROL_DMX^(0+128),w
 15369  1E9D  0142               	movlb	2	; select bank2
 15370  1E9E  0260               	subwf	_incInterval^(0+256),w
 15371  1E9F                     u13905:	
 15372  1E9F  1803               	skipnc
 15373  1EA0  2EA2               	goto	u13901
 15374  1EA1  2EA3               	goto	u13900
 15375  1EA2                     u13901:	
 15376  1EA2  2EC2               	goto	l12097
 15377  1EA3                     u13900:	
 15378  1EA3                     l12089:	
 15379                           
 15380                           ;controller.c: 316:         address_dec();
 15381  1EA3  31A0  20AB  319E   	fcall	_address_dec
 15382  1EA6                     l12091:	
 15383                           
 15384                           ;controller.c: 317:         lastIncTime = CLOCK_getTime();
 15385  1EA6  31AD  2520  319E   	fcall	_CLOCK_getTime
 15386  1EA9  0140               	movlb	0	; select bank0
 15387  1EAA  0821               	movf	?_CLOCK_getTime+1,w
 15388  1EAB  0142               	movlb	2	; select bank2
 15389  1EAC  00B6               	movwf	(_lastIncTime+1)^(0+256)
 15390  1EAD  0140               	movlb	0	; select bank0
 15391  1EAE  0820               	movf	?_CLOCK_getTime,w
 15392  1EAF  0142               	movlb	2	; select bank2
 15393  1EB0  00B5               	movwf	_lastIncTime^(0+256)
 15394  1EB1                     l12093:	
 15395                           
 15396                           ;controller.c: 318:         if(incInterval > 20){
 15397  1EB1  0861               	movf	(_incInterval+1)^(0+256),w
 15398  1EB2  3A80               	xorlw	128
 15399  1EB3  0141               	movlb	1	; select bank1
 15400  1EB4  00E2               	movwf	??_CONTROL_DMX^(0+128)
 15401  1EB5  3080               	movlw	128
 15402  1EB6  0262               	subwf	??_CONTROL_DMX^(0+128),w
 15403  1EB7  1D03               	skipz
 15404  1EB8  2EBC               	goto	u13915
 15405  1EB9  3015               	movlw	21
 15406  1EBA  0142               	movlb	2	; select bank2
 15407  1EBB  0260               	subwf	_incInterval^(0+256),w
 15408  1EBC                     u13915:	
 15409  1EBC  1C03               	skipc
 15410  1EBD  2EBF               	goto	u13911
 15411  1EBE  2EC0               	goto	u13910
 15412  1EBF                     u13911:	
 15413  1EBF  2F12               	goto	l1133
 15414  1EC0                     u13910:	
 15415  1EC0  2E77               	goto	l12083
 15416  1EC1                     l1122:	
 15417                           ;controller.c: 320:         }
 15418                           
 15419                           
 15420                           ;controller.c: 321:     } else if(BUTTONS_isHeld(enter)){
 15421  1EC1  2F12               	goto	l1133
 15422  1EC2                     l12097:	
 15423  1EC2  0142               	movlb	2	; select bank2
 15424  1EC3  084D               	movf	_enter^(0+256),w
 15425  1EC4  3187  27EF  319E   	fcall	_BUTTONS_isHeld
 15426  1EC7  3A00               	xorlw	0
 15427  1EC8  1903               	skipnz
 15428  1EC9  2ECB               	goto	u13921
 15429  1ECA  2ECC               	goto	u13920
 15430  1ECB                     u13921:	
 15431  1ECB  2ED2               	goto	l12101
 15432  1ECC                     u13920:	
 15433  1ECC                     l12099:	
 15434                           
 15435                           ;controller.c: 322:         address = 1;
 15436  1ECC  3001               	movlw	1
 15437  1ECD  0142               	movlb	2	; select bank2
 15438  1ECE  00E2               	movwf	_address^(0+256)
 15439  1ECF  3000               	movlw	0
 15440  1ED0  00E3               	movwf	(_address^(0+256)+1)
 15441                           
 15442                           ;controller.c: 323:     } else if (upState) {
 15443  1ED1  2F12               	goto	l1133
 15444  1ED2                     l12101:	
 15445  1ED2  0875               	movf	_upState,w
 15446  1ED3  1903               	btfsc	3,2
 15447  1ED4  2ED6               	goto	u13931
 15448  1ED5  2ED7               	goto	u13930
 15449  1ED6                     u13931:	
 15450  1ED6  2EE6               	goto	l12107
 15451  1ED7                     u13930:	
 15452  1ED7                     l12103:	
 15453                           
 15454                           ;controller.c: 324:         address_inc();
 15455  1ED7  31A0  20CF  319E   	fcall	_address_inc
 15456  1EDA                     l12105:	
 15457                           
 15458                           ;controller.c: 325:         lastActiveTime = CLOCK_getTime();
 15459  1EDA  31AD  2520  319E   	fcall	_CLOCK_getTime
 15460  1EDD  0140               	movlb	0	; select bank0
 15461  1EDE  0821               	movf	?_CLOCK_getTime+1,w
 15462  1EDF  0143               	movlb	3	; select bank3
 15463  1EE0  00BD               	movwf	(_lastActiveTime+1)^(0+384)
 15464  1EE1  0140               	movlb	0	; select bank0
 15465  1EE2  0820               	movf	?_CLOCK_getTime,w
 15466  1EE3  0143               	movlb	3	; select bank3
 15467  1EE4  00BC               	movwf	_lastActiveTime^(0+384)
 15468                           
 15469                           ;controller.c: 326:     } else if (downState) {
 15470  1EE5  2F12               	goto	l1133
 15471  1EE6                     l12107:	
 15472  1EE6  0874               	movf	_downState,w
 15473  1EE7  1903               	btfsc	3,2
 15474  1EE8  2EEA               	goto	u13941
 15475  1EE9  2EEB               	goto	u13940
 15476  1EEA                     u13941:	
 15477  1EEA  2EEF               	goto	l12111
 15478  1EEB                     u13940:	
 15479  1EEB                     l12109:	
 15480                           
 15481                           ;controller.c: 327:         address_dec();
 15482  1EEB  31A0  20AB  319E   	fcall	_address_dec
 15483                           
 15484                           ;controller.c: 328:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 15485  1EEE  2F12               	goto	l1133
 15486  1EEF                     l12111:	
 15487  1EEF  0875               	movf	_upState,w
 15488  1EF0  1903               	btfsc	3,2
 15489  1EF1  2EF3               	goto	u13951
 15490  1EF2  2EF4               	goto	u13950
 15491  1EF3                     u13951:	
 15492  1EF3  2EF9               	goto	l12115
 15493  1EF4                     u13950:	
 15494  1EF4                     l12113:	
 15495  1EF4  0874               	movf	_downState,w
 15496  1EF5  1D03               	btfss	3,2
 15497  1EF6  2EF8               	goto	u13961
 15498  1EF7  2EF9               	goto	u13960
 15499  1EF8                     u13961:	
 15500  1EF8  2EC1               	goto	l1122
 15501  1EF9                     u13960:	
 15502  1EF9                     l12115:	
 15503  1EF9  0142               	movlb	2	; select bank2
 15504  1EFA  084E               	movf	_down^(0+256),w
 15505  1EFB  3187  27EF  319E   	fcall	_BUTTONS_isHeld
 15506  1EFE  3A00               	xorlw	0
 15507  1EFF  1D03               	skipz
 15508  1F00  2F02               	goto	u13971
 15509  1F01  2F03               	goto	u13970
 15510  1F02                     u13971:	
 15511  1F02  2EC1               	goto	l1122
 15512  1F03                     u13970:	
 15513  1F03                     l12117:	
 15514  1F03  0142               	movlb	2	; select bank2
 15515  1F04  084F               	movf	_up^(0+256),w
 15516  1F05  3187  27EF  319E   	fcall	_BUTTONS_isHeld
 15517  1F08  3A00               	xorlw	0
 15518  1F09  1D03               	skipz
 15519  1F0A  2F0C               	goto	u13981
 15520  1F0B  2F0D               	goto	u13980
 15521  1F0C                     u13981:	
 15522  1F0C  2EC1               	goto	l1122
 15523  1F0D                     u13980:	
 15524  1F0D                     l12119:	
 15525                           
 15526                           ;controller.c: 329:         incInterval = 100;
 15527  1F0D  3064               	movlw	100
 15528  1F0E  0142               	movlb	2	; select bank2
 15529  1F0F  00E0               	movwf	_incInterval^(0+256)
 15530  1F10  3000               	movlw	0
 15531  1F11  00E1               	movwf	(_incInterval^(0+256)+1)
 15532  1F12                     l1133:	
 15533  1F12  0008               	return
 15534  1F13                     __end_of_CONTROL_DMX:	
 15535                           
 15536                           	psect	text27
 15537  136D                     __ptext27:	
 15538 ;; *************** function _CONTROL_MANUAL *****************
 15539 ;; Defined at:
 15540 ;;		line 392 in file "controller.c"
 15541 ;; Parameters:    Size  Location     Type
 15542 ;;		None
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;		None
 15545 ;; Return value:  Size  Location     Type
 15546 ;;                  1    wreg      void 
 15547 ;; Registers used:
 15548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15549 ;; Tracked objects:
 15550 ;;		On entry : 0/0
 15551 ;;		On exit  : 0/0
 15552 ;;		Unchanged: 0/0
 15553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15556 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15557 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15558 ;;Total ram usage:        2 bytes
 15559 ;; Hardware stack levels used:    1
 15560 ;; Hardware stack levels required when called:   17
 15561 ;; This function calls:
 15562 ;;		_BUTTONS_isHeld
 15563 ;;		_CLOCK_getTime
 15564 ;;		_LED_task_MANUAL
 15565 ;;		_TM1650_fastPrintNum_3digit
 15566 ;;		_colorDec
 15567 ;;		_colorInc
 15568 ;;		_printf
 15569 ;; This function is called by:
 15570 ;;		_CONTROLLER_init
 15571 ;;		_CONTROLLER_task
 15572 ;; This function uses a non-reentrant model
 15573 ;;
 15574                           
 15575                           
 15576                           ;psect for function _CONTROL_MANUAL
 15577  136D                     _CONTROL_MANUAL:	
 15578  136D                     l12165:	
 15579                           ;incstack = 0
 15580 ;; hardware stack exceeded
 15581                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15582                           
 15583                           
 15584                           ;controller.c: 394:        LED_task_MANUAL();
 15585  136D  31AE  2631  3193   	fcall	_LED_task_MANUAL
 15586                           
 15587                           ;controller.c: 396:        switch(currentMenu->name){
 15588  1370  2BCD               	goto	l12177
 15589  1371                     l12167:	
 15590                           
 15591                           ;controller.c: 399:             printf("r\r");
 15592  1371  3097               	movlw	low ((STR_18+1)| (0+32768))
 15593  1372  00A0               	movwf	printf@fmt^(0+128)
 15594  1373  30B0               	movlw	high ((STR_18+1)| (0+32768))
 15595  1374  00A1               	movwf	(printf@fmt^(0+128)+1)
 15596  1375  31AE  26AF  3193   	fcall	_printf
 15597                           
 15598                           ;controller.c: 400:             TM1650_fastPrintNum_3digit(manualColor.red);
 15599  1378  0142               	movlb	2	; select bank2
 15600  1379  0826               	movf	(_manualColor^(0+256)+1),w
 15601  137A  0141               	movlb	1	; select bank1
 15602  137B  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15603  137C  01DA               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 15604  137D  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15605  137E  0140               	movlb	0	; select bank0
 15606  137F  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15607  1380  0141               	movlb	1	; select bank1
 15608  1381  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15609  1382  0140               	movlb	0	; select bank0
 15610  1383  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15611  1384  3199  21DD  3193   	fcall	_TM1650_fastPrintNum_3digit
 15612                           
 15613                           ;controller.c: 401:             break;
 15614  1387  2BE9               	goto	l12179
 15615  1388                     l12169:	
 15616                           
 15617                           ;controller.c: 404:             printf("g\r");
 15618  1388  30A0               	movlw	low (STR_14| (0+32768))
 15619  1389  00A0               	movwf	printf@fmt^(0+128)
 15620  138A  30B0               	movlw	high (STR_14| (0+32768))
 15621  138B  00A1               	movwf	(printf@fmt^(0+128)+1)
 15622  138C  31AE  26AF  3193   	fcall	_printf
 15623                           
 15624                           ;controller.c: 405:             TM1650_fastPrintNum_3digit(manualColor.green);
 15625  138F  0142               	movlb	2	; select bank2
 15626  1390  0827               	movf	(_manualColor^(0+256)+2),w
 15627  1391  0141               	movlb	1	; select bank1
 15628  1392  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15629  1393  01DA               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 15630  1394  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15631  1395  0140               	movlb	0	; select bank0
 15632  1396  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15633  1397  0141               	movlb	1	; select bank1
 15634  1398  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15635  1399  0140               	movlb	0	; select bank0
 15636  139A  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15637  139B  3199  21DD  3193   	fcall	_TM1650_fastPrintNum_3digit
 15638                           
 15639                           ;controller.c: 406:             break;
 15640  139E  2BE9               	goto	l12179
 15641  139F                     l12171:	
 15642                           
 15643                           ;controller.c: 409:             printf("b\r");
 15644  139F  309D               	movlw	low (STR_15| (0+32768))
 15645  13A0  00A0               	movwf	printf@fmt^(0+128)
 15646  13A1  30B0               	movlw	high (STR_15| (0+32768))
 15647  13A2  00A1               	movwf	(printf@fmt^(0+128)+1)
 15648  13A3  31AE  26AF  3193   	fcall	_printf
 15649                           
 15650                           ;controller.c: 410:             TM1650_fastPrintNum_3digit(manualColor.blue);
 15651  13A6  0142               	movlb	2	; select bank2
 15652  13A7  0828               	movf	(_manualColor^(0+256)+3),w
 15653  13A8  0141               	movlb	1	; select bank1
 15654  13A9  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15655  13AA  01DA               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 15656  13AB  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15657  13AC  0140               	movlb	0	; select bank0
 15658  13AD  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15659  13AE  0141               	movlb	1	; select bank1
 15660  13AF  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15661  13B0  0140               	movlb	0	; select bank0
 15662  13B1  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15663  13B2  3199  21DD  3193   	fcall	_TM1650_fastPrintNum_3digit
 15664                           
 15665                           ;controller.c: 411:             break;
 15666  13B5  2BE9               	goto	l12179
 15667  13B6                     l12173:	
 15668                           
 15669                           ;controller.c: 414:             printf("h\r");
 15670  13B6  30A3               	movlw	low (STR_16| (0+32768))
 15671  13B7  00A0               	movwf	printf@fmt^(0+128)
 15672  13B8  30B0               	movlw	high (STR_16| (0+32768))
 15673  13B9  00A1               	movwf	(printf@fmt^(0+128)+1)
 15674  13BA  31AE  26AF  3193   	fcall	_printf
 15675                           
 15676                           ;controller.c: 415:             TM1650_fastPrintNum_3digit(manualColor.white);
 15677  13BD  0142               	movlb	2	; select bank2
 15678  13BE  0825               	movf	_manualColor^(0+256),w
 15679  13BF  0141               	movlb	1	; select bank1
 15680  13C0  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15681  13C1  01DA               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 15682  13C2  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15683  13C3  0140               	movlb	0	; select bank0
 15684  13C4  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15685  13C5  0141               	movlb	1	; select bank1
 15686  13C6  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15687  13C7  0140               	movlb	0	; select bank0
 15688  13C8  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15689  13C9  3199  21DD  3193   	fcall	_TM1650_fastPrintNum_3digit
 15690                           
 15691                           ;controller.c: 416:             break;
 15692  13CC  2BE9               	goto	l12179
 15693  13CD                     l12177:	
 15694  13CD  0872               	movf	_currentMenu,w
 15695  13CE  0086               	movwf	6
 15696  13CF  0873               	movf	_currentMenu+1,w
 15697  13D0  0087               	movwf	7
 15698  13D1  3148               	addfsr 1,8
 15699  13D2  0801               	movf	1,w
 15700  13D3  0141               	movlb	1	; select bank1
 15701  13D4  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15702  13D5  01DA               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 15703                           
 15704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15705                           ; Switch size 1, requested type "simple"
 15706                           ; Number of cases is 1, Range of values is 0 to 0
 15707                           ; switch strategies available:
 15708                           ; Name         Instructions Cycles
 15709                           ; simple_byte            4     3 (average)
 15710                           ; direct_byte            8     6 (fixed)
 15711                           ; jumptable            260     6 (fixed)
 15712                           ;	Chosen strategy is simple_byte
 15713  13D6  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15714  13D7  3A00               	xorlw	0	; case 0
 15715  13D8  1903               	skipnz
 15716  13D9  2BDB               	goto	l13233
 15717  13DA  2BE9               	goto	l12179
 15718  13DB                     l13233:	
 15719                           
 15720                           ; Switch size 1, requested type "simple"
 15721                           ; Number of cases is 4, Range of values is 13 to 16
 15722                           ; switch strategies available:
 15723                           ; Name         Instructions Cycles
 15724                           ; simple_byte           13     7 (average)
 15725                           ; direct_byte           17     9 (fixed)
 15726                           ; jumptable            263     9 (fixed)
 15727                           ;	Chosen strategy is simple_byte
 15728  13DB  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15729  13DC  3A0D               	xorlw	13	; case 13
 15730  13DD  1903               	skipnz
 15731  13DE  2B71               	goto	l12167
 15732  13DF  3A03               	xorlw	3	; case 14
 15733  13E0  1903               	skipnz
 15734  13E1  2B88               	goto	l12169
 15735  13E2  3A01               	xorlw	1	; case 15
 15736  13E3  1903               	skipnz
 15737  13E4  2B9F               	goto	l12171
 15738  13E5  3A1F               	xorlw	31	; case 16
 15739  13E6  1903               	skipnz
 15740  13E7  2BB6               	goto	l12173
 15741  13E8  2BE9               	goto	l12179
 15742  13E9                     l12179:	
 15743                           
 15744                           ;controller.c: 420:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 15745  13E9  0142               	movlb	2	; select bank2
 15746  13EA  084F               	movf	_up^(0+256),w
 15747  13EB  3187  27EF  3193   	fcall	_BUTTONS_isHeld
 15748  13EE  3A00               	xorlw	0
 15749  13EF  1903               	skipnz
 15750  13F0  2BF2               	goto	u14031
 15751  13F1  2BF3               	goto	u14030
 15752  13F2                     u14031:	
 15753  13F2  2C32               	goto	l12191
 15754  13F3                     u14030:	
 15755  13F3                     l12181:	
 15756  13F3  31AD  2520  3193   	fcall	_CLOCK_getTime
 15757  13F6  0142               	movlb	2	; select bank2
 15758  13F7  0835               	movf	_lastIncTime^(0+256),w
 15759  13F8  0140               	movlb	0	; select bank0
 15760  13F9  0220               	subwf	?_CLOCK_getTime,w
 15761  13FA  0141               	movlb	1	; select bank1
 15762  13FB  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15763  13FC  0142               	movlb	2	; select bank2
 15764  13FD  0836               	movf	(_lastIncTime+1)^(0+256),w
 15765  13FE  0140               	movlb	0	; select bank0
 15766  13FF  3B21               	subwfb	?_CLOCK_getTime+1,w
 15767  1400  0141               	movlb	1	; select bank1
 15768  1401  00DA               	movwf	(??_CONTROL_MANUAL+1)^(0+128)
 15769  1402  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15770  1403  0142               	movlb	2	; select bank2
 15771  1404  0261               	subwf	(_incInterval+1)^(0+256),w
 15772  1405  1D03               	skipz
 15773  1406  2C0B               	goto	u14045
 15774  1407  0141               	movlb	1	; select bank1
 15775  1408  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15776  1409  0142               	movlb	2	; select bank2
 15777  140A  0260               	subwf	_incInterval^(0+256),w
 15778  140B                     u14045:	
 15779  140B  1803               	skipnc
 15780  140C  2C0E               	goto	u14041
 15781  140D  2C0F               	goto	u14040
 15782  140E                     u14041:	
 15783  140E  2C32               	goto	l12191
 15784  140F                     u14040:	
 15785  140F                     l12183:	
 15786                           
 15787                           ;controller.c: 421:         colorInc();
 15788  140F  31A4  246F  3193   	fcall	_colorInc
 15789  1412                     l12185:	
 15790                           
 15791                           ;controller.c: 422:         lastIncTime = CLOCK_getTime();
 15792  1412  31AD  2520  3193   	fcall	_CLOCK_getTime
 15793  1415  0140               	movlb	0	; select bank0
 15794  1416  0821               	movf	?_CLOCK_getTime+1,w
 15795  1417  0142               	movlb	2	; select bank2
 15796  1418  00B6               	movwf	(_lastIncTime+1)^(0+256)
 15797  1419  0140               	movlb	0	; select bank0
 15798  141A  0820               	movf	?_CLOCK_getTime,w
 15799  141B  0142               	movlb	2	; select bank2
 15800  141C  00B5               	movwf	_lastIncTime^(0+256)
 15801  141D                     l12187:	
 15802                           
 15803                           ;controller.c: 423:         if(incInterval > 10){
 15804  141D  0861               	movf	(_incInterval+1)^(0+256),w
 15805  141E  3A80               	xorlw	128
 15806  141F  0141               	movlb	1	; select bank1
 15807  1420  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15808  1421  3080               	movlw	128
 15809  1422  0259               	subwf	??_CONTROL_MANUAL^(0+128),w
 15810  1423  1D03               	skipz
 15811  1424  2C28               	goto	u14055
 15812  1425  300B               	movlw	11
 15813  1426  0142               	movlb	2	; select bank2
 15814  1427  0260               	subwf	_incInterval^(0+256),w
 15815  1428                     u14055:	
 15816  1428  1C03               	skipc
 15817  1429  2C2B               	goto	u14051
 15818  142A  2C2C               	goto	u14050
 15819  142B                     u14051:	
 15820  142B  2CAB               	goto	l1174
 15821  142C                     u14050:	
 15822  142C                     l12189:	
 15823                           
 15824                           ;controller.c: 424:             incInterval-=1;
 15825  142C  30FF               	movlw	255
 15826  142D  0142               	movlb	2	; select bank2
 15827  142E  07E0               	addwf	_incInterval^(0+256),f
 15828  142F  30FF               	movlw	255
 15829  1430  3DE1               	addwfc	(_incInterval+1)^(0+256),f
 15830  1431  2CAB               	goto	l1174
 15831  1432                     l12191:	
 15832  1432  0142               	movlb	2	; select bank2
 15833  1433  084E               	movf	_down^(0+256),w
 15834  1434  3187  27EF  3193   	fcall	_BUTTONS_isHeld
 15835  1437  3A00               	xorlw	0
 15836  1438  1903               	skipnz
 15837  1439  2C3B               	goto	u14061
 15838  143A  2C3C               	goto	u14060
 15839  143B                     u14061:	
 15840  143B  2C76               	goto	l12203
 15841  143C                     u14060:	
 15842  143C                     l12193:	
 15843  143C  31AD  2520  3193   	fcall	_CLOCK_getTime
 15844  143F  0142               	movlb	2	; select bank2
 15845  1440  0835               	movf	_lastIncTime^(0+256),w
 15846  1441  0140               	movlb	0	; select bank0
 15847  1442  0220               	subwf	?_CLOCK_getTime,w
 15848  1443  0141               	movlb	1	; select bank1
 15849  1444  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15850  1445  0142               	movlb	2	; select bank2
 15851  1446  0836               	movf	(_lastIncTime+1)^(0+256),w
 15852  1447  0140               	movlb	0	; select bank0
 15853  1448  3B21               	subwfb	?_CLOCK_getTime+1,w
 15854  1449  0141               	movlb	1	; select bank1
 15855  144A  00DA               	movwf	(??_CONTROL_MANUAL+1)^(0+128)
 15856  144B  085A               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15857  144C  0142               	movlb	2	; select bank2
 15858  144D  0261               	subwf	(_incInterval+1)^(0+256),w
 15859  144E  1D03               	skipz
 15860  144F  2C54               	goto	u14075
 15861  1450  0141               	movlb	1	; select bank1
 15862  1451  0859               	movf	??_CONTROL_MANUAL^(0+128),w
 15863  1452  0142               	movlb	2	; select bank2
 15864  1453  0260               	subwf	_incInterval^(0+256),w
 15865  1454                     u14075:	
 15866  1454  1803               	skipnc
 15867  1455  2C57               	goto	u14071
 15868  1456  2C58               	goto	u14070
 15869  1457                     u14071:	
 15870  1457  2C76               	goto	l12203
 15871  1458                     u14070:	
 15872  1458                     l12195:	
 15873                           
 15874                           ;controller.c: 427:         colorDec();
 15875  1458  31A3  2351  3193   	fcall	_colorDec
 15876  145B                     l12197:	
 15877                           
 15878                           ;controller.c: 428:         lastIncTime = CLOCK_getTime();
 15879  145B  31AD  2520  3193   	fcall	_CLOCK_getTime
 15880  145E  0140               	movlb	0	; select bank0
 15881  145F  0821               	movf	?_CLOCK_getTime+1,w
 15882  1460  0142               	movlb	2	; select bank2
 15883  1461  00B6               	movwf	(_lastIncTime+1)^(0+256)
 15884  1462  0140               	movlb	0	; select bank0
 15885  1463  0820               	movf	?_CLOCK_getTime,w
 15886  1464  0142               	movlb	2	; select bank2
 15887  1465  00B5               	movwf	_lastIncTime^(0+256)
 15888  1466                     l12199:	
 15889                           
 15890                           ;controller.c: 429:         if(incInterval > 10){
 15891  1466  0861               	movf	(_incInterval+1)^(0+256),w
 15892  1467  3A80               	xorlw	128
 15893  1468  0141               	movlb	1	; select bank1
 15894  1469  00D9               	movwf	??_CONTROL_MANUAL^(0+128)
 15895  146A  3080               	movlw	128
 15896  146B  0259               	subwf	??_CONTROL_MANUAL^(0+128),w
 15897  146C  1D03               	skipz
 15898  146D  2C71               	goto	u14085
 15899  146E  300B               	movlw	11
 15900  146F  0142               	movlb	2	; select bank2
 15901  1470  0260               	subwf	_incInterval^(0+256),w
 15902  1471                     u14085:	
 15903  1471  1C03               	skipc
 15904  1472  2C74               	goto	u14081
 15905  1473  2C75               	goto	u14080
 15906  1474                     u14081:	
 15907  1474  2CAB               	goto	l1174
 15908  1475                     u14080:	
 15909  1475  2C2C               	goto	l12189
 15910  1476                     l12203:	
 15911  1476  0875               	movf	_upState,w
 15912  1477  1903               	btfsc	3,2
 15913  1478  2C7A               	goto	u14091
 15914  1479  2C7B               	goto	u14090
 15915  147A                     u14091:	
 15916  147A  2C7F               	goto	l12207
 15917  147B                     u14090:	
 15918  147B                     l12205:	
 15919                           
 15920                           ;controller.c: 433:         colorInc();
 15921  147B  31A4  246F  3193   	fcall	_colorInc
 15922                           
 15923                           ;controller.c: 434:     } else if (downState) {
 15924  147E  2CAB               	goto	l1174
 15925  147F                     l12207:	
 15926  147F  0874               	movf	_downState,w
 15927  1480  1903               	btfsc	3,2
 15928  1481  2C83               	goto	u14101
 15929  1482  2C84               	goto	u14100
 15930  1483                     u14101:	
 15931  1483  2C88               	goto	l12211
 15932  1484                     u14100:	
 15933  1484                     l12209:	
 15934                           
 15935                           ;controller.c: 435:         colorDec();
 15936  1484  31A3  2351  3193   	fcall	_colorDec
 15937                           
 15938                           ;controller.c: 436:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 15939  1487  2CAB               	goto	l1174
 15940  1488                     l12211:	
 15941  1488  0875               	movf	_upState,w
 15942  1489  1903               	btfsc	3,2
 15943  148A  2C8C               	goto	u14111
 15944  148B  2C8D               	goto	u14110
 15945  148C                     u14111:	
 15946  148C  2C92               	goto	l12215
 15947  148D                     u14110:	
 15948  148D                     l12213:	
 15949  148D  0874               	movf	_downState,w
 15950  148E  1D03               	btfss	3,2
 15951  148F  2C91               	goto	u14121
 15952  1490  2C92               	goto	u14120
 15953  1491                     u14121:	
 15954  1491  2CAB               	goto	l1174
 15955  1492                     u14120:	
 15956  1492                     l12215:	
 15957  1492  0142               	movlb	2	; select bank2
 15958  1493  084E               	movf	_down^(0+256),w
 15959  1494  3187  27EF  3193   	fcall	_BUTTONS_isHeld
 15960  1497  3A00               	xorlw	0
 15961  1498  1D03               	skipz
 15962  1499  2C9B               	goto	u14131
 15963  149A  2C9C               	goto	u14130
 15964  149B                     u14131:	
 15965  149B  2CAB               	goto	l1174
 15966  149C                     u14130:	
 15967  149C                     l12217:	
 15968  149C  0142               	movlb	2	; select bank2
 15969  149D  084F               	movf	_up^(0+256),w
 15970  149E  3187  27EF  3193   	fcall	_BUTTONS_isHeld
 15971  14A1  3A00               	xorlw	0
 15972  14A2  1D03               	skipz
 15973  14A3  2CA5               	goto	u14141
 15974  14A4  2CA6               	goto	u14140
 15975  14A5                     u14141:	
 15976  14A5  2CAB               	goto	l1174
 15977  14A6                     u14140:	
 15978  14A6                     l12219:	
 15979                           
 15980                           ;controller.c: 437:         incInterval = 100;
 15981  14A6  3064               	movlw	100
 15982  14A7  0142               	movlb	2	; select bank2
 15983  14A8  00E0               	movwf	_incInterval^(0+256)
 15984  14A9  3000               	movlw	0
 15985  14AA  00E1               	movwf	(_incInterval^(0+256)+1)
 15986  14AB                     l1174:	
 15987  14AB  0008               	return
 15988  14AC                     __end_of_CONTROL_MANUAL:	
 15989                           
 15990                           	psect	text28
 15991  246F                     __ptext28:	
 15992 ;; *************** function _colorInc *****************
 15993 ;; Defined at:
 15994 ;;		line 230 in file "led.c"
 15995 ;; Parameters:    Size  Location     Type
 15996 ;;		None
 15997 ;; Auto vars:     Size  Location     Type
 15998 ;;		None
 15999 ;; Return value:  Size  Location     Type
 16000 ;;                  1    wreg      void 
 16001 ;; Registers used:
 16002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16003 ;; Tracked objects:
 16004 ;;		On entry : 0/0
 16005 ;;		On exit  : 0/0
 16006 ;;		Unchanged: 0/0
 16007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16012 ;;Total ram usage:        2 bytes
 16013 ;; Hardware stack levels used:    1
 16014 ;; Hardware stack levels required when called:    5
 16015 ;; This function calls:
 16016 ;;		_getCurrentMenu
 16017 ;; This function is called by:
 16018 ;;		_CONTROL_MANUAL
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           
 16023                           ;psect for function _colorInc
 16024  246F                     _colorInc:	
 16025  246F                     l11911:	
 16026                           ;incstack = 0
 16027                           ; Regs used in _colorInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16028                           
 16029                           
 16030                           ;led.c: 232:     switch(getCurrentMenu()){
 16031  246F  2CA4               	goto	l11931
 16032  2470                     l11913:	
 16033                           
 16034                           ;led.c: 235:             if(!(manualColor.red > 254))
 16035  2470  0142               	movlb	2	; select bank2
 16036  2471  0A26               	incf	(_manualColor^(0+256)+1),w
 16037  2472  1903               	btfsc	3,2
 16038  2473  2C75               	goto	u13721
 16039  2474  2C76               	goto	u13720
 16040  2475                     u13721:	
 16041  2475  2CBD               	goto	l1518
 16042  2476                     u13720:	
 16043  2476                     l11915:	
 16044                           
 16045                           ;led.c: 236:             manualColor.red++;
 16046  2476  3001               	movlw	1
 16047  2477  0140               	movlb	0	; select bank0
 16048  2478  00A0               	movwf	??_colorInc
 16049  2479  0820               	movf	??_colorInc,w
 16050  247A  0142               	movlb	2	; select bank2
 16051  247B  07A6               	addwf	(_manualColor^(0+256)+1),f
 16052  247C  2CBD               	goto	l1518
 16053  247D                     l11917:	
 16054                           
 16055                           ;led.c: 240:             if(!(manualColor.green > 254))
 16056  247D  0142               	movlb	2	; select bank2
 16057  247E  0A27               	incf	(_manualColor^(0+256)+2),w
 16058  247F  1903               	btfsc	3,2
 16059  2480  2C82               	goto	u13731
 16060  2481  2C83               	goto	u13730
 16061  2482                     u13731:	
 16062  2482  2CBD               	goto	l1518
 16063  2483                     u13730:	
 16064  2483                     l11919:	
 16065                           
 16066                           ;led.c: 241:             manualColor.green++;
 16067  2483  3001               	movlw	1
 16068  2484  0140               	movlb	0	; select bank0
 16069  2485  00A0               	movwf	??_colorInc
 16070  2486  0820               	movf	??_colorInc,w
 16071  2487  0142               	movlb	2	; select bank2
 16072  2488  07A7               	addwf	(_manualColor^(0+256)+2),f
 16073  2489  2CBD               	goto	l1518
 16074  248A                     l11921:	
 16075                           
 16076                           ;led.c: 245:             if(!(manualColor.blue > 254))
 16077  248A  0142               	movlb	2	; select bank2
 16078  248B  0A28               	incf	(_manualColor^(0+256)+3),w
 16079  248C  1903               	btfsc	3,2
 16080  248D  2C8F               	goto	u13741
 16081  248E  2C90               	goto	u13740
 16082  248F                     u13741:	
 16083  248F  2CBD               	goto	l1518
 16084  2490                     u13740:	
 16085  2490                     l11923:	
 16086                           
 16087                           ;led.c: 246:             manualColor.blue++;
 16088  2490  3001               	movlw	1
 16089  2491  0140               	movlb	0	; select bank0
 16090  2492  00A0               	movwf	??_colorInc
 16091  2493  0820               	movf	??_colorInc,w
 16092  2494  0142               	movlb	2	; select bank2
 16093  2495  07A8               	addwf	(_manualColor^(0+256)+3),f
 16094  2496  2CBD               	goto	l1518
 16095  2497                     l11925:	
 16096                           
 16097                           ;led.c: 250:             if(!(manualColor.white > 254))
 16098  2497  0142               	movlb	2	; select bank2
 16099  2498  0A25               	incf	_manualColor^(0+256),w
 16100  2499  1903               	btfsc	3,2
 16101  249A  2C9C               	goto	u13751
 16102  249B  2C9D               	goto	u13750
 16103  249C                     u13751:	
 16104  249C  2CBD               	goto	l1518
 16105  249D                     u13750:	
 16106  249D                     l11927:	
 16107                           
 16108                           ;led.c: 251:             manualColor.white++;
 16109  249D  3001               	movlw	1
 16110  249E  0140               	movlb	0	; select bank0
 16111  249F  00A0               	movwf	??_colorInc
 16112  24A0  0820               	movf	??_colorInc,w
 16113  24A1  0142               	movlb	2	; select bank2
 16114  24A2  07A5               	addwf	_manualColor^(0+256),f
 16115  24A3  2CBD               	goto	l1518
 16116  24A4                     l11931:	
 16117  24A4  31AC  24FE  31A4   	fcall	_getCurrentMenu
 16118  24A7  0140               	movlb	0	; select bank0
 16119  24A8  00A0               	movwf	??_colorInc
 16120  24A9  01A1               	clrf	??_colorInc+1
 16121                           
 16122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16123                           ; Switch size 1, requested type "simple"
 16124                           ; Number of cases is 1, Range of values is 0 to 0
 16125                           ; switch strategies available:
 16126                           ; Name         Instructions Cycles
 16127                           ; simple_byte            4     3 (average)
 16128                           ; direct_byte            8     6 (fixed)
 16129                           ; jumptable            260     6 (fixed)
 16130                           ;	Chosen strategy is simple_byte
 16131  24AA  0821               	movf	??_colorInc+1,w
 16132  24AB  3A00               	xorlw	0	; case 0
 16133  24AC  1903               	skipnz
 16134  24AD  2CAF               	goto	l13235
 16135  24AE  2CBD               	goto	l1518
 16136  24AF                     l13235:	
 16137                           
 16138                           ; Switch size 1, requested type "simple"
 16139                           ; Number of cases is 4, Range of values is 13 to 16
 16140                           ; switch strategies available:
 16141                           ; Name         Instructions Cycles
 16142                           ; simple_byte           13     7 (average)
 16143                           ; direct_byte           17     9 (fixed)
 16144                           ; jumptable            263     9 (fixed)
 16145                           ;	Chosen strategy is simple_byte
 16146  24AF  0820               	movf	??_colorInc,w
 16147  24B0  3A0D               	xorlw	13	; case 13
 16148  24B1  1903               	skipnz
 16149  24B2  2C70               	goto	l11913
 16150  24B3  3A03               	xorlw	3	; case 14
 16151  24B4  1903               	skipnz
 16152  24B5  2C7D               	goto	l11917
 16153  24B6  3A01               	xorlw	1	; case 15
 16154  24B7  1903               	skipnz
 16155  24B8  2C8A               	goto	l11921
 16156  24B9  3A1F               	xorlw	31	; case 16
 16157  24BA  1903               	skipnz
 16158  24BB  2C97               	goto	l11925
 16159  24BC  2CBD               	goto	l1518
 16160  24BD                     l1518:	
 16161  24BD  0008               	return
 16162  24BE                     __end_of_colorInc:	
 16163                           
 16164                           	psect	text29
 16165  2351                     __ptext29:	
 16166 ;; *************** function _colorDec *****************
 16167 ;; Defined at:
 16168 ;;		line 258 in file "led.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;		None
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;		None
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      void 
 16175 ;; Registers used:
 16176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;Total ram usage:        2 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:    5
 16189 ;; This function calls:
 16190 ;;		_getCurrentMenu
 16191 ;; This function is called by:
 16192 ;;		_CONTROL_MANUAL
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           
 16197                           ;psect for function _colorDec
 16198  2351                     _colorDec:	
 16199  2351                     l11937:	
 16200                           ;incstack = 0
 16201                           ; Regs used in _colorDec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16202                           
 16203                           
 16204                           ;led.c: 260:     switch(getCurrentMenu()){
 16205  2351  2B76               	goto	l11957
 16206  2352                     l11939:	
 16207                           
 16208                           ;led.c: 263:             if(!(manualColor.red < 1))
 16209  2352  0142               	movlb	2	; select bank2
 16210  2353  0826               	movf	(_manualColor^(0+256)+1),w
 16211  2354  1903               	btfsc	3,2
 16212  2355  2B57               	goto	u13761
 16213  2356  2B58               	goto	u13760
 16214  2357                     u13761:	
 16215  2357  2B8F               	goto	l1531
 16216  2358                     u13760:	
 16217  2358                     l11941:	
 16218                           
 16219                           ;led.c: 264:             manualColor.red--;
 16220  2358  3001               	movlw	1
 16221  2359  02A6               	subwf	(_manualColor^(0+256)+1),f
 16222  235A  2B8F               	goto	l1531
 16223  235B                     l11943:	
 16224                           
 16225                           ;led.c: 268:             if(!(manualColor.green < 1))
 16226  235B  0142               	movlb	2	; select bank2
 16227  235C  0827               	movf	(_manualColor^(0+256)+2),w
 16228  235D  1903               	btfsc	3,2
 16229  235E  2B60               	goto	u13771
 16230  235F  2B61               	goto	u13770
 16231  2360                     u13771:	
 16232  2360  2B8F               	goto	l1531
 16233  2361                     u13770:	
 16234  2361                     l11945:	
 16235                           
 16236                           ;led.c: 269:             manualColor.green--;
 16237  2361  3001               	movlw	1
 16238  2362  02A7               	subwf	(_manualColor^(0+256)+2),f
 16239  2363  2B8F               	goto	l1531
 16240  2364                     l11947:	
 16241                           
 16242                           ;led.c: 273:             if(!(manualColor.blue < 1))
 16243  2364  0142               	movlb	2	; select bank2
 16244  2365  0828               	movf	(_manualColor^(0+256)+3),w
 16245  2366  1903               	btfsc	3,2
 16246  2367  2B69               	goto	u13781
 16247  2368  2B6A               	goto	u13780
 16248  2369                     u13781:	
 16249  2369  2B8F               	goto	l1531
 16250  236A                     u13780:	
 16251  236A                     l11949:	
 16252                           
 16253                           ;led.c: 274:             manualColor.blue--;
 16254  236A  3001               	movlw	1
 16255  236B  02A8               	subwf	(_manualColor^(0+256)+3),f
 16256  236C  2B8F               	goto	l1531
 16257  236D                     l11951:	
 16258                           
 16259                           ;led.c: 278:             if(!(manualColor.white < 1))
 16260  236D  0142               	movlb	2	; select bank2
 16261  236E  0825               	movf	_manualColor^(0+256),w
 16262  236F  1903               	btfsc	3,2
 16263  2370  2B72               	goto	u13791
 16264  2371  2B73               	goto	u13790
 16265  2372                     u13791:	
 16266  2372  2B8F               	goto	l1531
 16267  2373                     u13790:	
 16268  2373                     l11953:	
 16269                           
 16270                           ;led.c: 279:             manualColor.white--;
 16271  2373  3001               	movlw	1
 16272  2374  02A5               	subwf	_manualColor^(0+256),f
 16273  2375  2B8F               	goto	l1531
 16274  2376                     l11957:	
 16275  2376  31AC  24FE  31A3   	fcall	_getCurrentMenu
 16276  2379  0140               	movlb	0	; select bank0
 16277  237A  00A0               	movwf	??_colorDec
 16278  237B  01A1               	clrf	??_colorDec+1
 16279                           
 16280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16281                           ; Switch size 1, requested type "simple"
 16282                           ; Number of cases is 1, Range of values is 0 to 0
 16283                           ; switch strategies available:
 16284                           ; Name         Instructions Cycles
 16285                           ; simple_byte            4     3 (average)
 16286                           ; direct_byte            8     6 (fixed)
 16287                           ; jumptable            260     6 (fixed)
 16288                           ;	Chosen strategy is simple_byte
 16289  237C  0821               	movf	??_colorDec+1,w
 16290  237D  3A00               	xorlw	0	; case 0
 16291  237E  1903               	skipnz
 16292  237F  2B81               	goto	l13237
 16293  2380  2B8F               	goto	l1531
 16294  2381                     l13237:	
 16295                           
 16296                           ; Switch size 1, requested type "simple"
 16297                           ; Number of cases is 4, Range of values is 13 to 16
 16298                           ; switch strategies available:
 16299                           ; Name         Instructions Cycles
 16300                           ; simple_byte           13     7 (average)
 16301                           ; direct_byte           17     9 (fixed)
 16302                           ; jumptable            263     9 (fixed)
 16303                           ;	Chosen strategy is simple_byte
 16304  2381  0820               	movf	??_colorDec,w
 16305  2382  3A0D               	xorlw	13	; case 13
 16306  2383  1903               	skipnz
 16307  2384  2B52               	goto	l11939
 16308  2385  3A03               	xorlw	3	; case 14
 16309  2386  1903               	skipnz
 16310  2387  2B5B               	goto	l11943
 16311  2388  3A01               	xorlw	1	; case 15
 16312  2389  1903               	skipnz
 16313  238A  2B64               	goto	l11947
 16314  238B  3A1F               	xorlw	31	; case 16
 16315  238C  1903               	skipnz
 16316  238D  2B6D               	goto	l11951
 16317  238E  2B8F               	goto	l1531
 16318  238F                     l1531:	
 16319  238F  0008               	return
 16320  2390                     __end_of_colorDec:	
 16321                           
 16322                           	psect	text30
 16323  2CFE                     __ptext30:	
 16324 ;; *************** function _getCurrentMenu *****************
 16325 ;; Defined at:
 16326 ;;		line 499 in file "controller.c"
 16327 ;; Parameters:    Size  Location     Type
 16328 ;;		None
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;		None
 16331 ;; Return value:  Size  Location     Type
 16332 ;;                  1    wreg      enum E11217
 16333 ;; Registers used:
 16334 ;;		wreg, fsr1l, fsr1h
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16344 ;;Total ram usage:        0 bytes
 16345 ;; Hardware stack levels used:    1
 16346 ;; Hardware stack levels required when called:    4
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		_colorInc
 16351 ;;		_colorDec
 16352 ;; This function uses a non-reentrant model
 16353 ;;
 16354                           
 16355                           
 16356                           ;psect for function _getCurrentMenu
 16357  2CFE                     _getCurrentMenu:	
 16358  2CFE                     l11549:	
 16359                           ;incstack = 0
 16360                           ; Regs used in _getCurrentMenu: [wregfsr1]
 16361                           
 16362                           
 16363                           ;controller.c: 500:     return currentMenu->name;
 16364  2CFE  0872               	movf	_currentMenu,w
 16365  2CFF  0086               	movwf	6
 16366  2D00  0873               	movf	_currentMenu+1,w
 16367  2D01  0087               	movwf	7
 16368  2D02  3148               	addfsr 1,8
 16369  2D03  0801               	movf	1,w
 16370  2D04                     l1208:	
 16371  2D04  0008               	return
 16372  2D05                     __end_of_getCurrentMenu:	
 16373                           
 16374                           	psect	text31
 16375  2E31                     __ptext31:	
 16376 ;; *************** function _LED_task_MANUAL *****************
 16377 ;; Defined at:
 16378 ;;		line 60 in file "led.c"
 16379 ;; Parameters:    Size  Location     Type
 16380 ;;		None
 16381 ;; Auto vars:     Size  Location     Type
 16382 ;;		None
 16383 ;; Return value:  Size  Location     Type
 16384 ;;                  1    wreg      void 
 16385 ;; Registers used:
 16386 ;;		wreg, status,2, status,0, pclath, cstack
 16387 ;; Tracked objects:
 16388 ;;		On entry : 0/0
 16389 ;;		On exit  : 0/0
 16390 ;;		Unchanged: 0/0
 16391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16396 ;;Total ram usage:        0 bytes
 16397 ;; Hardware stack levels used:    1
 16398 ;; Hardware stack levels required when called:    7
 16399 ;; This function calls:
 16400 ;;		_LED_setColor
 16401 ;; This function is called by:
 16402 ;;		_CONTROL_MANUAL
 16403 ;; This function uses a non-reentrant model
 16404 ;;
 16405                           
 16406                           
 16407                           ;psect for function _LED_task_MANUAL
 16408  2E31                     _LED_task_MANUAL:	
 16409  2E31                     l11909:	
 16410                           ;incstack = 0
 16411                           ; Regs used in _LED_task_MANUAL: [wreg+status,2+status,0+pclath+cstack]
 16412                           
 16413                           
 16414                           ;led.c: 62:     LED_setColor(manualColor);
 16415  2E31  0142               	movlb	2	; select bank2
 16416  2E32  0828               	movf	(_manualColor+3)^(0+256),w
 16417  2E33  0141               	movlb	1	; select bank1
 16418  2E34  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 16419  2E35  0142               	movlb	2	; select bank2
 16420  2E36  0827               	movf	(_manualColor+2)^(0+256),w
 16421  2E37  0141               	movlb	1	; select bank1
 16422  2E38  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 16423  2E39  0142               	movlb	2	; select bank2
 16424  2E3A  0826               	movf	(_manualColor+1)^(0+256),w
 16425  2E3B  0141               	movlb	1	; select bank1
 16426  2E3C  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 16427  2E3D  0142               	movlb	2	; select bank2
 16428  2E3E  0825               	movf	_manualColor^(0+256),w
 16429  2E3F  0141               	movlb	1	; select bank1
 16430  2E40  00D1               	movwf	LED_setColor@input^(0+128)
 16431  2E41  3194  24AC  31AE   	fcall	_LED_setColor
 16432  2E44                     l1433:	
 16433  2E44  0008               	return
 16434  2E45                     __end_of_LED_task_MANUAL:	
 16435                           
 16436                           	psect	text32
 16437  20CF                     __ptext32:	
 16438 ;; *************** function _address_inc *****************
 16439 ;; Defined at:
 16440 ;;		line 29 in file "dmx.c"
 16441 ;; Parameters:    Size  Location     Type
 16442 ;;		None
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;		None
 16445 ;; Return value:  Size  Location     Type
 16446 ;;                  1    wreg      void 
 16447 ;; Registers used:
 16448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16449 ;; Tracked objects:
 16450 ;;		On entry : 0/0
 16451 ;;		On exit  : 0/0
 16452 ;;		Unchanged: 0/0
 16453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16458 ;;Total ram usage:        0 bytes
 16459 ;; Hardware stack levels used:    1
 16460 ;; Hardware stack levels required when called:   17
 16461 ;; This function calls:
 16462 ;;		_TM1650_fastPrintNum_3digit
 16463 ;;		_printf
 16464 ;; This function is called by:
 16465 ;;		_CONTROL_DMX
 16466 ;; This function uses a non-reentrant model
 16467 ;;
 16468                           
 16469                           
 16470                           ;psect for function _address_inc
 16471  20CF                     _address_inc:	
 16472  20CF                     l11753:	
 16473                           ;incstack = 0
 16474 ;; hardware stack exceeded
 16475                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16476                           
 16477                           
 16478                           ;dmx.c: 31:     if(address == 512)
 16479  20CF  3002               	movlw	2
 16480  20D0  0142               	movlb	2	; select bank2
 16481  20D1  0663               	xorwf	(_address+1)^(0+256),w
 16482  20D2  0462               	iorwf	_address^(0+256),w
 16483  20D3  1D03               	btfss	3,2
 16484  20D4  28D6               	goto	u13481
 16485  20D5  28D7               	goto	u13480
 16486  20D6                     u13481:	
 16487  20D6  28DC               	goto	l11757
 16488  20D7                     u13480:	
 16489  20D7                     l11755:	
 16490                           
 16491                           ;dmx.c: 32:         address = 1;
 16492  20D7  3001               	movlw	1
 16493  20D8  00E2               	movwf	_address^(0+256)
 16494  20D9  3000               	movlw	0
 16495  20DA  00E3               	movwf	(_address^(0+256)+1)
 16496  20DB  28E0               	goto	l11759
 16497  20DC                     l11757:	
 16498                           
 16499                           ;dmx.c: 34:         address++;
 16500  20DC  3001               	movlw	1
 16501  20DD  07E2               	addwf	_address^(0+256),f
 16502  20DE  3000               	movlw	0
 16503  20DF  3DE3               	addwfc	(_address+1)^(0+256),f
 16504  20E0                     l11759:	
 16505                           
 16506                           ;dmx.c: 37:     printf("d\r");
 16507  20E0  309A               	movlw	low (STR_31| (0+32768))
 16508  20E1  0141               	movlb	1	; select bank1
 16509  20E2  00A0               	movwf	printf@fmt^(0+128)
 16510  20E3  30B0               	movlw	high (STR_31| (0+32768))
 16511  20E4  00A1               	movwf	(printf@fmt^(0+128)+1)
 16512  20E5  31AE  26AF  31A0   	fcall	_printf
 16513  20E8                     l11761:	
 16514                           
 16515                           ;dmx.c: 38:     TM1650_fastPrintNum_3digit(address);
 16516  20E8  0142               	movlb	2	; select bank2
 16517  20E9  0863               	movf	(_address+1)^(0+256),w
 16518  20EA  0140               	movlb	0	; select bank0
 16519  20EB  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 16520  20EC  0142               	movlb	2	; select bank2
 16521  20ED  0862               	movf	_address^(0+256),w
 16522  20EE  0140               	movlb	0	; select bank0
 16523  20EF  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 16524  20F0  3199  21DD  31A0   	fcall	_TM1650_fastPrintNum_3digit
 16525  20F3                     l1361:	
 16526  20F3  0008               	return
 16527  20F4                     __end_of_address_inc:	
 16528                           
 16529                           	psect	text33
 16530  20AB                     __ptext33:	
 16531 ;; *************** function _address_dec *****************
 16532 ;; Defined at:
 16533 ;;		line 44 in file "dmx.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;		None
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;		None
 16538 ;; Return value:  Size  Location     Type
 16539 ;;                  1    wreg      void 
 16540 ;; Registers used:
 16541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16551 ;;Total ram usage:        0 bytes
 16552 ;; Hardware stack levels used:    1
 16553 ;; Hardware stack levels required when called:   17
 16554 ;; This function calls:
 16555 ;;		_TM1650_fastPrintNum_3digit
 16556 ;;		_printf
 16557 ;; This function is called by:
 16558 ;;		_CONTROL_DMX
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           
 16562                           
 16563                           ;psect for function _address_dec
 16564  20AB                     _address_dec:	
 16565  20AB                     l11763:	
 16566                           ;incstack = 0
 16567 ;; hardware stack exceeded
 16568                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16569                           
 16570                           
 16571                           ;dmx.c: 46:     if(address == 1)
 16572  20AB  0142               	movlb	2	; select bank2
 16573  20AC  0362               	decf	_address^(0+256),w
 16574  20AD  0463               	iorwf	(_address+1)^(0+256),w
 16575  20AE  1D03               	btfss	3,2
 16576  20AF  28B1               	goto	u13491
 16577  20B0  28B2               	goto	u13490
 16578  20B1                     u13491:	
 16579  20B1  28B7               	goto	l11767
 16580  20B2                     u13490:	
 16581  20B2                     l11765:	
 16582                           
 16583                           ;dmx.c: 47:         address = 512;
 16584  20B2  3000               	movlw	0
 16585  20B3  00E2               	movwf	_address^(0+256)
 16586  20B4  3002               	movlw	2
 16587  20B5  00E3               	movwf	(_address^(0+256)+1)
 16588  20B6  28BB               	goto	l11769
 16589  20B7                     l11767:	
 16590                           
 16591                           ;dmx.c: 49:         address--;
 16592  20B7  3001               	movlw	1
 16593  20B8  02E2               	subwf	_address^(0+256),f
 16594  20B9  3000               	movlw	0
 16595  20BA  3BE3               	subwfb	(_address+1)^(0+256),f
 16596  20BB                     l11769:	
 16597                           
 16598                           ;dmx.c: 52:     printf("d\r");
 16599  20BB  309A               	movlw	low (STR_31| (0+32768))
 16600  20BC  0141               	movlb	1	; select bank1
 16601  20BD  00A0               	movwf	printf@fmt^(0+128)
 16602  20BE  30B0               	movlw	high (STR_31| (0+32768))
 16603  20BF  00A1               	movwf	(printf@fmt^(0+128)+1)
 16604  20C0  31AE  26AF  31A0   	fcall	_printf
 16605  20C3                     l11771:	
 16606                           
 16607                           ;dmx.c: 53:     TM1650_fastPrintNum_3digit(address);
 16608  20C3  0142               	movlb	2	; select bank2
 16609  20C4  0863               	movf	(_address+1)^(0+256),w
 16610  20C5  0140               	movlb	0	; select bank0
 16611  20C6  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 16612  20C7  0142               	movlb	2	; select bank2
 16613  20C8  0862               	movf	_address^(0+256),w
 16614  20C9  0140               	movlb	0	; select bank0
 16615  20CA  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 16616  20CB  3199  21DD  31A0   	fcall	_TM1650_fastPrintNum_3digit
 16617  20CE                     l1366:	
 16618  20CE  0008               	return
 16619  20CF                     __end_of_address_dec:	
 16620                           
 16621                           	psect	text34
 16622  19DD                     __ptext34:	
 16623 ;; *************** function _TM1650_fastPrintNum_3digit *****************
 16624 ;; Defined at:
 16625 ;;		line 120 in file "tm1650.c"
 16626 ;; Parameters:    Size  Location     Type
 16627 ;;  num             2   22[BANK0 ] unsigned short 
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;		None
 16630 ;; Return value:  Size  Location     Type
 16631 ;;                  1    wreg      void 
 16632 ;; Registers used:
 16633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16634 ;; Tracked objects:
 16635 ;;		On entry : 0/0
 16636 ;;		On exit  : 0/0
 16637 ;;		Unchanged: 0/0
 16638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16641 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16642 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16643 ;;Total ram usage:        3 bytes
 16644 ;; Hardware stack levels used:    1
 16645 ;; Hardware stack levels required when called:    8
 16646 ;; This function calls:
 16647 ;;		___lwdiv
 16648 ;;		___lwmod
 16649 ;;		_writeData
 16650 ;; This function is called by:
 16651 ;;		_CONTROL_MANUAL
 16652 ;;		_address_inc
 16653 ;;		_address_dec
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           
 16658                           ;psect for function _TM1650_fastPrintNum_3digit
 16659  19DD                     _TM1650_fastPrintNum_3digit:	
 16660  19DD                     l11541:	
 16661                           ;incstack = 0
 16662                           ; Regs used in _TM1650_fastPrintNum_3digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16663                           
 16664                           
 16665                           ;tm1650.c: 122:     if(num > 999){
 16666  19DD  3003               	movlw	3
 16667  19DE  0140               	movlb	0	; select bank0
 16668  19DF  0237               	subwf	TM1650_fastPrintNum_3digit@num+1,w
 16669  19E0  30E8               	movlw	232
 16670  19E1  1903               	skipnz
 16671  19E2  0236               	subwf	TM1650_fastPrintNum_3digit@num,w
 16672  19E3  1C03               	skipc
 16673  19E4  29E6               	goto	u13171
 16674  19E5  29E7               	goto	u13170
 16675  19E6                     u13171:	
 16676  19E6  2A0B               	goto	l11547
 16677  19E7                     u13170:	
 16678  19E7                     l11543:	
 16679                           
 16680                           ;tm1650.c: 123:         writeData(0x34, 0x79);
 16681  19E7  3079               	movlw	121
 16682  19E8  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16683  19E9  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16684  19EA  00B0               	movwf	writeData@data
 16685  19EB  3034               	movlw	52
 16686  19EC  31AF  277D  3199   	fcall	_writeData
 16687                           
 16688                           ;tm1650.c: 124:         writeData(0x35, 0x79);
 16689  19EF  3079               	movlw	121
 16690  19F0  0140               	movlb	0	; select bank0
 16691  19F1  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16692  19F2  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16693  19F3  00B0               	movwf	writeData@data
 16694  19F4  3035               	movlw	53
 16695  19F5  31AF  277D  3199   	fcall	_writeData
 16696                           
 16697                           ;tm1650.c: 125:         writeData(0x36, 0x79);
 16698  19F8  3079               	movlw	121
 16699  19F9  0140               	movlb	0	; select bank0
 16700  19FA  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16701  19FB  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16702  19FC  00B0               	movwf	writeData@data
 16703  19FD  3036               	movlw	54
 16704  19FE  31AF  277D  3199   	fcall	_writeData
 16705                           
 16706                           ;tm1650.c: 126:         writeData(0x37, 0x79);
 16707  1A01  3079               	movlw	121
 16708  1A02  0140               	movlb	0	; select bank0
 16709  1A03  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16710  1A04  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16711  1A05  00B0               	movwf	writeData@data
 16712  1A06  3037               	movlw	55
 16713  1A07  31AF  277D  3199   	fcall	_writeData
 16714  1A0A  2A79               	goto	l1261
 16715  1A0B                     l11547:	
 16716                           
 16717                           ;tm1650.c: 130:     writeData(0x37, charTable[(num % 10) + 16]);
 16718  1A0B  300A               	movlw	10
 16719  1A0C  00A8               	movwf	___lwmod@divisor
 16720  1A0D  3000               	movlw	0
 16721  1A0E  00A9               	movwf	___lwmod@divisor+1
 16722  1A0F  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 16723  1A10  00AB               	movwf	___lwmod@dividend+1
 16724  1A11  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 16725  1A12  00AA               	movwf	___lwmod@dividend
 16726  1A13  3198  2003  3199   	fcall	___lwmod
 16727  1A16  0140               	movlb	0	; select bank0
 16728  1A17  0829               	movf	?___lwmod+1,w
 16729  1A18  0085               	movwf	5
 16730  1A19  0828               	movf	?___lwmod,w
 16731  1A1A  0084               	movwf	4
 16732  1A1B  3010               	movlw	low ((_charTable+16)| (0+32768))
 16733  1A1C  0784               	addwf	4,f
 16734  1A1D  30A8               	movlw	high ((_charTable+16)| (0+32768))
 16735  1A1E  3D85               	addwfc	5,f
 16736  1A1F  0800               	movf	0,w	;code access
 16737  1A20  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16738  1A21  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16739  1A22  00B0               	movwf	writeData@data
 16740  1A23  3037               	movlw	55
 16741  1A24  31AF  277D  3199   	fcall	_writeData
 16742                           
 16743                           ;tm1650.c: 131:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 16744  1A27  300A               	movlw	10
 16745  1A28  0140               	movlb	0	; select bank0
 16746  1A29  00A8               	movwf	___lwmod@divisor
 16747  1A2A  3000               	movlw	0
 16748  1A2B  00A9               	movwf	___lwmod@divisor+1
 16749  1A2C  300A               	movlw	10
 16750  1A2D  00A0               	movwf	___lwdiv@divisor
 16751  1A2E  3000               	movlw	0
 16752  1A2F  00A1               	movwf	___lwdiv@divisor+1
 16753  1A30  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 16754  1A31  00A3               	movwf	___lwdiv@dividend+1
 16755  1A32  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 16756  1A33  00A2               	movwf	___lwdiv@dividend
 16757  1A34  31A2  22D6  3199   	fcall	___lwdiv
 16758  1A37  0140               	movlb	0	; select bank0
 16759  1A38  0821               	movf	?___lwdiv+1,w
 16760  1A39  00AB               	movwf	___lwmod@dividend+1
 16761  1A3A  0820               	movf	?___lwdiv,w
 16762  1A3B  00AA               	movwf	___lwmod@dividend
 16763  1A3C  3198  2003  3199   	fcall	___lwmod
 16764  1A3F  0140               	movlb	0	; select bank0
 16765  1A40  0829               	movf	?___lwmod+1,w
 16766  1A41  0085               	movwf	5
 16767  1A42  0828               	movf	?___lwmod,w
 16768  1A43  0084               	movwf	4
 16769  1A44  3010               	movlw	low ((_charTable+16)| (0+32768))
 16770  1A45  0784               	addwf	4,f
 16771  1A46  30A8               	movlw	high ((_charTable+16)| (0+32768))
 16772  1A47  3D85               	addwfc	5,f
 16773  1A48  0800               	movf	0,w	;code access
 16774  1A49  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16775  1A4A  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16776  1A4B  00B0               	movwf	writeData@data
 16777  1A4C  3036               	movlw	54
 16778  1A4D  31AF  277D  3199   	fcall	_writeData
 16779                           
 16780                           ;tm1650.c: 132:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 16781  1A50  300A               	movlw	10
 16782  1A51  0140               	movlb	0	; select bank0
 16783  1A52  00A8               	movwf	___lwmod@divisor
 16784  1A53  3000               	movlw	0
 16785  1A54  00A9               	movwf	___lwmod@divisor+1
 16786  1A55  3064               	movlw	100
 16787  1A56  00A0               	movwf	___lwdiv@divisor
 16788  1A57  3000               	movlw	0
 16789  1A58  00A1               	movwf	___lwdiv@divisor+1
 16790  1A59  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 16791  1A5A  00A3               	movwf	___lwdiv@dividend+1
 16792  1A5B  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 16793  1A5C  00A2               	movwf	___lwdiv@dividend
 16794  1A5D  31A2  22D6  3199   	fcall	___lwdiv
 16795  1A60  0140               	movlb	0	; select bank0
 16796  1A61  0821               	movf	?___lwdiv+1,w
 16797  1A62  00AB               	movwf	___lwmod@dividend+1
 16798  1A63  0820               	movf	?___lwdiv,w
 16799  1A64  00AA               	movwf	___lwmod@dividend
 16800  1A65  3198  2003  3199   	fcall	___lwmod
 16801  1A68  0140               	movlb	0	; select bank0
 16802  1A69  0829               	movf	?___lwmod+1,w
 16803  1A6A  0085               	movwf	5
 16804  1A6B  0828               	movf	?___lwmod,w
 16805  1A6C  0084               	movwf	4
 16806  1A6D  3010               	movlw	low ((_charTable+16)| (0+32768))
 16807  1A6E  0784               	addwf	4,f
 16808  1A6F  30A8               	movlw	high ((_charTable+16)| (0+32768))
 16809  1A70  3D85               	addwfc	5,f
 16810  1A71  0800               	movf	0,w	;code access
 16811  1A72  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16812  1A73  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16813  1A74  00B0               	movwf	writeData@data
 16814  1A75  3035               	movlw	53
 16815  1A76  31AF  277D  3199   	fcall	_writeData
 16816  1A79                     l1261:	
 16817  1A79  0008               	return
 16818  1A7A                     __end_of_TM1650_fastPrintNum_3digit:	
 16819                           
 16820                           	psect	text35
 16821  1803                     __ptext35:	
 16822 ;; *************** function ___lwmod *****************
 16823 ;; Defined at:
 16824 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;  divisor         2    8[BANK0 ] unsigned int 
 16827 ;;  dividend        2   10[BANK0 ] unsigned int 
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;  counter         1   13[BANK0 ] unsigned char 
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  2    8[BANK0 ] unsigned int 
 16832 ;; Registers used:
 16833 ;;		wreg, status,2, status,0
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16842 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16843 ;;Total ram usage:        6 bytes
 16844 ;; Hardware stack levels used:    1
 16845 ;; Hardware stack levels required when called:    4
 16846 ;; This function calls:
 16847 ;;		Nothing
 16848 ;; This function is called by:
 16849 ;;		_TM1650_fastPrintNum
 16850 ;;		_TM1650_fastPrintNum_3digit
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           
 16855                           ;psect for function ___lwmod
 16856  1803                     ___lwmod:	
 16857  1803                     l11509:	
 16858                           ;incstack = 0
 16859                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16860                           
 16861  1803  0140               	movlb	0	; select bank0
 16862  1804  0828               	movf	___lwmod@divisor,w
 16863  1805  0429               	iorwf	___lwmod@divisor+1,w
 16864  1806  1903               	btfsc	3,2
 16865  1807  2809               	goto	u13111
 16866  1808  280A               	goto	u13110
 16867  1809                     u13111:	
 16868  1809  2833               	goto	l11527
 16869  180A                     u13110:	
 16870  180A                     l11511:	
 16871  180A  01AD               	clrf	___lwmod@counter
 16872  180B  0AAD               	incf	___lwmod@counter,f
 16873  180C  2816               	goto	l11517
 16874  180D                     l11513:	
 16875  180D  3001               	movlw	1
 16876  180E                     u13125:	
 16877  180E  35A8               	lslf	___lwmod@divisor,f
 16878  180F  0DA9               	rlf	___lwmod@divisor+1,f
 16879  1810  0B89               	decfsz	9,f
 16880  1811  280E               	goto	u13125
 16881  1812                     l11515:	
 16882  1812  3001               	movlw	1
 16883  1813  00AC               	movwf	??___lwmod
 16884  1814  082C               	movf	??___lwmod,w
 16885  1815  07AD               	addwf	___lwmod@counter,f
 16886  1816                     l11517:	
 16887  1816  1FA9               	btfss	___lwmod@divisor+1,7
 16888  1817  2819               	goto	u13131
 16889  1818  281A               	goto	u13130
 16890  1819                     u13131:	
 16891  1819  280D               	goto	l11513
 16892  181A                     u13130:	
 16893  181A                     l11519:	
 16894  181A  0829               	movf	___lwmod@divisor+1,w
 16895  181B  022B               	subwf	___lwmod@dividend+1,w
 16896  181C  1D03               	skipz
 16897  181D  2820               	goto	u13145
 16898  181E  0828               	movf	___lwmod@divisor,w
 16899  181F  022A               	subwf	___lwmod@dividend,w
 16900  1820                     u13145:	
 16901  1820  1C03               	skipc
 16902  1821  2823               	goto	u13141
 16903  1822  2824               	goto	u13140
 16904  1823                     u13141:	
 16905  1823  2828               	goto	l11523
 16906  1824                     u13140:	
 16907  1824                     l11521:	
 16908  1824  0828               	movf	___lwmod@divisor,w
 16909  1825  02AA               	subwf	___lwmod@dividend,f
 16910  1826  0829               	movf	___lwmod@divisor+1,w
 16911  1827  3BAB               	subwfb	___lwmod@dividend+1,f
 16912  1828                     l11523:	
 16913  1828  3001               	movlw	1
 16914  1829                     u13155:	
 16915  1829  36A9               	lsrf	___lwmod@divisor+1,f
 16916  182A  0CA8               	rrf	___lwmod@divisor,f
 16917  182B  0B89               	decfsz	9,f
 16918  182C  2829               	goto	u13155
 16919  182D                     l11525:	
 16920  182D  3001               	movlw	1
 16921  182E  02AD               	subwf	___lwmod@counter,f
 16922  182F  1D03               	btfss	3,2
 16923  1830  2832               	goto	u13161
 16924  1831  2833               	goto	u13160
 16925  1832                     u13161:	
 16926  1832  281A               	goto	l11519
 16927  1833                     u13160:	
 16928  1833                     l11527:	
 16929  1833  082B               	movf	___lwmod@dividend+1,w
 16930  1834  00A9               	movwf	?___lwmod+1
 16931  1835  082A               	movf	___lwmod@dividend,w
 16932  1836  00A8               	movwf	?___lwmod
 16933  1837                     l2048:	
 16934  1837  0008               	return
 16935  1838                     __end_of___lwmod:	
 16936                           
 16937                           	psect	text36
 16938  262C                     __ptext36:	
 16939 ;; *************** function _LED_task_DMX *****************
 16940 ;; Defined at:
 16941 ;;		line 36 in file "led.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;		None
 16944 ;; Auto vars:     Size  Location     Type
 16945 ;;  dmx             4   62[BANK1 ] struct .
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      void 
 16948 ;; Registers used:
 16949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16956 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16957 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16958 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16959 ;;Total ram usage:        9 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    7
 16962 ;; This function calls:
 16963 ;;		_DMX_getAddress
 16964 ;;		_LED_setColor
 16965 ;; This function is called by:
 16966 ;;		_CONTROL_DMX
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           
 16971                           ;psect for function _LED_task_DMX
 16972  262C                     _LED_task_DMX:	
 16973  262C                     l11749:	
 16974                           ;incstack = 0
 16975                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16976                           
 16977                           
 16978                           ;led.c: 38:     color_t dmx;;led.c: 40:     dmx.red = dmxArray[DMX_getAddress()];
 16979  262C  3198  2000  31A6   	fcall	_DMX_getAddress
 16980  262F  0141               	movlb	1	; select bank1
 16981  2630  00D9               	movwf	??_LED_task_DMX^(0+128)
 16982  2631  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 16983  2632  35D9               	lslf	??_LED_task_DMX^(0+128),f
 16984  2633  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 16985  2634  30EE               	movlw	238
 16986  2635  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 16987  2636  3023               	movlw	35
 16988  2637  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 16989  2638  0859               	movf	??_LED_task_DMX^(0+128),w
 16990  2639  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 16991  263A  0086               	movwf	6
 16992  263B  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 16993  263C  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 16994  263D  0087               	movwf	7
 16995  263E  0801               	movf	1,w
 16996  263F  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 16997  2640  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 16998  2641  00DF               	movwf	(LED_task_DMX@dmx^(0+128)+1)
 16999                           
 17000                           ;led.c: 41:     dmx.green = dmxArray[DMX_getAddress() + 1];
 17001  2642  3198  2000  31A6   	fcall	_DMX_getAddress
 17002  2645  0141               	movlb	1	; select bank1
 17003  2646  00D9               	movwf	??_LED_task_DMX^(0+128)
 17004  2647  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 17005  2648  35D9               	lslf	??_LED_task_DMX^(0+128),f
 17006  2649  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 17007  264A  30F0               	movlw	240
 17008  264B  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 17009  264C  3023               	movlw	35
 17010  264D  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 17011  264E  0859               	movf	??_LED_task_DMX^(0+128),w
 17012  264F  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 17013  2650  0086               	movwf	6
 17014  2651  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 17015  2652  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 17016  2653  0087               	movwf	7
 17017  2654  0801               	movf	1,w
 17018  2655  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 17019  2656  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 17020  2657  00E0               	movwf	(LED_task_DMX@dmx^(0+128)+2)
 17021                           
 17022                           ;led.c: 42:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 17023  2658  3198  2000  31A6   	fcall	_DMX_getAddress
 17024  265B  0141               	movlb	1	; select bank1
 17025  265C  00D9               	movwf	??_LED_task_DMX^(0+128)
 17026  265D  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 17027  265E  35D9               	lslf	??_LED_task_DMX^(0+128),f
 17028  265F  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 17029  2660  30F2               	movlw	242
 17030  2661  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 17031  2662  3023               	movlw	35
 17032  2663  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 17033  2664  0859               	movf	??_LED_task_DMX^(0+128),w
 17034  2665  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 17035  2666  0086               	movwf	6
 17036  2667  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 17037  2668  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 17038  2669  0087               	movwf	7
 17039  266A  0801               	movf	1,w
 17040  266B  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 17041  266C  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 17042  266D  00E1               	movwf	(LED_task_DMX@dmx^(0+128)+3)
 17043                           
 17044                           ;led.c: 43:     dmx.white = dmxArray[DMX_getAddress() + 3];
 17045  266E  3198  2000  31A6   	fcall	_DMX_getAddress
 17046  2671  0141               	movlb	1	; select bank1
 17047  2672  00D9               	movwf	??_LED_task_DMX^(0+128)
 17048  2673  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 17049  2674  35D9               	lslf	??_LED_task_DMX^(0+128),f
 17050  2675  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 17051  2676  30F4               	movlw	244
 17052  2677  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 17053  2678  3023               	movlw	35
 17054  2679  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 17055  267A  0859               	movf	??_LED_task_DMX^(0+128),w
 17056  267B  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 17057  267C  0086               	movwf	6
 17058  267D  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 17059  267E  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 17060  267F  0087               	movwf	7
 17061  2680  0801               	movf	1,w
 17062  2681  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 17063  2682  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 17064  2683  00DE               	movwf	LED_task_DMX@dmx^(0+128)
 17065  2684                     l11751:	
 17066                           
 17067                           ;led.c: 45:     LED_setColor(dmx);
 17068  2684  0861               	movf	(LED_task_DMX@dmx+3)^(0+128),w
 17069  2685  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17070  2686  0860               	movf	(LED_task_DMX@dmx+2)^(0+128),w
 17071  2687  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17072  2688  085F               	movf	(LED_task_DMX@dmx+1)^(0+128),w
 17073  2689  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17074  268A  085E               	movf	LED_task_DMX@dmx^(0+128),w
 17075  268B  00D1               	movwf	LED_setColor@input^(0+128)
 17076  268C  3194  24AC  31A6   	fcall	_LED_setColor
 17077  268F                     l1427:	
 17078  268F  0008               	return
 17079  2690                     __end_of_LED_task_DMX:	
 17080                           
 17081                           	psect	text37
 17082  1800                     __ptext37:	
 17083 ;; *************** function _DMX_getAddress *****************
 17084 ;; Defined at:
 17085 ;;		line 75 in file "dmx.c"
 17086 ;; Parameters:    Size  Location     Type
 17087 ;;		None
 17088 ;; Auto vars:     Size  Location     Type
 17089 ;;		None
 17090 ;; Return value:  Size  Location     Type
 17091 ;;                  1    wreg      unsigned char 
 17092 ;; Registers used:
 17093 ;;		wreg
 17094 ;; Tracked objects:
 17095 ;;		On entry : 0/0
 17096 ;;		On exit  : 0/0
 17097 ;;		Unchanged: 0/0
 17098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17103 ;;Total ram usage:        0 bytes
 17104 ;; Hardware stack levels used:    1
 17105 ;; Hardware stack levels required when called:    4
 17106 ;; This function calls:
 17107 ;;		Nothing
 17108 ;; This function is called by:
 17109 ;;		_LED_task_DMX
 17110 ;; This function uses a non-reentrant model
 17111 ;;
 17112                           
 17113                           
 17114                           ;psect for function _DMX_getAddress
 17115  1800                     _DMX_getAddress:	
 17116  1800                     l11565:	
 17117                           ;incstack = 0
 17118                           ; Regs used in _DMX_getAddress: [wreg]
 17119                           
 17120                           
 17121                           ;dmx.c: 76:     return address;
 17122  1800  0142               	movlb	2	; select bank2
 17123  1801  0862               	movf	_address^(0+256),w
 17124  1802                     l1375:	
 17125  1802  0008               	return
 17126  1803                     __end_of_DMX_getAddress:	
 17127                           
 17128                           	psect	text38
 17129  07EF                     __ptext38:	
 17130 ;; *************** function _BUTTONS_isHeld *****************
 17131 ;; Defined at:
 17132 ;;		line 106 in file "buttons.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;  button          1    wreg     PTR struct .
 17135 ;;		 -> buttons(32), NULL(0), 
 17136 ;; Auto vars:     Size  Location     Type
 17137 ;;  button          1    0[BANK0 ] PTR struct .
 17138 ;;		 -> buttons(32), NULL(0), 
 17139 ;; Return value:  Size  Location     Type
 17140 ;;                  1    wreg      _Bool 
 17141 ;; Registers used:
 17142 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17143 ;; Tracked objects:
 17144 ;;		On entry : 0/0
 17145 ;;		On exit  : 0/0
 17146 ;;		Unchanged: 0/0
 17147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17151 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17152 ;;Total ram usage:        1 bytes
 17153 ;; Hardware stack levels used:    1
 17154 ;; Hardware stack levels required when called:    4
 17155 ;; This function calls:
 17156 ;;		Nothing
 17157 ;; This function is called by:
 17158 ;;		_CONTROL_DMX
 17159 ;;		_CONTROL_MANUAL
 17160 ;; This function uses a non-reentrant model
 17161 ;;
 17162                           
 17163                           
 17164                           ;psect for function _BUTTONS_isHeld
 17165  07EF                     _BUTTONS_isHeld:	
 17166                           
 17167                           ;incstack = 0
 17168                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 17169                           ;BUTTONS_isHeld@button stored from wreg
 17170  07EF  0140               	movlb	0	; select bank0
 17171  07F0  00A0               	movwf	BUTTONS_isHeld@button
 17172  07F1                     l11739:	
 17173                           
 17174                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 17175  07F1  0820               	movf	BUTTONS_isHeld@button,w
 17176  07F2  3E07               	addlw	7
 17177  07F3  0086               	movwf	6
 17178  07F4  3003               	movlw	3	; select bank6/7
 17179  07F5  0087               	movwf	7
 17180  07F6  3003               	movlw	3
 17181  07F7  0601               	xorwf	1,w
 17182  07F8  1D03               	btfss	3,2
 17183  07F9  2FFB               	goto	u13471
 17184  07FA  2FFC               	goto	u13470
 17185  07FB                     u13471:	
 17186  07FB  2FFE               	goto	l11745
 17187  07FC                     u13470:	
 17188  07FC                     l11741:	
 17189                           
 17190                           ;buttons.c: 108:         return 1;
 17191  07FC  3001               	movlw	1
 17192  07FD  2FFF               	goto	l931
 17193  07FE                     l11745:	
 17194                           
 17195                           ;buttons.c: 111:     return 0;
 17196  07FE  3000               	movlw	0
 17197  07FF                     l931:	
 17198  07FF  0008               	return
 17199  0800                     __end_of_BUTTONS_isHeld:	
 17200                           
 17201                           	psect	text39
 17202  161D                     __ptext39:	
 17203 ;; *************** function _LED_task_BEAT_STROBE *****************
 17204 ;; Defined at:
 17205 ;;		line 66 in file "led.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;		None
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;  beatState       1   59[BANK1 ] _Bool 
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      void 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0, pclath, cstack
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17220 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17221 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17222 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17223 ;;Total ram usage:        3 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:    8
 17226 ;; This function calls:
 17227 ;;		_BEAT_detected
 17228 ;;		_CLOCK_getTime
 17229 ;;		_LED_setColor
 17230 ;;		_beatColorCreator
 17231 ;; This function is called by:
 17232 ;;		_CONTROL_BEAT
 17233 ;; This function uses a non-reentrant model
 17234 ;;
 17235                           
 17236                           
 17237                           ;psect for function _LED_task_BEAT_STROBE
 17238  161D                     _LED_task_BEAT_STROBE:	
 17239  161D                     l11773:	
 17240                           ;incstack = 0
 17241                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 17242                           
 17243                           
 17244                           ;led.c: 68:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 17245  161D  31AD  2520  3196   	fcall	_CLOCK_getTime
 17246  1620  0142               	movlb	2	; select bank2
 17247  1621  082F               	movf	_lastLedActiveTime^(0+256),w
 17248  1622  0140               	movlb	0	; select bank0
 17249  1623  0220               	subwf	?_CLOCK_getTime,w
 17250  1624  0141               	movlb	1	; select bank1
 17251  1625  00D9               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 17252  1626  0142               	movlb	2	; select bank2
 17253  1627  0830               	movf	(_lastLedActiveTime+1)^(0+256),w
 17254  1628  0140               	movlb	0	; select bank0
 17255  1629  3B21               	subwfb	?_CLOCK_getTime+1,w
 17256  162A  0141               	movlb	1	; select bank1
 17257  162B  00DA               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 17258  162C  3000               	movlw	0
 17259  162D  025A               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 17260  162E  3032               	movlw	50
 17261  162F  1903               	skipnz
 17262  1630  0259               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 17263  1631  1803               	skipnc
 17264  1632  2E34               	goto	u13501
 17265  1633  2E35               	goto	u13500
 17266  1634                     u13501:	
 17267  1634  2E36               	goto	l11777
 17268  1635                     u13500:	
 17269  1635  2FFF               	goto	l1437
 17270  1636                     l11777:	
 17271                           
 17272                           ;led.c: 72:     lastLedActiveTime = CLOCK_getTime();
 17273  1636  31AD  2520  3196   	fcall	_CLOCK_getTime
 17274  1639  0140               	movlb	0	; select bank0
 17275  163A  0821               	movf	?_CLOCK_getTime+1,w
 17276  163B  0142               	movlb	2	; select bank2
 17277  163C  00B0               	movwf	(_lastLedActiveTime+1)^(0+256)
 17278  163D  0140               	movlb	0	; select bank0
 17279  163E  0820               	movf	?_CLOCK_getTime,w
 17280  163F  0142               	movlb	2	; select bank2
 17281  1640  00AF               	movwf	_lastLedActiveTime^(0+256)
 17282  1641                     l11779:	
 17283                           
 17284                           ;led.c: 74:     LATC5 = 0;
 17285  1641  0140               	movlb	0	; select bank0
 17286  1642  129A               	bcf	26,5	;volatile
 17287  1643                     l11781:	
 17288                           
 17289                           ;led.c: 75:     _Bool beatState = BEAT_detected();
 17290  1643  31AD  2572  3196   	fcall	_BEAT_detected
 17291  1646  0141               	movlb	1	; select bank1
 17292  1647  00D9               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 17293  1648  0859               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 17294  1649  00DB               	movwf	LED_task_BEAT_STROBE@beatState^(0+128)
 17295  164A                     l11783:	
 17296                           
 17297                           ;led.c: 77:     if (beatState) {
 17298  164A  085B               	movf	LED_task_BEAT_STROBE@beatState^(0+128),w
 17299  164B  1903               	btfsc	3,2
 17300  164C  2E4E               	goto	u13511
 17301  164D  2E4F               	goto	u13510
 17302  164E                     u13511:	
 17303  164E  2E51               	goto	l11787
 17304  164F                     u13510:	
 17305  164F                     l11785:	
 17306                           
 17307                           ;led.c: 78:         LATC5 = 1;
 17308  164F  0140               	movlb	0	; select bank0
 17309  1650  169A               	bsf	26,5	;volatile
 17310  1651                     l11787:	
 17311                           
 17312                           ;led.c: 81:      if(!beatState){
 17313  1651  0141               	movlb	1	; select bank1
 17314  1652  085B               	movf	LED_task_BEAT_STROBE@beatState^(0+128),w
 17315  1653  1D03               	btfss	3,2
 17316  1654  2E56               	goto	u13521
 17317  1655  2E57               	goto	u13520
 17318  1656                     u13521:	
 17319  1656  2E6B               	goto	l11791
 17320  1657                     u13520:	
 17321  1657                     l11789:	
 17322                           
 17323                           ;led.c: 82:          LED_setColor(beatColorCreator(0,0,0,0));
 17324  1657  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17325  1658  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17326  1659  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17327  165A  3000               	movlw	0
 17328  165B  3199  2146  3196   	fcall	_beatColorCreator
 17329  165E  0141               	movlb	1	; select bank1
 17330  165F  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17331  1660  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17332  1661  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17333  1662  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17334  1663  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17335  1664  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17336  1665  0843               	movf	?_beatColorCreator^(0+128),w
 17337  1666  00D1               	movwf	LED_setColor@input^(0+128)
 17338  1667  3194  24AC  3196   	fcall	_LED_setColor
 17339                           
 17340                           ;led.c: 83:     } else if (currentState == 1){
 17341  166A  2FFF               	goto	l1437
 17342  166B                     l11791:	
 17343  166B  0370               	decf	_currentState,w
 17344  166C  0471               	iorwf	_currentState+1,w
 17345  166D  1D03               	btfss	3,2
 17346  166E  2E70               	goto	u13531
 17347  166F  2E71               	goto	u13530
 17348  1670                     u13531:	
 17349  1670  2E8A               	goto	l11797
 17350  1671                     u13530:	
 17351  1671                     l11793:	
 17352                           
 17353                           ;led.c: 84:         LED_setColor(beatColorCreator(0,0,0,1));
 17354  1671  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17355  1672  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17356  1673  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17357  1674  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17358  1675  3000               	movlw	0
 17359  1676  3199  2146  3196   	fcall	_beatColorCreator
 17360  1679  0141               	movlb	1	; select bank1
 17361  167A  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17362  167B  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17363  167C  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17364  167D  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17365  167E  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17366  167F  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17367  1680  0843               	movf	?_beatColorCreator^(0+128),w
 17368  1681  00D1               	movwf	LED_setColor@input^(0+128)
 17369  1682  3194  24AC  3196   	fcall	_LED_setColor
 17370  1685                     l11795:	
 17371                           
 17372                           ;led.c: 85:         currentState++;
 17373  1685  3001               	movlw	1
 17374  1686  07F0               	addwf	_currentState,f
 17375  1687  3000               	movlw	0
 17376  1688  3DF1               	addwfc	_currentState+1,f
 17377                           
 17378                           ;led.c: 86:     } else if(currentState == 2){
 17379  1689  2FFF               	goto	l1437
 17380  168A                     l11797:	
 17381  168A  3002               	movlw	2
 17382  168B  0670               	xorwf	_currentState,w
 17383  168C  0471               	iorwf	_currentState+1,w
 17384  168D  1D03               	btfss	3,2
 17385  168E  2E90               	goto	u13541
 17386  168F  2E91               	goto	u13540
 17387  1690                     u13541:	
 17388  1690  2EA7               	goto	l11803
 17389  1691                     u13540:	
 17390  1691                     l11799:	
 17391                           
 17392                           ;led.c: 87:          LED_setColor(beatColorCreator(0,1,0,1));
 17393  1691  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17394  1692  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17395  1693  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17396  1694  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17397  1695  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17398  1696  3000               	movlw	0
 17399  1697  3199  2146  3196   	fcall	_beatColorCreator
 17400  169A  0141               	movlb	1	; select bank1
 17401  169B  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17402  169C  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17403  169D  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17404  169E  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17405  169F  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17406  16A0  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17407  16A1  0843               	movf	?_beatColorCreator^(0+128),w
 17408  16A2  00D1               	movwf	LED_setColor@input^(0+128)
 17409  16A3  3194  24AC  3196   	fcall	_LED_setColor
 17410  16A6  2E85               	goto	l11795
 17411  16A7                     l11803:	
 17412  16A7  3003               	movlw	3
 17413  16A8  0670               	xorwf	_currentState,w
 17414  16A9  0471               	iorwf	_currentState+1,w
 17415  16AA  1D03               	btfss	3,2
 17416  16AB  2EAD               	goto	u13551
 17417  16AC  2EAE               	goto	u13550
 17418  16AD                     u13551:	
 17419  16AD  2EC4               	goto	l11809
 17420  16AE                     u13550:	
 17421  16AE                     l11805:	
 17422                           
 17423                           ;led.c: 90:          LED_setColor(beatColorCreator(0,1,1,0));
 17424  16AE  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17425  16AF  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17426  16B0  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17427  16B1  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17428  16B2  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17429  16B3  3000               	movlw	0
 17430  16B4  3199  2146  3196   	fcall	_beatColorCreator
 17431  16B7  0141               	movlb	1	; select bank1
 17432  16B8  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17433  16B9  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17434  16BA  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17435  16BB  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17436  16BC  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17437  16BD  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17438  16BE  0843               	movf	?_beatColorCreator^(0+128),w
 17439  16BF  00D1               	movwf	LED_setColor@input^(0+128)
 17440  16C0  3194  24AC  3196   	fcall	_LED_setColor
 17441  16C3  2E85               	goto	l11795
 17442  16C4                     l11809:	
 17443  16C4  3004               	movlw	4
 17444  16C5  0670               	xorwf	_currentState,w
 17445  16C6  0471               	iorwf	_currentState+1,w
 17446  16C7  1D03               	btfss	3,2
 17447  16C8  2ECA               	goto	u13561
 17448  16C9  2ECB               	goto	u13560
 17449  16CA                     u13561:	
 17450  16CA  2EE1               	goto	l11815
 17451  16CB                     u13560:	
 17452  16CB                     l11811:	
 17453                           
 17454                           ;led.c: 93:          LED_setColor(beatColorCreator(1,0,1,1));
 17455  16CB  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17456  16CC  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17457  16CD  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17458  16CE  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17459  16CF  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17460  16D0  3001               	movlw	1
 17461  16D1  3199  2146  3196   	fcall	_beatColorCreator
 17462  16D4  0141               	movlb	1	; select bank1
 17463  16D5  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17464  16D6  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17465  16D7  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17466  16D8  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17467  16D9  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17468  16DA  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17469  16DB  0843               	movf	?_beatColorCreator^(0+128),w
 17470  16DC  00D1               	movwf	LED_setColor@input^(0+128)
 17471  16DD  3194  24AC  3196   	fcall	_LED_setColor
 17472  16E0  2E85               	goto	l11795
 17473  16E1                     l11815:	
 17474  16E1  3005               	movlw	5
 17475  16E2  0670               	xorwf	_currentState,w
 17476  16E3  0471               	iorwf	_currentState+1,w
 17477  16E4  1D03               	btfss	3,2
 17478  16E5  2EE7               	goto	u13571
 17479  16E6  2EE8               	goto	u13570
 17480  16E7                     u13571:	
 17481  16E7  2EFE               	goto	l11821
 17482  16E8                     u13570:	
 17483  16E8                     l11817:	
 17484                           
 17485                           ;led.c: 96:         LED_setColor(beatColorCreator(0,1,1,0));
 17486  16E8  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17487  16E9  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17488  16EA  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17489  16EB  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17490  16EC  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17491  16ED  3000               	movlw	0
 17492  16EE  3199  2146  3196   	fcall	_beatColorCreator
 17493  16F1  0141               	movlb	1	; select bank1
 17494  16F2  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17495  16F3  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17496  16F4  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17497  16F5  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17498  16F6  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17499  16F7  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17500  16F8  0843               	movf	?_beatColorCreator^(0+128),w
 17501  16F9  00D1               	movwf	LED_setColor@input^(0+128)
 17502  16FA  3194  24AC  3196   	fcall	_LED_setColor
 17503  16FD  2E85               	goto	l11795
 17504  16FE                     l11821:	
 17505  16FE  3006               	movlw	6
 17506  16FF  0670               	xorwf	_currentState,w
 17507  1700  0471               	iorwf	_currentState+1,w
 17508  1701  1D03               	btfss	3,2
 17509  1702  2F04               	goto	u13581
 17510  1703  2F05               	goto	u13580
 17511  1704                     u13581:	
 17512  1704  2F1B               	goto	l11827
 17513  1705                     u13580:	
 17514  1705                     l11823:	
 17515                           
 17516                           ;led.c: 99:         LED_setColor(beatColorCreator(1,1,1,0));
 17517  1705  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17518  1706  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17519  1707  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17520  1708  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17521  1709  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17522  170A  3001               	movlw	1
 17523  170B  3199  2146  3196   	fcall	_beatColorCreator
 17524  170E  0141               	movlb	1	; select bank1
 17525  170F  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17526  1710  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17527  1711  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17528  1712  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17529  1713  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17530  1714  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17531  1715  0843               	movf	?_beatColorCreator^(0+128),w
 17532  1716  00D1               	movwf	LED_setColor@input^(0+128)
 17533  1717  3194  24AC  3196   	fcall	_LED_setColor
 17534  171A  2E85               	goto	l11795
 17535  171B                     l11827:	
 17536  171B  3008               	movlw	8
 17537  171C  0670               	xorwf	_currentState,w
 17538  171D  0471               	iorwf	_currentState+1,w
 17539  171E  1D03               	btfss	3,2
 17540  171F  2F21               	goto	u13591
 17541  1720  2F22               	goto	u13590
 17542  1721                     u13591:	
 17543  1721  2F38               	goto	l11833
 17544  1722                     u13590:	
 17545  1722                     l11829:	
 17546                           
 17547                           ;led.c: 102:         LED_setColor(beatColorCreator(1,1,0,1));
 17548  1722  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17549  1723  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17550  1724  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17551  1725  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17552  1726  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17553  1727  3001               	movlw	1
 17554  1728  3199  2146  3196   	fcall	_beatColorCreator
 17555  172B  0141               	movlb	1	; select bank1
 17556  172C  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17557  172D  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17558  172E  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17559  172F  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17560  1730  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17561  1731  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17562  1732  0843               	movf	?_beatColorCreator^(0+128),w
 17563  1733  00D1               	movwf	LED_setColor@input^(0+128)
 17564  1734  3194  24AC  3196   	fcall	_LED_setColor
 17565  1737  2E85               	goto	l11795
 17566  1738                     l11833:	
 17567  1738  3009               	movlw	9
 17568  1739  0670               	xorwf	_currentState,w
 17569  173A  0471               	iorwf	_currentState+1,w
 17570  173B  1D03               	btfss	3,2
 17571  173C  2F3E               	goto	u13601
 17572  173D  2F3F               	goto	u13600
 17573  173E                     u13601:	
 17574  173E  2F55               	goto	l11839
 17575  173F                     u13600:	
 17576  173F                     l11835:	
 17577                           
 17578                           ;led.c: 105:          LED_setColor(beatColorCreator(0,1,0,1));
 17579  173F  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17580  1740  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17581  1741  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17582  1742  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17583  1743  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17584  1744  3000               	movlw	0
 17585  1745  3199  2146  3196   	fcall	_beatColorCreator
 17586  1748  0141               	movlb	1	; select bank1
 17587  1749  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17588  174A  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17589  174B  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17590  174C  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17591  174D  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17592  174E  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17593  174F  0843               	movf	?_beatColorCreator^(0+128),w
 17594  1750  00D1               	movwf	LED_setColor@input^(0+128)
 17595  1751  3194  24AC  3196   	fcall	_LED_setColor
 17596  1754  2E85               	goto	l11795
 17597  1755                     l11839:	
 17598  1755  300A               	movlw	10
 17599  1756  0670               	xorwf	_currentState,w
 17600  1757  0471               	iorwf	_currentState+1,w
 17601  1758  1D03               	btfss	3,2
 17602  1759  2F5B               	goto	u13611
 17603  175A  2F5C               	goto	u13610
 17604  175B                     u13611:	
 17605  175B  2F72               	goto	l11845
 17606  175C                     u13610:	
 17607  175C                     l11841:	
 17608                           
 17609                           ;led.c: 108:          LED_setColor(beatColorCreator(0,0,1,1));
 17610  175C  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17611  175D  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17612  175E  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17613  175F  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17614  1760  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17615  1761  3000               	movlw	0
 17616  1762  3199  2146  3196   	fcall	_beatColorCreator
 17617  1765  0141               	movlb	1	; select bank1
 17618  1766  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17619  1767  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17620  1768  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17621  1769  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17622  176A  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17623  176B  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17624  176C  0843               	movf	?_beatColorCreator^(0+128),w
 17625  176D  00D1               	movwf	LED_setColor@input^(0+128)
 17626  176E  3194  24AC  3196   	fcall	_LED_setColor
 17627  1771  2E85               	goto	l11795
 17628  1772                     l11845:	
 17629  1772  300B               	movlw	11
 17630  1773  0670               	xorwf	_currentState,w
 17631  1774  0471               	iorwf	_currentState+1,w
 17632  1775  1D03               	btfss	3,2
 17633  1776  2F78               	goto	u13621
 17634  1777  2F79               	goto	u13620
 17635  1778                     u13621:	
 17636  1778  2F8E               	goto	l11851
 17637  1779                     u13620:	
 17638  1779                     l11847:	
 17639                           
 17640                           ;led.c: 111:          LED_setColor(beatColorCreator(1,0,1,0));
 17641  1779  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17642  177A  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17643  177B  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17644  177C  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17645  177D  3001               	movlw	1
 17646  177E  3199  2146  3196   	fcall	_beatColorCreator
 17647  1781  0141               	movlb	1	; select bank1
 17648  1782  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17649  1783  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17650  1784  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17651  1785  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17652  1786  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17653  1787  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17654  1788  0843               	movf	?_beatColorCreator^(0+128),w
 17655  1789  00D1               	movwf	LED_setColor@input^(0+128)
 17656  178A  3194  24AC  3196   	fcall	_LED_setColor
 17657  178D  2E85               	goto	l11795
 17658  178E                     l11851:	
 17659  178E  300C               	movlw	12
 17660  178F  0670               	xorwf	_currentState,w
 17661  1790  0471               	iorwf	_currentState+1,w
 17662  1791  1D03               	btfss	3,2
 17663  1792  2F94               	goto	u13631
 17664  1793  2F95               	goto	u13630
 17665  1794                     u13631:	
 17666  1794  2FAA               	goto	l11857
 17667  1795                     u13630:	
 17668  1795                     l11853:	
 17669                           
 17670                           ;led.c: 114:         LED_setColor(beatColorCreator(1,0,0,1));
 17671  1795  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17672  1796  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17673  1797  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17674  1798  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17675  1799  3001               	movlw	1
 17676  179A  3199  2146  3196   	fcall	_beatColorCreator
 17677  179D  0141               	movlb	1	; select bank1
 17678  179E  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17679  179F  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17680  17A0  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17681  17A1  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17682  17A2  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17683  17A3  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17684  17A4  0843               	movf	?_beatColorCreator^(0+128),w
 17685  17A5  00D1               	movwf	LED_setColor@input^(0+128)
 17686  17A6  3194  24AC  3196   	fcall	_LED_setColor
 17687  17A9  2E85               	goto	l11795
 17688  17AA                     l11857:	
 17689  17AA  300D               	movlw	13
 17690  17AB  0670               	xorwf	_currentState,w
 17691  17AC  0471               	iorwf	_currentState+1,w
 17692  17AD  1D03               	btfss	3,2
 17693  17AE  2FB0               	goto	u13641
 17694  17AF  2FB1               	goto	u13640
 17695  17B0                     u13641:	
 17696  17B0  2FC8               	goto	l11863
 17697  17B1                     u13640:	
 17698  17B1                     l11859:	
 17699                           
 17700                           ;led.c: 117:         LED_setColor(beatColorCreator(1,1,1,1));
 17701  17B1  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17702  17B2  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17703  17B3  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17704  17B4  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17705  17B5  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17706  17B6  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17707  17B7  3001               	movlw	1
 17708  17B8  3199  2146  3196   	fcall	_beatColorCreator
 17709  17BB  0141               	movlb	1	; select bank1
 17710  17BC  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17711  17BD  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17712  17BE  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17713  17BF  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17714  17C0  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17715  17C1  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17716  17C2  0843               	movf	?_beatColorCreator^(0+128),w
 17717  17C3  00D1               	movwf	LED_setColor@input^(0+128)
 17718  17C4  3194  24AC  3196   	fcall	_LED_setColor
 17719  17C7  2E85               	goto	l11795
 17720  17C8                     l11863:	
 17721  17C8  300E               	movlw	14
 17722  17C9  0670               	xorwf	_currentState,w
 17723  17CA  0471               	iorwf	_currentState+1,w
 17724  17CB  1D03               	btfss	3,2
 17725  17CC  2FCE               	goto	u13651
 17726  17CD  2FCF               	goto	u13650
 17727  17CE                     u13651:	
 17728  17CE  2FE5               	goto	l11869
 17729  17CF                     u13650:	
 17730  17CF                     l11865:	
 17731                           
 17732                           ;led.c: 120:         LED_setColor(beatColorCreator(0,1,0,1));
 17733  17CF  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17734  17D0  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17735  17D1  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17736  17D2  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17737  17D3  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17738  17D4  3000               	movlw	0
 17739  17D5  3199  2146  3196   	fcall	_beatColorCreator
 17740  17D8  0141               	movlb	1	; select bank1
 17741  17D9  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17742  17DA  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17743  17DB  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17744  17DC  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17745  17DD  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17746  17DE  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17747  17DF  0843               	movf	?_beatColorCreator^(0+128),w
 17748  17E0  00D1               	movwf	LED_setColor@input^(0+128)
 17749  17E1  3194  24AC  3196   	fcall	_LED_setColor
 17750  17E4  2E85               	goto	l11795
 17751  17E5                     l11869:	
 17752                           
 17753                           ;led.c: 123:         LED_setColor(beatColorCreator(0,1,1,1));
 17754  17E5  01C3               	clrf	beatColorCreator@inGreen^(0+128)
 17755  17E6  0AC3               	incf	beatColorCreator@inGreen^(0+128),f
 17756  17E7  01C4               	clrf	beatColorCreator@inBlue^(0+128)
 17757  17E8  0AC4               	incf	beatColorCreator@inBlue^(0+128),f
 17758  17E9  01C5               	clrf	beatColorCreator@inWhite^(0+128)
 17759  17EA  0AC5               	incf	beatColorCreator@inWhite^(0+128),f
 17760  17EB  3000               	movlw	0
 17761  17EC  3199  2146  3196   	fcall	_beatColorCreator
 17762  17EF  0141               	movlb	1	; select bank1
 17763  17F0  0846               	movf	(?_beatColorCreator+3)^(0+128),w
 17764  17F1  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 17765  17F2  0845               	movf	(?_beatColorCreator+2)^(0+128),w
 17766  17F3  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 17767  17F4  0844               	movf	(?_beatColorCreator+1)^(0+128),w
 17768  17F5  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 17769  17F6  0843               	movf	?_beatColorCreator^(0+128),w
 17770  17F7  00D1               	movwf	LED_setColor@input^(0+128)
 17771  17F8  3194  24AC  3196   	fcall	_LED_setColor
 17772  17FB                     l11871:	
 17773                           
 17774                           ;led.c: 124:         currentState = 1;
 17775  17FB  3001               	movlw	1
 17776  17FC  00F0               	movwf	_currentState
 17777  17FD  3000               	movlw	0
 17778  17FE  00F1               	movwf	_currentState+1
 17779  17FF                     l1437:	
 17780  17FF  0008               	return
 17781  1800                     __end_of_LED_task_BEAT_STROBE:	
 17782                           
 17783                           	psect	text40
 17784  1946                     __ptext40:	
 17785 ;; *************** function _beatColorCreator *****************
 17786 ;; Defined at:
 17787 ;;		line 148 in file "led.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;  inRed           1    wreg     _Bool 
 17790 ;;  inGreen         1   35[BANK1 ] _Bool 
 17791 ;;  inBlue          1   36[BANK1 ] _Bool 
 17792 ;;  inWhite         1   37[BANK1 ] _Bool 
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;  inRed           1   40[BANK1 ] _Bool 
 17795 ;;  tempColor       4   45[BANK1 ] struct .
 17796 ;; Return value:  Size  Location     Type
 17797 ;;                  4   35[BANK1 ] struct .
 17798 ;; Registers used:
 17799 ;;		wreg, status,2, status,0, pclath, cstack
 17800 ;; Tracked objects:
 17801 ;;		On entry : 0/0
 17802 ;;		On exit  : 0/0
 17803 ;;		Unchanged: 0/0
 17804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17805 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17806 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17808 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17809 ;;Total ram usage:       14 bytes
 17810 ;; Hardware stack levels used:    1
 17811 ;; Hardware stack levels required when called:    7
 17812 ;; This function calls:
 17813 ;;		___fltol
 17814 ;;		_beatBrightnessCalculation
 17815 ;; This function is called by:
 17816 ;;		_LED_task_BEAT_STROBE
 17817 ;;		_resetColor
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           
 17822                           ;psect for function _beatColorCreator
 17823  1946                     _beatColorCreator:	
 17824                           
 17825                           ;incstack = 0
 17826                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 17827                           ;beatColorCreator@inRed stored from wreg
 17828  1946  0141               	movlb	1	; select bank1
 17829  1947  00C8               	movwf	beatColorCreator@inRed^(0+128)
 17830  1948                     l11571:	
 17831                           
 17832                           ;led.c: 149:     color_t tempColor;;led.c: 151:     if(inRed)
 17833  1948  0848               	movf	beatColorCreator@inRed^(0+128),w
 17834  1949  1903               	btfsc	3,2
 17835  194A  294C               	goto	u13191
 17836  194B  294D               	goto	u13190
 17837  194C                     u13191:	
 17838  194C  296A               	goto	l11575
 17839  194D                     u13190:	
 17840  194D                     l11573:	
 17841                           
 17842                           ;led.c: 152:         tempColor.red = beatBrightnessCalculation();
 17843  194D  3198  2038  3199   	fcall	_beatBrightnessCalculation
 17844  1950  0141               	movlb	1	; select bank1
 17845  1951  083C               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 17846  1952  00CC               	movwf	(_beatColorCreator$4196+3)^(0+128)
 17847  1953  083B               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 17848  1954  00CB               	movwf	(_beatColorCreator$4196+2)^(0+128)
 17849  1955  083A               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 17850  1956  00CA               	movwf	(_beatColorCreator$4196+1)^(0+128)
 17851  1957  0839               	movf	?_beatBrightnessCalculation^(0+128),w
 17852  1958  00C9               	movwf	_beatColorCreator$4196^(0+128)
 17853                           
 17854                           ;led.c: 152:         tempColor.red = beatBrightnessCalculation();
 17855  1959  084C               	movf	(_beatColorCreator$4196+3)^(0+128),w
 17856  195A  00B3               	movwf	(___fltol@f1+3)^(0+128)
 17857  195B  084B               	movf	(_beatColorCreator$4196+2)^(0+128),w
 17858  195C  00B2               	movwf	(___fltol@f1+2)^(0+128)
 17859  195D  084A               	movf	(_beatColorCreator$4196+1)^(0+128),w
 17860  195E  00B1               	movwf	(___fltol@f1+1)^(0+128)
 17861  195F  0849               	movf	_beatColorCreator$4196^(0+128),w
 17862  1960  00B0               	movwf	___fltol@f1^(0+128)
 17863  1961  31A7  2780  3199   	fcall	___fltol
 17864  1964  0141               	movlb	1	; select bank1
 17865  1965  0830               	movf	?___fltol^(0+128),w
 17866  1966  00C7               	movwf	??_beatColorCreator^(0+128)
 17867  1967  0847               	movf	??_beatColorCreator^(0+128),w
 17868  1968  00CE               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 17869  1969  296B               	goto	l11577
 17870  196A                     l11575:	
 17871                           
 17872                           ;led.c: 154:         tempColor.red = 0;
 17873  196A  01CE               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 17874  196B                     l11577:	
 17875                           
 17876                           ;led.c: 156:     if(inBlue)
 17877  196B  0844               	movf	beatColorCreator@inBlue^(0+128),w
 17878  196C  1903               	btfsc	3,2
 17879  196D  296F               	goto	u13201
 17880  196E  2970               	goto	u13200
 17881  196F                     u13201:	
 17882  196F  298D               	goto	l11581
 17883  1970                     u13200:	
 17884  1970                     l11579:	
 17885                           
 17886                           ;led.c: 157:         tempColor.blue = beatBrightnessCalculation();
 17887  1970  3198  2038  3199   	fcall	_beatBrightnessCalculation
 17888  1973  0141               	movlb	1	; select bank1
 17889  1974  083C               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 17890  1975  00CC               	movwf	(_beatColorCreator$4196+3)^(0+128)
 17891  1976  083B               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 17892  1977  00CB               	movwf	(_beatColorCreator$4196+2)^(0+128)
 17893  1978  083A               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 17894  1979  00CA               	movwf	(_beatColorCreator$4196+1)^(0+128)
 17895  197A  0839               	movf	?_beatBrightnessCalculation^(0+128),w
 17896  197B  00C9               	movwf	_beatColorCreator$4196^(0+128)
 17897                           
 17898                           ;led.c: 157:         tempColor.blue = beatBrightnessCalculation();
 17899  197C  084C               	movf	(_beatColorCreator$4196+3)^(0+128),w
 17900  197D  00B3               	movwf	(___fltol@f1+3)^(0+128)
 17901  197E  084B               	movf	(_beatColorCreator$4196+2)^(0+128),w
 17902  197F  00B2               	movwf	(___fltol@f1+2)^(0+128)
 17903  1980  084A               	movf	(_beatColorCreator$4196+1)^(0+128),w
 17904  1981  00B1               	movwf	(___fltol@f1+1)^(0+128)
 17905  1982  0849               	movf	_beatColorCreator$4196^(0+128),w
 17906  1983  00B0               	movwf	___fltol@f1^(0+128)
 17907  1984  31A7  2780  3199   	fcall	___fltol
 17908  1987  0141               	movlb	1	; select bank1
 17909  1988  0830               	movf	?___fltol^(0+128),w
 17910  1989  00C7               	movwf	??_beatColorCreator^(0+128)
 17911  198A  0847               	movf	??_beatColorCreator^(0+128),w
 17912  198B  00D0               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 17913  198C  298E               	goto	l11583
 17914  198D                     l11581:	
 17915                           
 17916                           ;led.c: 159:         tempColor.blue = 0;
 17917  198D  01D0               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 17918  198E                     l11583:	
 17919                           
 17920                           ;led.c: 161:     if(inGreen)
 17921  198E  0843               	movf	beatColorCreator@inGreen^(0+128),w
 17922  198F  1903               	btfsc	3,2
 17923  1990  2992               	goto	u13211
 17924  1991  2993               	goto	u13210
 17925  1992                     u13211:	
 17926  1992  29B0               	goto	l11587
 17927  1993                     u13210:	
 17928  1993                     l11585:	
 17929                           
 17930                           ;led.c: 162:         tempColor.green = beatBrightnessCalculation();
 17931  1993  3198  2038  3199   	fcall	_beatBrightnessCalculation
 17932  1996  0141               	movlb	1	; select bank1
 17933  1997  083C               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 17934  1998  00CC               	movwf	(_beatColorCreator$4196+3)^(0+128)
 17935  1999  083B               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 17936  199A  00CB               	movwf	(_beatColorCreator$4196+2)^(0+128)
 17937  199B  083A               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 17938  199C  00CA               	movwf	(_beatColorCreator$4196+1)^(0+128)
 17939  199D  0839               	movf	?_beatBrightnessCalculation^(0+128),w
 17940  199E  00C9               	movwf	_beatColorCreator$4196^(0+128)
 17941                           
 17942                           ;led.c: 162:         tempColor.green = beatBrightnessCalculation();
 17943  199F  084C               	movf	(_beatColorCreator$4196+3)^(0+128),w
 17944  19A0  00B3               	movwf	(___fltol@f1+3)^(0+128)
 17945  19A1  084B               	movf	(_beatColorCreator$4196+2)^(0+128),w
 17946  19A2  00B2               	movwf	(___fltol@f1+2)^(0+128)
 17947  19A3  084A               	movf	(_beatColorCreator$4196+1)^(0+128),w
 17948  19A4  00B1               	movwf	(___fltol@f1+1)^(0+128)
 17949  19A5  0849               	movf	_beatColorCreator$4196^(0+128),w
 17950  19A6  00B0               	movwf	___fltol@f1^(0+128)
 17951  19A7  31A7  2780  3199   	fcall	___fltol
 17952  19AA  0141               	movlb	1	; select bank1
 17953  19AB  0830               	movf	?___fltol^(0+128),w
 17954  19AC  00C7               	movwf	??_beatColorCreator^(0+128)
 17955  19AD  0847               	movf	??_beatColorCreator^(0+128),w
 17956  19AE  00CF               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 17957  19AF  29B1               	goto	l11589
 17958  19B0                     l11587:	
 17959                           
 17960                           ;led.c: 164:         tempColor.green = 0;
 17961  19B0  01CF               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 17962  19B1                     l11589:	
 17963                           
 17964                           ;led.c: 166:     if(inWhite)
 17965  19B1  0845               	movf	beatColorCreator@inWhite^(0+128),w
 17966  19B2  1903               	btfsc	3,2
 17967  19B3  29B5               	goto	u13221
 17968  19B4  29B6               	goto	u13220
 17969  19B5                     u13221:	
 17970  19B5  29D3               	goto	l11593
 17971  19B6                     u13220:	
 17972  19B6                     l11591:	
 17973                           
 17974                           ;led.c: 167:         tempColor.white = beatBrightnessCalculation();
 17975  19B6  3198  2038  3199   	fcall	_beatBrightnessCalculation
 17976  19B9  0141               	movlb	1	; select bank1
 17977  19BA  083C               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 17978  19BB  00CC               	movwf	(_beatColorCreator$4196+3)^(0+128)
 17979  19BC  083B               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 17980  19BD  00CB               	movwf	(_beatColorCreator$4196+2)^(0+128)
 17981  19BE  083A               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 17982  19BF  00CA               	movwf	(_beatColorCreator$4196+1)^(0+128)
 17983  19C0  0839               	movf	?_beatBrightnessCalculation^(0+128),w
 17984  19C1  00C9               	movwf	_beatColorCreator$4196^(0+128)
 17985                           
 17986                           ;led.c: 167:         tempColor.white = beatBrightnessCalculation();
 17987  19C2  084C               	movf	(_beatColorCreator$4196+3)^(0+128),w
 17988  19C3  00B3               	movwf	(___fltol@f1+3)^(0+128)
 17989  19C4  084B               	movf	(_beatColorCreator$4196+2)^(0+128),w
 17990  19C5  00B2               	movwf	(___fltol@f1+2)^(0+128)
 17991  19C6  084A               	movf	(_beatColorCreator$4196+1)^(0+128),w
 17992  19C7  00B1               	movwf	(___fltol@f1+1)^(0+128)
 17993  19C8  0849               	movf	_beatColorCreator$4196^(0+128),w
 17994  19C9  00B0               	movwf	___fltol@f1^(0+128)
 17995  19CA  31A7  2780  3199   	fcall	___fltol
 17996  19CD  0141               	movlb	1	; select bank1
 17997  19CE  0830               	movf	?___fltol^(0+128),w
 17998  19CF  00C7               	movwf	??_beatColorCreator^(0+128)
 17999  19D0  0847               	movf	??_beatColorCreator^(0+128),w
 18000  19D1  00CD               	movwf	beatColorCreator@tempColor^(0+128)
 18001  19D2  29D4               	goto	l11595
 18002  19D3                     l11593:	
 18003                           
 18004                           ;led.c: 169:         tempColor.white = 0;
 18005  19D3  01CD               	clrf	beatColorCreator@tempColor^(0+128)
 18006  19D4                     l11595:	
 18007                           
 18008                           ;led.c: 171:     return tempColor;
 18009  19D4  0850               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 18010  19D5  00C6               	movwf	(?_beatColorCreator+3)^(0+128)
 18011  19D6  084F               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 18012  19D7  00C5               	movwf	(?_beatColorCreator+2)^(0+128)
 18013  19D8  084E               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 18014  19D9  00C4               	movwf	(?_beatColorCreator+1)^(0+128)
 18015  19DA  084D               	movf	beatColorCreator@tempColor^(0+128),w
 18016  19DB  00C3               	movwf	?_beatColorCreator^(0+128)
 18017  19DC                     l1486:	
 18018  19DC  0008               	return
 18019  19DD                     __end_of_beatColorCreator:	
 18020                           
 18021                           	psect	text41
 18022  1838                     __ptext41:	
 18023 ;; *************** function _beatBrightnessCalculation *****************
 18024 ;; Defined at:
 18025 ;;		line 129 in file "led.c"
 18026 ;; Parameters:    Size  Location     Type
 18027 ;;		None
 18028 ;; Auto vars:     Size  Location     Type
 18029 ;;  temp            1   34[BANK1 ] unsigned char 
 18030 ;; Return value:  Size  Location     Type
 18031 ;;                  4   25[BANK1 ] float 
 18032 ;; Registers used:
 18033 ;;		wreg, status,2, status,0, pclath, cstack
 18034 ;; Tracked objects:
 18035 ;;		On entry : 0/0
 18036 ;;		On exit  : 0/0
 18037 ;;		Unchanged: 0/0
 18038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18039 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18040 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18041 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18042 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18043 ;;Total ram usage:       10 bytes
 18044 ;; Hardware stack levels used:    1
 18045 ;; Hardware stack levels required when called:    6
 18046 ;; This function calls:
 18047 ;;		___fldiv
 18048 ;;		___flmul
 18049 ;;		___fltol
 18050 ;;		___xxtofl
 18051 ;; This function is called by:
 18052 ;;		_beatColorCreator
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           
 18057                           ;psect for function _beatBrightnessCalculation
 18058  1838                     _beatBrightnessCalculation:	
 18059  1838                     l11433:	
 18060                           ;incstack = 0
 18061                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 18062                           
 18063                           
 18064                           ;led.c: 130:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 18065  1838  0142               	movlb	2	; select bank2
 18066  1839  0868               	movf	_beatBrightness^(0+256),w
 18067  183A  0141               	movlb	1	; select bank1
 18068  183B  00BD               	movwf	??_beatBrightnessCalculation^(0+128)
 18069  183C  01BE               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 18070  183D  01BF               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 18071  183E  01C0               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 18072  183F  0840               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 18073  1840  0140               	movlb	0	; select bank0
 18074  1841  00A3               	movwf	___xxtofl@val+3
 18075  1842  0141               	movlb	1	; select bank1
 18076  1843  083F               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 18077  1844  0140               	movlb	0	; select bank0
 18078  1845  00A2               	movwf	___xxtofl@val+2
 18079  1846  0141               	movlb	1	; select bank1
 18080  1847  083E               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 18081  1848  0140               	movlb	0	; select bank0
 18082  1849  00A1               	movwf	___xxtofl@val+1
 18083  184A  0141               	movlb	1	; select bank1
 18084  184B  083D               	movf	??_beatBrightnessCalculation^(0+128),w
 18085  184C  0140               	movlb	0	; select bank0
 18086  184D  00A0               	movwf	___xxtofl@val
 18087  184E  3001               	movlw	1
 18088  184F  319A  227A  3198   	fcall	___xxtofl
 18089  1852  0140               	movlb	0	; select bank0
 18090  1853  0823               	movf	?___xxtofl+3,w
 18091  1854  00B5               	movwf	___fldiv@b+3
 18092  1855  0822               	movf	?___xxtofl+2,w
 18093  1856  00B4               	movwf	___fldiv@b+2
 18094  1857  0821               	movf	?___xxtofl+1,w
 18095  1858  00B3               	movwf	___fldiv@b+1
 18096  1859  0820               	movf	?___xxtofl,w
 18097  185A  00B2               	movwf	___fldiv@b
 18098  185B  3041               	movlw	65
 18099  185C  00B1               	movwf	___fldiv@a+3
 18100  185D  3010               	movlw	16
 18101  185E  00B0               	movwf	___fldiv@a+2
 18102  185F  3000               	movlw	0
 18103  1860  00AF               	movwf	___fldiv@a+1
 18104  1861  3000               	movlw	0
 18105  1862  00AE               	movwf	___fldiv@a
 18106  1863  3186  263B  3198   	fcall	___fldiv
 18107  1866  0140               	movlb	0	; select bank0
 18108  1867  0831               	movf	?___fldiv+3,w
 18109  1868  00CF               	movwf	___flmul@a+3
 18110  1869  0830               	movf	?___fldiv+2,w
 18111  186A  00CE               	movwf	___flmul@a+2
 18112  186B  082F               	movf	?___fldiv+1,w
 18113  186C  00CD               	movwf	___flmul@a+1
 18114  186D  082E               	movf	?___fldiv,w
 18115  186E  00CC               	movwf	___flmul@a
 18116  186F  3043               	movlw	67
 18117  1870  00CB               	movwf	___flmul@b+3
 18118  1871  307F               	movlw	127
 18119  1872  00CA               	movwf	___flmul@b+2
 18120  1873  3000               	movlw	0
 18121  1874  00C9               	movwf	___flmul@b+1
 18122  1875  3000               	movlw	0
 18123  1876  00C8               	movwf	___flmul@b
 18124  1877  318D  25A9  3198   	fcall	___flmul
 18125  187A  0140               	movlb	0	; select bank0
 18126  187B  084B               	movf	?___flmul+3,w
 18127  187C  0141               	movlb	1	; select bank1
 18128  187D  00B3               	movwf	(___fltol@f1+3)^(0+128)
 18129  187E  0140               	movlb	0	; select bank0
 18130  187F  084A               	movf	?___flmul+2,w
 18131  1880  0141               	movlb	1	; select bank1
 18132  1881  00B2               	movwf	(___fltol@f1+2)^(0+128)
 18133  1882  0140               	movlb	0	; select bank0
 18134  1883  0849               	movf	?___flmul+1,w
 18135  1884  0141               	movlb	1	; select bank1
 18136  1885  00B1               	movwf	(___fltol@f1+1)^(0+128)
 18137  1886  0140               	movlb	0	; select bank0
 18138  1887  0848               	movf	?___flmul,w
 18139  1888  0141               	movlb	1	; select bank1
 18140  1889  00B0               	movwf	___fltol@f1^(0+128)
 18141  188A  31A7  2780  3198   	fcall	___fltol
 18142  188D  0141               	movlb	1	; select bank1
 18143  188E  0830               	movf	?___fltol^(0+128),w
 18144  188F  00C1               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 18145  1890  0841               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 18146  1891  00C2               	movwf	beatBrightnessCalculation@temp^(0+128)
 18147                           
 18148                           ;led.c: 131:     return temp;
 18149  1892  0842               	movf	beatBrightnessCalculation@temp^(0+128),w
 18150  1893  00BD               	movwf	??_beatBrightnessCalculation^(0+128)
 18151  1894  01BE               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 18152  1895  01BF               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 18153  1896  01C0               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 18154  1897  0840               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 18155  1898  0140               	movlb	0	; select bank0
 18156  1899  00A3               	movwf	___xxtofl@val+3
 18157  189A  0141               	movlb	1	; select bank1
 18158  189B  083F               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 18159  189C  0140               	movlb	0	; select bank0
 18160  189D  00A2               	movwf	___xxtofl@val+2
 18161  189E  0141               	movlb	1	; select bank1
 18162  189F  083E               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 18163  18A0  0140               	movlb	0	; select bank0
 18164  18A1  00A1               	movwf	___xxtofl@val+1
 18165  18A2  0141               	movlb	1	; select bank1
 18166  18A3  083D               	movf	??_beatBrightnessCalculation^(0+128),w
 18167  18A4  0140               	movlb	0	; select bank0
 18168  18A5  00A0               	movwf	___xxtofl@val
 18169  18A6  3000               	movlw	0
 18170  18A7  319A  227A  3198   	fcall	___xxtofl
 18171  18AA  0140               	movlb	0	; select bank0
 18172  18AB  0823               	movf	?___xxtofl+3,w
 18173  18AC  0141               	movlb	1	; select bank1
 18174  18AD  00BC               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 18175  18AE  0140               	movlb	0	; select bank0
 18176  18AF  0822               	movf	?___xxtofl+2,w
 18177  18B0  0141               	movlb	1	; select bank1
 18178  18B1  00BB               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 18179  18B2  0140               	movlb	0	; select bank0
 18180  18B3  0821               	movf	?___xxtofl+1,w
 18181  18B4  0141               	movlb	1	; select bank1
 18182  18B5  00BA               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 18183  18B6  0140               	movlb	0	; select bank0
 18184  18B7  0820               	movf	?___xxtofl,w
 18185  18B8  0141               	movlb	1	; select bank1
 18186  18B9  00B9               	movwf	?_beatBrightnessCalculation^(0+128)
 18187  18BA                     l1469:	
 18188  18BA  0008               	return
 18189  18BB                     __end_of_beatBrightnessCalculation:	
 18190                           
 18191                           	psect	text42
 18192  0801                     __ptext42:	
 18193 ;; *************** function _LED_task_BEAT_MIXED *****************
 18194 ;; Defined at:
 18195 ;;		line 226 in file "led.c"
 18196 ;; Parameters:    Size  Location     Type
 18197 ;;		None
 18198 ;; Auto vars:     Size  Location     Type
 18199 ;;		None
 18200 ;; Return value:  Size  Location     Type
 18201 ;;                  1    wreg      void 
 18202 ;; Registers used:
 18203 ;;		None
 18204 ;; Tracked objects:
 18205 ;;		On entry : 0/0
 18206 ;;		On exit  : 0/0
 18207 ;;		Unchanged: 0/0
 18208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18213 ;;Total ram usage:        0 bytes
 18214 ;; Hardware stack levels used:    1
 18215 ;; Hardware stack levels required when called:    4
 18216 ;; This function calls:
 18217 ;;		Nothing
 18218 ;; This function is called by:
 18219 ;;		_CONTROL_BEAT
 18220 ;; This function uses a non-reentrant model
 18221 ;;
 18222                           
 18223                           
 18224                           ;psect for function _LED_task_BEAT_MIXED
 18225  0801                     _LED_task_BEAT_MIXED:	
 18226  0801                     l1505:	
 18227                           ;incstack = 0
 18228                           ; Regs used in _LED_task_BEAT_MIXED: []
 18229                           
 18230  0801  0008               	return
 18231  0802                     __end_of_LED_task_BEAT_MIXED:	
 18232                           
 18233                           	psect	text43
 18234  0800                     __ptext43:	
 18235 ;; *************** function _LED_task_BEAT_FADE *****************
 18236 ;; Defined at:
 18237 ;;		line 174 in file "led.c"
 18238 ;; Parameters:    Size  Location     Type
 18239 ;;		None
 18240 ;; Auto vars:     Size  Location     Type
 18241 ;;		None
 18242 ;; Return value:  Size  Location     Type
 18243 ;;                  1    wreg      void 
 18244 ;; Registers used:
 18245 ;;		None
 18246 ;; Tracked objects:
 18247 ;;		On entry : 0/0
 18248 ;;		On exit  : 0/0
 18249 ;;		Unchanged: 0/0
 18250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18255 ;;Total ram usage:        0 bytes
 18256 ;; Hardware stack levels used:    1
 18257 ;; Hardware stack levels required when called:    4
 18258 ;; This function calls:
 18259 ;;		Nothing
 18260 ;; This function is called by:
 18261 ;;		_CONTROL_BEAT
 18262 ;; This function uses a non-reentrant model
 18263 ;;
 18264                           
 18265                           
 18266                           ;psect for function _LED_task_BEAT_FADE
 18267  0800                     _LED_task_BEAT_FADE:	
 18268  0800                     l1489:	
 18269                           ;incstack = 0
 18270                           ; Regs used in _LED_task_BEAT_FADE: []
 18271                           
 18272  0800  0008               	return
 18273  0801                     __end_of_LED_task_BEAT_FADE:	
 18274                           
 18275                           	psect	text44
 18276  1B27                     __ptext44:	
 18277 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 18278 ;; Defined at:
 18279 ;;		line 202 in file "led.c"
 18280 ;; Parameters:    Size  Location     Type
 18281 ;;		None
 18282 ;; Auto vars:     Size  Location     Type
 18283 ;;  beatState       1   70[BANK1 ] _Bool 
 18284 ;; Return value:  Size  Location     Type
 18285 ;;                  1    wreg      void 
 18286 ;; Registers used:
 18287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18288 ;; Tracked objects:
 18289 ;;		On entry : 0/0
 18290 ;;		On exit  : 0/0
 18291 ;;		Unchanged: 0/0
 18292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18294 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18296 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18297 ;;Total ram usage:        3 bytes
 18298 ;; Hardware stack levels used:    1
 18299 ;; Hardware stack levels required when called:    8
 18300 ;; This function calls:
 18301 ;;		_BEAT_detected
 18302 ;;		_CLOCK_getTime
 18303 ;;		_HSLToRGB
 18304 ;;		_LED_setColor
 18305 ;; This function is called by:
 18306 ;;		_CONTROL_BEAT
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           
 18311                           ;psect for function _LED_task_BEAT_CONTINUOUS
 18312  1B27                     _LED_task_BEAT_CONTINUOUS:	
 18313  1B27                     l11873:	
 18314                           ;incstack = 0
 18315                           ; Regs used in _LED_task_BEAT_CONTINUOUS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18316                           
 18317                           
 18318                           ;led.c: 204:     if(CLOCK_getTime() - lastLedActiveTime < 2000){
 18319  1B27  31AD  2520  319B   	fcall	_CLOCK_getTime
 18320  1B2A  0142               	movlb	2	; select bank2
 18321  1B2B  082F               	movf	_lastLedActiveTime^(0+256),w
 18322  1B2C  0140               	movlb	0	; select bank0
 18323  1B2D  0220               	subwf	?_CLOCK_getTime,w
 18324  1B2E  0141               	movlb	1	; select bank1
 18325  1B2F  00E4               	movwf	??_LED_task_BEAT_CONTINUOUS^(0+128)
 18326  1B30  0142               	movlb	2	; select bank2
 18327  1B31  0830               	movf	(_lastLedActiveTime+1)^(0+256),w
 18328  1B32  0140               	movlb	0	; select bank0
 18329  1B33  3B21               	subwfb	?_CLOCK_getTime+1,w
 18330  1B34  0141               	movlb	1	; select bank1
 18331  1B35  00E5               	movwf	(??_LED_task_BEAT_CONTINUOUS+1)^(0+128)
 18332  1B36  3007               	movlw	7
 18333  1B37  0265               	subwf	(??_LED_task_BEAT_CONTINUOUS+1)^(0+128),w
 18334  1B38  30D0               	movlw	208
 18335  1B39  1903               	skipnz
 18336  1B3A  0264               	subwf	??_LED_task_BEAT_CONTINUOUS^(0+128),w
 18337  1B3B  1803               	skipnc
 18338  1B3C  2B3E               	goto	u13661
 18339  1B3D  2B3F               	goto	u13660
 18340  1B3E                     u13661:	
 18341  1B3E  2B40               	goto	l11877
 18342  1B3F                     u13660:	
 18343  1B3F  2BD6               	goto	l1499
 18344  1B40                     l11877:	
 18345                           
 18346                           ;led.c: 208:     lastLedActiveTime = CLOCK_getTime();
 18347  1B40  31AD  2520  319B   	fcall	_CLOCK_getTime
 18348  1B43  0140               	movlb	0	; select bank0
 18349  1B44  0821               	movf	?_CLOCK_getTime+1,w
 18350  1B45  0142               	movlb	2	; select bank2
 18351  1B46  00B0               	movwf	(_lastLedActiveTime+1)^(0+256)
 18352  1B47  0140               	movlb	0	; select bank0
 18353  1B48  0820               	movf	?_CLOCK_getTime,w
 18354  1B49  0142               	movlb	2	; select bank2
 18355  1B4A  00AF               	movwf	_lastLedActiveTime^(0+256)
 18356  1B4B                     l11879:	
 18357                           
 18358                           ;led.c: 209:     _Bool beatState = BEAT_detected();
 18359  1B4B  31AD  2572  319B   	fcall	_BEAT_detected
 18360  1B4E  0141               	movlb	1	; select bank1
 18361  1B4F  00E4               	movwf	??_LED_task_BEAT_CONTINUOUS^(0+128)
 18362  1B50  0864               	movf	??_LED_task_BEAT_CONTINUOUS^(0+128),w
 18363  1B51  00E6               	movwf	LED_task_BEAT_CONTINUOUS@beatState^(0+128)
 18364  1B52                     l11881:	
 18365                           
 18366                           ;led.c: 211:     animationHue.hue++;
 18367  1B52  3001               	movlw	1
 18368  1B53  0143               	movlb	3	; select bank3
 18369  1B54  07A0               	addwf	_animationHue^(0+384),f
 18370  1B55  3000               	movlw	0
 18371  1B56  3DA1               	addwfc	(_animationHue+1)^(0+384),f
 18372  1B57                     l11883:	
 18373                           
 18374                           ;led.c: 212:     animationColor = HSLToRGB(animationHue);
 18375  1B57  30A0               	movlw	low _animationHue
 18376  1B58  0086               	movwf	6
 18377  1B59  3001               	movlw	high _animationHue
 18378  1B5A  0087               	movwf	7
 18379  1B5B  30B9               	movlw	low HSLToRGB@hsl
 18380  1B5C  0084               	movwf	4
 18381  1B5D  3000               	movlw	high HSLToRGB@hsl
 18382  1B5E  0085               	movwf	5
 18383  1B5F  300A               	movlw	10
 18384  1B60  0141               	movlb	1	; select bank1
 18385  1B61  00E4               	movwf	??_LED_task_BEAT_CONTINUOUS^(0+128)
 18386  1B62                     u13670:	
 18387  1B62  0016               	moviw fsr1++
 18388  1B63  001A               	movwi fsr0++
 18389  1B64  0BE4               	decfsz	??_LED_task_BEAT_CONTINUOUS^(0+128),f
 18390  1B65  2B62               	goto	u13670
 18391  1B66  3180  20BD  319B   	fcall	_HSLToRGB
 18392  1B69  0141               	movlb	1	; select bank1
 18393  1B6A  083C               	movf	(?_HSLToRGB+3)^(0+128),w
 18394  1B6B  0144               	movlb	4	; select bank4
 18395  1B6C  00A3               	movwf	(_animationColor+3)^(0+512)
 18396  1B6D  0141               	movlb	1	; select bank1
 18397  1B6E  083B               	movf	(?_HSLToRGB+2)^(0+128),w
 18398  1B6F  0144               	movlb	4	; select bank4
 18399  1B70  00A2               	movwf	(_animationColor+2)^(0+512)
 18400  1B71  0141               	movlb	1	; select bank1
 18401  1B72  083A               	movf	(?_HSLToRGB+1)^(0+128),w
 18402  1B73  0144               	movlb	4	; select bank4
 18403  1B74  00A1               	movwf	(_animationColor+1)^(0+512)
 18404  1B75  0141               	movlb	1	; select bank1
 18405  1B76  0839               	movf	?_HSLToRGB^(0+128),w
 18406  1B77  0144               	movlb	4	; select bank4
 18407  1B78  00A0               	movwf	_animationColor^(0+512)
 18408  1B79                     l11885:	
 18409                           
 18410                           ;led.c: 214:     if(beatState && (CLOCK_getTime() - lastBeatLedChange < 10)){
 18411  1B79  0141               	movlb	1	; select bank1
 18412  1B7A  0866               	movf	LED_task_BEAT_CONTINUOUS@beatState^(0+128),w
 18413  1B7B  1903               	btfsc	3,2
 18414  1B7C  2B7E               	goto	u13681
 18415  1B7D  2B7F               	goto	u13680
 18416  1B7E                     u13681:	
 18417  1B7E  2BA8               	goto	l11893
 18418  1B7F                     u13680:	
 18419  1B7F                     l11887:	
 18420  1B7F  31AD  2520  319B   	fcall	_CLOCK_getTime
 18421  1B82  0142               	movlb	2	; select bank2
 18422  1B83  082D               	movf	_lastBeatLedChange^(0+256),w
 18423  1B84  0140               	movlb	0	; select bank0
 18424  1B85  0220               	subwf	?_CLOCK_getTime,w
 18425  1B86  0141               	movlb	1	; select bank1
 18426  1B87  00E4               	movwf	??_LED_task_BEAT_CONTINUOUS^(0+128)
 18427  1B88  0142               	movlb	2	; select bank2
 18428  1B89  082E               	movf	(_lastBeatLedChange+1)^(0+256),w
 18429  1B8A  0140               	movlb	0	; select bank0
 18430  1B8B  3B21               	subwfb	?_CLOCK_getTime+1,w
 18431  1B8C  0141               	movlb	1	; select bank1
 18432  1B8D  00E5               	movwf	(??_LED_task_BEAT_CONTINUOUS+1)^(0+128)
 18433  1B8E  3000               	movlw	0
 18434  1B8F  0265               	subwf	(??_LED_task_BEAT_CONTINUOUS+1)^(0+128),w
 18435  1B90  300A               	movlw	10
 18436  1B91  1903               	skipnz
 18437  1B92  0264               	subwf	??_LED_task_BEAT_CONTINUOUS^(0+128),w
 18438  1B93  1803               	skipnc
 18439  1B94  2B96               	goto	u13691
 18440  1B95  2B97               	goto	u13690
 18441  1B96                     u13691:	
 18442  1B96  2BA8               	goto	l11893
 18443  1B97                     u13690:	
 18444  1B97                     l11889:	
 18445                           
 18446                           ;led.c: 215:         animationColor.white = 255;
 18447  1B97  30FF               	movlw	255
 18448  1B98  00E4               	movwf	??_LED_task_BEAT_CONTINUOUS^(0+128)
 18449  1B99  0864               	movf	??_LED_task_BEAT_CONTINUOUS^(0+128),w
 18450  1B9A  0144               	movlb	4	; select bank4
 18451  1B9B  00A0               	movwf	_animationColor^(0+512)
 18452  1B9C                     l11891:	
 18453                           
 18454                           ;led.c: 216:         lastBeatLedChange = CLOCK_getTime();
 18455  1B9C  31AD  2520  319B   	fcall	_CLOCK_getTime
 18456  1B9F  0140               	movlb	0	; select bank0
 18457  1BA0  0821               	movf	?_CLOCK_getTime+1,w
 18458  1BA1  0142               	movlb	2	; select bank2
 18459  1BA2  00AE               	movwf	(_lastBeatLedChange+1)^(0+256)
 18460  1BA3  0140               	movlb	0	; select bank0
 18461  1BA4  0820               	movf	?_CLOCK_getTime,w
 18462  1BA5  0142               	movlb	2	; select bank2
 18463  1BA6  00AD               	movwf	_lastBeatLedChange^(0+256)
 18464                           
 18465                           ;led.c: 217:     } else if(CLOCK_getTime() - lastBeatLedChange < 10) {
 18466  1BA7  2BC3               	goto	l11899
 18467  1BA8                     l11893:	
 18468  1BA8  31AD  2520  319B   	fcall	_CLOCK_getTime
 18469  1BAB  0142               	movlb	2	; select bank2
 18470  1BAC  082D               	movf	_lastBeatLedChange^(0+256),w
 18471  1BAD  0140               	movlb	0	; select bank0
 18472  1BAE  0220               	subwf	?_CLOCK_getTime,w
 18473  1BAF  0141               	movlb	1	; select bank1
 18474  1BB0  00E4               	movwf	??_LED_task_BEAT_CONTINUOUS^(0+128)
 18475  1BB1  0142               	movlb	2	; select bank2
 18476  1BB2  082E               	movf	(_lastBeatLedChange+1)^(0+256),w
 18477  1BB3  0140               	movlb	0	; select bank0
 18478  1BB4  3B21               	subwfb	?_CLOCK_getTime+1,w
 18479  1BB5  0141               	movlb	1	; select bank1
 18480  1BB6  00E5               	movwf	(??_LED_task_BEAT_CONTINUOUS+1)^(0+128)
 18481  1BB7  3000               	movlw	0
 18482  1BB8  0265               	subwf	(??_LED_task_BEAT_CONTINUOUS+1)^(0+128),w
 18483  1BB9  300A               	movlw	10
 18484  1BBA  1903               	skipnz
 18485  1BBB  0264               	subwf	??_LED_task_BEAT_CONTINUOUS^(0+128),w
 18486  1BBC  1803               	skipnc
 18487  1BBD  2BBF               	goto	u13701
 18488  1BBE  2BC0               	goto	u13700
 18489  1BBF                     u13701:	
 18490  1BBF  2BC3               	goto	l11899
 18491  1BC0                     u13700:	
 18492  1BC0                     l11895:	
 18493                           
 18494                           ;led.c: 218:         animationColor.white = 0;
 18495  1BC0  0144               	movlb	4	; select bank4
 18496  1BC1  01A0               	clrf	_animationColor^(0+512)
 18497  1BC2  2B9C               	goto	l11891
 18498  1BC3                     l11899:	
 18499                           
 18500                           ;led.c: 222:     LED_setColor(animationColor);
 18501  1BC3  0144               	movlb	4	; select bank4
 18502  1BC4  0823               	movf	(_animationColor+3)^(0+512),w
 18503  1BC5  0141               	movlb	1	; select bank1
 18504  1BC6  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 18505  1BC7  0144               	movlb	4	; select bank4
 18506  1BC8  0822               	movf	(_animationColor+2)^(0+512),w
 18507  1BC9  0141               	movlb	1	; select bank1
 18508  1BCA  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 18509  1BCB  0144               	movlb	4	; select bank4
 18510  1BCC  0821               	movf	(_animationColor+1)^(0+512),w
 18511  1BCD  0141               	movlb	1	; select bank1
 18512  1BCE  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 18513  1BCF  0144               	movlb	4	; select bank4
 18514  1BD0  0820               	movf	_animationColor^(0+512),w
 18515  1BD1  0141               	movlb	1	; select bank1
 18516  1BD2  00D1               	movwf	LED_setColor@input^(0+128)
 18517  1BD3  3194  24AC  319B   	fcall	_LED_setColor
 18518  1BD6                     l1499:	
 18519  1BD6  0008               	return
 18520  1BD7                     __end_of_LED_task_BEAT_CONTINUOUS:	
 18521                           
 18522                           	psect	text45
 18523  2D72                     __ptext45:	
 18524 ;; *************** function _BEAT_detected *****************
 18525 ;; Defined at:
 18526 ;;		line 49 in file "beat.c"
 18527 ;; Parameters:    Size  Location     Type
 18528 ;;		None
 18529 ;; Auto vars:     Size  Location     Type
 18530 ;;		None
 18531 ;; Return value:  Size  Location     Type
 18532 ;;                  1    wreg      _Bool 
 18533 ;; Registers used:
 18534 ;;		wreg, status,2, status,0
 18535 ;; Tracked objects:
 18536 ;;		On entry : 0/0
 18537 ;;		On exit  : 0/0
 18538 ;;		Unchanged: 0/0
 18539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18544 ;;Total ram usage:        0 bytes
 18545 ;; Hardware stack levels used:    1
 18546 ;; Hardware stack levels required when called:    4
 18547 ;; This function calls:
 18548 ;;		Nothing
 18549 ;; This function is called by:
 18550 ;;		_LED_task_BEAT_STROBE
 18551 ;;		_LED_task_BEAT_CONTINUOUS
 18552 ;; This function uses a non-reentrant model
 18553 ;;
 18554                           
 18555                           
 18556                           ;psect for function _BEAT_detected
 18557  2D72                     _BEAT_detected:	
 18558  2D72                     l11553:	
 18559                           ;incstack = 0
 18560                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 18561                           
 18562                           
 18563                           ;beat.c: 50:     if (detected) {
 18564  2D72  0142               	movlb	2	; select bank2
 18565  2D73  0841               	movf	_detected^(0+256),w
 18566  2D74  1903               	btfsc	3,2
 18567  2D75  2D77               	goto	u13181
 18568  2D76  2D78               	goto	u13180
 18569  2D77                     u13181:	
 18570  2D77  2D7B               	goto	l11561
 18571  2D78                     u13180:	
 18572  2D78                     l11555:	
 18573                           
 18574                           ;beat.c: 51:         detected = 0;
 18575  2D78  01C1               	clrf	_detected^(0+256)
 18576  2D79                     l11557:	
 18577                           
 18578                           ;beat.c: 52:         return 1;
 18579  2D79  3001               	movlw	1
 18580  2D7A  2D7C               	goto	l1315
 18581  2D7B                     l11561:	
 18582                           
 18583                           ;beat.c: 55:     return 0;
 18584  2D7B  3000               	movlw	0
 18585  2D7C                     l1315:	
 18586  2D7C  0008               	return
 18587  2D7D                     __end_of_BEAT_detected:	
 18588                           
 18589                           	psect	text46
 18590  2EAF                     __ptext46:	
 18591 ;; *************** function _printf *****************
 18592 ;; Defined at:
 18593 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 18596 ;;		 -> STR_32(3), STR_31(3), STR_30(6), STR_29(7), 
 18597 ;;		 -> STR_28(8), STR_27(9), STR_26(10), STR_25(9), 
 18598 ;;		 -> STR_24(8), STR_23(7), STR_21(2), STR_20(5), 
 18599 ;;		 -> STR_19(4), STR_18(4), STR_17(4), STR_16(3), 
 18600 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(4), 
 18601 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(6), 
 18602 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 18603 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;  ret             2    0        int 
 18606 ;;  ap              1   78[BANK0 ] PTR void [1]
 18607 ;;		 -> ?_printf(2), 
 18608 ;; Return value:  Size  Location     Type
 18609 ;;                  2    0[BANK1 ] int 
 18610 ;; Registers used:
 18611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18612 ;; Tracked objects:
 18613 ;;		On entry : 0/0
 18614 ;;		On exit  : 0/0
 18615 ;;		Unchanged: 0/0
 18616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18617 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18618 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18620 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18621 ;;Total ram usage:       14 bytes
 18622 ;; Hardware stack levels used:    1
 18623 ;; Hardware stack levels required when called:   16
 18624 ;; This function calls:
 18625 ;;		_vfprintf
 18626 ;; This function is called by:
 18627 ;;		_CONTROLLER_task
 18628 ;;		_CONTROL_BEAT
 18629 ;;		_CONTROL_MANUAL
 18630 ;;		_CONTROL_ANIMATION
 18631 ;;		_TM1650_init
 18632 ;;		_address_inc
 18633 ;;		_address_dec
 18634 ;;		_TM1650_scrollPrint
 18635 ;; This function uses a non-reentrant model
 18636 ;;
 18637                           
 18638                           
 18639                           ;psect for function _printf
 18640  2EAF                     _printf:	
 18641  2EAF                     l11535:	
 18642                           ;incstack = 0
 18643 ;; hardware stack exceeded
 18644                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18645                           
 18646  2EAF  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18647  2EB0  0140               	movlb	0	; select bank0
 18648  2EB1  00EB               	movwf	??_printf
 18649  2EB2  086B               	movf	??_printf,w
 18650  2EB3  00EE               	movwf	printf@ap
 18651  2EB4                     l11537:	
 18652  2EB4  0141               	movlb	1	; select bank1
 18653  2EB5  0821               	movf	(printf@fmt+1)^(0+128),w
 18654  2EB6  0140               	movlb	0	; select bank0
 18655  2EB7  00E4               	movwf	vfprintf@fmt+1
 18656  2EB8  0141               	movlb	1	; select bank1
 18657  2EB9  0820               	movf	printf@fmt^(0+128),w
 18658  2EBA  0140               	movlb	0	; select bank0
 18659  2EBB  00E3               	movwf	vfprintf@fmt
 18660  2EBC  306E               	movlw	(low (printf@ap| 0))& (0+255)
 18661  2EBD  00EB               	movwf	??_printf
 18662  2EBE  086B               	movf	??_printf,w
 18663  2EBF  00E5               	movwf	vfprintf@ap
 18664  2EC0  3000               	movlw	0
 18665  2EC1  31A1  21C4  31AE   	fcall	_vfprintf
 18666  2EC4                     l2235:	
 18667  2EC4  0008               	return
 18668  2EC5                     __end_of_printf:	
 18669                           
 18670                           	psect	text47
 18671  21C4                     __ptext47:	
 18672 ;; *************** function _vfprintf *****************
 18673 ;; Defined at:
 18674 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18675 ;; Parameters:    Size  Location     Type
 18676 ;;  fp              1    wreg     PTR struct _IO_FILE
 18677 ;;		 -> NULL(0), 
 18678 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 18679 ;;		 -> STR_32(3), STR_31(3), STR_30(6), STR_29(7), 
 18680 ;;		 -> STR_28(8), STR_27(9), STR_26(10), STR_25(9), 
 18681 ;;		 -> STR_24(8), STR_23(7), STR_21(2), STR_20(5), 
 18682 ;;		 -> STR_19(4), STR_18(4), STR_17(4), STR_16(3), 
 18683 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(4), 
 18684 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(6), 
 18685 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 18686 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 18687 ;;  ap              1   69[BANK0 ] PTR PTR void 
 18688 ;;		 -> printf@ap(1), 
 18689 ;; Auto vars:     Size  Location     Type
 18690 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
 18691 ;;		 -> NULL(0), 
 18692 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
 18693 ;;		 -> STR_32(3), STR_31(3), STR_30(6), STR_29(7), 
 18694 ;;		 -> STR_28(8), STR_27(9), STR_26(10), STR_25(9), 
 18695 ;;		 -> STR_24(8), STR_23(7), STR_21(2), STR_20(5), 
 18696 ;;		 -> STR_19(4), STR_18(4), STR_17(4), STR_16(3), 
 18697 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(4), 
 18698 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(6), 
 18699 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 18700 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 18701 ;; Return value:  Size  Location     Type
 18702 ;;                  2   67[BANK0 ] int 
 18703 ;; Registers used:
 18704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18705 ;; Tracked objects:
 18706 ;;		On entry : 0/0
 18707 ;;		On exit  : 0/0
 18708 ;;		Unchanged: 0/0
 18709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18710 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18711 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;Total ram usage:        8 bytes
 18715 ;; Hardware stack levels used:    1
 18716 ;; Hardware stack levels required when called:   15
 18717 ;; This function calls:
 18718 ;;		_vfpfcnvrt
 18719 ;; This function is called by:
 18720 ;;		_printf
 18721 ;; This function uses a non-reentrant model
 18722 ;;
 18723                           
 18724                           
 18725                           ;psect for function _vfprintf
 18726  21C4                     _vfprintf:	
 18727                           
 18728                           ;incstack = 0
 18729 ;; hardware stack exceeded
 18730                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18731                           ;vfprintf@fp stored from wreg
 18732  21C4  0140               	movlb	0	; select bank0
 18733  21C5  00E8               	movwf	vfprintf@fp
 18734  21C6                     l11459:	
 18735                           
 18736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 18737  21C6  0864               	movf	vfprintf@fmt+1,w
 18738  21C7  00EA               	movwf	vfprintf@cfmt+1
 18739  21C8  0863               	movf	vfprintf@fmt,w
 18740  21C9  00E9               	movwf	vfprintf@cfmt
 18741  21CA                     l11461:	
 18742                           
 18743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 18744  21CA  0143               	movlb	3	; select bank3
 18745  21CB  01B2               	clrf	_nout^(0+384)
 18746  21CC  01B3               	clrf	(_nout+1)^(0+384)
 18747                           
 18748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 18749  21CD  29E2               	goto	l11465
 18750  21CE                     l11463:	
 18751                           
 18752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 18753  21CE  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 18754  21CF  00E6               	movwf	??_vfprintf
 18755  21D0  0866               	movf	??_vfprintf,w
 18756  21D1  00DA               	movwf	vfpfcnvrt@fmt
 18757  21D2  0865               	movf	vfprintf@ap,w
 18758  21D3  00E7               	movwf	??_vfprintf+1
 18759  21D4  0867               	movf	??_vfprintf+1,w
 18760  21D5  00DB               	movwf	vfpfcnvrt@ap
 18761  21D6  0868               	movf	vfprintf@fp,w
 18762  21D7  319B  23D7  31A1   	fcall	_vfpfcnvrt
 18763  21DA  0140               	movlb	0	; select bank0
 18764  21DB  085A               	movf	?_vfpfcnvrt,w
 18765  21DC  0143               	movlb	3	; select bank3
 18766  21DD  07B2               	addwf	_nout^(0+384),f
 18767  21DE  0140               	movlb	0	; select bank0
 18768  21DF  085B               	movf	?_vfpfcnvrt+1,w
 18769  21E0  0143               	movlb	3	; select bank3
 18770  21E1  3DB3               	addwfc	(_nout+1)^(0+384),f
 18771  21E2                     l11465:	
 18772                           
 18773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 18774  21E2  0140               	movlb	0	; select bank0
 18775  21E3  0869               	movf	vfprintf@cfmt,w
 18776  21E4  0084               	movwf	4
 18777  21E5  086A               	movf	vfprintf@cfmt+1,w
 18778  21E6  0085               	movwf	5
 18779  21E7  0012               	moviw fsr0++
 18780  21E8  1D03               	btfss	3,2
 18781  21E9  29EB               	goto	u13001
 18782  21EA  29EC               	goto	u13000
 18783  21EB                     u13001:	
 18784  21EB  29CE               	goto	l11463
 18785  21EC                     u13000:	
 18786  21EC                     l11467:	
 18787                           
 18788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 18789  21EC  0143               	movlb	3	; select bank3
 18790  21ED  0833               	movf	(_nout+1)^(0+384),w
 18791  21EE  0140               	movlb	0	; select bank0
 18792  21EF  00E4               	movwf	?_vfprintf+1
 18793  21F0  0143               	movlb	3	; select bank3
 18794  21F1  0832               	movf	_nout^(0+384),w
 18795  21F2  0140               	movlb	0	; select bank0
 18796  21F3  00E3               	movwf	?_vfprintf
 18797  21F4                     l1754:	
 18798  21F4  0008               	return
 18799  21F5                     __end_of_vfprintf:	
 18800                           
 18801                           	psect	text48
 18802  1BD7                     __ptext48:	
 18803 ;; *************** function _vfpfcnvrt *****************
 18804 ;; Defined at:
 18805 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 18806 ;; Parameters:    Size  Location     Type
 18807 ;;  fp              1    wreg     PTR struct _IO_FILE
 18808 ;;		 -> NULL(0), 
 18809 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 18810 ;;		 -> vfprintf@cfmt(2), 
 18811 ;;  ap              1   59[BANK0 ] PTR PTR void 
 18812 ;;		 -> printf@ap(1), 
 18813 ;; Auto vars:     Size  Location     Type
 18814 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 18815 ;;		 -> NULL(0), 
 18816 ;;  llu             8    0        unsigned long long 
 18817 ;;  ll              8    0        long long 
 18818 ;;  f               4    0        long long 
 18819 ;;  ct              3    0        unsigned char [3]
 18820 ;;  vp              2    0        PTR void 
 18821 ;;  i               2    0        int 
 18822 ;;  done            2    0        int 
 18823 ;;  cp              2    0        PTR unsigned char 
 18824 ;;  c               1   65[BANK0 ] unsigned char 
 18825 ;; Return value:  Size  Location     Type
 18826 ;;                  2   58[BANK0 ] int 
 18827 ;; Registers used:
 18828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18829 ;; Tracked objects:
 18830 ;;		On entry : 0/0
 18831 ;;		On exit  : 0/0
 18832 ;;		Unchanged: 0/0
 18833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18835 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18836 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18837 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18838 ;;Total ram usage:        9 bytes
 18839 ;; Hardware stack levels used:    1
 18840 ;; Hardware stack levels required when called:   14
 18841 ;; This function calls:
 18842 ;;		_ctoa
 18843 ;;		_fputc
 18844 ;; This function is called by:
 18845 ;;		_vfprintf
 18846 ;; This function uses a non-reentrant model
 18847 ;;
 18848                           
 18849                           
 18850                           ;psect for function _vfpfcnvrt
 18851  1BD7                     _vfpfcnvrt:	
 18852                           
 18853                           ;incstack = 0
 18854 ;; hardware stack exceeded
 18855                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18856                           ;vfpfcnvrt@fp stored from wreg
 18857  1BD7  0140               	movlb	0	; select bank0
 18858  1BD8  00E2               	movwf	vfpfcnvrt@fp
 18859  1BD9                     l10941:	
 18860                           
 18861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 18862  1BD9  085A               	movf	vfpfcnvrt@fmt,w
 18863  1BDA  0086               	movwf	6
 18864  1BDB  0187               	clrf	7
 18865  1BDC  3F40               	moviw [0]fsr1
 18866  1BDD  00DC               	movwf	??_vfpfcnvrt
 18867  1BDE  3F41               	moviw [1]fsr1
 18868  1BDF  00DD               	movwf	??_vfpfcnvrt+1
 18869  1BE0  085C               	movf	??_vfpfcnvrt,w
 18870  1BE1  0084               	movwf	4
 18871  1BE2  085D               	movf	??_vfpfcnvrt+1,w
 18872  1BE3  0085               	movwf	5
 18873  1BE4  0012               	moviw fsr0++
 18874  1BE5  3A25               	xorlw	37
 18875  1BE6  1D03               	btfss	3,2
 18876  1BE7  2BE9               	goto	u11961
 18877  1BE8  2BEA               	goto	u11960
 18878  1BE9                     u11961:	
 18879  1BE9  2C65               	goto	l10975
 18880  1BEA                     u11960:	
 18881  1BEA                     l10943:	
 18882                           
 18883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 18884  1BEA  085A               	movf	vfpfcnvrt@fmt,w
 18885  1BEB  0086               	movwf	6
 18886  1BEC  0187               	clrf	7
 18887  1BED  3001               	movlw	1
 18888  1BEE  0781               	addwf	1,f
 18889  1BEF  3141               	addfsr 1,1
 18890  1BF0  1803               	skipnc
 18891  1BF1  0A81               	incf	1,f
 18892  1BF2                     l10945:	
 18893                           
 18894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 18895  1BF2  0142               	movlb	2	; select bank2
 18896  1BF3  01A9               	clrf	_width^(0+256)
 18897  1BF4  01AA               	clrf	(_width+1)^(0+256)
 18898  1BF5  01AB               	clrf	_flags^(0+256)
 18899  1BF6  01AC               	clrf	(_flags+1)^(0+256)
 18900  1BF7                     l10947:	
 18901                           
 18902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 18903  1BF7  30FF               	movlw	255
 18904  1BF8  0143               	movlb	3	; select bank3
 18905  1BF9  00B4               	movwf	_prec^(0+384)
 18906  1BFA  30FF               	movlw	255
 18907  1BFB  00B5               	movwf	(_prec^(0+384)+1)
 18908  1BFC                     l10949:	
 18909                           
 18910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 18911  1BFC  0140               	movlb	0	; select bank0
 18912  1BFD  085A               	movf	vfpfcnvrt@fmt,w
 18913  1BFE  0086               	movwf	6
 18914  1BFF  0187               	clrf	7
 18915  1C00  3F40               	moviw [0]fsr1
 18916  1C01  00DC               	movwf	??_vfpfcnvrt
 18917  1C02  3F41               	moviw [1]fsr1
 18918  1C03  00DD               	movwf	??_vfpfcnvrt+1
 18919  1C04  085C               	movf	??_vfpfcnvrt,w
 18920  1C05  0084               	movwf	4
 18921  1C06  085D               	movf	??_vfpfcnvrt+1,w
 18922  1C07  0085               	movwf	5
 18923  1C08  0012               	moviw fsr0++
 18924  1C09  3A63               	xorlw	99
 18925  1C0A  1D03               	btfss	3,2
 18926  1C0B  2C0D               	goto	u11971
 18927  1C0C  2C0E               	goto	u11970
 18928  1C0D                     u11971:	
 18929  1C0D  2C30               	goto	l10959
 18930  1C0E                     u11970:	
 18931  1C0E                     l10951:	
 18932                           
 18933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 18934  1C0E  085A               	movf	vfpfcnvrt@fmt,w
 18935  1C0F  0086               	movwf	6
 18936  1C10  0187               	clrf	7
 18937  1C11  3001               	movlw	1
 18938  1C12  0781               	addwf	1,f
 18939  1C13  3141               	addfsr 1,1
 18940  1C14  1803               	skipnc
 18941  1C15  0A81               	incf	1,f
 18942  1C16                     l10953:	
 18943                           
 18944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18945  1C16  085B               	movf	vfpfcnvrt@ap,w
 18946  1C17  0086               	movwf	6
 18947  1C18  0187               	clrf	7
 18948  1C19  0801               	movf	1,w
 18949  1C1A  0084               	movwf	4
 18950  1C1B  0185               	clrf	5
 18951  1C1C  3002               	movlw	2
 18952  1C1D  0781               	addwf	1,f
 18953  1C1E  0800               	movf	0,w
 18954  1C1F  00DC               	movwf	??_vfpfcnvrt
 18955  1C20  085C               	movf	??_vfpfcnvrt,w
 18956  1C21  00E1               	movwf	vfpfcnvrt@c
 18957  1C22                     l10955:	
 18958                           
 18959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 18960  1C22  0861               	movf	vfpfcnvrt@c,w
 18961  1C23  00DC               	movwf	??_vfpfcnvrt
 18962  1C24  085C               	movf	??_vfpfcnvrt,w
 18963  1C25  00D4               	movwf	ctoa@c
 18964  1C26  0862               	movf	vfpfcnvrt@fp,w
 18965  1C27  31A1  21F5  319B   	fcall	_ctoa
 18966  1C2A  0140               	movlb	0	; select bank0
 18967  1C2B  0855               	movf	?_ctoa+1,w
 18968  1C2C  00DB               	movwf	?_vfpfcnvrt+1
 18969  1C2D  0854               	movf	?_ctoa,w
 18970  1C2E  00DA               	movwf	?_vfpfcnvrt
 18971  1C2F  2C88               	goto	l1747
 18972  1C30                     l10959:	
 18973                           
 18974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 18975  1C30  085A               	movf	vfpfcnvrt@fmt,w
 18976  1C31  0086               	movwf	6
 18977  1C32  0187               	clrf	7
 18978  1C33  3F40               	moviw [0]fsr1
 18979  1C34  00DC               	movwf	??_vfpfcnvrt
 18980  1C35  3F41               	moviw [1]fsr1
 18981  1C36  00DD               	movwf	??_vfpfcnvrt+1
 18982  1C37  085C               	movf	??_vfpfcnvrt,w
 18983  1C38  0084               	movwf	4
 18984  1C39  085D               	movf	??_vfpfcnvrt+1,w
 18985  1C3A  0085               	movwf	5
 18986  1C3B  0012               	moviw fsr0++
 18987  1C3C  3A25               	xorlw	37
 18988  1C3D  1D03               	btfss	3,2
 18989  1C3E  2C40               	goto	u11981
 18990  1C3F  2C41               	goto	u11980
 18991  1C40                     u11981:	
 18992  1C40  2C5A               	goto	l10969
 18993  1C41                     u11980:	
 18994  1C41                     l10961:	
 18995                           
 18996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 18997  1C41  085A               	movf	vfpfcnvrt@fmt,w
 18998  1C42  0086               	movwf	6
 18999  1C43  0187               	clrf	7
 19000  1C44  3001               	movlw	1
 19001  1C45  0781               	addwf	1,f
 19002  1C46  3141               	addfsr 1,1
 19003  1C47  1803               	skipnc
 19004  1C48  0A81               	incf	1,f
 19005  1C49                     l10963:	
 19006                           
 19007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 19008  1C49  3025               	movlw	37
 19009  1C4A  00BB               	movwf	fputc@c
 19010  1C4B  3000               	movlw	0
 19011  1C4C  00BC               	movwf	fputc@c+1
 19012  1C4D  0862               	movf	vfpfcnvrt@fp,w
 19013  1C4E  00DC               	movwf	??_vfpfcnvrt
 19014  1C4F  085C               	movf	??_vfpfcnvrt,w
 19015  1C50  00BD               	movwf	fputc@fp
 19016  1C51  31A3  2390  319B   	fcall	_fputc
 19017  1C54                     l10965:	
 19018                           
 19019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 19020  1C54  3001               	movlw	1
 19021  1C55  0140               	movlb	0	; select bank0
 19022  1C56  00DA               	movwf	?_vfpfcnvrt
 19023  1C57  3000               	movlw	0
 19024  1C58  00DB               	movwf	?_vfpfcnvrt+1
 19025  1C59  2C88               	goto	l1747
 19026  1C5A                     l10969:	
 19027                           
 19028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 19029  1C5A  085A               	movf	vfpfcnvrt@fmt,w
 19030  1C5B  0086               	movwf	6
 19031  1C5C  0187               	clrf	7
 19032  1C5D  3001               	movlw	1
 19033  1C5E  0781               	addwf	1,f
 19034  1C5F  3141               	addfsr 1,1
 19035  1C60  1803               	skipnc
 19036  1C61  0A81               	incf	1,f
 19037  1C62                     l10971:	
 19038                           
 19039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 19040  1C62  01DA               	clrf	?_vfpfcnvrt
 19041  1C63  01DB               	clrf	?_vfpfcnvrt+1
 19042  1C64  2C88               	goto	l1747
 19043  1C65                     l10975:	
 19044                           
 19045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 19046  1C65  085A               	movf	vfpfcnvrt@fmt,w
 19047  1C66  0086               	movwf	6
 19048  1C67  0187               	clrf	7
 19049  1C68  3F40               	moviw [0]fsr1
 19050  1C69  00DC               	movwf	??_vfpfcnvrt
 19051  1C6A  3F41               	moviw [1]fsr1
 19052  1C6B  00DD               	movwf	??_vfpfcnvrt+1
 19053  1C6C  085C               	movf	??_vfpfcnvrt,w
 19054  1C6D  0084               	movwf	4
 19055  1C6E  085D               	movf	??_vfpfcnvrt+1,w
 19056  1C6F  0085               	movwf	5
 19057  1C70  0800               	movf	0,w	;code access
 19058  1C71  00DE               	movwf	??_vfpfcnvrt+2
 19059  1C72  01DF               	clrf	??_vfpfcnvrt+3
 19060  1C73  085E               	movf	??_vfpfcnvrt+2,w
 19061  1C74  00BB               	movwf	fputc@c
 19062  1C75  085F               	movf	??_vfpfcnvrt+3,w
 19063  1C76  00BC               	movwf	fputc@c+1
 19064  1C77  0862               	movf	vfpfcnvrt@fp,w
 19065  1C78  00E0               	movwf	??_vfpfcnvrt+4
 19066  1C79  0860               	movf	??_vfpfcnvrt+4,w
 19067  1C7A  00BD               	movwf	fputc@fp
 19068  1C7B  31A3  2390  319B   	fcall	_fputc
 19069  1C7E                     l10977:	
 19070                           
 19071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 19072  1C7E  0140               	movlb	0	; select bank0
 19073  1C7F  085A               	movf	vfpfcnvrt@fmt,w
 19074  1C80  0086               	movwf	6
 19075  1C81  0187               	clrf	7
 19076  1C82  3001               	movlw	1
 19077  1C83  0781               	addwf	1,f
 19078  1C84  3141               	addfsr 1,1
 19079  1C85  1803               	skipnc
 19080  1C86  0A81               	incf	1,f
 19081  1C87  2C54               	goto	l10965
 19082  1C88                     l1747:	
 19083  1C88  0008               	return
 19084  1C89                     __end_of_vfpfcnvrt:	
 19085                           
 19086                           	psect	text49
 19087  21F5                     __ptext49:	
 19088 ;; *************** function _ctoa *****************
 19089 ;; Defined at:
 19090 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19091 ;; Parameters:    Size  Location     Type
 19092 ;;  fp              1    wreg     PTR struct _IO_FILE
 19093 ;;		 -> NULL(0), 
 19094 ;;  c               1   52[BANK0 ] unsigned char 
 19095 ;; Auto vars:     Size  Location     Type
 19096 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 19097 ;;		 -> NULL(0), 
 19098 ;;  w               2   56[BANK0 ] int 
 19099 ;;  l               2    0        int 
 19100 ;; Return value:  Size  Location     Type
 19101 ;;                  2   52[BANK0 ] int 
 19102 ;; Registers used:
 19103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19104 ;; Tracked objects:
 19105 ;;		On entry : 0/0
 19106 ;;		On exit  : 0/0
 19107 ;;		Unchanged: 0/0
 19108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19110 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19112 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19113 ;;Total ram usage:        6 bytes
 19114 ;; Hardware stack levels used:    1
 19115 ;; Hardware stack levels required when called:   13
 19116 ;; This function calls:
 19117 ;;		_pad
 19118 ;; This function is called by:
 19119 ;;		_vfpfcnvrt
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123                           
 19124                           ;psect for function _ctoa
 19125  21F5                     _ctoa:	
 19126                           
 19127                           ;incstack = 0
 19128 ;; hardware stack exceeded
 19129                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19130                           ;ctoa@fp stored from wreg
 19131  21F5  0140               	movlb	0	; select bank0
 19132  21F6  00D7               	movwf	ctoa@fp
 19133  21F7                     l10719:	
 19134                           
 19135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 19136  21F7  0142               	movlb	2	; select bank2
 19137  21F8  0829               	movf	_width^(0+256),w
 19138  21F9  042A               	iorwf	(_width+1)^(0+256),w
 19139  21FA  1D03               	btfss	3,2
 19140  21FB  29FD               	goto	u11491
 19141  21FC  29FE               	goto	u11490
 19142  21FD                     u11491:	
 19143  21FD  2A06               	goto	l10723
 19144  21FE                     u11490:	
 19145  21FE                     l10721:	
 19146  21FE  082A               	movf	(_width+1)^(0+256),w
 19147  21FF  0140               	movlb	0	; select bank0
 19148  2200  00D9               	movwf	ctoa@w+1
 19149  2201  0142               	movlb	2	; select bank2
 19150  2202  0829               	movf	_width^(0+256),w
 19151  2203  0140               	movlb	0	; select bank0
 19152  2204  00D8               	movwf	ctoa@w
 19153  2205  2A0F               	goto	l10725
 19154  2206                     l10723:	
 19155  2206  0829               	movf	_width^(0+256),w
 19156  2207  3EFF               	addlw	255
 19157  2208  0140               	movlb	0	; select bank0
 19158  2209  00D8               	movwf	ctoa@w
 19159  220A  30FF               	movlw	255
 19160  220B  0142               	movlb	2	; select bank2
 19161  220C  3D2A               	addwfc	(_width+1)^(0+256),w
 19162  220D  0140               	movlb	0	; select bank0
 19163  220E  00D9               	movwf	ctoa@w+1
 19164  220F                     l10725:	
 19165                           
 19166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 19167  220F  0854               	movf	ctoa@c,w
 19168  2210  00D6               	movwf	??_ctoa
 19169  2211  0856               	movf	??_ctoa,w
 19170  2212  0147               	movlb	7	; select bank7
 19171  2213  00A0               	movwf	_dbuf^(0+896)
 19172  2214                     l10727:	
 19173                           
 19174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 19175  2214  01A1               	clrf	(_dbuf^(0+896)+1)
 19176  2215                     l10729:	
 19177                           
 19178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 19179  2215  30A0               	movlw	(low (_dbuf| (0+768)))& (0+255)
 19180  2216  0140               	movlb	0	; select bank0
 19181  2217  00D6               	movwf	??_ctoa
 19182  2218  0856               	movf	??_ctoa,w
 19183  2219  00CB               	movwf	pad@buf
 19184  221A  0859               	movf	ctoa@w+1,w
 19185  221B  00CD               	movwf	pad@p+1
 19186  221C  0858               	movf	ctoa@w,w
 19187  221D  00CC               	movwf	pad@p
 19188  221E  0857               	movf	ctoa@fp,w
 19189  221F  31A5  2512  31A1   	fcall	_pad
 19190  2222  0140               	movlb	0	; select bank0
 19191  2223  084C               	movf	?_pad+1,w
 19192  2224  00D5               	movwf	?_ctoa+1
 19193  2225  084B               	movf	?_pad,w
 19194  2226  00D4               	movwf	?_ctoa
 19195  2227                     l1742:	
 19196  2227  0008               	return
 19197  2228                     __end_of_ctoa:	
 19198                           
 19199                           	psect	text50
 19200  2512                     __ptext50:	
 19201 ;; *************** function _pad *****************
 19202 ;; Defined at:
 19203 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19204 ;; Parameters:    Size  Location     Type
 19205 ;;  fp              1    wreg     PTR struct _IO_FILE
 19206 ;;		 -> NULL(0), 
 19207 ;;  buf             1   43[BANK0 ] PTR unsigned char 
 19208 ;;		 -> dbuf(32), 
 19209 ;;  p               2   44[BANK0 ] int 
 19210 ;; Auto vars:     Size  Location     Type
 19211 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
 19212 ;;		 -> NULL(0), 
 19213 ;;  w               2   49[BANK0 ] int 
 19214 ;;  i               2   47[BANK0 ] int 
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  2   43[BANK0 ] int 
 19217 ;; Registers used:
 19218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19224 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19225 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19227 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19228 ;;Total ram usage:        9 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; Hardware stack levels required when called:   12
 19231 ;; This function calls:
 19232 ;;		_fputc
 19233 ;;		_fputs
 19234 ;;		_strlen
 19235 ;; This function is called by:
 19236 ;;		_ctoa
 19237 ;; This function uses a non-reentrant model
 19238 ;;
 19239                           
 19240                           
 19241                           ;psect for function _pad
 19242  2512                     _pad:	
 19243                           
 19244                           ;incstack = 0
 19245 ;; hardware stack exceeded
 19246                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19247                           ;pad@fp stored from wreg
 19248  2512  0140               	movlb	0	; select bank0
 19249  2513  00D3               	movwf	pad@fp
 19250  2514                     l10697:	
 19251                           
 19252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 19253  2514  0142               	movlb	2	; select bank2
 19254  2515  1C2B               	btfss	_flags^(0+256),0
 19255  2516  2D18               	goto	u11451
 19256  2517  2D19               	goto	u11450
 19257  2518                     u11451:	
 19258  2518  2D22               	goto	l10701
 19259  2519                     u11450:	
 19260  2519                     l10699:	
 19261                           
 19262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 19263  2519  0140               	movlb	0	; select bank0
 19264  251A  0853               	movf	pad@fp,w
 19265  251B  00CE               	movwf	??_pad
 19266  251C  084E               	movf	??_pad,w
 19267  251D  00C3               	movwf	fputs@fp
 19268  251E  084B               	movf	pad@buf,w
 19269  251F  31A1  2140  31A5   	fcall	_fputs
 19270  2522                     l10701:	
 19271                           
 19272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 19273  2522  0140               	movlb	0	; select bank0
 19274  2523  1BCD               	btfsc	pad@p+1,7
 19275  2524  2D26               	goto	u11461
 19276  2525  2D27               	goto	u11460
 19277  2526                     u11461:	
 19278  2526  2D2C               	goto	l10705
 19279  2527                     u11460:	
 19280  2527                     l10703:	
 19281  2527  084D               	movf	pad@p+1,w
 19282  2528  00D2               	movwf	pad@w+1
 19283  2529  084C               	movf	pad@p,w
 19284  252A  00D1               	movwf	pad@w
 19285  252B  2D2E               	goto	l1730
 19286  252C                     l10705:	
 19287  252C  01D1               	clrf	pad@w
 19288  252D  01D2               	clrf	pad@w+1
 19289  252E                     l1730:	
 19290                           
 19291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 19292  252E  01CF               	clrf	pad@i
 19293  252F  01D0               	clrf	pad@i+1
 19294                           
 19295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 19296  2530  2D42               	goto	l10711
 19297  2531                     l10707:	
 19298                           
 19299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 19300  2531  3020               	movlw	32
 19301  2532  0140               	movlb	0	; select bank0
 19302  2533  00BB               	movwf	fputc@c
 19303  2534  3000               	movlw	0
 19304  2535  00BC               	movwf	fputc@c+1
 19305  2536  0853               	movf	pad@fp,w
 19306  2537  00CE               	movwf	??_pad
 19307  2538  084E               	movf	??_pad,w
 19308  2539  00BD               	movwf	fputc@fp
 19309  253A  31A3  2390  31A5   	fcall	_fputc
 19310  253D                     l10709:	
 19311                           
 19312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 19313  253D  3001               	movlw	1
 19314  253E  0140               	movlb	0	; select bank0
 19315  253F  07CF               	addwf	pad@i,f
 19316  2540  3000               	movlw	0
 19317  2541  3DD0               	addwfc	pad@i+1,f
 19318  2542                     l10711:	
 19319                           
 19320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 19321  2542  0850               	movf	pad@i+1,w
 19322  2543  3A80               	xorlw	128
 19323  2544  00CE               	movwf	??_pad
 19324  2545  0852               	movf	pad@w+1,w
 19325  2546  3A80               	xorlw	128
 19326  2547  024E               	subwf	??_pad,w
 19327  2548  1D03               	skipz
 19328  2549  2D4C               	goto	u11475
 19329  254A  0851               	movf	pad@w,w
 19330  254B  024F               	subwf	pad@i,w
 19331  254C                     u11475:	
 19332  254C  1C03               	skipc
 19333  254D  2D4F               	goto	u11471
 19334  254E  2D50               	goto	u11470
 19335  254F                     u11471:	
 19336  254F  2D31               	goto	l10707
 19337  2550                     u11470:	
 19338  2550                     l1733:	
 19339                           
 19340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 19341  2550  0142               	movlb	2	; select bank2
 19342  2551  182B               	btfsc	_flags^(0+256),0
 19343  2552  2D54               	goto	u11481
 19344  2553  2D55               	goto	u11480
 19345  2554                     u11481:	
 19346  2554  2D5E               	goto	l10715
 19347  2555                     u11480:	
 19348  2555                     l10713:	
 19349                           
 19350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 19351  2555  0140               	movlb	0	; select bank0
 19352  2556  0853               	movf	pad@fp,w
 19353  2557  00CE               	movwf	??_pad
 19354  2558  084E               	movf	??_pad,w
 19355  2559  00C3               	movwf	fputs@fp
 19356  255A  084B               	movf	pad@buf,w
 19357  255B  31A1  2140  31A5   	fcall	_fputs
 19358  255E                     l10715:	
 19359                           
 19360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 19361  255E  0140               	movlb	0	; select bank0
 19362  255F  084B               	movf	pad@buf,w
 19363  2560  00A0               	movwf	strlen@s
 19364  2561  3003               	movlw	3
 19365  2562  00A1               	movwf	strlen@s+1
 19366  2563  31AF  2710  31A5   	fcall	_strlen
 19367  2566  0140               	movlb	0	; select bank0
 19368  2567  0851               	movf	pad@w,w
 19369  2568  0720               	addwf	?_strlen,w
 19370  2569  00CB               	movwf	?_pad
 19371  256A  0852               	movf	pad@w+1,w
 19372  256B  3D21               	addwfc	?_strlen+1,w
 19373  256C  00CC               	movwf	?_pad+1
 19374  256D                     l1735:	
 19375  256D  0008               	return
 19376  256E                     __end_of_pad:	
 19377                           
 19378                           	psect	text51
 19379  2F10                     __ptext51:	
 19380 ;; *************** function _strlen *****************
 19381 ;; Defined at:
 19382 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 19383 ;; Parameters:    Size  Location     Type
 19384 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 19385 ;;		 -> dbuf(32), STR_22(9), 
 19386 ;; Auto vars:     Size  Location     Type
 19387 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 19388 ;;		 -> dbuf(32), STR_22(9), 
 19389 ;; Return value:  Size  Location     Type
 19390 ;;                  2    0[BANK0 ] unsigned int 
 19391 ;; Registers used:
 19392 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19393 ;; Tracked objects:
 19394 ;;		On entry : 0/0
 19395 ;;		On exit  : 0/0
 19396 ;;		Unchanged: 0/0
 19397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19401 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19402 ;;Total ram usage:        5 bytes
 19403 ;; Hardware stack levels used:    1
 19404 ;; Hardware stack levels required when called:    4
 19405 ;; This function calls:
 19406 ;;		Nothing
 19407 ;; This function is called by:
 19408 ;;		_pad
 19409 ;;		_TM1650_scrollPrint
 19410 ;; This function uses a non-reentrant model
 19411 ;;
 19412                           
 19413                           
 19414                           ;psect for function _strlen
 19415  2F10                     _strlen:	
 19416  2F10                     l10679:	
 19417                           ;incstack = 0
 19418                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 19419                           
 19420  2F10  0140               	movlb	0	; select bank0
 19421  2F11  0821               	movf	strlen@s+1,w
 19422  2F12  00A4               	movwf	strlen@a+1
 19423  2F13  0820               	movf	strlen@s,w
 19424  2F14  00A3               	movwf	strlen@a
 19425  2F15  2F1A               	goto	l10683
 19426  2F16                     l10681:	
 19427  2F16  3001               	movlw	1
 19428  2F17  07A0               	addwf	strlen@s,f
 19429  2F18  3000               	movlw	0
 19430  2F19  3DA1               	addwfc	strlen@s+1,f
 19431  2F1A                     l10683:	
 19432  2F1A  0820               	movf	strlen@s,w
 19433  2F1B  0084               	movwf	4
 19434  2F1C  0821               	movf	strlen@s+1,w
 19435  2F1D  0085               	movwf	5
 19436  2F1E  0012               	moviw fsr0++
 19437  2F1F  1D03               	btfss	3,2
 19438  2F20  2F22               	goto	u11431
 19439  2F21  2F23               	goto	u11430
 19440  2F22                     u11431:	
 19441  2F22  2F16               	goto	l10681
 19442  2F23                     u11430:	
 19443  2F23                     l10685:	
 19444  2F23  0823               	movf	strlen@a,w
 19445  2F24  0220               	subwf	strlen@s,w
 19446  2F25  00A0               	movwf	?_strlen
 19447  2F26  0824               	movf	strlen@a+1,w
 19448  2F27  3B21               	subwfb	strlen@s+1,w
 19449  2F28  00A1               	movwf	?_strlen+1
 19450  2F29                     l2241:	
 19451  2F29  0008               	return
 19452  2F2A                     __end_of_strlen:	
 19453                           
 19454                           	psect	text52
 19455  2140                     __ptext52:	
 19456 ;; *************** function _fputs *****************
 19457 ;; Defined at:
 19458 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 19459 ;; Parameters:    Size  Location     Type
 19460 ;;  s               1    wreg     PTR const unsigned char 
 19461 ;;		 -> dbuf(32), 
 19462 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
 19463 ;;		 -> NULL(0), 
 19464 ;; Auto vars:     Size  Location     Type
 19465 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 19466 ;;		 -> dbuf(32), 
 19467 ;;  i               2   41[BANK0 ] int 
 19468 ;;  c               1   39[BANK0 ] unsigned char 
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  2   35[BANK0 ] int 
 19471 ;; Registers used:
 19472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19478 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19479 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19480 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19481 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19482 ;;Total ram usage:        8 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:   11
 19485 ;; This function calls:
 19486 ;;		_fputc
 19487 ;; This function is called by:
 19488 ;;		_pad
 19489 ;; This function uses a non-reentrant model
 19490 ;;
 19491                           
 19492                           
 19493                           ;psect for function _fputs
 19494  2140                     _fputs:	
 19495                           
 19496                           ;incstack = 0
 19497 ;; hardware stack exceeded
 19498                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19499                           ;fputs@s stored from wreg
 19500  2140  0140               	movlb	0	; select bank0
 19501  2141  00C8               	movwf	fputs@s
 19502  2142                     l10689:	
 19503  2142  01C9               	clrf	fputs@i
 19504  2143  01CA               	clrf	fputs@i+1
 19505  2144  2958               	goto	l10695
 19506  2145                     l10691:	
 19507  2145  0847               	movf	fputs@c,w
 19508  2146  00C4               	movwf	??_fputs
 19509  2147  01C5               	clrf	??_fputs+1
 19510  2148  0844               	movf	??_fputs,w
 19511  2149  00BB               	movwf	fputc@c
 19512  214A  0845               	movf	??_fputs+1,w
 19513  214B  00BC               	movwf	fputc@c+1
 19514  214C  0843               	movf	fputs@fp,w
 19515  214D  00C6               	movwf	??_fputs+2
 19516  214E  0846               	movf	??_fputs+2,w
 19517  214F  00BD               	movwf	fputc@fp
 19518  2150  31A3  2390  31A1   	fcall	_fputc
 19519  2153                     l10693:	
 19520  2153  3001               	movlw	1
 19521  2154  0140               	movlb	0	; select bank0
 19522  2155  07C9               	addwf	fputs@i,f
 19523  2156  3000               	movlw	0
 19524  2157  3DCA               	addwfc	fputs@i+1,f
 19525  2158                     l10695:	
 19526  2158  0849               	movf	fputs@i,w
 19527  2159  0748               	addwf	fputs@s,w
 19528  215A  00C4               	movwf	??_fputs
 19529  215B  0844               	movf	??_fputs,w
 19530  215C  0086               	movwf	6
 19531  215D  3003               	movlw	3	; select bank6/7
 19532  215E  0087               	movwf	7
 19533  215F  0801               	movf	1,w
 19534  2160  00C5               	movwf	??_fputs+1
 19535  2161  0845               	movf	??_fputs+1,w
 19536  2162  00C7               	movwf	fputs@c
 19537  2163  0847               	movf	fputs@c,w
 19538  2164  1D03               	btfss	3,2
 19539  2165  2967               	goto	u11441
 19540  2166  2968               	goto	u11440
 19541  2167                     u11441:	
 19542  2167  2945               	goto	l10691
 19543  2168                     u11440:	
 19544  2168                     l2228:	
 19545  2168  0008               	return
 19546  2169                     __end_of_fputs:	
 19547                           
 19548                           	psect	text53
 19549  2390                     __ptext53:	
 19550 ;; *************** function _fputc *****************
 19551 ;; Defined at:
 19552 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 19553 ;; Parameters:    Size  Location     Type
 19554 ;;  c               2   27[BANK0 ] int 
 19555 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 19556 ;;		 -> NULL(0), 
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;		None
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  2   27[BANK0 ] int 
 19561 ;; Registers used:
 19562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19563 ;; Tracked objects:
 19564 ;;		On entry : 0/0
 19565 ;;		On exit  : 0/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19568 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19570 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19571 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19572 ;;Total ram usage:        8 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; Hardware stack levels required when called:   10
 19575 ;; This function calls:
 19576 ;;		_putch
 19577 ;; This function is called by:
 19578 ;;		_pad
 19579 ;;		_vfpfcnvrt
 19580 ;;		_fputs
 19581 ;; This function uses a non-reentrant model
 19582 ;;
 19583                           
 19584                           
 19585                           ;psect for function _fputc
 19586  2390                     _fputc:	
 19587  2390                     l10665:	
 19588                           ;incstack = 0
 19589                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19590                           
 19591  2390  0140               	movlb	0	; select bank0
 19592  2391  083D               	movf	fputc@fp,w
 19593  2392  1903               	btfsc	3,2
 19594  2393  2B95               	goto	u11391
 19595  2394  2B96               	goto	u11390
 19596  2395                     u11391:	
 19597  2395  2B9B               	goto	l10669
 19598  2396                     u11390:	
 19599  2396                     l10667:	
 19600  2396  083D               	movf	fputc@fp,w
 19601  2397  1D03               	btfss	3,2
 19602  2398  2B9A               	goto	u11401
 19603  2399  2B9B               	goto	u11400
 19604  239A                     u11401:	
 19605  239A  2BA0               	goto	l10671
 19606  239B                     u11400:	
 19607  239B                     l10669:	
 19608  239B  083B               	movf	fputc@c,w
 19609  239C  31A1  2196  31A3   	fcall	_putch
 19610  239F  2BD0               	goto	l2220
 19611  23A0                     l10671:	
 19612  23A0  083D               	movf	fputc@fp,w
 19613  23A1  3E03               	addlw	3
 19614  23A2  0086               	movwf	6
 19615  23A3  0187               	clrf	7
 19616  23A4  0016               	moviw fsr1++
 19617  23A5  0401               	iorwf	1,w
 19618  23A6  1903               	btfsc	3,2
 19619  23A7  2BA9               	goto	u11411
 19620  23A8  2BAA               	goto	u11410
 19621  23A9                     u11411:	
 19622  23A9  2BC7               	goto	l10675
 19623  23AA                     u11410:	
 19624  23AA                     l10673:	
 19625  23AA  083D               	movf	fputc@fp,w
 19626  23AB  3E03               	addlw	3
 19627  23AC  0086               	movwf	6
 19628  23AD  0187               	clrf	7
 19629  23AE  3F40               	moviw [0]fsr1
 19630  23AF  00BE               	movwf	??_fputc
 19631  23B0  3F41               	moviw [1]fsr1
 19632  23B1  00BF               	movwf	??_fputc+1
 19633  23B2  0A3D               	incf	fputc@fp,w
 19634  23B3  0086               	movwf	6
 19635  23B4  0187               	clrf	7
 19636  23B5  3F40               	moviw [0]fsr1
 19637  23B6  00C0               	movwf	??_fputc+2
 19638  23B7  3F41               	moviw [1]fsr1
 19639  23B8  00C1               	movwf	??_fputc+3
 19640  23B9  0841               	movf	??_fputc+3,w
 19641  23BA  3A80               	xorlw	128
 19642  23BB  00C2               	movwf	??_fputc+4
 19643  23BC  083F               	movf	??_fputc+1,w
 19644  23BD  3A80               	xorlw	128
 19645  23BE  0242               	subwf	??_fputc+4,w
 19646  23BF  1D03               	skipz
 19647  23C0  2BC3               	goto	u11425
 19648  23C1  083E               	movf	??_fputc,w
 19649  23C2  0240               	subwf	??_fputc+2,w
 19650  23C3                     u11425:	
 19651  23C3  1803               	skipnc
 19652  23C4  2BC6               	goto	u11421
 19653  23C5  2BC7               	goto	u11420
 19654  23C6                     u11421:	
 19655  23C6  2BD0               	goto	l2220
 19656  23C7                     u11420:	
 19657  23C7                     l10675:	
 19658  23C7  0140               	movlb	0	; select bank0
 19659  23C8  0A3D               	incf	fputc@fp,w
 19660  23C9  0086               	movwf	6
 19661  23CA  0187               	clrf	7
 19662  23CB  3001               	movlw	1
 19663  23CC  0781               	addwf	1,f
 19664  23CD  3141               	addfsr 1,1
 19665  23CE  1803               	skipnc
 19666  23CF  0A81               	incf	1,f
 19667  23D0                     l2220:	
 19668  23D0  0008               	return
 19669  23D1                     __end_of_fputc:	
 19670                           
 19671                           	psect	text54
 19672  2196                     __ptext54:	
 19673 ;; *************** function _putch *****************
 19674 ;; Defined at:
 19675 ;;		line 166 in file "tm1650.c"
 19676 ;; Parameters:    Size  Location     Type
 19677 ;;  n               1    wreg     unsigned char 
 19678 ;; Auto vars:     Size  Location     Type
 19679 ;;  n               1   26[BANK0 ] unsigned char 
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  1    wreg      void 
 19682 ;; Registers used:
 19683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19693 ;;Total ram usage:        2 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; Hardware stack levels required when called:    9
 19696 ;; This function calls:
 19697 ;;		_TM1650_setDigit
 19698 ;; This function is called by:
 19699 ;;		_fputc
 19700 ;; This function uses a non-reentrant model
 19701 ;;
 19702                           
 19703                           
 19704                           ;psect for function _putch
 19705  2196                     _putch:	
 19706                           
 19707                           ;incstack = 0
 19708                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19709                           ;putch@n stored from wreg
 19710  2196  0140               	movlb	0	; select bank0
 19711  2197  00BA               	movwf	putch@n
 19712  2198                     l10651:	
 19713                           
 19714                           ;tm1650.c: 168:     if(position > 3 || n == '\r' || n == '\0')
 19715  2198  3004               	movlw	4
 19716  2199  0142               	movlb	2	; select bank2
 19717  219A  0242               	subwf	_position^(0+256),w
 19718  219B  1803               	skipnc
 19719  219C  299E               	goto	u11351
 19720  219D  299F               	goto	u11350
 19721  219E                     u11351:	
 19722  219E  29AB               	goto	l10657
 19723  219F                     u11350:	
 19724  219F                     l10653:	
 19725  219F  300D               	movlw	13
 19726  21A0  0140               	movlb	0	; select bank0
 19727  21A1  063A               	xorwf	putch@n,w
 19728  21A2  1903               	btfsc	3,2
 19729  21A3  29A5               	goto	u11361
 19730  21A4  29A6               	goto	u11360
 19731  21A5                     u11361:	
 19732  21A5  29AB               	goto	l10657
 19733  21A6                     u11360:	
 19734  21A6                     l10655:	
 19735  21A6  083A               	movf	putch@n,w
 19736  21A7  1D03               	btfss	3,2
 19737  21A8  29AA               	goto	u11371
 19738  21A9  29AB               	goto	u11370
 19739  21AA                     u11371:	
 19740  21AA  29AD               	goto	l10659
 19741  21AB                     u11370:	
 19742  21AB                     l10657:	
 19743                           
 19744                           ;tm1650.c: 169:         position = 0;
 19745  21AB  0142               	movlb	2	; select bank2
 19746  21AC  01C2               	clrf	_position^(0+256)
 19747  21AD                     l10659:	
 19748                           
 19749                           ;tm1650.c: 171:     if(n != '\r'){
 19750  21AD  300D               	movlw	13
 19751  21AE  0140               	movlb	0	; select bank0
 19752  21AF  063A               	xorwf	putch@n,w
 19753  21B0  1903               	btfsc	3,2
 19754  21B1  29B3               	goto	u11381
 19755  21B2  29B4               	goto	u11380
 19756  21B3                     u11381:	
 19757  21B3  29C3               	goto	l1276
 19758  21B4                     u11380:	
 19759  21B4                     l10661:	
 19760                           
 19761                           ;tm1650.c: 172:         TM1650_setDigit(position, n);
 19762  21B4  083A               	movf	putch@n,w
 19763  21B5  00B9               	movwf	??_putch
 19764  21B6  0839               	movf	??_putch,w
 19765  21B7  00B6               	movwf	TM1650_setDigit@data
 19766  21B8  0142               	movlb	2	; select bank2
 19767  21B9  0842               	movf	_position^(0+256),w
 19768  21BA  31AE  261E  31A1   	fcall	_TM1650_setDigit
 19769  21BD                     l10663:	
 19770                           
 19771                           ;tm1650.c: 173:         position++;
 19772  21BD  3001               	movlw	1
 19773  21BE  0140               	movlb	0	; select bank0
 19774  21BF  00B9               	movwf	??_putch
 19775  21C0  0839               	movf	??_putch,w
 19776  21C1  0142               	movlb	2	; select bank2
 19777  21C2  07C2               	addwf	_position^(0+256),f
 19778  21C3                     l1276:	
 19779  21C3  0008               	return
 19780  21C4                     __end_of_putch:	
 19781                           
 19782                           	psect	text55
 19783  2E1E                     __ptext55:	
 19784 ;; *************** function _TM1650_setDigit *****************
 19785 ;; Defined at:
 19786 ;;		line 95 in file "tm1650.c"
 19787 ;; Parameters:    Size  Location     Type
 19788 ;;  digit           1    wreg     unsigned char 
 19789 ;;  data            1   22[BANK0 ] unsigned char 
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;  digit           1   24[BANK0 ] unsigned char 
 19792 ;; Return value:  Size  Location     Type
 19793 ;;                  1    wreg      void 
 19794 ;; Registers used:
 19795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19796 ;; Tracked objects:
 19797 ;;		On entry : 0/0
 19798 ;;		On exit  : 0/0
 19799 ;;		Unchanged: 0/0
 19800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19801 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19804 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19805 ;;Total ram usage:        3 bytes
 19806 ;; Hardware stack levels used:    1
 19807 ;; Hardware stack levels required when called:    8
 19808 ;; This function calls:
 19809 ;;		_writeData
 19810 ;; This function is called by:
 19811 ;;		_putch
 19812 ;; This function uses a non-reentrant model
 19813 ;;
 19814                           
 19815                           
 19816                           ;psect for function _TM1650_setDigit
 19817  2E1E                     _TM1650_setDigit:	
 19818                           
 19819                           ;incstack = 0
 19820                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19821                           ;TM1650_setDigit@digit stored from wreg
 19822  2E1E  0140               	movlb	0	; select bank0
 19823  2E1F  00B8               	movwf	TM1650_setDigit@digit
 19824  2E20                     l10649:	
 19825                           
 19826                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 19827  2E20  0836               	movf	TM1650_setDigit@data,w
 19828  2E21  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 19829  2E22  0084               	movwf	4
 19830  2E23  30A7               	movlw	high ((_charTable+65504)| (0+32768))
 19831  2E24  1803               	skipnc
 19832  2E25  3E01               	addlw	1
 19833  2E26  0085               	movwf	5
 19834  2E27  0800               	movf	0,w	;code access
 19835  2E28  00B7               	movwf	??_TM1650_setDigit
 19836  2E29  0837               	movf	??_TM1650_setDigit,w
 19837  2E2A  00B0               	movwf	writeData@data
 19838  2E2B  0838               	movf	TM1650_setDigit@digit,w
 19839  2E2C  3E34               	addlw	52
 19840  2E2D  31AF  277D  31AE   	fcall	_writeData
 19841  2E30                     l1253:	
 19842  2E30  0008               	return
 19843  2E31                     __end_of_TM1650_setDigit:	
 19844                           
 19845                           	psect	text56
 19846  2690                     __ptext56:	
 19847 ;; *************** function _TM1650_fastPrintNum_2digit *****************
 19848 ;; Defined at:
 19849 ;;		line 136 in file "tm1650.c"
 19850 ;; Parameters:    Size  Location     Type
 19851 ;;  num             1    wreg     unsigned char 
 19852 ;; Auto vars:     Size  Location     Type
 19853 ;;  num             1   25[BANK0 ] unsigned char 
 19854 ;; Return value:  Size  Location     Type
 19855 ;;                  1    wreg      void 
 19856 ;; Registers used:
 19857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19858 ;; Tracked objects:
 19859 ;;		On entry : 0/0
 19860 ;;		On exit  : 0/0
 19861 ;;		Unchanged: 0/0
 19862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19865 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19866 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19867 ;;Total ram usage:        4 bytes
 19868 ;; Hardware stack levels used:    1
 19869 ;; Hardware stack levels required when called:    8
 19870 ;; This function calls:
 19871 ;;		___awdiv
 19872 ;;		___awmod
 19873 ;;		_writeData
 19874 ;; This function is called by:
 19875 ;;		_CONTROL_BEAT
 19876 ;;		_CONTROL_ANIMATION
 19877 ;; This function uses a non-reentrant model
 19878 ;;
 19879                           
 19880                           
 19881                           ;psect for function _TM1650_fastPrintNum_2digit
 19882  2690                     _TM1650_fastPrintNum_2digit:	
 19883                           
 19884                           ;incstack = 0
 19885                           ; Regs used in _TM1650_fastPrintNum_2digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19886                           ;TM1650_fastPrintNum_2digit@num stored from wreg
 19887  2690  0140               	movlb	0	; select bank0
 19888  2691  00B9               	movwf	TM1650_fastPrintNum_2digit@num
 19889  2692                     l11901:	
 19890                           
 19891                           ;tm1650.c: 138:     if(num > 99){
 19892  2692  3064               	movlw	100
 19893  2693  0239               	subwf	TM1650_fastPrintNum_2digit@num,w
 19894  2694  1C03               	skipc
 19895  2695  2E97               	goto	u13711
 19896  2696  2E98               	goto	u13710
 19897  2697                     u13711:	
 19898  2697  2EBC               	goto	l11907
 19899  2698                     u13710:	
 19900  2698                     l11903:	
 19901                           
 19902                           ;tm1650.c: 139:         writeData(0x34, 0x79);
 19903  2698  3079               	movlw	121
 19904  2699  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19905  269A  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19906  269B  00B0               	movwf	writeData@data
 19907  269C  3034               	movlw	52
 19908  269D  31AF  277D  31A6   	fcall	_writeData
 19909                           
 19910                           ;tm1650.c: 140:         writeData(0x35, 0x79);
 19911  26A0  3079               	movlw	121
 19912  26A1  0140               	movlb	0	; select bank0
 19913  26A2  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19914  26A3  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19915  26A4  00B0               	movwf	writeData@data
 19916  26A5  3035               	movlw	53
 19917  26A6  31AF  277D  31A6   	fcall	_writeData
 19918                           
 19919                           ;tm1650.c: 141:         writeData(0x36, 0x79);
 19920  26A9  3079               	movlw	121
 19921  26AA  0140               	movlb	0	; select bank0
 19922  26AB  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19923  26AC  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19924  26AD  00B0               	movwf	writeData@data
 19925  26AE  3036               	movlw	54
 19926  26AF  31AF  277D  31A6   	fcall	_writeData
 19927                           
 19928                           ;tm1650.c: 142:         writeData(0x37, 0x79);
 19929  26B2  3079               	movlw	121
 19930  26B3  0140               	movlb	0	; select bank0
 19931  26B4  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19932  26B5  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19933  26B6  00B0               	movwf	writeData@data
 19934  26B7  3037               	movlw	55
 19935  26B8  31AF  277D  31A6   	fcall	_writeData
 19936  26BB  2F07               	goto	l1265
 19937  26BC                     l11907:	
 19938                           
 19939                           ;tm1650.c: 146:     writeData(0x37, charTable[(num % 10) + 16]);
 19940  26BC  300A               	movlw	10
 19941  26BD  00A9               	movwf	___awmod@divisor
 19942  26BE  3000               	movlw	0
 19943  26BF  00AA               	movwf	___awmod@divisor+1
 19944  26C0  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 19945  26C1  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19946  26C2  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 19947  26C3  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19948  26C4  00AB               	movwf	___awmod@dividend
 19949  26C5  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 19950  26C6  00AC               	movwf	___awmod@dividend+1
 19951  26C7  31A4  24BE  31A6   	fcall	___awmod
 19952  26CA  0140               	movlb	0	; select bank0
 19953  26CB  082A               	movf	?___awmod+1,w
 19954  26CC  0085               	movwf	5
 19955  26CD  0829               	movf	?___awmod,w
 19956  26CE  0084               	movwf	4
 19957  26CF  3010               	movlw	low ((_charTable+16)| (0+32768))
 19958  26D0  0784               	addwf	4,f
 19959  26D1  30A8               	movlw	high ((_charTable+16)| (0+32768))
 19960  26D2  3D85               	addwfc	5,f
 19961  26D3  0800               	movf	0,w	;code access
 19962  26D4  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 19963  26D5  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 19964  26D6  00B0               	movwf	writeData@data
 19965  26D7  3037               	movlw	55
 19966  26D8  31AF  277D  31A6   	fcall	_writeData
 19967                           
 19968                           ;tm1650.c: 147:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 19969  26DB  300A               	movlw	10
 19970  26DC  0140               	movlb	0	; select bank0
 19971  26DD  00A9               	movwf	___awmod@divisor
 19972  26DE  3000               	movlw	0
 19973  26DF  00AA               	movwf	___awmod@divisor+1
 19974  26E0  300A               	movlw	10
 19975  26E1  00A0               	movwf	___awdiv@divisor
 19976  26E2  3000               	movlw	0
 19977  26E3  00A1               	movwf	___awdiv@divisor+1
 19978  26E4  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 19979  26E5  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19980  26E6  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 19981  26E7  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19982  26E8  00A2               	movwf	___awdiv@dividend
 19983  26E9  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 19984  26EA  00A3               	movwf	___awdiv@dividend+1
 19985  26EB  31A5  25CC  31A6   	fcall	___awdiv
 19986  26EE  0140               	movlb	0	; select bank0
 19987  26EF  0821               	movf	?___awdiv+1,w
 19988  26F0  00AC               	movwf	___awmod@dividend+1
 19989  26F1  0820               	movf	?___awdiv,w
 19990  26F2  00AB               	movwf	___awmod@dividend
 19991  26F3  31A4  24BE  31A6   	fcall	___awmod
 19992  26F6  0140               	movlb	0	; select bank0
 19993  26F7  082A               	movf	?___awmod+1,w
 19994  26F8  0085               	movwf	5
 19995  26F9  0829               	movf	?___awmod,w
 19996  26FA  0084               	movwf	4
 19997  26FB  3010               	movlw	low ((_charTable+16)| (0+32768))
 19998  26FC  0784               	addwf	4,f
 19999  26FD  30A8               	movlw	high ((_charTable+16)| (0+32768))
 20000  26FE  3D85               	addwfc	5,f
 20001  26FF  0800               	movf	0,w	;code access
 20002  2700  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 20003  2701  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 20004  2702  00B0               	movwf	writeData@data
 20005  2703  3036               	movlw	54
 20006  2704  31AF  277D  31A6   	fcall	_writeData
 20007  2707                     l1265:	
 20008  2707  0008               	return
 20009  2708                     __end_of_TM1650_fastPrintNum_2digit:	
 20010                           
 20011                           	psect	text57
 20012  2F7D                     __ptext57:	
 20013 ;; *************** function _writeData *****************
 20014 ;; Defined at:
 20015 ;;		line 31 in file "tm1650.c"
 20016 ;; Parameters:    Size  Location     Type
 20017 ;;  address         1    wreg     unsigned char 
 20018 ;;  data            1   16[BANK0 ] unsigned char 
 20019 ;; Auto vars:     Size  Location     Type
 20020 ;;  address         1   20[BANK0 ] unsigned char 
 20021 ;;  status          1   21[BANK0 ] enum E11405
 20022 ;; Return value:  Size  Location     Type
 20023 ;;                  1    wreg      void 
 20024 ;; Registers used:
 20025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20026 ;; Tracked objects:
 20027 ;;		On entry : 0/0
 20028 ;;		On exit  : 0/0
 20029 ;;		Unchanged: 0/0
 20030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20031 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20033 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20035 ;;Total ram usage:        6 bytes
 20036 ;; Hardware stack levels used:    1
 20037 ;; Hardware stack levels required when called:    7
 20038 ;; This function calls:
 20039 ;;		_I2C1_MasterWrite
 20040 ;; This function is called by:
 20041 ;;		_TM1650_enable
 20042 ;;		_TM1650_setDigit
 20043 ;;		_TM1650_fastPrintNum
 20044 ;;		_TM1650_fastPrintNum_3digit
 20045 ;;		_TM1650_fastPrintNum_2digit
 20046 ;;		_TM1650_brightness
 20047 ;;		_TM1650_fastPrintNum_1digit
 20048 ;; This function uses a non-reentrant model
 20049 ;;
 20050                           
 20051                           
 20052                           ;psect for function _writeData
 20053  2F7D                     _writeData:	
 20054                           
 20055                           ;incstack = 0
 20056                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20057                           ;writeData@address stored from wreg
 20058  2F7D  0140               	movlb	0	; select bank0
 20059  2F7E  00B4               	movwf	writeData@address
 20060  2F7F                     l10643:	
 20061                           
 20062                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 20063  2F7F  3002               	movlw	2
 20064  2F80  00B1               	movwf	??_writeData
 20065  2F81  0831               	movf	??_writeData,w
 20066  2F82  00B5               	movwf	writeData@status
 20067  2F83                     l10645:	
 20068                           
 20069                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 20070  2F83  01A7               	clrf	I2C1_MasterWrite@length
 20071  2F84  0AA7               	incf	I2C1_MasterWrite@length,f
 20072  2F85  0834               	movf	writeData@address,w
 20073  2F86  00B1               	movwf	??_writeData
 20074  2F87  01B2               	clrf	??_writeData+1
 20075  2F88  0831               	movf	??_writeData,w
 20076  2F89  00A8               	movwf	I2C1_MasterWrite@address
 20077  2F8A  0832               	movf	??_writeData+1,w
 20078  2F8B  00A9               	movwf	I2C1_MasterWrite@address+1
 20079  2F8C  3035               	movlw	(low (writeData@status| 0))& (0+255)
 20080  2F8D  00B3               	movwf	??_writeData+2
 20081  2F8E  0833               	movf	??_writeData+2,w
 20082  2F8F  00AA               	movwf	I2C1_MasterWrite@pflag
 20083  2F90  3030               	movlw	(low (writeData@data| 0))& (0+255)
 20084  2F91  31A1  2169  31AF   	fcall	_I2C1_MasterWrite
 20085  2F94                     l10647:	
 20086                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 20087                           
 20088  2F94  3002               	movlw	2
 20089  2F95  0140               	movlb	0	; select bank0
 20090  2F96  0635               	xorwf	writeData@status,w
 20091  2F97  1903               	btfsc	3,2
 20092  2F98  2F9A               	goto	u11341
 20093  2F99  2F9B               	goto	u11340
 20094  2F9A                     u11341:	
 20095  2F9A  2F94               	goto	l10647
 20096  2F9B                     u11340:	
 20097  2F9B                     l1230:	
 20098  2F9B  0008               	return
 20099  2F9C                     __end_of_writeData:	
 20100                           
 20101                           	psect	text58
 20102  2169                     __ptext58:	
 20103 ;; *************** function _I2C1_MasterWrite *****************
 20104 ;; Defined at:
 20105 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;  pdata           1    wreg     PTR unsigned char 
 20108 ;;		 -> writeData@data(1), 
 20109 ;;  length          1    7[BANK0 ] unsigned char 
 20110 ;;  address         2    8[BANK0 ] unsigned short 
 20111 ;;  pflag           1   10[BANK0 ] PTR enum E10895
 20112 ;;		 -> writeData@status(1), 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 20115 ;;		 -> writeData@data(1), 
 20116 ;; Return value:  Size  Location     Type
 20117 ;;                  1    wreg      void 
 20118 ;; Registers used:
 20119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20120 ;; Tracked objects:
 20121 ;;		On entry : 0/0
 20122 ;;		On exit  : 0/0
 20123 ;;		Unchanged: 0/0
 20124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20125 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20128 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20129 ;;Total ram usage:        7 bytes
 20130 ;; Hardware stack levels used:    1
 20131 ;; Hardware stack levels required when called:    6
 20132 ;; This function calls:
 20133 ;;		_I2C1_MasterTRBInsert
 20134 ;;		_I2C1_MasterWriteTRBBuild
 20135 ;; This function is called by:
 20136 ;;		_writeData
 20137 ;; This function uses a non-reentrant model
 20138 ;;
 20139                           
 20140                           
 20141                           ;psect for function _I2C1_MasterWrite
 20142  2169                     _I2C1_MasterWrite:	
 20143                           
 20144                           ;incstack = 0
 20145                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20146                           ;I2C1_MasterWrite@pdata stored from wreg
 20147  2169  0140               	movlb	0	; select bank0
 20148  216A  00AD               	movwf	I2C1_MasterWrite@pdata
 20149  216B                     l10637:	
 20150                           
 20151                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 20152  216B  0142               	movlb	2	; select bank2
 20153  216C  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 20154  216D  296F               	goto	u11331
 20155  216E  2970               	goto	u11330
 20156  216F                     u11331:	
 20157  216F  298F               	goto	l10641
 20158  2170                     u11330:	
 20159  2170                     l10639:	
 20160                           
 20161                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 20162  2170  0140               	movlb	0	; select bank0
 20163  2171  082D               	movf	I2C1_MasterWrite@pdata,w
 20164  2172  00AB               	movwf	??_I2C1_MasterWrite
 20165  2173  082B               	movf	??_I2C1_MasterWrite,w
 20166  2174  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 20167  2175  0827               	movf	I2C1_MasterWrite@length,w
 20168  2176  00AC               	movwf	??_I2C1_MasterWrite+1
 20169  2177  082C               	movf	??_I2C1_MasterWrite+1,w
 20170  2178  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 20171  2179  0829               	movf	I2C1_MasterWrite@address+1,w
 20172  217A  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 20173  217B  0828               	movf	I2C1_MasterWrite@address,w
 20174  217C  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 20175  217D  30E1               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20176  217E  31A0  2064  31A1   	fcall	_I2C1_MasterWriteTRBBuild
 20177                           
 20178                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 20179  2181  30E1               	movlw	low I2C1_MasterWrite@trBlock
 20180  2182  0140               	movlb	0	; select bank0
 20181  2183  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 20182  2184  3001               	movlw	high I2C1_MasterWrite@trBlock
 20183  2185  00A1               	movwf	I2C1_MasterTRBInsert@ptrb_list+1
 20184  2186  082A               	movf	I2C1_MasterWrite@pflag,w
 20185  2187  00AB               	movwf	??_I2C1_MasterWrite
 20186  2188  082B               	movf	??_I2C1_MasterWrite,w
 20187  2189  00A2               	movwf	I2C1_MasterTRBInsert@pflag
 20188  218A  3001               	movlw	1
 20189  218B  31A5  256E  31A1   	fcall	_I2C1_MasterTRBInsert
 20190                           
 20191                           ;mcc_generated_files/i2c1.c: 613:     }
 20192  218E  2995               	goto	l603
 20193  218F                     l10641:	
 20194                           
 20195                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20196  218F  0140               	movlb	0	; select bank0
 20197  2190  082A               	movf	I2C1_MasterWrite@pflag,w
 20198  2191  0086               	movwf	6
 20199  2192  0187               	clrf	7
 20200  2193  0181               	clrf	1
 20201  2194  0A81               	incf	1,f
 20202  2195                     l603:	
 20203  2195  0008               	return
 20204  2196                     __end_of_I2C1_MasterWrite:	
 20205                           
 20206                           	psect	text59
 20207  2064                     __ptext59:	
 20208 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 20209 ;; Defined at:
 20210 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 20211 ;; Parameters:    Size  Location     Type
 20212 ;;  ptrb            1    wreg     PTR struct .
 20213 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20214 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 20215 ;;		 -> writeData@data(1), 
 20216 ;;  length          1    1[BANK0 ] unsigned char 
 20217 ;;  address         2    2[BANK0 ] unsigned short 
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;  ptrb            1    6[BANK0 ] PTR struct .
 20220 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20221 ;; Return value:  Size  Location     Type
 20222 ;;                  1    wreg      void 
 20223 ;; Registers used:
 20224 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20225 ;; Tracked objects:
 20226 ;;		On entry : 0/0
 20227 ;;		On exit  : 0/0
 20228 ;;		Unchanged: 0/0
 20229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20232 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20233 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20234 ;;Total ram usage:        7 bytes
 20235 ;; Hardware stack levels used:    1
 20236 ;; Hardware stack levels required when called:    4
 20237 ;; This function calls:
 20238 ;;		Nothing
 20239 ;; This function is called by:
 20240 ;;		_I2C1_MasterWrite
 20241 ;; This function uses a non-reentrant model
 20242 ;;
 20243                           
 20244                           
 20245                           ;psect for function _I2C1_MasterWriteTRBBuild
 20246  2064                     _I2C1_MasterWriteTRBBuild:	
 20247                           
 20248                           ;incstack = 0
 20249                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 20250                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 20251  2064  0140               	movlb	0	; select bank0
 20252  2065  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 20253  2066                     l10613:	
 20254                           
 20255                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 20256  2066  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 20257  2067  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 20258  2068  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 20259  2069  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20260  206A  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 20261  206B  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 20262  206C  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20263  206D  0086               	movwf	6
 20264  206E  3001               	movlw	1	; select bank2/3
 20265  206F  0087               	movwf	7
 20266  2070  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20267  2071  3FC0               	movwi [0]fsr1
 20268  2072  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 20269  2073  3FC1               	movwi [1]fsr1
 20270                           
 20271                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 20272  2074  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 20273  2075  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20274  2076  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20275  2077  3E02               	addlw	2
 20276  2078  0086               	movwf	6
 20277  2079  3001               	movlw	1	; select bank2/3
 20278  207A  0087               	movwf	7
 20279  207B  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20280  207C  0081               	movwf	1
 20281                           
 20282                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 20283  207D  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 20284  207E  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20285  207F  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20286  2080  3E03               	addlw	3
 20287  2081  0086               	movwf	6
 20288  2082  3001               	movlw	1	; select bank2/3
 20289  2083  0087               	movwf	7
 20290  2084  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20291  2085  0081               	movwf	1
 20292  2086                     l630:	
 20293  2086  0008               	return
 20294  2087                     __end_of_I2C1_MasterWriteTRBBuild:	
 20295                           
 20296                           	psect	text60
 20297  256E                     __ptext60:	
 20298 ;; *************** function _I2C1_MasterTRBInsert *****************
 20299 ;; Defined at:
 20300 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 20301 ;; Parameters:    Size  Location     Type
 20302 ;;  count           1    wreg     unsigned char 
 20303 ;;  ptrb_list       2    0[BANK0 ] PTR struct .
 20304 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 20305 ;;  pflag           1    2[BANK0 ] PTR enum E10895
 20306 ;;		 -> writeData@status(1), 
 20307 ;; Auto vars:     Size  Location     Type
 20308 ;;  count           1    4[BANK0 ] unsigned char 
 20309 ;; Return value:  Size  Location     Type
 20310 ;;                  1    wreg      void 
 20311 ;; Registers used:
 20312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20313 ;; Tracked objects:
 20314 ;;		On entry : 0/0
 20315 ;;		On exit  : 0/0
 20316 ;;		Unchanged: 0/0
 20317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20318 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20321 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20322 ;;Total ram usage:        5 bytes
 20323 ;; Hardware stack levels used:    1
 20324 ;; Hardware stack levels required when called:    5
 20325 ;; This function calls:
 20326 ;;		_I2C1_WaitForLastPacketToComplete
 20327 ;; This function is called by:
 20328 ;;		_I2C1_MasterWrite
 20329 ;;		_I2C1_MasterRead
 20330 ;; This function uses a non-reentrant model
 20331 ;;
 20332                           
 20333                           
 20334                           ;psect for function _I2C1_MasterTRBInsert
 20335  256E                     _I2C1_MasterTRBInsert:	
 20336                           
 20337                           ;incstack = 0
 20338                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20339                           ;I2C1_MasterTRBInsert@count stored from wreg
 20340  256E  0140               	movlb	0	; select bank0
 20341  256F  00A4               	movwf	I2C1_MasterTRBInsert@count
 20342  2570                     l10615:	
 20343                           
 20344                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 20345  2570  0142               	movlb	2	; select bank2
 20346  2571  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 20347  2572  2D74               	goto	u11291
 20348  2573  2D75               	goto	u11290
 20349  2574                     u11291:	
 20350  2574  2DB6               	goto	l10629
 20351  2575                     u11290:	
 20352  2575                     l10617:	
 20353                           
 20354                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 20355  2575  3002               	movlw	2
 20356  2576  0140               	movlb	0	; select bank0
 20357  2577  00A3               	movwf	??_I2C1_MasterTRBInsert
 20358  2578  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 20359  2579  0086               	movwf	6
 20360  257A  0187               	clrf	7
 20361  257B  0823               	movf	??_I2C1_MasterTRBInsert,w
 20362  257C  0081               	movwf	1
 20363                           
 20364                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 20365  257D  0142               	movlb	2	; select bank2
 20366  257E  0A20               	incf	_i2c1_object^(0+256),w
 20367  257F  0086               	movwf	6
 20368  2580  3001               	movlw	1	; select bank2/3
 20369  2581  0087               	movwf	7
 20370  2582  0140               	movlb	0	; select bank0
 20371  2583  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 20372  2584  3FC0               	movwi [0]fsr1
 20373  2585  0821               	movf	I2C1_MasterTRBInsert@ptrb_list+1,w
 20374  2586  3FC1               	movwi [1]fsr1
 20375                           
 20376                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 20377  2587  0824               	movf	I2C1_MasterTRBInsert@count,w
 20378  2588  00A3               	movwf	??_I2C1_MasterTRBInsert
 20379  2589  0142               	movlb	2	; select bank2
 20380  258A  0820               	movf	_i2c1_object^(0+256),w
 20381  258B  0086               	movwf	6
 20382  258C  3001               	movlw	1	; select bank2/3
 20383  258D  0087               	movwf	7
 20384  258E  0140               	movlb	0	; select bank0
 20385  258F  0823               	movf	??_I2C1_MasterTRBInsert,w
 20386  2590  0081               	movwf	1
 20387  2591                     l10619:	
 20388                           
 20389                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 20390  2591  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 20391  2592  00A3               	movwf	??_I2C1_MasterTRBInsert
 20392  2593  0142               	movlb	2	; select bank2
 20393  2594  0820               	movf	_i2c1_object^(0+256),w
 20394  2595  3E03               	addlw	3
 20395  2596  0086               	movwf	6
 20396  2597  3001               	movlw	1	; select bank2/3
 20397  2598  0087               	movwf	7
 20398  2599  0140               	movlb	0	; select bank0
 20399  259A  0823               	movf	??_I2C1_MasterTRBInsert,w
 20400  259B  0081               	movwf	1
 20401  259C                     l10621:	
 20402                           
 20403                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 20404  259C  3004               	movlw	4
 20405  259D  00A3               	movwf	??_I2C1_MasterTRBInsert
 20406  259E  0823               	movf	??_I2C1_MasterTRBInsert,w
 20407  259F  0142               	movlb	2	; select bank2
 20408  25A0  07A0               	addwf	_i2c1_object^(0+256),f
 20409                           
 20410                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 20411  25A1  0820               	movf	_i2c1_object^(0+256),w
 20412  25A2  3AE9               	xorlw	(low ((_i2c1_tr_queue| (0+256)+4)))& (0+255)
 20413  25A3  1D03               	skipz
 20414  25A4  2DA6               	goto	u11301
 20415  25A5  2DA7               	goto	u11300
 20416  25A6                     u11301:	
 20417  25A6  2DAD               	goto	l10625
 20418  25A7                     u11300:	
 20419  25A7                     l10623:	
 20420                           
 20421                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 20422  25A7  30E5               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 20423  25A8  0140               	movlb	0	; select bank0
 20424  25A9  00A3               	movwf	??_I2C1_MasterTRBInsert
 20425  25AA  0823               	movf	??_I2C1_MasterTRBInsert,w
 20426  25AB  0142               	movlb	2	; select bank2
 20427  25AC  00A0               	movwf	_i2c1_object^(0+256)
 20428  25AD                     l10625:	
 20429                           
 20430                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 20431  25AD  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 20432                           
 20433                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 20434  25AE  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 20435  25AF  0620               	xorwf	_i2c1_object^(0+256),w
 20436  25B0  1D03               	skipz
 20437  25B1  2DB3               	goto	u11311
 20438  25B2  2DB4               	goto	u11310
 20439  25B3                     u11311:	
 20440  25B3  2DBC               	goto	l10631
 20441  25B4                     u11310:	
 20442  25B4                     l10627:	
 20443                           
 20444                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 20445  25B4  1422               	bsf	(_i2c1_object^(0+256)+2),0
 20446  25B5  2DBC               	goto	l10631
 20447  25B6                     l10629:	
 20448                           
 20449                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20450  25B6  0140               	movlb	0	; select bank0
 20451  25B7  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 20452  25B8  0086               	movwf	6
 20453  25B9  0187               	clrf	7
 20454  25BA  0181               	clrf	1
 20455  25BB  0A81               	incf	1,f
 20456  25BC                     l10631:	
 20457                           
 20458                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 20459  25BC  0140               	movlb	0	; select bank0
 20460  25BD  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 20461  25BE  0086               	movwf	6
 20462  25BF  0187               	clrf	7
 20463  25C0  3002               	movlw	2
 20464  25C1  0601               	xorwf	1,w
 20465  25C2  1D03               	btfss	3,2
 20466  25C3  2DC5               	goto	u11321
 20467  25C4  2DC6               	goto	u11320
 20468  25C5                     u11321:	
 20469  25C5  2DCB               	goto	l624
 20470  25C6                     u11320:	
 20471  25C6                     l10633:	
 20472                           
 20473                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 20474  25C6  31AC  24F7  31A5   	fcall	_I2C1_WaitForLastPacketToComplete
 20475  25C9                     l10635:	
 20476                           
 20477                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 20478  25C9  014E               	movlb	14	; select bank14
 20479  25CA  140F               	bsf	15,0	;volatile
 20480  25CB                     l624:	
 20481  25CB  0008               	return
 20482  25CC                     __end_of_I2C1_MasterTRBInsert:	
 20483                           
 20484                           	psect	text61
 20485  2CF7                     __ptext61:	
 20486 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 20487 ;; Defined at:
 20488 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 20489 ;; Parameters:    Size  Location     Type
 20490 ;;		None
 20491 ;; Auto vars:     Size  Location     Type
 20492 ;;		None
 20493 ;; Return value:  Size  Location     Type
 20494 ;;                  1    wreg      void 
 20495 ;; Registers used:
 20496 ;;		wreg, status,2, status,0
 20497 ;; Tracked objects:
 20498 ;;		On entry : 0/0
 20499 ;;		On exit  : 0/0
 20500 ;;		Unchanged: 0/0
 20501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20506 ;;Total ram usage:        0 bytes
 20507 ;; Hardware stack levels used:    1
 20508 ;; Hardware stack levels required when called:    4
 20509 ;; This function calls:
 20510 ;;		Nothing
 20511 ;; This function is called by:
 20512 ;;		_I2C1_MasterTRBInsert
 20513 ;; This function uses a non-reentrant model
 20514 ;;
 20515                           
 20516                           
 20517                           ;psect for function _I2C1_WaitForLastPacketToComplete
 20518  2CF7                     _I2C1_WaitForLastPacketToComplete:	
 20519  2CF7                     l10609:	
 20520                           ;incstack = 0
 20521                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 20522                           
 20523  2CF7                     l10611:	
 20524                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20525                           
 20526                           
 20527                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20528  2CF7  0142               	movlb	2	; select bank2
 20529  2CF8  0856               	movf	_i2c1_state^(0+256),w
 20530  2CF9  1D03               	btfss	3,2
 20531  2CFA  2CFC               	goto	u11281
 20532  2CFB  2CFD               	goto	u11280
 20533  2CFC                     u11281:	
 20534  2CFC  2CF7               	goto	l10611
 20535  2CFD                     u11280:	
 20536  2CFD                     l616:	
 20537  2CFD  0008               	return
 20538  2CFE                     __end_of_I2C1_WaitForLastPacketToComplete:	
 20539                           
 20540                           	psect	text62
 20541  24BE                     __ptext62:	
 20542 ;; *************** function ___awmod *****************
 20543 ;; Defined at:
 20544 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 20545 ;; Parameters:    Size  Location     Type
 20546 ;;  divisor         2    9[BANK0 ] int 
 20547 ;;  dividend        2   11[BANK0 ] int 
 20548 ;; Auto vars:     Size  Location     Type
 20549 ;;  sign            1   15[BANK0 ] unsigned char 
 20550 ;;  counter         1   14[BANK0 ] unsigned char 
 20551 ;; Return value:  Size  Location     Type
 20552 ;;                  2    9[BANK0 ] int 
 20553 ;; Registers used:
 20554 ;;		wreg, status,2, status,0
 20555 ;; Tracked objects:
 20556 ;;		On entry : 0/0
 20557 ;;		On exit  : 0/0
 20558 ;;		Unchanged: 0/0
 20559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20563 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20564 ;;Total ram usage:        7 bytes
 20565 ;; Hardware stack levels used:    1
 20566 ;; Hardware stack levels required when called:    4
 20567 ;; This function calls:
 20568 ;;		Nothing
 20569 ;; This function is called by:
 20570 ;;		_TM1650_fastPrintNum_2digit
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           
 20575                           ;psect for function ___awmod
 20576  24BE                     ___awmod:	
 20577  24BE                     l11689:	
 20578                           ;incstack = 0
 20579                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 20580                           
 20581  24BE  0140               	movlb	0	; select bank0
 20582  24BF  01AF               	clrf	___awmod@sign
 20583  24C0                     l11691:	
 20584  24C0  1FAC               	btfss	___awmod@dividend+1,7
 20585  24C1  2CC3               	goto	u13371
 20586  24C2  2CC4               	goto	u13370
 20587  24C3                     u13371:	
 20588  24C3  2CCB               	goto	l11697
 20589  24C4                     u13370:	
 20590  24C4                     l11693:	
 20591  24C4  09AB               	comf	___awmod@dividend,f
 20592  24C5  09AC               	comf	___awmod@dividend+1,f
 20593  24C6  0AAB               	incf	___awmod@dividend,f
 20594  24C7  1903               	skipnz
 20595  24C8  0AAC               	incf	___awmod@dividend+1,f
 20596  24C9                     l11695:	
 20597  24C9  01AF               	clrf	___awmod@sign
 20598  24CA  0AAF               	incf	___awmod@sign,f
 20599  24CB                     l11697:	
 20600  24CB  1FAA               	btfss	___awmod@divisor+1,7
 20601  24CC  2CCE               	goto	u13381
 20602  24CD  2CCF               	goto	u13380
 20603  24CE                     u13381:	
 20604  24CE  2CD4               	goto	l11701
 20605  24CF                     u13380:	
 20606  24CF                     l11699:	
 20607  24CF  09A9               	comf	___awmod@divisor,f
 20608  24D0  09AA               	comf	___awmod@divisor+1,f
 20609  24D1  0AA9               	incf	___awmod@divisor,f
 20610  24D2  1903               	skipnz
 20611  24D3  0AAA               	incf	___awmod@divisor+1,f
 20612  24D4                     l11701:	
 20613  24D4  0829               	movf	___awmod@divisor,w
 20614  24D5  042A               	iorwf	___awmod@divisor+1,w
 20615  24D6  1903               	btfsc	3,2
 20616  24D7  2CD9               	goto	u13391
 20617  24D8  2CDA               	goto	u13390
 20618  24D9                     u13391:	
 20619  24D9  2D03               	goto	l11719
 20620  24DA                     u13390:	
 20621  24DA                     l11703:	
 20622  24DA  01AE               	clrf	___awmod@counter
 20623  24DB  0AAE               	incf	___awmod@counter,f
 20624  24DC  2CE6               	goto	l11709
 20625  24DD                     l11705:	
 20626  24DD  3001               	movlw	1
 20627  24DE                     u13405:	
 20628  24DE  35A9               	lslf	___awmod@divisor,f
 20629  24DF  0DAA               	rlf	___awmod@divisor+1,f
 20630  24E0  0B89               	decfsz	9,f
 20631  24E1  2CDE               	goto	u13405
 20632  24E2                     l11707:	
 20633  24E2  3001               	movlw	1
 20634  24E3  00AD               	movwf	??___awmod
 20635  24E4  082D               	movf	??___awmod,w
 20636  24E5  07AE               	addwf	___awmod@counter,f
 20637  24E6                     l11709:	
 20638  24E6  1FAA               	btfss	___awmod@divisor+1,7
 20639  24E7  2CE9               	goto	u13411
 20640  24E8  2CEA               	goto	u13410
 20641  24E9                     u13411:	
 20642  24E9  2CDD               	goto	l11705
 20643  24EA                     u13410:	
 20644  24EA                     l11711:	
 20645  24EA  082A               	movf	___awmod@divisor+1,w
 20646  24EB  022C               	subwf	___awmod@dividend+1,w
 20647  24EC  1D03               	skipz
 20648  24ED  2CF0               	goto	u13425
 20649  24EE  0829               	movf	___awmod@divisor,w
 20650  24EF  022B               	subwf	___awmod@dividend,w
 20651  24F0                     u13425:	
 20652  24F0  1C03               	skipc
 20653  24F1  2CF3               	goto	u13421
 20654  24F2  2CF4               	goto	u13420
 20655  24F3                     u13421:	
 20656  24F3  2CF8               	goto	l11715
 20657  24F4                     u13420:	
 20658  24F4                     l11713:	
 20659  24F4  0829               	movf	___awmod@divisor,w
 20660  24F5  02AB               	subwf	___awmod@dividend,f
 20661  24F6  082A               	movf	___awmod@divisor+1,w
 20662  24F7  3BAC               	subwfb	___awmod@dividend+1,f
 20663  24F8                     l11715:	
 20664  24F8  3001               	movlw	1
 20665  24F9                     u13435:	
 20666  24F9  36AA               	lsrf	___awmod@divisor+1,f
 20667  24FA  0CA9               	rrf	___awmod@divisor,f
 20668  24FB  0B89               	decfsz	9,f
 20669  24FC  2CF9               	goto	u13435
 20670  24FD                     l11717:	
 20671  24FD  3001               	movlw	1
 20672  24FE  02AE               	subwf	___awmod@counter,f
 20673  24FF  1D03               	btfss	3,2
 20674  2500  2D02               	goto	u13441
 20675  2501  2D03               	goto	u13440
 20676  2502                     u13441:	
 20677  2502  2CEA               	goto	l11711
 20678  2503                     u13440:	
 20679  2503                     l11719:	
 20680  2503  082F               	movf	___awmod@sign,w
 20681  2504  1903               	btfsc	3,2
 20682  2505  2D07               	goto	u13451
 20683  2506  2D08               	goto	u13450
 20684  2507                     u13451:	
 20685  2507  2D0D               	goto	l11723
 20686  2508                     u13450:	
 20687  2508                     l11721:	
 20688  2508  09AB               	comf	___awmod@dividend,f
 20689  2509  09AC               	comf	___awmod@dividend+1,f
 20690  250A  0AAB               	incf	___awmod@dividend,f
 20691  250B  1903               	skipnz
 20692  250C  0AAC               	incf	___awmod@dividend+1,f
 20693  250D                     l11723:	
 20694  250D  082C               	movf	___awmod@dividend+1,w
 20695  250E  00AA               	movwf	?___awmod+1
 20696  250F  082B               	movf	___awmod@dividend,w
 20697  2510  00A9               	movwf	?___awmod
 20698  2511                     l1924:	
 20699  2511  0008               	return
 20700  2512                     __end_of___awmod:	
 20701                           
 20702                           	psect	text63
 20703  25CC                     __ptext63:	
 20704 ;; *************** function ___awdiv *****************
 20705 ;; Defined at:
 20706 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 20707 ;; Parameters:    Size  Location     Type
 20708 ;;  divisor         2    0[BANK0 ] int 
 20709 ;;  dividend        2    2[BANK0 ] int 
 20710 ;; Auto vars:     Size  Location     Type
 20711 ;;  quotient        2    7[BANK0 ] int 
 20712 ;;  sign            1    6[BANK0 ] unsigned char 
 20713 ;;  counter         1    5[BANK0 ] unsigned char 
 20714 ;; Return value:  Size  Location     Type
 20715 ;;                  2    0[BANK0 ] int 
 20716 ;; Registers used:
 20717 ;;		wreg, status,2, status,0
 20718 ;; Tracked objects:
 20719 ;;		On entry : 0/0
 20720 ;;		On exit  : 0/0
 20721 ;;		Unchanged: 0/0
 20722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20724 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20725 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20726 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20727 ;;Total ram usage:        9 bytes
 20728 ;; Hardware stack levels used:    1
 20729 ;; Hardware stack levels required when called:    4
 20730 ;; This function calls:
 20731 ;;		Nothing
 20732 ;; This function is called by:
 20733 ;;		_TM1650_fastPrintNum_2digit
 20734 ;; This function uses a non-reentrant model
 20735 ;;
 20736                           
 20737                           
 20738                           ;psect for function ___awdiv
 20739  25CC                     ___awdiv:	
 20740  25CC                     l11645:	
 20741                           ;incstack = 0
 20742                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 20743                           
 20744  25CC  0140               	movlb	0	; select bank0
 20745  25CD  01A6               	clrf	___awdiv@sign
 20746  25CE                     l11647:	
 20747  25CE  1FA1               	btfss	___awdiv@divisor+1,7
 20748  25CF  2DD1               	goto	u13271
 20749  25D0  2DD2               	goto	u13270
 20750  25D1                     u13271:	
 20751  25D1  2DD9               	goto	l11653
 20752  25D2                     u13270:	
 20753  25D2                     l11649:	
 20754  25D2  09A0               	comf	___awdiv@divisor,f
 20755  25D3  09A1               	comf	___awdiv@divisor+1,f
 20756  25D4  0AA0               	incf	___awdiv@divisor,f
 20757  25D5  1903               	skipnz
 20758  25D6  0AA1               	incf	___awdiv@divisor+1,f
 20759  25D7                     l11651:	
 20760  25D7  01A6               	clrf	___awdiv@sign
 20761  25D8  0AA6               	incf	___awdiv@sign,f
 20762  25D9                     l11653:	
 20763  25D9  1FA3               	btfss	___awdiv@dividend+1,7
 20764  25DA  2DDC               	goto	u13281
 20765  25DB  2DDD               	goto	u13280
 20766  25DC                     u13281:	
 20767  25DC  2DE6               	goto	l11659
 20768  25DD                     u13280:	
 20769  25DD                     l11655:	
 20770  25DD  09A2               	comf	___awdiv@dividend,f
 20771  25DE  09A3               	comf	___awdiv@dividend+1,f
 20772  25DF  0AA2               	incf	___awdiv@dividend,f
 20773  25E0  1903               	skipnz
 20774  25E1  0AA3               	incf	___awdiv@dividend+1,f
 20775  25E2                     l11657:	
 20776  25E2  3001               	movlw	1
 20777  25E3  00A4               	movwf	??___awdiv
 20778  25E4  0824               	movf	??___awdiv,w
 20779  25E5  06A6               	xorwf	___awdiv@sign,f
 20780  25E6                     l11659:	
 20781  25E6  01A7               	clrf	___awdiv@quotient
 20782  25E7  01A8               	clrf	___awdiv@quotient+1
 20783  25E8                     l11661:	
 20784  25E8  0820               	movf	___awdiv@divisor,w
 20785  25E9  0421               	iorwf	___awdiv@divisor+1,w
 20786  25EA  1903               	btfsc	3,2
 20787  25EB  2DED               	goto	u13291
 20788  25EC  2DEE               	goto	u13290
 20789  25ED                     u13291:	
 20790  25ED  2E1D               	goto	l11681
 20791  25EE                     u13290:	
 20792  25EE                     l11663:	
 20793  25EE  01A5               	clrf	___awdiv@counter
 20794  25EF  0AA5               	incf	___awdiv@counter,f
 20795  25F0  2DFA               	goto	l11669
 20796  25F1                     l11665:	
 20797  25F1  3001               	movlw	1
 20798  25F2                     u13305:	
 20799  25F2  35A0               	lslf	___awdiv@divisor,f
 20800  25F3  0DA1               	rlf	___awdiv@divisor+1,f
 20801  25F4  0B89               	decfsz	9,f
 20802  25F5  2DF2               	goto	u13305
 20803  25F6                     l11667:	
 20804  25F6  3001               	movlw	1
 20805  25F7  00A4               	movwf	??___awdiv
 20806  25F8  0824               	movf	??___awdiv,w
 20807  25F9  07A5               	addwf	___awdiv@counter,f
 20808  25FA                     l11669:	
 20809  25FA  1FA1               	btfss	___awdiv@divisor+1,7
 20810  25FB  2DFD               	goto	u13311
 20811  25FC  2DFE               	goto	u13310
 20812  25FD                     u13311:	
 20813  25FD  2DF1               	goto	l11665
 20814  25FE                     u13310:	
 20815  25FE                     l11671:	
 20816  25FE  3001               	movlw	1
 20817  25FF                     u13325:	
 20818  25FF  35A7               	lslf	___awdiv@quotient,f
 20819  2600  0DA8               	rlf	___awdiv@quotient+1,f
 20820  2601  0B89               	decfsz	9,f
 20821  2602  2DFF               	goto	u13325
 20822  2603  0821               	movf	___awdiv@divisor+1,w
 20823  2604  0223               	subwf	___awdiv@dividend+1,w
 20824  2605  1D03               	skipz
 20825  2606  2E09               	goto	u13335
 20826  2607  0820               	movf	___awdiv@divisor,w
 20827  2608  0222               	subwf	___awdiv@dividend,w
 20828  2609                     u13335:	
 20829  2609  1C03               	skipc
 20830  260A  2E0C               	goto	u13331
 20831  260B  2E0D               	goto	u13330
 20832  260C                     u13331:	
 20833  260C  2E12               	goto	l11677
 20834  260D                     u13330:	
 20835  260D                     l11673:	
 20836  260D  0820               	movf	___awdiv@divisor,w
 20837  260E  02A2               	subwf	___awdiv@dividend,f
 20838  260F  0821               	movf	___awdiv@divisor+1,w
 20839  2610  3BA3               	subwfb	___awdiv@dividend+1,f
 20840  2611                     l11675:	
 20841  2611  1427               	bsf	___awdiv@quotient,0
 20842  2612                     l11677:	
 20843  2612  3001               	movlw	1
 20844  2613                     u13345:	
 20845  2613  36A1               	lsrf	___awdiv@divisor+1,f
 20846  2614  0CA0               	rrf	___awdiv@divisor,f
 20847  2615  0B89               	decfsz	9,f
 20848  2616  2E13               	goto	u13345
 20849  2617                     l11679:	
 20850  2617  3001               	movlw	1
 20851  2618  02A5               	subwf	___awdiv@counter,f
 20852  2619  1D03               	btfss	3,2
 20853  261A  2E1C               	goto	u13351
 20854  261B  2E1D               	goto	u13350
 20855  261C                     u13351:	
 20856  261C  2DFE               	goto	l11671
 20857  261D                     u13350:	
 20858  261D                     l11681:	
 20859  261D  0826               	movf	___awdiv@sign,w
 20860  261E  1903               	btfsc	3,2
 20861  261F  2E21               	goto	u13361
 20862  2620  2E22               	goto	u13360
 20863  2621                     u13361:	
 20864  2621  2E27               	goto	l11685
 20865  2622                     u13360:	
 20866  2622                     l11683:	
 20867  2622  09A7               	comf	___awdiv@quotient,f
 20868  2623  09A8               	comf	___awdiv@quotient+1,f
 20869  2624  0AA7               	incf	___awdiv@quotient,f
 20870  2625  1903               	skipnz
 20871  2626  0AA8               	incf	___awdiv@quotient+1,f
 20872  2627                     l11685:	
 20873  2627  0828               	movf	___awdiv@quotient+1,w
 20874  2628  00A1               	movwf	?___awdiv+1
 20875  2629  0827               	movf	___awdiv@quotient,w
 20876  262A  00A0               	movwf	?___awdiv
 20877  262B                     l1911:	
 20878  262B  0008               	return
 20879  262C                     __end_of___awdiv:	
 20880                           
 20881                           	psect	text64
 20882  1F13                     __ptext64:	
 20883 ;; *************** function _LED_task_ANIMATION *****************
 20884 ;; Defined at:
 20885 ;;		line 178 in file "led.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  mode            1    wreg     unsigned char 
 20888 ;;  brightness      1   68[BANK1 ] unsigned char 
 20889 ;;  speed           1   69[BANK1 ] unsigned char 
 20890 ;; Auto vars:     Size  Location     Type
 20891 ;;  mode            1   74[BANK1 ] unsigned char 
 20892 ;;  animationCol    4   75[BANK1 ] struct .
 20893 ;;  calculatedSp    1   79[BANK1 ] unsigned char 
 20894 ;; Return value:  Size  Location     Type
 20895 ;;                  1    wreg      void 
 20896 ;; Registers used:
 20897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20898 ;; Tracked objects:
 20899 ;;		On entry : 0/0
 20900 ;;		On exit  : 0/0
 20901 ;;		Unchanged: 0/0
 20902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20903 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20904 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20905 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20906 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20907 ;;Total ram usage:       12 bytes
 20908 ;; Hardware stack levels used:    1
 20909 ;; Hardware stack levels required when called:    8
 20910 ;; This function calls:
 20911 ;;		_CLOCK_getTime
 20912 ;;		_HSLToRGB
 20913 ;;		_LED_setColor
 20914 ;;		___bmul
 20915 ;;		___flmul
 20916 ;;		___xxtofl
 20917 ;; This function is called by:
 20918 ;;		_CONTROL_ANIMATION
 20919 ;; This function uses a non-reentrant model
 20920 ;;
 20921                           
 20922                           
 20923                           ;psect for function _LED_task_ANIMATION
 20924  1F13                     _LED_task_ANIMATION:	
 20925                           
 20926                           ;incstack = 0
 20927                           ; Regs used in _LED_task_ANIMATION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20928                           ;LED_task_ANIMATION@mode stored from wreg
 20929  1F13  0141               	movlb	1	; select bank1
 20930  1F14  00EA               	movwf	LED_task_ANIMATION@mode^(0+128)
 20931  1F15                     l11963:	
 20932                           
 20933                           ;led.c: 180:     uint8_t calculatedSpeed = 1810 - (speed * 180);
 20934  1F15  304C               	movlw	76
 20935  1F16  00E6               	movwf	??_LED_task_ANIMATION^(0+128)
 20936  1F17  0866               	movf	??_LED_task_ANIMATION^(0+128),w
 20937  1F18  0140               	movlb	0	; select bank0
 20938  1F19  00A0               	movwf	___bmul@multiplicand
 20939  1F1A  0141               	movlb	1	; select bank1
 20940  1F1B  0865               	movf	LED_task_ANIMATION@speed^(0+128),w
 20941  1F1C  31AE  2699  319F   	fcall	___bmul
 20942  1F1F  3E12               	addlw	18
 20943  1F20  0141               	movlb	1	; select bank1
 20944  1F21  00E7               	movwf	(??_LED_task_ANIMATION+1)^(0+128)
 20945  1F22  0867               	movf	(??_LED_task_ANIMATION+1)^(0+128),w
 20946  1F23  00EF               	movwf	LED_task_ANIMATION@calculatedSpeed^(0+128)
 20947                           
 20948                           ;led.c: 182:     if(CLOCK_getTime() - lastLedActiveTime < calculatedSpeed){
 20949  1F24  086F               	movf	LED_task_ANIMATION@calculatedSpeed^(0+128),w
 20950  1F25  00E6               	movwf	??_LED_task_ANIMATION^(0+128)
 20951  1F26  01E7               	clrf	(??_LED_task_ANIMATION^(0+128)+1)
 20952  1F27  31AD  2520  319F   	fcall	_CLOCK_getTime
 20953  1F2A  0142               	movlb	2	; select bank2
 20954  1F2B  082F               	movf	_lastLedActiveTime^(0+256),w
 20955  1F2C  0140               	movlb	0	; select bank0
 20956  1F2D  0220               	subwf	?_CLOCK_getTime,w
 20957  1F2E  0141               	movlb	1	; select bank1
 20958  1F2F  00E8               	movwf	(??_LED_task_ANIMATION+2)^(0+128)
 20959  1F30  0142               	movlb	2	; select bank2
 20960  1F31  0830               	movf	(_lastLedActiveTime+1)^(0+256),w
 20961  1F32  0140               	movlb	0	; select bank0
 20962  1F33  3B21               	subwfb	?_CLOCK_getTime+1,w
 20963  1F34  0141               	movlb	1	; select bank1
 20964  1F35  00E9               	movwf	(??_LED_task_ANIMATION+3)^(0+128)
 20965  1F36  0867               	movf	(??_LED_task_ANIMATION+1)^(0+128),w
 20966  1F37  0269               	subwf	(??_LED_task_ANIMATION+3)^(0+128),w
 20967  1F38  1D03               	skipz
 20968  1F39  2F3C               	goto	u13805
 20969  1F3A  0866               	movf	??_LED_task_ANIMATION^(0+128),w
 20970  1F3B  0268               	subwf	(??_LED_task_ANIMATION+2)^(0+128),w
 20971  1F3C                     u13805:	
 20972  1F3C  1803               	skipnc
 20973  1F3D  2F3F               	goto	u13801
 20974  1F3E  2F40               	goto	u13800
 20975  1F3F                     u13801:	
 20976  1F3F  2F41               	goto	l11967
 20977  1F40                     u13800:	
 20978  1F40  2FFF               	goto	l1493
 20979  1F41                     l11967:	
 20980                           
 20981                           ;led.c: 186:     lastLedActiveTime = CLOCK_getTime();
 20982  1F41  31AD  2520  319F   	fcall	_CLOCK_getTime
 20983  1F44  0140               	movlb	0	; select bank0
 20984  1F45  0821               	movf	?_CLOCK_getTime+1,w
 20985  1F46  0142               	movlb	2	; select bank2
 20986  1F47  00B0               	movwf	(_lastLedActiveTime+1)^(0+256)
 20987  1F48  0140               	movlb	0	; select bank0
 20988  1F49  0820               	movf	?_CLOCK_getTime,w
 20989  1F4A  0142               	movlb	2	; select bank2
 20990  1F4B  00AF               	movwf	_lastLedActiveTime^(0+256)
 20991  1F4C                     l11969:	
 20992                           
 20993                           ;led.c: 188:     if(animationHue.hue <= 360){
 20994  1F4C  3001               	movlw	1
 20995  1F4D  0143               	movlb	3	; select bank3
 20996  1F4E  0221               	subwf	(_animationHue+1)^(0+384),w
 20997  1F4F  3069               	movlw	105
 20998  1F50  1903               	skipnz
 20999  1F51  0220               	subwf	_animationHue^(0+384),w
 21000  1F52  1803               	skipnc
 21001  1F53  2F55               	goto	u13811
 21002  1F54  2F56               	goto	u13810
 21003  1F55                     u13811:	
 21004  1F55  2F5B               	goto	l11973
 21005  1F56                     u13810:	
 21006  1F56                     l11971:	
 21007                           
 21008                           ;led.c: 189:         animationHue.hue++;
 21009  1F56  3001               	movlw	1
 21010  1F57  07A0               	addwf	_animationHue^(0+384),f
 21011  1F58  3000               	movlw	0
 21012  1F59  3DA1               	addwfc	(_animationHue+1)^(0+384),f
 21013                           
 21014                           ;led.c: 190:     } else {
 21015  1F5A  2F5D               	goto	l11975
 21016  1F5B                     l11973:	
 21017                           
 21018                           ;led.c: 191:         animationHue.hue = 0;
 21019  1F5B  01A0               	clrf	_animationHue^(0+384)
 21020  1F5C  01A1               	clrf	(_animationHue+1)^(0+384)
 21021  1F5D                     l11975:	
 21022                           
 21023                           ;led.c: 195:     animationHue.light = 0.10f * (double)brightness;
 21024  1F5D  303D               	movlw	61
 21025  1F5E  0140               	movlb	0	; select bank0
 21026  1F5F  00CB               	movwf	___flmul@b+3
 21027  1F60  30CC               	movlw	204
 21028  1F61  00CA               	movwf	___flmul@b+2
 21029  1F62  30CC               	movlw	204
 21030  1F63  00C9               	movwf	___flmul@b+1
 21031  1F64  30CD               	movlw	205
 21032  1F65  00C8               	movwf	___flmul@b
 21033  1F66  0141               	movlb	1	; select bank1
 21034  1F67  0864               	movf	LED_task_ANIMATION@brightness^(0+128),w
 21035  1F68  00E6               	movwf	??_LED_task_ANIMATION^(0+128)
 21036  1F69  01E7               	clrf	(??_LED_task_ANIMATION^(0+128)+1)
 21037  1F6A  01E8               	clrf	(??_LED_task_ANIMATION^(0+128)+2)
 21038  1F6B  01E9               	clrf	(??_LED_task_ANIMATION^(0+128)+3)
 21039  1F6C  0869               	movf	(??_LED_task_ANIMATION+3)^(0+128),w
 21040  1F6D  0140               	movlb	0	; select bank0
 21041  1F6E  00A3               	movwf	___xxtofl@val+3
 21042  1F6F  0141               	movlb	1	; select bank1
 21043  1F70  0868               	movf	(??_LED_task_ANIMATION+2)^(0+128),w
 21044  1F71  0140               	movlb	0	; select bank0
 21045  1F72  00A2               	movwf	___xxtofl@val+2
 21046  1F73  0141               	movlb	1	; select bank1
 21047  1F74  0867               	movf	(??_LED_task_ANIMATION+1)^(0+128),w
 21048  1F75  0140               	movlb	0	; select bank0
 21049  1F76  00A1               	movwf	___xxtofl@val+1
 21050  1F77  0141               	movlb	1	; select bank1
 21051  1F78  0866               	movf	??_LED_task_ANIMATION^(0+128),w
 21052  1F79  0140               	movlb	0	; select bank0
 21053  1F7A  00A0               	movwf	___xxtofl@val
 21054  1F7B  3000               	movlw	0
 21055  1F7C  319A  227A  319F   	fcall	___xxtofl
 21056  1F7F  0140               	movlb	0	; select bank0
 21057  1F80  0823               	movf	?___xxtofl+3,w
 21058  1F81  00CF               	movwf	___flmul@a+3
 21059  1F82  0822               	movf	?___xxtofl+2,w
 21060  1F83  00CE               	movwf	___flmul@a+2
 21061  1F84  0821               	movf	?___xxtofl+1,w
 21062  1F85  00CD               	movwf	___flmul@a+1
 21063  1F86  0820               	movf	?___xxtofl,w
 21064  1F87  00CC               	movwf	___flmul@a
 21065  1F88  318D  25A9  319F   	fcall	___flmul
 21066  1F8B  0140               	movlb	0	; select bank0
 21067  1F8C  084B               	movf	?___flmul+3,w
 21068  1F8D  0143               	movlb	3	; select bank3
 21069  1F8E  00A9               	movwf	((_animationHue+3)^(0+384)+6)
 21070  1F8F  0140               	movlb	0	; select bank0
 21071  1F90  084A               	movf	?___flmul+2,w
 21072  1F91  0143               	movlb	3	; select bank3
 21073  1F92  00A8               	movwf	((_animationHue+2)^(0+384)+6)
 21074  1F93  0140               	movlb	0	; select bank0
 21075  1F94  0849               	movf	?___flmul+1,w
 21076  1F95  0143               	movlb	3	; select bank3
 21077  1F96  00A7               	movwf	((_animationHue+1)^(0+384)+6)
 21078  1F97  0140               	movlb	0	; select bank0
 21079  1F98  0848               	movf	?___flmul,w
 21080  1F99  0143               	movlb	3	; select bank3
 21081  1F9A  00A6               	movwf	(_animationHue^(0+384)+6)
 21082  1F9B                     l11977:	
 21083                           
 21084                           ;led.c: 196:     animationHue.saturation = 0.10f * (double)mode;
 21085  1F9B  303D               	movlw	61
 21086  1F9C  0140               	movlb	0	; select bank0
 21087  1F9D  00CB               	movwf	___flmul@b+3
 21088  1F9E  30CC               	movlw	204
 21089  1F9F  00CA               	movwf	___flmul@b+2
 21090  1FA0  30CC               	movlw	204
 21091  1FA1  00C9               	movwf	___flmul@b+1
 21092  1FA2  30CD               	movlw	205
 21093  1FA3  00C8               	movwf	___flmul@b
 21094  1FA4  0141               	movlb	1	; select bank1
 21095  1FA5  086A               	movf	LED_task_ANIMATION@mode^(0+128),w
 21096  1FA6  00E6               	movwf	??_LED_task_ANIMATION^(0+128)
 21097  1FA7  01E7               	clrf	(??_LED_task_ANIMATION^(0+128)+1)
 21098  1FA8  01E8               	clrf	(??_LED_task_ANIMATION^(0+128)+2)
 21099  1FA9  01E9               	clrf	(??_LED_task_ANIMATION^(0+128)+3)
 21100  1FAA  0869               	movf	(??_LED_task_ANIMATION+3)^(0+128),w
 21101  1FAB  0140               	movlb	0	; select bank0
 21102  1FAC  00A3               	movwf	___xxtofl@val+3
 21103  1FAD  0141               	movlb	1	; select bank1
 21104  1FAE  0868               	movf	(??_LED_task_ANIMATION+2)^(0+128),w
 21105  1FAF  0140               	movlb	0	; select bank0
 21106  1FB0  00A2               	movwf	___xxtofl@val+2
 21107  1FB1  0141               	movlb	1	; select bank1
 21108  1FB2  0867               	movf	(??_LED_task_ANIMATION+1)^(0+128),w
 21109  1FB3  0140               	movlb	0	; select bank0
 21110  1FB4  00A1               	movwf	___xxtofl@val+1
 21111  1FB5  0141               	movlb	1	; select bank1
 21112  1FB6  0866               	movf	??_LED_task_ANIMATION^(0+128),w
 21113  1FB7  0140               	movlb	0	; select bank0
 21114  1FB8  00A0               	movwf	___xxtofl@val
 21115  1FB9  3000               	movlw	0
 21116  1FBA  319A  227A  319F   	fcall	___xxtofl
 21117  1FBD  0140               	movlb	0	; select bank0
 21118  1FBE  0823               	movf	?___xxtofl+3,w
 21119  1FBF  00CF               	movwf	___flmul@a+3
 21120  1FC0  0822               	movf	?___xxtofl+2,w
 21121  1FC1  00CE               	movwf	___flmul@a+2
 21122  1FC2  0821               	movf	?___xxtofl+1,w
 21123  1FC3  00CD               	movwf	___flmul@a+1
 21124  1FC4  0820               	movf	?___xxtofl,w
 21125  1FC5  00CC               	movwf	___flmul@a
 21126  1FC6  318D  25A9  319F   	fcall	___flmul
 21127  1FC9  0140               	movlb	0	; select bank0
 21128  1FCA  084B               	movf	?___flmul+3,w
 21129  1FCB  0143               	movlb	3	; select bank3
 21130  1FCC  00A5               	movwf	((_animationHue+3)^(0+384)+2)
 21131  1FCD  0140               	movlb	0	; select bank0
 21132  1FCE  084A               	movf	?___flmul+2,w
 21133  1FCF  0143               	movlb	3	; select bank3
 21134  1FD0  00A4               	movwf	((_animationHue+2)^(0+384)+2)
 21135  1FD1  0140               	movlb	0	; select bank0
 21136  1FD2  0849               	movf	?___flmul+1,w
 21137  1FD3  0143               	movlb	3	; select bank3
 21138  1FD4  00A3               	movwf	((_animationHue+1)^(0+384)+2)
 21139  1FD5  0140               	movlb	0	; select bank0
 21140  1FD6  0848               	movf	?___flmul,w
 21141  1FD7  0143               	movlb	3	; select bank3
 21142  1FD8  00A2               	movwf	(_animationHue^(0+384)+2)
 21143  1FD9                     l11979:	
 21144                           
 21145                           ;led.c: 198:     color_t animationColor = HSLToRGB(animationHue);
 21146  1FD9  30A0               	movlw	low _animationHue
 21147  1FDA  0086               	movwf	6
 21148  1FDB  3001               	movlw	high _animationHue
 21149  1FDC  0087               	movwf	7
 21150  1FDD  30B9               	movlw	low HSLToRGB@hsl
 21151  1FDE  0084               	movwf	4
 21152  1FDF  3000               	movlw	high HSLToRGB@hsl
 21153  1FE0  0085               	movwf	5
 21154  1FE1  300A               	movlw	10
 21155  1FE2  0141               	movlb	1	; select bank1
 21156  1FE3  00E6               	movwf	??_LED_task_ANIMATION^(0+128)
 21157  1FE4                     u13820:	
 21158  1FE4  0016               	moviw fsr1++
 21159  1FE5  001A               	movwi fsr0++
 21160  1FE6  0BE6               	decfsz	??_LED_task_ANIMATION^(0+128),f
 21161  1FE7  2FE4               	goto	u13820
 21162  1FE8  3180  20BD  319F   	fcall	_HSLToRGB
 21163  1FEB  0141               	movlb	1	; select bank1
 21164  1FEC  083C               	movf	(?_HSLToRGB+3)^(0+128),w
 21165  1FED  00EE               	movwf	(LED_task_ANIMATION@animationColor+3)^(0+128)
 21166  1FEE  083B               	movf	(?_HSLToRGB+2)^(0+128),w
 21167  1FEF  00ED               	movwf	(LED_task_ANIMATION@animationColor+2)^(0+128)
 21168  1FF0  083A               	movf	(?_HSLToRGB+1)^(0+128),w
 21169  1FF1  00EC               	movwf	(LED_task_ANIMATION@animationColor+1)^(0+128)
 21170  1FF2  0839               	movf	?_HSLToRGB^(0+128),w
 21171  1FF3  00EB               	movwf	LED_task_ANIMATION@animationColor^(0+128)
 21172  1FF4                     l11981:	
 21173                           
 21174                           ;led.c: 199:     LED_setColor(animationColor);
 21175  1FF4  086E               	movf	(LED_task_ANIMATION@animationColor+3)^(0+128),w
 21176  1FF5  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 21177  1FF6  086D               	movf	(LED_task_ANIMATION@animationColor+2)^(0+128),w
 21178  1FF7  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 21179  1FF8  086C               	movf	(LED_task_ANIMATION@animationColor+1)^(0+128),w
 21180  1FF9  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 21181  1FFA  086B               	movf	LED_task_ANIMATION@animationColor^(0+128),w
 21182  1FFB  00D1               	movwf	LED_setColor@input^(0+128)
 21183  1FFC  3194  24AC  319F   	fcall	_LED_setColor
 21184  1FFF                     l1493:	
 21185  1FFF  0008               	return
 21186  2000                     __end_of_LED_task_ANIMATION:	
 21187                           
 21188                           	psect	text65
 21189  2E99                     __ptext65:	
 21190 ;; *************** function ___bmul *****************
 21191 ;; Defined at:
 21192 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 21193 ;; Parameters:    Size  Location     Type
 21194 ;;  multiplier      1    wreg     unsigned char 
 21195 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 21196 ;; Auto vars:     Size  Location     Type
 21197 ;;  multiplier      1    3[BANK0 ] unsigned char 
 21198 ;;  product         1    2[BANK0 ] unsigned char 
 21199 ;; Return value:  Size  Location     Type
 21200 ;;                  1    wreg      unsigned char 
 21201 ;; Registers used:
 21202 ;;		wreg, status,2, status,0
 21203 ;; Tracked objects:
 21204 ;;		On entry : 0/0
 21205 ;;		On exit  : 0/0
 21206 ;;		Unchanged: 0/0
 21207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21208 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21210 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21211 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21212 ;;Total ram usage:        4 bytes
 21213 ;; Hardware stack levels used:    1
 21214 ;; Hardware stack levels required when called:    4
 21215 ;; This function calls:
 21216 ;;		Nothing
 21217 ;; This function is called by:
 21218 ;;		_LED_task_ANIMATION
 21219 ;; This function uses a non-reentrant model
 21220 ;;
 21221                           
 21222                           
 21223                           ;psect for function ___bmul
 21224  2E99                     ___bmul:	
 21225                           
 21226                           ;incstack = 0
 21227                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 21228                           ;___bmul@multiplier stored from wreg
 21229  2E99  0140               	movlb	0	; select bank0
 21230  2E9A  00A3               	movwf	___bmul@multiplier
 21231  2E9B                     l11631:	
 21232  2E9B  01A2               	clrf	___bmul@product
 21233  2E9C                     l11633:	
 21234  2E9C  1C23               	btfss	___bmul@multiplier,0
 21235  2E9D  2E9F               	goto	u13251
 21236  2E9E  2EA0               	goto	u13250
 21237  2E9F                     u13251:	
 21238  2E9F  2EA4               	goto	l11637
 21239  2EA0                     u13250:	
 21240  2EA0                     l11635:	
 21241  2EA0  0820               	movf	___bmul@multiplicand,w
 21242  2EA1  00A1               	movwf	??___bmul
 21243  2EA2  0821               	movf	??___bmul,w
 21244  2EA3  07A2               	addwf	___bmul@product,f
 21245  2EA4                     l11637:	
 21246  2EA4  1003               	clrc
 21247  2EA5  0DA0               	rlf	___bmul@multiplicand,f
 21248  2EA6                     l11639:	
 21249  2EA6  1003               	clrc
 21250  2EA7  0CA3               	rrf	___bmul@multiplier,f
 21251  2EA8  0823               	movf	___bmul@multiplier,w
 21252  2EA9  1D03               	btfss	3,2
 21253  2EAA  2EAC               	goto	u13261
 21254  2EAB  2EAD               	goto	u13260
 21255  2EAC                     u13261:	
 21256  2EAC  2E9C               	goto	l11633
 21257  2EAD                     u13260:	
 21258  2EAD                     l11641:	
 21259  2EAD  0822               	movf	___bmul@product,w
 21260  2EAE                     l1784:	
 21261  2EAE  0008               	return
 21262  2EAF                     __end_of___bmul:	
 21263                           
 21264                           	psect	text66
 21265  14AC                     __ptext66:	
 21266 ;; *************** function _LED_setColor *****************
 21267 ;; Defined at:
 21268 ;;		line 27 in file "led.c"
 21269 ;; Parameters:    Size  Location     Type
 21270 ;;  input           4   49[BANK1 ] struct .
 21271 ;; Auto vars:     Size  Location     Type
 21272 ;;		None
 21273 ;; Return value:  Size  Location     Type
 21274 ;;                  1    wreg      void 
 21275 ;; Registers used:
 21276 ;;		wreg, status,2, status,0, pclath, cstack
 21277 ;; Tracked objects:
 21278 ;;		On entry : 0/0
 21279 ;;		On exit  : 0/0
 21280 ;;		Unchanged: 0/0
 21281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21282 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21284 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21285 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21286 ;;Total ram usage:        8 bytes
 21287 ;; Hardware stack levels used:    1
 21288 ;; Hardware stack levels required when called:    6
 21289 ;; This function calls:
 21290 ;;		_PWM1_LoadDutyValue
 21291 ;;		_PWM2_LoadDutyValue
 21292 ;;		_PWM3_LoadDutyValue
 21293 ;;		_PWM4_LoadDutyValue
 21294 ;;		___fldiv
 21295 ;;		___flmul
 21296 ;;		___fltol
 21297 ;;		___xxtofl
 21298 ;; This function is called by:
 21299 ;;		_LED_task_DMX
 21300 ;;		_LED_task_MANUAL
 21301 ;;		_LED_task_BEAT_STROBE
 21302 ;;		_LED_task_ANIMATION
 21303 ;;		_LED_task_BEAT_CONTINUOUS
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           
 21308                           ;psect for function _LED_setColor
 21309  14AC                     _LED_setColor:	
 21310  14AC                     l11569:	
 21311                           ;incstack = 0
 21312                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 21313                           
 21314                           
 21315                           ;led.c: 29:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 21316  14AC  0141               	movlb	1	; select bank1
 21317  14AD  0852               	movf	(LED_setColor@input^(0+128)+1),w
 21318  14AE  00D5               	movwf	??_LED_setColor^(0+128)
 21319  14AF  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 21320  14B0  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 21321  14B1  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 21322  14B2  0858               	movf	(??_LED_setColor+3)^(0+128),w
 21323  14B3  0140               	movlb	0	; select bank0
 21324  14B4  00A3               	movwf	___xxtofl@val+3
 21325  14B5  0141               	movlb	1	; select bank1
 21326  14B6  0857               	movf	(??_LED_setColor+2)^(0+128),w
 21327  14B7  0140               	movlb	0	; select bank0
 21328  14B8  00A2               	movwf	___xxtofl@val+2
 21329  14B9  0141               	movlb	1	; select bank1
 21330  14BA  0856               	movf	(??_LED_setColor+1)^(0+128),w
 21331  14BB  0140               	movlb	0	; select bank0
 21332  14BC  00A1               	movwf	___xxtofl@val+1
 21333  14BD  0141               	movlb	1	; select bank1
 21334  14BE  0855               	movf	??_LED_setColor^(0+128),w
 21335  14BF  0140               	movlb	0	; select bank0
 21336  14C0  00A0               	movwf	___xxtofl@val
 21337  14C1  3001               	movlw	1
 21338  14C2  319A  227A  3194   	fcall	___xxtofl
 21339  14C5  0140               	movlb	0	; select bank0
 21340  14C6  0823               	movf	?___xxtofl+3,w
 21341  14C7  00B5               	movwf	___fldiv@b+3
 21342  14C8  0822               	movf	?___xxtofl+2,w
 21343  14C9  00B4               	movwf	___fldiv@b+2
 21344  14CA  0821               	movf	?___xxtofl+1,w
 21345  14CB  00B3               	movwf	___fldiv@b+1
 21346  14CC  0820               	movf	?___xxtofl,w
 21347  14CD  00B2               	movwf	___fldiv@b
 21348  14CE  3043               	movlw	67
 21349  14CF  00B1               	movwf	___fldiv@a+3
 21350  14D0  307F               	movlw	127
 21351  14D1  00B0               	movwf	___fldiv@a+2
 21352  14D2  3000               	movlw	0
 21353  14D3  00AF               	movwf	___fldiv@a+1
 21354  14D4  3000               	movlw	0
 21355  14D5  00AE               	movwf	___fldiv@a
 21356  14D6  3186  263B  3194   	fcall	___fldiv
 21357  14D9  0140               	movlb	0	; select bank0
 21358  14DA  0831               	movf	?___fldiv+3,w
 21359  14DB  00CF               	movwf	___flmul@a+3
 21360  14DC  0830               	movf	?___fldiv+2,w
 21361  14DD  00CE               	movwf	___flmul@a+2
 21362  14DE  082F               	movf	?___fldiv+1,w
 21363  14DF  00CD               	movwf	___flmul@a+1
 21364  14E0  082E               	movf	?___fldiv,w
 21365  14E1  00CC               	movwf	___flmul@a
 21366  14E2  3042               	movlw	66
 21367  14E3  00CB               	movwf	___flmul@b+3
 21368  14E4  30FE               	movlw	254
 21369  14E5  00CA               	movwf	___flmul@b+2
 21370  14E6  3000               	movlw	0
 21371  14E7  00C9               	movwf	___flmul@b+1
 21372  14E8  3000               	movlw	0
 21373  14E9  00C8               	movwf	___flmul@b
 21374  14EA  318D  25A9  3194   	fcall	___flmul
 21375  14ED  0140               	movlb	0	; select bank0
 21376  14EE  084B               	movf	?___flmul+3,w
 21377  14EF  0141               	movlb	1	; select bank1
 21378  14F0  00B3               	movwf	(___fltol@f1+3)^(0+128)
 21379  14F1  0140               	movlb	0	; select bank0
 21380  14F2  084A               	movf	?___flmul+2,w
 21381  14F3  0141               	movlb	1	; select bank1
 21382  14F4  00B2               	movwf	(___fltol@f1+2)^(0+128)
 21383  14F5  0140               	movlb	0	; select bank0
 21384  14F6  0849               	movf	?___flmul+1,w
 21385  14F7  0141               	movlb	1	; select bank1
 21386  14F8  00B1               	movwf	(___fltol@f1+1)^(0+128)
 21387  14F9  0140               	movlb	0	; select bank0
 21388  14FA  0848               	movf	?___flmul,w
 21389  14FB  0141               	movlb	1	; select bank1
 21390  14FC  00B0               	movwf	___fltol@f1^(0+128)
 21391  14FD  31A7  2780  3194   	fcall	___fltol
 21392  1500  0141               	movlb	1	; select bank1
 21393  1501  0831               	movf	(?___fltol+1)^(0+128),w
 21394  1502  00BA               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 21395  1503  0830               	movf	?___fltol^(0+128),w
 21396  1504  00B9               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 21397  1505  31AF  27BC  3194   	fcall	_PWM1_LoadDutyValue
 21398                           
 21399                           ;led.c: 30:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 21400  1508  0141               	movlb	1	; select bank1
 21401  1509  0853               	movf	(LED_setColor@input^(0+128)+2),w
 21402  150A  00D5               	movwf	??_LED_setColor^(0+128)
 21403  150B  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 21404  150C  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 21405  150D  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 21406  150E  0858               	movf	(??_LED_setColor+3)^(0+128),w
 21407  150F  0140               	movlb	0	; select bank0
 21408  1510  00A3               	movwf	___xxtofl@val+3
 21409  1511  0141               	movlb	1	; select bank1
 21410  1512  0857               	movf	(??_LED_setColor+2)^(0+128),w
 21411  1513  0140               	movlb	0	; select bank0
 21412  1514  00A2               	movwf	___xxtofl@val+2
 21413  1515  0141               	movlb	1	; select bank1
 21414  1516  0856               	movf	(??_LED_setColor+1)^(0+128),w
 21415  1517  0140               	movlb	0	; select bank0
 21416  1518  00A1               	movwf	___xxtofl@val+1
 21417  1519  0141               	movlb	1	; select bank1
 21418  151A  0855               	movf	??_LED_setColor^(0+128),w
 21419  151B  0140               	movlb	0	; select bank0
 21420  151C  00A0               	movwf	___xxtofl@val
 21421  151D  3001               	movlw	1
 21422  151E  319A  227A  3194   	fcall	___xxtofl
 21423  1521  0140               	movlb	0	; select bank0
 21424  1522  0823               	movf	?___xxtofl+3,w
 21425  1523  00B5               	movwf	___fldiv@b+3
 21426  1524  0822               	movf	?___xxtofl+2,w
 21427  1525  00B4               	movwf	___fldiv@b+2
 21428  1526  0821               	movf	?___xxtofl+1,w
 21429  1527  00B3               	movwf	___fldiv@b+1
 21430  1528  0820               	movf	?___xxtofl,w
 21431  1529  00B2               	movwf	___fldiv@b
 21432  152A  3043               	movlw	67
 21433  152B  00B1               	movwf	___fldiv@a+3
 21434  152C  307F               	movlw	127
 21435  152D  00B0               	movwf	___fldiv@a+2
 21436  152E  3000               	movlw	0
 21437  152F  00AF               	movwf	___fldiv@a+1
 21438  1530  3000               	movlw	0
 21439  1531  00AE               	movwf	___fldiv@a
 21440  1532  3186  263B  3194   	fcall	___fldiv
 21441  1535  0140               	movlb	0	; select bank0
 21442  1536  0831               	movf	?___fldiv+3,w
 21443  1537  00CF               	movwf	___flmul@a+3
 21444  1538  0830               	movf	?___fldiv+2,w
 21445  1539  00CE               	movwf	___flmul@a+2
 21446  153A  082F               	movf	?___fldiv+1,w
 21447  153B  00CD               	movwf	___flmul@a+1
 21448  153C  082E               	movf	?___fldiv,w
 21449  153D  00CC               	movwf	___flmul@a
 21450  153E  3042               	movlw	66
 21451  153F  00CB               	movwf	___flmul@b+3
 21452  1540  30FE               	movlw	254
 21453  1541  00CA               	movwf	___flmul@b+2
 21454  1542  3000               	movlw	0
 21455  1543  00C9               	movwf	___flmul@b+1
 21456  1544  3000               	movlw	0
 21457  1545  00C8               	movwf	___flmul@b
 21458  1546  318D  25A9  3194   	fcall	___flmul
 21459  1549  0140               	movlb	0	; select bank0
 21460  154A  084B               	movf	?___flmul+3,w
 21461  154B  0141               	movlb	1	; select bank1
 21462  154C  00B3               	movwf	(___fltol@f1+3)^(0+128)
 21463  154D  0140               	movlb	0	; select bank0
 21464  154E  084A               	movf	?___flmul+2,w
 21465  154F  0141               	movlb	1	; select bank1
 21466  1550  00B2               	movwf	(___fltol@f1+2)^(0+128)
 21467  1551  0140               	movlb	0	; select bank0
 21468  1552  0849               	movf	?___flmul+1,w
 21469  1553  0141               	movlb	1	; select bank1
 21470  1554  00B1               	movwf	(___fltol@f1+1)^(0+128)
 21471  1555  0140               	movlb	0	; select bank0
 21472  1556  0848               	movf	?___flmul,w
 21473  1557  0141               	movlb	1	; select bank1
 21474  1558  00B0               	movwf	___fltol@f1^(0+128)
 21475  1559  31A7  2780  3194   	fcall	___fltol
 21476  155C  0141               	movlb	1	; select bank1
 21477  155D  0831               	movf	(?___fltol+1)^(0+128),w
 21478  155E  00BA               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 21479  155F  0830               	movf	?___fltol^(0+128),w
 21480  1560  00B9               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 21481  1561  31AF  27DE  3194   	fcall	_PWM2_LoadDutyValue
 21482                           
 21483                           ;led.c: 31:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 21484  1564  0141               	movlb	1	; select bank1
 21485  1565  0854               	movf	(LED_setColor@input^(0+128)+3),w
 21486  1566  00D5               	movwf	??_LED_setColor^(0+128)
 21487  1567  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 21488  1568  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 21489  1569  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 21490  156A  0858               	movf	(??_LED_setColor+3)^(0+128),w
 21491  156B  0140               	movlb	0	; select bank0
 21492  156C  00A3               	movwf	___xxtofl@val+3
 21493  156D  0141               	movlb	1	; select bank1
 21494  156E  0857               	movf	(??_LED_setColor+2)^(0+128),w
 21495  156F  0140               	movlb	0	; select bank0
 21496  1570  00A2               	movwf	___xxtofl@val+2
 21497  1571  0141               	movlb	1	; select bank1
 21498  1572  0856               	movf	(??_LED_setColor+1)^(0+128),w
 21499  1573  0140               	movlb	0	; select bank0
 21500  1574  00A1               	movwf	___xxtofl@val+1
 21501  1575  0141               	movlb	1	; select bank1
 21502  1576  0855               	movf	??_LED_setColor^(0+128),w
 21503  1577  0140               	movlb	0	; select bank0
 21504  1578  00A0               	movwf	___xxtofl@val
 21505  1579  3001               	movlw	1
 21506  157A  319A  227A  3194   	fcall	___xxtofl
 21507  157D  0140               	movlb	0	; select bank0
 21508  157E  0823               	movf	?___xxtofl+3,w
 21509  157F  00B5               	movwf	___fldiv@b+3
 21510  1580  0822               	movf	?___xxtofl+2,w
 21511  1581  00B4               	movwf	___fldiv@b+2
 21512  1582  0821               	movf	?___xxtofl+1,w
 21513  1583  00B3               	movwf	___fldiv@b+1
 21514  1584  0820               	movf	?___xxtofl,w
 21515  1585  00B2               	movwf	___fldiv@b
 21516  1586  3043               	movlw	67
 21517  1587  00B1               	movwf	___fldiv@a+3
 21518  1588  307F               	movlw	127
 21519  1589  00B0               	movwf	___fldiv@a+2
 21520  158A  3000               	movlw	0
 21521  158B  00AF               	movwf	___fldiv@a+1
 21522  158C  3000               	movlw	0
 21523  158D  00AE               	movwf	___fldiv@a
 21524  158E  3186  263B  3194   	fcall	___fldiv
 21525  1591  0140               	movlb	0	; select bank0
 21526  1592  0831               	movf	?___fldiv+3,w
 21527  1593  00CF               	movwf	___flmul@a+3
 21528  1594  0830               	movf	?___fldiv+2,w
 21529  1595  00CE               	movwf	___flmul@a+2
 21530  1596  082F               	movf	?___fldiv+1,w
 21531  1597  00CD               	movwf	___flmul@a+1
 21532  1598  082E               	movf	?___fldiv,w
 21533  1599  00CC               	movwf	___flmul@a
 21534  159A  3042               	movlw	66
 21535  159B  00CB               	movwf	___flmul@b+3
 21536  159C  30FE               	movlw	254
 21537  159D  00CA               	movwf	___flmul@b+2
 21538  159E  3000               	movlw	0
 21539  159F  00C9               	movwf	___flmul@b+1
 21540  15A0  3000               	movlw	0
 21541  15A1  00C8               	movwf	___flmul@b
 21542  15A2  318D  25A9  3194   	fcall	___flmul
 21543  15A5  0140               	movlb	0	; select bank0
 21544  15A6  084B               	movf	?___flmul+3,w
 21545  15A7  0141               	movlb	1	; select bank1
 21546  15A8  00B3               	movwf	(___fltol@f1+3)^(0+128)
 21547  15A9  0140               	movlb	0	; select bank0
 21548  15AA  084A               	movf	?___flmul+2,w
 21549  15AB  0141               	movlb	1	; select bank1
 21550  15AC  00B2               	movwf	(___fltol@f1+2)^(0+128)
 21551  15AD  0140               	movlb	0	; select bank0
 21552  15AE  0849               	movf	?___flmul+1,w
 21553  15AF  0141               	movlb	1	; select bank1
 21554  15B0  00B1               	movwf	(___fltol@f1+1)^(0+128)
 21555  15B1  0140               	movlb	0	; select bank0
 21556  15B2  0848               	movf	?___flmul,w
 21557  15B3  0141               	movlb	1	; select bank1
 21558  15B4  00B0               	movwf	___fltol@f1^(0+128)
 21559  15B5  31A7  2780  3194   	fcall	___fltol
 21560  15B8  0141               	movlb	1	; select bank1
 21561  15B9  0831               	movf	(?___fltol+1)^(0+128),w
 21562  15BA  00BA               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 21563  15BB  0830               	movf	?___fltol^(0+128),w
 21564  15BC  00B9               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 21565  15BD  31A0  2020  3194   	fcall	_PWM3_LoadDutyValue
 21566                           
 21567                           ;led.c: 32:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 21568  15C0  0141               	movlb	1	; select bank1
 21569  15C1  0851               	movf	LED_setColor@input^(0+128),w
 21570  15C2  00D5               	movwf	??_LED_setColor^(0+128)
 21571  15C3  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 21572  15C4  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 21573  15C5  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 21574  15C6  0858               	movf	(??_LED_setColor+3)^(0+128),w
 21575  15C7  0140               	movlb	0	; select bank0
 21576  15C8  00A3               	movwf	___xxtofl@val+3
 21577  15C9  0141               	movlb	1	; select bank1
 21578  15CA  0857               	movf	(??_LED_setColor+2)^(0+128),w
 21579  15CB  0140               	movlb	0	; select bank0
 21580  15CC  00A2               	movwf	___xxtofl@val+2
 21581  15CD  0141               	movlb	1	; select bank1
 21582  15CE  0856               	movf	(??_LED_setColor+1)^(0+128),w
 21583  15CF  0140               	movlb	0	; select bank0
 21584  15D0  00A1               	movwf	___xxtofl@val+1
 21585  15D1  0141               	movlb	1	; select bank1
 21586  15D2  0855               	movf	??_LED_setColor^(0+128),w
 21587  15D3  0140               	movlb	0	; select bank0
 21588  15D4  00A0               	movwf	___xxtofl@val
 21589  15D5  3001               	movlw	1
 21590  15D6  319A  227A  3194   	fcall	___xxtofl
 21591  15D9  0140               	movlb	0	; select bank0
 21592  15DA  0823               	movf	?___xxtofl+3,w
 21593  15DB  00B5               	movwf	___fldiv@b+3
 21594  15DC  0822               	movf	?___xxtofl+2,w
 21595  15DD  00B4               	movwf	___fldiv@b+2
 21596  15DE  0821               	movf	?___xxtofl+1,w
 21597  15DF  00B3               	movwf	___fldiv@b+1
 21598  15E0  0820               	movf	?___xxtofl,w
 21599  15E1  00B2               	movwf	___fldiv@b
 21600  15E2  3043               	movlw	67
 21601  15E3  00B1               	movwf	___fldiv@a+3
 21602  15E4  307F               	movlw	127
 21603  15E5  00B0               	movwf	___fldiv@a+2
 21604  15E6  3000               	movlw	0
 21605  15E7  00AF               	movwf	___fldiv@a+1
 21606  15E8  3000               	movlw	0
 21607  15E9  00AE               	movwf	___fldiv@a
 21608  15EA  3186  263B  3194   	fcall	___fldiv
 21609  15ED  0140               	movlb	0	; select bank0
 21610  15EE  0831               	movf	?___fldiv+3,w
 21611  15EF  00CF               	movwf	___flmul@a+3
 21612  15F0  0830               	movf	?___fldiv+2,w
 21613  15F1  00CE               	movwf	___flmul@a+2
 21614  15F2  082F               	movf	?___fldiv+1,w
 21615  15F3  00CD               	movwf	___flmul@a+1
 21616  15F4  082E               	movf	?___fldiv,w
 21617  15F5  00CC               	movwf	___flmul@a
 21618  15F6  3042               	movlw	66
 21619  15F7  00CB               	movwf	___flmul@b+3
 21620  15F8  30FE               	movlw	254
 21621  15F9  00CA               	movwf	___flmul@b+2
 21622  15FA  3000               	movlw	0
 21623  15FB  00C9               	movwf	___flmul@b+1
 21624  15FC  3000               	movlw	0
 21625  15FD  00C8               	movwf	___flmul@b
 21626  15FE  318D  25A9  3194   	fcall	___flmul
 21627  1601  0140               	movlb	0	; select bank0
 21628  1602  084B               	movf	?___flmul+3,w
 21629  1603  0141               	movlb	1	; select bank1
 21630  1604  00B3               	movwf	(___fltol@f1+3)^(0+128)
 21631  1605  0140               	movlb	0	; select bank0
 21632  1606  084A               	movf	?___flmul+2,w
 21633  1607  0141               	movlb	1	; select bank1
 21634  1608  00B2               	movwf	(___fltol@f1+2)^(0+128)
 21635  1609  0140               	movlb	0	; select bank0
 21636  160A  0849               	movf	?___flmul+1,w
 21637  160B  0141               	movlb	1	; select bank1
 21638  160C  00B1               	movwf	(___fltol@f1+1)^(0+128)
 21639  160D  0140               	movlb	0	; select bank0
 21640  160E  0848               	movf	?___flmul,w
 21641  160F  0141               	movlb	1	; select bank1
 21642  1610  00B0               	movwf	___fltol@f1^(0+128)
 21643  1611  31A7  2780  3194   	fcall	___fltol
 21644  1614  0141               	movlb	1	; select bank1
 21645  1615  0831               	movf	(?___fltol+1)^(0+128),w
 21646  1616  00BA               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 21647  1617  0830               	movf	?___fltol^(0+128),w
 21648  1618  00B9               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 21649  1619  31A0  2042  3194   	fcall	_PWM4_LoadDutyValue
 21650  161C                     l1424:	
 21651  161C  0008               	return
 21652  161D                     __end_of_LED_setColor:	
 21653                           
 21654                           	psect	text67
 21655  2042                     __ptext67:	
 21656 ;; *************** function _PWM4_LoadDutyValue *****************
 21657 ;; Defined at:
 21658 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;  dutyValue       2   25[BANK1 ] unsigned short 
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;		None
 21663 ;; Return value:  Size  Location     Type
 21664 ;;                  1    wreg      void 
 21665 ;; Registers used:
 21666 ;;		wreg, status,2
 21667 ;; Tracked objects:
 21668 ;;		On entry : 0/0
 21669 ;;		On exit  : 0/0
 21670 ;;		Unchanged: 0/0
 21671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21672 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21675 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21676 ;;Total ram usage:        2 bytes
 21677 ;; Hardware stack levels used:    1
 21678 ;; Hardware stack levels required when called:    4
 21679 ;; This function calls:
 21680 ;;		Nothing
 21681 ;; This function is called by:
 21682 ;;		_LED_setColor
 21683 ;; This function uses a non-reentrant model
 21684 ;;
 21685                           
 21686                           
 21687                           ;psect for function _PWM4_LoadDutyValue
 21688  2042                     _PWM4_LoadDutyValue:	
 21689  2042                     l11385:	
 21690                           ;incstack = 0
 21691                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 21692                           
 21693                           
 21694                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 21695  2042  3000               	movlw	0
 21696  2043  0141               	movlb	1	; select bank1
 21697  2044  023A               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 21698  2045  3080               	movlw	128
 21699  2046  1903               	skipnz
 21700  2047  0239               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 21701  2048  1803               	skipnc
 21702  2049  284B               	goto	u12861
 21703  204A  284C               	goto	u12860
 21704  204B                     u12861:	
 21705  204B  2863               	goto	l231
 21706  204C                     u12860:	
 21707  204C                     l11387:	
 21708                           
 21709                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 21710  204C  30FF               	movlw	255
 21711  204D  05B9               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 21712  204E  3003               	movlw	3
 21713  204F  05BA               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 21714  2050                     l11389:	
 21715                           
 21716                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 21717  2050  0146               	movlb	6	; select bank6
 21718  2051  1E1A               	btfss	26,4	;volatile
 21719  2052  2854               	goto	u12871
 21720  2053  2855               	goto	u12870
 21721  2054                     u12871:	
 21722  2054  285B               	goto	l11393
 21723  2055                     u12870:	
 21724  2055                     l11391:	
 21725                           
 21726                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 21727  2055  3006               	movlw	6
 21728  2056  0141               	movlb	1	; select bank1
 21729  2057                     u12885:	
 21730  2057  35B9               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 21731  2058  0DBA               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 21732  2059  0B89               	decfsz	9,f
 21733  205A  2857               	goto	u12885
 21734  205B                     l11393:	
 21735                           
 21736                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 21737  205B  0141               	movlb	1	; select bank1
 21738  205C  083A               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 21739  205D  0146               	movlb	6	; select bank6
 21740  205E  0099               	movwf	25	;volatile
 21741  205F                     l11395:	
 21742                           
 21743                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 21744  205F  0141               	movlb	1	; select bank1
 21745  2060  0839               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 21746  2061  0146               	movlb	6	; select bank6
 21747  2062  0098               	movwf	24	;volatile
 21748  2063                     l231:	
 21749                           ;mcc_generated_files/pwm4.c: 93:         }
 21750                           
 21751  2063  0008               	return
 21752  2064                     __end_of_PWM4_LoadDutyValue:	
 21753                           
 21754                           	psect	text68
 21755  2020                     __ptext68:	
 21756 ;; *************** function _PWM3_LoadDutyValue *****************
 21757 ;; Defined at:
 21758 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 21759 ;; Parameters:    Size  Location     Type
 21760 ;;  dutyValue       2   25[BANK1 ] unsigned short 
 21761 ;; Auto vars:     Size  Location     Type
 21762 ;;		None
 21763 ;; Return value:  Size  Location     Type
 21764 ;;                  1    wreg      void 
 21765 ;; Registers used:
 21766 ;;		wreg, status,2
 21767 ;; Tracked objects:
 21768 ;;		On entry : 0/0
 21769 ;;		On exit  : 0/0
 21770 ;;		Unchanged: 0/0
 21771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21772 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21775 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21776 ;;Total ram usage:        2 bytes
 21777 ;; Hardware stack levels used:    1
 21778 ;; Hardware stack levels required when called:    4
 21779 ;; This function calls:
 21780 ;;		Nothing
 21781 ;; This function is called by:
 21782 ;;		_LED_setColor
 21783 ;; This function uses a non-reentrant model
 21784 ;;
 21785                           
 21786                           
 21787                           ;psect for function _PWM3_LoadDutyValue
 21788  2020                     _PWM3_LoadDutyValue:	
 21789  2020                     l11369:	
 21790                           ;incstack = 0
 21791                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 21792                           
 21793                           
 21794                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 21795  2020  3000               	movlw	0
 21796  2021  0141               	movlb	1	; select bank1
 21797  2022  023A               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 21798  2023  3080               	movlw	128
 21799  2024  1903               	skipnz
 21800  2025  0239               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 21801  2026  1803               	skipnc
 21802  2027  2829               	goto	u12831
 21803  2028  282A               	goto	u12830
 21804  2029                     u12831:	
 21805  2029  2841               	goto	l209
 21806  202A                     u12830:	
 21807  202A                     l11371:	
 21808                           
 21809                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 21810  202A  30FF               	movlw	255
 21811  202B  05B9               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 21812  202C  3003               	movlw	3
 21813  202D  05BA               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 21814  202E                     l11373:	
 21815                           
 21816                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 21817  202E  0146               	movlb	6	; select bank6
 21818  202F  1E16               	btfss	22,4	;volatile
 21819  2030  2832               	goto	u12841
 21820  2031  2833               	goto	u12840
 21821  2032                     u12841:	
 21822  2032  2839               	goto	l11377
 21823  2033                     u12840:	
 21824  2033                     l11375:	
 21825                           
 21826                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 21827  2033  3006               	movlw	6
 21828  2034  0141               	movlb	1	; select bank1
 21829  2035                     u12855:	
 21830  2035  35B9               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 21831  2036  0DBA               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 21832  2037  0B89               	decfsz	9,f
 21833  2038  2835               	goto	u12855
 21834  2039                     l11377:	
 21835                           
 21836                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 21837  2039  0141               	movlb	1	; select bank1
 21838  203A  083A               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 21839  203B  0146               	movlb	6	; select bank6
 21840  203C  0095               	movwf	21	;volatile
 21841  203D                     l11379:	
 21842                           
 21843                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 21844  203D  0141               	movlb	1	; select bank1
 21845  203E  0839               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 21846  203F  0146               	movlb	6	; select bank6
 21847  2040  0094               	movwf	20	;volatile
 21848  2041                     l209:	
 21849                           ;mcc_generated_files/pwm3.c: 93:         }
 21850                           
 21851  2041  0008               	return
 21852  2042                     __end_of_PWM3_LoadDutyValue:	
 21853                           
 21854                           	psect	text69
 21855  2FDE                     __ptext69:	
 21856 ;; *************** function _PWM2_LoadDutyValue *****************
 21857 ;; Defined at:
 21858 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 21859 ;; Parameters:    Size  Location     Type
 21860 ;;  dutyValue       2   25[BANK1 ] unsigned short 
 21861 ;; Auto vars:     Size  Location     Type
 21862 ;;		None
 21863 ;; Return value:  Size  Location     Type
 21864 ;;                  1    wreg      void 
 21865 ;; Registers used:
 21866 ;;		wreg, status,2
 21867 ;; Tracked objects:
 21868 ;;		On entry : 0/0
 21869 ;;		On exit  : 0/0
 21870 ;;		Unchanged: 0/0
 21871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21872 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21875 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21876 ;;Total ram usage:        2 bytes
 21877 ;; Hardware stack levels used:    1
 21878 ;; Hardware stack levels required when called:    4
 21879 ;; This function calls:
 21880 ;;		Nothing
 21881 ;; This function is called by:
 21882 ;;		_LED_setColor
 21883 ;; This function uses a non-reentrant model
 21884 ;;
 21885                           
 21886                           
 21887                           ;psect for function _PWM2_LoadDutyValue
 21888  2FDE                     _PWM2_LoadDutyValue:	
 21889  2FDE                     l11417:	
 21890                           ;incstack = 0
 21891                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 21892                           
 21893                           
 21894                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 21895  2FDE  3000               	movlw	0
 21896  2FDF  0141               	movlb	1	; select bank1
 21897  2FE0  023A               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 21898  2FE1  3080               	movlw	128
 21899  2FE2  1903               	skipnz
 21900  2FE3  0239               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 21901  2FE4  1803               	skipnc
 21902  2FE5  2FE7               	goto	u12921
 21903  2FE6  2FE8               	goto	u12920
 21904  2FE7                     u12921:	
 21905  2FE7  2FFF               	goto	l275
 21906  2FE8                     u12920:	
 21907  2FE8                     l11419:	
 21908                           
 21909                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 21910  2FE8  30FF               	movlw	255
 21911  2FE9  05B9               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 21912  2FEA  3003               	movlw	3
 21913  2FEB  05BA               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 21914  2FEC                     l11421:	
 21915                           
 21916                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 21917  2FEC  0146               	movlb	6	; select bank6
 21918  2FED  1E12               	btfss	18,4	;volatile
 21919  2FEE  2FF0               	goto	u12931
 21920  2FEF  2FF1               	goto	u12930
 21921  2FF0                     u12931:	
 21922  2FF0  2FF7               	goto	l11425
 21923  2FF1                     u12930:	
 21924  2FF1                     l11423:	
 21925                           
 21926                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 21927  2FF1  3006               	movlw	6
 21928  2FF2  0141               	movlb	1	; select bank1
 21929  2FF3                     u12945:	
 21930  2FF3  35B9               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 21931  2FF4  0DBA               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 21932  2FF5  0B89               	decfsz	9,f
 21933  2FF6  2FF3               	goto	u12945
 21934  2FF7                     l11425:	
 21935                           
 21936                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 21937  2FF7  0141               	movlb	1	; select bank1
 21938  2FF8  083A               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 21939  2FF9  0146               	movlb	6	; select bank6
 21940  2FFA  0091               	movwf	17	;volatile
 21941  2FFB                     l11427:	
 21942                           
 21943                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 21944  2FFB  0141               	movlb	1	; select bank1
 21945  2FFC  0839               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 21946  2FFD  0146               	movlb	6	; select bank6
 21947  2FFE  0090               	movwf	16	;volatile
 21948  2FFF                     l275:	
 21949                           ;mcc_generated_files/pwm2.c: 93:         }
 21950                           
 21951  2FFF  0008               	return
 21952  3000                     __end_of_PWM2_LoadDutyValue:	
 21953                           
 21954                           	psect	text70
 21955  2FBC                     __ptext70:	
 21956 ;; *************** function _PWM1_LoadDutyValue *****************
 21957 ;; Defined at:
 21958 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 21959 ;; Parameters:    Size  Location     Type
 21960 ;;  dutyValue       2   25[BANK1 ] unsigned short 
 21961 ;; Auto vars:     Size  Location     Type
 21962 ;;		None
 21963 ;; Return value:  Size  Location     Type
 21964 ;;                  1    wreg      void 
 21965 ;; Registers used:
 21966 ;;		wreg, status,2
 21967 ;; Tracked objects:
 21968 ;;		On entry : 0/0
 21969 ;;		On exit  : 0/0
 21970 ;;		Unchanged: 0/0
 21971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21972 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21975 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21976 ;;Total ram usage:        2 bytes
 21977 ;; Hardware stack levels used:    1
 21978 ;; Hardware stack levels required when called:    4
 21979 ;; This function calls:
 21980 ;;		Nothing
 21981 ;; This function is called by:
 21982 ;;		_LED_setColor
 21983 ;; This function uses a non-reentrant model
 21984 ;;
 21985                           
 21986                           
 21987                           ;psect for function _PWM1_LoadDutyValue
 21988  2FBC                     _PWM1_LoadDutyValue:	
 21989  2FBC                     l11401:	
 21990                           ;incstack = 0
 21991                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 21992                           
 21993                           
 21994                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 21995  2FBC  3000               	movlw	0
 21996  2FBD  0141               	movlb	1	; select bank1
 21997  2FBE  023A               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 21998  2FBF  3080               	movlw	128
 21999  2FC0  1903               	skipnz
 22000  2FC1  0239               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 22001  2FC2  1803               	skipnc
 22002  2FC3  2FC5               	goto	u12891
 22003  2FC4  2FC6               	goto	u12890
 22004  2FC5                     u12891:	
 22005  2FC5  2FDD               	goto	l253
 22006  2FC6                     u12890:	
 22007  2FC6                     l11403:	
 22008                           
 22009                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 22010  2FC6  30FF               	movlw	255
 22011  2FC7  05B9               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 22012  2FC8  3003               	movlw	3
 22013  2FC9  05BA               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 22014  2FCA                     l11405:	
 22015                           
 22016                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 22017  2FCA  0146               	movlb	6	; select bank6
 22018  2FCB  1E0E               	btfss	14,4	;volatile
 22019  2FCC  2FCE               	goto	u12901
 22020  2FCD  2FCF               	goto	u12900
 22021  2FCE                     u12901:	
 22022  2FCE  2FD5               	goto	l11409
 22023  2FCF                     u12900:	
 22024  2FCF                     l11407:	
 22025                           
 22026                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 22027  2FCF  3006               	movlw	6
 22028  2FD0  0141               	movlb	1	; select bank1
 22029  2FD1                     u12915:	
 22030  2FD1  35B9               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 22031  2FD2  0DBA               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 22032  2FD3  0B89               	decfsz	9,f
 22033  2FD4  2FD1               	goto	u12915
 22034  2FD5                     l11409:	
 22035                           
 22036                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 22037  2FD5  0141               	movlb	1	; select bank1
 22038  2FD6  083A               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 22039  2FD7  0146               	movlb	6	; select bank6
 22040  2FD8  008D               	movwf	13	;volatile
 22041  2FD9                     l11411:	
 22042                           
 22043                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 22044  2FD9  0141               	movlb	1	; select bank1
 22045  2FDA  0839               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 22046  2FDB  0146               	movlb	6	; select bank6
 22047  2FDC  008C               	movwf	12	;volatile
 22048  2FDD                     l253:	
 22049                           ;mcc_generated_files/pwm1.c: 93:         }
 22050                           
 22051  2FDD  0008               	return
 22052  2FDE                     __end_of_PWM1_LoadDutyValue:	
 22053                           
 22054                           	psect	text71
 22055  00BD                     __ptext71:	
 22056 ;; *************** function _HSLToRGB *****************
 22057 ;; Defined at:
 22058 ;;		line 330 in file "led.c"
 22059 ;; Parameters:    Size  Location     Type
 22060 ;;  hsl            10   25[BANK1 ] struct .
 22061 ;; Auto vars:     Size  Location     Type
 22062 ;;  v2              4   60[BANK1 ] float 
 22063 ;;  hue             4   56[BANK1 ] float 
 22064 ;;  v1              4   52[BANK1 ] float 
 22065 ;;  rgb             4   64[BANK1 ] struct .
 22066 ;; Return value:  Size  Location     Type
 22067 ;;                  4   25[BANK1 ] struct .
 22068 ;; Registers used:
 22069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22070 ;; Tracked objects:
 22071 ;;		On entry : 0/0
 22072 ;;		On exit  : 0/0
 22073 ;;		Unchanged: 0/0
 22074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22075 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22076 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22077 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22078 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22079 ;;Total ram usage:       43 bytes
 22080 ;; Hardware stack levels used:    1
 22081 ;; Hardware stack levels required when called:    7
 22082 ;; This function calls:
 22083 ;;		_HueToRGB
 22084 ;;		___fladd
 22085 ;;		___fldiv
 22086 ;;		___fleq
 22087 ;;		___flge
 22088 ;;		___flmul
 22089 ;;		___flsub
 22090 ;;		___fltol
 22091 ;;		___xxtofl
 22092 ;; This function is called by:
 22093 ;;		_LED_task_ANIMATION
 22094 ;;		_LED_task_BEAT_CONTINUOUS
 22095 ;; This function uses a non-reentrant model
 22096 ;;
 22097                           
 22098                           
 22099                           ;psect for function _HSLToRGB
 22100  00BD                     _HSLToRGB:	
 22101  00BD                     l11599:	
 22102                           ;incstack = 0
 22103                           ; Regs used in _HSLToRGB: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22104                           
 22105                           
 22106                           ;led.c: 332:     color_t rgb;;led.c: 334:  if (hsl.saturation == 0)
 22107  00BD  3002               	movlw	2
 22108  00BE  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22109  00BF  0086               	movwf	6
 22110  00C0  0187               	clrf	7
 22111  00C1  3F40               	moviw [0]fsr1
 22112  00C2  0140               	movlb	0	; select bank0
 22113  00C3  00A0               	movwf	___fleq@ff1
 22114  00C4  3F41               	moviw [1]fsr1
 22115  00C5  00A1               	movwf	___fleq@ff1+1
 22116  00C6  3F42               	moviw [2]fsr1
 22117  00C7  00A2               	movwf	___fleq@ff1+2
 22118  00C8  3F43               	moviw [3]fsr1
 22119  00C9  00A3               	movwf	___fleq@ff1+3
 22120  00CA  3000               	movlw	0
 22121  00CB  00A7               	movwf	___fleq@ff2+3
 22122  00CC  3000               	movlw	0
 22123  00CD  00A6               	movwf	___fleq@ff2+2
 22124  00CE  3000               	movlw	0
 22125  00CF  00A5               	movwf	___fleq@ff2+1
 22126  00D0  3000               	movlw	0
 22127  00D1  00A4               	movwf	___fleq@ff2
 22128  00D2  31A4  2420  3180   	fcall	___fleq
 22129  00D5  1C03               	btfss	3,0
 22130  00D6  28D8               	goto	u13231
 22131  00D7  28D9               	goto	u13230
 22132  00D8                     u13231:	
 22133  00D8  2917               	goto	l11603
 22134  00D9                     u13230:	
 22135  00D9                     l11601:	
 22136                           
 22137                           ;led.c: 335:  {;led.c: 336:   rgb.red = rgb.green = rgb.blue = (unsigned char)(hsl.light
      +                           * 255);
 22138  00D9  3002               	movlw	2
 22139  00DA  3EE0               	addlw	(low (HSLToRGB@rgb| 0))& (0+255)
 22140  00DB  0086               	movwf	6
 22141  00DC  0187               	clrf	7
 22142  00DD  3003               	movlw	3
 22143  00DE  3EE0               	addlw	(low (HSLToRGB@rgb| 0))& (0+255)
 22144  00DF  0084               	movwf	4
 22145  00E0  0185               	clrf	5
 22146  00E1  0141               	movlb	1	; select bank1
 22147  00E2  0842               	movf	((HSLToRGB@hsl+3)^(0+128)+6),w
 22148  00E3  0140               	movlb	0	; select bank0
 22149  00E4  00CF               	movwf	___flmul@a+3
 22150  00E5  0141               	movlb	1	; select bank1
 22151  00E6  0841               	movf	((HSLToRGB@hsl+2)^(0+128)+6),w
 22152  00E7  0140               	movlb	0	; select bank0
 22153  00E8  00CE               	movwf	___flmul@a+2
 22154  00E9  0141               	movlb	1	; select bank1
 22155  00EA  0840               	movf	((HSLToRGB@hsl+1)^(0+128)+6),w
 22156  00EB  0140               	movlb	0	; select bank0
 22157  00EC  00CD               	movwf	___flmul@a+1
 22158  00ED  0141               	movlb	1	; select bank1
 22159  00EE  083F               	movf	(HSLToRGB@hsl^(0+128)+6),w
 22160  00EF  0140               	movlb	0	; select bank0
 22161  00F0  00CC               	movwf	___flmul@a
 22162  00F1  3043               	movlw	67
 22163  00F2  00CB               	movwf	___flmul@b+3
 22164  00F3  307F               	movlw	127
 22165  00F4  00CA               	movwf	___flmul@b+2
 22166  00F5  3000               	movlw	0
 22167  00F6  00C9               	movwf	___flmul@b+1
 22168  00F7  3000               	movlw	0
 22169  00F8  00C8               	movwf	___flmul@b
 22170  00F9  318D  25A9  3180   	fcall	___flmul
 22171  00FC  0140               	movlb	0	; select bank0
 22172  00FD  084B               	movf	?___flmul+3,w
 22173  00FE  0141               	movlb	1	; select bank1
 22174  00FF  00B3               	movwf	(___fltol@f1+3)^(0+128)
 22175  0100  0140               	movlb	0	; select bank0
 22176  0101  084A               	movf	?___flmul+2,w
 22177  0102  0141               	movlb	1	; select bank1
 22178  0103  00B2               	movwf	(___fltol@f1+2)^(0+128)
 22179  0104  0140               	movlb	0	; select bank0
 22180  0105  0849               	movf	?___flmul+1,w
 22181  0106  0141               	movlb	1	; select bank1
 22182  0107  00B1               	movwf	(___fltol@f1+1)^(0+128)
 22183  0108  0140               	movlb	0	; select bank0
 22184  0109  0848               	movf	?___flmul,w
 22185  010A  0141               	movlb	1	; select bank1
 22186  010B  00B0               	movwf	___fltol@f1^(0+128)
 22187  010C  31A7  2780  3180   	fcall	___fltol
 22188  010F  0141               	movlb	1	; select bank1
 22189  0110  0830               	movf	?___fltol^(0+128),w
 22190  0111  3F80               	movwi [0]fsr0
 22191  0112  3FC0               	movwi [0]fsr1
 22192  0113  00C3               	movwf	??_HSLToRGB^(0+128)
 22193  0114  0843               	movf	??_HSLToRGB^(0+128),w
 22194  0115  00E1               	movwf	(HSLToRGB@rgb^(0+128)+1)
 22195                           
 22196                           ;led.c: 337:  }
 22197  0116  2BB3               	goto	l11627
 22198  0117                     l11603:	
 22199                           
 22200                           ;led.c: 339:  {;led.c: 340:   float v1, v2;;led.c: 341:   float hue = (float)hsl.hue / 3
      +                          60;
 22201  0117  3043               	movlw	67
 22202  0118  0140               	movlb	0	; select bank0
 22203  0119  00B1               	movwf	___fldiv@a+3
 22204  011A  30B4               	movlw	180
 22205  011B  00B0               	movwf	___fldiv@a+2
 22206  011C  3000               	movlw	0
 22207  011D  00AF               	movwf	___fldiv@a+1
 22208  011E  3000               	movlw	0
 22209  011F  00AE               	movwf	___fldiv@a
 22210  0120  0141               	movlb	1	; select bank1
 22211  0121  0839               	movf	HSLToRGB@hsl^(0+128),w
 22212  0122  0140               	movlb	0	; select bank0
 22213  0123  00A0               	movwf	___xxtofl@val
 22214  0124  0141               	movlb	1	; select bank1
 22215  0125  083A               	movf	(HSLToRGB@hsl+1)^(0+128),w
 22216  0126  0140               	movlb	0	; select bank0
 22217  0127  00A1               	movwf	___xxtofl@val+1
 22218  0128  01A2               	clrf	___xxtofl@val+2
 22219  0129  01A3               	clrf	___xxtofl@val+3
 22220  012A  3000               	movlw	0
 22221  012B  319A  227A  3180   	fcall	___xxtofl
 22222  012E  0140               	movlb	0	; select bank0
 22223  012F  0823               	movf	?___xxtofl+3,w
 22224  0130  00B5               	movwf	___fldiv@b+3
 22225  0131  0822               	movf	?___xxtofl+2,w
 22226  0132  00B4               	movwf	___fldiv@b+2
 22227  0133  0821               	movf	?___xxtofl+1,w
 22228  0134  00B3               	movwf	___fldiv@b+1
 22229  0135  0820               	movf	?___xxtofl,w
 22230  0136  00B2               	movwf	___fldiv@b
 22231  0137  3186  263B  3180   	fcall	___fldiv
 22232  013A  0140               	movlb	0	; select bank0
 22233  013B  0831               	movf	?___fldiv+3,w
 22234  013C  0141               	movlb	1	; select bank1
 22235  013D  00DB               	movwf	(HSLToRGB@hue+3)^(0+128)
 22236  013E  0140               	movlb	0	; select bank0
 22237  013F  0830               	movf	?___fldiv+2,w
 22238  0140  0141               	movlb	1	; select bank1
 22239  0141  00DA               	movwf	(HSLToRGB@hue+2)^(0+128)
 22240  0142  0140               	movlb	0	; select bank0
 22241  0143  082F               	movf	?___fldiv+1,w
 22242  0144  0141               	movlb	1	; select bank1
 22243  0145  00D9               	movwf	(HSLToRGB@hue+1)^(0+128)
 22244  0146  0140               	movlb	0	; select bank0
 22245  0147  082E               	movf	?___fldiv,w
 22246  0148  0141               	movlb	1	; select bank1
 22247  0149  00D8               	movwf	HSLToRGB@hue^(0+128)
 22248  014A                     l11605:	
 22249                           
 22250                           ;led.c: 343:   v2 = (hsl.light < 0.5) ? (hsl.light * (1 + hsl.saturation)) : ((hsl.light
      +                           + hsl.saturation) - (hsl.light * hsl.saturation));
 22251  014A  3006               	movlw	6
 22252  014B  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22253  014C  0086               	movwf	6
 22254  014D  0187               	clrf	7
 22255  014E  3F40               	moviw [0]fsr1
 22256  014F  0140               	movlb	0	; select bank0
 22257  0150  00E2               	movwf	___flge@ff1
 22258  0151  3F41               	moviw [1]fsr1
 22259  0152  00E3               	movwf	___flge@ff1+1
 22260  0153  3F42               	moviw [2]fsr1
 22261  0154  00E4               	movwf	___flge@ff1+2
 22262  0155  3F43               	moviw [3]fsr1
 22263  0156  00E5               	movwf	___flge@ff1+3
 22264  0157  303F               	movlw	63
 22265  0158  00E9               	movwf	___flge@ff2+3
 22266  0159  3000               	movlw	0
 22267  015A  00E8               	movwf	___flge@ff2+2
 22268  015B  3000               	movlw	0
 22269  015C  00E7               	movwf	___flge@ff2+1
 22270  015D  3000               	movlw	0
 22271  015E  00E6               	movwf	___flge@ff2
 22272  015F  3198  20BB  3180   	fcall	___flge
 22273  0162  1C03               	btfss	3,0
 22274  0163  2965               	goto	u13241
 22275  0164  2966               	goto	u13240
 22276  0165                     u13241:	
 22277  0165  29DB               	goto	l11609
 22278  0166                     u13240:	
 22279  0166                     l11607:	
 22280  0166  3002               	movlw	2
 22281  0167  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22282  0168  0086               	movwf	6
 22283  0169  0187               	clrf	7
 22284  016A  3F40               	moviw [0]fsr1
 22285  016B  0140               	movlb	0	; select bank0
 22286  016C  00A9               	movwf	___fladd@b
 22287  016D  3F41               	moviw [1]fsr1
 22288  016E  00AA               	movwf	___fladd@b+1
 22289  016F  3F42               	moviw [2]fsr1
 22290  0170  00AB               	movwf	___fladd@b+2
 22291  0171  3F43               	moviw [3]fsr1
 22292  0172  00AC               	movwf	___fladd@b+3
 22293  0173  3006               	movlw	6
 22294  0174  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22295  0175  0086               	movwf	6
 22296  0176  0187               	clrf	7
 22297  0177  3F40               	moviw [0]fsr1
 22298  0178  00AD               	movwf	___fladd@a
 22299  0179  3F41               	moviw [1]fsr1
 22300  017A  00AE               	movwf	___fladd@a+1
 22301  017B  3F42               	moviw [2]fsr1
 22302  017C  00AF               	movwf	___fladd@a+2
 22303  017D  3F43               	moviw [3]fsr1
 22304  017E  00B0               	movwf	___fladd@a+3
 22305  017F  318B  2371  3180   	fcall	___fladd
 22306  0182  0140               	movlb	0	; select bank0
 22307  0183  082C               	movf	?___fladd+3,w
 22308  0184  0141               	movlb	1	; select bank1
 22309  0185  00C7               	movwf	(_HSLToRGB$4180+3)^(0+128)
 22310  0186  0140               	movlb	0	; select bank0
 22311  0187  082B               	movf	?___fladd+2,w
 22312  0188  0141               	movlb	1	; select bank1
 22313  0189  00C6               	movwf	(_HSLToRGB$4180+2)^(0+128)
 22314  018A  0140               	movlb	0	; select bank0
 22315  018B  082A               	movf	?___fladd+1,w
 22316  018C  0141               	movlb	1	; select bank1
 22317  018D  00C5               	movwf	(_HSLToRGB$4180+1)^(0+128)
 22318  018E  0140               	movlb	0	; select bank0
 22319  018F  0829               	movf	?___fladd,w
 22320  0190  0141               	movlb	1	; select bank1
 22321  0191  00C4               	movwf	_HSLToRGB$4180^(0+128)
 22322  0192  3002               	movlw	2
 22323  0193  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22324  0194  0086               	movwf	6
 22325  0195  0187               	clrf	7
 22326  0196  3F40               	moviw [0]fsr1
 22327  0197  0140               	movlb	0	; select bank0
 22328  0198  00C8               	movwf	___flmul@b
 22329  0199  3F41               	moviw [1]fsr1
 22330  019A  00C9               	movwf	___flmul@b+1
 22331  019B  3F42               	moviw [2]fsr1
 22332  019C  00CA               	movwf	___flmul@b+2
 22333  019D  3F43               	moviw [3]fsr1
 22334  019E  00CB               	movwf	___flmul@b+3
 22335  019F  3006               	movlw	6
 22336  01A0  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22337  01A1  0086               	movwf	6
 22338  01A2  0187               	clrf	7
 22339  01A3  3F40               	moviw [0]fsr1
 22340  01A4  00CC               	movwf	___flmul@a
 22341  01A5  3F41               	moviw [1]fsr1
 22342  01A6  00CD               	movwf	___flmul@a+1
 22343  01A7  3F42               	moviw [2]fsr1
 22344  01A8  00CE               	movwf	___flmul@a+2
 22345  01A9  3F43               	moviw [3]fsr1
 22346  01AA  00CF               	movwf	___flmul@a+3
 22347  01AB  318D  25A9  3180   	fcall	___flmul
 22348  01AE  0140               	movlb	0	; select bank0
 22349  01AF  084B               	movf	?___flmul+3,w
 22350  01B0  00E5               	movwf	___flsub@a+3
 22351  01B1  084A               	movf	?___flmul+2,w
 22352  01B2  00E4               	movwf	___flsub@a+2
 22353  01B3  0849               	movf	?___flmul+1,w
 22354  01B4  00E3               	movwf	___flsub@a+1
 22355  01B5  0848               	movf	?___flmul,w
 22356  01B6  00E2               	movwf	___flsub@a
 22357  01B7  0141               	movlb	1	; select bank1
 22358  01B8  0847               	movf	(_HSLToRGB$4180+3)^(0+128),w
 22359  01B9  0140               	movlb	0	; select bank0
 22360  01BA  00E9               	movwf	___flsub@b+3
 22361  01BB  0141               	movlb	1	; select bank1
 22362  01BC  0846               	movf	(_HSLToRGB$4180+2)^(0+128),w
 22363  01BD  0140               	movlb	0	; select bank0
 22364  01BE  00E8               	movwf	___flsub@b+2
 22365  01BF  0141               	movlb	1	; select bank1
 22366  01C0  0845               	movf	(_HSLToRGB$4180+1)^(0+128),w
 22367  01C1  0140               	movlb	0	; select bank0
 22368  01C2  00E7               	movwf	___flsub@b+1
 22369  01C3  0141               	movlb	1	; select bank1
 22370  01C4  0844               	movf	_HSLToRGB$4180^(0+128),w
 22371  01C5  0140               	movlb	0	; select bank0
 22372  01C6  00E6               	movwf	___flsub@b
 22373  01C7  31A0  2000  3180   	fcall	___flsub
 22374  01CA  0140               	movlb	0	; select bank0
 22375  01CB  0865               	movf	?___flsub+3,w
 22376  01CC  0141               	movlb	1	; select bank1
 22377  01CD  00DF               	movwf	(HSLToRGB@v2+3)^(0+128)
 22378  01CE  0140               	movlb	0	; select bank0
 22379  01CF  0864               	movf	?___flsub+2,w
 22380  01D0  0141               	movlb	1	; select bank1
 22381  01D1  00DE               	movwf	(HSLToRGB@v2+2)^(0+128)
 22382  01D2  0140               	movlb	0	; select bank0
 22383  01D3  0863               	movf	?___flsub+1,w
 22384  01D4  0141               	movlb	1	; select bank1
 22385  01D5  00DD               	movwf	(HSLToRGB@v2+1)^(0+128)
 22386  01D6  0140               	movlb	0	; select bank0
 22387  01D7  0862               	movf	?___flsub,w
 22388  01D8  0141               	movlb	1	; select bank1
 22389  01D9  00DC               	movwf	HSLToRGB@v2^(0+128)
 22390  01DA  2A1B               	goto	l1556
 22391  01DB                     l11609:	
 22392  01DB  3006               	movlw	6
 22393  01DC  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22394  01DD  0086               	movwf	6
 22395  01DE  0187               	clrf	7
 22396  01DF  3F40               	moviw [0]fsr1
 22397  01E0  0140               	movlb	0	; select bank0
 22398  01E1  00C8               	movwf	___flmul@b
 22399  01E2  3F41               	moviw [1]fsr1
 22400  01E3  00C9               	movwf	___flmul@b+1
 22401  01E4  3F42               	moviw [2]fsr1
 22402  01E5  00CA               	movwf	___flmul@b+2
 22403  01E6  3F43               	moviw [3]fsr1
 22404  01E7  00CB               	movwf	___flmul@b+3
 22405  01E8  303F               	movlw	63
 22406  01E9  00AC               	movwf	___fladd@b+3
 22407  01EA  3080               	movlw	128
 22408  01EB  00AB               	movwf	___fladd@b+2
 22409  01EC  3000               	movlw	0
 22410  01ED  00AA               	movwf	___fladd@b+1
 22411  01EE  3000               	movlw	0
 22412  01EF  00A9               	movwf	___fladd@b
 22413  01F0  3002               	movlw	2
 22414  01F1  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22415  01F2  0086               	movwf	6
 22416  01F3  0187               	clrf	7
 22417  01F4  3F40               	moviw [0]fsr1
 22418  01F5  00AD               	movwf	___fladd@a
 22419  01F6  3F41               	moviw [1]fsr1
 22420  01F7  00AE               	movwf	___fladd@a+1
 22421  01F8  3F42               	moviw [2]fsr1
 22422  01F9  00AF               	movwf	___fladd@a+2
 22423  01FA  3F43               	moviw [3]fsr1
 22424  01FB  00B0               	movwf	___fladd@a+3
 22425  01FC  318B  2371  3180   	fcall	___fladd
 22426  01FF  0140               	movlb	0	; select bank0
 22427  0200  082C               	movf	?___fladd+3,w
 22428  0201  00CF               	movwf	___flmul@a+3
 22429  0202  082B               	movf	?___fladd+2,w
 22430  0203  00CE               	movwf	___flmul@a+2
 22431  0204  082A               	movf	?___fladd+1,w
 22432  0205  00CD               	movwf	___flmul@a+1
 22433  0206  0829               	movf	?___fladd,w
 22434  0207  00CC               	movwf	___flmul@a
 22435  0208  318D  25A9  3180   	fcall	___flmul
 22436  020B  0140               	movlb	0	; select bank0
 22437  020C  084B               	movf	?___flmul+3,w
 22438  020D  0141               	movlb	1	; select bank1
 22439  020E  00DF               	movwf	(HSLToRGB@v2+3)^(0+128)
 22440  020F  0140               	movlb	0	; select bank0
 22441  0210  084A               	movf	?___flmul+2,w
 22442  0211  0141               	movlb	1	; select bank1
 22443  0212  00DE               	movwf	(HSLToRGB@v2+2)^(0+128)
 22444  0213  0140               	movlb	0	; select bank0
 22445  0214  0849               	movf	?___flmul+1,w
 22446  0215  0141               	movlb	1	; select bank1
 22447  0216  00DD               	movwf	(HSLToRGB@v2+1)^(0+128)
 22448  0217  0140               	movlb	0	; select bank0
 22449  0218  0848               	movf	?___flmul,w
 22450  0219  0141               	movlb	1	; select bank1
 22451  021A  00DC               	movwf	HSLToRGB@v2^(0+128)
 22452  021B                     l1556:	
 22453                           
 22454                           ;led.c: 344:   v1 = 2 * hsl.light - v2;
 22455  021B  085F               	movf	(HSLToRGB@v2+3)^(0+128),w
 22456  021C  0140               	movlb	0	; select bank0
 22457  021D  00E5               	movwf	___flsub@a+3
 22458  021E  0141               	movlb	1	; select bank1
 22459  021F  085E               	movf	(HSLToRGB@v2+2)^(0+128),w
 22460  0220  0140               	movlb	0	; select bank0
 22461  0221  00E4               	movwf	___flsub@a+2
 22462  0222  0141               	movlb	1	; select bank1
 22463  0223  085D               	movf	(HSLToRGB@v2+1)^(0+128),w
 22464  0224  0140               	movlb	0	; select bank0
 22465  0225  00E3               	movwf	___flsub@a+1
 22466  0226  0141               	movlb	1	; select bank1
 22467  0227  085C               	movf	HSLToRGB@v2^(0+128),w
 22468  0228  0140               	movlb	0	; select bank0
 22469  0229  00E2               	movwf	___flsub@a
 22470  022A  3040               	movlw	64
 22471  022B  00CB               	movwf	___flmul@b+3
 22472  022C  3000               	movlw	0
 22473  022D  00CA               	movwf	___flmul@b+2
 22474  022E  3000               	movlw	0
 22475  022F  00C9               	movwf	___flmul@b+1
 22476  0230  3000               	movlw	0
 22477  0231  00C8               	movwf	___flmul@b
 22478  0232  3006               	movlw	6
 22479  0233  3EB9               	addlw	(low (HSLToRGB@hsl| 0))& (0+255)
 22480  0234  0086               	movwf	6
 22481  0235  0187               	clrf	7
 22482  0236  3F40               	moviw [0]fsr1
 22483  0237  00CC               	movwf	___flmul@a
 22484  0238  3F41               	moviw [1]fsr1
 22485  0239  00CD               	movwf	___flmul@a+1
 22486  023A  3F42               	moviw [2]fsr1
 22487  023B  00CE               	movwf	___flmul@a+2
 22488  023C  3F43               	moviw [3]fsr1
 22489  023D  00CF               	movwf	___flmul@a+3
 22490  023E  318D  25A9  3180   	fcall	___flmul
 22491  0241  0140               	movlb	0	; select bank0
 22492  0242  084B               	movf	?___flmul+3,w
 22493  0243  00E9               	movwf	___flsub@b+3
 22494  0244  084A               	movf	?___flmul+2,w
 22495  0245  00E8               	movwf	___flsub@b+2
 22496  0246  0849               	movf	?___flmul+1,w
 22497  0247  00E7               	movwf	___flsub@b+1
 22498  0248  0848               	movf	?___flmul,w
 22499  0249  00E6               	movwf	___flsub@b
 22500  024A  31A0  2000  3180   	fcall	___flsub
 22501  024D  0140               	movlb	0	; select bank0
 22502  024E  0865               	movf	?___flsub+3,w
 22503  024F  0141               	movlb	1	; select bank1
 22504  0250  00D7               	movwf	(HSLToRGB@v1+3)^(0+128)
 22505  0251  0140               	movlb	0	; select bank0
 22506  0252  0864               	movf	?___flsub+2,w
 22507  0253  0141               	movlb	1	; select bank1
 22508  0254  00D6               	movwf	(HSLToRGB@v1+2)^(0+128)
 22509  0255  0140               	movlb	0	; select bank0
 22510  0256  0863               	movf	?___flsub+1,w
 22511  0257  0141               	movlb	1	; select bank1
 22512  0258  00D5               	movwf	(HSLToRGB@v1+1)^(0+128)
 22513  0259  0140               	movlb	0	; select bank0
 22514  025A  0862               	movf	?___flsub,w
 22515  025B  0141               	movlb	1	; select bank1
 22516  025C  00D4               	movwf	HSLToRGB@v1^(0+128)
 22517  025D                     l11611:	
 22518                           
 22519                           ;led.c: 346:   rgb.red = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 22520  025D  085B               	movf	(HSLToRGB@hue+3)^(0+128),w
 22521  025E  0140               	movlb	0	; select bank0
 22522  025F  00B0               	movwf	___fladd@a+3
 22523  0260  0141               	movlb	1	; select bank1
 22524  0261  085A               	movf	(HSLToRGB@hue+2)^(0+128),w
 22525  0262  0140               	movlb	0	; select bank0
 22526  0263  00AF               	movwf	___fladd@a+2
 22527  0264  0141               	movlb	1	; select bank1
 22528  0265  0859               	movf	(HSLToRGB@hue+1)^(0+128),w
 22529  0266  0140               	movlb	0	; select bank0
 22530  0267  00AE               	movwf	___fladd@a+1
 22531  0268  0141               	movlb	1	; select bank1
 22532  0269  0858               	movf	HSLToRGB@hue^(0+128),w
 22533  026A  0140               	movlb	0	; select bank0
 22534  026B  00AD               	movwf	___fladd@a
 22535  026C  303E               	movlw	62
 22536  026D  00AC               	movwf	___fladd@b+3
 22537  026E  30AA               	movlw	170
 22538  026F  00AB               	movwf	___fladd@b+2
 22539  0270  30AA               	movlw	170
 22540  0271  00AA               	movwf	___fladd@b+1
 22541  0272  30AB               	movlw	171
 22542  0273  00A9               	movwf	___fladd@b
 22543  0274  318B  2371  3180   	fcall	___fladd
 22544  0277  0140               	movlb	0	; select bank0
 22545  0278  082C               	movf	?___fladd+3,w
 22546  0279  0141               	movlb	1	; select bank1
 22547  027A  00CF               	movwf	(_HSLToRGB$4181+3)^(0+128)
 22548  027B  0140               	movlb	0	; select bank0
 22549  027C  082B               	movf	?___fladd+2,w
 22550  027D  0141               	movlb	1	; select bank1
 22551  027E  00CE               	movwf	(_HSLToRGB$4181+2)^(0+128)
 22552  027F  0140               	movlb	0	; select bank0
 22553  0280  082A               	movf	?___fladd+1,w
 22554  0281  0141               	movlb	1	; select bank1
 22555  0282  00CD               	movwf	(_HSLToRGB$4181+1)^(0+128)
 22556  0283  0140               	movlb	0	; select bank0
 22557  0284  0829               	movf	?___fladd,w
 22558  0285  0141               	movlb	1	; select bank1
 22559  0286  00CC               	movwf	_HSLToRGB$4181^(0+128)
 22560  0287                     l11613:	
 22561                           
 22562                           ;led.c: 346:   rgb.red = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 22563  0287  084F               	movf	(_HSLToRGB$4181+3)^(0+128),w
 22564  0288  00AB               	movwf	(HueToRGB@vH+3)^(0+128)
 22565  0289  084E               	movf	(_HSLToRGB$4181+2)^(0+128),w
 22566  028A  00AA               	movwf	(HueToRGB@vH+2)^(0+128)
 22567  028B  084D               	movf	(_HSLToRGB$4181+1)^(0+128),w
 22568  028C  00A9               	movwf	(HueToRGB@vH+1)^(0+128)
 22569  028D  084C               	movf	_HSLToRGB$4181^(0+128),w
 22570  028E  00A8               	movwf	HueToRGB@vH^(0+128)
 22571  028F  085F               	movf	(HSLToRGB@v2+3)^(0+128),w
 22572  0290  00A7               	movwf	(HueToRGB@v2+3)^(0+128)
 22573  0291  085E               	movf	(HSLToRGB@v2+2)^(0+128),w
 22574  0292  00A6               	movwf	(HueToRGB@v2+2)^(0+128)
 22575  0293  085D               	movf	(HSLToRGB@v2+1)^(0+128),w
 22576  0294  00A5               	movwf	(HueToRGB@v2+1)^(0+128)
 22577  0295  085C               	movf	HSLToRGB@v2^(0+128),w
 22578  0296  00A4               	movwf	HueToRGB@v2^(0+128)
 22579  0297  0857               	movf	(HSLToRGB@v1+3)^(0+128),w
 22580  0298  00A3               	movwf	(HueToRGB@v1+3)^(0+128)
 22581  0299  0856               	movf	(HSLToRGB@v1+2)^(0+128),w
 22582  029A  00A2               	movwf	(HueToRGB@v1+2)^(0+128)
 22583  029B  0855               	movf	(HSLToRGB@v1+1)^(0+128),w
 22584  029C  00A1               	movwf	(HueToRGB@v1+1)^(0+128)
 22585  029D  0854               	movf	HSLToRGB@v1^(0+128),w
 22586  029E  00A0               	movwf	HueToRGB@v1^(0+128)
 22587  029F  3183  23BC  3180   	fcall	_HueToRGB
 22588  02A2  0141               	movlb	1	; select bank1
 22589  02A3  0823               	movf	(?_HueToRGB+3)^(0+128),w
 22590  02A4  00D3               	movwf	(_HSLToRGB$4182+3)^(0+128)
 22591  02A5  0822               	movf	(?_HueToRGB+2)^(0+128),w
 22592  02A6  00D2               	movwf	(_HSLToRGB$4182+2)^(0+128)
 22593  02A7  0821               	movf	(?_HueToRGB+1)^(0+128),w
 22594  02A8  00D1               	movwf	(_HSLToRGB$4182+1)^(0+128)
 22595  02A9  0820               	movf	?_HueToRGB^(0+128),w
 22596  02AA  00D0               	movwf	_HSLToRGB$4182^(0+128)
 22597  02AB                     l11615:	
 22598                           
 22599                           ;led.c: 346:   rgb.red = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 22600  02AB  0853               	movf	(_HSLToRGB$4182+3)^(0+128),w
 22601  02AC  0140               	movlb	0	; select bank0
 22602  02AD  00CF               	movwf	___flmul@a+3
 22603  02AE  0141               	movlb	1	; select bank1
 22604  02AF  0852               	movf	(_HSLToRGB$4182+2)^(0+128),w
 22605  02B0  0140               	movlb	0	; select bank0
 22606  02B1  00CE               	movwf	___flmul@a+2
 22607  02B2  0141               	movlb	1	; select bank1
 22608  02B3  0851               	movf	(_HSLToRGB$4182+1)^(0+128),w
 22609  02B4  0140               	movlb	0	; select bank0
 22610  02B5  00CD               	movwf	___flmul@a+1
 22611  02B6  0141               	movlb	1	; select bank1
 22612  02B7  0850               	movf	_HSLToRGB$4182^(0+128),w
 22613  02B8  0140               	movlb	0	; select bank0
 22614  02B9  00CC               	movwf	___flmul@a
 22615  02BA  3043               	movlw	67
 22616  02BB  00CB               	movwf	___flmul@b+3
 22617  02BC  307F               	movlw	127
 22618  02BD  00CA               	movwf	___flmul@b+2
 22619  02BE  3000               	movlw	0
 22620  02BF  00C9               	movwf	___flmul@b+1
 22621  02C0  3000               	movlw	0
 22622  02C1  00C8               	movwf	___flmul@b
 22623  02C2  318D  25A9  3180   	fcall	___flmul
 22624  02C5  0140               	movlb	0	; select bank0
 22625  02C6  084B               	movf	?___flmul+3,w
 22626  02C7  0141               	movlb	1	; select bank1
 22627  02C8  00B3               	movwf	(___fltol@f1+3)^(0+128)
 22628  02C9  0140               	movlb	0	; select bank0
 22629  02CA  084A               	movf	?___flmul+2,w
 22630  02CB  0141               	movlb	1	; select bank1
 22631  02CC  00B2               	movwf	(___fltol@f1+2)^(0+128)
 22632  02CD  0140               	movlb	0	; select bank0
 22633  02CE  0849               	movf	?___flmul+1,w
 22634  02CF  0141               	movlb	1	; select bank1
 22635  02D0  00B1               	movwf	(___fltol@f1+1)^(0+128)
 22636  02D1  0140               	movlb	0	; select bank0
 22637  02D2  0848               	movf	?___flmul,w
 22638  02D3  0141               	movlb	1	; select bank1
 22639  02D4  00B0               	movwf	___fltol@f1^(0+128)
 22640  02D5  31A7  2780  3180   	fcall	___fltol
 22641  02D8  0141               	movlb	1	; select bank1
 22642  02D9  0830               	movf	?___fltol^(0+128),w
 22643  02DA  00C3               	movwf	??_HSLToRGB^(0+128)
 22644  02DB  0843               	movf	??_HSLToRGB^(0+128),w
 22645  02DC  00E1               	movwf	(HSLToRGB@rgb^(0+128)+1)
 22646  02DD                     l11617:	
 22647                           
 22648                           ;led.c: 347:   rgb.green = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 22649  02DD  085B               	movf	(HSLToRGB@hue+3)^(0+128),w
 22650  02DE  00AB               	movwf	(HueToRGB@vH+3)^(0+128)
 22651  02DF  085A               	movf	(HSLToRGB@hue+2)^(0+128),w
 22652  02E0  00AA               	movwf	(HueToRGB@vH+2)^(0+128)
 22653  02E1  0859               	movf	(HSLToRGB@hue+1)^(0+128),w
 22654  02E2  00A9               	movwf	(HueToRGB@vH+1)^(0+128)
 22655  02E3  0858               	movf	HSLToRGB@hue^(0+128),w
 22656  02E4  00A8               	movwf	HueToRGB@vH^(0+128)
 22657  02E5  085F               	movf	(HSLToRGB@v2+3)^(0+128),w
 22658  02E6  00A7               	movwf	(HueToRGB@v2+3)^(0+128)
 22659  02E7  085E               	movf	(HSLToRGB@v2+2)^(0+128),w
 22660  02E8  00A6               	movwf	(HueToRGB@v2+2)^(0+128)
 22661  02E9  085D               	movf	(HSLToRGB@v2+1)^(0+128),w
 22662  02EA  00A5               	movwf	(HueToRGB@v2+1)^(0+128)
 22663  02EB  085C               	movf	HSLToRGB@v2^(0+128),w
 22664  02EC  00A4               	movwf	HueToRGB@v2^(0+128)
 22665  02ED  0857               	movf	(HSLToRGB@v1+3)^(0+128),w
 22666  02EE  00A3               	movwf	(HueToRGB@v1+3)^(0+128)
 22667  02EF  0856               	movf	(HSLToRGB@v1+2)^(0+128),w
 22668  02F0  00A2               	movwf	(HueToRGB@v1+2)^(0+128)
 22669  02F1  0855               	movf	(HSLToRGB@v1+1)^(0+128),w
 22670  02F2  00A1               	movwf	(HueToRGB@v1+1)^(0+128)
 22671  02F3  0854               	movf	HSLToRGB@v1^(0+128),w
 22672  02F4  00A0               	movwf	HueToRGB@v1^(0+128)
 22673  02F5  3183  23BC  3180   	fcall	_HueToRGB
 22674  02F8  0141               	movlb	1	; select bank1
 22675  02F9  0823               	movf	(?_HueToRGB+3)^(0+128),w
 22676  02FA  00CB               	movwf	(_HSLToRGB$4183+3)^(0+128)
 22677  02FB  0822               	movf	(?_HueToRGB+2)^(0+128),w
 22678  02FC  00CA               	movwf	(_HSLToRGB$4183+2)^(0+128)
 22679  02FD  0821               	movf	(?_HueToRGB+1)^(0+128),w
 22680  02FE  00C9               	movwf	(_HSLToRGB$4183+1)^(0+128)
 22681  02FF  0820               	movf	?_HueToRGB^(0+128),w
 22682  0300  00C8               	movwf	_HSLToRGB$4183^(0+128)
 22683  0301                     l11619:	
 22684                           
 22685                           ;led.c: 347:   rgb.green = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 22686  0301  084B               	movf	(_HSLToRGB$4183+3)^(0+128),w
 22687  0302  0140               	movlb	0	; select bank0
 22688  0303  00CF               	movwf	___flmul@a+3
 22689  0304  0141               	movlb	1	; select bank1
 22690  0305  084A               	movf	(_HSLToRGB$4183+2)^(0+128),w
 22691  0306  0140               	movlb	0	; select bank0
 22692  0307  00CE               	movwf	___flmul@a+2
 22693  0308  0141               	movlb	1	; select bank1
 22694  0309  0849               	movf	(_HSLToRGB$4183+1)^(0+128),w
 22695  030A  0140               	movlb	0	; select bank0
 22696  030B  00CD               	movwf	___flmul@a+1
 22697  030C  0141               	movlb	1	; select bank1
 22698  030D  0848               	movf	_HSLToRGB$4183^(0+128),w
 22699  030E  0140               	movlb	0	; select bank0
 22700  030F  00CC               	movwf	___flmul@a
 22701  0310  3043               	movlw	67
 22702  0311  00CB               	movwf	___flmul@b+3
 22703  0312  307F               	movlw	127
 22704  0313  00CA               	movwf	___flmul@b+2
 22705  0314  3000               	movlw	0
 22706  0315  00C9               	movwf	___flmul@b+1
 22707  0316  3000               	movlw	0
 22708  0317  00C8               	movwf	___flmul@b
 22709  0318  318D  25A9  3180   	fcall	___flmul
 22710  031B  0140               	movlb	0	; select bank0
 22711  031C  084B               	movf	?___flmul+3,w
 22712  031D  0141               	movlb	1	; select bank1
 22713  031E  00B3               	movwf	(___fltol@f1+3)^(0+128)
 22714  031F  0140               	movlb	0	; select bank0
 22715  0320  084A               	movf	?___flmul+2,w
 22716  0321  0141               	movlb	1	; select bank1
 22717  0322  00B2               	movwf	(___fltol@f1+2)^(0+128)
 22718  0323  0140               	movlb	0	; select bank0
 22719  0324  0849               	movf	?___flmul+1,w
 22720  0325  0141               	movlb	1	; select bank1
 22721  0326  00B1               	movwf	(___fltol@f1+1)^(0+128)
 22722  0327  0140               	movlb	0	; select bank0
 22723  0328  0848               	movf	?___flmul,w
 22724  0329  0141               	movlb	1	; select bank1
 22725  032A  00B0               	movwf	___fltol@f1^(0+128)
 22726  032B  31A7  2780  3180   	fcall	___fltol
 22727  032E  0141               	movlb	1	; select bank1
 22728  032F  0830               	movf	?___fltol^(0+128),w
 22729  0330  00C3               	movwf	??_HSLToRGB^(0+128)
 22730  0331  0843               	movf	??_HSLToRGB^(0+128),w
 22731  0332  00E2               	movwf	(HSLToRGB@rgb^(0+128)+2)
 22732  0333                     l11621:	
 22733                           
 22734                           ;led.c: 348:   rgb.blue = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 22735  0333  085B               	movf	(HSLToRGB@hue+3)^(0+128),w
 22736  0334  0140               	movlb	0	; select bank0
 22737  0335  00B0               	movwf	___fladd@a+3
 22738  0336  0141               	movlb	1	; select bank1
 22739  0337  085A               	movf	(HSLToRGB@hue+2)^(0+128),w
 22740  0338  0140               	movlb	0	; select bank0
 22741  0339  00AF               	movwf	___fladd@a+2
 22742  033A  0141               	movlb	1	; select bank1
 22743  033B  0859               	movf	(HSLToRGB@hue+1)^(0+128),w
 22744  033C  0140               	movlb	0	; select bank0
 22745  033D  00AE               	movwf	___fladd@a+1
 22746  033E  0141               	movlb	1	; select bank1
 22747  033F  0858               	movf	HSLToRGB@hue^(0+128),w
 22748  0340  0140               	movlb	0	; select bank0
 22749  0341  00AD               	movwf	___fladd@a
 22750  0342  30BE               	movlw	190
 22751  0343  00AC               	movwf	___fladd@b+3
 22752  0344  30AA               	movlw	170
 22753  0345  00AB               	movwf	___fladd@b+2
 22754  0346  30AA               	movlw	170
 22755  0347  00AA               	movwf	___fladd@b+1
 22756  0348  30AB               	movlw	171
 22757  0349  00A9               	movwf	___fladd@b
 22758  034A  318B  2371  3180   	fcall	___fladd
 22759  034D  0140               	movlb	0	; select bank0
 22760  034E  082C               	movf	?___fladd+3,w
 22761  034F  0141               	movlb	1	; select bank1
 22762  0350  00CF               	movwf	(_HSLToRGB$4181+3)^(0+128)
 22763  0351  0140               	movlb	0	; select bank0
 22764  0352  082B               	movf	?___fladd+2,w
 22765  0353  0141               	movlb	1	; select bank1
 22766  0354  00CE               	movwf	(_HSLToRGB$4181+2)^(0+128)
 22767  0355  0140               	movlb	0	; select bank0
 22768  0356  082A               	movf	?___fladd+1,w
 22769  0357  0141               	movlb	1	; select bank1
 22770  0358  00CD               	movwf	(_HSLToRGB$4181+1)^(0+128)
 22771  0359  0140               	movlb	0	; select bank0
 22772  035A  0829               	movf	?___fladd,w
 22773  035B  0141               	movlb	1	; select bank1
 22774  035C  00CC               	movwf	_HSLToRGB$4181^(0+128)
 22775  035D                     l11623:	
 22776                           
 22777                           ;led.c: 348:   rgb.blue = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 22778  035D  084F               	movf	(_HSLToRGB$4181+3)^(0+128),w
 22779  035E  00AB               	movwf	(HueToRGB@vH+3)^(0+128)
 22780  035F  084E               	movf	(_HSLToRGB$4181+2)^(0+128),w
 22781  0360  00AA               	movwf	(HueToRGB@vH+2)^(0+128)
 22782  0361  084D               	movf	(_HSLToRGB$4181+1)^(0+128),w
 22783  0362  00A9               	movwf	(HueToRGB@vH+1)^(0+128)
 22784  0363  084C               	movf	_HSLToRGB$4181^(0+128),w
 22785  0364  00A8               	movwf	HueToRGB@vH^(0+128)
 22786  0365  085F               	movf	(HSLToRGB@v2+3)^(0+128),w
 22787  0366  00A7               	movwf	(HueToRGB@v2+3)^(0+128)
 22788  0367  085E               	movf	(HSLToRGB@v2+2)^(0+128),w
 22789  0368  00A6               	movwf	(HueToRGB@v2+2)^(0+128)
 22790  0369  085D               	movf	(HSLToRGB@v2+1)^(0+128),w
 22791  036A  00A5               	movwf	(HueToRGB@v2+1)^(0+128)
 22792  036B  085C               	movf	HSLToRGB@v2^(0+128),w
 22793  036C  00A4               	movwf	HueToRGB@v2^(0+128)
 22794  036D  0857               	movf	(HSLToRGB@v1+3)^(0+128),w
 22795  036E  00A3               	movwf	(HueToRGB@v1+3)^(0+128)
 22796  036F  0856               	movf	(HSLToRGB@v1+2)^(0+128),w
 22797  0370  00A2               	movwf	(HueToRGB@v1+2)^(0+128)
 22798  0371  0855               	movf	(HSLToRGB@v1+1)^(0+128),w
 22799  0372  00A1               	movwf	(HueToRGB@v1+1)^(0+128)
 22800  0373  0854               	movf	HSLToRGB@v1^(0+128),w
 22801  0374  00A0               	movwf	HueToRGB@v1^(0+128)
 22802  0375  3183  23BC  3180   	fcall	_HueToRGB
 22803  0378  0141               	movlb	1	; select bank1
 22804  0379  0823               	movf	(?_HueToRGB+3)^(0+128),w
 22805  037A  00D3               	movwf	(_HSLToRGB$4182+3)^(0+128)
 22806  037B  0822               	movf	(?_HueToRGB+2)^(0+128),w
 22807  037C  00D2               	movwf	(_HSLToRGB$4182+2)^(0+128)
 22808  037D  0821               	movf	(?_HueToRGB+1)^(0+128),w
 22809  037E  00D1               	movwf	(_HSLToRGB$4182+1)^(0+128)
 22810  037F  0820               	movf	?_HueToRGB^(0+128),w
 22811  0380  00D0               	movwf	_HSLToRGB$4182^(0+128)
 22812  0381                     l11625:	
 22813                           
 22814                           ;led.c: 348:   rgb.blue = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 22815  0381  0853               	movf	(_HSLToRGB$4182+3)^(0+128),w
 22816  0382  0140               	movlb	0	; select bank0
 22817  0383  00CF               	movwf	___flmul@a+3
 22818  0384  0141               	movlb	1	; select bank1
 22819  0385  0852               	movf	(_HSLToRGB$4182+2)^(0+128),w
 22820  0386  0140               	movlb	0	; select bank0
 22821  0387  00CE               	movwf	___flmul@a+2
 22822  0388  0141               	movlb	1	; select bank1
 22823  0389  0851               	movf	(_HSLToRGB$4182+1)^(0+128),w
 22824  038A  0140               	movlb	0	; select bank0
 22825  038B  00CD               	movwf	___flmul@a+1
 22826  038C  0141               	movlb	1	; select bank1
 22827  038D  0850               	movf	_HSLToRGB$4182^(0+128),w
 22828  038E  0140               	movlb	0	; select bank0
 22829  038F  00CC               	movwf	___flmul@a
 22830  0390  3043               	movlw	67
 22831  0391  00CB               	movwf	___flmul@b+3
 22832  0392  307F               	movlw	127
 22833  0393  00CA               	movwf	___flmul@b+2
 22834  0394  3000               	movlw	0
 22835  0395  00C9               	movwf	___flmul@b+1
 22836  0396  3000               	movlw	0
 22837  0397  00C8               	movwf	___flmul@b
 22838  0398  318D  25A9  3180   	fcall	___flmul
 22839  039B  0140               	movlb	0	; select bank0
 22840  039C  084B               	movf	?___flmul+3,w
 22841  039D  0141               	movlb	1	; select bank1
 22842  039E  00B3               	movwf	(___fltol@f1+3)^(0+128)
 22843  039F  0140               	movlb	0	; select bank0
 22844  03A0  084A               	movf	?___flmul+2,w
 22845  03A1  0141               	movlb	1	; select bank1
 22846  03A2  00B2               	movwf	(___fltol@f1+2)^(0+128)
 22847  03A3  0140               	movlb	0	; select bank0
 22848  03A4  0849               	movf	?___flmul+1,w
 22849  03A5  0141               	movlb	1	; select bank1
 22850  03A6  00B1               	movwf	(___fltol@f1+1)^(0+128)
 22851  03A7  0140               	movlb	0	; select bank0
 22852  03A8  0848               	movf	?___flmul,w
 22853  03A9  0141               	movlb	1	; select bank1
 22854  03AA  00B0               	movwf	___fltol@f1^(0+128)
 22855  03AB  31A7  2780  3180   	fcall	___fltol
 22856  03AE  0141               	movlb	1	; select bank1
 22857  03AF  0830               	movf	?___fltol^(0+128),w
 22858  03B0  00C3               	movwf	??_HSLToRGB^(0+128)
 22859  03B1  0843               	movf	??_HSLToRGB^(0+128),w
 22860  03B2  00E3               	movwf	(HSLToRGB@rgb^(0+128)+3)
 22861  03B3                     l11627:	
 22862                           
 22863                           ;led.c: 351:  return rgb;
 22864  03B3  0863               	movf	(HSLToRGB@rgb+3)^(0+128),w
 22865  03B4  00BC               	movwf	(?_HSLToRGB+3)^(0+128)
 22866  03B5  0862               	movf	(HSLToRGB@rgb+2)^(0+128),w
 22867  03B6  00BB               	movwf	(?_HSLToRGB+2)^(0+128)
 22868  03B7  0861               	movf	(HSLToRGB@rgb+1)^(0+128),w
 22869  03B8  00BA               	movwf	(?_HSLToRGB+1)^(0+128)
 22870  03B9  0860               	movf	HSLToRGB@rgb^(0+128),w
 22871  03BA  00B9               	movwf	?_HSLToRGB^(0+128)
 22872  03BB                     l1557:	
 22873  03BB  0008               	return
 22874  03BC                     __end_of_HSLToRGB:	
 22875                           
 22876                           	psect	text72
 22877  1A7A                     __ptext72:	
 22878 ;; *************** function ___xxtofl *****************
 22879 ;; Defined at:
 22880 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 22881 ;; Parameters:    Size  Location     Type
 22882 ;;  sign            1    wreg     unsigned char 
 22883 ;;  val             4    0[BANK0 ] long 
 22884 ;; Auto vars:     Size  Location     Type
 22885 ;;  sign            1    8[BANK0 ] unsigned char 
 22886 ;;  arg             4   10[BANK0 ] unsigned long 
 22887 ;;  exp             1    9[BANK0 ] unsigned char 
 22888 ;; Return value:  Size  Location     Type
 22889 ;;                  4    0[BANK0 ] unsigned char 
 22890 ;; Registers used:
 22891 ;;		wreg, status,2, status,0
 22892 ;; Tracked objects:
 22893 ;;		On entry : 0/0
 22894 ;;		On exit  : 0/0
 22895 ;;		Unchanged: 0/0
 22896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22898 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22899 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22900 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22901 ;;Total ram usage:       14 bytes
 22902 ;; Hardware stack levels used:    1
 22903 ;; Hardware stack levels required when called:    4
 22904 ;; This function calls:
 22905 ;;		Nothing
 22906 ;; This function is called by:
 22907 ;;		_LED_setColor
 22908 ;;		_beatBrightnessCalculation
 22909 ;;		_LED_task_ANIMATION
 22910 ;;		_HSLToRGB
 22911 ;; This function uses a non-reentrant model
 22912 ;;
 22913                           
 22914                           
 22915                           ;psect for function ___xxtofl
 22916  1A7A                     ___xxtofl:	
 22917                           
 22918                           ;incstack = 0
 22919                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 22920                           ;___xxtofl@sign stored from wreg
 22921  1A7A  0140               	movlb	0	; select bank0
 22922  1A7B  00A8               	movwf	___xxtofl@sign
 22923  1A7C                     l11325:	
 22924  1A7C  0828               	movf	___xxtofl@sign,w
 22925  1A7D  1903               	btfsc	3,2
 22926  1A7E  2A80               	goto	u12691
 22927  1A7F  2A81               	goto	u12690
 22928  1A80                     u12691:	
 22929  1A80  2A95               	goto	l11331
 22930  1A81                     u12690:	
 22931  1A81                     l11327:	
 22932  1A81  1FA3               	btfss	___xxtofl@val+3,7
 22933  1A82  2A84               	goto	u12701
 22934  1A83  2A85               	goto	u12700
 22935  1A84                     u12701:	
 22936  1A84  2A95               	goto	l11331
 22937  1A85                     u12700:	
 22938  1A85                     l11329:	
 22939  1A85  0920               	comf	___xxtofl@val,w
 22940  1A86  00AA               	movwf	___xxtofl@arg
 22941  1A87  0921               	comf	___xxtofl@val+1,w
 22942  1A88  00AB               	movwf	___xxtofl@arg+1
 22943  1A89  0922               	comf	___xxtofl@val+2,w
 22944  1A8A  00AC               	movwf	___xxtofl@arg+2
 22945  1A8B  0923               	comf	___xxtofl@val+3,w
 22946  1A8C  00AD               	movwf	___xxtofl@arg+3
 22947  1A8D  0AAA               	incf	___xxtofl@arg,f
 22948  1A8E  1903               	skipnz
 22949  1A8F  0AAB               	incf	___xxtofl@arg+1,f
 22950  1A90  1903               	skipnz
 22951  1A91  0AAC               	incf	___xxtofl@arg+2,f
 22952  1A92  1903               	skipnz
 22953  1A93  0AAD               	incf	___xxtofl@arg+3,f
 22954  1A94  2A9D               	goto	l2193
 22955  1A95                     l11331:	
 22956  1A95  0823               	movf	___xxtofl@val+3,w
 22957  1A96  00AD               	movwf	___xxtofl@arg+3
 22958  1A97  0822               	movf	___xxtofl@val+2,w
 22959  1A98  00AC               	movwf	___xxtofl@arg+2
 22960  1A99  0821               	movf	___xxtofl@val+1,w
 22961  1A9A  00AB               	movwf	___xxtofl@arg+1
 22962  1A9B  0820               	movf	___xxtofl@val,w
 22963  1A9C  00AA               	movwf	___xxtofl@arg
 22964  1A9D                     l2193:	
 22965  1A9D  0823               	movf	___xxtofl@val+3,w
 22966  1A9E  0422               	iorwf	___xxtofl@val+2,w
 22967  1A9F  0421               	iorwf	___xxtofl@val+1,w
 22968  1AA0  0420               	iorwf	___xxtofl@val,w
 22969  1AA1  1D03               	skipz
 22970  1AA2  2AA4               	goto	u12711
 22971  1AA3  2AA5               	goto	u12710
 22972  1AA4                     u12711:	
 22973  1AA4  2AAE               	goto	l11337
 22974  1AA5                     u12710:	
 22975  1AA5                     l11333:	
 22976  1AA5  3000               	movlw	0
 22977  1AA6  00A3               	movwf	?___xxtofl+3
 22978  1AA7  3000               	movlw	0
 22979  1AA8  00A2               	movwf	?___xxtofl+2
 22980  1AA9  3000               	movlw	0
 22981  1AAA  00A1               	movwf	?___xxtofl+1
 22982  1AAB  3000               	movlw	0
 22983  1AAC  00A0               	movwf	?___xxtofl
 22984  1AAD  2B26               	goto	l2195
 22985  1AAE                     l11337:	
 22986  1AAE  3096               	movlw	150
 22987  1AAF  00A4               	movwf	??___xxtofl
 22988  1AB0  0824               	movf	??___xxtofl,w
 22989  1AB1  00A9               	movwf	___xxtofl@exp
 22990  1AB2  2ABE               	goto	l11341
 22991  1AB3                     l11339:	
 22992  1AB3  3001               	movlw	1
 22993  1AB4  00A4               	movwf	??___xxtofl
 22994  1AB5  0824               	movf	??___xxtofl,w
 22995  1AB6  07A9               	addwf	___xxtofl@exp,f
 22996  1AB7  3001               	movlw	1
 22997  1AB8                     u12725:	
 22998  1AB8  36AD               	lsrf	___xxtofl@arg+3,f
 22999  1AB9  0CAC               	rrf	___xxtofl@arg+2,f
 23000  1ABA  0CAB               	rrf	___xxtofl@arg+1,f
 23001  1ABB  0CAA               	rrf	___xxtofl@arg,f
 23002  1ABC  0B89               	decfsz	9,f
 23003  1ABD  2AB8               	goto	u12725
 23004  1ABE                     l11341:	
 23005  1ABE  30FE               	movlw	254
 23006  1ABF  052D               	andwf	___xxtofl@arg+3,w
 23007  1AC0  1D03               	btfss	3,2
 23008  1AC1  2AC3               	goto	u12731
 23009  1AC2  2AC4               	goto	u12730
 23010  1AC3                     u12731:	
 23011  1AC3  2AB3               	goto	l11339
 23012  1AC4                     u12730:	
 23013  1AC4  2AD8               	goto	l2199
 23014  1AC5                     l11343:	
 23015  1AC5  3001               	movlw	1
 23016  1AC6  00A4               	movwf	??___xxtofl
 23017  1AC7  0824               	movf	??___xxtofl,w
 23018  1AC8  07A9               	addwf	___xxtofl@exp,f
 23019  1AC9                     l11345:	
 23020  1AC9  3001               	movlw	1
 23021  1ACA  07AA               	addwf	___xxtofl@arg,f
 23022  1ACB  3000               	movlw	0
 23023  1ACC  3DAB               	addwfc	___xxtofl@arg+1,f
 23024  1ACD  3000               	movlw	0
 23025  1ACE  3DAC               	addwfc	___xxtofl@arg+2,f
 23026  1ACF  3000               	movlw	0
 23027  1AD0  3DAD               	addwfc	___xxtofl@arg+3,f
 23028  1AD1                     l11347:	
 23029  1AD1  3001               	movlw	1
 23030  1AD2                     u12745:	
 23031  1AD2  36AD               	lsrf	___xxtofl@arg+3,f
 23032  1AD3  0CAC               	rrf	___xxtofl@arg+2,f
 23033  1AD4  0CAB               	rrf	___xxtofl@arg+1,f
 23034  1AD5  0CAA               	rrf	___xxtofl@arg,f
 23035  1AD6  0B89               	decfsz	9,f
 23036  1AD7  2AD2               	goto	u12745
 23037  1AD8                     l2199:	
 23038  1AD8  30FF               	movlw	255
 23039  1AD9  052D               	andwf	___xxtofl@arg+3,w
 23040  1ADA  1D03               	btfss	3,2
 23041  1ADB  2ADD               	goto	u12751
 23042  1ADC  2ADE               	goto	u12750
 23043  1ADD                     u12751:	
 23044  1ADD  2AC5               	goto	l11343
 23045  1ADE                     u12750:	
 23046  1ADE  2AE8               	goto	l11351
 23047  1ADF                     l11349:	
 23048  1ADF  3001               	movlw	1
 23049  1AE0  02A9               	subwf	___xxtofl@exp,f
 23050  1AE1  3001               	movlw	1
 23051  1AE2                     u12765:	
 23052  1AE2  35AA               	lslf	___xxtofl@arg,f
 23053  1AE3  0DAB               	rlf	___xxtofl@arg+1,f
 23054  1AE4  0DAC               	rlf	___xxtofl@arg+2,f
 23055  1AE5  0DAD               	rlf	___xxtofl@arg+3,f
 23056  1AE6  0B89               	decfsz	9,f
 23057  1AE7  2AE2               	goto	u12765
 23058  1AE8                     l11351:	
 23059  1AE8  1BAC               	btfsc	___xxtofl@arg+2,7
 23060  1AE9  2AEB               	goto	u12771
 23061  1AEA  2AEC               	goto	u12770
 23062  1AEB                     u12771:	
 23063  1AEB  2AF2               	goto	l2206
 23064  1AEC                     u12770:	
 23065  1AEC                     l11353:	
 23066  1AEC  3002               	movlw	2
 23067  1AED  0229               	subwf	___xxtofl@exp,w
 23068  1AEE  1803               	skipnc
 23069  1AEF  2AF1               	goto	u12781
 23070  1AF0  2AF2               	goto	u12780
 23071  1AF1                     u12781:	
 23072  1AF1  2ADF               	goto	l11349
 23073  1AF2                     u12780:	
 23074  1AF2                     l2206:	
 23075  1AF2  1829               	btfsc	___xxtofl@exp,0
 23076  1AF3  2AF5               	goto	u12791
 23077  1AF4  2AF6               	goto	u12790
 23078  1AF5                     u12791:	
 23079  1AF5  2AFE               	goto	l2207
 23080  1AF6                     u12790:	
 23081  1AF6                     l11355:	
 23082  1AF6  30FF               	movlw	255
 23083  1AF7  05AA               	andwf	___xxtofl@arg,f
 23084  1AF8  30FF               	movlw	255
 23085  1AF9  05AB               	andwf	___xxtofl@arg+1,f
 23086  1AFA  307F               	movlw	127
 23087  1AFB  05AC               	andwf	___xxtofl@arg+2,f
 23088  1AFC  30FF               	movlw	255
 23089  1AFD  05AD               	andwf	___xxtofl@arg+3,f
 23090  1AFE                     l2207:	
 23091  1AFE  1003               	clrc
 23092  1AFF  0CA9               	rrf	___xxtofl@exp,f
 23093  1B00                     l11357:	
 23094  1B00  0829               	movf	___xxtofl@exp,w
 23095  1B01  00A4               	movwf	??___xxtofl
 23096  1B02  01A5               	clrf	??___xxtofl+1
 23097  1B03  01A6               	clrf	??___xxtofl+2
 23098  1B04  01A7               	clrf	??___xxtofl+3
 23099  1B05  3018               	movlw	24
 23100  1B06                     u12805:	
 23101  1B06  35A4               	lslf	??___xxtofl,f
 23102  1B07  0DA5               	rlf	??___xxtofl+1,f
 23103  1B08  0DA6               	rlf	??___xxtofl+2,f
 23104  1B09  0DA7               	rlf	??___xxtofl+3,f
 23105  1B0A                     u12800:	
 23106  1B0A  0B89               	decfsz	9,f
 23107  1B0B  2B06               	goto	u12805
 23108  1B0C  0824               	movf	??___xxtofl,w
 23109  1B0D  04AA               	iorwf	___xxtofl@arg,f
 23110  1B0E  0825               	movf	??___xxtofl+1,w
 23111  1B0F  04AB               	iorwf	___xxtofl@arg+1,f
 23112  1B10  0826               	movf	??___xxtofl+2,w
 23113  1B11  04AC               	iorwf	___xxtofl@arg+2,f
 23114  1B12  0827               	movf	??___xxtofl+3,w
 23115  1B13  04AD               	iorwf	___xxtofl@arg+3,f
 23116  1B14                     l11359:	
 23117  1B14  0828               	movf	___xxtofl@sign,w
 23118  1B15  1903               	btfsc	3,2
 23119  1B16  2B18               	goto	u12811
 23120  1B17  2B19               	goto	u12810
 23121  1B18                     u12811:	
 23122  1B18  2B1E               	goto	l11365
 23123  1B19                     u12810:	
 23124  1B19                     l11361:	
 23125  1B19  1FA3               	btfss	___xxtofl@val+3,7
 23126  1B1A  2B1C               	goto	u12821
 23127  1B1B  2B1D               	goto	u12820
 23128  1B1C                     u12821:	
 23129  1B1C  2B1E               	goto	l11365
 23130  1B1D                     u12820:	
 23131  1B1D                     l11363:	
 23132  1B1D  17AD               	bsf	___xxtofl@arg+3,7
 23133  1B1E                     l11365:	
 23134  1B1E  082D               	movf	___xxtofl@arg+3,w
 23135  1B1F  00A3               	movwf	?___xxtofl+3
 23136  1B20  082C               	movf	___xxtofl@arg+2,w
 23137  1B21  00A2               	movwf	?___xxtofl+2
 23138  1B22  082B               	movf	___xxtofl@arg+1,w
 23139  1B23  00A1               	movwf	?___xxtofl+1
 23140  1B24  082A               	movf	___xxtofl@arg,w
 23141  1B25  00A0               	movwf	?___xxtofl
 23142  1B26                     l2195:	
 23143  1B26  0008               	return
 23144  1B27                     __end_of___xxtofl:	
 23145                           
 23146                           	psect	text73
 23147  2780                     __ptext73:	
 23148 ;; *************** function ___fltol *****************
 23149 ;; Defined at:
 23150 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;  f1              4   16[BANK1 ] unsigned char 
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;  exp1            1   79[BANK0 ] unsigned char 
 23155 ;;  sign1           1   78[BANK0 ] unsigned char 
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  4   16[BANK1 ] long 
 23158 ;; Registers used:
 23159 ;;		wreg, status,2, status,0
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23165 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23167 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23168 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23169 ;;Total ram usage:       11 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:    4
 23172 ;; This function calls:
 23173 ;;		Nothing
 23174 ;; This function is called by:
 23175 ;;		_LED_setColor
 23176 ;;		_beatColorCreator
 23177 ;;		_HSLToRGB
 23178 ;;		_beatBrightnessCalculation
 23179 ;; This function uses a non-reentrant model
 23180 ;;
 23181                           
 23182                           
 23183                           ;psect for function ___fltol
 23184  2780                     ___fltol:	
 23185  2780                     l11003:	
 23186                           ;incstack = 0
 23187                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 23188                           
 23189  2780  1003               	clrc
 23190  2781  0141               	movlb	1	; select bank1
 23191  2782  0D32               	rlf	(___fltol@f1+2)^(0+128),w
 23192  2783  0D33               	rlf	(___fltol@f1+3)^(0+128),w
 23193  2784  00B4               	movwf	??___fltol^(0+128)
 23194  2785  0834               	movf	??___fltol^(0+128),w
 23195  2786  0140               	movlb	0	; select bank0
 23196  2787  00EF               	movwf	___fltol@exp1
 23197  2788  086F               	movf	___fltol@exp1,w
 23198  2789  1D03               	btfss	3,2
 23199  278A  2F8C               	goto	u12041
 23200  278B  2F8D               	goto	u12040
 23201  278C                     u12041:	
 23202  278C  2F97               	goto	l11009
 23203  278D                     u12040:	
 23204  278D                     l11005:	
 23205  278D  3000               	movlw	0
 23206  278E  0141               	movlb	1	; select bank1
 23207  278F  00B3               	movwf	(?___fltol+3)^(0+128)
 23208  2790  3000               	movlw	0
 23209  2791  00B2               	movwf	(?___fltol+2)^(0+128)
 23210  2792  3000               	movlw	0
 23211  2793  00B1               	movwf	(?___fltol+1)^(0+128)
 23212  2794  3000               	movlw	0
 23213  2795  00B0               	movwf	?___fltol^(0+128)
 23214  2796  2FFF               	goto	l1952
 23215  2797                     l11009:	
 23216  2797  0141               	movlb	1	; select bank1
 23217  2798  0830               	movf	___fltol@f1^(0+128),w
 23218  2799  00B4               	movwf	??___fltol^(0+128)
 23219  279A  0831               	movf	(___fltol@f1+1)^(0+128),w
 23220  279B  00B5               	movwf	(??___fltol^(0+128)+1)
 23221  279C  0832               	movf	(___fltol@f1+2)^(0+128),w
 23222  279D  00B6               	movwf	(??___fltol^(0+128)+2)
 23223  279E  0833               	movf	(___fltol@f1+3)^(0+128),w
 23224  279F  00B7               	movwf	(??___fltol^(0+128)+3)
 23225  27A0  301F               	movlw	31
 23226  27A1                     u12055:	
 23227  27A1  36B7               	lsrf	(??___fltol^(0+128)+3),f
 23228  27A2  0CB6               	rrf	(??___fltol^(0+128)+2),f
 23229  27A3  0CB5               	rrf	(??___fltol^(0+128)+1),f
 23230  27A4  0CB4               	rrf	??___fltol^(0+128),f
 23231  27A5                     u12050:	
 23232  27A5  0B89               	decfsz	9,f
 23233  27A6  2FA1               	goto	u12055
 23234  27A7  0834               	movf	??___fltol^(0+128),w
 23235  27A8  00B8               	movwf	(??___fltol+4)^(0+128)
 23236  27A9  0838               	movf	(??___fltol+4)^(0+128),w
 23237  27AA  0140               	movlb	0	; select bank0
 23238  27AB  00EE               	movwf	___fltol@sign1
 23239  27AC                     l11011:	
 23240  27AC  0141               	movlb	1	; select bank1
 23241  27AD  17B2               	bsf	(___fltol@f1^(0+128)+2),7
 23242  27AE                     l11013:	
 23243  27AE  30FF               	movlw	255
 23244  27AF  05B0               	andwf	___fltol@f1^(0+128),f
 23245  27B0  30FF               	movlw	255
 23246  27B1  05B1               	andwf	(___fltol@f1+1)^(0+128),f
 23247  27B2  30FF               	movlw	255
 23248  27B3  05B2               	andwf	(___fltol@f1+2)^(0+128),f
 23249  27B4  3000               	movlw	0
 23250  27B5  05B3               	andwf	(___fltol@f1+3)^(0+128),f
 23251  27B6                     l11015:	
 23252  27B6  3096               	movlw	150
 23253  27B7  0140               	movlb	0	; select bank0
 23254  27B8  02EF               	subwf	___fltol@exp1,f
 23255  27B9                     l11017:	
 23256  27B9  1FEF               	btfss	___fltol@exp1,7
 23257  27BA  2FBC               	goto	u12061
 23258  27BB  2FBD               	goto	u12060
 23259  27BC                     u12061:	
 23260  27BC  2FD7               	goto	l11027
 23261  27BD                     u12060:	
 23262  27BD                     l11019:	
 23263  27BD  086F               	movf	___fltol@exp1,w
 23264  27BE  3A80               	xorlw	128
 23265  27BF  3E97               	addlw	151
 23266  27C0  1803               	skipnc
 23267  27C1  2FC3               	goto	u12071
 23268  27C2  2FC4               	goto	u12070
 23269  27C3                     u12071:	
 23270  27C3  2FC5               	goto	l11025
 23271  27C4                     u12070:	
 23272  27C4  2F8D               	goto	l11005
 23273  27C5                     l11025:	
 23274  27C5  3001               	movlw	1
 23275  27C6                     u12085:	
 23276  27C6  0141               	movlb	1	; select bank1
 23277  27C7  36B3               	lsrf	(___fltol@f1+3)^(0+128),f
 23278  27C8  0CB2               	rrf	(___fltol@f1+2)^(0+128),f
 23279  27C9  0CB1               	rrf	(___fltol@f1+1)^(0+128),f
 23280  27CA  0CB0               	rrf	___fltol@f1^(0+128),f
 23281  27CB  0B89               	decfsz	9,f
 23282  27CC  2FC6               	goto	u12085
 23283  27CD  3001               	movlw	1
 23284  27CE  00B4               	movwf	??___fltol^(0+128)
 23285  27CF  0834               	movf	??___fltol^(0+128),w
 23286  27D0  0140               	movlb	0	; select bank0
 23287  27D1  07EF               	addwf	___fltol@exp1,f
 23288  27D2  1D03               	btfss	3,2
 23289  27D3  2FD5               	goto	u12091
 23290  27D4  2FD6               	goto	u12090
 23291  27D5                     u12091:	
 23292  27D5  2FC5               	goto	l11025
 23293  27D6                     u12090:	
 23294  27D6  2FEE               	goto	l11035
 23295  27D7                     l11027:	
 23296  27D7  3020               	movlw	32
 23297  27D8  026F               	subwf	___fltol@exp1,w
 23298  27D9  1C03               	skipc
 23299  27DA  2FDC               	goto	u12101
 23300  27DB  2FDD               	goto	u12100
 23301  27DC                     u12101:	
 23302  27DC  2FE9               	goto	l1959
 23303  27DD                     u12100:	
 23304  27DD  2F8D               	goto	l11005
 23305  27DE                     l11033:	
 23306  27DE  3001               	movlw	1
 23307  27DF                     u12115:	
 23308  27DF  0141               	movlb	1	; select bank1
 23309  27E0  35B0               	lslf	___fltol@f1^(0+128),f
 23310  27E1  0DB1               	rlf	(___fltol@f1+1)^(0+128),f
 23311  27E2  0DB2               	rlf	(___fltol@f1+2)^(0+128),f
 23312  27E3  0DB3               	rlf	(___fltol@f1+3)^(0+128),f
 23313  27E4  0B89               	decfsz	9,f
 23314  27E5  2FDF               	goto	u12115
 23315  27E6  3001               	movlw	1
 23316  27E7  0140               	movlb	0	; select bank0
 23317  27E8  02EF               	subwf	___fltol@exp1,f
 23318  27E9                     l1959:	
 23319  27E9  086F               	movf	___fltol@exp1,w
 23320  27EA  1D03               	btfss	3,2
 23321  27EB  2FED               	goto	u12121
 23322  27EC  2FEE               	goto	u12120
 23323  27ED                     u12121:	
 23324  27ED  2FDE               	goto	l11033
 23325  27EE                     u12120:	
 23326  27EE                     l11035:	
 23327  27EE  086E               	movf	___fltol@sign1,w
 23328  27EF  1903               	btfsc	3,2
 23329  27F0  2FF2               	goto	u12131
 23330  27F1  2FF3               	goto	u12130
 23331  27F2                     u12131:	
 23332  27F2  2FFF               	goto	l1962
 23333  27F3                     u12130:	
 23334  27F3                     l11037:	
 23335  27F3  0141               	movlb	1	; select bank1
 23336  27F4  09B0               	comf	___fltol@f1^(0+128),f
 23337  27F5  09B1               	comf	(___fltol@f1+1)^(0+128),f
 23338  27F6  09B2               	comf	(___fltol@f1+2)^(0+128),f
 23339  27F7  09B3               	comf	(___fltol@f1+3)^(0+128),f
 23340  27F8  0AB0               	incf	___fltol@f1^(0+128),f
 23341  27F9  1903               	skipnz
 23342  27FA  0AB1               	incf	(___fltol@f1+1)^(0+128),f
 23343  27FB  1903               	skipnz
 23344  27FC  0AB2               	incf	(___fltol@f1+2)^(0+128),f
 23345  27FD  1903               	skipnz
 23346  27FE  0AB3               	incf	(___fltol@f1+3)^(0+128),f
 23347  27FF                     l1962:	
 23348  27FF                     l1952:	
 23349  27FF  0008               	return
 23350  2800                     __end_of___fltol:	
 23351                           
 23352                           	psect	text74
 23353  2420                     __ptext74:	
 23354 ;; *************** function ___fleq *****************
 23355 ;; Defined at:
 23356 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 23357 ;; Parameters:    Size  Location     Type
 23358 ;;  ff1             4    0[BANK0 ] long 
 23359 ;;  ff2             4    4[BANK0 ] long 
 23360 ;; Auto vars:     Size  Location     Type
 23361 ;;		None
 23362 ;; Return value:  Size  Location     Type
 23363 ;;		None               void
 23364 ;; Registers used:
 23365 ;;		wreg, status,2, status,0
 23366 ;; Tracked objects:
 23367 ;;		On entry : 0/0
 23368 ;;		On exit  : 0/0
 23369 ;;		Unchanged: 0/0
 23370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23371 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23373 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23374 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23375 ;;Total ram usage:       12 bytes
 23376 ;; Hardware stack levels used:    1
 23377 ;; Hardware stack levels required when called:    4
 23378 ;; This function calls:
 23379 ;;		Nothing
 23380 ;; This function is called by:
 23381 ;;		_HSLToRGB
 23382 ;; This function uses a non-reentrant model
 23383 ;;
 23384                           
 23385                           
 23386                           ;psect for function ___fleq
 23387  2420                     ___fleq:	
 23388  2420                     l11471:	
 23389                           ;incstack = 0
 23390                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 23391                           
 23392  2420  3000               	movlw	0
 23393  2421  0140               	movlb	0	; select bank0
 23394  2422  0520               	andwf	___fleq@ff1,w
 23395  2423  00A8               	movwf	??___fleq
 23396  2424  3000               	movlw	0
 23397  2425  0521               	andwf	___fleq@ff1+1,w
 23398  2426  00A9               	movwf	??___fleq+1
 23399  2427  3080               	movlw	128
 23400  2428  0522               	andwf	___fleq@ff1+2,w
 23401  2429  00AA               	movwf	??___fleq+2
 23402  242A  307F               	movlw	127
 23403  242B  0523               	andwf	___fleq@ff1+3,w
 23404  242C  00AB               	movwf	??___fleq+3
 23405  242D  082B               	movf	??___fleq+3,w
 23406  242E  042A               	iorwf	??___fleq+2,w
 23407  242F  0429               	iorwf	??___fleq+1,w
 23408  2430  0428               	iorwf	??___fleq,w
 23409  2431  1D03               	skipz
 23410  2432  2C34               	goto	u13011
 23411  2433  2C35               	goto	u13010
 23412  2434                     u13011:	
 23413  2434  2C3D               	goto	l1927
 23414  2435                     u13010:	
 23415  2435                     l11473:	
 23416  2435  3000               	movlw	0
 23417  2436  00A3               	movwf	___fleq@ff1+3
 23418  2437  3000               	movlw	0
 23419  2438  00A2               	movwf	___fleq@ff1+2
 23420  2439  3000               	movlw	0
 23421  243A  00A1               	movwf	___fleq@ff1+1
 23422  243B  3000               	movlw	0
 23423  243C  00A0               	movwf	___fleq@ff1
 23424  243D                     l1927:	
 23425  243D  3000               	movlw	0
 23426  243E  0524               	andwf	___fleq@ff2,w
 23427  243F  00A8               	movwf	??___fleq
 23428  2440  3000               	movlw	0
 23429  2441  0525               	andwf	___fleq@ff2+1,w
 23430  2442  00A9               	movwf	??___fleq+1
 23431  2443  3080               	movlw	128
 23432  2444  0526               	andwf	___fleq@ff2+2,w
 23433  2445  00AA               	movwf	??___fleq+2
 23434  2446  307F               	movlw	127
 23435  2447  0527               	andwf	___fleq@ff2+3,w
 23436  2448  00AB               	movwf	??___fleq+3
 23437  2449  082B               	movf	??___fleq+3,w
 23438  244A  042A               	iorwf	??___fleq+2,w
 23439  244B  0429               	iorwf	??___fleq+1,w
 23440  244C  0428               	iorwf	??___fleq,w
 23441  244D  1D03               	skipz
 23442  244E  2C50               	goto	u13021
 23443  244F  2C51               	goto	u13020
 23444  2450                     u13021:	
 23445  2450  2C59               	goto	l1928
 23446  2451                     u13020:	
 23447  2451                     l11475:	
 23448  2451  3000               	movlw	0
 23449  2452  00A7               	movwf	___fleq@ff2+3
 23450  2453  3000               	movlw	0
 23451  2454  00A6               	movwf	___fleq@ff2+2
 23452  2455  3000               	movlw	0
 23453  2456  00A5               	movwf	___fleq@ff2+1
 23454  2457  3000               	movlw	0
 23455  2458  00A4               	movwf	___fleq@ff2
 23456  2459                     l1928:	
 23457  2459  0827               	movf	___fleq@ff2+3,w
 23458  245A  0623               	xorwf	___fleq@ff1+3,w
 23459  245B  1D03               	skipz
 23460  245C  2C67               	goto	u13035
 23461  245D  0826               	movf	___fleq@ff2+2,w
 23462  245E  0622               	xorwf	___fleq@ff1+2,w
 23463  245F  1D03               	skipz
 23464  2460  2C67               	goto	u13035
 23465  2461  0825               	movf	___fleq@ff2+1,w
 23466  2462  0621               	xorwf	___fleq@ff1+1,w
 23467  2463  1D03               	skipz
 23468  2464  2C67               	goto	u13035
 23469  2465  0824               	movf	___fleq@ff2,w
 23470  2466  0620               	xorwf	___fleq@ff1,w
 23471  2467                     u13035:	
 23472  2467  1903               	skipnz
 23473  2468  2C6A               	goto	u13031
 23474  2469  2C6B               	goto	u13030
 23475  246A                     u13031:	
 23476  246A  2C6D               	goto	l11479
 23477  246B                     u13030:	
 23478  246B                     l11477:	
 23479  246B  1003               	clrc
 23480  246C  2C6E               	goto	l1933
 23481  246D                     l11479:	
 23482  246D  1403               	setc
 23483  246E                     l1933:	
 23484  246E  0008               	return
 23485  246F                     __end_of___fleq:	
 23486                           
 23487                           	psect	text75
 23488  063B                     __ptext75:	
 23489 ;; *************** function ___fldiv *****************
 23490 ;; Defined at:
 23491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;  a               4   14[BANK0 ] long 
 23494 ;;  b               4   18[BANK0 ] long 
 23495 ;; Auto vars:     Size  Location     Type
 23496 ;;  grs             4   34[BANK0 ] unsigned long 
 23497 ;;  rem             4   27[BANK0 ] unsigned long 
 23498 ;;  new_exp         2   32[BANK0 ] int 
 23499 ;;  aexp            1   39[BANK0 ] unsigned char 
 23500 ;;  bexp            1   38[BANK0 ] unsigned char 
 23501 ;;  sign            1   31[BANK0 ] unsigned char 
 23502 ;; Return value:  Size  Location     Type
 23503 ;;                  4   14[BANK0 ] unsigned char 
 23504 ;; Registers used:
 23505 ;;		wreg, status,2, status,0
 23506 ;; Tracked objects:
 23507 ;;		On entry : 0/0
 23508 ;;		On exit  : 0/0
 23509 ;;		Unchanged: 0/0
 23510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23511 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23512 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23513 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23514 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23515 ;;Total ram usage:       26 bytes
 23516 ;; Hardware stack levels used:    1
 23517 ;; Hardware stack levels required when called:    4
 23518 ;; This function calls:
 23519 ;;		Nothing
 23520 ;; This function is called by:
 23521 ;;		_LED_setColor
 23522 ;;		_HSLToRGB
 23523 ;;		_beatBrightnessCalculation
 23524 ;; This function uses a non-reentrant model
 23525 ;;
 23526                           
 23527                           
 23528                           ;psect for function ___fldiv
 23529  063B                     ___fldiv:	
 23530  063B                     l11045:	
 23531                           ;incstack = 0
 23532                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 23533                           
 23534  063B  0140               	movlb	0	; select bank0
 23535  063C  0835               	movf	___fldiv@b+3,w
 23536  063D  3980               	andlw	128
 23537  063E  00B6               	movwf	??___fldiv
 23538  063F  0836               	movf	??___fldiv,w
 23539  0640  00BF               	movwf	___fldiv@sign
 23540  0641                     l11047:	
 23541  0641  3535               	lslf	___fldiv@b+3,w
 23542  0642  00B6               	movwf	??___fldiv
 23543  0643  0836               	movf	??___fldiv,w
 23544  0644  00C6               	movwf	___fldiv@bexp
 23545  0645                     l11049:	
 23546  0645  1FB4               	btfss	___fldiv@b+2,7
 23547  0646  2E48               	goto	u12141
 23548  0647  2E49               	goto	u12140
 23549  0648                     u12141:	
 23550  0648  2E4A               	goto	l11053
 23551  0649                     u12140:	
 23552  0649                     l11051:	
 23553  0649  1446               	bsf	___fldiv@bexp,0
 23554  064A                     l11053:	
 23555  064A  0846               	movf	___fldiv@bexp,w
 23556  064B  1903               	btfsc	3,2
 23557  064C  2E4E               	goto	u12151
 23558  064D  2E4F               	goto	u12150
 23559  064E                     u12151:	
 23560  064E  2E5F               	goto	l11063
 23561  064F                     u12150:	
 23562  064F                     l11055:	
 23563  064F  0A46               	incf	___fldiv@bexp,w
 23564  0650  1D03               	btfss	3,2
 23565  0651  2E53               	goto	u12161
 23566  0652  2E54               	goto	u12160
 23567  0653                     u12161:	
 23568  0653  2E5C               	goto	l11059
 23569  0654                     u12160:	
 23570  0654                     l11057:	
 23571  0654  3000               	movlw	0
 23572  0655  00B5               	movwf	___fldiv@b+3
 23573  0656  3000               	movlw	0
 23574  0657  00B4               	movwf	___fldiv@b+2
 23575  0658  3000               	movlw	0
 23576  0659  00B3               	movwf	___fldiv@b+1
 23577  065A  3000               	movlw	0
 23578  065B  00B2               	movwf	___fldiv@b
 23579  065C                     l11059:	
 23580  065C  17B4               	bsf	___fldiv@b+2,7
 23581  065D                     l11061:	
 23582  065D  01B5               	clrf	___fldiv@b+3
 23583  065E  2E67               	goto	l11065
 23584  065F                     l11063:	
 23585  065F  3000               	movlw	0
 23586  0660  00B5               	movwf	___fldiv@b+3
 23587  0661  3000               	movlw	0
 23588  0662  00B4               	movwf	___fldiv@b+2
 23589  0663  3000               	movlw	0
 23590  0664  00B3               	movwf	___fldiv@b+1
 23591  0665  3000               	movlw	0
 23592  0666  00B2               	movwf	___fldiv@b
 23593  0667                     l11065:	
 23594  0667  0831               	movf	___fldiv@a+3,w
 23595  0668  3980               	andlw	128
 23596  0669  00B6               	movwf	??___fldiv
 23597  066A  0836               	movf	??___fldiv,w
 23598  066B  06BF               	xorwf	___fldiv@sign,f
 23599  066C                     l11067:	
 23600  066C  3531               	lslf	___fldiv@a+3,w
 23601  066D  00B6               	movwf	??___fldiv
 23602  066E  0836               	movf	??___fldiv,w
 23603  066F  00C7               	movwf	___fldiv@aexp
 23604  0670                     l11069:	
 23605  0670  1FB0               	btfss	___fldiv@a+2,7
 23606  0671  2E73               	goto	u12171
 23607  0672  2E74               	goto	u12170
 23608  0673                     u12171:	
 23609  0673  2E75               	goto	l11073
 23610  0674                     u12170:	
 23611  0674                     l11071:	
 23612  0674  1447               	bsf	___fldiv@aexp,0
 23613  0675                     l11073:	
 23614  0675  0847               	movf	___fldiv@aexp,w
 23615  0676  1903               	btfsc	3,2
 23616  0677  2E79               	goto	u12181
 23617  0678  2E7A               	goto	u12180
 23618  0679                     u12181:	
 23619  0679  2E8A               	goto	l11083
 23620  067A                     u12180:	
 23621  067A                     l11075:	
 23622  067A  0A47               	incf	___fldiv@aexp,w
 23623  067B  1D03               	btfss	3,2
 23624  067C  2E7E               	goto	u12191
 23625  067D  2E7F               	goto	u12190
 23626  067E                     u12191:	
 23627  067E  2E87               	goto	l11079
 23628  067F                     u12190:	
 23629  067F                     l11077:	
 23630  067F  3000               	movlw	0
 23631  0680  00B1               	movwf	___fldiv@a+3
 23632  0681  3000               	movlw	0
 23633  0682  00B0               	movwf	___fldiv@a+2
 23634  0683  3000               	movlw	0
 23635  0684  00AF               	movwf	___fldiv@a+1
 23636  0685  3000               	movlw	0
 23637  0686  00AE               	movwf	___fldiv@a
 23638  0687                     l11079:	
 23639  0687  17B0               	bsf	___fldiv@a+2,7
 23640  0688                     l11081:	
 23641  0688  01B1               	clrf	___fldiv@a+3
 23642  0689  2E92               	goto	l2115
 23643  068A                     l11083:	
 23644  068A  3000               	movlw	0
 23645  068B  00B1               	movwf	___fldiv@a+3
 23646  068C  3000               	movlw	0
 23647  068D  00B0               	movwf	___fldiv@a+2
 23648  068E  3000               	movlw	0
 23649  068F  00AF               	movwf	___fldiv@a+1
 23650  0690  3000               	movlw	0
 23651  0691  00AE               	movwf	___fldiv@a
 23652  0692                     l2115:	
 23653  0692  0831               	movf	___fldiv@a+3,w
 23654  0693  0430               	iorwf	___fldiv@a+2,w
 23655  0694  042F               	iorwf	___fldiv@a+1,w
 23656  0695  042E               	iorwf	___fldiv@a,w
 23657  0696  1D03               	skipz
 23658  0697  2E99               	goto	u12201
 23659  0698  2E9A               	goto	u12200
 23660  0699                     u12201:	
 23661  0699  2EB3               	goto	l11093
 23662  069A                     u12200:	
 23663  069A                     l11085:	
 23664  069A  3000               	movlw	0
 23665  069B  00B5               	movwf	___fldiv@b+3
 23666  069C  3000               	movlw	0
 23667  069D  00B4               	movwf	___fldiv@b+2
 23668  069E  3000               	movlw	0
 23669  069F  00B3               	movwf	___fldiv@b+1
 23670  06A0  3000               	movlw	0
 23671  06A1  00B2               	movwf	___fldiv@b
 23672  06A2  3080               	movlw	128
 23673  06A3  04B4               	iorwf	___fldiv@b+2,f
 23674  06A4  307F               	movlw	127
 23675  06A5  04B5               	iorwf	___fldiv@b+3,f
 23676  06A6                     l11087:	
 23677  06A6  083F               	movf	___fldiv@sign,w
 23678  06A7  00B6               	movwf	??___fldiv
 23679  06A8  0836               	movf	??___fldiv,w
 23680  06A9  04B5               	iorwf	___fldiv@b+3,f
 23681  06AA                     l11089:	
 23682  06AA  0835               	movf	___fldiv@b+3,w
 23683  06AB  00B1               	movwf	?___fldiv+3
 23684  06AC  0834               	movf	___fldiv@b+2,w
 23685  06AD  00B0               	movwf	?___fldiv+2
 23686  06AE  0833               	movf	___fldiv@b+1,w
 23687  06AF  00AF               	movwf	?___fldiv+1
 23688  06B0  0832               	movf	___fldiv@b,w
 23689  06B1  00AE               	movwf	?___fldiv
 23690  06B2  2FEE               	goto	l2117
 23691  06B3                     l11093:	
 23692  06B3  0846               	movf	___fldiv@bexp,w
 23693  06B4  1D03               	btfss	3,2
 23694  06B5  2EB7               	goto	u12211
 23695  06B6  2EB8               	goto	u12210
 23696  06B7                     u12211:	
 23697  06B7  2EC1               	goto	l11099
 23698  06B8                     u12210:	
 23699  06B8                     l11095:	
 23700  06B8  3000               	movlw	0
 23701  06B9  00B1               	movwf	?___fldiv+3
 23702  06BA  3000               	movlw	0
 23703  06BB  00B0               	movwf	?___fldiv+2
 23704  06BC  3000               	movlw	0
 23705  06BD  00AF               	movwf	?___fldiv+1
 23706  06BE  3000               	movlw	0
 23707  06BF  00AE               	movwf	?___fldiv
 23708  06C0  2FEE               	goto	l2117
 23709  06C1                     l11099:	
 23710  06C1  0846               	movf	___fldiv@bexp,w
 23711  06C2  00B6               	movwf	??___fldiv
 23712  06C3  01B7               	clrf	??___fldiv+1
 23713  06C4  0837               	movf	??___fldiv+1,w
 23714  06C5  00B9               	movwf	??___fldiv+3
 23715  06C6  0847               	movf	___fldiv@aexp,w
 23716  06C7  0236               	subwf	??___fldiv,w
 23717  06C8  00B8               	movwf	??___fldiv+2
 23718  06C9  1C03               	skipc
 23719  06CA  03B9               	decf	??___fldiv+3,f
 23720  06CB  0838               	movf	??___fldiv+2,w
 23721  06CC  3E7F               	addlw	127
 23722  06CD  00C0               	movwf	___fldiv@new_exp
 23723  06CE  3000               	movlw	0
 23724  06CF  3D39               	addwfc	??___fldiv+3,w
 23725  06D0  00C1               	movwf	___fldiv@new_exp+1
 23726  06D1                     l11101:	
 23727  06D1  0835               	movf	___fldiv@b+3,w
 23728  06D2  00BE               	movwf	___fldiv@rem+3
 23729  06D3  0834               	movf	___fldiv@b+2,w
 23730  06D4  00BD               	movwf	___fldiv@rem+2
 23731  06D5  0833               	movf	___fldiv@b+1,w
 23732  06D6  00BC               	movwf	___fldiv@rem+1
 23733  06D7  0832               	movf	___fldiv@b,w
 23734  06D8  00BB               	movwf	___fldiv@rem
 23735  06D9                     l11103:	
 23736  06D9  3000               	movlw	0
 23737  06DA  00B5               	movwf	___fldiv@b+3
 23738  06DB  3000               	movlw	0
 23739  06DC  00B4               	movwf	___fldiv@b+2
 23740  06DD  3000               	movlw	0
 23741  06DE  00B3               	movwf	___fldiv@b+1
 23742  06DF  3000               	movlw	0
 23743  06E0  00B2               	movwf	___fldiv@b
 23744  06E1                     l11105:	
 23745  06E1  3000               	movlw	0
 23746  06E2  00C5               	movwf	___fldiv@grs+3
 23747  06E3  3000               	movlw	0
 23748  06E4  00C4               	movwf	___fldiv@grs+2
 23749  06E5  3000               	movlw	0
 23750  06E6  00C3               	movwf	___fldiv@grs+1
 23751  06E7  3000               	movlw	0
 23752  06E8  00C2               	movwf	___fldiv@grs
 23753  06E9                     l11107:	
 23754  06E9  01C7               	clrf	___fldiv@aexp
 23755  06EA  2F29               	goto	l11127
 23756  06EB                     l11109:	
 23757  06EB  0847               	movf	___fldiv@aexp,w
 23758  06EC  1903               	btfsc	3,2
 23759  06ED  2EEF               	goto	u12221
 23760  06EE  2EF0               	goto	u12220
 23761  06EF                     u12221:	
 23762  06EF  2F0A               	goto	l11119
 23763  06F0                     u12220:	
 23764  06F0                     l11111:	
 23765  06F0  3001               	movlw	1
 23766  06F1                     u12235:	
 23767  06F1  35BB               	lslf	___fldiv@rem,f
 23768  06F2  0DBC               	rlf	___fldiv@rem+1,f
 23769  06F3  0DBD               	rlf	___fldiv@rem+2,f
 23770  06F4  0DBE               	rlf	___fldiv@rem+3,f
 23771  06F5  0B89               	decfsz	9,f
 23772  06F6  2EF1               	goto	u12235
 23773  06F7  3001               	movlw	1
 23774  06F8                     u12245:	
 23775  06F8  35B2               	lslf	___fldiv@b,f
 23776  06F9  0DB3               	rlf	___fldiv@b+1,f
 23777  06FA  0DB4               	rlf	___fldiv@b+2,f
 23778  06FB  0DB5               	rlf	___fldiv@b+3,f
 23779  06FC  0B89               	decfsz	9,f
 23780  06FD  2EF8               	goto	u12245
 23781  06FE                     l11113:	
 23782  06FE  1FC5               	btfss	___fldiv@grs+3,7
 23783  06FF  2F01               	goto	u12251
 23784  0700  2F02               	goto	u12250
 23785  0701                     u12251:	
 23786  0701  2F03               	goto	l11117
 23787  0702                     u12250:	
 23788  0702                     l11115:	
 23789  0702  1432               	bsf	___fldiv@b,0
 23790  0703                     l11117:	
 23791  0703  3001               	movlw	1
 23792  0704                     u12265:	
 23793  0704  35C2               	lslf	___fldiv@grs,f
 23794  0705  0DC3               	rlf	___fldiv@grs+1,f
 23795  0706  0DC4               	rlf	___fldiv@grs+2,f
 23796  0707  0DC5               	rlf	___fldiv@grs+3,f
 23797  0708  0B89               	decfsz	9,f
 23798  0709  2F04               	goto	u12265
 23799  070A                     l11119:	
 23800  070A  0831               	movf	___fldiv@a+3,w
 23801  070B  023E               	subwf	___fldiv@rem+3,w
 23802  070C  1D03               	skipz
 23803  070D  2F18               	goto	u12275
 23804  070E  0830               	movf	___fldiv@a+2,w
 23805  070F  023D               	subwf	___fldiv@rem+2,w
 23806  0710  1D03               	skipz
 23807  0711  2F18               	goto	u12275
 23808  0712  082F               	movf	___fldiv@a+1,w
 23809  0713  023C               	subwf	___fldiv@rem+1,w
 23810  0714  1D03               	skipz
 23811  0715  2F18               	goto	u12275
 23812  0716  082E               	movf	___fldiv@a,w
 23813  0717  023B               	subwf	___fldiv@rem,w
 23814  0718                     u12275:	
 23815  0718  1C03               	skipc
 23816  0719  2F1B               	goto	u12271
 23817  071A  2F1C               	goto	u12270
 23818  071B                     u12271:	
 23819  071B  2F25               	goto	l11125
 23820  071C                     u12270:	
 23821  071C                     l11121:	
 23822  071C  1745               	bsf	___fldiv@grs+3,6
 23823  071D                     l11123:	
 23824  071D  082E               	movf	___fldiv@a,w
 23825  071E  02BB               	subwf	___fldiv@rem,f
 23826  071F  082F               	movf	___fldiv@a+1,w
 23827  0720  3BBC               	subwfb	___fldiv@rem+1,f
 23828  0721  0830               	movf	___fldiv@a+2,w
 23829  0722  3BBD               	subwfb	___fldiv@rem+2,f
 23830  0723  0831               	movf	___fldiv@a+3,w
 23831  0724  3BBE               	subwfb	___fldiv@rem+3,f
 23832  0725                     l11125:	
 23833  0725  3001               	movlw	1
 23834  0726  00B6               	movwf	??___fldiv
 23835  0727  0836               	movf	??___fldiv,w
 23836  0728  07C7               	addwf	___fldiv@aexp,f
 23837  0729                     l11127:	
 23838  0729  301A               	movlw	26
 23839  072A  0247               	subwf	___fldiv@aexp,w
 23840  072B  1C03               	skipc
 23841  072C  2F2E               	goto	u12281
 23842  072D  2F2F               	goto	u12280
 23843  072E                     u12281:	
 23844  072E  2EEB               	goto	l11109
 23845  072F                     u12280:	
 23846  072F                     l11129:	
 23847  072F  083E               	movf	___fldiv@rem+3,w
 23848  0730  043D               	iorwf	___fldiv@rem+2,w
 23849  0731  043C               	iorwf	___fldiv@rem+1,w
 23850  0732  043B               	iorwf	___fldiv@rem,w
 23851  0733  1903               	skipnz
 23852  0734  2F36               	goto	u12291
 23853  0735  2F37               	goto	u12290
 23854  0736                     u12291:	
 23855  0736  2F50               	goto	l11143
 23856  0737                     u12290:	
 23857  0737                     l11131:	
 23858  0737  1442               	bsf	___fldiv@grs,0
 23859  0738  2F50               	goto	l11143
 23860  0739                     l11133:	
 23861  0739  3001               	movlw	1
 23862  073A                     u12305:	
 23863  073A  35B2               	lslf	___fldiv@b,f
 23864  073B  0DB3               	rlf	___fldiv@b+1,f
 23865  073C  0DB4               	rlf	___fldiv@b+2,f
 23866  073D  0DB5               	rlf	___fldiv@b+3,f
 23867  073E  0B89               	decfsz	9,f
 23868  073F  2F3A               	goto	u12305
 23869  0740                     l11135:	
 23870  0740  1FC5               	btfss	___fldiv@grs+3,7
 23871  0741  2F43               	goto	u12311
 23872  0742  2F44               	goto	u12310
 23873  0743                     u12311:	
 23874  0743  2F45               	goto	l11139
 23875  0744                     u12310:	
 23876  0744                     l11137:	
 23877  0744  1432               	bsf	___fldiv@b,0
 23878  0745                     l11139:	
 23879  0745  3001               	movlw	1
 23880  0746                     u12325:	
 23881  0746  35C2               	lslf	___fldiv@grs,f
 23882  0747  0DC3               	rlf	___fldiv@grs+1,f
 23883  0748  0DC4               	rlf	___fldiv@grs+2,f
 23884  0749  0DC5               	rlf	___fldiv@grs+3,f
 23885  074A  0B89               	decfsz	9,f
 23886  074B  2F46               	goto	u12325
 23887  074C                     l11141:	
 23888  074C  30FF               	movlw	255
 23889  074D  07C0               	addwf	___fldiv@new_exp,f
 23890  074E  30FF               	movlw	255
 23891  074F  3DC1               	addwfc	___fldiv@new_exp+1,f
 23892  0750                     l11143:	
 23893  0750  1FB4               	btfss	___fldiv@b+2,7
 23894  0751  2F53               	goto	u12331
 23895  0752  2F54               	goto	u12330
 23896  0753                     u12331:	
 23897  0753  2F39               	goto	l11133
 23898  0754                     u12330:	
 23899  0754                     l11145:	
 23900  0754  01C7               	clrf	___fldiv@aexp
 23901  0755                     l11147:	
 23902  0755  1FC5               	btfss	___fldiv@grs+3,7
 23903  0756  2F58               	goto	u12341
 23904  0757  2F59               	goto	u12340
 23905  0758                     u12341:	
 23906  0758  2F75               	goto	l11155
 23907  0759                     u12340:	
 23908  0759                     l11149:	
 23909  0759  30FF               	movlw	255
 23910  075A  0542               	andwf	___fldiv@grs,w
 23911  075B  00B6               	movwf	??___fldiv
 23912  075C  30FF               	movlw	255
 23913  075D  0543               	andwf	___fldiv@grs+1,w
 23914  075E  00B7               	movwf	??___fldiv+1
 23915  075F  30FF               	movlw	255
 23916  0760  0544               	andwf	___fldiv@grs+2,w
 23917  0761  00B8               	movwf	??___fldiv+2
 23918  0762  307F               	movlw	127
 23919  0763  0545               	andwf	___fldiv@grs+3,w
 23920  0764  00B9               	movwf	??___fldiv+3
 23921  0765  0839               	movf	??___fldiv+3,w
 23922  0766  0438               	iorwf	??___fldiv+2,w
 23923  0767  0437               	iorwf	??___fldiv+1,w
 23924  0768  0436               	iorwf	??___fldiv,w
 23925  0769  1903               	skipnz
 23926  076A  2F6C               	goto	u12351
 23927  076B  2F6D               	goto	u12350
 23928  076C                     u12351:	
 23929  076C  2F70               	goto	l2131
 23930  076D                     u12350:	
 23931  076D                     l11151:	
 23932  076D  01C7               	clrf	___fldiv@aexp
 23933  076E  0AC7               	incf	___fldiv@aexp,f
 23934  076F  2F75               	goto	l11155
 23935  0770                     l2131:	
 23936  0770  1C32               	btfss	___fldiv@b,0
 23937  0771  2F73               	goto	u12361
 23938  0772  2F74               	goto	u12360
 23939  0773                     u12361:	
 23940  0773  2F75               	goto	l11155
 23941  0774                     u12360:	
 23942  0774  2F6D               	goto	l11151
 23943  0775                     l11155:	
 23944  0775  0847               	movf	___fldiv@aexp,w
 23945  0776  1903               	btfsc	3,2
 23946  0777  2F79               	goto	u12371
 23947  0778  2F7A               	goto	u12370
 23948  0779                     u12371:	
 23949  0779  2FA2               	goto	l11165
 23950  077A                     u12370:	
 23951  077A                     l11157:	
 23952  077A  3001               	movlw	1
 23953  077B  07B2               	addwf	___fldiv@b,f
 23954  077C  3000               	movlw	0
 23955  077D  3DB3               	addwfc	___fldiv@b+1,f
 23956  077E  3000               	movlw	0
 23957  077F  3DB4               	addwfc	___fldiv@b+2,f
 23958  0780  3000               	movlw	0
 23959  0781  3DB5               	addwfc	___fldiv@b+3,f
 23960  0782                     l11159:	
 23961  0782  1C35               	btfss	___fldiv@b+3,0
 23962  0783  2F85               	goto	u12381
 23963  0784  2F86               	goto	u12380
 23964  0785                     u12381:	
 23965  0785  2FA2               	goto	l11165
 23966  0786                     u12380:	
 23967  0786                     l11161:	
 23968  0786  0832               	movf	___fldiv@b,w
 23969  0787  00B6               	movwf	??___fldiv
 23970  0788  0833               	movf	___fldiv@b+1,w
 23971  0789  00B7               	movwf	??___fldiv+1
 23972  078A  0834               	movf	___fldiv@b+2,w
 23973  078B  00B8               	movwf	??___fldiv+2
 23974  078C  0835               	movf	___fldiv@b+3,w
 23975  078D  00B9               	movwf	??___fldiv+3
 23976  078E  3001               	movlw	1
 23977  078F  00BA               	movwf	??___fldiv+4
 23978  0790                     u12395:	
 23979  0790  37B9               	asrf	??___fldiv+3,f
 23980  0791  0CB8               	rrf	??___fldiv+2,f
 23981  0792  0CB7               	rrf	??___fldiv+1,f
 23982  0793  0CB6               	rrf	??___fldiv,f
 23983  0794                     u12390:	
 23984  0794  0BBA               	decfsz	??___fldiv+4,f
 23985  0795  2F90               	goto	u12395
 23986  0796  0839               	movf	??___fldiv+3,w
 23987  0797  00B5               	movwf	___fldiv@b+3
 23988  0798  0838               	movf	??___fldiv+2,w
 23989  0799  00B4               	movwf	___fldiv@b+2
 23990  079A  0837               	movf	??___fldiv+1,w
 23991  079B  00B3               	movwf	___fldiv@b+1
 23992  079C  0836               	movf	??___fldiv,w
 23993  079D  00B2               	movwf	___fldiv@b
 23994  079E                     l11163:	
 23995  079E  3001               	movlw	1
 23996  079F  07C0               	addwf	___fldiv@new_exp,f
 23997  07A0  3000               	movlw	0
 23998  07A1  3DC1               	addwfc	___fldiv@new_exp+1,f
 23999  07A2                     l11165:	
 24000  07A2  0841               	movf	___fldiv@new_exp+1,w
 24001  07A3  3A80               	xorlw	128
 24002  07A4  00B6               	movwf	??___fldiv
 24003  07A5  3080               	movlw	128
 24004  07A6  0236               	subwf	??___fldiv,w
 24005  07A7  1D03               	skipz
 24006  07A8  2FAB               	goto	u12405
 24007  07A9  30FF               	movlw	255
 24008  07AA  0240               	subwf	___fldiv@new_exp,w
 24009  07AB                     u12405:	
 24010  07AB  1C03               	skipc
 24011  07AC  2FAE               	goto	u12401
 24012  07AD  2FAF               	goto	u12400
 24013  07AE                     u12401:	
 24014  07AE  2FBC               	goto	l2136
 24015  07AF                     u12400:	
 24016  07AF                     l11167:	
 24017  07AF  30FF               	movlw	255
 24018  07B0  0140               	movlb	0	; select bank0
 24019  07B1  00C0               	movwf	___fldiv@new_exp
 24020  07B2  3000               	movlw	0
 24021  07B3  00C1               	movwf	___fldiv@new_exp+1
 24022  07B4  3000               	movlw	0
 24023  07B5  00B5               	movwf	___fldiv@b+3
 24024  07B6  3000               	movlw	0
 24025  07B7  00B4               	movwf	___fldiv@b+2
 24026  07B8  3000               	movlw	0
 24027  07B9  00B3               	movwf	___fldiv@b+1
 24028  07BA  3000               	movlw	0
 24029  07BB  00B2               	movwf	___fldiv@b
 24030  07BC                     l2136:	
 24031  07BC  0140               	movlb	0	; select bank0
 24032  07BD  0841               	movf	___fldiv@new_exp+1,w
 24033  07BE  3A80               	xorlw	128
 24034  07BF  00B6               	movwf	??___fldiv
 24035  07C0  3080               	movlw	128
 24036  07C1  0236               	subwf	??___fldiv,w
 24037  07C2  1D03               	skipz
 24038  07C3  2FC6               	goto	u12415
 24039  07C4  3001               	movlw	1
 24040  07C5  0240               	subwf	___fldiv@new_exp,w
 24041  07C6                     u12415:	
 24042  07C6  1803               	skipnc
 24043  07C7  2FC9               	goto	u12411
 24044  07C8  2FCA               	goto	u12410
 24045  07C9                     u12411:	
 24046  07C9  2FD6               	goto	l2137
 24047  07CA                     u12410:	
 24048  07CA                     l11169:	
 24049  07CA  0140               	movlb	0	; select bank0
 24050  07CB  01C0               	clrf	___fldiv@new_exp
 24051  07CC  01C1               	clrf	___fldiv@new_exp+1
 24052  07CD                     l11171:	
 24053  07CD  3000               	movlw	0
 24054  07CE  00B5               	movwf	___fldiv@b+3
 24055  07CF  3000               	movlw	0
 24056  07D0  00B4               	movwf	___fldiv@b+2
 24057  07D1  3000               	movlw	0
 24058  07D2  00B3               	movwf	___fldiv@b+1
 24059  07D3  3000               	movlw	0
 24060  07D4  00B2               	movwf	___fldiv@b
 24061  07D5                     l11173:	
 24062  07D5  01BF               	clrf	___fldiv@sign
 24063  07D6                     l2137:	
 24064  07D6  0140               	movlb	0	; select bank0
 24065  07D7  0840               	movf	___fldiv@new_exp,w
 24066  07D8  00B6               	movwf	??___fldiv
 24067  07D9  0836               	movf	??___fldiv,w
 24068  07DA  00C6               	movwf	___fldiv@bexp
 24069  07DB                     l11175:	
 24070  07DB  1C46               	btfss	___fldiv@bexp,0
 24071  07DC  2FDE               	goto	u12421
 24072  07DD  2FDF               	goto	u12420
 24073  07DE                     u12421:	
 24074  07DE  2FE1               	goto	l11179
 24075  07DF                     u12420:	
 24076  07DF                     l11177:	
 24077  07DF  17B4               	bsf	___fldiv@b+2,7
 24078  07E0  2FE5               	goto	l2139
 24079  07E1                     l11179:	
 24080  07E1  307F               	movlw	127
 24081  07E2  00B6               	movwf	??___fldiv
 24082  07E3  0836               	movf	??___fldiv,w
 24083  07E4  05B4               	andwf	___fldiv@b+2,f
 24084  07E5                     l2139:	
 24085  07E5  3646               	lsrf	___fldiv@bexp,w
 24086  07E6  00B6               	movwf	??___fldiv
 24087  07E7  0836               	movf	??___fldiv,w
 24088  07E8  00B5               	movwf	___fldiv@b+3
 24089  07E9  083F               	movf	___fldiv@sign,w
 24090  07EA  00B6               	movwf	??___fldiv
 24091  07EB  0836               	movf	??___fldiv,w
 24092  07EC  04B5               	iorwf	___fldiv@b+3,f
 24093  07ED  2EAA               	goto	l11089
 24094  07EE                     l2117:	
 24095  07EE  0008               	return
 24096  07EF                     __end_of___fldiv:	
 24097                           
 24098                           	psect	text76
 24099  03BC                     __ptext76:	
 24100 ;; *************** function _HueToRGB *****************
 24101 ;; Defined at:
 24102 ;;		line 310 in file "led.c"
 24103 ;; Parameters:    Size  Location     Type
 24104 ;;  v1              4    0[BANK1 ] float 
 24105 ;;  v2              4    4[BANK1 ] float 
 24106 ;;  vH              4    8[BANK1 ] float 
 24107 ;; Auto vars:     Size  Location     Type
 24108 ;;		None
 24109 ;; Return value:  Size  Location     Type
 24110 ;;                  4    0[BANK1 ] float 
 24111 ;; Registers used:
 24112 ;;		wreg, status,2, status,0, pclath, cstack
 24113 ;; Tracked objects:
 24114 ;;		On entry : 0/0
 24115 ;;		On exit  : 0/0
 24116 ;;		Unchanged: 0/0
 24117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24118 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24119 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24121 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24122 ;;Total ram usage:       16 bytes
 24123 ;; Hardware stack levels used:    1
 24124 ;; Hardware stack levels required when called:    6
 24125 ;; This function calls:
 24126 ;;		___fladd
 24127 ;;		___flge
 24128 ;;		___flmul
 24129 ;;		___flsub
 24130 ;; This function is called by:
 24131 ;;		_HSLToRGB
 24132 ;; This function uses a non-reentrant model
 24133 ;;
 24134                           
 24135                           
 24136                           ;psect for function _HueToRGB
 24137  03BC                     _HueToRGB:	
 24138  03BC                     l11437:	
 24139                           ;incstack = 0
 24140                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 24141                           
 24142                           
 24143                           ;led.c: 310: float HueToRGB(float v1, float v2, float vH);led.c: 311: {;led.c: 312:  if 
      +                          (vH < 0)
 24144  03BC  0141               	movlb	1	; select bank1
 24145  03BD  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24146  03BE  0140               	movlb	0	; select bank0
 24147  03BF  00E5               	movwf	___flge@ff1+3
 24148  03C0  0141               	movlb	1	; select bank1
 24149  03C1  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24150  03C2  0140               	movlb	0	; select bank0
 24151  03C3  00E4               	movwf	___flge@ff1+2
 24152  03C4  0141               	movlb	1	; select bank1
 24153  03C5  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24154  03C6  0140               	movlb	0	; select bank0
 24155  03C7  00E3               	movwf	___flge@ff1+1
 24156  03C8  0141               	movlb	1	; select bank1
 24157  03C9  0828               	movf	HueToRGB@vH^(0+128),w
 24158  03CA  0140               	movlb	0	; select bank0
 24159  03CB  00E2               	movwf	___flge@ff1
 24160  03CC  3000               	movlw	0
 24161  03CD  00E9               	movwf	___flge@ff2+3
 24162  03CE  3000               	movlw	0
 24163  03CF  00E8               	movwf	___flge@ff2+2
 24164  03D0  3000               	movlw	0
 24165  03D1  00E7               	movwf	___flge@ff2+1
 24166  03D2  3000               	movlw	0
 24167  03D3  00E6               	movwf	___flge@ff2
 24168  03D4  3198  20BB  3183   	fcall	___flge
 24169  03D7  1803               	btfsc	3,0
 24170  03D8  2BDA               	goto	u12951
 24171  03D9  2BDB               	goto	u12950
 24172  03DA                     u12951:	
 24173  03DA  2C07               	goto	l1543
 24174  03DB                     u12950:	
 24175  03DB                     l11439:	
 24176                           
 24177                           ;led.c: 313:   vH += 1;
 24178  03DB  303F               	movlw	63
 24179  03DC  0140               	movlb	0	; select bank0
 24180  03DD  00AC               	movwf	___fladd@b+3
 24181  03DE  3080               	movlw	128
 24182  03DF  00AB               	movwf	___fladd@b+2
 24183  03E0  3000               	movlw	0
 24184  03E1  00AA               	movwf	___fladd@b+1
 24185  03E2  3000               	movlw	0
 24186  03E3  00A9               	movwf	___fladd@b
 24187  03E4  0141               	movlb	1	; select bank1
 24188  03E5  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24189  03E6  0140               	movlb	0	; select bank0
 24190  03E7  00B0               	movwf	___fladd@a+3
 24191  03E8  0141               	movlb	1	; select bank1
 24192  03E9  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24193  03EA  0140               	movlb	0	; select bank0
 24194  03EB  00AF               	movwf	___fladd@a+2
 24195  03EC  0141               	movlb	1	; select bank1
 24196  03ED  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24197  03EE  0140               	movlb	0	; select bank0
 24198  03EF  00AE               	movwf	___fladd@a+1
 24199  03F0  0141               	movlb	1	; select bank1
 24200  03F1  0828               	movf	HueToRGB@vH^(0+128),w
 24201  03F2  0140               	movlb	0	; select bank0
 24202  03F3  00AD               	movwf	___fladd@a
 24203  03F4  318B  2371  3183   	fcall	___fladd
 24204  03F7  0140               	movlb	0	; select bank0
 24205  03F8  082C               	movf	?___fladd+3,w
 24206  03F9  0141               	movlb	1	; select bank1
 24207  03FA  00AB               	movwf	(HueToRGB@vH+3)^(0+128)
 24208  03FB  0140               	movlb	0	; select bank0
 24209  03FC  082B               	movf	?___fladd+2,w
 24210  03FD  0141               	movlb	1	; select bank1
 24211  03FE  00AA               	movwf	(HueToRGB@vH+2)^(0+128)
 24212  03FF  0140               	movlb	0	; select bank0
 24213  0400  082A               	movf	?___fladd+1,w
 24214  0401  0141               	movlb	1	; select bank1
 24215  0402  00A9               	movwf	(HueToRGB@vH+1)^(0+128)
 24216  0403  0140               	movlb	0	; select bank0
 24217  0404  0829               	movf	?___fladd,w
 24218  0405  0141               	movlb	1	; select bank1
 24219  0406  00A8               	movwf	HueToRGB@vH^(0+128)
 24220  0407                     l1543:	
 24221                           
 24222                           ;led.c: 315:  if (vH > 1)
 24223  0407  303F               	movlw	63
 24224  0408  0140               	movlb	0	; select bank0
 24225  0409  00E5               	movwf	___flge@ff1+3
 24226  040A  3080               	movlw	128
 24227  040B  00E4               	movwf	___flge@ff1+2
 24228  040C  3000               	movlw	0
 24229  040D  00E3               	movwf	___flge@ff1+1
 24230  040E  3000               	movlw	0
 24231  040F  00E2               	movwf	___flge@ff1
 24232  0410  0141               	movlb	1	; select bank1
 24233  0411  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24234  0412  0140               	movlb	0	; select bank0
 24235  0413  00E9               	movwf	___flge@ff2+3
 24236  0414  0141               	movlb	1	; select bank1
 24237  0415  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24238  0416  0140               	movlb	0	; select bank0
 24239  0417  00E8               	movwf	___flge@ff2+2
 24240  0418  0141               	movlb	1	; select bank1
 24241  0419  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24242  041A  0140               	movlb	0	; select bank0
 24243  041B  00E7               	movwf	___flge@ff2+1
 24244  041C  0141               	movlb	1	; select bank1
 24245  041D  0828               	movf	HueToRGB@vH^(0+128),w
 24246  041E  0140               	movlb	0	; select bank0
 24247  041F  00E6               	movwf	___flge@ff2
 24248  0420  3198  20BB  3183   	fcall	___flge
 24249  0423  1803               	btfsc	3,0
 24250  0424  2C26               	goto	u12961
 24251  0425  2C27               	goto	u12960
 24252  0426                     u12961:	
 24253  0426  2C53               	goto	l1544
 24254  0427                     u12960:	
 24255  0427                     l11441:	
 24256                           
 24257                           ;led.c: 316:   vH -= 1;
 24258  0427  303F               	movlw	63
 24259  0428  0140               	movlb	0	; select bank0
 24260  0429  00E5               	movwf	___flsub@a+3
 24261  042A  3080               	movlw	128
 24262  042B  00E4               	movwf	___flsub@a+2
 24263  042C  3000               	movlw	0
 24264  042D  00E3               	movwf	___flsub@a+1
 24265  042E  3000               	movlw	0
 24266  042F  00E2               	movwf	___flsub@a
 24267  0430  0141               	movlb	1	; select bank1
 24268  0431  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24269  0432  0140               	movlb	0	; select bank0
 24270  0433  00E9               	movwf	___flsub@b+3
 24271  0434  0141               	movlb	1	; select bank1
 24272  0435  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24273  0436  0140               	movlb	0	; select bank0
 24274  0437  00E8               	movwf	___flsub@b+2
 24275  0438  0141               	movlb	1	; select bank1
 24276  0439  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24277  043A  0140               	movlb	0	; select bank0
 24278  043B  00E7               	movwf	___flsub@b+1
 24279  043C  0141               	movlb	1	; select bank1
 24280  043D  0828               	movf	HueToRGB@vH^(0+128),w
 24281  043E  0140               	movlb	0	; select bank0
 24282  043F  00E6               	movwf	___flsub@b
 24283  0440  31A0  2000  3183   	fcall	___flsub
 24284  0443  0140               	movlb	0	; select bank0
 24285  0444  0865               	movf	?___flsub+3,w
 24286  0445  0141               	movlb	1	; select bank1
 24287  0446  00AB               	movwf	(HueToRGB@vH+3)^(0+128)
 24288  0447  0140               	movlb	0	; select bank0
 24289  0448  0864               	movf	?___flsub+2,w
 24290  0449  0141               	movlb	1	; select bank1
 24291  044A  00AA               	movwf	(HueToRGB@vH+2)^(0+128)
 24292  044B  0140               	movlb	0	; select bank0
 24293  044C  0863               	movf	?___flsub+1,w
 24294  044D  0141               	movlb	1	; select bank1
 24295  044E  00A9               	movwf	(HueToRGB@vH+1)^(0+128)
 24296  044F  0140               	movlb	0	; select bank0
 24297  0450  0862               	movf	?___flsub,w
 24298  0451  0141               	movlb	1	; select bank1
 24299  0452  00A8               	movwf	HueToRGB@vH^(0+128)
 24300  0453                     l1544:	
 24301                           
 24302                           ;led.c: 318:  if ((6 * vH) < 1)
 24303  0453  3040               	movlw	64
 24304  0454  0140               	movlb	0	; select bank0
 24305  0455  00CB               	movwf	___flmul@b+3
 24306  0456  30C0               	movlw	192
 24307  0457  00CA               	movwf	___flmul@b+2
 24308  0458  3000               	movlw	0
 24309  0459  00C9               	movwf	___flmul@b+1
 24310  045A  3000               	movlw	0
 24311  045B  00C8               	movwf	___flmul@b
 24312  045C  0141               	movlb	1	; select bank1
 24313  045D  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24314  045E  0140               	movlb	0	; select bank0
 24315  045F  00CF               	movwf	___flmul@a+3
 24316  0460  0141               	movlb	1	; select bank1
 24317  0461  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24318  0462  0140               	movlb	0	; select bank0
 24319  0463  00CE               	movwf	___flmul@a+2
 24320  0464  0141               	movlb	1	; select bank1
 24321  0465  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24322  0466  0140               	movlb	0	; select bank0
 24323  0467  00CD               	movwf	___flmul@a+1
 24324  0468  0141               	movlb	1	; select bank1
 24325  0469  0828               	movf	HueToRGB@vH^(0+128),w
 24326  046A  0140               	movlb	0	; select bank0
 24327  046B  00CC               	movwf	___flmul@a
 24328  046C  318D  25A9  3183   	fcall	___flmul
 24329  046F  0140               	movlb	0	; select bank0
 24330  0470  084B               	movf	?___flmul+3,w
 24331  0471  00E5               	movwf	___flge@ff1+3
 24332  0472  084A               	movf	?___flmul+2,w
 24333  0473  00E4               	movwf	___flge@ff1+2
 24334  0474  0849               	movf	?___flmul+1,w
 24335  0475  00E3               	movwf	___flge@ff1+1
 24336  0476  0848               	movf	?___flmul,w
 24337  0477  00E2               	movwf	___flge@ff1
 24338  0478  303F               	movlw	63
 24339  0479  00E9               	movwf	___flge@ff2+3
 24340  047A  3080               	movlw	128
 24341  047B  00E8               	movwf	___flge@ff2+2
 24342  047C  3000               	movlw	0
 24343  047D  00E7               	movwf	___flge@ff2+1
 24344  047E  3000               	movlw	0
 24345  047F  00E6               	movwf	___flge@ff2
 24346  0480  3198  20BB  3183   	fcall	___flge
 24347  0483  1803               	btfsc	3,0
 24348  0484  2C86               	goto	u12971
 24349  0485  2C87               	goto	u12970
 24350  0486                     u12971:	
 24351  0486  2D1E               	goto	l11447
 24352  0487                     u12970:	
 24353  0487                     l11443:	
 24354                           
 24355                           ;led.c: 319:   return (v1 + (v2 - v1) * 6 * vH);
 24356  0487  3040               	movlw	64
 24357  0488  0140               	movlb	0	; select bank0
 24358  0489  00CB               	movwf	___flmul@b+3
 24359  048A  30C0               	movlw	192
 24360  048B  00CA               	movwf	___flmul@b+2
 24361  048C  3000               	movlw	0
 24362  048D  00C9               	movwf	___flmul@b+1
 24363  048E  3000               	movlw	0
 24364  048F  00C8               	movwf	___flmul@b
 24365  0490  0141               	movlb	1	; select bank1
 24366  0491  0823               	movf	(HueToRGB@v1+3)^(0+128),w
 24367  0492  0140               	movlb	0	; select bank0
 24368  0493  00E5               	movwf	___flsub@a+3
 24369  0494  0141               	movlb	1	; select bank1
 24370  0495  0822               	movf	(HueToRGB@v1+2)^(0+128),w
 24371  0496  0140               	movlb	0	; select bank0
 24372  0497  00E4               	movwf	___flsub@a+2
 24373  0498  0141               	movlb	1	; select bank1
 24374  0499  0821               	movf	(HueToRGB@v1+1)^(0+128),w
 24375  049A  0140               	movlb	0	; select bank0
 24376  049B  00E3               	movwf	___flsub@a+1
 24377  049C  0141               	movlb	1	; select bank1
 24378  049D  0820               	movf	HueToRGB@v1^(0+128),w
 24379  049E  0140               	movlb	0	; select bank0
 24380  049F  00E2               	movwf	___flsub@a
 24381  04A0  0141               	movlb	1	; select bank1
 24382  04A1  0827               	movf	(HueToRGB@v2+3)^(0+128),w
 24383  04A2  0140               	movlb	0	; select bank0
 24384  04A3  00E9               	movwf	___flsub@b+3
 24385  04A4  0141               	movlb	1	; select bank1
 24386  04A5  0826               	movf	(HueToRGB@v2+2)^(0+128),w
 24387  04A6  0140               	movlb	0	; select bank0
 24388  04A7  00E8               	movwf	___flsub@b+2
 24389  04A8  0141               	movlb	1	; select bank1
 24390  04A9  0825               	movf	(HueToRGB@v2+1)^(0+128),w
 24391  04AA  0140               	movlb	0	; select bank0
 24392  04AB  00E7               	movwf	___flsub@b+1
 24393  04AC  0141               	movlb	1	; select bank1
 24394  04AD  0824               	movf	HueToRGB@v2^(0+128),w
 24395  04AE  0140               	movlb	0	; select bank0
 24396  04AF  00E6               	movwf	___flsub@b
 24397  04B0  31A0  2000  3183   	fcall	___flsub
 24398  04B3  0140               	movlb	0	; select bank0
 24399  04B4  0865               	movf	?___flsub+3,w
 24400  04B5  00CF               	movwf	___flmul@a+3
 24401  04B6  0864               	movf	?___flsub+2,w
 24402  04B7  00CE               	movwf	___flmul@a+2
 24403  04B8  0863               	movf	?___flsub+1,w
 24404  04B9  00CD               	movwf	___flmul@a+1
 24405  04BA  0862               	movf	?___flsub,w
 24406  04BB  00CC               	movwf	___flmul@a
 24407  04BC  318D  25A9  3183   	fcall	___flmul
 24408  04BF  0140               	movlb	0	; select bank0
 24409  04C0  084B               	movf	?___flmul+3,w
 24410  04C1  0141               	movlb	1	; select bank1
 24411  04C2  00AF               	movwf	(_HueToRGB$4179+3)^(0+128)
 24412  04C3  0140               	movlb	0	; select bank0
 24413  04C4  084A               	movf	?___flmul+2,w
 24414  04C5  0141               	movlb	1	; select bank1
 24415  04C6  00AE               	movwf	(_HueToRGB$4179+2)^(0+128)
 24416  04C7  0140               	movlb	0	; select bank0
 24417  04C8  0849               	movf	?___flmul+1,w
 24418  04C9  0141               	movlb	1	; select bank1
 24419  04CA  00AD               	movwf	(_HueToRGB$4179+1)^(0+128)
 24420  04CB  0140               	movlb	0	; select bank0
 24421  04CC  0848               	movf	?___flmul,w
 24422  04CD  0141               	movlb	1	; select bank1
 24423  04CE  00AC               	movwf	_HueToRGB$4179^(0+128)
 24424                           
 24425                           ;led.c: 319:   return (v1 + (v2 - v1) * 6 * vH);
 24426  04CF  0823               	movf	(HueToRGB@v1+3)^(0+128),w
 24427  04D0  0140               	movlb	0	; select bank0
 24428  04D1  00AC               	movwf	___fladd@b+3
 24429  04D2  0141               	movlb	1	; select bank1
 24430  04D3  0822               	movf	(HueToRGB@v1+2)^(0+128),w
 24431  04D4  0140               	movlb	0	; select bank0
 24432  04D5  00AB               	movwf	___fladd@b+2
 24433  04D6  0141               	movlb	1	; select bank1
 24434  04D7  0821               	movf	(HueToRGB@v1+1)^(0+128),w
 24435  04D8  0140               	movlb	0	; select bank0
 24436  04D9  00AA               	movwf	___fladd@b+1
 24437  04DA  0141               	movlb	1	; select bank1
 24438  04DB  0820               	movf	HueToRGB@v1^(0+128),w
 24439  04DC  0140               	movlb	0	; select bank0
 24440  04DD  00A9               	movwf	___fladd@b
 24441  04DE  0141               	movlb	1	; select bank1
 24442  04DF  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24443  04E0  0140               	movlb	0	; select bank0
 24444  04E1  00CB               	movwf	___flmul@b+3
 24445  04E2  0141               	movlb	1	; select bank1
 24446  04E3  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24447  04E4  0140               	movlb	0	; select bank0
 24448  04E5  00CA               	movwf	___flmul@b+2
 24449  04E6  0141               	movlb	1	; select bank1
 24450  04E7  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24451  04E8  0140               	movlb	0	; select bank0
 24452  04E9  00C9               	movwf	___flmul@b+1
 24453  04EA  0141               	movlb	1	; select bank1
 24454  04EB  0828               	movf	HueToRGB@vH^(0+128),w
 24455  04EC  0140               	movlb	0	; select bank0
 24456  04ED  00C8               	movwf	___flmul@b
 24457  04EE  0141               	movlb	1	; select bank1
 24458  04EF  082F               	movf	(_HueToRGB$4179+3)^(0+128),w
 24459  04F0  0140               	movlb	0	; select bank0
 24460  04F1  00CF               	movwf	___flmul@a+3
 24461  04F2  0141               	movlb	1	; select bank1
 24462  04F3  082E               	movf	(_HueToRGB$4179+2)^(0+128),w
 24463  04F4  0140               	movlb	0	; select bank0
 24464  04F5  00CE               	movwf	___flmul@a+2
 24465  04F6  0141               	movlb	1	; select bank1
 24466  04F7  082D               	movf	(_HueToRGB$4179+1)^(0+128),w
 24467  04F8  0140               	movlb	0	; select bank0
 24468  04F9  00CD               	movwf	___flmul@a+1
 24469  04FA  0141               	movlb	1	; select bank1
 24470  04FB  082C               	movf	_HueToRGB$4179^(0+128),w
 24471  04FC  0140               	movlb	0	; select bank0
 24472  04FD  00CC               	movwf	___flmul@a
 24473  04FE  318D  25A9  3183   	fcall	___flmul
 24474  0501  0140               	movlb	0	; select bank0
 24475  0502  084B               	movf	?___flmul+3,w
 24476  0503  00B0               	movwf	___fladd@a+3
 24477  0504  084A               	movf	?___flmul+2,w
 24478  0505  00AF               	movwf	___fladd@a+2
 24479  0506  0849               	movf	?___flmul+1,w
 24480  0507  00AE               	movwf	___fladd@a+1
 24481  0508  0848               	movf	?___flmul,w
 24482  0509  00AD               	movwf	___fladd@a
 24483  050A  318B  2371  3183   	fcall	___fladd
 24484  050D  0140               	movlb	0	; select bank0
 24485  050E  082C               	movf	?___fladd+3,w
 24486  050F  0141               	movlb	1	; select bank1
 24487  0510  00A3               	movwf	(?_HueToRGB+3)^(0+128)
 24488  0511  0140               	movlb	0	; select bank0
 24489  0512  082B               	movf	?___fladd+2,w
 24490  0513  0141               	movlb	1	; select bank1
 24491  0514  00A2               	movwf	(?_HueToRGB+2)^(0+128)
 24492  0515  0140               	movlb	0	; select bank0
 24493  0516  082A               	movf	?___fladd+1,w
 24494  0517  0141               	movlb	1	; select bank1
 24495  0518  00A1               	movwf	(?_HueToRGB+1)^(0+128)
 24496  0519  0140               	movlb	0	; select bank0
 24497  051A  0829               	movf	?___fladd,w
 24498  051B  0141               	movlb	1	; select bank1
 24499  051C  00A0               	movwf	?_HueToRGB^(0+128)
 24500  051D  2E3A               	goto	l1546
 24501  051E                     l11447:	
 24502                           
 24503                           ;led.c: 321:  if ((2 * vH) < 1)
 24504  051E  3040               	movlw	64
 24505  051F  0140               	movlb	0	; select bank0
 24506  0520  00CB               	movwf	___flmul@b+3
 24507  0521  3000               	movlw	0
 24508  0522  00CA               	movwf	___flmul@b+2
 24509  0523  3000               	movlw	0
 24510  0524  00C9               	movwf	___flmul@b+1
 24511  0525  3000               	movlw	0
 24512  0526  00C8               	movwf	___flmul@b
 24513  0527  0141               	movlb	1	; select bank1
 24514  0528  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24515  0529  0140               	movlb	0	; select bank0
 24516  052A  00CF               	movwf	___flmul@a+3
 24517  052B  0141               	movlb	1	; select bank1
 24518  052C  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24519  052D  0140               	movlb	0	; select bank0
 24520  052E  00CE               	movwf	___flmul@a+2
 24521  052F  0141               	movlb	1	; select bank1
 24522  0530  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24523  0531  0140               	movlb	0	; select bank0
 24524  0532  00CD               	movwf	___flmul@a+1
 24525  0533  0141               	movlb	1	; select bank1
 24526  0534  0828               	movf	HueToRGB@vH^(0+128),w
 24527  0535  0140               	movlb	0	; select bank0
 24528  0536  00CC               	movwf	___flmul@a
 24529  0537  318D  25A9  3183   	fcall	___flmul
 24530  053A  0140               	movlb	0	; select bank0
 24531  053B  084B               	movf	?___flmul+3,w
 24532  053C  00E5               	movwf	___flge@ff1+3
 24533  053D  084A               	movf	?___flmul+2,w
 24534  053E  00E4               	movwf	___flge@ff1+2
 24535  053F  0849               	movf	?___flmul+1,w
 24536  0540  00E3               	movwf	___flge@ff1+1
 24537  0541  0848               	movf	?___flmul,w
 24538  0542  00E2               	movwf	___flge@ff1
 24539  0543  303F               	movlw	63
 24540  0544  00E9               	movwf	___flge@ff2+3
 24541  0545  3080               	movlw	128
 24542  0546  00E8               	movwf	___flge@ff2+2
 24543  0547  3000               	movlw	0
 24544  0548  00E7               	movwf	___flge@ff2+1
 24545  0549  3000               	movlw	0
 24546  054A  00E6               	movwf	___flge@ff2
 24547  054B  3198  20BB  3183   	fcall	___flge
 24548  054E  1803               	btfsc	3,0
 24549  054F  2D51               	goto	u12981
 24550  0550  2D52               	goto	u12980
 24551  0551                     u12981:	
 24552  0551  2D5C               	goto	l11453
 24553  0552                     u12980:	
 24554  0552                     l11449:	
 24555                           
 24556                           ;led.c: 322:   return v2;
 24557  0552  0141               	movlb	1	; select bank1
 24558  0553  0827               	movf	(HueToRGB@v2+3)^(0+128),w
 24559  0554  00A3               	movwf	(?_HueToRGB+3)^(0+128)
 24560  0555  0826               	movf	(HueToRGB@v2+2)^(0+128),w
 24561  0556  00A2               	movwf	(?_HueToRGB+2)^(0+128)
 24562  0557  0825               	movf	(HueToRGB@v2+1)^(0+128),w
 24563  0558  00A1               	movwf	(?_HueToRGB+1)^(0+128)
 24564  0559  0824               	movf	HueToRGB@v2^(0+128),w
 24565  055A  00A0               	movwf	?_HueToRGB^(0+128)
 24566  055B  2E3A               	goto	l1546
 24567  055C                     l11453:	
 24568                           
 24569                           ;led.c: 324:  if ((3 * vH) < 2)
 24570  055C  3040               	movlw	64
 24571  055D  0140               	movlb	0	; select bank0
 24572  055E  00CB               	movwf	___flmul@b+3
 24573  055F  3040               	movlw	64
 24574  0560  00CA               	movwf	___flmul@b+2
 24575  0561  3000               	movlw	0
 24576  0562  00C9               	movwf	___flmul@b+1
 24577  0563  3000               	movlw	0
 24578  0564  00C8               	movwf	___flmul@b
 24579  0565  0141               	movlb	1	; select bank1
 24580  0566  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24581  0567  0140               	movlb	0	; select bank0
 24582  0568  00CF               	movwf	___flmul@a+3
 24583  0569  0141               	movlb	1	; select bank1
 24584  056A  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24585  056B  0140               	movlb	0	; select bank0
 24586  056C  00CE               	movwf	___flmul@a+2
 24587  056D  0141               	movlb	1	; select bank1
 24588  056E  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24589  056F  0140               	movlb	0	; select bank0
 24590  0570  00CD               	movwf	___flmul@a+1
 24591  0571  0141               	movlb	1	; select bank1
 24592  0572  0828               	movf	HueToRGB@vH^(0+128),w
 24593  0573  0140               	movlb	0	; select bank0
 24594  0574  00CC               	movwf	___flmul@a
 24595  0575  318D  25A9  3183   	fcall	___flmul
 24596  0578  0140               	movlb	0	; select bank0
 24597  0579  084B               	movf	?___flmul+3,w
 24598  057A  00E5               	movwf	___flge@ff1+3
 24599  057B  084A               	movf	?___flmul+2,w
 24600  057C  00E4               	movwf	___flge@ff1+2
 24601  057D  0849               	movf	?___flmul+1,w
 24602  057E  00E3               	movwf	___flge@ff1+1
 24603  057F  0848               	movf	?___flmul,w
 24604  0580  00E2               	movwf	___flge@ff1
 24605  0581  3040               	movlw	64
 24606  0582  00E9               	movwf	___flge@ff2+3
 24607  0583  3000               	movlw	0
 24608  0584  00E8               	movwf	___flge@ff2+2
 24609  0585  3000               	movlw	0
 24610  0586  00E7               	movwf	___flge@ff2+1
 24611  0587  3000               	movlw	0
 24612  0588  00E6               	movwf	___flge@ff2
 24613  0589  3198  20BB  3183   	fcall	___flge
 24614  058C  1803               	btfsc	3,0
 24615  058D  2D8F               	goto	u12991
 24616  058E  2D90               	goto	u12990
 24617  058F                     u12991:	
 24618  058F  2E3A               	goto	l1548
 24619  0590                     u12990:	
 24620  0590                     l11455:	
 24621                           
 24622                           ;led.c: 325:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 24623  0590  0141               	movlb	1	; select bank1
 24624  0591  082B               	movf	(HueToRGB@vH+3)^(0+128),w
 24625  0592  0140               	movlb	0	; select bank0
 24626  0593  00E5               	movwf	___flsub@a+3
 24627  0594  0141               	movlb	1	; select bank1
 24628  0595  082A               	movf	(HueToRGB@vH+2)^(0+128),w
 24629  0596  0140               	movlb	0	; select bank0
 24630  0597  00E4               	movwf	___flsub@a+2
 24631  0598  0141               	movlb	1	; select bank1
 24632  0599  0829               	movf	(HueToRGB@vH+1)^(0+128),w
 24633  059A  0140               	movlb	0	; select bank0
 24634  059B  00E3               	movwf	___flsub@a+1
 24635  059C  0141               	movlb	1	; select bank1
 24636  059D  0828               	movf	HueToRGB@vH^(0+128),w
 24637  059E  0140               	movlb	0	; select bank0
 24638  059F  00E2               	movwf	___flsub@a
 24639  05A0  303F               	movlw	63
 24640  05A1  00E9               	movwf	___flsub@b+3
 24641  05A2  302A               	movlw	42
 24642  05A3  00E8               	movwf	___flsub@b+2
 24643  05A4  30AA               	movlw	170
 24644  05A5  00E7               	movwf	___flsub@b+1
 24645  05A6  30AB               	movlw	171
 24646  05A7  00E6               	movwf	___flsub@b
 24647  05A8  31A0  2000  3183   	fcall	___flsub
 24648  05AB  0140               	movlb	0	; select bank0
 24649  05AC  0865               	movf	?___flsub+3,w
 24650  05AD  00CB               	movwf	___flmul@b+3
 24651  05AE  0864               	movf	?___flsub+2,w
 24652  05AF  00CA               	movwf	___flmul@b+2
 24653  05B0  0863               	movf	?___flsub+1,w
 24654  05B1  00C9               	movwf	___flmul@b+1
 24655  05B2  0862               	movf	?___flsub,w
 24656  05B3  00C8               	movwf	___flmul@b
 24657  05B4  0141               	movlb	1	; select bank1
 24658  05B5  0823               	movf	(HueToRGB@v1+3)^(0+128),w
 24659  05B6  0140               	movlb	0	; select bank0
 24660  05B7  00E5               	movwf	___flsub@a+3
 24661  05B8  0141               	movlb	1	; select bank1
 24662  05B9  0822               	movf	(HueToRGB@v1+2)^(0+128),w
 24663  05BA  0140               	movlb	0	; select bank0
 24664  05BB  00E4               	movwf	___flsub@a+2
 24665  05BC  0141               	movlb	1	; select bank1
 24666  05BD  0821               	movf	(HueToRGB@v1+1)^(0+128),w
 24667  05BE  0140               	movlb	0	; select bank0
 24668  05BF  00E3               	movwf	___flsub@a+1
 24669  05C0  0141               	movlb	1	; select bank1
 24670  05C1  0820               	movf	HueToRGB@v1^(0+128),w
 24671  05C2  0140               	movlb	0	; select bank0
 24672  05C3  00E2               	movwf	___flsub@a
 24673  05C4  0141               	movlb	1	; select bank1
 24674  05C5  0827               	movf	(HueToRGB@v2+3)^(0+128),w
 24675  05C6  0140               	movlb	0	; select bank0
 24676  05C7  00E9               	movwf	___flsub@b+3
 24677  05C8  0141               	movlb	1	; select bank1
 24678  05C9  0826               	movf	(HueToRGB@v2+2)^(0+128),w
 24679  05CA  0140               	movlb	0	; select bank0
 24680  05CB  00E8               	movwf	___flsub@b+2
 24681  05CC  0141               	movlb	1	; select bank1
 24682  05CD  0825               	movf	(HueToRGB@v2+1)^(0+128),w
 24683  05CE  0140               	movlb	0	; select bank0
 24684  05CF  00E7               	movwf	___flsub@b+1
 24685  05D0  0141               	movlb	1	; select bank1
 24686  05D1  0824               	movf	HueToRGB@v2^(0+128),w
 24687  05D2  0140               	movlb	0	; select bank0
 24688  05D3  00E6               	movwf	___flsub@b
 24689  05D4  31A0  2000  3183   	fcall	___flsub
 24690  05D7  0140               	movlb	0	; select bank0
 24691  05D8  0865               	movf	?___flsub+3,w
 24692  05D9  00CF               	movwf	___flmul@a+3
 24693  05DA  0864               	movf	?___flsub+2,w
 24694  05DB  00CE               	movwf	___flmul@a+2
 24695  05DC  0863               	movf	?___flsub+1,w
 24696  05DD  00CD               	movwf	___flmul@a+1
 24697  05DE  0862               	movf	?___flsub,w
 24698  05DF  00CC               	movwf	___flmul@a
 24699  05E0  318D  25A9  3183   	fcall	___flmul
 24700  05E3  0140               	movlb	0	; select bank0
 24701  05E4  084B               	movf	?___flmul+3,w
 24702  05E5  0141               	movlb	1	; select bank1
 24703  05E6  00AF               	movwf	(_HueToRGB$4179+3)^(0+128)
 24704  05E7  0140               	movlb	0	; select bank0
 24705  05E8  084A               	movf	?___flmul+2,w
 24706  05E9  0141               	movlb	1	; select bank1
 24707  05EA  00AE               	movwf	(_HueToRGB$4179+2)^(0+128)
 24708  05EB  0140               	movlb	0	; select bank0
 24709  05EC  0849               	movf	?___flmul+1,w
 24710  05ED  0141               	movlb	1	; select bank1
 24711  05EE  00AD               	movwf	(_HueToRGB$4179+1)^(0+128)
 24712  05EF  0140               	movlb	0	; select bank0
 24713  05F0  0848               	movf	?___flmul,w
 24714  05F1  0141               	movlb	1	; select bank1
 24715  05F2  00AC               	movwf	_HueToRGB$4179^(0+128)
 24716                           
 24717                           ;led.c: 325:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 24718  05F3  0823               	movf	(HueToRGB@v1+3)^(0+128),w
 24719  05F4  0140               	movlb	0	; select bank0
 24720  05F5  00AC               	movwf	___fladd@b+3
 24721  05F6  0141               	movlb	1	; select bank1
 24722  05F7  0822               	movf	(HueToRGB@v1+2)^(0+128),w
 24723  05F8  0140               	movlb	0	; select bank0
 24724  05F9  00AB               	movwf	___fladd@b+2
 24725  05FA  0141               	movlb	1	; select bank1
 24726  05FB  0821               	movf	(HueToRGB@v1+1)^(0+128),w
 24727  05FC  0140               	movlb	0	; select bank0
 24728  05FD  00AA               	movwf	___fladd@b+1
 24729  05FE  0141               	movlb	1	; select bank1
 24730  05FF  0820               	movf	HueToRGB@v1^(0+128),w
 24731  0600  0140               	movlb	0	; select bank0
 24732  0601  00A9               	movwf	___fladd@b
 24733  0602  3040               	movlw	64
 24734  0603  00CB               	movwf	___flmul@b+3
 24735  0604  30C0               	movlw	192
 24736  0605  00CA               	movwf	___flmul@b+2
 24737  0606  3000               	movlw	0
 24738  0607  00C9               	movwf	___flmul@b+1
 24739  0608  3000               	movlw	0
 24740  0609  00C8               	movwf	___flmul@b
 24741  060A  0141               	movlb	1	; select bank1
 24742  060B  082F               	movf	(_HueToRGB$4179+3)^(0+128),w
 24743  060C  0140               	movlb	0	; select bank0
 24744  060D  00CF               	movwf	___flmul@a+3
 24745  060E  0141               	movlb	1	; select bank1
 24746  060F  082E               	movf	(_HueToRGB$4179+2)^(0+128),w
 24747  0610  0140               	movlb	0	; select bank0
 24748  0611  00CE               	movwf	___flmul@a+2
 24749  0612  0141               	movlb	1	; select bank1
 24750  0613  082D               	movf	(_HueToRGB$4179+1)^(0+128),w
 24751  0614  0140               	movlb	0	; select bank0
 24752  0615  00CD               	movwf	___flmul@a+1
 24753  0616  0141               	movlb	1	; select bank1
 24754  0617  082C               	movf	_HueToRGB$4179^(0+128),w
 24755  0618  0140               	movlb	0	; select bank0
 24756  0619  00CC               	movwf	___flmul@a
 24757  061A  318D  25A9  3183   	fcall	___flmul
 24758  061D  0140               	movlb	0	; select bank0
 24759  061E  084B               	movf	?___flmul+3,w
 24760  061F  00B0               	movwf	___fladd@a+3
 24761  0620  084A               	movf	?___flmul+2,w
 24762  0621  00AF               	movwf	___fladd@a+2
 24763  0622  0849               	movf	?___flmul+1,w
 24764  0623  00AE               	movwf	___fladd@a+1
 24765  0624  0848               	movf	?___flmul,w
 24766  0625  00AD               	movwf	___fladd@a
 24767  0626  318B  2371  3183   	fcall	___fladd
 24768  0629  0140               	movlb	0	; select bank0
 24769  062A  082C               	movf	?___fladd+3,w
 24770  062B  0141               	movlb	1	; select bank1
 24771  062C  00A3               	movwf	(?_HueToRGB+3)^(0+128)
 24772  062D  0140               	movlb	0	; select bank0
 24773  062E  082B               	movf	?___fladd+2,w
 24774  062F  0141               	movlb	1	; select bank1
 24775  0630  00A2               	movwf	(?_HueToRGB+2)^(0+128)
 24776  0631  0140               	movlb	0	; select bank0
 24777  0632  082A               	movf	?___fladd+1,w
 24778  0633  0141               	movlb	1	; select bank1
 24779  0634  00A1               	movwf	(?_HueToRGB+1)^(0+128)
 24780  0635  0140               	movlb	0	; select bank0
 24781  0636  0829               	movf	?___fladd,w
 24782  0637  0141               	movlb	1	; select bank1
 24783  0638  00A0               	movwf	?_HueToRGB^(0+128)
 24784  0639  2E3A               	goto	l1546
 24785  063A                     l1548:	
 24786  063A                     l1546:	
 24787                           ;led.c: 327:  return v1;
 24788                           
 24789  063A  0008               	return
 24790  063B                     __end_of_HueToRGB:	
 24791                           
 24792                           	psect	text77
 24793  2000                     __ptext77:	
 24794 ;; *************** function ___flsub *****************
 24795 ;; Defined at:
 24796 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 24797 ;; Parameters:    Size  Location     Type
 24798 ;;  a               4   66[BANK0 ] float 
 24799 ;;  b               4   70[BANK0 ] float 
 24800 ;; Auto vars:     Size  Location     Type
 24801 ;;		None
 24802 ;; Return value:  Size  Location     Type
 24803 ;;                  4   66[BANK0 ] float 
 24804 ;; Registers used:
 24805 ;;		wreg, status,2, status,0, pclath, cstack
 24806 ;; Tracked objects:
 24807 ;;		On entry : 0/0
 24808 ;;		On exit  : 0/0
 24809 ;;		Unchanged: 0/0
 24810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24811 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24814 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24815 ;;Total ram usage:        8 bytes
 24816 ;; Hardware stack levels used:    1
 24817 ;; Hardware stack levels required when called:    5
 24818 ;; This function calls:
 24819 ;;		___fladd
 24820 ;; This function is called by:
 24821 ;;		_HueToRGB
 24822 ;;		_HSLToRGB
 24823 ;; This function uses a non-reentrant model
 24824 ;;
 24825                           
 24826                           
 24827                           ;psect for function ___flsub
 24828  2000                     ___flsub:	
 24829  2000                     l11039:	
 24830                           ;incstack = 0
 24831                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 24832                           
 24833  2000  3080               	movlw	128
 24834  2001  0140               	movlb	0	; select bank0
 24835  2002  06E5               	xorwf	___flsub@a+3,f
 24836  2003                     l11041:	
 24837  2003  0869               	movf	___flsub@b+3,w
 24838  2004  00AC               	movwf	___fladd@b+3
 24839  2005  0868               	movf	___flsub@b+2,w
 24840  2006  00AB               	movwf	___fladd@b+2
 24841  2007  0867               	movf	___flsub@b+1,w
 24842  2008  00AA               	movwf	___fladd@b+1
 24843  2009  0866               	movf	___flsub@b,w
 24844  200A  00A9               	movwf	___fladd@b
 24845  200B  0865               	movf	___flsub@a+3,w
 24846  200C  00B0               	movwf	___fladd@a+3
 24847  200D  0864               	movf	___flsub@a+2,w
 24848  200E  00AF               	movwf	___fladd@a+2
 24849  200F  0863               	movf	___flsub@a+1,w
 24850  2010  00AE               	movwf	___fladd@a+1
 24851  2011  0862               	movf	___flsub@a,w
 24852  2012  00AD               	movwf	___fladd@a
 24853  2013  318B  2371  31A0   	fcall	___fladd
 24854  2016  0140               	movlb	0	; select bank0
 24855  2017  082C               	movf	?___fladd+3,w
 24856  2018  00E5               	movwf	?___flsub+3
 24857  2019  082B               	movf	?___fladd+2,w
 24858  201A  00E4               	movwf	?___flsub+2
 24859  201B  082A               	movf	?___fladd+1,w
 24860  201C  00E3               	movwf	?___flsub+1
 24861  201D  0829               	movf	?___fladd,w
 24862  201E  00E2               	movwf	?___flsub
 24863  201F                     l2105:	
 24864  201F  0008               	return
 24865  2020                     __end_of___flsub:	
 24866                           
 24867                           	psect	text78
 24868  0B71                     __ptext78:	
 24869 ;; *************** function ___fladd *****************
 24870 ;; Defined at:
 24871 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 24872 ;; Parameters:    Size  Location     Type
 24873 ;;  b               4    9[BANK0 ] float 
 24874 ;;  a               4   13[BANK0 ] float 
 24875 ;; Auto vars:     Size  Location     Type
 24876 ;;  grs             1   28[BANK0 ] unsigned char 
 24877 ;;  bexp            1   27[BANK0 ] unsigned char 
 24878 ;;  aexp            1   26[BANK0 ] unsigned char 
 24879 ;;  signs           1   25[BANK0 ] unsigned char 
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  4    9[BANK0 ] unsigned char 
 24882 ;; Registers used:
 24883 ;;		wreg, status,2, status,0
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24889 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24890 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24891 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24892 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24893 ;;Total ram usage:       20 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; Hardware stack levels required when called:    4
 24896 ;; This function calls:
 24897 ;;		Nothing
 24898 ;; This function is called by:
 24899 ;;		_HueToRGB
 24900 ;;		_HSLToRGB
 24901 ;;		___flsub
 24902 ;; This function uses a non-reentrant model
 24903 ;;
 24904                           
 24905                           
 24906                           ;psect for function ___fladd
 24907  0B71                     ___fladd:	
 24908  0B71                     l10733:	
 24909                           ;incstack = 0
 24910                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 24911                           
 24912  0B71  0140               	movlb	0	; select bank0
 24913  0B72  082C               	movf	___fladd@b+3,w
 24914  0B73  3980               	andlw	128
 24915  0B74  00B1               	movwf	??___fladd
 24916  0B75  0831               	movf	??___fladd,w
 24917  0B76  00B9               	movwf	___fladd@signs
 24918  0B77                     l10735:	
 24919  0B77  352C               	lslf	___fladd@b+3,w
 24920  0B78  00B1               	movwf	??___fladd
 24921  0B79  0831               	movf	??___fladd,w
 24922  0B7A  00BB               	movwf	___fladd@bexp
 24923  0B7B                     l10737:	
 24924  0B7B  1FAB               	btfss	___fladd@b+2,7
 24925  0B7C  2B7E               	goto	u11501
 24926  0B7D  2B7F               	goto	u11500
 24927  0B7E                     u11501:	
 24928  0B7E  2B80               	goto	l10741
 24929  0B7F                     u11500:	
 24930  0B7F                     l10739:	
 24931  0B7F  143B               	bsf	___fladd@bexp,0
 24932  0B80                     l10741:	
 24933  0B80  083B               	movf	___fladd@bexp,w
 24934  0B81  1903               	btfsc	3,2
 24935  0B82  2B84               	goto	u11511
 24936  0B83  2B85               	goto	u11510
 24937  0B84                     u11511:	
 24938  0B84  2B95               	goto	l10751
 24939  0B85                     u11510:	
 24940  0B85                     l10743:	
 24941  0B85  0A3B               	incf	___fladd@bexp,w
 24942  0B86  1D03               	btfss	3,2
 24943  0B87  2B89               	goto	u11521
 24944  0B88  2B8A               	goto	u11520
 24945  0B89                     u11521:	
 24946  0B89  2B92               	goto	l10747
 24947  0B8A                     u11520:	
 24948  0B8A                     l10745:	
 24949  0B8A  3000               	movlw	0
 24950  0B8B  00AC               	movwf	___fladd@b+3
 24951  0B8C  3000               	movlw	0
 24952  0B8D  00AB               	movwf	___fladd@b+2
 24953  0B8E  3000               	movlw	0
 24954  0B8F  00AA               	movwf	___fladd@b+1
 24955  0B90  3000               	movlw	0
 24956  0B91  00A9               	movwf	___fladd@b
 24957  0B92                     l10747:	
 24958  0B92  17AB               	bsf	___fladd@b+2,7
 24959  0B93                     l10749:	
 24960  0B93  01AC               	clrf	___fladd@b+3
 24961  0B94  2B9D               	goto	l10753
 24962  0B95                     l10751:	
 24963  0B95  3000               	movlw	0
 24964  0B96  00AC               	movwf	___fladd@b+3
 24965  0B97  3000               	movlw	0
 24966  0B98  00AB               	movwf	___fladd@b+2
 24967  0B99  3000               	movlw	0
 24968  0B9A  00AA               	movwf	___fladd@b+1
 24969  0B9B  3000               	movlw	0
 24970  0B9C  00A9               	movwf	___fladd@b
 24971  0B9D                     l10753:	
 24972  0B9D  0830               	movf	___fladd@a+3,w
 24973  0B9E  3980               	andlw	128
 24974  0B9F  00B1               	movwf	??___fladd
 24975  0BA0  0831               	movf	??___fladd,w
 24976  0BA1  00BA               	movwf	___fladd@aexp
 24977  0BA2                     l10755:	
 24978  0BA2  083A               	movf	___fladd@aexp,w
 24979  0BA3  0639               	xorwf	___fladd@signs,w
 24980  0BA4  1903               	skipnz
 24981  0BA5  2BA7               	goto	u11531
 24982  0BA6  2BA8               	goto	u11530
 24983  0BA7                     u11531:	
 24984  0BA7  2BA9               	goto	l10759
 24985  0BA8                     u11530:	
 24986  0BA8                     l10757:	
 24987  0BA8  1739               	bsf	___fladd@signs,6
 24988  0BA9                     l10759:	
 24989  0BA9  3530               	lslf	___fladd@a+3,w
 24990  0BAA  00B1               	movwf	??___fladd
 24991  0BAB  0831               	movf	??___fladd,w
 24992  0BAC  00BA               	movwf	___fladd@aexp
 24993  0BAD                     l10761:	
 24994  0BAD  1FAF               	btfss	___fladd@a+2,7
 24995  0BAE  2BB0               	goto	u11541
 24996  0BAF  2BB1               	goto	u11540
 24997  0BB0                     u11541:	
 24998  0BB0  2BB2               	goto	l10765
 24999  0BB1                     u11540:	
 25000  0BB1                     l10763:	
 25001  0BB1  143A               	bsf	___fladd@aexp,0
 25002  0BB2                     l10765:	
 25003  0BB2  083A               	movf	___fladd@aexp,w
 25004  0BB3  1903               	btfsc	3,2
 25005  0BB4  2BB6               	goto	u11551
 25006  0BB5  2BB7               	goto	u11550
 25007  0BB6                     u11551:	
 25008  0BB6  2BC7               	goto	l10775
 25009  0BB7                     u11550:	
 25010  0BB7                     l10767:	
 25011  0BB7  0A3A               	incf	___fladd@aexp,w
 25012  0BB8  1D03               	btfss	3,2
 25013  0BB9  2BBB               	goto	u11561
 25014  0BBA  2BBC               	goto	u11560
 25015  0BBB                     u11561:	
 25016  0BBB  2BC4               	goto	l10771
 25017  0BBC                     u11560:	
 25018  0BBC                     l10769:	
 25019  0BBC  3000               	movlw	0
 25020  0BBD  00B0               	movwf	___fladd@a+3
 25021  0BBE  3000               	movlw	0
 25022  0BBF  00AF               	movwf	___fladd@a+2
 25023  0BC0  3000               	movlw	0
 25024  0BC1  00AE               	movwf	___fladd@a+1
 25025  0BC2  3000               	movlw	0
 25026  0BC3  00AD               	movwf	___fladd@a
 25027  0BC4                     l10771:	
 25028  0BC4  17AF               	bsf	___fladd@a+2,7
 25029  0BC5                     l10773:	
 25030  0BC5  01B0               	clrf	___fladd@a+3
 25031  0BC6  2BCF               	goto	l2059
 25032  0BC7                     l10775:	
 25033  0BC7  3000               	movlw	0
 25034  0BC8  00B0               	movwf	___fladd@a+3
 25035  0BC9  3000               	movlw	0
 25036  0BCA  00AF               	movwf	___fladd@a+2
 25037  0BCB  3000               	movlw	0
 25038  0BCC  00AE               	movwf	___fladd@a+1
 25039  0BCD  3000               	movlw	0
 25040  0BCE  00AD               	movwf	___fladd@a
 25041  0BCF                     l2059:	
 25042  0BCF  083B               	movf	___fladd@bexp,w
 25043  0BD0  023A               	subwf	___fladd@aexp,w
 25044  0BD1  1803               	skipnc
 25045  0BD2  2BD4               	goto	u11571
 25046  0BD3  2BD5               	goto	u11570
 25047  0BD4                     u11571:	
 25048  0BD4  2C19               	goto	l10811
 25049  0BD5                     u11570:	
 25050  0BD5                     l10777:	
 25051  0BD5  1F39               	btfss	___fladd@signs,6
 25052  0BD6  2BD8               	goto	u11581
 25053  0BD7  2BD9               	goto	u11580
 25054  0BD8                     u11581:	
 25055  0BD8  2BDD               	goto	l10781
 25056  0BD9                     u11580:	
 25057  0BD9                     l10779:	
 25058  0BD9  3080               	movlw	128
 25059  0BDA  00B1               	movwf	??___fladd
 25060  0BDB  0831               	movf	??___fladd,w
 25061  0BDC  06B9               	xorwf	___fladd@signs,f
 25062  0BDD                     l10781:	
 25063  0BDD  083B               	movf	___fladd@bexp,w
 25064  0BDE  00B1               	movwf	??___fladd
 25065  0BDF  0831               	movf	??___fladd,w
 25066  0BE0  00BC               	movwf	___fladd@grs
 25067  0BE1                     l10783:	
 25068  0BE1  083A               	movf	___fladd@aexp,w
 25069  0BE2  00B1               	movwf	??___fladd
 25070  0BE3  0831               	movf	??___fladd,w
 25071  0BE4  00BB               	movwf	___fladd@bexp
 25072  0BE5                     l10785:	
 25073  0BE5  083C               	movf	___fladd@grs,w
 25074  0BE6  00B1               	movwf	??___fladd
 25075  0BE7  0831               	movf	??___fladd,w
 25076  0BE8  00BA               	movwf	___fladd@aexp
 25077  0BE9                     l10787:	
 25078  0BE9  0829               	movf	___fladd@b,w
 25079  0BEA  00B1               	movwf	??___fladd
 25080  0BEB  0831               	movf	??___fladd,w
 25081  0BEC  00BC               	movwf	___fladd@grs
 25082  0BED                     l10789:	
 25083  0BED  082D               	movf	___fladd@a,w
 25084  0BEE  00B1               	movwf	??___fladd
 25085  0BEF  0831               	movf	??___fladd,w
 25086  0BF0  00A9               	movwf	___fladd@b
 25087  0BF1                     l10791:	
 25088  0BF1  083C               	movf	___fladd@grs,w
 25089  0BF2  00B1               	movwf	??___fladd
 25090  0BF3  0831               	movf	??___fladd,w
 25091  0BF4  00AD               	movwf	___fladd@a
 25092  0BF5                     l10793:	
 25093  0BF5  082A               	movf	___fladd@b+1,w
 25094  0BF6  00B1               	movwf	??___fladd
 25095  0BF7  0831               	movf	??___fladd,w
 25096  0BF8  00BC               	movwf	___fladd@grs
 25097  0BF9                     l10795:	
 25098  0BF9  082E               	movf	___fladd@a+1,w
 25099  0BFA  00B1               	movwf	??___fladd
 25100  0BFB  0831               	movf	??___fladd,w
 25101  0BFC  00AA               	movwf	___fladd@b+1
 25102  0BFD                     l10797:	
 25103  0BFD  083C               	movf	___fladd@grs,w
 25104  0BFE  00B1               	movwf	??___fladd
 25105  0BFF  0831               	movf	??___fladd,w
 25106  0C00  00AE               	movwf	___fladd@a+1
 25107  0C01                     l10799:	
 25108  0C01  082B               	movf	___fladd@b+2,w
 25109  0C02  00B1               	movwf	??___fladd
 25110  0C03  0831               	movf	??___fladd,w
 25111  0C04  00BC               	movwf	___fladd@grs
 25112  0C05                     l10801:	
 25113  0C05  082F               	movf	___fladd@a+2,w
 25114  0C06  00B1               	movwf	??___fladd
 25115  0C07  0831               	movf	??___fladd,w
 25116  0C08  00AB               	movwf	___fladd@b+2
 25117  0C09                     l10803:	
 25118  0C09  083C               	movf	___fladd@grs,w
 25119  0C0A  00B1               	movwf	??___fladd
 25120  0C0B  0831               	movf	??___fladd,w
 25121  0C0C  00AF               	movwf	___fladd@a+2
 25122  0C0D                     l10805:	
 25123  0C0D  082C               	movf	___fladd@b+3,w
 25124  0C0E  00B1               	movwf	??___fladd
 25125  0C0F  0831               	movf	??___fladd,w
 25126  0C10  00BC               	movwf	___fladd@grs
 25127  0C11                     l10807:	
 25128  0C11  0830               	movf	___fladd@a+3,w
 25129  0C12  00B1               	movwf	??___fladd
 25130  0C13  0831               	movf	??___fladd,w
 25131  0C14  00AC               	movwf	___fladd@b+3
 25132  0C15                     l10809:	
 25133  0C15  083C               	movf	___fladd@grs,w
 25134  0C16  00B1               	movwf	??___fladd
 25135  0C17  0831               	movf	??___fladd,w
 25136  0C18  00B0               	movwf	___fladd@a+3
 25137  0C19                     l10811:	
 25138  0C19  01BC               	clrf	___fladd@grs
 25139  0C1A                     l10813:	
 25140  0C1A  083A               	movf	___fladd@aexp,w
 25141  0C1B  00B1               	movwf	??___fladd
 25142  0C1C  01B2               	clrf	??___fladd+1
 25143  0C1D  0832               	movf	??___fladd+1,w
 25144  0C1E  00B4               	movwf	??___fladd+3
 25145  0C1F  083B               	movf	___fladd@bexp,w
 25146  0C20  0231               	subwf	??___fladd,w
 25147  0C21  00B3               	movwf	??___fladd+2
 25148  0C22  1C03               	skipc
 25149  0C23  03B4               	decf	??___fladd+3,f
 25150  0C24  0834               	movf	??___fladd+3,w
 25151  0C25  3A80               	xorlw	128
 25152  0C26  00B5               	movwf	??___fladd+4
 25153  0C27  3080               	movlw	128
 25154  0C28  0235               	subwf	??___fladd+4,w
 25155  0C29  1D03               	skipz
 25156  0C2A  2C2D               	goto	u11595
 25157  0C2B  301A               	movlw	26
 25158  0C2C  0233               	subwf	??___fladd+2,w
 25159  0C2D                     u11595:	
 25160  0C2D  1C03               	skipc
 25161  0C2E  2C30               	goto	u11591
 25162  0C2F  2C31               	goto	u11590
 25163  0C30                     u11591:	
 25164  0C30  2C69               	goto	l10829
 25165  0C31                     u11590:	
 25166  0C31                     l10815:	
 25167  0C31  0140               	movlb	0	; select bank0
 25168  0C32  082C               	movf	___fladd@b+3,w
 25169  0C33  042B               	iorwf	___fladd@b+2,w
 25170  0C34  042A               	iorwf	___fladd@b+1,w
 25171  0C35  0429               	iorwf	___fladd@b,w
 25172  0C36  1D03               	skipz
 25173  0C37  2C39               	goto	u11601
 25174  0C38  2C3B               	goto	u11600
 25175  0C39                     u11601:	
 25176  0C39  3001               	movlw	1
 25177  0C3A  2C3C               	goto	u11610
 25178  0C3B                     u11600:	
 25179  0C3B  3000               	movlw	0
 25180  0C3C                     u11610:	
 25181  0C3C  00B1               	movwf	??___fladd
 25182  0C3D  0831               	movf	??___fladd,w
 25183  0C3E  00BC               	movwf	___fladd@grs
 25184  0C3F  3000               	movlw	0
 25185  0C40  00AC               	movwf	___fladd@b+3
 25186  0C41  3000               	movlw	0
 25187  0C42  00AB               	movwf	___fladd@b+2
 25188  0C43  3000               	movlw	0
 25189  0C44  00AA               	movwf	___fladd@b+1
 25190  0C45  3000               	movlw	0
 25191  0C46  00A9               	movwf	___fladd@b
 25192  0C47  083A               	movf	___fladd@aexp,w
 25193  0C48  00B1               	movwf	??___fladd
 25194  0C49  0831               	movf	??___fladd,w
 25195  0C4A  00BB               	movwf	___fladd@bexp
 25196  0C4B  2C70               	goto	l2063
 25197  0C4C                     l2065:	
 25198  0C4C  1C3C               	btfss	___fladd@grs,0
 25199  0C4D  2C4F               	goto	u11621
 25200  0C4E  2C50               	goto	u11620
 25201  0C4F                     u11621:	
 25202  0C4F  2C56               	goto	l10819
 25203  0C50                     u11620:	
 25204  0C50                     l10817:	
 25205  0C50  363C               	lsrf	___fladd@grs,w
 25206  0C51  3801               	iorlw	1
 25207  0C52  00B1               	movwf	??___fladd
 25208  0C53  0831               	movf	??___fladd,w
 25209  0C54  00BC               	movwf	___fladd@grs
 25210  0C55  2C58               	goto	l10821
 25211  0C56                     l10819:	
 25212  0C56  1003               	clrc
 25213  0C57  0CBC               	rrf	___fladd@grs,f
 25214  0C58                     l10821:	
 25215  0C58  1C29               	btfss	___fladd@b,0
 25216  0C59  2C5B               	goto	u11631
 25217  0C5A  2C5C               	goto	u11630
 25218  0C5B                     u11631:	
 25219  0C5B  2C5D               	goto	l10825
 25220  0C5C                     u11630:	
 25221  0C5C                     l10823:	
 25222  0C5C  17BC               	bsf	___fladd@grs,7
 25223  0C5D                     l10825:	
 25224  0C5D  3001               	movlw	1
 25225  0C5E  00B1               	movwf	??___fladd
 25226  0C5F                     u11645:	
 25227  0C5F  37AC               	asrf	___fladd@b+3,f
 25228  0C60  0CAB               	rrf	___fladd@b+2,f
 25229  0C61  0CAA               	rrf	___fladd@b+1,f
 25230  0C62  0CA9               	rrf	___fladd@b,f
 25231  0C63  0BB1               	decfsz	??___fladd& (0+127),f
 25232  0C64  2C5F               	goto	u11645
 25233  0C65                     l10827:	
 25234  0C65  3001               	movlw	1
 25235  0C66  00B1               	movwf	??___fladd
 25236  0C67  0831               	movf	??___fladd,w
 25237  0C68  07BB               	addwf	___fladd@bexp,f
 25238  0C69                     l10829:	
 25239  0C69  0140               	movlb	0	; select bank0
 25240  0C6A  083A               	movf	___fladd@aexp,w
 25241  0C6B  023B               	subwf	___fladd@bexp,w
 25242  0C6C  1C03               	skipc
 25243  0C6D  2C6F               	goto	u11651
 25244  0C6E  2C70               	goto	u11650
 25245  0C6F                     u11651:	
 25246  0C6F  2C4C               	goto	l2065
 25247  0C70                     u11650:	
 25248  0C70                     l2063:	
 25249  0C70  1B39               	btfsc	___fladd@signs,6
 25250  0C71  2C73               	goto	u11661
 25251  0C72  2C74               	goto	u11660
 25252  0C73                     u11661:	
 25253  0C73  2CAC               	goto	l10855
 25254  0C74                     u11660:	
 25255  0C74                     l10831:	
 25256  0C74  083B               	movf	___fladd@bexp,w
 25257  0C75  1D03               	btfss	3,2
 25258  0C76  2C78               	goto	u11671
 25259  0C77  2C79               	goto	u11670
 25260  0C78                     u11671:	
 25261  0C78  2C82               	goto	l10837
 25262  0C79                     u11670:	
 25263  0C79                     l10833:	
 25264  0C79  3000               	movlw	0
 25265  0C7A  00AC               	movwf	?___fladd+3
 25266  0C7B  3000               	movlw	0
 25267  0C7C  00AB               	movwf	?___fladd+2
 25268  0C7D  3000               	movlw	0
 25269  0C7E  00AA               	movwf	?___fladd+1
 25270  0C7F  3000               	movlw	0
 25271  0C80  00A9               	movwf	?___fladd
 25272  0C81  2DA8               	goto	l2072
 25273  0C82                     l10837:	
 25274  0C82  082D               	movf	___fladd@a,w
 25275  0C83  07A9               	addwf	___fladd@b,f
 25276  0C84  082E               	movf	___fladd@a+1,w
 25277  0C85  3DAA               	addwfc	___fladd@b+1,f
 25278  0C86  082F               	movf	___fladd@a+2,w
 25279  0C87  3DAB               	addwfc	___fladd@b+2,f
 25280  0C88  0830               	movf	___fladd@a+3,w
 25281  0C89  3DAC               	addwfc	___fladd@b+3,f
 25282  0C8A                     l10839:	
 25283  0C8A  1C2C               	btfss	___fladd@b+3,0
 25284  0C8B  2C8D               	goto	u11681
 25285  0C8C  2C8E               	goto	u11680
 25286  0C8D                     u11681:	
 25287  0C8D  2D38               	goto	l10889
 25288  0C8E                     u11680:	
 25289  0C8E                     l10841:	
 25290  0C8E  1C3C               	btfss	___fladd@grs,0
 25291  0C8F  2C91               	goto	u11691
 25292  0C90  2C92               	goto	u11690
 25293  0C91                     u11691:	
 25294  0C91  2C98               	goto	l10845
 25295  0C92                     u11690:	
 25296  0C92                     l10843:	
 25297  0C92  363C               	lsrf	___fladd@grs,w
 25298  0C93  3801               	iorlw	1
 25299  0C94  00B1               	movwf	??___fladd
 25300  0C95  0831               	movf	??___fladd,w
 25301  0C96  00BC               	movwf	___fladd@grs
 25302  0C97  2C9A               	goto	l10847
 25303  0C98                     l10845:	
 25304  0C98  1003               	clrc
 25305  0C99  0CBC               	rrf	___fladd@grs,f
 25306  0C9A                     l10847:	
 25307  0C9A  1C29               	btfss	___fladd@b,0
 25308  0C9B  2C9D               	goto	u11701
 25309  0C9C  2C9E               	goto	u11700
 25310  0C9D                     u11701:	
 25311  0C9D  2C9F               	goto	l10851
 25312  0C9E                     u11700:	
 25313  0C9E                     l10849:	
 25314  0C9E  17BC               	bsf	___fladd@grs,7
 25315  0C9F                     l10851:	
 25316  0C9F  3001               	movlw	1
 25317  0CA0  00B1               	movwf	??___fladd
 25318  0CA1                     u11715:	
 25319  0CA1  37AC               	asrf	___fladd@b+3,f
 25320  0CA2  0CAB               	rrf	___fladd@b+2,f
 25321  0CA3  0CAA               	rrf	___fladd@b+1,f
 25322  0CA4  0CA9               	rrf	___fladd@b,f
 25323  0CA5  0BB1               	decfsz	??___fladd& (0+127),f
 25324  0CA6  2CA1               	goto	u11715
 25325  0CA7                     l10853:	
 25326  0CA7  3001               	movlw	1
 25327  0CA8  00B1               	movwf	??___fladd
 25328  0CA9  0831               	movf	??___fladd,w
 25329  0CAA  07BB               	addwf	___fladd@bexp,f
 25330  0CAB  2D38               	goto	l10889
 25331  0CAC                     l10855:	
 25332  0CAC  082C               	movf	___fladd@b+3,w
 25333  0CAD  3A80               	xorlw	128
 25334  0CAE  00B1               	movwf	??___fladd
 25335  0CAF  0830               	movf	___fladd@a+3,w
 25336  0CB0  3A80               	xorlw	128
 25337  0CB1  0231               	subwf	??___fladd,w
 25338  0CB2  1D03               	skipz
 25339  0CB3  2CBE               	goto	u11723
 25340  0CB4  082F               	movf	___fladd@a+2,w
 25341  0CB5  022B               	subwf	___fladd@b+2,w
 25342  0CB6  1D03               	skipz
 25343  0CB7  2CBE               	goto	u11723
 25344  0CB8  082E               	movf	___fladd@a+1,w
 25345  0CB9  022A               	subwf	___fladd@b+1,w
 25346  0CBA  1D03               	skipz
 25347  0CBB  2CBE               	goto	u11723
 25348  0CBC  082D               	movf	___fladd@a,w
 25349  0CBD  0229               	subwf	___fladd@b,w
 25350  0CBE                     u11723:	
 25351  0CBE  1803               	skipnc
 25352  0CBF  2CC1               	goto	u11721
 25353  0CC0  2CC2               	goto	u11720
 25354  0CC1                     u11721:	
 25355  0CC1  2CFA               	goto	l10865
 25356  0CC2                     u11720:	
 25357  0CC2                     l10857:	
 25358  0CC2  30FF               	movlw	255
 25359  0CC3  00B1               	movwf	??___fladd
 25360  0CC4  30FF               	movlw	255
 25361  0CC5  00B2               	movwf	??___fladd+1
 25362  0CC6  30FF               	movlw	255
 25363  0CC7  00B3               	movwf	??___fladd+2
 25364  0CC8  30FF               	movlw	255
 25365  0CC9  00B4               	movwf	??___fladd+3
 25366  0CCA  0829               	movf	___fladd@b,w
 25367  0CCB  022D               	subwf	___fladd@a,w
 25368  0CCC  00B5               	movwf	??___fladd+4
 25369  0CCD  082A               	movf	___fladd@b+1,w
 25370  0CCE  3B2E               	subwfb	___fladd@a+1,w
 25371  0CCF  00B6               	movwf	??___fladd+5
 25372  0CD0  082B               	movf	___fladd@b+2,w
 25373  0CD1  3B2F               	subwfb	___fladd@a+2,w
 25374  0CD2  00B7               	movwf	??___fladd+6
 25375  0CD3  082C               	movf	___fladd@b+3,w
 25376  0CD4  3B30               	subwfb	___fladd@a+3,w
 25377  0CD5  00B8               	movwf	??___fladd+7
 25378  0CD6  0835               	movf	??___fladd+4,w
 25379  0CD7  07B1               	addwf	??___fladd,f
 25380  0CD8  0836               	movf	??___fladd+5,w
 25381  0CD9  3DB2               	addwfc	??___fladd+1,f
 25382  0CDA  0837               	movf	??___fladd+6,w
 25383  0CDB  3DB3               	addwfc	??___fladd+2,f
 25384  0CDC  0838               	movf	??___fladd+7,w
 25385  0CDD  3DB4               	addwfc	??___fladd+3,f
 25386  0CDE  0834               	movf	??___fladd+3,w
 25387  0CDF  00AC               	movwf	___fladd@b+3
 25388  0CE0  0833               	movf	??___fladd+2,w
 25389  0CE1  00AB               	movwf	___fladd@b+2
 25390  0CE2  0832               	movf	??___fladd+1,w
 25391  0CE3  00AA               	movwf	___fladd@b+1
 25392  0CE4  0831               	movf	??___fladd,w
 25393  0CE5  00A9               	movwf	___fladd@b
 25394  0CE6                     l10859:	
 25395  0CE6  3080               	movlw	128
 25396  0CE7  00B1               	movwf	??___fladd
 25397  0CE8  0831               	movf	??___fladd,w
 25398  0CE9  06B9               	xorwf	___fladd@signs,f
 25399  0CEA  09BC               	comf	___fladd@grs,f
 25400  0CEB  0ABC               	incf	___fladd@grs,f
 25401  0CEC                     l10861:	
 25402  0CEC  083C               	movf	___fladd@grs,w
 25403  0CED  1D03               	btfss	3,2
 25404  0CEE  2CF0               	goto	u11731
 25405  0CEF  2CF1               	goto	u11730
 25406  0CF0                     u11731:	
 25407  0CF0  2D02               	goto	l2080
 25408  0CF1                     u11730:	
 25409  0CF1                     l10863:	
 25410  0CF1  3001               	movlw	1
 25411  0CF2  07A9               	addwf	___fladd@b,f
 25412  0CF3  3000               	movlw	0
 25413  0CF4  3DAA               	addwfc	___fladd@b+1,f
 25414  0CF5  3000               	movlw	0
 25415  0CF6  3DAB               	addwfc	___fladd@b+2,f
 25416  0CF7  3000               	movlw	0
 25417  0CF8  3DAC               	addwfc	___fladd@b+3,f
 25418  0CF9  2D02               	goto	l2080
 25419  0CFA                     l10865:	
 25420  0CFA  082D               	movf	___fladd@a,w
 25421  0CFB  02A9               	subwf	___fladd@b,f
 25422  0CFC  082E               	movf	___fladd@a+1,w
 25423  0CFD  3BAA               	subwfb	___fladd@b+1,f
 25424  0CFE  082F               	movf	___fladd@a+2,w
 25425  0CFF  3BAB               	subwfb	___fladd@b+2,f
 25426  0D00  0830               	movf	___fladd@a+3,w
 25427  0D01  3BAC               	subwfb	___fladd@b+3,f
 25428  0D02                     l2080:	
 25429  0D02  082C               	movf	___fladd@b+3,w
 25430  0D03  042B               	iorwf	___fladd@b+2,w
 25431  0D04  042A               	iorwf	___fladd@b+1,w
 25432  0D05  0429               	iorwf	___fladd@b,w
 25433  0D06  1D03               	skipz
 25434  0D07  2D09               	goto	u11741
 25435  0D08  2D0A               	goto	u11740
 25436  0D09                     u11741:	
 25437  0D09  2D34               	goto	l10887
 25438  0D0A                     u11740:	
 25439  0D0A                     l10867:	
 25440  0D0A  083C               	movf	___fladd@grs,w
 25441  0D0B  1D03               	btfss	3,2
 25442  0D0C  2D0E               	goto	u11751
 25443  0D0D  2D0F               	goto	u11750
 25444  0D0E                     u11751:	
 25445  0D0E  2D34               	goto	l10887
 25446  0D0F                     u11750:	
 25447  0D0F                     l10869:	
 25448  0D0F  3000               	movlw	0
 25449  0D10  00AC               	movwf	?___fladd+3
 25450  0D11  3000               	movlw	0
 25451  0D12  00AB               	movwf	?___fladd+2
 25452  0D13  3000               	movlw	0
 25453  0D14  00AA               	movwf	?___fladd+1
 25454  0D15  3000               	movlw	0
 25455  0D16  00A9               	movwf	?___fladd
 25456  0D17  2DA8               	goto	l2072
 25457  0D18                     l10873:	
 25458  0D18  3001               	movlw	1
 25459  0D19                     u11765:	
 25460  0D19  35A9               	lslf	___fladd@b,f
 25461  0D1A  0DAA               	rlf	___fladd@b+1,f
 25462  0D1B  0DAB               	rlf	___fladd@b+2,f
 25463  0D1C  0DAC               	rlf	___fladd@b+3,f
 25464  0D1D  0B89               	decfsz	9,f
 25465  0D1E  2D19               	goto	u11765
 25466  0D1F                     l10875:	
 25467  0D1F  1FBC               	btfss	___fladd@grs,7
 25468  0D20  2D22               	goto	u11771
 25469  0D21  2D23               	goto	u11770
 25470  0D22                     u11771:	
 25471  0D22  2D24               	goto	l2084
 25472  0D23                     u11770:	
 25473  0D23                     l10877:	
 25474  0D23  1429               	bsf	___fladd@b,0
 25475  0D24                     l2084:	
 25476  0D24  1C3C               	btfss	___fladd@grs,0
 25477  0D25  2D27               	goto	u11781
 25478  0D26  2D28               	goto	u11780
 25479  0D27                     u11781:	
 25480  0D27  2D2B               	goto	l10881
 25481  0D28                     u11780:	
 25482  0D28                     l10879:	
 25483  0D28  1403               	setc
 25484  0D29  0DBC               	rlf	___fladd@grs,f
 25485  0D2A  2D2D               	goto	l10883
 25486  0D2B                     l10881:	
 25487  0D2B  1003               	clrc
 25488  0D2C  0DBC               	rlf	___fladd@grs,f
 25489  0D2D                     l10883:	
 25490  0D2D  083B               	movf	___fladd@bexp,w
 25491  0D2E  1903               	btfsc	3,2
 25492  0D2F  2D31               	goto	u11791
 25493  0D30  2D32               	goto	u11790
 25494  0D31                     u11791:	
 25495  0D31  2D34               	goto	l10887
 25496  0D32                     u11790:	
 25497  0D32                     l10885:	
 25498  0D32  3001               	movlw	1
 25499  0D33  02BB               	subwf	___fladd@bexp,f
 25500  0D34                     l10887:	
 25501  0D34  1FAB               	btfss	___fladd@b+2,7
 25502  0D35  2D37               	goto	u11801
 25503  0D36  2D38               	goto	u11800
 25504  0D37                     u11801:	
 25505  0D37  2D18               	goto	l10873
 25506  0D38                     u11800:	
 25507  0D38                     l10889:	
 25508  0D38  01BA               	clrf	___fladd@aexp
 25509  0D39                     l10891:	
 25510  0D39  1FBC               	btfss	___fladd@grs,7
 25511  0D3A  2D3C               	goto	u11811
 25512  0D3B  2D3D               	goto	u11810
 25513  0D3C                     u11811:	
 25514  0D3C  2D4B               	goto	l10899
 25515  0D3D                     u11810:	
 25516  0D3D                     l10893:	
 25517  0D3D  083C               	movf	___fladd@grs,w
 25518  0D3E  397F               	andlw	127
 25519  0D3F  1903               	btfsc	3,2
 25520  0D40  2D42               	goto	u11821
 25521  0D41  2D43               	goto	u11820
 25522  0D42                     u11821:	
 25523  0D42  2D46               	goto	l2090
 25524  0D43                     u11820:	
 25525  0D43                     l10895:	
 25526  0D43  01BA               	clrf	___fladd@aexp
 25527  0D44  0ABA               	incf	___fladd@aexp,f
 25528  0D45  2D4B               	goto	l10899
 25529  0D46                     l2090:	
 25530  0D46  1C29               	btfss	___fladd@b,0
 25531  0D47  2D49               	goto	u11831
 25532  0D48  2D4A               	goto	u11830
 25533  0D49                     u11831:	
 25534  0D49  2D4B               	goto	l10899
 25535  0D4A                     u11830:	
 25536  0D4A  2D43               	goto	l10895
 25537  0D4B                     l10899:	
 25538  0D4B  083A               	movf	___fladd@aexp,w
 25539  0D4C  1903               	btfsc	3,2
 25540  0D4D  2D4F               	goto	u11841
 25541  0D4E  2D50               	goto	u11840
 25542  0D4F                     u11841:	
 25543  0D4F  2D7D               	goto	l2093
 25544  0D50                     u11840:	
 25545  0D50                     l10901:	
 25546  0D50  3001               	movlw	1
 25547  0D51  07A9               	addwf	___fladd@b,f
 25548  0D52  3000               	movlw	0
 25549  0D53  3DAA               	addwfc	___fladd@b+1,f
 25550  0D54  3000               	movlw	0
 25551  0D55  3DAB               	addwfc	___fladd@b+2,f
 25552  0D56  3000               	movlw	0
 25553  0D57  3DAC               	addwfc	___fladd@b+3,f
 25554  0D58                     l10903:	
 25555  0D58  1C2C               	btfss	___fladd@b+3,0
 25556  0D59  2D5B               	goto	u11851
 25557  0D5A  2D5C               	goto	u11850
 25558  0D5B                     u11851:	
 25559  0D5B  2D7D               	goto	l2093
 25560  0D5C                     u11850:	
 25561  0D5C                     l10905:	
 25562  0D5C  0829               	movf	___fladd@b,w
 25563  0D5D  00B1               	movwf	??___fladd
 25564  0D5E  082A               	movf	___fladd@b+1,w
 25565  0D5F  00B2               	movwf	??___fladd+1
 25566  0D60  082B               	movf	___fladd@b+2,w
 25567  0D61  00B3               	movwf	??___fladd+2
 25568  0D62  082C               	movf	___fladd@b+3,w
 25569  0D63  00B4               	movwf	??___fladd+3
 25570  0D64  3001               	movlw	1
 25571  0D65  00B5               	movwf	??___fladd+4
 25572  0D66                     u11865:	
 25573  0D66  37B4               	asrf	??___fladd+3,f
 25574  0D67  0CB3               	rrf	??___fladd+2,f
 25575  0D68  0CB2               	rrf	??___fladd+1,f
 25576  0D69  0CB1               	rrf	??___fladd,f
 25577  0D6A                     u11860:	
 25578  0D6A  0BB5               	decfsz	??___fladd+4,f
 25579  0D6B  2D66               	goto	u11865
 25580  0D6C  0834               	movf	??___fladd+3,w
 25581  0D6D  00AC               	movwf	___fladd@b+3
 25582  0D6E  0833               	movf	??___fladd+2,w
 25583  0D6F  00AB               	movwf	___fladd@b+2
 25584  0D70  0832               	movf	??___fladd+1,w
 25585  0D71  00AA               	movwf	___fladd@b+1
 25586  0D72  0831               	movf	??___fladd,w
 25587  0D73  00A9               	movwf	___fladd@b
 25588  0D74  0A3B               	incf	___fladd@bexp,w
 25589  0D75  1903               	btfsc	3,2
 25590  0D76  2D78               	goto	u11871
 25591  0D77  2D79               	goto	u11870
 25592  0D78                     u11871:	
 25593  0D78  2D7D               	goto	l2093
 25594  0D79                     u11870:	
 25595  0D79                     l10907:	
 25596  0D79  3001               	movlw	1
 25597  0D7A  00B1               	movwf	??___fladd
 25598  0D7B  0831               	movf	??___fladd,w
 25599  0D7C  07BB               	addwf	___fladd@bexp,f
 25600  0D7D                     l2093:	
 25601  0D7D  0A3B               	incf	___fladd@bexp,w
 25602  0D7E  1903               	btfsc	3,2
 25603  0D7F  2D81               	goto	u11881
 25604  0D80  2D82               	goto	u11880
 25605  0D81                     u11881:	
 25606  0D81  2D87               	goto	l10911
 25607  0D82                     u11880:	
 25608  0D82                     l10909:	
 25609  0D82  083B               	movf	___fladd@bexp,w
 25610  0D83  1D03               	btfss	3,2
 25611  0D84  2D86               	goto	u11891
 25612  0D85  2D87               	goto	u11890
 25613  0D86                     u11891:	
 25614  0D86  2D95               	goto	l10917
 25615  0D87                     u11890:	
 25616  0D87                     l10911:	
 25617  0D87  3000               	movlw	0
 25618  0D88  00AC               	movwf	___fladd@b+3
 25619  0D89  3000               	movlw	0
 25620  0D8A  00AB               	movwf	___fladd@b+2
 25621  0D8B  3000               	movlw	0
 25622  0D8C  00AA               	movwf	___fladd@b+1
 25623  0D8D  3000               	movlw	0
 25624  0D8E  00A9               	movwf	___fladd@b
 25625  0D8F                     l10913:	
 25626  0D8F  083B               	movf	___fladd@bexp,w
 25627  0D90  1D03               	btfss	3,2
 25628  0D91  2D93               	goto	u11901
 25629  0D92  2D94               	goto	u11900
 25630  0D93                     u11901:	
 25631  0D93  2D95               	goto	l10917
 25632  0D94                     u11900:	
 25633  0D94                     l10915:	
 25634  0D94  01B9               	clrf	___fladd@signs
 25635  0D95                     l10917:	
 25636  0D95  1C3B               	btfss	___fladd@bexp,0
 25637  0D96  2D98               	goto	u11911
 25638  0D97  2D99               	goto	u11910
 25639  0D98                     u11911:	
 25640  0D98  2D9B               	goto	l10921
 25641  0D99                     u11910:	
 25642  0D99                     l10919:	
 25643  0D99  17AB               	bsf	___fladd@b+2,7
 25644  0D9A  2D9F               	goto	l2101
 25645  0D9B                     l10921:	
 25646  0D9B  307F               	movlw	127
 25647  0D9C  00B1               	movwf	??___fladd
 25648  0D9D  0831               	movf	??___fladd,w
 25649  0D9E  05AB               	andwf	___fladd@b+2,f
 25650  0D9F                     l2101:	
 25651  0D9F  363B               	lsrf	___fladd@bexp,w
 25652  0DA0  00B1               	movwf	??___fladd
 25653  0DA1  0831               	movf	??___fladd,w
 25654  0DA2  00AC               	movwf	___fladd@b+3
 25655  0DA3                     l10923:	
 25656  0DA3  1FB9               	btfss	___fladd@signs,7
 25657  0DA4  2DA6               	goto	u11921
 25658  0DA5  2DA7               	goto	u11920
 25659  0DA6                     u11921:	
 25660  0DA6  2DA8               	goto	l2102
 25661  0DA7                     u11920:	
 25662  0DA7                     l10925:	
 25663  0DA7  17AC               	bsf	___fladd@b+3,7
 25664  0DA8                     l2102:	
 25665  0DA8                     l2072:	
 25666  0DA8  0008               	return
 25667  0DA9                     __end_of___fladd:	
 25668                           
 25669                           	psect	text79
 25670  0DA9                     __ptext79:	
 25671 ;; *************** function ___flmul *****************
 25672 ;; Defined at:
 25673 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 25674 ;; Parameters:    Size  Location     Type
 25675 ;;  b               4   40[BANK0 ] unsigned char 
 25676 ;;  a               4   44[BANK0 ] unsigned char 
 25677 ;; Auto vars:     Size  Location     Type
 25678 ;;  prod            4   60[BANK0 ] struct .
 25679 ;;  grs             4   56[BANK0 ] unsigned long 
 25680 ;;  temp            2   64[BANK0 ] struct .
 25681 ;;  bexp            1   55[BANK0 ] unsigned char 
 25682 ;;  aexp            1   54[BANK0 ] unsigned char 
 25683 ;;  sign            1   53[BANK0 ] unsigned char 
 25684 ;; Return value:  Size  Location     Type
 25685 ;;                  4   40[BANK0 ] unsigned char 
 25686 ;; Registers used:
 25687 ;;		wreg, status,2, status,0, pclath, cstack
 25688 ;; Tracked objects:
 25689 ;;		On entry : 0/0
 25690 ;;		On exit  : 0/0
 25691 ;;		Unchanged: 0/0
 25692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25693 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25694 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25695 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25696 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25697 ;;Total ram usage:       26 bytes
 25698 ;; Hardware stack levels used:    1
 25699 ;; Hardware stack levels required when called:    5
 25700 ;; This function calls:
 25701 ;;		__Umul8_16
 25702 ;; This function is called by:
 25703 ;;		_LED_setColor
 25704 ;;		_beatBrightnessCalculation
 25705 ;;		_LED_task_ANIMATION
 25706 ;;		_HueToRGB
 25707 ;;		_HSLToRGB
 25708 ;; This function uses a non-reentrant model
 25709 ;;
 25710                           
 25711                           
 25712                           ;psect for function ___flmul
 25713  0DA9                     ___flmul:	
 25714  0DA9                     l11185:	
 25715                           ;incstack = 0
 25716                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 25717                           
 25718  0DA9  0140               	movlb	0	; select bank0
 25719  0DAA  084B               	movf	___flmul@b+3,w
 25720  0DAB  3980               	andlw	128
 25721  0DAC  00D0               	movwf	??___flmul
 25722  0DAD  0850               	movf	??___flmul,w
 25723  0DAE  00D5               	movwf	___flmul@sign
 25724  0DAF                     l11187:	
 25725  0DAF  354B               	lslf	___flmul@b+3,w
 25726  0DB0  00D0               	movwf	??___flmul
 25727  0DB1  0850               	movf	??___flmul,w
 25728  0DB2  00D7               	movwf	___flmul@bexp
 25729  0DB3                     l11189:	
 25730  0DB3  1FCA               	btfss	___flmul@b+2,7
 25731  0DB4  2DB6               	goto	u12431
 25732  0DB5  2DB7               	goto	u12430
 25733  0DB6                     u12431:	
 25734  0DB6  2DB8               	goto	l11193
 25735  0DB7                     u12430:	
 25736  0DB7                     l11191:	
 25737  0DB7  1457               	bsf	___flmul@bexp,0
 25738  0DB8                     l11193:	
 25739  0DB8  0857               	movf	___flmul@bexp,w
 25740  0DB9  1903               	btfsc	3,2
 25741  0DBA  2DBC               	goto	u12441
 25742  0DBB  2DBD               	goto	u12440
 25743  0DBC                     u12441:	
 25744  0DBC  2DCC               	goto	l11201
 25745  0DBD                     u12440:	
 25746  0DBD                     l11195:	
 25747  0DBD  0A57               	incf	___flmul@bexp,w
 25748  0DBE  1D03               	btfss	3,2
 25749  0DBF  2DC1               	goto	u12451
 25750  0DC0  2DC2               	goto	u12450
 25751  0DC1                     u12451:	
 25752  0DC1  2DCA               	goto	l11199
 25753  0DC2                     u12450:	
 25754  0DC2                     l11197:	
 25755  0DC2  3000               	movlw	0
 25756  0DC3  00CB               	movwf	___flmul@b+3
 25757  0DC4  3000               	movlw	0
 25758  0DC5  00CA               	movwf	___flmul@b+2
 25759  0DC6  3000               	movlw	0
 25760  0DC7  00C9               	movwf	___flmul@b+1
 25761  0DC8  3000               	movlw	0
 25762  0DC9  00C8               	movwf	___flmul@b
 25763  0DCA                     l11199:	
 25764  0DCA  17CA               	bsf	___flmul@b+2,7
 25765  0DCB  2DD4               	goto	l11203
 25766  0DCC                     l11201:	
 25767  0DCC  3000               	movlw	0
 25768  0DCD  00CB               	movwf	___flmul@b+3
 25769  0DCE  3000               	movlw	0
 25770  0DCF  00CA               	movwf	___flmul@b+2
 25771  0DD0  3000               	movlw	0
 25772  0DD1  00C9               	movwf	___flmul@b+1
 25773  0DD2  3000               	movlw	0
 25774  0DD3  00C8               	movwf	___flmul@b
 25775  0DD4                     l11203:	
 25776  0DD4  084F               	movf	___flmul@a+3,w
 25777  0DD5  3980               	andlw	128
 25778  0DD6  00D0               	movwf	??___flmul
 25779  0DD7  0850               	movf	??___flmul,w
 25780  0DD8  06D5               	xorwf	___flmul@sign,f
 25781  0DD9                     l11205:	
 25782  0DD9  354F               	lslf	___flmul@a+3,w
 25783  0DDA  00D0               	movwf	??___flmul
 25784  0DDB  0850               	movf	??___flmul,w
 25785  0DDC  00D6               	movwf	___flmul@aexp
 25786  0DDD                     l11207:	
 25787  0DDD  1FCE               	btfss	___flmul@a+2,7
 25788  0DDE  2DE0               	goto	u12461
 25789  0DDF  2DE1               	goto	u12460
 25790  0DE0                     u12461:	
 25791  0DE0  2DE2               	goto	l11211
 25792  0DE1                     u12460:	
 25793  0DE1                     l11209:	
 25794  0DE1  1456               	bsf	___flmul@aexp,0
 25795  0DE2                     l11211:	
 25796  0DE2  0856               	movf	___flmul@aexp,w
 25797  0DE3  1903               	btfsc	3,2
 25798  0DE4  2DE6               	goto	u12471
 25799  0DE5  2DE7               	goto	u12470
 25800  0DE6                     u12471:	
 25801  0DE6  2DF6               	goto	l11219
 25802  0DE7                     u12470:	
 25803  0DE7                     l11213:	
 25804  0DE7  0A56               	incf	___flmul@aexp,w
 25805  0DE8  1D03               	btfss	3,2
 25806  0DE9  2DEB               	goto	u12481
 25807  0DEA  2DEC               	goto	u12480
 25808  0DEB                     u12481:	
 25809  0DEB  2DF4               	goto	l11217
 25810  0DEC                     u12480:	
 25811  0DEC                     l11215:	
 25812  0DEC  3000               	movlw	0
 25813  0DED  00CF               	movwf	___flmul@a+3
 25814  0DEE  3000               	movlw	0
 25815  0DEF  00CE               	movwf	___flmul@a+2
 25816  0DF0  3000               	movlw	0
 25817  0DF1  00CD               	movwf	___flmul@a+1
 25818  0DF2  3000               	movlw	0
 25819  0DF3  00CC               	movwf	___flmul@a
 25820  0DF4                     l11217:	
 25821  0DF4  17CE               	bsf	___flmul@a+2,7
 25822  0DF5  2DFE               	goto	l11221
 25823  0DF6                     l11219:	
 25824  0DF6  3000               	movlw	0
 25825  0DF7  00CF               	movwf	___flmul@a+3
 25826  0DF8  3000               	movlw	0
 25827  0DF9  00CE               	movwf	___flmul@a+2
 25828  0DFA  3000               	movlw	0
 25829  0DFB  00CD               	movwf	___flmul@a+1
 25830  0DFC  3000               	movlw	0
 25831  0DFD  00CC               	movwf	___flmul@a
 25832  0DFE                     l11221:	
 25833  0DFE  0856               	movf	___flmul@aexp,w
 25834  0DFF  1903               	btfsc	3,2
 25835  0E00  2E02               	goto	u12491
 25836  0E01  2E03               	goto	u12490
 25837  0E02                     u12491:	
 25838  0E02  2E08               	goto	l11225
 25839  0E03                     u12490:	
 25840  0E03                     l11223:	
 25841  0E03  0857               	movf	___flmul@bexp,w
 25842  0E04  1D03               	btfss	3,2
 25843  0E05  2E07               	goto	u12501
 25844  0E06  2E08               	goto	u12500
 25845  0E07                     u12501:	
 25846  0E07  2E11               	goto	l11229
 25847  0E08                     u12500:	
 25848  0E08                     l11225:	
 25849  0E08  3000               	movlw	0
 25850  0E09  00CB               	movwf	?___flmul+3
 25851  0E0A  3000               	movlw	0
 25852  0E0B  00CA               	movwf	?___flmul+2
 25853  0E0C  3000               	movlw	0
 25854  0E0D  00C9               	movwf	?___flmul+1
 25855  0E0E  3000               	movlw	0
 25856  0E0F  00C8               	movwf	?___flmul
 25857  0E10  2FFF               	goto	l2155
 25858  0E11                     l11229:	
 25859  0E11  0848               	movf	___flmul@b,w
 25860  0E12  00D0               	movwf	??___flmul
 25861  0E13  0850               	movf	??___flmul,w
 25862  0E14  00A0               	movwf	__Umul8_16@multiplicand
 25863  0E15  084E               	movf	___flmul@a+2,w
 25864  0E16  31A0  2087  318D   	fcall	__Umul8_16
 25865  0E19  0140               	movlb	0	; select bank0
 25866  0E1A  0821               	movf	?__Umul8_16+1,w
 25867  0E1B  00E1               	movwf	___flmul@temp+1
 25868  0E1C  0820               	movf	?__Umul8_16,w
 25869  0E1D  00E0               	movwf	___flmul@temp
 25870  0E1E                     l11231:	
 25871  0E1E  0860               	movf	___flmul@temp,w
 25872  0E1F  00D0               	movwf	??___flmul
 25873  0E20  01D1               	clrf	??___flmul+1
 25874  0E21  01D2               	clrf	??___flmul+2
 25875  0E22  01D3               	clrf	??___flmul+3
 25876  0E23  0853               	movf	??___flmul+3,w
 25877  0E24  00DB               	movwf	___flmul@grs+3
 25878  0E25  0852               	movf	??___flmul+2,w
 25879  0E26  00DA               	movwf	___flmul@grs+2
 25880  0E27  0851               	movf	??___flmul+1,w
 25881  0E28  00D9               	movwf	___flmul@grs+1
 25882  0E29  0850               	movf	??___flmul,w
 25883  0E2A  00D8               	movwf	___flmul@grs
 25884  0E2B                     l11233:	
 25885  0E2B  0861               	movf	___flmul@temp+1,w
 25886  0E2C  00D0               	movwf	??___flmul
 25887  0E2D  01D1               	clrf	??___flmul+1
 25888  0E2E  01D2               	clrf	??___flmul+2
 25889  0E2F  01D3               	clrf	??___flmul+3
 25890  0E30  0853               	movf	??___flmul+3,w
 25891  0E31  00DF               	movwf	___flmul@prod+3
 25892  0E32  0852               	movf	??___flmul+2,w
 25893  0E33  00DE               	movwf	___flmul@prod+2
 25894  0E34  0851               	movf	??___flmul+1,w
 25895  0E35  00DD               	movwf	___flmul@prod+1
 25896  0E36  0850               	movf	??___flmul,w
 25897  0E37  00DC               	movwf	___flmul@prod
 25898  0E38  0849               	movf	___flmul@b+1,w
 25899  0E39  00D0               	movwf	??___flmul
 25900  0E3A  0850               	movf	??___flmul,w
 25901  0E3B  00A0               	movwf	__Umul8_16@multiplicand
 25902  0E3C  084D               	movf	___flmul@a+1,w
 25903  0E3D  31A0  2087  318D   	fcall	__Umul8_16
 25904  0E40  0140               	movlb	0	; select bank0
 25905  0E41  0821               	movf	?__Umul8_16+1,w
 25906  0E42  00E1               	movwf	___flmul@temp+1
 25907  0E43  0820               	movf	?__Umul8_16,w
 25908  0E44  00E0               	movwf	___flmul@temp
 25909  0E45                     l11235:	
 25910  0E45  0860               	movf	___flmul@temp,w
 25911  0E46  00D0               	movwf	??___flmul
 25912  0E47  01D1               	clrf	??___flmul+1
 25913  0E48  01D2               	clrf	??___flmul+2
 25914  0E49  01D3               	clrf	??___flmul+3
 25915  0E4A  0850               	movf	??___flmul,w
 25916  0E4B  07D8               	addwf	___flmul@grs,f
 25917  0E4C  0851               	movf	??___flmul+1,w
 25918  0E4D  3DD9               	addwfc	___flmul@grs+1,f
 25919  0E4E  0852               	movf	??___flmul+2,w
 25920  0E4F  3DDA               	addwfc	___flmul@grs+2,f
 25921  0E50  0853               	movf	??___flmul+3,w
 25922  0E51  3DDB               	addwfc	___flmul@grs+3,f
 25923  0E52                     l11237:	
 25924  0E52  0861               	movf	___flmul@temp+1,w
 25925  0E53  00D0               	movwf	??___flmul
 25926  0E54  01D1               	clrf	??___flmul+1
 25927  0E55  01D2               	clrf	??___flmul+2
 25928  0E56  01D3               	clrf	??___flmul+3
 25929  0E57  0850               	movf	??___flmul,w
 25930  0E58  07DC               	addwf	___flmul@prod,f
 25931  0E59  0851               	movf	??___flmul+1,w
 25932  0E5A  3DDD               	addwfc	___flmul@prod+1,f
 25933  0E5B  0852               	movf	??___flmul+2,w
 25934  0E5C  3DDE               	addwfc	___flmul@prod+2,f
 25935  0E5D  0853               	movf	??___flmul+3,w
 25936  0E5E  3DDF               	addwfc	___flmul@prod+3,f
 25937  0E5F  084A               	movf	___flmul@b+2,w
 25938  0E60  00D0               	movwf	??___flmul
 25939  0E61  0850               	movf	??___flmul,w
 25940  0E62  00A0               	movwf	__Umul8_16@multiplicand
 25941  0E63  084C               	movf	___flmul@a,w
 25942  0E64  31A0  2087  318D   	fcall	__Umul8_16
 25943  0E67  0140               	movlb	0	; select bank0
 25944  0E68  0821               	movf	?__Umul8_16+1,w
 25945  0E69  00E1               	movwf	___flmul@temp+1
 25946  0E6A  0820               	movf	?__Umul8_16,w
 25947  0E6B  00E0               	movwf	___flmul@temp
 25948  0E6C                     l11239:	
 25949  0E6C  0860               	movf	___flmul@temp,w
 25950  0E6D  00D0               	movwf	??___flmul
 25951  0E6E  01D1               	clrf	??___flmul+1
 25952  0E6F  01D2               	clrf	??___flmul+2
 25953  0E70  01D3               	clrf	??___flmul+3
 25954  0E71  0850               	movf	??___flmul,w
 25955  0E72  07D8               	addwf	___flmul@grs,f
 25956  0E73  0851               	movf	??___flmul+1,w
 25957  0E74  3DD9               	addwfc	___flmul@grs+1,f
 25958  0E75  0852               	movf	??___flmul+2,w
 25959  0E76  3DDA               	addwfc	___flmul@grs+2,f
 25960  0E77  0853               	movf	??___flmul+3,w
 25961  0E78  3DDB               	addwfc	___flmul@grs+3,f
 25962  0E79                     l11241:	
 25963  0E79  0861               	movf	___flmul@temp+1,w
 25964  0E7A  00D0               	movwf	??___flmul
 25965  0E7B  01D1               	clrf	??___flmul+1
 25966  0E7C  01D2               	clrf	??___flmul+2
 25967  0E7D  01D3               	clrf	??___flmul+3
 25968  0E7E  0850               	movf	??___flmul,w
 25969  0E7F  07DC               	addwf	___flmul@prod,f
 25970  0E80  0851               	movf	??___flmul+1,w
 25971  0E81  3DDD               	addwfc	___flmul@prod+1,f
 25972  0E82  0852               	movf	??___flmul+2,w
 25973  0E83  3DDE               	addwfc	___flmul@prod+2,f
 25974  0E84  0853               	movf	??___flmul+3,w
 25975  0E85  3DDF               	addwfc	___flmul@prod+3,f
 25976  0E86                     l11243:	
 25977  0E86  3008               	movlw	8
 25978  0E87                     u12515:	
 25979  0E87  35D8               	lslf	___flmul@grs,f
 25980  0E88  0DD9               	rlf	___flmul@grs+1,f
 25981  0E89  0DDA               	rlf	___flmul@grs+2,f
 25982  0E8A  0DDB               	rlf	___flmul@grs+3,f
 25983  0E8B  0B89               	decfsz	9,f
 25984  0E8C  2E87               	goto	u12515
 25985  0E8D                     l11245:	
 25986  0E8D  0849               	movf	___flmul@b+1,w
 25987  0E8E  00D0               	movwf	??___flmul
 25988  0E8F  0850               	movf	??___flmul,w
 25989  0E90  00A0               	movwf	__Umul8_16@multiplicand
 25990  0E91  084C               	movf	___flmul@a,w
 25991  0E92  31A0  2087  318D   	fcall	__Umul8_16
 25992  0E95  0140               	movlb	0	; select bank0
 25993  0E96  0821               	movf	?__Umul8_16+1,w
 25994  0E97  00E1               	movwf	___flmul@temp+1
 25995  0E98  0820               	movf	?__Umul8_16,w
 25996  0E99  00E0               	movwf	___flmul@temp
 25997  0E9A                     l11247:	
 25998  0E9A  0860               	movf	___flmul@temp,w
 25999  0E9B  07D8               	addwf	___flmul@grs,f
 26000  0E9C  0861               	movf	___flmul@temp+1,w
 26001  0E9D  3DD9               	addwfc	___flmul@grs+1,f
 26002  0E9E  3000               	movlw	0
 26003  0E9F  3DDA               	addwfc	___flmul@grs+2,f
 26004  0EA0  3DDB               	addwfc	___flmul@grs+3,f
 26005  0EA1                     l11249:	
 26006  0EA1  0848               	movf	___flmul@b,w
 26007  0EA2  00D0               	movwf	??___flmul
 26008  0EA3  0850               	movf	??___flmul,w
 26009  0EA4  00A0               	movwf	__Umul8_16@multiplicand
 26010  0EA5  084D               	movf	___flmul@a+1,w
 26011  0EA6  31A0  2087  318D   	fcall	__Umul8_16
 26012  0EA9  0140               	movlb	0	; select bank0
 26013  0EAA  0821               	movf	?__Umul8_16+1,w
 26014  0EAB  00E1               	movwf	___flmul@temp+1
 26015  0EAC  0820               	movf	?__Umul8_16,w
 26016  0EAD  00E0               	movwf	___flmul@temp
 26017  0EAE                     l11251:	
 26018  0EAE  0860               	movf	___flmul@temp,w
 26019  0EAF  07D8               	addwf	___flmul@grs,f
 26020  0EB0  0861               	movf	___flmul@temp+1,w
 26021  0EB1  3DD9               	addwfc	___flmul@grs+1,f
 26022  0EB2  3000               	movlw	0
 26023  0EB3  3DDA               	addwfc	___flmul@grs+2,f
 26024  0EB4  3DDB               	addwfc	___flmul@grs+3,f
 26025  0EB5                     l11253:	
 26026  0EB5  3008               	movlw	8
 26027  0EB6                     u12525:	
 26028  0EB6  35D8               	lslf	___flmul@grs,f
 26029  0EB7  0DD9               	rlf	___flmul@grs+1,f
 26030  0EB8  0DDA               	rlf	___flmul@grs+2,f
 26031  0EB9  0DDB               	rlf	___flmul@grs+3,f
 26032  0EBA  0B89               	decfsz	9,f
 26033  0EBB  2EB6               	goto	u12525
 26034  0EBC  0848               	movf	___flmul@b,w
 26035  0EBD  00D0               	movwf	??___flmul
 26036  0EBE  0850               	movf	??___flmul,w
 26037  0EBF  00A0               	movwf	__Umul8_16@multiplicand
 26038  0EC0  084C               	movf	___flmul@a,w
 26039  0EC1  31A0  2087  318D   	fcall	__Umul8_16
 26040  0EC4  0140               	movlb	0	; select bank0
 26041  0EC5  0821               	movf	?__Umul8_16+1,w
 26042  0EC6  00E1               	movwf	___flmul@temp+1
 26043  0EC7  0820               	movf	?__Umul8_16,w
 26044  0EC8  00E0               	movwf	___flmul@temp
 26045  0EC9                     l11255:	
 26046  0EC9  0860               	movf	___flmul@temp,w
 26047  0ECA  07D8               	addwf	___flmul@grs,f
 26048  0ECB  0861               	movf	___flmul@temp+1,w
 26049  0ECC  3DD9               	addwfc	___flmul@grs+1,f
 26050  0ECD  3000               	movlw	0
 26051  0ECE  3DDA               	addwfc	___flmul@grs+2,f
 26052  0ECF  3DDB               	addwfc	___flmul@grs+3,f
 26053  0ED0                     l11257:	
 26054  0ED0  0849               	movf	___flmul@b+1,w
 26055  0ED1  00D0               	movwf	??___flmul
 26056  0ED2  0850               	movf	??___flmul,w
 26057  0ED3  00A0               	movwf	__Umul8_16@multiplicand
 26058  0ED4  084E               	movf	___flmul@a+2,w
 26059  0ED5  31A0  2087  318D   	fcall	__Umul8_16
 26060  0ED8  0140               	movlb	0	; select bank0
 26061  0ED9  0821               	movf	?__Umul8_16+1,w
 26062  0EDA  00E1               	movwf	___flmul@temp+1
 26063  0EDB  0820               	movf	?__Umul8_16,w
 26064  0EDC  00E0               	movwf	___flmul@temp
 26065  0EDD  0860               	movf	___flmul@temp,w
 26066  0EDE  07DC               	addwf	___flmul@prod,f
 26067  0EDF  0861               	movf	___flmul@temp+1,w
 26068  0EE0  3DDD               	addwfc	___flmul@prod+1,f
 26069  0EE1  3000               	movlw	0
 26070  0EE2  3DDE               	addwfc	___flmul@prod+2,f
 26071  0EE3  3DDF               	addwfc	___flmul@prod+3,f
 26072  0EE4                     l11259:	
 26073  0EE4  084A               	movf	___flmul@b+2,w
 26074  0EE5  00D0               	movwf	??___flmul
 26075  0EE6  0850               	movf	??___flmul,w
 26076  0EE7  00A0               	movwf	__Umul8_16@multiplicand
 26077  0EE8  084D               	movf	___flmul@a+1,w
 26078  0EE9  31A0  2087  318D   	fcall	__Umul8_16
 26079  0EEC  0140               	movlb	0	; select bank0
 26080  0EED  0821               	movf	?__Umul8_16+1,w
 26081  0EEE  00E1               	movwf	___flmul@temp+1
 26082  0EEF  0820               	movf	?__Umul8_16,w
 26083  0EF0  00E0               	movwf	___flmul@temp
 26084  0EF1                     l11261:	
 26085  0EF1  0860               	movf	___flmul@temp,w
 26086  0EF2  07DC               	addwf	___flmul@prod,f
 26087  0EF3  0861               	movf	___flmul@temp+1,w
 26088  0EF4  3DDD               	addwfc	___flmul@prod+1,f
 26089  0EF5  3000               	movlw	0
 26090  0EF6  3DDE               	addwfc	___flmul@prod+2,f
 26091  0EF7  3DDF               	addwfc	___flmul@prod+3,f
 26092  0EF8  084A               	movf	___flmul@b+2,w
 26093  0EF9  00D0               	movwf	??___flmul
 26094  0EFA  0850               	movf	??___flmul,w
 26095  0EFB  00A0               	movwf	__Umul8_16@multiplicand
 26096  0EFC  084E               	movf	___flmul@a+2,w
 26097  0EFD  31A0  2087  318D   	fcall	__Umul8_16
 26098  0F00  0140               	movlb	0	; select bank0
 26099  0F01  0821               	movf	?__Umul8_16+1,w
 26100  0F02  00E1               	movwf	___flmul@temp+1
 26101  0F03  0820               	movf	?__Umul8_16,w
 26102  0F04  00E0               	movwf	___flmul@temp
 26103  0F05                     l11263:	
 26104  0F05  0860               	movf	___flmul@temp,w
 26105  0F06  00D0               	movwf	??___flmul
 26106  0F07  0861               	movf	___flmul@temp+1,w
 26107  0F08  00D1               	movwf	??___flmul+1
 26108  0F09  01D2               	clrf	??___flmul+2
 26109  0F0A  01D3               	clrf	??___flmul+3
 26110  0F0B  3008               	movlw	8
 26111  0F0C                     u12535:	
 26112  0F0C  35D0               	lslf	??___flmul,f
 26113  0F0D  0DD1               	rlf	??___flmul+1,f
 26114  0F0E  0DD2               	rlf	??___flmul+2,f
 26115  0F0F  0DD3               	rlf	??___flmul+3,f
 26116  0F10                     u12530:	
 26117  0F10  0B89               	decfsz	9,f
 26118  0F11  2F0C               	goto	u12535
 26119  0F12  0850               	movf	??___flmul,w
 26120  0F13  07DC               	addwf	___flmul@prod,f
 26121  0F14  0851               	movf	??___flmul+1,w
 26122  0F15  3DDD               	addwfc	___flmul@prod+1,f
 26123  0F16  0852               	movf	??___flmul+2,w
 26124  0F17  3DDE               	addwfc	___flmul@prod+2,f
 26125  0F18  0853               	movf	??___flmul+3,w
 26126  0F19  3DDF               	addwfc	___flmul@prod+3,f
 26127  0F1A                     l11265:	
 26128  0F1A  0858               	movf	___flmul@grs,w
 26129  0F1B  00D0               	movwf	??___flmul
 26130  0F1C  0859               	movf	___flmul@grs+1,w
 26131  0F1D  00D1               	movwf	??___flmul+1
 26132  0F1E  085A               	movf	___flmul@grs+2,w
 26133  0F1F  00D2               	movwf	??___flmul+2
 26134  0F20  085B               	movf	___flmul@grs+3,w
 26135  0F21  00D3               	movwf	??___flmul+3
 26136  0F22  3018               	movlw	24
 26137  0F23                     u12545:	
 26138  0F23  36D3               	lsrf	??___flmul+3,f
 26139  0F24  0CD2               	rrf	??___flmul+2,f
 26140  0F25  0CD1               	rrf	??___flmul+1,f
 26141  0F26  0CD0               	rrf	??___flmul,f
 26142  0F27                     u12540:	
 26143  0F27  0B89               	decfsz	9,f
 26144  0F28  2F23               	goto	u12545
 26145  0F29  0850               	movf	??___flmul,w
 26146  0F2A  07DC               	addwf	___flmul@prod,f
 26147  0F2B  0851               	movf	??___flmul+1,w
 26148  0F2C  3DDD               	addwfc	___flmul@prod+1,f
 26149  0F2D  0852               	movf	??___flmul+2,w
 26150  0F2E  3DDE               	addwfc	___flmul@prod+2,f
 26151  0F2F  0853               	movf	??___flmul+3,w
 26152  0F30  3DDF               	addwfc	___flmul@prod+3,f
 26153  0F31                     l11267:	
 26154  0F31  3008               	movlw	8
 26155  0F32                     u12555:	
 26156  0F32  35D8               	lslf	___flmul@grs,f
 26157  0F33  0DD9               	rlf	___flmul@grs+1,f
 26158  0F34  0DDA               	rlf	___flmul@grs+2,f
 26159  0F35  0DDB               	rlf	___flmul@grs+3,f
 26160  0F36  0B89               	decfsz	9,f
 26161  0F37  2F32               	goto	u12555
 26162  0F38                     l11269:	
 26163  0F38  0857               	movf	___flmul@bexp,w
 26164  0F39  0756               	addwf	___flmul@aexp,w
 26165  0F3A  00D0               	movwf	??___flmul
 26166  0F3B  01D1               	clrf	??___flmul+1
 26167  0F3C  0DD1               	rlf	??___flmul+1,f
 26168  0F3D  0850               	movf	??___flmul,w
 26169  0F3E  3E82               	addlw	130
 26170  0F3F  00E0               	movwf	___flmul@temp
 26171  0F40  30FF               	movlw	255
 26172  0F41  3D51               	addwfc	??___flmul+1,w
 26173  0F42  00E1               	movwf	___flmul@temp+1
 26174  0F43  2F5B               	goto	l11281
 26175  0F44                     l11271:	
 26176  0F44  3001               	movlw	1
 26177  0F45                     u12565:	
 26178  0F45  35DC               	lslf	___flmul@prod,f
 26179  0F46  0DDD               	rlf	___flmul@prod+1,f
 26180  0F47  0DDE               	rlf	___flmul@prod+2,f
 26181  0F48  0DDF               	rlf	___flmul@prod+3,f
 26182  0F49  0B89               	decfsz	9,f
 26183  0F4A  2F45               	goto	u12565
 26184  0F4B                     l11273:	
 26185  0F4B  1FDB               	btfss	___flmul@grs+3,7
 26186  0F4C  2F4E               	goto	u12571
 26187  0F4D  2F4F               	goto	u12570
 26188  0F4E                     u12571:	
 26189  0F4E  2F50               	goto	l11277
 26190  0F4F                     u12570:	
 26191  0F4F                     l11275:	
 26192  0F4F  145C               	bsf	___flmul@prod,0
 26193  0F50                     l11277:	
 26194  0F50  3001               	movlw	1
 26195  0F51                     u12585:	
 26196  0F51  35D8               	lslf	___flmul@grs,f
 26197  0F52  0DD9               	rlf	___flmul@grs+1,f
 26198  0F53  0DDA               	rlf	___flmul@grs+2,f
 26199  0F54  0DDB               	rlf	___flmul@grs+3,f
 26200  0F55  0B89               	decfsz	9,f
 26201  0F56  2F51               	goto	u12585
 26202  0F57                     l11279:	
 26203  0F57  30FF               	movlw	255
 26204  0F58  07E0               	addwf	___flmul@temp,f
 26205  0F59  30FF               	movlw	255
 26206  0F5A  3DE1               	addwfc	___flmul@temp+1,f
 26207  0F5B                     l11281:	
 26208  0F5B  1FDE               	btfss	___flmul@prod+2,7
 26209  0F5C  2F5E               	goto	u12591
 26210  0F5D  2F5F               	goto	u12590
 26211  0F5E                     u12591:	
 26212  0F5E  2F44               	goto	l11271
 26213  0F5F                     u12590:	
 26214  0F5F                     l11283:	
 26215  0F5F  01D6               	clrf	___flmul@aexp
 26216  0F60                     l11285:	
 26217  0F60  1FDB               	btfss	___flmul@grs+3,7
 26218  0F61  2F63               	goto	u12601
 26219  0F62  2F64               	goto	u12600
 26220  0F63                     u12601:	
 26221  0F63  2F80               	goto	l11293
 26222  0F64                     u12600:	
 26223  0F64                     l11287:	
 26224  0F64  30FF               	movlw	255
 26225  0F65  0558               	andwf	___flmul@grs,w
 26226  0F66  00D0               	movwf	??___flmul
 26227  0F67  30FF               	movlw	255
 26228  0F68  0559               	andwf	___flmul@grs+1,w
 26229  0F69  00D1               	movwf	??___flmul+1
 26230  0F6A  30FF               	movlw	255
 26231  0F6B  055A               	andwf	___flmul@grs+2,w
 26232  0F6C  00D2               	movwf	??___flmul+2
 26233  0F6D  307F               	movlw	127
 26234  0F6E  055B               	andwf	___flmul@grs+3,w
 26235  0F6F  00D3               	movwf	??___flmul+3
 26236  0F70  0853               	movf	??___flmul+3,w
 26237  0F71  0452               	iorwf	??___flmul+2,w
 26238  0F72  0451               	iorwf	??___flmul+1,w
 26239  0F73  0450               	iorwf	??___flmul,w
 26240  0F74  1903               	skipnz
 26241  0F75  2F77               	goto	u12611
 26242  0F76  2F78               	goto	u12610
 26243  0F77                     u12611:	
 26244  0F77  2F7B               	goto	l2161
 26245  0F78                     u12610:	
 26246  0F78                     l11289:	
 26247  0F78  01D6               	clrf	___flmul@aexp
 26248  0F79  0AD6               	incf	___flmul@aexp,f
 26249  0F7A  2F80               	goto	l11293
 26250  0F7B                     l2161:	
 26251  0F7B  1C5C               	btfss	___flmul@prod,0
 26252  0F7C  2F7E               	goto	u12621
 26253  0F7D  2F7F               	goto	u12620
 26254  0F7E                     u12621:	
 26255  0F7E  2F80               	goto	l11293
 26256  0F7F                     u12620:	
 26257  0F7F  2F78               	goto	l11289
 26258  0F80                     l11293:	
 26259  0F80  0856               	movf	___flmul@aexp,w
 26260  0F81  1903               	btfsc	3,2
 26261  0F82  2F84               	goto	u12631
 26262  0F83  2F85               	goto	u12630
 26263  0F84                     u12631:	
 26264  0F84  2FAD               	goto	l11303
 26265  0F85                     u12630:	
 26266  0F85                     l11295:	
 26267  0F85  3001               	movlw	1
 26268  0F86  07DC               	addwf	___flmul@prod,f
 26269  0F87  3000               	movlw	0
 26270  0F88  3DDD               	addwfc	___flmul@prod+1,f
 26271  0F89  3000               	movlw	0
 26272  0F8A  3DDE               	addwfc	___flmul@prod+2,f
 26273  0F8B  3000               	movlw	0
 26274  0F8C  3DDF               	addwfc	___flmul@prod+3,f
 26275  0F8D                     l11297:	
 26276  0F8D  1C5F               	btfss	___flmul@prod+3,0
 26277  0F8E  2F90               	goto	u12641
 26278  0F8F  2F91               	goto	u12640
 26279  0F90                     u12641:	
 26280  0F90  2FAD               	goto	l11303
 26281  0F91                     u12640:	
 26282  0F91                     l11299:	
 26283  0F91  085C               	movf	___flmul@prod,w
 26284  0F92  00D0               	movwf	??___flmul
 26285  0F93  085D               	movf	___flmul@prod+1,w
 26286  0F94  00D1               	movwf	??___flmul+1
 26287  0F95  085E               	movf	___flmul@prod+2,w
 26288  0F96  00D2               	movwf	??___flmul+2
 26289  0F97  085F               	movf	___flmul@prod+3,w
 26290  0F98  00D3               	movwf	??___flmul+3
 26291  0F99  3001               	movlw	1
 26292  0F9A  00D4               	movwf	??___flmul+4
 26293  0F9B                     u12655:	
 26294  0F9B  37D3               	asrf	??___flmul+3,f
 26295  0F9C  0CD2               	rrf	??___flmul+2,f
 26296  0F9D  0CD1               	rrf	??___flmul+1,f
 26297  0F9E  0CD0               	rrf	??___flmul,f
 26298  0F9F                     u12650:	
 26299  0F9F  0BD4               	decfsz	??___flmul+4,f
 26300  0FA0  2F9B               	goto	u12655
 26301  0FA1  0853               	movf	??___flmul+3,w
 26302  0FA2  00DF               	movwf	___flmul@prod+3
 26303  0FA3  0852               	movf	??___flmul+2,w
 26304  0FA4  00DE               	movwf	___flmul@prod+2
 26305  0FA5  0851               	movf	??___flmul+1,w
 26306  0FA6  00DD               	movwf	___flmul@prod+1
 26307  0FA7  0850               	movf	??___flmul,w
 26308  0FA8  00DC               	movwf	___flmul@prod
 26309  0FA9                     l11301:	
 26310  0FA9  3001               	movlw	1
 26311  0FAA  07E0               	addwf	___flmul@temp,f
 26312  0FAB  3000               	movlw	0
 26313  0FAC  3DE1               	addwfc	___flmul@temp+1,f
 26314  0FAD                     l11303:	
 26315  0FAD  0861               	movf	___flmul@temp+1,w
 26316  0FAE  3A80               	xorlw	128
 26317  0FAF  00D0               	movwf	??___flmul
 26318  0FB0  3080               	movlw	128
 26319  0FB1  0250               	subwf	??___flmul,w
 26320  0FB2  1D03               	skipz
 26321  0FB3  2FB6               	goto	u12665
 26322  0FB4  30FF               	movlw	255
 26323  0FB5  0260               	subwf	___flmul@temp,w
 26324  0FB6                     u12665:	
 26325  0FB6  1C03               	skipc
 26326  0FB7  2FB9               	goto	u12661
 26327  0FB8  2FBA               	goto	u12660
 26328  0FB9                     u12661:	
 26329  0FB9  2FC4               	goto	l11307
 26330  0FBA                     u12660:	
 26331  0FBA                     l11305:	
 26332  0FBA  307F               	movlw	127
 26333  0FBB  0140               	movlb	0	; select bank0
 26334  0FBC  00DF               	movwf	___flmul@prod+3
 26335  0FBD  3080               	movlw	128
 26336  0FBE  00DE               	movwf	___flmul@prod+2
 26337  0FBF  3000               	movlw	0
 26338  0FC0  00DD               	movwf	___flmul@prod+1
 26339  0FC1  3000               	movlw	0
 26340  0FC2  00DC               	movwf	___flmul@prod
 26341  0FC3  2FF3               	goto	l2167
 26342  0FC4                     l11307:	
 26343  0FC4  0140               	movlb	0	; select bank0
 26344  0FC5  0861               	movf	___flmul@temp+1,w
 26345  0FC6  3A80               	xorlw	128
 26346  0FC7  00D0               	movwf	??___flmul
 26347  0FC8  3080               	movlw	128
 26348  0FC9  0250               	subwf	??___flmul,w
 26349  0FCA  1D03               	skipz
 26350  0FCB  2FCE               	goto	u12675
 26351  0FCC  3001               	movlw	1
 26352  0FCD  0260               	subwf	___flmul@temp,w
 26353  0FCE                     u12675:	
 26354  0FCE  1803               	skipnc
 26355  0FCF  2FD1               	goto	u12671
 26356  0FD0  2FD2               	goto	u12670
 26357  0FD1                     u12671:	
 26358  0FD1  2FDD               	goto	l11313
 26359  0FD2                     u12670:	
 26360  0FD2                     l11309:	
 26361  0FD2  3000               	movlw	0
 26362  0FD3  0140               	movlb	0	; select bank0
 26363  0FD4  00DF               	movwf	___flmul@prod+3
 26364  0FD5  3000               	movlw	0
 26365  0FD6  00DE               	movwf	___flmul@prod+2
 26366  0FD7  3000               	movlw	0
 26367  0FD8  00DD               	movwf	___flmul@prod+1
 26368  0FD9  3000               	movlw	0
 26369  0FDA  00DC               	movwf	___flmul@prod
 26370  0FDB                     l11311:	
 26371  0FDB  01D5               	clrf	___flmul@sign
 26372  0FDC  2FF3               	goto	l2167
 26373  0FDD                     l11313:	
 26374  0FDD  0140               	movlb	0	; select bank0
 26375  0FDE  0860               	movf	___flmul@temp,w
 26376  0FDF  00D0               	movwf	??___flmul
 26377  0FE0  0850               	movf	??___flmul,w
 26378  0FE1  00D7               	movwf	___flmul@bexp
 26379  0FE2  30FF               	movlw	255
 26380  0FE3  05DC               	andwf	___flmul@prod,f
 26381  0FE4  30FF               	movlw	255
 26382  0FE5  05DD               	andwf	___flmul@prod+1,f
 26383  0FE6  307F               	movlw	127
 26384  0FE7  05DE               	andwf	___flmul@prod+2,f
 26385  0FE8  3000               	movlw	0
 26386  0FE9  05DF               	andwf	___flmul@prod+3,f
 26387  0FEA                     l11315:	
 26388  0FEA  1C57               	btfss	___flmul@bexp,0
 26389  0FEB  2FED               	goto	u12681
 26390  0FEC  2FEE               	goto	u12680
 26391  0FED                     u12681:	
 26392  0FED  2FEF               	goto	l11319
 26393  0FEE                     u12680:	
 26394  0FEE                     l11317:	
 26395  0FEE  17DE               	bsf	___flmul@prod+2,7
 26396  0FEF                     l11319:	
 26397  0FEF  3657               	lsrf	___flmul@bexp,w
 26398  0FF0  00D0               	movwf	??___flmul
 26399  0FF1  0850               	movf	??___flmul,w
 26400  0FF2  00DF               	movwf	___flmul@prod+3
 26401  0FF3                     l2167:	
 26402  0FF3  0855               	movf	___flmul@sign,w
 26403  0FF4  00D0               	movwf	??___flmul
 26404  0FF5  0850               	movf	??___flmul,w
 26405  0FF6  04DF               	iorwf	___flmul@prod+3,f
 26406  0FF7                     l11321:	
 26407  0FF7  085F               	movf	___flmul@prod+3,w
 26408  0FF8  00CB               	movwf	?___flmul+3
 26409  0FF9  085E               	movf	___flmul@prod+2,w
 26410  0FFA  00CA               	movwf	?___flmul+2
 26411  0FFB  085D               	movf	___flmul@prod+1,w
 26412  0FFC  00C9               	movwf	?___flmul+1
 26413  0FFD  085C               	movf	___flmul@prod,w
 26414  0FFE  00C8               	movwf	?___flmul
 26415  0FFF                     l2155:	
 26416  0FFF  0008               	return
 26417  1000                     __end_of___flmul:	
 26418                           
 26419                           	psect	text80
 26420  2087                     __ptext80:	
 26421 ;; *************** function __Umul8_16 *****************
 26422 ;; Defined at:
 26423 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
 26424 ;; Parameters:    Size  Location     Type
 26425 ;;  multiplier      1    wreg     unsigned char 
 26426 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 26427 ;; Auto vars:     Size  Location     Type
 26428 ;;  multiplier      1    8[BANK0 ] unsigned char 
 26429 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 26430 ;;  product         2    4[BANK0 ] unsigned int 
 26431 ;; Return value:  Size  Location     Type
 26432 ;;                  2    0[BANK0 ] unsigned int 
 26433 ;; Registers used:
 26434 ;;		wreg, status,2, status,0
 26435 ;; Tracked objects:
 26436 ;;		On entry : 0/0
 26437 ;;		On exit  : 0/0
 26438 ;;		Unchanged: 0/0
 26439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26441 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26443 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26444 ;;Total ram usage:        9 bytes
 26445 ;; Hardware stack levels used:    1
 26446 ;; Hardware stack levels required when called:    4
 26447 ;; This function calls:
 26448 ;;		Nothing
 26449 ;; This function is called by:
 26450 ;;		___flmul
 26451 ;; This function uses a non-reentrant model
 26452 ;;
 26453                           
 26454                           
 26455                           ;psect for function __Umul8_16
 26456  2087                     __Umul8_16:	
 26457                           
 26458                           ;incstack = 0
 26459                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 26460                           ;__Umul8_16@multiplier stored from wreg
 26461  2087  0140               	movlb	0	; select bank0
 26462  2088  00A8               	movwf	__Umul8_16@multiplier
 26463  2089                     l10927:	
 26464  2089  01A4               	clrf	__Umul8_16@product
 26465  208A  01A5               	clrf	__Umul8_16@product+1
 26466  208B                     l10929:	
 26467  208B  0820               	movf	__Umul8_16@multiplicand,w
 26468  208C  00A2               	movwf	??__Umul8_16
 26469  208D  01A3               	clrf	??__Umul8_16+1
 26470  208E  0822               	movf	??__Umul8_16,w
 26471  208F  00A6               	movwf	__Umul8_16@word_mpld
 26472  2090  0823               	movf	??__Umul8_16+1,w
 26473  2091  00A7               	movwf	__Umul8_16@word_mpld+1
 26474  2092                     l10931:	
 26475  2092  1C28               	btfss	__Umul8_16@multiplier,0
 26476  2093  2895               	goto	u11931
 26477  2094  2896               	goto	u11930
 26478  2095                     u11931:	
 26479  2095  289A               	goto	l2245
 26480  2096                     u11930:	
 26481  2096                     l10933:	
 26482  2096  0826               	movf	__Umul8_16@word_mpld,w
 26483  2097  07A4               	addwf	__Umul8_16@product,f
 26484  2098  0827               	movf	__Umul8_16@word_mpld+1,w
 26485  2099  3DA5               	addwfc	__Umul8_16@product+1,f
 26486  209A                     l2245:	
 26487  209A  3001               	movlw	1
 26488  209B                     u11945:	
 26489  209B  35A6               	lslf	__Umul8_16@word_mpld,f
 26490  209C  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 26491  209D  0B89               	decfsz	9,f
 26492  209E  289B               	goto	u11945
 26493  209F  1003               	clrc
 26494  20A0  0CA8               	rrf	__Umul8_16@multiplier,f
 26495  20A1                     l10935:	
 26496  20A1  0828               	movf	__Umul8_16@multiplier,w
 26497  20A2  1D03               	btfss	3,2
 26498  20A3  28A5               	goto	u11951
 26499  20A4  28A6               	goto	u11950
 26500  20A5                     u11951:	
 26501  20A5  2892               	goto	l10931
 26502  20A6                     u11950:	
 26503  20A6                     l10937:	
 26504  20A6  0825               	movf	__Umul8_16@product+1,w
 26505  20A7  00A1               	movwf	?__Umul8_16+1
 26506  20A8  0824               	movf	__Umul8_16@product,w
 26507  20A9  00A0               	movwf	?__Umul8_16
 26508  20AA                     l2247:	
 26509  20AA  0008               	return
 26510  20AB                     __end_of__Umul8_16:	
 26511                           
 26512                           	psect	text81
 26513  18BB                     __ptext81:	
 26514 ;; *************** function ___flge *****************
 26515 ;; Defined at:
 26516 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 26517 ;; Parameters:    Size  Location     Type
 26518 ;;  ff1             4   66[BANK0 ] unsigned int 
 26519 ;;  ff2             4   70[BANK0 ] unsigned int 
 26520 ;; Auto vars:     Size  Location     Type
 26521 ;;		None
 26522 ;; Return value:  Size  Location     Type
 26523 ;;		None               void
 26524 ;; Registers used:
 26525 ;;		wreg, status,2, status,0
 26526 ;; Tracked objects:
 26527 ;;		On entry : 0/0
 26528 ;;		On exit  : 0/0
 26529 ;;		Unchanged: 0/0
 26530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26531 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26534 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26535 ;;Total ram usage:       12 bytes
 26536 ;; Hardware stack levels used:    1
 26537 ;; Hardware stack levels required when called:    4
 26538 ;; This function calls:
 26539 ;;		Nothing
 26540 ;; This function is called by:
 26541 ;;		_HueToRGB
 26542 ;;		_HSLToRGB
 26543 ;; This function uses a non-reentrant model
 26544 ;;
 26545                           
 26546                           
 26547                           ;psect for function ___flge
 26548  18BB                     ___flge:	
 26549  18BB                     l10983:	
 26550                           ;incstack = 0
 26551                           ; Regs used in ___flge: [wreg+status,2+status,0]
 26552                           
 26553  18BB  3000               	movlw	0
 26554  18BC  0140               	movlb	0	; select bank0
 26555  18BD  0562               	andwf	___flge@ff1,w
 26556  18BE  00EA               	movwf	??___flge
 26557  18BF  3000               	movlw	0
 26558  18C0  0563               	andwf	___flge@ff1+1,w
 26559  18C1  00EB               	movwf	??___flge+1
 26560  18C2  3080               	movlw	128
 26561  18C3  0564               	andwf	___flge@ff1+2,w
 26562  18C4  00EC               	movwf	??___flge+2
 26563  18C5  307F               	movlw	127
 26564  18C6  0565               	andwf	___flge@ff1+3,w
 26565  18C7  00ED               	movwf	??___flge+3
 26566  18C8  086D               	movf	??___flge+3,w
 26567  18C9  046C               	iorwf	??___flge+2,w
 26568  18CA  046B               	iorwf	??___flge+1,w
 26569  18CB  046A               	iorwf	??___flge,w
 26570  18CC  1D03               	skipz
 26571  18CD  28CF               	goto	u11991
 26572  18CE  28D0               	goto	u11990
 26573  18CF                     u11991:	
 26574  18CF  28D8               	goto	l1936
 26575  18D0                     u11990:	
 26576  18D0                     l10985:	
 26577  18D0  3000               	movlw	0
 26578  18D1  00E5               	movwf	___flge@ff1+3
 26579  18D2  3000               	movlw	0
 26580  18D3  00E4               	movwf	___flge@ff1+2
 26581  18D4  3000               	movlw	0
 26582  18D5  00E3               	movwf	___flge@ff1+1
 26583  18D6  3000               	movlw	0
 26584  18D7  00E2               	movwf	___flge@ff1
 26585  18D8                     l1936:	
 26586  18D8  3000               	movlw	0
 26587  18D9  0566               	andwf	___flge@ff2,w
 26588  18DA  00EA               	movwf	??___flge
 26589  18DB  3000               	movlw	0
 26590  18DC  0567               	andwf	___flge@ff2+1,w
 26591  18DD  00EB               	movwf	??___flge+1
 26592  18DE  3080               	movlw	128
 26593  18DF  0568               	andwf	___flge@ff2+2,w
 26594  18E0  00EC               	movwf	??___flge+2
 26595  18E1  307F               	movlw	127
 26596  18E2  0569               	andwf	___flge@ff2+3,w
 26597  18E3  00ED               	movwf	??___flge+3
 26598  18E4  086D               	movf	??___flge+3,w
 26599  18E5  046C               	iorwf	??___flge+2,w
 26600  18E6  046B               	iorwf	??___flge+1,w
 26601  18E7  046A               	iorwf	??___flge,w
 26602  18E8  1D03               	skipz
 26603  18E9  28EB               	goto	u12001
 26604  18EA  28EC               	goto	u12000
 26605  18EB                     u12001:	
 26606  18EB  28F4               	goto	l10989
 26607  18EC                     u12000:	
 26608  18EC                     l10987:	
 26609  18EC  3000               	movlw	0
 26610  18ED  00E9               	movwf	___flge@ff2+3
 26611  18EE  3000               	movlw	0
 26612  18EF  00E8               	movwf	___flge@ff2+2
 26613  18F0  3000               	movlw	0
 26614  18F1  00E7               	movwf	___flge@ff2+1
 26615  18F2  3000               	movlw	0
 26616  18F3  00E6               	movwf	___flge@ff2
 26617  18F4                     l10989:	
 26618  18F4  1FE5               	btfss	___flge@ff1+3,7
 26619  18F5  28F7               	goto	u12011
 26620  18F6  28F8               	goto	u12010
 26621  18F7                     u12011:	
 26622  18F7  2910               	goto	l10993
 26623  18F8                     u12010:	
 26624  18F8                     l10991:	
 26625  18F8  3000               	movlw	0
 26626  18F9  00EA               	movwf	??___flge
 26627  18FA  3000               	movlw	0
 26628  18FB  00EB               	movwf	??___flge+1
 26629  18FC  3000               	movlw	0
 26630  18FD  00EC               	movwf	??___flge+2
 26631  18FE  3080               	movlw	128
 26632  18FF  00ED               	movwf	??___flge+3
 26633  1900  0862               	movf	___flge@ff1,w
 26634  1901  02EA               	subwf	??___flge,f
 26635  1902  0863               	movf	___flge@ff1+1,w
 26636  1903  3BEB               	subwfb	??___flge+1,f
 26637  1904  0864               	movf	___flge@ff1+2,w
 26638  1905  3BEC               	subwfb	??___flge+2,f
 26639  1906  0865               	movf	___flge@ff1+3,w
 26640  1907  3BED               	subwfb	??___flge+3,f
 26641  1908  086D               	movf	??___flge+3,w
 26642  1909  00E5               	movwf	___flge@ff1+3
 26643  190A  086C               	movf	??___flge+2,w
 26644  190B  00E4               	movwf	___flge@ff1+2
 26645  190C  086B               	movf	??___flge+1,w
 26646  190D  00E3               	movwf	___flge@ff1+1
 26647  190E  086A               	movf	??___flge,w
 26648  190F  00E2               	movwf	___flge@ff1
 26649  1910                     l10993:	
 26650  1910  1FE9               	btfss	___flge@ff2+3,7
 26651  1911  2913               	goto	u12021
 26652  1912  2914               	goto	u12020
 26653  1913                     u12021:	
 26654  1913  292C               	goto	l1939
 26655  1914                     u12020:	
 26656  1914                     l10995:	
 26657  1914  3000               	movlw	0
 26658  1915  00EA               	movwf	??___flge
 26659  1916  3000               	movlw	0
 26660  1917  00EB               	movwf	??___flge+1
 26661  1918  3000               	movlw	0
 26662  1919  00EC               	movwf	??___flge+2
 26663  191A  3080               	movlw	128
 26664  191B  00ED               	movwf	??___flge+3
 26665  191C  0866               	movf	___flge@ff2,w
 26666  191D  02EA               	subwf	??___flge,f
 26667  191E  0867               	movf	___flge@ff2+1,w
 26668  191F  3BEB               	subwfb	??___flge+1,f
 26669  1920  0868               	movf	___flge@ff2+2,w
 26670  1921  3BEC               	subwfb	??___flge+2,f
 26671  1922  0869               	movf	___flge@ff2+3,w
 26672  1923  3BED               	subwfb	??___flge+3,f
 26673  1924  086D               	movf	??___flge+3,w
 26674  1925  00E9               	movwf	___flge@ff2+3
 26675  1926  086C               	movf	??___flge+2,w
 26676  1927  00E8               	movwf	___flge@ff2+2
 26677  1928  086B               	movf	??___flge+1,w
 26678  1929  00E7               	movwf	___flge@ff2+1
 26679  192A  086A               	movf	??___flge,w
 26680  192B  00E6               	movwf	___flge@ff2
 26681  192C                     l1939:	
 26682  192C  3080               	movlw	128
 26683  192D  06E5               	xorwf	___flge@ff1+3,f
 26684  192E  3080               	movlw	128
 26685  192F  06E9               	xorwf	___flge@ff2+3,f
 26686  1930  0869               	movf	___flge@ff2+3,w
 26687  1931  0265               	subwf	___flge@ff1+3,w
 26688  1932  1D03               	skipz
 26689  1933  293E               	goto	u12035
 26690  1934  0868               	movf	___flge@ff2+2,w
 26691  1935  0264               	subwf	___flge@ff1+2,w
 26692  1936  1D03               	skipz
 26693  1937  293E               	goto	u12035
 26694  1938  0867               	movf	___flge@ff2+1,w
 26695  1939  0263               	subwf	___flge@ff1+1,w
 26696  193A  1D03               	skipz
 26697  193B  293E               	goto	u12035
 26698  193C  0866               	movf	___flge@ff2,w
 26699  193D  0262               	subwf	___flge@ff1,w
 26700  193E                     u12035:	
 26701  193E  1803               	skipnc
 26702  193F  2941               	goto	u12031
 26703  1940  2942               	goto	u12030
 26704  1941                     u12031:	
 26705  1941  2944               	goto	l10999
 26706  1942                     u12030:	
 26707  1942                     l10997:	
 26708  1942  1003               	clrc
 26709  1943  2945               	goto	l1944
 26710  1944                     l10999:	
 26711  1944  1403               	setc
 26712  1945                     l1944:	
 26713  1945  0008               	return
 26714  1946                     __end_of___flge:	
 26715                           
 26716                           	psect	text82
 26717  2E83                     __ptext82:	
 26718 ;; *************** function _BUTTONS_isClicked *****************
 26719 ;; Defined at:
 26720 ;;		line 97 in file "buttons.c"
 26721 ;; Parameters:    Size  Location     Type
 26722 ;;  button          1    wreg     PTR struct .
 26723 ;;		 -> buttons(32), NULL(0), 
 26724 ;; Auto vars:     Size  Location     Type
 26725 ;;  button          1    0[BANK0 ] PTR struct .
 26726 ;;		 -> buttons(32), NULL(0), 
 26727 ;; Return value:  Size  Location     Type
 26728 ;;                  1    wreg      _Bool 
 26729 ;; Registers used:
 26730 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26731 ;; Tracked objects:
 26732 ;;		On entry : 0/0
 26733 ;;		On exit  : 0/0
 26734 ;;		Unchanged: 0/0
 26735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26739 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26740 ;;Total ram usage:        1 bytes
 26741 ;; Hardware stack levels used:    1
 26742 ;; Hardware stack levels required when called:    4
 26743 ;; This function calls:
 26744 ;;		Nothing
 26745 ;; This function is called by:
 26746 ;;		_CONTROLLER_task
 26747 ;; This function uses a non-reentrant model
 26748 ;;
 26749                           
 26750                           
 26751                           ;psect for function _BUTTONS_isClicked
 26752  2E83                     _BUTTONS_isClicked:	
 26753                           
 26754                           ;incstack = 0
 26755                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 26756                           ;BUTTONS_isClicked@button stored from wreg
 26757  2E83  0140               	movlb	0	; select bank0
 26758  2E84  00A0               	movwf	BUTTONS_isClicked@button
 26759  2E85                     l12059:	
 26760                           
 26761                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 26762  2E85  0820               	movf	BUTTONS_isClicked@button,w
 26763  2E86  3E07               	addlw	7
 26764  2E87  0086               	movwf	6
 26765  2E88  3003               	movlw	3	; select bank6/7
 26766  2E89  0087               	movwf	7
 26767  2E8A  0301               	decf	1,w
 26768  2E8B  1D03               	btfss	3,2
 26769  2E8C  2E8E               	goto	u13851
 26770  2E8D  2E8F               	goto	u13850
 26771  2E8E                     u13851:	
 26772  2E8E  2E97               	goto	l12067
 26773  2E8F                     u13850:	
 26774  2E8F                     l12061:	
 26775                           
 26776                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 26777  2E8F  0820               	movf	BUTTONS_isClicked@button,w
 26778  2E90  3E07               	addlw	7
 26779  2E91  0086               	movwf	6
 26780  2E92  3003               	movlw	3	; select bank6/7
 26781  2E93  0087               	movwf	7
 26782  2E94  0181               	clrf	1
 26783  2E95                     l12063:	
 26784                           
 26785                           ;buttons.c: 100:         return 1;
 26786  2E95  3001               	movlw	1
 26787  2E96  2E98               	goto	l927
 26788  2E97                     l12067:	
 26789                           
 26790                           ;buttons.c: 103:     return 0;
 26791  2E97  3000               	movlw	0
 26792  2E98                     l927:	
 26793  2E98  0008               	return
 26794  2E99                     __end_of_BUTTONS_isClicked:	
 26795                           
 26796                           	psect	text83
 26797  0981                     __ptext83:	
 26798 ;; *************** function _CONTROLLER_init *****************
 26799 ;; Defined at:
 26800 ;;		line 83 in file "controller.c"
 26801 ;; Parameters:    Size  Location     Type
 26802 ;;		None
 26803 ;; Auto vars:     Size  Location     Type
 26804 ;;		None
 26805 ;; Return value:  Size  Location     Type
 26806 ;;                  1    wreg      void 
 26807 ;; Registers used:
 26808 ;;		wreg, status,2, status,0
 26809 ;; Tracked objects:
 26810 ;;		On entry : 0/0
 26811 ;;		On exit  : 0/0
 26812 ;;		Unchanged: 0/0
 26813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26818 ;;Total ram usage:        1 bytes
 26819 ;; Hardware stack levels used:    1
 26820 ;; Hardware stack levels required when called:    4
 26821 ;; This function calls:
 26822 ;;		Nothing
 26823 ;; This function is called by:
 26824 ;;		_main
 26825 ;; This function uses a non-reentrant model
 26826 ;;
 26827                           
 26828                           
 26829                           ;psect for function _CONTROLLER_init
 26830  0981                     _CONTROLLER_init:	
 26831  0981                     l12535:	
 26832                           ;incstack = 0
 26833                           ; Regs used in _CONTROLLER_init: [wreg+status,2+status,0]
 26834                           
 26835                           
 26836                           ;controller.c: 86:     dmx.nextItem = &beat;
 26837  0981  30D6               	movlw	low _beat
 26838  0982  0144               	movlb	4	; select bank4
 26839  0983  00DB               	movwf	_dmx^(0+512)
 26840  0984  3001               	movlw	high _beat
 26841  0985  00DC               	movwf	(_dmx+1)^(0+512)
 26842                           
 26843                           ;controller.c: 87:     dmx.prevItem = &manual;
 26844  0986  30C0               	movlw	low _manual
 26845  0987  00DD               	movwf	(low ((_dmx| (0+512)+2)))^0
 26846  0988  3001               	movlw	high _manual
 26847  0989  00DE               	movwf	((low ((_dmx| (0+512)+2))+1))^0
 26848                           
 26849                           ;controller.c: 88:     dmx.config = &dmx_task;
 26850  098A  30DF               	movlw	low _dmx_task
 26851  098B  00DF               	movwf	(low ((_dmx| (0+512)+4)))^0
 26852  098C  3002               	movlw	high _dmx_task
 26853  098D  00E0               	movwf	((low ((_dmx| (0+512)+4))+1))^0
 26854  098E                     l12537:	
 26855                           
 26856                           ;controller.c: 89:     dmx.task = previousTask;
 26857  098E  0142               	movlb	2	; select bank2
 26858  098F  0838               	movf	(_previousTask+1)^(0+256),w
 26859  0990  0144               	movlb	4	; select bank4
 26860  0991  00E5               	movwf	((low ((_dmx| (0+512)+9))+1))^0
 26861  0992  0142               	movlb	2	; select bank2
 26862  0993  0837               	movf	_previousTask^(0+256),w
 26863  0994  0144               	movlb	4	; select bank4
 26864  0995  00E4               	movwf	(low ((_dmx| (0+512)+9)))^0
 26865  0996                     l12539:	
 26866                           
 26867                           ;controller.c: 90:     dmx.name = DMX;
 26868  0996  01E3               	clrf	(_dmx^(0+512)+8)
 26869  0997                     l12541:	
 26870                           
 26871                           ;controller.c: 91:     dmx.parent = &dmx;
 26872  0997  305B               	movlw	low _dmx
 26873  0998  00E1               	movwf	(low ((_dmx| (0+512)+6)))^0
 26874  0999  3002               	movlw	high _dmx
 26875  099A  00E2               	movwf	((low ((_dmx| (0+512)+6))+1))^0
 26876  099B                     l12543:	
 26877                           
 26878                           ;controller.c: 93:     beat.nextItem = &animation;
 26879  099B  30CB               	movlw	low _animation
 26880  099C  0143               	movlb	3	; select bank3
 26881  099D  00D6               	movwf	_beat^(0+384)
 26882  099E  3001               	movlw	high _animation
 26883  099F  00D7               	movwf	(_beat+1)^(0+384)
 26884  09A0                     l12545:	
 26885                           
 26886                           ;controller.c: 94:     beat.prevItem = &dmx;
 26887  09A0  305B               	movlw	low _dmx
 26888  09A1  00D8               	movwf	(low ((_beat| (0+256)+2)))^(0+128)
 26889  09A2  3002               	movlw	high _dmx
 26890  09A3  00D9               	movwf	((low ((_beat| (0+256)+2))+1))^(0+128)
 26891  09A4                     l12547:	
 26892                           
 26893                           ;controller.c: 95:     beat.config = &beatStrobe;
 26894  09A4  3050               	movlw	low _beatStrobe
 26895  09A5  00DA               	movwf	(low ((_beat| (0+256)+4)))^(0+128)
 26896  09A6  3002               	movlw	high _beatStrobe
 26897  09A7  00DB               	movwf	((low ((_beat| (0+256)+4))+1))^(0+128)
 26898  09A8                     l12549:	
 26899                           
 26900                           ;controller.c: 96:     beat.task = previousTask;
 26901  09A8  0142               	movlb	2	; select bank2
 26902  09A9  0838               	movf	(_previousTask+1)^(0+256),w
 26903  09AA  0143               	movlb	3	; select bank3
 26904  09AB  00E0               	movwf	((low ((_beat| (0+256)+9))+1))^(0+128)
 26905  09AC  0142               	movlb	2	; select bank2
 26906  09AD  0837               	movf	_previousTask^(0+256),w
 26907  09AE  0143               	movlb	3	; select bank3
 26908  09AF  00DF               	movwf	(low ((_beat| (0+256)+9)))^(0+128)
 26909  09B0                     l12551:	
 26910                           
 26911                           ;controller.c: 97:     beat.name = BEAT;
 26912  09B0  01DE               	clrf	(_beat^(0+384)+8)
 26913  09B1  0ADE               	incf	(_beat^(0+384)+8),f
 26914  09B2                     l12553:	
 26915                           
 26916                           ;controller.c: 98:     beat.parent = &beat;
 26917  09B2  30D6               	movlw	low _beat
 26918  09B3  00DC               	movwf	(low ((_beat| (0+256)+6)))^(0+128)
 26919  09B4  3001               	movlw	high _beat
 26920  09B5  00DD               	movwf	((low ((_beat| (0+256)+6))+1))^(0+128)
 26921  09B6                     l12555:	
 26922                           
 26923                           ;controller.c: 100:     animation.nextItem = &manual;
 26924  09B6  30C0               	movlw	low _manual
 26925  09B7  00CB               	movwf	_animation^(0+384)
 26926  09B8  3001               	movlw	high _manual
 26927  09B9  00CC               	movwf	(_animation+1)^(0+384)
 26928  09BA                     l12557:	
 26929                           
 26930                           ;controller.c: 101:     animation.prevItem = &beat;
 26931  09BA  30D6               	movlw	low _beat
 26932  09BB  00CD               	movwf	(low ((_animation| (0+256)+2)))^(0+128)
 26933  09BC  3001               	movlw	high _beat
 26934  09BD  00CE               	movwf	((low ((_animation| (0+256)+2))+1))^(0+128)
 26935  09BE                     l12559:	
 26936                           
 26937                           ;controller.c: 102:     animation.config = &animationBrightnessCtrl;
 26938  09BE  3024               	movlw	low _animationBrightnessCtrl
 26939  09BF  00CF               	movwf	(low ((_animation| (0+256)+4)))^(0+128)
 26940  09C0  3002               	movlw	high _animationBrightnessCtrl
 26941  09C1  00D0               	movwf	((low ((_animation| (0+256)+4))+1))^(0+128)
 26942  09C2                     l12561:	
 26943                           
 26944                           ;controller.c: 103:     animation.task = previousTask;
 26945  09C2  0142               	movlb	2	; select bank2
 26946  09C3  0838               	movf	(_previousTask+1)^(0+256),w
 26947  09C4  0143               	movlb	3	; select bank3
 26948  09C5  00D5               	movwf	((low ((_animation| (0+256)+9))+1))^(0+128)
 26949  09C6  0142               	movlb	2	; select bank2
 26950  09C7  0837               	movf	_previousTask^(0+256),w
 26951  09C8  0143               	movlb	3	; select bank3
 26952  09C9  00D4               	movwf	(low ((_animation| (0+256)+9)))^(0+128)
 26953  09CA                     l12563:	
 26954                           
 26955                           ;controller.c: 104:     animation.name = ANIMATION;
 26956  09CA  3002               	movlw	2
 26957  09CB  0140               	movlb	0	; select bank0
 26958  09CC  00A0               	movwf	??_CONTROLLER_init
 26959  09CD  0820               	movf	??_CONTROLLER_init,w
 26960  09CE  0143               	movlb	3	; select bank3
 26961  09CF  00D3               	movwf	(_animation^(0+384)+8)
 26962  09D0                     l12565:	
 26963                           
 26964                           ;controller.c: 105:     animation.parent = &animation;
 26965  09D0  30CB               	movlw	low _animation
 26966  09D1  00D1               	movwf	(low ((_animation| (0+256)+6)))^(0+128)
 26967  09D2  3001               	movlw	high _animation
 26968  09D3  00D2               	movwf	((low ((_animation| (0+256)+6))+1))^(0+128)
 26969  09D4                     l12567:	
 26970                           
 26971                           ;controller.c: 107:     manual.nextItem = &dmx;
 26972  09D4  305B               	movlw	low _dmx
 26973  09D5  00C0               	movwf	_manual^(0+384)
 26974  09D6  3002               	movlw	high _dmx
 26975  09D7  00C1               	movwf	(_manual+1)^(0+384)
 26976  09D8                     l12569:	
 26977                           
 26978                           ;controller.c: 108:     manual.prevItem = &animation;
 26979  09D8  30CB               	movlw	low _animation
 26980  09D9  00C2               	movwf	(low ((_manual| (0+256)+2)))^(0+128)
 26981  09DA  3001               	movlw	high _animation
 26982  09DB  00C3               	movwf	((low ((_manual| (0+256)+2))+1))^(0+128)
 26983  09DC                     l12571:	
 26984                           
 26985                           ;controller.c: 109:     manual.config = &manualRed;
 26986  09DC  30A8               	movlw	low _manualRed
 26987  09DD  00C4               	movwf	(low ((_manual| (0+256)+4)))^(0+128)
 26988  09DE  3002               	movlw	high _manualRed
 26989  09DF  00C5               	movwf	((low ((_manual| (0+256)+4))+1))^(0+128)
 26990  09E0                     l12573:	
 26991                           
 26992                           ;controller.c: 110:     manual.task = previousTask;
 26993  09E0  0142               	movlb	2	; select bank2
 26994  09E1  0838               	movf	(_previousTask+1)^(0+256),w
 26995  09E2  0143               	movlb	3	; select bank3
 26996  09E3  00CA               	movwf	((low ((_manual| (0+256)+9))+1))^(0+128)
 26997  09E4  0142               	movlb	2	; select bank2
 26998  09E5  0837               	movf	_previousTask^(0+256),w
 26999  09E6  0143               	movlb	3	; select bank3
 27000  09E7  00C9               	movwf	(low ((_manual| (0+256)+9)))^(0+128)
 27001  09E8                     l12575:	
 27002                           
 27003                           ;controller.c: 111:     manual.name = MANUAL;
 27004  09E8  3003               	movlw	3
 27005  09E9  0140               	movlb	0	; select bank0
 27006  09EA  00A0               	movwf	??_CONTROLLER_init
 27007  09EB  0820               	movf	??_CONTROLLER_init,w
 27008  09EC  0143               	movlb	3	; select bank3
 27009  09ED  00C8               	movwf	(_manual^(0+384)+8)
 27010  09EE                     l12577:	
 27011                           
 27012                           ;controller.c: 112:     manual.parent = &manual;
 27013  09EE  30C0               	movlw	low _manual
 27014  09EF  00C6               	movwf	(low ((_manual| (0+256)+6)))^(0+128)
 27015  09F0  3001               	movlw	high _manual
 27016  09F1  00C7               	movwf	((low ((_manual| (0+256)+6))+1))^(0+128)
 27017                           
 27018                           ;controller.c: 117:     dmx_task.nextItem = ((void*)0);
 27019  09F2  0145               	movlb	5	; select bank5
 27020  09F3  01DF               	clrf	_dmx_task^(0+640)
 27021  09F4  01E0               	clrf	(_dmx_task+1)^(0+640)
 27022                           
 27023                           ;controller.c: 118:     dmx_task.prevItem = ((void*)0);
 27024  09F5  01E1               	clrf	(low ((_dmx_task| (0+512)+2)))^(0+128)
 27025  09F6  01E2               	clrf	((low ((_dmx_task| (0+512)+2))+1))^(0+128)
 27026                           
 27027                           ;controller.c: 119:     dmx_task.config = ((void*)0);
 27028  09F7  01E3               	clrf	(low ((_dmx_task| (0+512)+4)))^(0+128)
 27029  09F8  01E4               	clrf	((low ((_dmx_task| (0+512)+4))+1))^(0+128)
 27030  09F9                     l12579:	
 27031                           
 27032                           ;controller.c: 120:     dmx_task.task = CONTROL_DMX;
 27033  09F9  3031               	movlw	low _CONTROL_DMX
 27034  09FA  00E8               	movwf	(low ((_dmx_task| (0+512)+9)))^(0+128)
 27035  09FB  301E               	movlw	high _CONTROL_DMX
 27036  09FC  00E9               	movwf	((low ((_dmx_task| (0+512)+9)))^(0+128)+1)
 27037  09FD                     l12581:	
 27038                           
 27039                           ;controller.c: 121:     dmx_task.name = DMX_TASK;
 27040  09FD  3004               	movlw	4
 27041  09FE  0140               	movlb	0	; select bank0
 27042  09FF  00A0               	movwf	??_CONTROLLER_init
 27043  0A00  0820               	movf	??_CONTROLLER_init,w
 27044  0A01  0145               	movlb	5	; select bank5
 27045  0A02  00E7               	movwf	(_dmx_task^(0+640)+8)
 27046  0A03                     l12583:	
 27047                           
 27048                           ;controller.c: 122:     dmx_task.parent = &dmx;
 27049  0A03  305B               	movlw	low _dmx
 27050  0A04  00E5               	movwf	(low ((_dmx_task| (0+512)+6)))^(0+128)
 27051  0A05  3002               	movlw	high _dmx
 27052  0A06  00E6               	movwf	((low ((_dmx_task| (0+512)+6))+1))^(0+128)
 27053  0A07                     l12585:	
 27054                           
 27055                           ;controller.c: 125:     beatStrobe.nextItem = &beatFade;
 27056  0A07  3045               	movlw	low _beatFade
 27057  0A08  0144               	movlb	4	; select bank4
 27058  0A09  00D0               	movwf	_beatStrobe^(0+512)
 27059  0A0A  3002               	movlw	high _beatFade
 27060  0A0B  00D1               	movwf	(_beatStrobe+1)^(0+512)
 27061  0A0C                     l12587:	
 27062                           
 27063                           ;controller.c: 126:     beatStrobe.prevItem = &beatMixed;
 27064  0A0C  302F               	movlw	low _beatMixed
 27065  0A0D  00D2               	movwf	(low ((_beatStrobe| (0+512)+2)))^0
 27066  0A0E  3002               	movlw	high _beatMixed
 27067  0A0F  00D3               	movwf	((low ((_beatStrobe| (0+512)+2))+1))^0
 27068  0A10                     l12589:	
 27069                           
 27070                           ;controller.c: 127:     beatStrobe.config = &beatStrobeTask;
 27071  0A10  30D4               	movlw	low _beatStrobeTask
 27072  0A11  00D4               	movwf	(low ((_beatStrobe| (0+512)+4)))^0
 27073  0A12  3002               	movlw	high _beatStrobeTask
 27074  0A13  00D5               	movwf	((low ((_beatStrobe| (0+512)+4))+1))^0
 27075  0A14                     l12591:	
 27076                           
 27077                           ;controller.c: 128:     beatStrobe.task = previousTask;
 27078  0A14  0142               	movlb	2	; select bank2
 27079  0A15  0838               	movf	(_previousTask+1)^(0+256),w
 27080  0A16  0144               	movlb	4	; select bank4
 27081  0A17  00DA               	movwf	((low ((_beatStrobe| (0+512)+9))+1))^0
 27082  0A18  0142               	movlb	2	; select bank2
 27083  0A19  0837               	movf	_previousTask^(0+256),w
 27084  0A1A  0144               	movlb	4	; select bank4
 27085  0A1B  00D9               	movwf	(low ((_beatStrobe| (0+512)+9)))^0
 27086  0A1C                     l12593:	
 27087                           
 27088                           ;controller.c: 129:     beatStrobe.name = B_STROBE;
 27089  0A1C  3005               	movlw	5
 27090  0A1D  0140               	movlb	0	; select bank0
 27091  0A1E  00A0               	movwf	??_CONTROLLER_init
 27092  0A1F  0820               	movf	??_CONTROLLER_init,w
 27093  0A20  0144               	movlb	4	; select bank4
 27094  0A21  00D8               	movwf	(_beatStrobe^(0+512)+8)
 27095  0A22                     l12595:	
 27096                           
 27097                           ;controller.c: 130:     beatStrobe.parent = &beat;
 27098  0A22  30D6               	movlw	low _beat
 27099  0A23  00D6               	movwf	(low ((_beatStrobe| (0+512)+6)))^0
 27100  0A24  3001               	movlw	high _beat
 27101  0A25  00D7               	movwf	((low ((_beatStrobe| (0+512)+6))+1))^0
 27102  0A26                     l12597:	
 27103                           
 27104                           ;controller.c: 132:     beatFade.nextItem = &beatCont;
 27105  0A26  303A               	movlw	low _beatCont
 27106  0A27  00C5               	movwf	_beatFade^(0+512)
 27107  0A28  3002               	movlw	high _beatCont
 27108  0A29  00C6               	movwf	(_beatFade+1)^(0+512)
 27109  0A2A                     l12599:	
 27110                           
 27111                           ;controller.c: 133:     beatFade.prevItem = &beatStrobe;
 27112  0A2A  3050               	movlw	low _beatStrobe
 27113  0A2B  00C7               	movwf	(low ((_beatFade| (0+512)+2)))^0
 27114  0A2C  3002               	movlw	high _beatStrobe
 27115  0A2D  00C8               	movwf	((low ((_beatFade| (0+512)+2))+1))^0
 27116  0A2E                     l12601:	
 27117                           
 27118                           ;controller.c: 134:     beatFade.config = &beatFadeTask;
 27119  0A2E  30C9               	movlw	low _beatFadeTask
 27120  0A2F  00C9               	movwf	(low ((_beatFade| (0+512)+4)))^0
 27121  0A30  3002               	movlw	high _beatFadeTask
 27122  0A31  00CA               	movwf	((low ((_beatFade| (0+512)+4))+1))^0
 27123  0A32                     l12603:	
 27124                           
 27125                           ;controller.c: 135:     beatFade.task = previousTask;
 27126  0A32  0142               	movlb	2	; select bank2
 27127  0A33  0838               	movf	(_previousTask+1)^(0+256),w
 27128  0A34  0144               	movlb	4	; select bank4
 27129  0A35  00CF               	movwf	((low ((_beatFade| (0+512)+9))+1))^0
 27130  0A36  0142               	movlb	2	; select bank2
 27131  0A37  0837               	movf	_previousTask^(0+256),w
 27132  0A38  0144               	movlb	4	; select bank4
 27133  0A39  00CE               	movwf	(low ((_beatFade| (0+512)+9)))^0
 27134  0A3A                     l12605:	
 27135                           
 27136                           ;controller.c: 136:     beatFade.name = B_FADE;
 27137  0A3A  3006               	movlw	6
 27138  0A3B  0140               	movlb	0	; select bank0
 27139  0A3C  00A0               	movwf	??_CONTROLLER_init
 27140  0A3D  0820               	movf	??_CONTROLLER_init,w
 27141  0A3E  0144               	movlb	4	; select bank4
 27142  0A3F  00CD               	movwf	(_beatFade^(0+512)+8)
 27143  0A40                     l12607:	
 27144                           
 27145                           ;controller.c: 137:     beatFade.parent = &beat;
 27146  0A40  30D6               	movlw	low _beat
 27147  0A41  00CB               	movwf	(low ((_beatFade| (0+512)+6)))^0
 27148  0A42  3001               	movlw	high _beat
 27149  0A43  00CC               	movwf	((low ((_beatFade| (0+512)+6))+1))^0
 27150  0A44                     l12609:	
 27151                           
 27152                           ;controller.c: 139:     beatCont.nextItem = &beatMixed;
 27153  0A44  302F               	movlw	low _beatMixed
 27154  0A45  00BA               	movwf	_beatCont^(0+512)
 27155  0A46  3002               	movlw	high _beatMixed
 27156  0A47  00BB               	movwf	(_beatCont+1)^(0+512)
 27157  0A48                     l12611:	
 27158                           
 27159                           ;controller.c: 140:     beatCont.prevItem = &beatFade;
 27160  0A48  3045               	movlw	low _beatFade
 27161  0A49  00BC               	movwf	(low ((_beatCont| (0+512)+2)))^0
 27162  0A4A  3002               	movlw	high _beatFade
 27163  0A4B  00BD               	movwf	((low ((_beatCont| (0+512)+2))+1))^0
 27164  0A4C                     l12613:	
 27165                           
 27166                           ;controller.c: 141:     beatCont.config = &beatContTask;
 27167  0A4C  30BE               	movlw	low _beatContTask
 27168  0A4D  00BE               	movwf	(low ((_beatCont| (0+512)+4)))^0
 27169  0A4E  3002               	movlw	high _beatContTask
 27170  0A4F  00BF               	movwf	((low ((_beatCont| (0+512)+4))+1))^0
 27171  0A50                     l12615:	
 27172                           
 27173                           ;controller.c: 142:     beatCont.task = previousTask;
 27174  0A50  0142               	movlb	2	; select bank2
 27175  0A51  0838               	movf	(_previousTask+1)^(0+256),w
 27176  0A52  0144               	movlb	4	; select bank4
 27177  0A53  00C4               	movwf	((low ((_beatCont| (0+512)+9))+1))^0
 27178  0A54  0142               	movlb	2	; select bank2
 27179  0A55  0837               	movf	_previousTask^(0+256),w
 27180  0A56  0144               	movlb	4	; select bank4
 27181  0A57  00C3               	movwf	(low ((_beatCont| (0+512)+9)))^0
 27182  0A58                     l12617:	
 27183                           
 27184                           ;controller.c: 143:     beatCont.name = B_CONT;
 27185  0A58  3007               	movlw	7
 27186  0A59  0140               	movlb	0	; select bank0
 27187  0A5A  00A0               	movwf	??_CONTROLLER_init
 27188  0A5B  0820               	movf	??_CONTROLLER_init,w
 27189  0A5C  0144               	movlb	4	; select bank4
 27190  0A5D  00C2               	movwf	(_beatCont^(0+512)+8)
 27191  0A5E                     l12619:	
 27192                           
 27193                           ;controller.c: 144:     beatCont.parent = &beat;
 27194  0A5E  30D6               	movlw	low _beat
 27195  0A5F  00C0               	movwf	(low ((_beatCont| (0+512)+6)))^0
 27196  0A60  3001               	movlw	high _beat
 27197  0A61  00C1               	movwf	((low ((_beatCont| (0+512)+6))+1))^0
 27198  0A62                     l12621:	
 27199                           
 27200                           ;controller.c: 146:     beatMixed.nextItem = &beatStrobe;
 27201  0A62  3050               	movlw	low _beatStrobe
 27202  0A63  00AF               	movwf	_beatMixed^(0+512)
 27203  0A64  3002               	movlw	high _beatStrobe
 27204  0A65  00B0               	movwf	(_beatMixed+1)^(0+512)
 27205  0A66                     l12623:	
 27206                           
 27207                           ;controller.c: 147:     beatMixed.prevItem = &beatCont;
 27208  0A66  303A               	movlw	low _beatCont
 27209  0A67  00B1               	movwf	(low ((_beatMixed| (0+512)+2)))^0
 27210  0A68  3002               	movlw	high _beatCont
 27211  0A69  00B2               	movwf	((low ((_beatMixed| (0+512)+2))+1))^0
 27212  0A6A                     l12625:	
 27213                           
 27214                           ;controller.c: 148:     beatMixed.config = &beatMixedTask;
 27215  0A6A  30B3               	movlw	low _beatMixedTask
 27216  0A6B  00B3               	movwf	(low ((_beatMixed| (0+512)+4)))^0
 27217  0A6C  3002               	movlw	high _beatMixedTask
 27218  0A6D  00B4               	movwf	((low ((_beatMixed| (0+512)+4))+1))^0
 27219  0A6E                     l12627:	
 27220                           
 27221                           ;controller.c: 149:     beatMixed.task = previousTask;
 27222  0A6E  0142               	movlb	2	; select bank2
 27223  0A6F  0838               	movf	(_previousTask+1)^(0+256),w
 27224  0A70  0144               	movlb	4	; select bank4
 27225  0A71  00B9               	movwf	((low ((_beatMixed| (0+512)+9))+1))^0
 27226  0A72  0142               	movlb	2	; select bank2
 27227  0A73  0837               	movf	_previousTask^(0+256),w
 27228  0A74  0144               	movlb	4	; select bank4
 27229  0A75  00B8               	movwf	(low ((_beatMixed| (0+512)+9)))^0
 27230  0A76                     l12629:	
 27231                           
 27232                           ;controller.c: 150:     beatMixed.name = B_MIXED;
 27233  0A76  3008               	movlw	8
 27234  0A77  0140               	movlb	0	; select bank0
 27235  0A78  00A0               	movwf	??_CONTROLLER_init
 27236  0A79  0820               	movf	??_CONTROLLER_init,w
 27237  0A7A  0144               	movlb	4	; select bank4
 27238  0A7B  00B7               	movwf	(_beatMixed^(0+512)+8)
 27239  0A7C                     l12631:	
 27240                           
 27241                           ;controller.c: 151:     beatMixed.parent = &beat;
 27242  0A7C  30D6               	movlw	low _beat
 27243  0A7D  00B5               	movwf	(low ((_beatMixed| (0+512)+6)))^0
 27244  0A7E  3001               	movlw	high _beat
 27245  0A7F  00B6               	movwf	((low ((_beatMixed| (0+512)+6))+1))^0
 27246  0A80                     l12633:	
 27247                           
 27248                           ;controller.c: 155:     animationType.nextItem = ((void*)0);
 27249  0A80  0146               	movlb	6	; select bank6
 27250  0A81  01CC               	clrf	_animationType^(0+768)
 27251  0A82  01CD               	clrf	(_animationType+1)^(0+768)
 27252  0A83                     l12635:	
 27253                           
 27254                           ;controller.c: 156:     animationType.prevItem = ((void*)0);
 27255  0A83  01CE               	clrf	(low ((_animationType| (0+768)+2)))^0
 27256  0A84  01CF               	clrf	((low ((_animationType| (0+768)+2))+1))^0
 27257  0A85                     l12637:	
 27258                           
 27259                           ;controller.c: 157:     animationType.config = &animationBrightnessCtrl;
 27260  0A85  3024               	movlw	low _animationBrightnessCtrl
 27261  0A86  00D0               	movwf	(low ((_animationType| (0+768)+4)))^0
 27262  0A87  3002               	movlw	high _animationBrightnessCtrl
 27263  0A88  00D1               	movwf	((low ((_animationType| (0+768)+4))+1))^0
 27264  0A89                     l12639:	
 27265                           
 27266                           ;controller.c: 158:     animationType.task = CONTROL_ANIMATION;
 27267  0A89  3046               	movlw	low _CONTROL_ANIMATION
 27268  0A8A  00D5               	movwf	(low ((_animationType| (0+768)+9)))^0
 27269  0A8B  3011               	movlw	high _CONTROL_ANIMATION
 27270  0A8C  00D6               	movwf	((low ((_animationType| (0+768)+9)))^0+1)
 27271  0A8D                     l12641:	
 27272                           
 27273                           ;controller.c: 159:     animationType.name = A_SELECTION;
 27274  0A8D  3012               	movlw	18
 27275  0A8E  0140               	movlb	0	; select bank0
 27276  0A8F  00A0               	movwf	??_CONTROLLER_init
 27277  0A90  0820               	movf	??_CONTROLLER_init,w
 27278  0A91  0146               	movlb	6	; select bank6
 27279  0A92  00D4               	movwf	(_animationType^(0+768)+8)
 27280  0A93                     l12643:	
 27281                           
 27282                           ;controller.c: 160:     animationType.parent = &animation;
 27283  0A93  30CB               	movlw	low _animation
 27284  0A94  00D2               	movwf	(low ((_animationType| (0+768)+6)))^0
 27285  0A95  3001               	movlw	high _animation
 27286  0A96  00D3               	movwf	((low ((_animationType| (0+768)+6))+1))^0
 27287  0A97                     l12645:	
 27288                           
 27289                           ;controller.c: 162:     animationBrightnessCtrl.nextItem = ((void*)0);
 27290  0A97  0144               	movlb	4	; select bank4
 27291  0A98  01A4               	clrf	_animationBrightnessCtrl^(0+512)
 27292  0A99  01A5               	clrf	(_animationBrightnessCtrl+1)^(0+512)
 27293  0A9A                     l12647:	
 27294                           
 27295                           ;controller.c: 163:     animationBrightnessCtrl.prevItem = ((void*)0);
 27296  0A9A  01A6               	clrf	(low ((_animationBrightnessCtrl| (0+512)+2)))^0
 27297  0A9B  01A7               	clrf	((low ((_animationBrightnessCtrl| (0+512)+2))+1))^0
 27298  0A9C                     l12649:	
 27299                           
 27300                           ;controller.c: 164:     animationBrightnessCtrl.config = &animationSpeedCtrl;
 27301  0A9C  3041               	movlw	low _animationSpeedCtrl
 27302  0A9D  00A8               	movwf	(low ((_animationBrightnessCtrl| (0+512)+4)))^0
 27303  0A9E  3003               	movlw	high _animationSpeedCtrl
 27304  0A9F  00A9               	movwf	((low ((_animationBrightnessCtrl| (0+512)+4))+1))^0
 27305  0AA0                     l12651:	
 27306                           
 27307                           ;controller.c: 165:     animationBrightnessCtrl.task = CONTROL_ANIMATION;
 27308  0AA0  3046               	movlw	low _CONTROL_ANIMATION
 27309  0AA1  00AD               	movwf	(low ((_animationBrightnessCtrl| (0+512)+9)))^0
 27310  0AA2  3011               	movlw	high _CONTROL_ANIMATION
 27311  0AA3  00AE               	movwf	((low ((_animationBrightnessCtrl| (0+512)+9)))^0+1)
 27312  0AA4                     l12653:	
 27313                           
 27314                           ;controller.c: 166:     animationBrightnessCtrl.name = A_BRIGHTNESS;
 27315  0AA4  3011               	movlw	17
 27316  0AA5  0140               	movlb	0	; select bank0
 27317  0AA6  00A0               	movwf	??_CONTROLLER_init
 27318  0AA7  0820               	movf	??_CONTROLLER_init,w
 27319  0AA8  0144               	movlb	4	; select bank4
 27320  0AA9  00AC               	movwf	(_animationBrightnessCtrl^(0+512)+8)
 27321  0AAA                     l12655:	
 27322                           
 27323                           ;controller.c: 167:     animationBrightnessCtrl.parent = &animation;
 27324  0AAA  30CB               	movlw	low _animation
 27325  0AAB  00AA               	movwf	(low ((_animationBrightnessCtrl| (0+512)+6)))^0
 27326  0AAC  3001               	movlw	high _animation
 27327  0AAD  00AB               	movwf	((low ((_animationBrightnessCtrl| (0+512)+6))+1))^0
 27328  0AAE                     l12657:	
 27329                           
 27330                           ;controller.c: 169:     animationSpeedCtrl.nextItem = ((void*)0);
 27331  0AAE  0146               	movlb	6	; select bank6
 27332  0AAF  01C1               	clrf	_animationSpeedCtrl^(0+768)
 27333  0AB0  01C2               	clrf	(_animationSpeedCtrl+1)^(0+768)
 27334  0AB1                     l12659:	
 27335                           
 27336                           ;controller.c: 170:     animationSpeedCtrl.prevItem = ((void*)0);
 27337  0AB1  01C3               	clrf	(low ((_animationSpeedCtrl| (0+768)+2)))^0
 27338  0AB2  01C4               	clrf	((low ((_animationSpeedCtrl| (0+768)+2))+1))^0
 27339  0AB3                     l12661:	
 27340                           
 27341                           ;controller.c: 171:     animationSpeedCtrl.config = &animationType;
 27342  0AB3  304C               	movlw	low _animationType
 27343  0AB4  00C5               	movwf	(low ((_animationSpeedCtrl| (0+768)+4)))^0
 27344  0AB5  3003               	movlw	high _animationType
 27345  0AB6  00C6               	movwf	((low ((_animationSpeedCtrl| (0+768)+4))+1))^0
 27346  0AB7                     l12663:	
 27347                           
 27348                           ;controller.c: 172:     animationSpeedCtrl.task = CONTROL_ANIMATION;
 27349  0AB7  3046               	movlw	low _CONTROL_ANIMATION
 27350  0AB8  00CA               	movwf	(low ((_animationSpeedCtrl| (0+768)+9)))^0
 27351  0AB9  3011               	movlw	high _CONTROL_ANIMATION
 27352  0ABA  00CB               	movwf	((low ((_animationSpeedCtrl| (0+768)+9)))^0+1)
 27353  0ABB                     l12665:	
 27354                           
 27355                           ;controller.c: 173:     animationSpeedCtrl.name = A_SPEED;
 27356  0ABB  3013               	movlw	19
 27357  0ABC  0140               	movlb	0	; select bank0
 27358  0ABD  00A0               	movwf	??_CONTROLLER_init
 27359  0ABE  0820               	movf	??_CONTROLLER_init,w
 27360  0ABF  0146               	movlb	6	; select bank6
 27361  0AC0  00C9               	movwf	(_animationSpeedCtrl^(0+768)+8)
 27362  0AC1                     l12667:	
 27363                           
 27364                           ;controller.c: 174:     animationSpeedCtrl.parent = &animation;
 27365  0AC1  30CB               	movlw	low _animation
 27366  0AC2  00C7               	movwf	(low ((_animationSpeedCtrl| (0+768)+6)))^0
 27367  0AC3  3001               	movlw	high _animation
 27368  0AC4  00C8               	movwf	((low ((_animationSpeedCtrl| (0+768)+6))+1))^0
 27369  0AC5                     l12669:	
 27370                           
 27371                           ;controller.c: 177:     manualRed.nextItem = ((void*)0);
 27372  0AC5  0145               	movlb	5	; select bank5
 27373  0AC6  01A8               	clrf	_manualRed^(0+640)
 27374  0AC7  01A9               	clrf	(_manualRed+1)^(0+640)
 27375  0AC8                     l12671:	
 27376                           
 27377                           ;controller.c: 178:     manualRed.prevItem = ((void*)0);
 27378  0AC8  01AA               	clrf	(low ((_manualRed| (0+512)+2)))^(0+128)
 27379  0AC9  01AB               	clrf	((low ((_manualRed| (0+512)+2))+1))^(0+128)
 27380  0ACA                     l12673:	
 27381                           
 27382                           ;controller.c: 179:     manualRed.config = &manualGreen;
 27383  0ACA  3036               	movlw	low _manualGreen
 27384  0ACB  00AC               	movwf	(low ((_manualRed| (0+512)+4)))^(0+128)
 27385  0ACC  3003               	movlw	high _manualGreen
 27386  0ACD  00AD               	movwf	((low ((_manualRed| (0+512)+4))+1))^(0+128)
 27387  0ACE                     l12675:	
 27388                           
 27389                           ;controller.c: 180:     manualRed.task = CONTROL_MANUAL;
 27390  0ACE  306D               	movlw	low _CONTROL_MANUAL
 27391  0ACF  00B1               	movwf	(low ((_manualRed| (0+512)+9)))^(0+128)
 27392  0AD0  3013               	movlw	high _CONTROL_MANUAL
 27393  0AD1  00B2               	movwf	((low ((_manualRed| (0+512)+9)))^(0+128)+1)
 27394  0AD2                     l12677:	
 27395                           
 27396                           ;controller.c: 181:     manualRed.name = MANUAL_RED;
 27397  0AD2  300D               	movlw	13
 27398  0AD3  0140               	movlb	0	; select bank0
 27399  0AD4  00A0               	movwf	??_CONTROLLER_init
 27400  0AD5  0820               	movf	??_CONTROLLER_init,w
 27401  0AD6  0145               	movlb	5	; select bank5
 27402  0AD7  00B0               	movwf	(_manualRed^(0+640)+8)
 27403  0AD8                     l12679:	
 27404                           
 27405                           ;controller.c: 182:     manualRed.parent = &manual;
 27406  0AD8  30C0               	movlw	low _manual
 27407  0AD9  00AE               	movwf	(low ((_manualRed| (0+512)+6)))^(0+128)
 27408  0ADA  3001               	movlw	high _manual
 27409  0ADB  00AF               	movwf	((low ((_manualRed| (0+512)+6))+1))^(0+128)
 27410  0ADC                     l12681:	
 27411                           
 27412                           ;controller.c: 184:     manualGreen.nextItem = ((void*)0);
 27413  0ADC  0146               	movlb	6	; select bank6
 27414  0ADD  01B6               	clrf	_manualGreen^(0+768)
 27415  0ADE  01B7               	clrf	(_manualGreen+1)^(0+768)
 27416  0ADF                     l12683:	
 27417                           
 27418                           ;controller.c: 185:     manualGreen.prevItem = ((void*)0);
 27419  0ADF  01B8               	clrf	(low ((_manualGreen| (0+768)+2)))^0
 27420  0AE0  01B9               	clrf	((low ((_manualGreen| (0+768)+2))+1))^0
 27421  0AE1                     l12685:	
 27422                           
 27423                           ;controller.c: 186:     manualGreen.config = &manualBlue;
 27424  0AE1  302B               	movlw	low _manualBlue
 27425  0AE2  00BA               	movwf	(low ((_manualGreen| (0+768)+4)))^0
 27426  0AE3  3003               	movlw	high _manualBlue
 27427  0AE4  00BB               	movwf	((low ((_manualGreen| (0+768)+4))+1))^0
 27428  0AE5                     l12687:	
 27429                           
 27430                           ;controller.c: 187:     manualGreen.task = CONTROL_MANUAL;
 27431  0AE5  306D               	movlw	low _CONTROL_MANUAL
 27432  0AE6  00BF               	movwf	(low ((_manualGreen| (0+768)+9)))^0
 27433  0AE7  3013               	movlw	high _CONTROL_MANUAL
 27434  0AE8  00C0               	movwf	((low ((_manualGreen| (0+768)+9)))^0+1)
 27435  0AE9                     l12689:	
 27436                           
 27437                           ;controller.c: 188:     manualGreen.name = MANUAL_GREEN;
 27438  0AE9  300E               	movlw	14
 27439  0AEA  0140               	movlb	0	; select bank0
 27440  0AEB  00A0               	movwf	??_CONTROLLER_init
 27441  0AEC  0820               	movf	??_CONTROLLER_init,w
 27442  0AED  0146               	movlb	6	; select bank6
 27443  0AEE  00BE               	movwf	(_manualGreen^(0+768)+8)
 27444  0AEF                     l12691:	
 27445                           
 27446                           ;controller.c: 189:     manualGreen.parent = &manual;
 27447  0AEF  30C0               	movlw	low _manual
 27448  0AF0  00BC               	movwf	(low ((_manualGreen| (0+768)+6)))^0
 27449  0AF1  3001               	movlw	high _manual
 27450  0AF2  00BD               	movwf	((low ((_manualGreen| (0+768)+6))+1))^0
 27451  0AF3                     l12693:	
 27452                           
 27453                           ;controller.c: 191:     manualBlue.nextItem = ((void*)0);
 27454  0AF3  01AB               	clrf	_manualBlue^(0+768)
 27455  0AF4  01AC               	clrf	(_manualBlue+1)^(0+768)
 27456  0AF5                     l12695:	
 27457                           
 27458                           ;controller.c: 192:     manualBlue.prevItem = ((void*)0);
 27459  0AF5  01AD               	clrf	(low ((_manualBlue| (0+768)+2)))^0
 27460  0AF6  01AE               	clrf	((low ((_manualBlue| (0+768)+2))+1))^0
 27461  0AF7                     l12697:	
 27462                           
 27463                           ;controller.c: 193:     manualBlue.config = &manualWhite;
 27464  0AF7  3020               	movlw	low _manualWhite
 27465  0AF8  00AF               	movwf	(low ((_manualBlue| (0+768)+4)))^0
 27466  0AF9  3003               	movlw	high _manualWhite
 27467  0AFA  00B0               	movwf	((low ((_manualBlue| (0+768)+4))+1))^0
 27468  0AFB                     l12699:	
 27469                           
 27470                           ;controller.c: 194:     manualBlue.task = CONTROL_MANUAL;
 27471  0AFB  306D               	movlw	low _CONTROL_MANUAL
 27472  0AFC  00B4               	movwf	(low ((_manualBlue| (0+768)+9)))^0
 27473  0AFD  3013               	movlw	high _CONTROL_MANUAL
 27474  0AFE  00B5               	movwf	((low ((_manualBlue| (0+768)+9)))^0+1)
 27475  0AFF                     l12701:	
 27476                           
 27477                           ;controller.c: 195:     manualBlue.name = MANUAL_BLUE;
 27478  0AFF  300F               	movlw	15
 27479  0B00  0140               	movlb	0	; select bank0
 27480  0B01  00A0               	movwf	??_CONTROLLER_init
 27481  0B02  0820               	movf	??_CONTROLLER_init,w
 27482  0B03  0146               	movlb	6	; select bank6
 27483  0B04  00B3               	movwf	(_manualBlue^(0+768)+8)
 27484  0B05                     l12703:	
 27485                           
 27486                           ;controller.c: 196:     manualBlue.parent = &manual;
 27487  0B05  30C0               	movlw	low _manual
 27488  0B06  00B1               	movwf	(low ((_manualBlue| (0+768)+6)))^0
 27489  0B07  3001               	movlw	high _manual
 27490  0B08  00B2               	movwf	((low ((_manualBlue| (0+768)+6))+1))^0
 27491  0B09                     l12705:	
 27492                           
 27493                           ;controller.c: 198:     manualWhite.nextItem = ((void*)0);
 27494  0B09  01A0               	clrf	_manualWhite^(0+768)
 27495  0B0A  01A1               	clrf	(_manualWhite+1)^(0+768)
 27496  0B0B                     l12707:	
 27497                           
 27498                           ;controller.c: 199:     manualWhite.prevItem = ((void*)0);
 27499  0B0B  01A2               	clrf	(low ((_manualWhite| (0+768)+2)))^0
 27500  0B0C  01A3               	clrf	((low ((_manualWhite| (0+768)+2))+1))^0
 27501  0B0D                     l12709:	
 27502                           
 27503                           ;controller.c: 200:     manualWhite.config = &manualRed;
 27504  0B0D  30A8               	movlw	low _manualRed
 27505  0B0E  00A4               	movwf	(low ((_manualWhite| (0+768)+4)))^0
 27506  0B0F  3002               	movlw	high _manualRed
 27507  0B10  00A5               	movwf	((low ((_manualWhite| (0+768)+4))+1))^0
 27508  0B11                     l12711:	
 27509                           
 27510                           ;controller.c: 201:     manualWhite.task = CONTROL_MANUAL;
 27511  0B11  306D               	movlw	low _CONTROL_MANUAL
 27512  0B12  00A9               	movwf	(low ((_manualWhite| (0+768)+9)))^0
 27513  0B13  3013               	movlw	high _CONTROL_MANUAL
 27514  0B14  00AA               	movwf	((low ((_manualWhite| (0+768)+9)))^0+1)
 27515  0B15                     l12713:	
 27516                           
 27517                           ;controller.c: 202:     manualWhite.name = MANUAL_WHITE;
 27518  0B15  3010               	movlw	16
 27519  0B16  0140               	movlb	0	; select bank0
 27520  0B17  00A0               	movwf	??_CONTROLLER_init
 27521  0B18  0820               	movf	??_CONTROLLER_init,w
 27522  0B19  0146               	movlb	6	; select bank6
 27523  0B1A  00A8               	movwf	(_manualWhite^(0+768)+8)
 27524  0B1B                     l12715:	
 27525                           
 27526                           ;controller.c: 203:     manualWhite.parent = &manual;
 27527  0B1B  30C0               	movlw	low _manual
 27528  0B1C  00A6               	movwf	(low ((_manualWhite| (0+768)+6)))^0
 27529  0B1D  3001               	movlw	high _manual
 27530  0B1E  00A7               	movwf	((low ((_manualWhite| (0+768)+6))+1))^0
 27531  0B1F                     l12717:	
 27532                           
 27533                           ;controller.c: 206:     beatStrobeTask.nextItem = ((void*)0);
 27534  0B1F  0145               	movlb	5	; select bank5
 27535  0B20  01D4               	clrf	_beatStrobeTask^(0+640)
 27536  0B21  01D5               	clrf	(_beatStrobeTask+1)^(0+640)
 27537  0B22                     l12719:	
 27538                           
 27539                           ;controller.c: 207:     beatStrobeTask.prevItem = ((void*)0);
 27540  0B22  01D6               	clrf	(low ((_beatStrobeTask| (0+512)+2)))^(0+128)
 27541  0B23  01D7               	clrf	((low ((_beatStrobeTask| (0+512)+2))+1))^(0+128)
 27542  0B24                     l12721:	
 27543                           
 27544                           ;controller.c: 208:     beatStrobeTask.config = ((void*)0);
 27545  0B24  01D8               	clrf	(low ((_beatStrobeTask| (0+512)+4)))^(0+128)
 27546  0B25  01D9               	clrf	((low ((_beatStrobeTask| (0+512)+4))+1))^(0+128)
 27547  0B26                     l12723:	
 27548                           
 27549                           ;controller.c: 209:     beatStrobeTask.task = CONTROL_BEAT;
 27550  0B26  3008               	movlw	low _CONTROL_BEAT
 27551  0B27  00DD               	movwf	(low ((_beatStrobeTask| (0+512)+9)))^(0+128)
 27552  0B28  3027               	movlw	high _CONTROL_BEAT
 27553  0B29  00DE               	movwf	((low ((_beatStrobeTask| (0+512)+9)))^(0+128)+1)
 27554  0B2A                     l12725:	
 27555                           
 27556                           ;controller.c: 210:     beatStrobeTask.name = B_STROBE_TASK;
 27557  0B2A  3009               	movlw	9
 27558  0B2B  0140               	movlb	0	; select bank0
 27559  0B2C  00A0               	movwf	??_CONTROLLER_init
 27560  0B2D  0820               	movf	??_CONTROLLER_init,w
 27561  0B2E  0145               	movlb	5	; select bank5
 27562  0B2F  00DC               	movwf	(_beatStrobeTask^(0+640)+8)
 27563                           
 27564                           ;controller.c: 211:     beatStrobeTask.parent = &beat;
 27565  0B30  30D6               	movlw	low _beat
 27566  0B31  00DA               	movwf	(low ((_beatStrobeTask| (0+512)+6)))^(0+128)
 27567  0B32  3001               	movlw	high _beat
 27568  0B33  00DB               	movwf	((low ((_beatStrobeTask| (0+512)+6))+1))^(0+128)
 27569  0B34                     l12727:	
 27570                           
 27571                           ;controller.c: 213:     beatFadeTask.nextItem = ((void*)0);
 27572  0B34  01C9               	clrf	_beatFadeTask^(0+640)
 27573  0B35  01CA               	clrf	(_beatFadeTask+1)^(0+640)
 27574  0B36                     l12729:	
 27575                           
 27576                           ;controller.c: 214:     beatFadeTask.prevItem = ((void*)0);
 27577  0B36  01CB               	clrf	(low ((_beatFadeTask| (0+512)+2)))^(0+128)
 27578  0B37  01CC               	clrf	((low ((_beatFadeTask| (0+512)+2))+1))^(0+128)
 27579  0B38                     l12731:	
 27580                           
 27581                           ;controller.c: 215:     beatFadeTask.config = ((void*)0);
 27582  0B38  01CD               	clrf	(low ((_beatFadeTask| (0+512)+4)))^(0+128)
 27583  0B39  01CE               	clrf	((low ((_beatFadeTask| (0+512)+4))+1))^(0+128)
 27584  0B3A                     l12733:	
 27585                           
 27586                           ;controller.c: 216:     beatFadeTask.task = CONTROL_BEAT;
 27587  0B3A  3008               	movlw	low _CONTROL_BEAT
 27588  0B3B  00D2               	movwf	(low ((_beatFadeTask| (0+512)+9)))^(0+128)
 27589  0B3C  3027               	movlw	high _CONTROL_BEAT
 27590  0B3D  00D3               	movwf	((low ((_beatFadeTask| (0+512)+9)))^(0+128)+1)
 27591  0B3E                     l12735:	
 27592                           
 27593                           ;controller.c: 217:     beatFadeTask.name = B_FADE_TASK;
 27594  0B3E  300A               	movlw	10
 27595  0B3F  0140               	movlb	0	; select bank0
 27596  0B40  00A0               	movwf	??_CONTROLLER_init
 27597  0B41  0820               	movf	??_CONTROLLER_init,w
 27598  0B42  0145               	movlb	5	; select bank5
 27599  0B43  00D1               	movwf	(_beatFadeTask^(0+640)+8)
 27600  0B44                     l12737:	
 27601                           
 27602                           ;controller.c: 218:     beatFadeTask.parent = &beat;
 27603  0B44  30D6               	movlw	low _beat
 27604  0B45  00CF               	movwf	(low ((_beatFadeTask| (0+512)+6)))^(0+128)
 27605  0B46  3001               	movlw	high _beat
 27606  0B47  00D0               	movwf	((low ((_beatFadeTask| (0+512)+6))+1))^(0+128)
 27607                           
 27608                           ;controller.c: 220:     beatContTask.nextItem = ((void*)0);
 27609  0B48  01BE               	clrf	_beatContTask^(0+640)
 27610  0B49  01BF               	clrf	(_beatContTask+1)^(0+640)
 27611                           
 27612                           ;controller.c: 221:     beatContTask.prevItem = ((void*)0);
 27613  0B4A  01C0               	clrf	(low ((_beatContTask| (0+512)+2)))^(0+128)
 27614  0B4B  01C1               	clrf	((low ((_beatContTask| (0+512)+2))+1))^(0+128)
 27615                           
 27616                           ;controller.c: 222:     beatContTask.config = ((void*)0);
 27617  0B4C  01C2               	clrf	(low ((_beatContTask| (0+512)+4)))^(0+128)
 27618  0B4D  01C3               	clrf	((low ((_beatContTask| (0+512)+4))+1))^(0+128)
 27619  0B4E                     l12739:	
 27620                           
 27621                           ;controller.c: 223:     beatContTask.task = CONTROL_BEAT;
 27622  0B4E  3008               	movlw	low _CONTROL_BEAT
 27623  0B4F  00C7               	movwf	(low ((_beatContTask| (0+512)+9)))^(0+128)
 27624  0B50  3027               	movlw	high _CONTROL_BEAT
 27625  0B51  00C8               	movwf	((low ((_beatContTask| (0+512)+9)))^(0+128)+1)
 27626  0B52                     l12741:	
 27627                           
 27628                           ;controller.c: 224:     beatContTask.name = B_CONT_TASK;
 27629  0B52  300B               	movlw	11
 27630  0B53  0140               	movlb	0	; select bank0
 27631  0B54  00A0               	movwf	??_CONTROLLER_init
 27632  0B55  0820               	movf	??_CONTROLLER_init,w
 27633  0B56  0145               	movlb	5	; select bank5
 27634  0B57  00C6               	movwf	(_beatContTask^(0+640)+8)
 27635  0B58                     l12743:	
 27636                           
 27637                           ;controller.c: 225:     beatContTask.parent = &beat;
 27638  0B58  30D6               	movlw	low _beat
 27639  0B59  00C4               	movwf	(low ((_beatContTask| (0+512)+6)))^(0+128)
 27640  0B5A  3001               	movlw	high _beat
 27641  0B5B  00C5               	movwf	((low ((_beatContTask| (0+512)+6))+1))^(0+128)
 27642  0B5C                     l12745:	
 27643                           
 27644                           ;controller.c: 227:     beatMixedTask.nextItem = ((void*)0);
 27645  0B5C  01B3               	clrf	_beatMixedTask^(0+640)
 27646  0B5D  01B4               	clrf	(_beatMixedTask+1)^(0+640)
 27647  0B5E                     l12747:	
 27648                           
 27649                           ;controller.c: 228:     beatMixedTask.prevItem = ((void*)0);
 27650  0B5E  01B5               	clrf	(low ((_beatMixedTask| (0+512)+2)))^(0+128)
 27651  0B5F  01B6               	clrf	((low ((_beatMixedTask| (0+512)+2))+1))^(0+128)
 27652  0B60                     l12749:	
 27653                           
 27654                           ;controller.c: 229:     beatMixedTask.config = ((void*)0);
 27655  0B60  01B7               	clrf	(low ((_beatMixedTask| (0+512)+4)))^(0+128)
 27656  0B61  01B8               	clrf	((low ((_beatMixedTask| (0+512)+4))+1))^(0+128)
 27657  0B62                     l12751:	
 27658                           
 27659                           ;controller.c: 230:     beatMixedTask.task = CONTROL_BEAT;
 27660  0B62  3008               	movlw	low _CONTROL_BEAT
 27661  0B63  00BC               	movwf	(low ((_beatMixedTask| (0+512)+9)))^(0+128)
 27662  0B64  3027               	movlw	high _CONTROL_BEAT
 27663  0B65  00BD               	movwf	((low ((_beatMixedTask| (0+512)+9)))^(0+128)+1)
 27664  0B66                     l12753:	
 27665                           
 27666                           ;controller.c: 231:     beatMixedTask.name = B_MIXED_TASK;
 27667  0B66  300C               	movlw	12
 27668  0B67  0140               	movlb	0	; select bank0
 27669  0B68  00A0               	movwf	??_CONTROLLER_init
 27670  0B69  0820               	movf	??_CONTROLLER_init,w
 27671  0B6A  0145               	movlb	5	; select bank5
 27672  0B6B  00BB               	movwf	(_beatMixedTask^(0+640)+8)
 27673                           
 27674                           ;controller.c: 232:     beatMixedTask.parent = &beat;
 27675  0B6C  30D6               	movlw	low _beat
 27676  0B6D  00B9               	movwf	(low ((_beatMixedTask| (0+512)+6)))^(0+128)
 27677  0B6E  3001               	movlw	high _beat
 27678  0B6F  00BA               	movwf	((low ((_beatMixedTask| (0+512)+6))+1))^(0+128)
 27679  0B70                     l1089:	
 27680  0B70  0008               	return
 27681  0B71                     __end_of_CONTROLLER_init:	
 27682                           
 27683                           	psect	text84
 27684  2D32                     __ptext84:	
 27685 ;; *************** function _CLOCK_init *****************
 27686 ;; Defined at:
 27687 ;;		line 8 in file "clock.c"
 27688 ;; Parameters:    Size  Location     Type
 27689 ;;		None
 27690 ;; Auto vars:     Size  Location     Type
 27691 ;;		None
 27692 ;; Return value:  Size  Location     Type
 27693 ;;                  1    wreg      void 
 27694 ;; Registers used:
 27695 ;;		wreg, status,2, status,0, pclath, cstack
 27696 ;; Tracked objects:
 27697 ;;		On entry : 0/0
 27698 ;;		On exit  : 0/0
 27699 ;;		Unchanged: 0/0
 27700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27705 ;;Total ram usage:        0 bytes
 27706 ;; Hardware stack levels used:    1
 27707 ;; Hardware stack levels required when called:    5
 27708 ;; This function calls:
 27709 ;;		_TMR0_SetInterruptHandler
 27710 ;; This function is called by:
 27711 ;;		_main
 27712 ;; This function uses a non-reentrant model
 27713 ;;
 27714                           
 27715                           
 27716                           ;psect for function _CLOCK_init
 27717  2D32                     _CLOCK_init:	
 27718  2D32                     l12519:	
 27719                           ;incstack = 0
 27720                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 27721                           
 27722                           
 27723                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 27724  2D32  30F1               	movlw	low _CLOCK_timerCallback
 27725  2D33  0140               	movlb	0	; select bank0
 27726  2D34  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 27727  2D35  302C               	movlw	high _CLOCK_timerCallback
 27728  2D36  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 27729  2D37  31AD  2529  31AD   	fcall	_TMR0_SetInterruptHandler
 27730  2D3A                     l940:	
 27731  2D3A  0008               	return
 27732  2D3B                     __end_of_CLOCK_init:	
 27733                           
 27734                           	psect	text85
 27735  2D29                     __ptext85:	
 27736 ;; *************** function _TMR0_SetInterruptHandler *****************
 27737 ;; Defined at:
 27738 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 27739 ;; Parameters:    Size  Location     Type
 27740 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27741 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 27742 ;; Auto vars:     Size  Location     Type
 27743 ;;		None
 27744 ;; Return value:  Size  Location     Type
 27745 ;;                  1    wreg      void 
 27746 ;; Registers used:
 27747 ;;		wreg
 27748 ;; Tracked objects:
 27749 ;;		On entry : 0/0
 27750 ;;		On exit  : 0/0
 27751 ;;		Unchanged: 0/0
 27752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27756 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27757 ;;Total ram usage:        2 bytes
 27758 ;; Hardware stack levels used:    1
 27759 ;; Hardware stack levels required when called:    4
 27760 ;; This function calls:
 27761 ;;		Nothing
 27762 ;; This function is called by:
 27763 ;;		_TMR0_Initialize
 27764 ;;		_CLOCK_init
 27765 ;; This function uses a non-reentrant model
 27766 ;;
 27767                           
 27768                           
 27769                           ;psect for function _TMR0_SetInterruptHandler
 27770  2D29                     _TMR0_SetInterruptHandler:	
 27771  2D29                     l8997:	
 27772                           ;incstack = 0
 27773                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 27774                           
 27775                           
 27776                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 27777  2D29  0140               	movlb	0	; select bank0
 27778  2D2A  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 27779  2D2B  0143               	movlb	3	; select bank3
 27780  2D2C  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
 27781  2D2D  0140               	movlb	0	; select bank0
 27782  2D2E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 27783  2D2F  0143               	movlb	3	; select bank3
 27784  2D30  00EB               	movwf	_TMR0_InterruptHandler^(0+384)
 27785  2D31                     l486:	
 27786  2D31  0008               	return
 27787  2D32                     __end_of_TMR0_SetInterruptHandler:	
 27788                           
 27789                           	psect	text86
 27790  1035                     __ptext86:	
 27791 ;; *************** function _BUTTONS_task *****************
 27792 ;; Defined at:
 27793 ;;		line 56 in file "buttons.c"
 27794 ;; Parameters:    Size  Location     Type
 27795 ;;		None
 27796 ;; Auto vars:     Size  Location     Type
 27797 ;;  btn             1    8[BANK0 ] PTR struct .
 27798 ;;		 -> buttons(32), 
 27799 ;;  i               1    5[BANK0 ] unsigned char 
 27800 ;;  time            2    6[BANK0 ] unsigned short 
 27801 ;; Return value:  Size  Location     Type
 27802 ;;                  1    wreg      void 
 27803 ;; Registers used:
 27804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27805 ;; Tracked objects:
 27806 ;;		On entry : 0/0
 27807 ;;		On exit  : 0/0
 27808 ;;		Unchanged: 0/0
 27809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27811 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27812 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27814 ;;Total ram usage:        7 bytes
 27815 ;; Hardware stack levels used:    1
 27816 ;; Hardware stack levels required when called:    5
 27817 ;; This function calls:
 27818 ;;		_CLOCK_getTime
 27819 ;; This function is called by:
 27820 ;;		_main
 27821 ;; This function uses a non-reentrant model
 27822 ;;
 27823                           
 27824                           
 27825                           ;psect for function _BUTTONS_task
 27826  1035                     _BUTTONS_task:	
 27827  1035                     l12765:	
 27828                           ;incstack = 0
 27829                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27830                           
 27831                           
 27832                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 27833  1035  31AD  2520  3190   	fcall	_CLOCK_getTime
 27834  1038  0140               	movlb	0	; select bank0
 27835  1039  0821               	movf	?_CLOCK_getTime+1,w
 27836  103A  00A7               	movwf	BUTTONS_task@time+1
 27837  103B  0820               	movf	?_CLOCK_getTime,w
 27838  103C  00A6               	movwf	BUTTONS_task@time
 27839  103D                     l12767:	
 27840                           
 27841                           ;buttons.c: 61:     if (time - lastTime < 10)
 27842  103D  0142               	movlb	2	; select bank2
 27843  103E  083B               	movf	_lastTime^(0+256),w
 27844  103F  0140               	movlb	0	; select bank0
 27845  1040  0226               	subwf	BUTTONS_task@time,w
 27846  1041  00A2               	movwf	??_BUTTONS_task
 27847  1042  0142               	movlb	2	; select bank2
 27848  1043  083C               	movf	(_lastTime+1)^(0+256),w
 27849  1044  0140               	movlb	0	; select bank0
 27850  1045  3B27               	subwfb	BUTTONS_task@time+1,w
 27851  1046  00A3               	movwf	??_BUTTONS_task+1
 27852  1047  3000               	movlw	0
 27853  1048  0223               	subwf	??_BUTTONS_task+1,w
 27854  1049  300A               	movlw	10
 27855  104A  1903               	skipnz
 27856  104B  0222               	subwf	??_BUTTONS_task,w
 27857  104C  1803               	skipnc
 27858  104D  284F               	goto	u14571
 27859  104E  2850               	goto	u14570
 27860  104F                     u14571:	
 27861  104F  2851               	goto	l12771
 27862  1050                     u14570:	
 27863  1050  2945               	goto	l910
 27864  1051                     l12771:	
 27865                           
 27866                           ;buttons.c: 64:     lastTime = time;
 27867  1051  0827               	movf	BUTTONS_task@time+1,w
 27868  1052  0142               	movlb	2	; select bank2
 27869  1053  00BC               	movwf	(_lastTime+1)^(0+256)
 27870  1054  0140               	movlb	0	; select bank0
 27871  1055  0826               	movf	BUTTONS_task@time,w
 27872  1056  0142               	movlb	2	; select bank2
 27873  1057  00BB               	movwf	_lastTime^(0+256)
 27874  1058                     l12773:	
 27875                           
 27876                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 27877  1058  0140               	movlb	0	; select bank0
 27878  1059  01A5               	clrf	BUTTONS_task@i
 27879  105A                     l12779:	
 27880                           
 27881                           ;buttons.c: 68:         button_t* btn = buttons + i;
 27882  105A  0825               	movf	BUTTONS_task@i,w
 27883  105B  00A2               	movwf	??_BUTTONS_task
 27884  105C  3002               	movlw	2
 27885  105D                     u14585:	
 27886  105D  35A2               	lslf	??_BUTTONS_task,f
 27887  105E  3EFF               	addlw	-1
 27888  105F  1D03               	skipz
 27889  1060  285D               	goto	u14585
 27890  1061  3522               	lslf	??_BUTTONS_task,w
 27891  1062  3EC0               	addlw	(low (_buttons| (0+768)))& (0+255)
 27892  1063  00A3               	movwf	??_BUTTONS_task+1
 27893  1064  0823               	movf	??_BUTTONS_task+1,w
 27894  1065  00A8               	movwf	BUTTONS_task@btn
 27895  1066                     l12781:	
 27896                           
 27897                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 27898  1066  0828               	movf	BUTTONS_task@btn,w
 27899  1067  0086               	movwf	6
 27900  1068  3003               	movlw	3	; select bank6/7
 27901  1069  0087               	movwf	7
 27902  106A  3F40               	moviw [0]fsr1
 27903  106B  00A2               	movwf	??_BUTTONS_task
 27904  106C  3F41               	moviw [1]fsr1
 27905  106D  00A3               	movwf	??_BUTTONS_task+1
 27906  106E  0822               	movf	??_BUTTONS_task,w
 27907  106F  0086               	movwf	6
 27908  1070  0823               	movf	??_BUTTONS_task+1,w
 27909  1071  0087               	movwf	7
 27910  1072  3001               	movlw	1
 27911  1073  00A4               	movwf	??_BUTTONS_task+2
 27912  1074  0828               	movf	BUTTONS_task@btn,w
 27913  1075  3E02               	addlw	2
 27914  1076  0084               	movwf	4
 27915  1077  3003               	movlw	3	; select bank6/7
 27916  1078  0085               	movwf	5
 27917  1079  0A00               	incf	0,w
 27918  107A  287C               	goto	u14594
 27919  107B                     u14595:	
 27920  107B  35A4               	lslf	??_BUTTONS_task+2,f
 27921  107C                     u14594:	
 27922  107C  0B89               	decfsz	9,f
 27923  107D  287B               	goto	u14595
 27924  107E  0824               	movf	??_BUTTONS_task+2,w
 27925  107F  0501               	andwf	1,w
 27926  1080  1D03               	btfss	3,2
 27927  1081  2883               	goto	u14601
 27928  1082  2884               	goto	u14600
 27929  1083                     u14601:	
 27930  1083  289F               	goto	l12787
 27931  1084                     u14600:	
 27932  1084                     l12783:	
 27933                           
 27934                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 27935  1084  0828               	movf	BUTTONS_task@btn,w
 27936  1085  3E03               	addlw	3
 27937  1086  0086               	movwf	6
 27938  1087  3003               	movlw	3	; select bank6/7
 27939  1088  0087               	movwf	7
 27940  1089  0181               	clrf	1
 27941  108A  0A81               	incf	1,f
 27942                           
 27943                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 27944  108B  0828               	movf	BUTTONS_task@btn,w
 27945  108C  3E07               	addlw	7
 27946  108D  0086               	movwf	6
 27947  108E  3003               	movlw	3	; select bank6/7
 27948  108F  0087               	movwf	7
 27949  1090  0801               	movf	1,w
 27950  1091  1D03               	btfss	3,2
 27951  1092  2894               	goto	u14611
 27952  1093  2895               	goto	u14610
 27953  1094                     u14611:	
 27954  1094  28A5               	goto	l915
 27955  1095                     u14610:	
 27956  1095                     l12785:	
 27957                           
 27958                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 27959  1095  0828               	movf	BUTTONS_task@btn,w
 27960  1096  3E05               	addlw	5
 27961  1097  0086               	movwf	6
 27962  1098  3003               	movlw	3	; select bank6/7
 27963  1099  0087               	movwf	7
 27964  109A  0826               	movf	BUTTONS_task@time,w
 27965  109B  3FC0               	movwi [0]fsr1
 27966  109C  0827               	movf	BUTTONS_task@time+1,w
 27967  109D  3FC1               	movwi [1]fsr1
 27968  109E  28A5               	goto	l915
 27969  109F                     l12787:	
 27970                           
 27971                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 27972  109F  0828               	movf	BUTTONS_task@btn,w
 27973  10A0  3E03               	addlw	3
 27974  10A1  0086               	movwf	6
 27975  10A2  3003               	movlw	3	; select bank6/7
 27976  10A3  0087               	movwf	7
 27977  10A4  0181               	clrf	1
 27978  10A5                     l915:	
 27979                           ;buttons.c: 78:         }
 27980                           
 27981                           
 27982                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 27983  10A5  0828               	movf	BUTTONS_task@btn,w
 27984  10A6  3E03               	addlw	3
 27985  10A7  0086               	movwf	6
 27986  10A8  3003               	movlw	3	; select bank6/7
 27987  10A9  0087               	movwf	7
 27988  10AA  0801               	movf	1,w
 27989  10AB  1D03               	btfss	3,2
 27990  10AC  28AE               	goto	u14621
 27991  10AD  28AF               	goto	u14620
 27992  10AE                     u14621:	
 27993  10AE  28C1               	goto	l12793
 27994  10AF                     u14620:	
 27995  10AF                     l12789:	
 27996  10AF  0828               	movf	BUTTONS_task@btn,w
 27997  10B0  3E04               	addlw	4
 27998  10B1  0086               	movwf	6
 27999  10B2  3003               	movlw	3	; select bank6/7
 28000  10B3  0087               	movwf	7
 28001  10B4  0301               	decf	1,w
 28002  10B5  1D03               	btfss	3,2
 28003  10B6  28B8               	goto	u14631
 28004  10B7  28B9               	goto	u14630
 28005  10B8                     u14631:	
 28006  10B8  28C1               	goto	l12793
 28007  10B9                     u14630:	
 28008  10B9                     l12791:	
 28009                           
 28010                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 28011  10B9  0828               	movf	BUTTONS_task@btn,w
 28012  10BA  3E07               	addlw	7
 28013  10BB  0086               	movwf	6
 28014  10BC  3003               	movlw	3	; select bank6/7
 28015  10BD  0087               	movwf	7
 28016  10BE  0181               	clrf	1
 28017  10BF  0A81               	incf	1,f
 28018                           
 28019                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 28020  10C0  292D               	goto	l917
 28021  10C1                     l12793:	
 28022  10C1  0828               	movf	BUTTONS_task@btn,w
 28023  10C2  3E03               	addlw	3
 28024  10C3  0086               	movwf	6
 28025  10C4  3003               	movlw	3	; select bank6/7
 28026  10C5  0087               	movwf	7
 28027  10C6  0301               	decf	1,w
 28028  10C7  1D03               	btfss	3,2
 28029  10C8  28CA               	goto	u14641
 28030  10C9  28CB               	goto	u14640
 28031  10CA                     u14641:	
 28032  10CA  2908               	goto	l12805
 28033  10CB                     u14640:	
 28034  10CB                     l12795:	
 28035  10CB  0828               	movf	BUTTONS_task@btn,w
 28036  10CC  3E04               	addlw	4
 28037  10CD  0086               	movwf	6
 28038  10CE  3003               	movlw	3	; select bank6/7
 28039  10CF  0087               	movwf	7
 28040  10D0  0301               	decf	1,w
 28041  10D1  1D03               	btfss	3,2
 28042  10D2  28D4               	goto	u14651
 28043  10D3  28D5               	goto	u14650
 28044  10D4                     u14651:	
 28045  10D4  2908               	goto	l12805
 28046  10D5                     u14650:	
 28047  10D5                     l12797:	
 28048                           
 28049                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 28050  10D5  0828               	movf	BUTTONS_task@btn,w
 28051  10D6  3E05               	addlw	5
 28052  10D7  0086               	movwf	6
 28053  10D8  3003               	movlw	3	; select bank6/7
 28054  10D9  0087               	movwf	7
 28055  10DA  3F40               	moviw [0]fsr1
 28056  10DB  0226               	subwf	BUTTONS_task@time,w
 28057  10DC  00A2               	movwf	??_BUTTONS_task
 28058  10DD  3F41               	moviw [1]fsr1
 28059  10DE  3B27               	subwfb	BUTTONS_task@time+1,w
 28060  10DF  00A3               	movwf	??_BUTTONS_task+1
 28061  10E0  3000               	movlw	0
 28062  10E1  0223               	subwf	??_BUTTONS_task+1,w
 28063  10E2  30C9               	movlw	201
 28064  10E3  1903               	skipnz
 28065  10E4  0222               	subwf	??_BUTTONS_task,w
 28066  10E5  1C03               	skipc
 28067  10E6  28E8               	goto	u14661
 28068  10E7  28E9               	goto	u14660
 28069  10E8                     u14661:	
 28070  10E8  28F3               	goto	l12801
 28071  10E9                     u14660:	
 28072  10E9                     l12799:	
 28073                           
 28074                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 28075  10E9  3003               	movlw	3
 28076  10EA  00A2               	movwf	??_BUTTONS_task
 28077  10EB  0828               	movf	BUTTONS_task@btn,w
 28078  10EC  3E07               	addlw	7
 28079  10ED  0086               	movwf	6
 28080  10EE  3003               	movlw	3	; select bank6/7
 28081  10EF  0087               	movwf	7
 28082  10F0  0822               	movf	??_BUTTONS_task,w
 28083  10F1  0081               	movwf	1
 28084                           
 28085                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 28086  10F2  292D               	goto	l917
 28087  10F3                     l12801:	
 28088  10F3  0828               	movf	BUTTONS_task@btn,w
 28089  10F4  3E07               	addlw	7
 28090  10F5  0086               	movwf	6
 28091  10F6  3003               	movlw	3	; select bank6/7
 28092  10F7  0087               	movwf	7
 28093  10F8  3003               	movlw	3
 28094  10F9  0601               	xorwf	1,w
 28095  10FA  1903               	btfsc	3,2
 28096  10FB  28FD               	goto	u14671
 28097  10FC  28FE               	goto	u14670
 28098  10FD                     u14671:	
 28099  10FD  292D               	goto	l917
 28100  10FE                     u14670:	
 28101  10FE                     l12803:	
 28102                           
 28103                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 28104  10FE  3002               	movlw	2
 28105  10FF  00A2               	movwf	??_BUTTONS_task
 28106  1100  0828               	movf	BUTTONS_task@btn,w
 28107  1101  3E07               	addlw	7
 28108  1102  0086               	movwf	6
 28109  1103  3003               	movlw	3	; select bank6/7
 28110  1104  0087               	movwf	7
 28111  1105  0822               	movf	??_BUTTONS_task,w
 28112  1106  0081               	movwf	1
 28113  1107  292D               	goto	l917
 28114  1108                     l12805:	
 28115  1108  0828               	movf	BUTTONS_task@btn,w
 28116  1109  3E03               	addlw	3
 28117  110A  0086               	movwf	6
 28118  110B  3003               	movlw	3	; select bank6/7
 28119  110C  0087               	movwf	7
 28120  110D  0801               	movf	1,w
 28121  110E  1D03               	btfss	3,2
 28122  110F  2911               	goto	u14681
 28123  1110  2912               	goto	u14680
 28124  1111                     u14681:	
 28125  1111  292D               	goto	l917
 28126  1112                     u14680:	
 28127  1112                     l12807:	
 28128  1112  0828               	movf	BUTTONS_task@btn,w
 28129  1113  3E04               	addlw	4
 28130  1114  0086               	movwf	6
 28131  1115  3003               	movlw	3	; select bank6/7
 28132  1116  0087               	movwf	7
 28133  1117  0301               	decf	1,w
 28134  1118  1D03               	btfss	3,2
 28135  1119  291B               	goto	u14691
 28136  111A  291C               	goto	u14690
 28137  111B                     u14691:	
 28138  111B  292D               	goto	l917
 28139  111C                     u14690:	
 28140  111C                     l12809:	
 28141  111C  0828               	movf	BUTTONS_task@btn,w
 28142  111D  3E07               	addlw	7
 28143  111E  0086               	movwf	6
 28144  111F  3003               	movlw	3	; select bank6/7
 28145  1120  0087               	movwf	7
 28146  1121  3003               	movlw	3
 28147  1122  0601               	xorwf	1,w
 28148  1123  1D03               	btfss	3,2
 28149  1124  2926               	goto	u14701
 28150  1125  2927               	goto	u14700
 28151  1126                     u14701:	
 28152  1126  292D               	goto	l917
 28153  1127                     u14700:	
 28154  1127                     l12811:	
 28155                           
 28156                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 28157  1127  0828               	movf	BUTTONS_task@btn,w
 28158  1128  3E07               	addlw	7
 28159  1129  0086               	movwf	6
 28160  112A  3003               	movlw	3	; select bank6/7
 28161  112B  0087               	movwf	7
 28162  112C  0181               	clrf	1
 28163  112D                     l917:	
 28164                           
 28165                           ;buttons.c: 93:         btn->lastState = btn->state;
 28166  112D  0828               	movf	BUTTONS_task@btn,w
 28167  112E  3E03               	addlw	3
 28168  112F  0086               	movwf	6
 28169  1130  3003               	movlw	3	; select bank6/7
 28170  1131  0087               	movwf	7
 28171  1132  0801               	movf	1,w
 28172  1133  00A2               	movwf	??_BUTTONS_task
 28173  1134  0828               	movf	BUTTONS_task@btn,w
 28174  1135  3E04               	addlw	4
 28175  1136  0086               	movwf	6
 28176  1137  3003               	movlw	3	; select bank6/7
 28177  1138  0087               	movwf	7
 28178  1139  0822               	movf	??_BUTTONS_task,w
 28179  113A  0081               	movwf	1
 28180  113B                     l12813:	
 28181                           
 28182                           ;buttons.c: 94:     }
 28183  113B  3001               	movlw	1
 28184  113C  00A2               	movwf	??_BUTTONS_task
 28185  113D  0822               	movf	??_BUTTONS_task,w
 28186  113E  07A5               	addwf	BUTTONS_task@i,f
 28187  113F                     l12815:	
 28188  113F  3004               	movlw	4
 28189  1140  0225               	subwf	BUTTONS_task@i,w
 28190  1141  1C03               	skipc
 28191  1142  2944               	goto	u14711
 28192  1143  2945               	goto	u14710
 28193  1144                     u14711:	
 28194  1144  285A               	goto	l12779
 28195  1145                     u14710:	
 28196  1145                     l910:	
 28197  1145  0008               	return
 28198  1146                     __end_of_BUTTONS_task:	
 28199                           
 28200                           	psect	text87
 28201  23D1                     __ptext87:	
 28202 ;; *************** function _BUTTONS_init *****************
 28203 ;; Defined at:
 28204 ;;		line 23 in file "buttons.c"
 28205 ;; Parameters:    Size  Location     Type
 28206 ;;		None
 28207 ;; Auto vars:     Size  Location     Type
 28208 ;;		None
 28209 ;; Return value:  Size  Location     Type
 28210 ;;                  1    wreg      void 
 28211 ;; Registers used:
 28212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28213 ;; Tracked objects:
 28214 ;;		On entry : 0/0
 28215 ;;		On exit  : 0/0
 28216 ;;		Unchanged: 0/0
 28217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28220 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28222 ;;Total ram usage:        1 bytes
 28223 ;; Hardware stack levels used:    1
 28224 ;; Hardware stack levels required when called:    5
 28225 ;; This function calls:
 28226 ;;		_GPIO_init
 28227 ;;		_init
 28228 ;; This function is called by:
 28229 ;;		_main
 28230 ;; This function uses a non-reentrant model
 28231 ;;
 28232                           
 28233                           
 28234                           ;psect for function _BUTTONS_init
 28235  23D1                     _BUTTONS_init:	
 28236  23D1                     l12521:	
 28237                           ;incstack = 0
 28238                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 28239                           
 28240                           
 28241                           ;buttons.c: 24:     menu = &buttons[0];
 28242  23D1  30C0               	movlw	(low (_buttons| (0+768)))& (0+255)
 28243  23D2  0140               	movlb	0	; select bank0
 28244  23D3  00A5               	movwf	??_BUTTONS_init
 28245  23D4  0825               	movf	??_BUTTONS_init,w
 28246  23D5  0142               	movlb	2	; select bank2
 28247  23D6  00D0               	movwf	_menu^(0+256)
 28248                           
 28249                           ;buttons.c: 25:     up = &buttons[1];
 28250  23D7  30C8               	movlw	(low ((_buttons| (0+768)+8)))& (0+255)
 28251  23D8  0140               	movlb	0	; select bank0
 28252  23D9  00A5               	movwf	??_BUTTONS_init
 28253  23DA  0825               	movf	??_BUTTONS_init,w
 28254  23DB  0142               	movlb	2	; select bank2
 28255  23DC  00CF               	movwf	_up^(0+256)
 28256                           
 28257                           ;buttons.c: 26:     down = &buttons[2];
 28258  23DD  30D0               	movlw	(low ((_buttons| (0+768)+16)))& (0+255)
 28259  23DE  0140               	movlb	0	; select bank0
 28260  23DF  00A5               	movwf	??_BUTTONS_init
 28261  23E0  0825               	movf	??_BUTTONS_init,w
 28262  23E1  0142               	movlb	2	; select bank2
 28263  23E2  00CE               	movwf	_down^(0+256)
 28264                           
 28265                           ;buttons.c: 27:     enter = &buttons[3];
 28266  23E3  30D8               	movlw	(low ((_buttons| (0+768)+24)))& (0+255)
 28267  23E4  0140               	movlb	0	; select bank0
 28268  23E5  00A5               	movwf	??_BUTTONS_init
 28269  23E6  0825               	movf	??_BUTTONS_init,w
 28270  23E7  0142               	movlb	2	; select bank2
 28271  23E8  00CD               	movwf	_enter^(0+256)
 28272  23E9                     l12523:	
 28273                           
 28274                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 28275  23E9  300E               	movlw	14
 28276  23EA  0140               	movlb	0	; select bank0
 28277  23EB  00A0               	movwf	init@port
 28278  23EC  3000               	movlw	0
 28279  23ED  00A1               	movwf	init@port+1
 28280  23EE  3002               	movlw	2
 28281  23EF  00A5               	movwf	??_BUTTONS_init
 28282  23F0  0825               	movf	??_BUTTONS_init,w
 28283  23F1  00A2               	movwf	init@pin
 28284  23F2  0142               	movlb	2	; select bank2
 28285  23F3  0850               	movf	_menu^(0+256),w
 28286  23F4  31AF  279C  31A3   	fcall	_init
 28287  23F7                     l12525:	
 28288                           
 28289                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 28290  23F7  300C               	movlw	12
 28291  23F8  0140               	movlb	0	; select bank0
 28292  23F9  00A0               	movwf	init@port
 28293  23FA  3000               	movlw	0
 28294  23FB  00A1               	movwf	init@port+1
 28295  23FC  3002               	movlw	2
 28296  23FD  00A5               	movwf	??_BUTTONS_init
 28297  23FE  0825               	movf	??_BUTTONS_init,w
 28298  23FF  00A2               	movwf	init@pin
 28299  2400  0142               	movlb	2	; select bank2
 28300  2401  084D               	movf	_enter^(0+256),w
 28301  2402  31AF  279C  31A3   	fcall	_init
 28302  2405                     l12527:	
 28303                           
 28304                           ;buttons.c: 31:     init(down, &PORTC, 0);
 28305  2405  300E               	movlw	14
 28306  2406  0140               	movlb	0	; select bank0
 28307  2407  00A0               	movwf	init@port
 28308  2408  3000               	movlw	0
 28309  2409  00A1               	movwf	init@port+1
 28310  240A  01A2               	clrf	init@pin
 28311  240B  0142               	movlb	2	; select bank2
 28312  240C  084E               	movf	_down^(0+256),w
 28313  240D  31AF  279C  31A3   	fcall	_init
 28314  2410                     l12529:	
 28315                           
 28316                           ;buttons.c: 32:     init(up, &PORTC, 1);
 28317  2410  300E               	movlw	14
 28318  2411  0140               	movlb	0	; select bank0
 28319  2412  00A0               	movwf	init@port
 28320  2413  3000               	movlw	0
 28321  2414  00A1               	movwf	init@port+1
 28322  2415  01A2               	clrf	init@pin
 28323  2416  0AA2               	incf	init@pin,f
 28324  2417  0142               	movlb	2	; select bank2
 28325  2418  084F               	movf	_up^(0+256),w
 28326  2419  31AF  279C  31A3   	fcall	_init
 28327  241C                     l12531:	
 28328                           
 28329                           ;buttons.c: 34:     GPIO_init();
 28330  241C  31AD  25FA  31A3   	fcall	_GPIO_init
 28331  241F                     l903:	
 28332  241F  0008               	return
 28333  2420                     __end_of_BUTTONS_init:	
 28334                           
 28335                           	psect	text88
 28336  2F9C                     __ptext88:	
 28337 ;; *************** function _init *****************
 28338 ;; Defined at:
 28339 ;;		line 16 in file "buttons.c"
 28340 ;; Parameters:    Size  Location     Type
 28341 ;;  btn             1    wreg     PTR struct .
 28342 ;;		 -> buttons(32), NULL(0), 
 28343 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 28344 ;;		 -> PORTA(1), PORTC(1), 
 28345 ;;  pin             1    2[BANK0 ] unsigned char 
 28346 ;; Auto vars:     Size  Location     Type
 28347 ;;  btn             1    4[BANK0 ] PTR struct .
 28348 ;;		 -> buttons(32), NULL(0), 
 28349 ;; Return value:  Size  Location     Type
 28350 ;;                  1    wreg      void 
 28351 ;; Registers used:
 28352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28353 ;; Tracked objects:
 28354 ;;		On entry : 0/0
 28355 ;;		On exit  : 0/0
 28356 ;;		Unchanged: 0/0
 28357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28358 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28361 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28362 ;;Total ram usage:        5 bytes
 28363 ;; Hardware stack levels used:    1
 28364 ;; Hardware stack levels required when called:    4
 28365 ;; This function calls:
 28366 ;;		Nothing
 28367 ;; This function is called by:
 28368 ;;		_BUTTONS_init
 28369 ;; This function uses a non-reentrant model
 28370 ;;
 28371                           
 28372                           
 28373                           ;psect for function _init
 28374  2F9C                     _init:	
 28375                           
 28376                           ;incstack = 0
 28377                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 28378                           ;init@btn stored from wreg
 28379  2F9C  0140               	movlb	0	; select bank0
 28380  2F9D  00A4               	movwf	init@btn
 28381  2F9E                     l12049:	
 28382                           
 28383                           ;buttons.c: 17:     btn->port = port;
 28384  2F9E  0824               	movf	init@btn,w
 28385  2F9F  0086               	movwf	6
 28386  2FA0  3003               	movlw	3	; select bank6/7
 28387  2FA1  0087               	movwf	7
 28388  2FA2  0820               	movf	init@port,w
 28389  2FA3  3FC0               	movwi [0]fsr1
 28390  2FA4  0821               	movf	init@port+1,w
 28391  2FA5  3FC1               	movwi [1]fsr1
 28392  2FA6                     l12051:	
 28393                           
 28394                           ;buttons.c: 18:     btn->pin = pin;
 28395  2FA6  0822               	movf	init@pin,w
 28396  2FA7  00A3               	movwf	??_init
 28397  2FA8  0824               	movf	init@btn,w
 28398  2FA9  3E02               	addlw	2
 28399  2FAA  0086               	movwf	6
 28400  2FAB  3003               	movlw	3	; select bank6/7
 28401  2FAC  0087               	movwf	7
 28402  2FAD  0823               	movf	??_init,w
 28403  2FAE  0081               	movwf	1
 28404  2FAF                     l12053:	
 28405                           
 28406                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 28407  2FAF  0824               	movf	init@btn,w
 28408  2FB0  3E03               	addlw	3
 28409  2FB1  0086               	movwf	6
 28410  2FB2  3003               	movlw	3	; select bank6/7
 28411  2FB3  0087               	movwf	7
 28412  2FB4  0181               	clrf	1
 28413  2FB5                     l12055:	
 28414                           
 28415                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 28416  2FB5  0824               	movf	init@btn,w
 28417  2FB6  3E07               	addlw	7
 28418  2FB7  0086               	movwf	6
 28419  2FB8  3003               	movlw	3	; select bank6/7
 28420  2FB9  0087               	movwf	7
 28421  2FBA  0181               	clrf	1
 28422  2FBB                     l900:	
 28423  2FBB  0008               	return
 28424  2FBC                     __end_of_init:	
 28425                           
 28426                           	psect	text89
 28427  2DFA                     __ptext89:	
 28428 ;; *************** function _GPIO_init *****************
 28429 ;; Defined at:
 28430 ;;		line 38 in file "buttons.c"
 28431 ;; Parameters:    Size  Location     Type
 28432 ;;		None
 28433 ;; Auto vars:     Size  Location     Type
 28434 ;;		None
 28435 ;; Return value:  Size  Location     Type
 28436 ;;                  1    wreg      void 
 28437 ;; Registers used:
 28438 ;;		None
 28439 ;; Tracked objects:
 28440 ;;		On entry : 0/0
 28441 ;;		On exit  : 0/0
 28442 ;;		Unchanged: 0/0
 28443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28448 ;;Total ram usage:        0 bytes
 28449 ;; Hardware stack levels used:    1
 28450 ;; Hardware stack levels required when called:    4
 28451 ;; This function calls:
 28452 ;;		Nothing
 28453 ;; This function is called by:
 28454 ;;		_BUTTONS_init
 28455 ;; This function uses a non-reentrant model
 28456 ;;
 28457                           
 28458                           
 28459                           ;psect for function _GPIO_init
 28460  2DFA                     _GPIO_init:	
 28461  2DFA                     l12057:	
 28462                           ;incstack = 0
 28463                           ; Regs used in _GPIO_init: []
 28464                           
 28465                           
 28466                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 28467  2DFA  0140               	movlb	0	; select bank0
 28468  2DFB  1512               	bsf	18,2	;volatile
 28469                           
 28470                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 28471  2DFC  017E               	movlb	62	; select bank62
 28472  2DFD  1138               	bcf	56,2	;volatile
 28473                           
 28474                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 28475  2DFE  1539               	bsf	57,2	;volatile
 28476                           
 28477                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 28478  2DFF  0140               	movlb	0	; select bank0
 28479  2E00  1414               	bsf	20,0	;volatile
 28480                           
 28481                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 28482  2E01  1494               	bsf	20,1	;volatile
 28483                           
 28484                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 28485  2E02  1514               	bsf	20,2	;volatile
 28486                           
 28487                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 28488  2E03  017E               	movlb	62	; select bank62
 28489  2E04  104E               	bcf	78,0	;volatile
 28490                           
 28491                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 28492  2E05  10CE               	bcf	78,1	;volatile
 28493                           
 28494                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 28495  2E06  114E               	bcf	78,2	;volatile
 28496                           
 28497                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 28498  2E07  144F               	bsf	79,0	;volatile
 28499                           
 28500                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 28501  2E08  14CF               	bsf	79,1	;volatile
 28502                           
 28503                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 28504  2E09  154F               	bsf	79,2	;volatile
 28505  2E0A                     l906:	
 28506  2E0A  0008               	return
 28507  2E0B                     __end_of_GPIO_init:	
 28508                           
 28509                           	psect	text90
 28510  1D4F                     __ptext90:	
 28511 ;; *************** function _BEAT_task *****************
 28512 ;; Defined at:
 28513 ;;		line 65 in file "beat.c"
 28514 ;; Parameters:    Size  Location     Type
 28515 ;;		None
 28516 ;; Auto vars:     Size  Location     Type
 28517 ;;  offset          2   10[BANK0 ] unsigned short 
 28518 ;; Return value:  Size  Location     Type
 28519 ;;                  1    wreg      void 
 28520 ;; Registers used:
 28521 ;;		wreg, status,2, status,0, pclath, cstack
 28522 ;; Tracked objects:
 28523 ;;		On entry : 0/0
 28524 ;;		On exit  : 0/0
 28525 ;;		Unchanged: 0/0
 28526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28531 ;;Total ram usage:        4 bytes
 28532 ;; Hardware stack levels used:    1
 28533 ;; Hardware stack levels required when called:    5
 28534 ;; This function calls:
 28535 ;;		_ADCC_SetUpperThreshold
 28536 ;;		_CLOCK_getTime
 28537 ;;		___lwdiv
 28538 ;; This function is called by:
 28539 ;;		_main
 28540 ;; This function uses a non-reentrant model
 28541 ;;
 28542                           
 28543                           
 28544                           ;psect for function _BEAT_task
 28545  1D4F                     _BEAT_task:	
 28546  1D4F                     l12883:	
 28547                           ;incstack = 0
 28548                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 28549                           
 28550                           
 28551                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 28552  1D4F  31AD  2520  319D   	fcall	_CLOCK_getTime
 28553  1D52  0142               	movlb	2	; select bank2
 28554  1D53  0831               	movf	_lastRun^(0+256),w
 28555  1D54  0140               	movlb	0	; select bank0
 28556  1D55  0220               	subwf	?_CLOCK_getTime,w
 28557  1D56  00A8               	movwf	??_BEAT_task
 28558  1D57  0142               	movlb	2	; select bank2
 28559  1D58  0832               	movf	(_lastRun+1)^(0+256),w
 28560  1D59  0140               	movlb	0	; select bank0
 28561  1D5A  3B21               	subwfb	?_CLOCK_getTime+1,w
 28562  1D5B  00A9               	movwf	??_BEAT_task+1
 28563  1D5C  0142               	movlb	2	; select bank2
 28564  1D5D  085D               	movf	(_delay+1)^(0+256),w
 28565  1D5E  0140               	movlb	0	; select bank0
 28566  1D5F  0229               	subwf	??_BEAT_task+1,w
 28567  1D60  1D03               	skipz
 28568  1D61  2D66               	goto	u14815
 28569  1D62  0142               	movlb	2	; select bank2
 28570  1D63  085C               	movf	_delay^(0+256),w
 28571  1D64  0140               	movlb	0	; select bank0
 28572  1D65  0228               	subwf	??_BEAT_task,w
 28573  1D66                     u14815:	
 28574  1D66  1803               	skipnc
 28575  1D67  2D69               	goto	u14811
 28576  1D68  2D6A               	goto	u14810
 28577  1D69                     u14811:	
 28578  1D69  2D6B               	goto	l12887
 28579  1D6A                     u14810:	
 28580  1D6A  2E30               	goto	l1319
 28581  1D6B                     l12887:	
 28582                           
 28583                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 28584  1D6B  31AD  2520  319D   	fcall	_CLOCK_getTime
 28585  1D6E  0140               	movlb	0	; select bank0
 28586  1D6F  0821               	movf	?_CLOCK_getTime+1,w
 28587  1D70  0142               	movlb	2	; select bank2
 28588  1D71  00B2               	movwf	(_lastRun+1)^(0+256)
 28589  1D72  0140               	movlb	0	; select bank0
 28590  1D73  0820               	movf	?_CLOCK_getTime,w
 28591  1D74  0142               	movlb	2	; select bank2
 28592  1D75  00B1               	movwf	_lastRun^(0+256)
 28593  1D76                     l12889:	
 28594                           
 28595                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 28596  1D76  0340               	decf	_thresholdExceeded^(0+256),w
 28597  1D77  1D03               	btfss	3,2
 28598  1D78  2D7A               	goto	u14821
 28599  1D79  2D7B               	goto	u14820
 28600  1D7A                     u14821:	
 28601  1D7A  2D81               	goto	l12893
 28602  1D7B                     u14820:	
 28603  1D7B                     l12891:	
 28604                           
 28605                           ;beat.c: 77:         thresholdCount++;
 28606  1D7B  3001               	movlw	1
 28607  1D7C  0143               	movlb	3	; select bank3
 28608  1D7D  07B8               	addwf	_thresholdCount^(0+384),f
 28609  1D7E  3000               	movlw	0
 28610  1D7F  3DB9               	addwfc	(_thresholdCount+1)^(0+384),f
 28611                           
 28612                           ;beat.c: 78:     } else {
 28613  1D80  2D89               	goto	l12897
 28614  1D81                     l12893:	
 28615                           
 28616                           ;beat.c: 80:         thresholdCount = 0;
 28617  1D81  0143               	movlb	3	; select bank3
 28618  1D82  01B8               	clrf	_thresholdCount^(0+384)
 28619  1D83  01B9               	clrf	(_thresholdCount+1)^(0+384)
 28620  1D84                     l12895:	
 28621                           
 28622                           ;beat.c: 81:         delay = 30;
 28623  1D84  301E               	movlw	30
 28624  1D85  0142               	movlb	2	; select bank2
 28625  1D86  00DC               	movwf	_delay^(0+256)
 28626  1D87  3000               	movlw	0
 28627  1D88  00DD               	movwf	(_delay^(0+256)+1)
 28628  1D89                     l12897:	
 28629                           
 28630                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 28631  1D89  0142               	movlb	2	; select bank2
 28632  1D8A  0340               	decf	_thresholdExceeded^(0+256),w
 28633  1D8B  1D03               	btfss	3,2
 28634  1D8C  2D8E               	goto	u14831
 28635  1D8D  2D8F               	goto	u14830
 28636  1D8E                     u14831:	
 28637  1D8E  2DD5               	goto	l12915
 28638  1D8F                     u14830:	
 28639  1D8F                     l12899:	
 28640  1D8F  083F               	movf	_lastDetected^(0+256),w
 28641  1D90  1D03               	btfss	3,2
 28642  1D91  2D93               	goto	u14841
 28643  1D92  2D94               	goto	u14840
 28644  1D93                     u14841:	
 28645  1D93  2DD5               	goto	l12915
 28646  1D94                     u14840:	
 28647  1D94                     l12901:	
 28648                           
 28649                           ;beat.c: 89:         detected = 1;
 28650  1D94  01C1               	clrf	_detected^(0+256)
 28651  1D95  0AC1               	incf	_detected^(0+256),f
 28652  1D96                     l12903:	
 28653                           
 28654                           ;beat.c: 92:         delay = 50;
 28655  1D96  3032               	movlw	50
 28656  1D97  00DC               	movwf	_delay^(0+256)
 28657  1D98  3000               	movlw	0
 28658  1D99  00DD               	movwf	(_delay^(0+256)+1)
 28659  1D9A                     l12905:	
 28660                           
 28661                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 28662  1D9A  31AD  2520  319D   	fcall	_CLOCK_getTime
 28663  1D9D  0142               	movlb	2	; select bank2
 28664  1D9E  0833               	movf	_lastBeat^(0+256),w
 28665  1D9F  0140               	movlb	0	; select bank0
 28666  1DA0  0220               	subwf	?_CLOCK_getTime,w
 28667  1DA1  00AA               	movwf	BEAT_task@offset
 28668  1DA2  0142               	movlb	2	; select bank2
 28669  1DA3  0834               	movf	(_lastBeat+1)^(0+256),w
 28670  1DA4  0140               	movlb	0	; select bank0
 28671  1DA5  3B21               	subwfb	?_CLOCK_getTime+1,w
 28672  1DA6  00AB               	movwf	BEAT_task@offset+1
 28673  1DA7                     l12907:	
 28674                           
 28675                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 28676  1DA7  31AD  2520  319D   	fcall	_CLOCK_getTime
 28677  1DAA  0140               	movlb	0	; select bank0
 28678  1DAB  0821               	movf	?_CLOCK_getTime+1,w
 28679  1DAC  0142               	movlb	2	; select bank2
 28680  1DAD  00B4               	movwf	(_lastBeat+1)^(0+256)
 28681  1DAE  0140               	movlb	0	; select bank0
 28682  1DAF  0820               	movf	?_CLOCK_getTime,w
 28683  1DB0  0142               	movlb	2	; select bank2
 28684  1DB1  00B3               	movwf	_lastBeat^(0+256)
 28685  1DB2                     l12909:	
 28686                           
 28687                           ;beat.c: 99:         if (offset < 150)
 28688  1DB2  3000               	movlw	0
 28689  1DB3  0140               	movlb	0	; select bank0
 28690  1DB4  022B               	subwf	BEAT_task@offset+1,w
 28691  1DB5  3096               	movlw	150
 28692  1DB6  1903               	skipnz
 28693  1DB7  022A               	subwf	BEAT_task@offset,w
 28694  1DB8  1803               	skipnc
 28695  1DB9  2DBB               	goto	u14851
 28696  1DBA  2DBC               	goto	u14850
 28697  1DBB                     u14851:	
 28698  1DBB  2DC2               	goto	l12913
 28699  1DBC                     u14850:	
 28700  1DBC                     l12911:	
 28701                           
 28702                           ;beat.c: 100:             bpm = 400;
 28703  1DBC  3090               	movlw	144
 28704  1DBD  0143               	movlb	3	; select bank3
 28705  1DBE  00BA               	movwf	_bpm^(0+384)
 28706  1DBF  3001               	movlw	1
 28707  1DC0  00BB               	movwf	(_bpm^(0+384)+1)
 28708  1DC1  2DD5               	goto	l12915
 28709  1DC2                     l12913:	
 28710                           
 28711                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 28712  1DC2  082B               	movf	BEAT_task@offset+1,w
 28713  1DC3  00A1               	movwf	___lwdiv@divisor+1
 28714  1DC4  082A               	movf	BEAT_task@offset,w
 28715  1DC5  00A0               	movwf	___lwdiv@divisor
 28716  1DC6  3060               	movlw	96
 28717  1DC7  00A2               	movwf	___lwdiv@dividend
 28718  1DC8  30EA               	movlw	234
 28719  1DC9  00A3               	movwf	___lwdiv@dividend+1
 28720  1DCA  31A2  22D6  319D   	fcall	___lwdiv
 28721  1DCD  0140               	movlb	0	; select bank0
 28722  1DCE  0821               	movf	?___lwdiv+1,w
 28723  1DCF  0143               	movlb	3	; select bank3
 28724  1DD0  00BB               	movwf	(_bpm+1)^(0+384)
 28725  1DD1  0140               	movlb	0	; select bank0
 28726  1DD2  0820               	movf	?___lwdiv,w
 28727  1DD3  0143               	movlb	3	; select bank3
 28728  1DD4  00BA               	movwf	_bpm^(0+384)
 28729  1DD5                     l12915:	
 28730                           
 28731                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 28732  1DD5  0142               	movlb	2	; select bank2
 28733  1DD6  0840               	movf	_thresholdExceeded^(0+256),w
 28734  1DD7  0140               	movlb	0	; select bank0
 28735  1DD8  00A8               	movwf	??_BEAT_task
 28736  1DD9  0828               	movf	??_BEAT_task,w
 28737  1DDA  0142               	movlb	2	; select bank2
 28738  1DDB  00BF               	movwf	_lastDetected^(0+256)
 28739  1DDC                     l12917:	
 28740                           
 28741                           ;beat.c: 109:     thresholdExceeded = 0;
 28742  1DDC  01C0               	clrf	_thresholdExceeded^(0+256)
 28743  1DDD                     l12919:	
 28744                           
 28745                           ;beat.c: 111:     if (thresholdCount > 3) {
 28746  1DDD  0143               	movlb	3	; select bank3
 28747  1DDE  0839               	movf	(_thresholdCount+1)^(0+384),w
 28748  1DDF  3A80               	xorlw	128
 28749  1DE0  0140               	movlb	0	; select bank0
 28750  1DE1  00A8               	movwf	??_BEAT_task
 28751  1DE2  3080               	movlw	128
 28752  1DE3  0228               	subwf	??_BEAT_task,w
 28753  1DE4  1D03               	skipz
 28754  1DE5  2DE9               	goto	u14865
 28755  1DE6  3004               	movlw	4
 28756  1DE7  0143               	movlb	3	; select bank3
 28757  1DE8  0238               	subwf	_thresholdCount^(0+384),w
 28758  1DE9                     u14865:	
 28759  1DE9  1C03               	skipc
 28760  1DEA  2DEC               	goto	u14861
 28761  1DEB  2DED               	goto	u14860
 28762  1DEC                     u14861:	
 28763  1DEC  2E0B               	goto	l12929
 28764  1DED                     u14860:	
 28765  1DED                     l12921:	
 28766                           
 28767                           ;beat.c: 112:         threshold += 1;
 28768  1DED  3001               	movlw	1
 28769  1DEE  0142               	movlb	2	; select bank2
 28770  1DEF  07DE               	addwf	_threshold^(0+256),f
 28771  1DF0  3000               	movlw	0
 28772  1DF1  3DDF               	addwfc	(_threshold+1)^(0+256),f
 28773  1DF2                     l12923:	
 28774                           
 28775                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 28776  1DF2  085F               	movf	(_threshold+1)^(0+256),w
 28777  1DF3  0140               	movlb	0	; select bank0
 28778  1DF4  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 28779  1DF5  0142               	movlb	2	; select bank2
 28780  1DF6  085E               	movf	_threshold^(0+256),w
 28781  1DF7  0140               	movlb	0	; select bank0
 28782  1DF8  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 28783  1DF9  31AD  250E  319D   	fcall	_ADCC_SetUpperThreshold
 28784  1DFC                     l12925:	
 28785                           
 28786                           ;beat.c: 114:         thresholdCount = 0;
 28787  1DFC  0143               	movlb	3	; select bank3
 28788  1DFD  01B8               	clrf	_thresholdCount^(0+384)
 28789  1DFE  01B9               	clrf	(_thresholdCount+1)^(0+384)
 28790  1DFF                     l12927:	
 28791                           
 28792                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 28793  1DFF  31AD  2520  319D   	fcall	_CLOCK_getTime
 28794  1E02  0140               	movlb	0	; select bank0
 28795  1E03  0821               	movf	?_CLOCK_getTime+1,w
 28796  1E04  0142               	movlb	2	; select bank2
 28797  1E05  00B4               	movwf	(_lastBeat+1)^(0+256)
 28798  1E06  0140               	movlb	0	; select bank0
 28799  1E07  0820               	movf	?_CLOCK_getTime,w
 28800  1E08  0142               	movlb	2	; select bank2
 28801  1E09  00B3               	movwf	_lastBeat^(0+256)
 28802                           
 28803                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 28804  1E0A  2E30               	goto	l1319
 28805  1E0B                     l12929:	
 28806  1E0B  31AD  2520  319D   	fcall	_CLOCK_getTime
 28807  1E0E  0142               	movlb	2	; select bank2
 28808  1E0F  0833               	movf	_lastBeat^(0+256),w
 28809  1E10  0140               	movlb	0	; select bank0
 28810  1E11  0220               	subwf	?_CLOCK_getTime,w
 28811  1E12  00A8               	movwf	??_BEAT_task
 28812  1E13  0142               	movlb	2	; select bank2
 28813  1E14  0834               	movf	(_lastBeat+1)^(0+256),w
 28814  1E15  0140               	movlb	0	; select bank0
 28815  1E16  3B21               	subwfb	?_CLOCK_getTime+1,w
 28816  1E17  00A9               	movwf	??_BEAT_task+1
 28817  1E18  3003               	movlw	3
 28818  1E19  0229               	subwf	??_BEAT_task+1,w
 28819  1E1A  30E9               	movlw	233
 28820  1E1B  1903               	skipnz
 28821  1E1C  0228               	subwf	??_BEAT_task,w
 28822  1E1D  1C03               	skipc
 28823  1E1E  2E20               	goto	u14871
 28824  1E1F  2E21               	goto	u14870
 28825  1E20                     u14871:	
 28826  1E20  2E30               	goto	l1319
 28827  1E21                     u14870:	
 28828  1E21                     l12931:	
 28829                           
 28830                           ;beat.c: 119:         threshold -= 1;
 28831  1E21  3001               	movlw	1
 28832  1E22  0142               	movlb	2	; select bank2
 28833  1E23  02DE               	subwf	_threshold^(0+256),f
 28834  1E24  3000               	movlw	0
 28835  1E25  3BDF               	subwfb	(_threshold+1)^(0+256),f
 28836  1E26                     l12933:	
 28837                           
 28838                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 28839  1E26  085F               	movf	(_threshold+1)^(0+256),w
 28840  1E27  0140               	movlb	0	; select bank0
 28841  1E28  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 28842  1E29  0142               	movlb	2	; select bank2
 28843  1E2A  085E               	movf	_threshold^(0+256),w
 28844  1E2B  0140               	movlb	0	; select bank0
 28845  1E2C  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 28846  1E2D  31AD  250E  319D   	fcall	_ADCC_SetUpperThreshold
 28847  1E30                     l1319:	
 28848  1E30  0008               	return
 28849  1E31                     __end_of_BEAT_task:	
 28850                           
 28851                           	psect	text91
 28852  22D6                     __ptext91:	
 28853 ;; *************** function ___lwdiv *****************
 28854 ;; Defined at:
 28855 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 28856 ;; Parameters:    Size  Location     Type
 28857 ;;  divisor         2    0[BANK0 ] unsigned int 
 28858 ;;  dividend        2    2[BANK0 ] unsigned int 
 28859 ;; Auto vars:     Size  Location     Type
 28860 ;;  quotient        2    6[BANK0 ] unsigned int 
 28861 ;;  counter         1    5[BANK0 ] unsigned char 
 28862 ;; Return value:  Size  Location     Type
 28863 ;;                  2    0[BANK0 ] unsigned int 
 28864 ;; Registers used:
 28865 ;;		wreg, status,2, status,0
 28866 ;; Tracked objects:
 28867 ;;		On entry : 0/0
 28868 ;;		On exit  : 0/0
 28869 ;;		Unchanged: 0/0
 28870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28872 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28874 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28875 ;;Total ram usage:        8 bytes
 28876 ;; Hardware stack levels used:    1
 28877 ;; Hardware stack levels required when called:    4
 28878 ;; This function calls:
 28879 ;;		Nothing
 28880 ;; This function is called by:
 28881 ;;		_TM1650_fastPrintNum
 28882 ;;		_TM1650_fastPrintNum_3digit
 28883 ;;		_BEAT_task
 28884 ;; This function uses a non-reentrant model
 28885 ;;
 28886                           
 28887                           
 28888                           ;psect for function ___lwdiv
 28889  22D6                     ___lwdiv:	
 28890  22D6                     l11483:	
 28891                           ;incstack = 0
 28892                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 28893                           
 28894  22D6  0140               	movlb	0	; select bank0
 28895  22D7  01A6               	clrf	___lwdiv@quotient
 28896  22D8  01A7               	clrf	___lwdiv@quotient+1
 28897  22D9                     l11485:	
 28898  22D9  0820               	movf	___lwdiv@divisor,w
 28899  22DA  0421               	iorwf	___lwdiv@divisor+1,w
 28900  22DB  1903               	btfsc	3,2
 28901  22DC  2ADE               	goto	u13041
 28902  22DD  2ADF               	goto	u13040
 28903  22DE                     u13041:	
 28904  22DE  2B0E               	goto	l11505
 28905  22DF                     u13040:	
 28906  22DF                     l11487:	
 28907  22DF  01A5               	clrf	___lwdiv@counter
 28908  22E0  0AA5               	incf	___lwdiv@counter,f
 28909  22E1  2AEB               	goto	l11493
 28910  22E2                     l11489:	
 28911  22E2  3001               	movlw	1
 28912  22E3                     u13055:	
 28913  22E3  35A0               	lslf	___lwdiv@divisor,f
 28914  22E4  0DA1               	rlf	___lwdiv@divisor+1,f
 28915  22E5  0B89               	decfsz	9,f
 28916  22E6  2AE3               	goto	u13055
 28917  22E7                     l11491:	
 28918  22E7  3001               	movlw	1
 28919  22E8  00A4               	movwf	??___lwdiv
 28920  22E9  0824               	movf	??___lwdiv,w
 28921  22EA  07A5               	addwf	___lwdiv@counter,f
 28922  22EB                     l11493:	
 28923  22EB  1FA1               	btfss	___lwdiv@divisor+1,7
 28924  22EC  2AEE               	goto	u13061
 28925  22ED  2AEF               	goto	u13060
 28926  22EE                     u13061:	
 28927  22EE  2AE2               	goto	l11489
 28928  22EF                     u13060:	
 28929  22EF                     l11495:	
 28930  22EF  3001               	movlw	1
 28931  22F0                     u13075:	
 28932  22F0  35A6               	lslf	___lwdiv@quotient,f
 28933  22F1  0DA7               	rlf	___lwdiv@quotient+1,f
 28934  22F2  0B89               	decfsz	9,f
 28935  22F3  2AF0               	goto	u13075
 28936  22F4  0821               	movf	___lwdiv@divisor+1,w
 28937  22F5  0223               	subwf	___lwdiv@dividend+1,w
 28938  22F6  1D03               	skipz
 28939  22F7  2AFA               	goto	u13085
 28940  22F8  0820               	movf	___lwdiv@divisor,w
 28941  22F9  0222               	subwf	___lwdiv@dividend,w
 28942  22FA                     u13085:	
 28943  22FA  1C03               	skipc
 28944  22FB  2AFD               	goto	u13081
 28945  22FC  2AFE               	goto	u13080
 28946  22FD                     u13081:	
 28947  22FD  2B03               	goto	l11501
 28948  22FE                     u13080:	
 28949  22FE                     l11497:	
 28950  22FE  0820               	movf	___lwdiv@divisor,w
 28951  22FF  02A2               	subwf	___lwdiv@dividend,f
 28952  2300  0821               	movf	___lwdiv@divisor+1,w
 28953  2301  3BA3               	subwfb	___lwdiv@dividend+1,f
 28954  2302                     l11499:	
 28955  2302  1426               	bsf	___lwdiv@quotient,0
 28956  2303                     l11501:	
 28957  2303  3001               	movlw	1
 28958  2304                     u13095:	
 28959  2304  36A1               	lsrf	___lwdiv@divisor+1,f
 28960  2305  0CA0               	rrf	___lwdiv@divisor,f
 28961  2306  0B89               	decfsz	9,f
 28962  2307  2B04               	goto	u13095
 28963  2308                     l11503:	
 28964  2308  3001               	movlw	1
 28965  2309  02A5               	subwf	___lwdiv@counter,f
 28966  230A  1D03               	btfss	3,2
 28967  230B  2B0D               	goto	u13101
 28968  230C  2B0E               	goto	u13100
 28969  230D                     u13101:	
 28970  230D  2AEF               	goto	l11495
 28971  230E                     u13100:	
 28972  230E                     l11505:	
 28973  230E  0827               	movf	___lwdiv@quotient+1,w
 28974  230F  00A1               	movwf	?___lwdiv+1
 28975  2310  0826               	movf	___lwdiv@quotient,w
 28976  2311  00A0               	movwf	?___lwdiv
 28977  2312                     l2038:	
 28978  2312  0008               	return
 28979  2313                     __end_of___lwdiv:	
 28980                           
 28981                           	psect	text92
 28982  2D20                     __ptext92:	
 28983 ;; *************** function _CLOCK_getTime *****************
 28984 ;; Defined at:
 28985 ;;		line 16 in file "clock.c"
 28986 ;; Parameters:    Size  Location     Type
 28987 ;;		None
 28988 ;; Auto vars:     Size  Location     Type
 28989 ;;		None
 28990 ;; Return value:  Size  Location     Type
 28991 ;;                  2    0[BANK0 ] unsigned short 
 28992 ;; Registers used:
 28993 ;;		wreg
 28994 ;; Tracked objects:
 28995 ;;		On entry : 0/0
 28996 ;;		On exit  : 0/0
 28997 ;;		Unchanged: 0/0
 28998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29003 ;;Total ram usage:        2 bytes
 29004 ;; Hardware stack levels used:    1
 29005 ;; Hardware stack levels required when called:    4
 29006 ;; This function calls:
 29007 ;;		Nothing
 29008 ;; This function is called by:
 29009 ;;		_main
 29010 ;;		_BUTTONS_task
 29011 ;;		_CONTROL_DMX
 29012 ;;		_CONTROL_MANUAL
 29013 ;;		_BEAT_task
 29014 ;;		_LED_task_BEAT_STROBE
 29015 ;;		_LED_task_ANIMATION
 29016 ;;		_LED_task_BEAT_CONTINUOUS
 29017 ;; This function uses a non-reentrant model
 29018 ;;
 29019                           
 29020                           
 29021                           ;psect for function _CLOCK_getTime
 29022  2D20                     _CLOCK_getTime:	
 29023  2D20                     l11531:	
 29024                           ;incstack = 0
 29025                           ; Regs used in _CLOCK_getTime: [wreg]
 29026                           
 29027                           
 29028                           ;clock.c: 17:     return currentTime;
 29029  2D20  0142               	movlb	2	; select bank2
 29030  2D21  083A               	movf	(_currentTime+1)^(0+256),w
 29031  2D22  0140               	movlb	0	; select bank0
 29032  2D23  00A1               	movwf	?_CLOCK_getTime+1
 29033  2D24  0142               	movlb	2	; select bank2
 29034  2D25  0839               	movf	_currentTime^(0+256),w
 29035  2D26  0140               	movlb	0	; select bank0
 29036  2D27  00A0               	movwf	?_CLOCK_getTime
 29037  2D28                     l943:	
 29038  2D28  0008               	return
 29039  2D29                     __end_of_CLOCK_getTime:	
 29040                           
 29041                           	psect	text93
 29042  2EC5                     __ptext93:	
 29043 ;; *************** function _BEAT_init *****************
 29044 ;; Defined at:
 29045 ;;		line 39 in file "beat.c"
 29046 ;; Parameters:    Size  Location     Type
 29047 ;;		None
 29048 ;; Auto vars:     Size  Location     Type
 29049 ;;		None
 29050 ;; Return value:  Size  Location     Type
 29051 ;;                  1    wreg      void 
 29052 ;; Registers used:
 29053 ;;		wreg, status,2, status,0, pclath, cstack
 29054 ;; Tracked objects:
 29055 ;;		On entry : 0/0
 29056 ;;		On exit  : 0/0
 29057 ;;		Unchanged: 0/0
 29058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29063 ;;Total ram usage:        0 bytes
 29064 ;; Hardware stack levels used:    1
 29065 ;; Hardware stack levels required when called:    5
 29066 ;; This function calls:
 29067 ;;		_ADCC_SetADTIInterruptHandler
 29068 ;;		_ADCC_SetUpperThreshold
 29069 ;;		_ADCC_StartConversion
 29070 ;; This function is called by:
 29071 ;;		_main
 29072 ;; This function uses a non-reentrant model
 29073 ;;
 29074                           
 29075                           
 29076                           ;psect for function _BEAT_init
 29077  2EC5                     _BEAT_init:	
 29078  2EC5                     l12533:	
 29079                           ;incstack = 0
 29080                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 29081                           
 29082                           
 29083                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 29084  2EC5  0142               	movlb	2	; select bank2
 29085  2EC6  085F               	movf	(_threshold+1)^(0+256),w
 29086  2EC7  0140               	movlb	0	; select bank0
 29087  2EC8  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 29088  2EC9  0142               	movlb	2	; select bank2
 29089  2ECA  085E               	movf	_threshold^(0+256),w
 29090  2ECB  0140               	movlb	0	; select bank0
 29091  2ECC  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 29092  2ECD  31AD  250E  31AE   	fcall	_ADCC_SetUpperThreshold
 29093                           
 29094                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 29095  2ED0  30E5               	movlw	low _adcThresholdHandler
 29096  2ED1  0140               	movlb	0	; select bank0
 29097  2ED2  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 29098  2ED3  302C               	movlw	high _adcThresholdHandler
 29099  2ED4  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 29100  2ED5  31AD  2505  31AE   	fcall	_ADCC_SetADTIInterruptHandler
 29101                           
 29102                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 29103  2ED8  300F               	movlw	15
 29104  2ED9  31AD  2517  31AE   	fcall	_ADCC_StartConversion
 29105  2EDC                     l1311:	
 29106  2EDC  0008               	return
 29107  2EDD                     __end_of_BEAT_init:	
 29108                           
 29109                           	psect	text94
 29110  2D17                     __ptext94:	
 29111 ;; *************** function _ADCC_StartConversion *****************
 29112 ;; Defined at:
 29113 ;;		line 121 in file "mcc_generated_files/adcc.c"
 29114 ;; Parameters:    Size  Location     Type
 29115 ;;  channel         1    wreg     enum E10896
 29116 ;; Auto vars:     Size  Location     Type
 29117 ;;  channel         1    0[BANK0 ] enum E10896
 29118 ;; Return value:  Size  Location     Type
 29119 ;;                  1    wreg      void 
 29120 ;; Registers used:
 29121 ;;		wreg
 29122 ;; Tracked objects:
 29123 ;;		On entry : 0/0
 29124 ;;		On exit  : 0/0
 29125 ;;		Unchanged: 0/0
 29126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29131 ;;Total ram usage:        1 bytes
 29132 ;; Hardware stack levels used:    1
 29133 ;; Hardware stack levels required when called:    4
 29134 ;; This function calls:
 29135 ;;		Nothing
 29136 ;; This function is called by:
 29137 ;;		_BEAT_init
 29138 ;; This function uses a non-reentrant model
 29139 ;;
 29140                           
 29141                           
 29142                           ;psect for function _ADCC_StartConversion
 29143  2D17                     _ADCC_StartConversion:	
 29144                           
 29145                           ;incstack = 0
 29146                           ; Regs used in _ADCC_StartConversion: [wreg]
 29147                           ;ADCC_StartConversion@channel stored from wreg
 29148  2D17  0140               	movlb	0	; select bank0
 29149  2D18  00A0               	movwf	ADCC_StartConversion@channel
 29150  2D19                     l9427:	
 29151                           
 29152                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 29153  2D19  0820               	movf	ADCC_StartConversion@channel,w
 29154  2D1A  0141               	movlb	1	; select bank1
 29155  2D1B  009F               	movwf	31	;volatile
 29156  2D1C                     l9429:	
 29157                           
 29158                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 29159  2D1C  0142               	movlb	2	; select bank2
 29160  2D1D  1791               	bsf	17,7	;volatile
 29161  2D1E                     l9431:	
 29162                           
 29163                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 29164  2D1E  1411               	bsf	17,0	;volatile
 29165  2D1F                     l733:	
 29166  2D1F  0008               	return
 29167  2D20                     __end_of_ADCC_StartConversion:	
 29168                           
 29169                           	psect	text95
 29170  2D0E                     __ptext95:	
 29171 ;; *************** function _ADCC_SetUpperThreshold *****************
 29172 ;; Defined at:
 29173 ;;		line 251 in file "mcc_generated_files/adcc.c"
 29174 ;; Parameters:    Size  Location     Type
 29175 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 29176 ;; Auto vars:     Size  Location     Type
 29177 ;;		None
 29178 ;; Return value:  Size  Location     Type
 29179 ;;                  1    wreg      void 
 29180 ;; Registers used:
 29181 ;;		wreg, status,2
 29182 ;; Tracked objects:
 29183 ;;		On entry : 0/0
 29184 ;;		On exit  : 0/0
 29185 ;;		Unchanged: 0/0
 29186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29191 ;;Total ram usage:        2 bytes
 29192 ;; Hardware stack levels used:    1
 29193 ;; Hardware stack levels required when called:    4
 29194 ;; This function calls:
 29195 ;;		Nothing
 29196 ;; This function is called by:
 29197 ;;		_BEAT_init
 29198 ;;		_BEAT_task
 29199 ;; This function uses a non-reentrant model
 29200 ;;
 29201                           
 29202                           
 29203                           ;psect for function _ADCC_SetUpperThreshold
 29204  2D0E                     _ADCC_SetUpperThreshold:	
 29205  2D0E                     l9433:	
 29206                           ;incstack = 0
 29207                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 29208                           
 29209                           
 29210                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 29211  2D0E  0140               	movlb	0	; select bank0
 29212  2D0F  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 29213  2D10  0141               	movlb	1	; select bank1
 29214  2D11  008F               	movwf	15	;volatile
 29215  2D12                     l9435:	
 29216                           
 29217                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 29218  2D12  0140               	movlb	0	; select bank0
 29219  2D13  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 29220  2D14  0141               	movlb	1	; select bank1
 29221  2D15  008E               	movwf	14	;volatile
 29222  2D16                     l787:	
 29223  2D16  0008               	return
 29224  2D17                     __end_of_ADCC_SetUpperThreshold:	
 29225                           
 29226                           	psect	text96
 29227  2D05                     __ptext96:	
 29228 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 29229 ;; Defined at:
 29230 ;;		line 317 in file "mcc_generated_files/adcc.c"
 29231 ;; Parameters:    Size  Location     Type
 29232 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 29233 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 29234 ;; Auto vars:     Size  Location     Type
 29235 ;;		None
 29236 ;; Return value:  Size  Location     Type
 29237 ;;                  1    wreg      void 
 29238 ;; Registers used:
 29239 ;;		wreg
 29240 ;; Tracked objects:
 29241 ;;		On entry : 0/0
 29242 ;;		On exit  : 0/0
 29243 ;;		Unchanged: 0/0
 29244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29249 ;;Total ram usage:        2 bytes
 29250 ;; Hardware stack levels used:    1
 29251 ;; Hardware stack levels required when called:    4
 29252 ;; This function calls:
 29253 ;;		Nothing
 29254 ;; This function is called by:
 29255 ;;		_ADCC_Initialize
 29256 ;;		_BEAT_init
 29257 ;; This function uses a non-reentrant model
 29258 ;;
 29259                           
 29260                           
 29261                           ;psect for function _ADCC_SetADTIInterruptHandler
 29262  2D05                     _ADCC_SetADTIInterruptHandler:	
 29263  2D05                     l8999:	
 29264                           ;incstack = 0
 29265                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 29266                           
 29267                           
 29268                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 29269  2D05  0140               	movlb	0	; select bank0
 29270  2D06  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 29271  2D07  0143               	movlb	3	; select bank3
 29272  2D08  00EA               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+384)
 29273  2D09  0140               	movlb	0	; select bank0
 29274  2D0A  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 29275  2D0B  0143               	movlb	3	; select bank3
 29276  2D0C  00E9               	movwf	_ADCC_ADTI_InterruptHandler^(0+384)
 29277  2D0D                     l818:	
 29278  2D0D  0008               	return
 29279  2D0E                     __end_of_ADCC_SetADTIInterruptHandler:	
 29280                           
 29281                           	psect	intentry
 29282  0004                     __pintentry:	
 29283 ;; *************** function _INTERRUPT_InterruptManager *****************
 29284 ;; Defined at:
 29285 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29286 ;; Parameters:    Size  Location     Type
 29287 ;;		None
 29288 ;; Auto vars:     Size  Location     Type
 29289 ;;		None
 29290 ;; Return value:  Size  Location     Type
 29291 ;;                  1    wreg      void 
 29292 ;; Registers used:
 29293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29294 ;; Tracked objects:
 29295 ;;		On entry : 0/0
 29296 ;;		On exit  : 0/0
 29297 ;;		Unchanged: 0/0
 29298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29303 ;;Total ram usage:        0 bytes
 29304 ;; Hardware stack levels used:    1
 29305 ;; Hardware stack levels required when called:    3
 29306 ;; This function calls:
 29307 ;;		Absolute function
 29308 ;;		_ADCC_ThresholdISR
 29309 ;;		_DMX_interrupt
 29310 ;;		_EUSART1_Receive_ISR
 29311 ;;		_I2C1_BusCollisionISR
 29312 ;;		_I2C1_ISR
 29313 ;;		_TMR0_ISR
 29314 ;; This function is called by:
 29315 ;;		Interrupt level 1
 29316 ;; This function uses a non-reentrant model
 29317 ;;
 29318                           
 29319  0004                     _INTERRUPT_InterruptManager:	
 29320                           
 29321                           ;incstack = 0
 29322 ;; hardware stack exceeded
 29323  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 29324                           
 29325                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 29326  0005  3180               	pagesel	$
 29327  0006                     i1l12953:	
 29328                           
 29329                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 29330  0006  014E               	movlb	14	; select bank14
 29331  0007  1E96               	btfss	22,5	;volatile
 29332  0008  280A               	goto	u1491_21
 29333  0009  280B               	goto	u1491_20
 29334  000A                     u1491_21:	
 29335  000A  2813               	goto	i1l429
 29336  000B                     u1491_20:	
 29337  000B                     i1l12955:	
 29338  000B  1E8C               	btfss	12,5	;volatile
 29339  000C  280E               	goto	u1492_21
 29340  000D  280F               	goto	u1492_20
 29341  000E                     u1492_21:	
 29342  000E  2813               	goto	i1l429
 29343  000F                     u1492_20:	
 29344  000F                     i1l12957:	
 29345                           
 29346                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 29347  000F  31AD  25EB  3180   	fcall	_TMR0_ISR
 29348                           
 29349                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 29350  0012  284A               	goto	i1l441
 29351  0013                     i1l429:	
 29352                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 29353                           
 29354  0013  1F0B               	btfss	11,6	;volatile
 29355  0014  2816               	goto	u1493_21
 29356  0015  2817               	goto	u1493_20
 29357  0016                     u1493_21:	
 29358  0016  284A               	goto	i1l441
 29359  0017                     u1493_20:	
 29360  0017                     i1l12959:	
 29361                           
 29362                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 29363  0017  1C99               	btfss	25,1	;volatile
 29364  0018  281A               	goto	u1494_21
 29365  0019  281B               	goto	u1494_20
 29366  001A                     u1494_21:	
 29367  001A  2823               	goto	i1l432
 29368  001B                     u1494_20:	
 29369  001B                     i1l12961:	
 29370  001B  1C8F               	btfss	15,1	;volatile
 29371  001C  281E               	goto	u1495_21
 29372  001D  281F               	goto	u1495_20
 29373  001E                     u1495_21:	
 29374  001E  2823               	goto	i1l432
 29375  001F                     u1495_20:	
 29376  001F                     i1l12963:	
 29377                           
 29378                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 29379  001F  31AC  24E2  3180   	fcall	_I2C1_BusCollisionISR
 29380                           
 29381                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 29382  0022  284A               	goto	i1l441
 29383  0023                     i1l432:	
 29384                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 29385                           
 29386  0023  1C19               	btfss	25,0	;volatile
 29387  0024  2826               	goto	u1496_21
 29388  0025  2827               	goto	u1496_20
 29389  0026                     u1496_21:	
 29390  0026  282F               	goto	i1l434
 29391  0027                     u1496_20:	
 29392  0027                     i1l12965:	
 29393  0027  1C0F               	btfss	15,0	;volatile
 29394  0028  282A               	goto	u1497_21
 29395  0029  282B               	goto	u1497_20
 29396  002A                     u1497_21:	
 29397  002A  282F               	goto	i1l434
 29398  002B                     u1497_20:	
 29399  002B                     i1l12967:	
 29400                           
 29401                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 29402  002B  3188  2002  3180   	fcall	_I2C1_ISR
 29403                           
 29404                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 29405  002E  284A               	goto	i1l441
 29406  002F                     i1l434:	
 29407                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 29408                           
 29409  002F  1C97               	btfss	23,1	;volatile
 29410  0030  2832               	goto	u1498_21
 29411  0031  2833               	goto	u1498_20
 29412  0032                     u1498_21:	
 29413  0032  283B               	goto	i1l436
 29414  0033                     u1498_20:	
 29415  0033                     i1l12969:	
 29416  0033  1C8D               	btfss	13,1	;volatile
 29417  0034  2836               	goto	u1499_21
 29418  0035  2837               	goto	u1499_20
 29419  0036                     u1499_21:	
 29420  0036  283B               	goto	i1l436
 29421  0037                     u1499_20:	
 29422  0037                     i1l12971:	
 29423                           
 29424                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 29425  0037  31AD  25DC  3180   	fcall	_ADCC_ThresholdISR
 29426                           
 29427                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 29428  003A  284A               	goto	i1l441
 29429  003B                     i1l436:	
 29430                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 29431                           
 29432  003B  1E99               	btfss	25,5	;volatile
 29433  003C  283E               	goto	u1500_21
 29434  003D  283F               	goto	u1500_20
 29435  003E                     u1500_21:	
 29436  003E  284A               	goto	i1l435
 29437  003F                     u1500_20:	
 29438  003F                     i1l12973:	
 29439  003F  1E8F               	btfss	15,5	;volatile
 29440  0040  2842               	goto	u1501_21
 29441  0041  2843               	goto	u1501_20
 29442  0042                     u1501_21:	
 29443  0042  284A               	goto	i1l435
 29444  0043                     u1501_20:	
 29445  0043                     i1l12975:	
 29446                           
 29447                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 29448  0043  0144               	movlb	4	; select bank4
 29449  0044  086D               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+512),w
 29450  0045  008A               	movwf	10
 29451  0046  086C               	movf	_EUSART1_RxDefaultInterruptHandler^(0+512),w
 29452  0047  000A               	callw
 29453  0048  3180               	pagesel	$
 29454                           
 29455                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 29456  0049  284A               	goto	i1l441
 29457  004A                     i1l435:	
 29458  004A                     i1l441:	
 29459  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 29460  004B  0009               	retfie
 29461  004C                     __end_of_INTERRUPT_InterruptManager:	
 29462                           
 29463                           	psect	text98
 29464  2DEB                     __ptext98:	
 29465 ;; *************** function _TMR0_ISR *****************
 29466 ;; Defined at:
 29467 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 29468 ;; Parameters:    Size  Location     Type
 29469 ;;		None
 29470 ;; Auto vars:     Size  Location     Type
 29471 ;;		None
 29472 ;; Return value:  Size  Location     Type
 29473 ;;                  1    wreg      void 
 29474 ;; Registers used:
 29475 ;;		wreg, status,2, status,0, pclath, cstack
 29476 ;; Tracked objects:
 29477 ;;		On entry : 0/0
 29478 ;;		On exit  : 0/0
 29479 ;;		Unchanged: 0/0
 29480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29485 ;;Total ram usage:        0 bytes
 29486 ;; Hardware stack levels used:    1
 29487 ;; Hardware stack levels required when called:    1
 29488 ;; This function calls:
 29489 ;;		Absolute function
 29490 ;;		_CLOCK_timerCallback
 29491 ;;		_TMR0_DefaultInterruptHandler
 29492 ;; This function is called by:
 29493 ;;		_INTERRUPT_InterruptManager
 29494 ;; This function uses a non-reentrant model
 29495 ;;
 29496                           
 29497                           
 29498                           ;psect for function _TMR0_ISR
 29499  2DEB                     _TMR0_ISR:	
 29500  2DEB                     i1l12361:	
 29501                           ;incstack = 0
 29502 ;; hardware stack exceeded
 29503                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 29504                           
 29505                           
 29506                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 29507  2DEB  014E               	movlb	14	; select bank14
 29508  2DEC  128C               	bcf	12,5	;volatile
 29509  2DED                     i1l12363:	
 29510                           
 29511                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 29512  2DED  0143               	movlb	3	; select bank3
 29513  2DEE  086B               	movf	_TMR0_InterruptHandler^(0+384),w
 29514  2DEF  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 29515  2DF0  1903               	btfsc	3,2
 29516  2DF1  2DF3               	goto	u1441_21
 29517  2DF2  2DF4               	goto	u1441_20
 29518  2DF3                     u1441_21:	
 29519  2DF3  2DF9               	goto	i1l483
 29520  2DF4                     u1441_20:	
 29521  2DF4                     i1l12365:	
 29522                           
 29523                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 29524  2DF4  086C               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 29525  2DF5  008A               	movwf	10
 29526  2DF6  086B               	movf	_TMR0_InterruptHandler^(0+384),w
 29527  2DF7  000A               	callw
 29528  2DF8  31AD               	pagesel	$
 29529  2DF9                     i1l483:	
 29530  2DF9  0008               	return
 29531  2DFA                     __end_of_TMR0_ISR:	
 29532                           
 29533                           	psect	text99
 29534  2CF1                     __ptext99:	
 29535 ;; *************** function _CLOCK_timerCallback *****************
 29536 ;; Defined at:
 29537 ;;		line 20 in file "clock.c"
 29538 ;; Parameters:    Size  Location     Type
 29539 ;;		None
 29540 ;; Auto vars:     Size  Location     Type
 29541 ;;		None
 29542 ;; Return value:  Size  Location     Type
 29543 ;;                  1    wreg      void 
 29544 ;; Registers used:
 29545 ;;		wreg
 29546 ;; Tracked objects:
 29547 ;;		On entry : 0/0
 29548 ;;		On exit  : 0/0
 29549 ;;		Unchanged: 0/0
 29550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29555 ;;Total ram usage:        0 bytes
 29556 ;; Hardware stack levels used:    1
 29557 ;; This function calls:
 29558 ;;		Nothing
 29559 ;; This function is called by:
 29560 ;;		_CLOCK_init
 29561 ;;		_TMR0_ISR
 29562 ;; This function uses a non-reentrant model
 29563 ;;
 29564                           
 29565                           
 29566                           ;psect for function _CLOCK_timerCallback
 29567  2CF1                     _CLOCK_timerCallback:	
 29568  2CF1                     i1l12071:	
 29569                           ;incstack = 0
 29570 ;; hardware stack exceeded
 29571                           ; Regs used in _CLOCK_timerCallback: [wreg]
 29572                           
 29573                           
 29574                           ;clock.c: 21:     currentTime++;
 29575  2CF1  3001               	movlw	1
 29576  2CF2  0142               	movlb	2	; select bank2
 29577  2CF3  07B9               	addwf	_currentTime^(0+256),f
 29578  2CF4  3000               	movlw	0
 29579  2CF5  3DBA               	addwfc	(_currentTime+1)^(0+256),f
 29580  2CF6                     i1l946:	
 29581  2CF6  0008               	return
 29582  2CF7                     __end_of_CLOCK_timerCallback:	
 29583                           
 29584                           	psect	text100
 29585  2CE1                     __ptext100:	
 29586 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 29587 ;; Defined at:
 29588 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 29589 ;; Parameters:    Size  Location     Type
 29590 ;;		None
 29591 ;; Auto vars:     Size  Location     Type
 29592 ;;		None
 29593 ;; Return value:  Size  Location     Type
 29594 ;;                  1    wreg      void 
 29595 ;; Registers used:
 29596 ;;		None
 29597 ;; Tracked objects:
 29598 ;;		On entry : 0/0
 29599 ;;		On exit  : 0/0
 29600 ;;		Unchanged: 0/0
 29601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29606 ;;Total ram usage:        0 bytes
 29607 ;; Hardware stack levels used:    1
 29608 ;; This function calls:
 29609 ;;		Nothing
 29610 ;; This function is called by:
 29611 ;;		_TMR0_Initialize
 29612 ;;		_TMR0_ISR
 29613 ;; This function uses a non-reentrant model
 29614 ;;
 29615                           
 29616                           
 29617                           ;psect for function _TMR0_DefaultInterruptHandler
 29618  2CE1                     _TMR0_DefaultInterruptHandler:	
 29619  2CE1                     i1l489:	
 29620                           ;incstack = 0
 29621 ;; hardware stack exceeded
 29622                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 29623                           
 29624  2CE1  0008               	return
 29625  2CE2                     __end_of_TMR0_DefaultInterruptHandler:	
 29626                           
 29627                           	psect	text101
 29628  0802                     __ptext101:	
 29629 ;; *************** function _I2C1_ISR *****************
 29630 ;; Defined at:
 29631 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 29632 ;; Parameters:    Size  Location     Type
 29633 ;;		None
 29634 ;; Auto vars:     Size  Location     Type
 29635 ;;		None
 29636 ;; Return value:  Size  Location     Type
 29637 ;;                  1    wreg      void 
 29638 ;; Registers used:
 29639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29640 ;; Tracked objects:
 29641 ;;		On entry : 0/0
 29642 ;;		On exit  : 0/0
 29643 ;;		Unchanged: 0/0
 29644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29649 ;;Total ram usage:        4 bytes
 29650 ;; Hardware stack levels used:    1
 29651 ;; Hardware stack levels required when called:    1
 29652 ;; This function calls:
 29653 ;;		_I2C1_FunctionComplete
 29654 ;;		_I2C1_Stop
 29655 ;; This function is called by:
 29656 ;;		_INTERRUPT_InterruptManager
 29657 ;; This function uses a non-reentrant model
 29658 ;;
 29659                           
 29660                           
 29661                           ;psect for function _I2C1_ISR
 29662  0802                     _I2C1_ISR:	
 29663  0802                     i1l12369:	
 29664                           ;incstack = 0
 29665 ;; hardware stack exceeded
 29666                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 29667                           
 29668                           
 29669                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 29670  0802  014E               	movlb	14	; select bank14
 29671  0803  100F               	bcf	15,0	;volatile
 29672                           
 29673                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 29674  0804  0143               	movlb	3	; select bank3
 29675  0805  1F90               	btfss	16,7	;volatile
 29676  0806  2808               	goto	u1442_21
 29677  0807  2809               	goto	u1442_20
 29678  0808                     u1442_21:	
 29679  0808  2954               	goto	i1l12505
 29680  0809                     u1442_20:	
 29681  0809                     i1l12371:	
 29682                           
 29683                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 29684  0809  1390               	bcf	16,7	;volatile
 29685  080A                     i1l12373:	
 29686                           
 29687                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 29688  080A  0142               	movlb	2	; select bank2
 29689  080B  01D6               	clrf	_i2c1_state^(0+256)
 29690  080C                     i1l12375:	
 29691                           
 29692                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 29693  080C  0854               	movf	_p_i2c1_current^(0+256),w
 29694  080D  3E03               	addlw	3
 29695  080E  0086               	movwf	6
 29696  080F  3001               	movlw	1	; select bank2/3
 29697  0810  0087               	movwf	7
 29698  0811  0801               	movf	1,w
 29699  0812  0086               	movwf	6
 29700  0813  0187               	clrf	7
 29701  0814  0181               	clrf	1
 29702  0815  0A81               	incf	1,f
 29703  0816                     i1l12377:	
 29704                           
 29705                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 29706  0816  01D4               	clrf	_p_i2c1_current^(0+256)
 29707  0817  2980               	goto	i1l547
 29708  0818                     i1l549:	
 29709                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 29710                           
 29711                           
 29712                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 29713  0818  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 29714  0819  281B               	goto	u1443_21
 29715  081A  281C               	goto	u1443_20
 29716  081B                     u1443_21:	
 29717  081B  2980               	goto	i1l547
 29718  081C                     u1443_20:	
 29719  081C                     i1l12381:	
 29720                           
 29721                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 29722  081C  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 29723  081D  00F9               	movwf	??_I2C1_ISR
 29724  081E  0879               	movf	??_I2C1_ISR,w
 29725  081F  00D4               	movwf	_p_i2c1_current^(0+256)
 29726  0820                     i1l12383:	
 29727                           
 29728                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 29729  0820  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 29730  0821  0086               	movwf	6
 29731  0822  3001               	movlw	1	; select bank2/3
 29732  0823  0087               	movwf	7
 29733  0824  0801               	movf	1,w
 29734  0825  00F9               	movwf	??_I2C1_ISR
 29735  0826  0879               	movf	??_I2C1_ISR,w
 29736  0827  00D5               	movwf	_i2c1_trb_count^(0+256)
 29737  0828                     i1l12385:	
 29738                           
 29739                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 29740  0828  0A21               	incf	(low ((_i2c1_object| (0+256)+1)))^0,w
 29741  0829  0086               	movwf	6
 29742  082A  3001               	movlw	1	; select bank2/3
 29743  082B  0087               	movwf	7
 29744  082C  3F40               	moviw [0]fsr1
 29745  082D  00BD               	movwf	_p_i2c1_trb_current^(0+256)
 29746  082E  3F41               	moviw [1]fsr1
 29747  082F  00BE               	movwf	(_p_i2c1_trb_current+1)^(0+256)
 29748                           
 29749                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 29750  0830  3004               	movlw	4
 29751  0831  00F9               	movwf	??_I2C1_ISR
 29752  0832  0879               	movf	??_I2C1_ISR,w
 29753  0833  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 29754  0834                     i1l12387:	
 29755                           
 29756                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 29757  0834  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 29758  0835  3AE9               	xorlw	(low ((_i2c1_tr_queue| (0+256)+4)))& (0+255)
 29759  0836  1D03               	skipz
 29760  0837  2839               	goto	u1444_21
 29761  0838  283A               	goto	u1444_20
 29762  0839                     u1444_21:	
 29763  0839  283E               	goto	i1l12391
 29764  083A                     u1444_20:	
 29765  083A                     i1l12389:	
 29766                           
 29767                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 29768  083A  30E5               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 29769  083B  00F9               	movwf	??_I2C1_ISR
 29770  083C  0879               	movf	??_I2C1_ISR,w
 29771  083D  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 29772  083E                     i1l12391:	
 29773                           
 29774                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 29775  083E  1022               	bcf	(_i2c1_object^(0+256)+2),0
 29776                           
 29777                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 29778  083F  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 29779  0840  0620               	xorwf	_i2c1_object^(0+256),w
 29780  0841  1D03               	skipz
 29781  0842  2844               	goto	u1445_21
 29782  0843  2845               	goto	u1445_20
 29783  0844                     u1445_21:	
 29784  0844  2846               	goto	i1l552
 29785  0845                     u1445_20:	
 29786  0845                     i1l12393:	
 29787                           
 29788                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 29789  0845  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 29790  0846                     i1l552:	
 29791                           ;mcc_generated_files/i2c1.c: 290:                 }
 29792                           
 29793                           
 29794                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 29795  0846  0143               	movlb	3	; select bank3
 29796  0847  1411               	bsf	17,0	;volatile
 29797  0848                     i1l12395:	
 29798                           
 29799                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 29800  0848  3002               	movlw	2
 29801  0849  00F9               	movwf	??_I2C1_ISR
 29802  084A  0879               	movf	??_I2C1_ISR,w
 29803  084B  0142               	movlb	2	; select bank2
 29804  084C  00D6               	movwf	_i2c1_state^(0+256)
 29805  084D  2980               	goto	i1l547
 29806  084E                     i1l554:	
 29807                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 29808                           
 29809                           
 29810                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 29811  084E  0143               	movlb	3	; select bank3
 29812  084F  1491               	bsf	17,1	;volatile
 29813  0850  2848               	goto	i1l12395
 29814  0851                     i1l555:	
 29815                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 29816                           
 29817                           
 29818                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 29819  0851  0143               	movlb	3	; select bank3
 29820  0852  1F11               	btfss	17,6	;volatile
 29821  0853  2855               	goto	u1446_21
 29822  0854  2856               	goto	u1446_20
 29823  0855                     u1446_21:	
 29824  0855  2860               	goto	i1l12403
 29825  0856                     u1446_20:	
 29826  0856                     i1l12399:	
 29827                           
 29828                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 29829  0856  3001               	movlw	1
 29830  0857  00F9               	movwf	??_I2C1_ISR
 29831  0858  0879               	movf	??_I2C1_ISR,w
 29832  0859  0142               	movlb	2	; select bank2
 29833  085A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 29834  085B                     i1l12401:	
 29835                           
 29836                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 29837  085B  3004               	movlw	4
 29838  085C  31AF  2745  3188   	fcall	_I2C1_Stop
 29839                           
 29840                           ;mcc_generated_files/i2c1.c: 319:             }
 29841  085F  2980               	goto	i1l547
 29842  0860                     i1l12403:	
 29843                           
 29844                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 29845  0860  0142               	movlb	2	; select bank2
 29846  0861  085B               	movf	(I2C1_ISR@i2c_address+1)^(0+256),w
 29847  0862  00FA               	movwf	??_I2C1_ISR+1
 29848  0863  085A               	movf	I2C1_ISR@i2c_address^(0+256),w
 29849  0864  00F9               	movwf	??_I2C1_ISR
 29850  0865  36FA               	lsrf	??_I2C1_ISR+1,f
 29851  0866  0CF9               	rrf	??_I2C1_ISR,f
 29852  0867  0879               	movf	??_I2C1_ISR,w
 29853  0868  0143               	movlb	3	; select bank3
 29854  0869  008C               	movwf	12	;volatile
 29855  086A                     i1l12405:	
 29856                           
 29857                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 29858  086A  0142               	movlb	2	; select bank2
 29859  086B  1C5A               	btfss	I2C1_ISR@i2c_address^(0+256),0
 29860  086C  286E               	goto	u1447_21
 29861  086D  286F               	goto	u1447_20
 29862  086E                     u1447_21:	
 29863  086E  2874               	goto	i1l12409
 29864  086F                     u1447_20:	
 29865  086F                     i1l12407:	
 29866                           
 29867                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 29868  086F  300B               	movlw	11
 29869  0870  00F9               	movwf	??_I2C1_ISR
 29870  0871  0879               	movf	??_I2C1_ISR,w
 29871  0872  00D6               	movwf	_i2c1_state^(0+256)
 29872                           
 29873                           ;mcc_generated_files/i2c1.c: 331:                 }
 29874  0873  2980               	goto	i1l547
 29875  0874                     i1l12409:	
 29876                           
 29877                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 29878  0874  3003               	movlw	3
 29879  0875  00F9               	movwf	??_I2C1_ISR
 29880  0876  0879               	movf	??_I2C1_ISR,w
 29881  0877  00D6               	movwf	_i2c1_state^(0+256)
 29882  0878  2980               	goto	i1l547
 29883  0879                     i1l560:	
 29884                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 29885                           
 29886                           
 29887                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 29888  0879  0143               	movlb	3	; select bank3
 29889  087A  1F11               	btfss	17,6	;volatile
 29890  087B  287D               	goto	u1448_21
 29891  087C  287E               	goto	u1448_20
 29892  087D                     u1448_21:	
 29893  087D  2888               	goto	i1l561
 29894  087E                     u1448_20:	
 29895  087E                     i1l12411:	
 29896                           
 29897                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 29898  087E  3001               	movlw	1
 29899  087F  00F9               	movwf	??_I2C1_ISR
 29900  0880  0879               	movf	??_I2C1_ISR,w
 29901  0881  0142               	movlb	2	; select bank2
 29902  0882  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 29903  0883                     i1l12413:	
 29904                           
 29905                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 29906  0883  3004               	movlw	4
 29907  0884  31AF  2745  3188   	fcall	_I2C1_Stop
 29908                           
 29909                           ;mcc_generated_files/i2c1.c: 347:             }
 29910  0887  2980               	goto	i1l547
 29911  0888                     i1l561:	
 29912                           ;mcc_generated_files/i2c1.c: 348:             else
 29913                           
 29914                           
 29915                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 29916  0888  1491               	bsf	17,1	;volatile
 29917  0889                     i1l12415:	
 29918                           
 29919                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 29920  0889  0142               	movlb	2	; select bank2
 29921  088A  085B               	movf	(I2C1_ISR@i2c_address+1)^(0+256),w
 29922  088B  00FA               	movwf	??_I2C1_ISR+1
 29923  088C  085A               	movf	I2C1_ISR@i2c_address^(0+256),w
 29924  088D  00F9               	movwf	??_I2C1_ISR
 29925  088E  087A               	movf	??_I2C1_ISR+1,w
 29926  088F  00F9               	movwf	??_I2C1_ISR
 29927  0890  01FA               	clrf	??_I2C1_ISR+1
 29928  0891  3006               	movlw	6
 29929  0892  0579               	andwf	??_I2C1_ISR,w
 29930  0893  00FB               	movwf	??_I2C1_ISR+2
 29931  0894  3000               	movlw	0
 29932  0895  057A               	andwf	??_I2C1_ISR+1,w
 29933  0896  00FC               	movwf	??_I2C1_ISR+3
 29934  0897  30F0               	movlw	240
 29935  0898  047B               	iorwf	??_I2C1_ISR+2,w
 29936  0899  00DA               	movwf	I2C1_ISR@i2c_address^(0+256)
 29937  089A  3000               	movlw	0
 29938  089B  047C               	iorwf	??_I2C1_ISR+3,w
 29939  089C  00DB               	movwf	(I2C1_ISR@i2c_address+1)^(0+256)
 29940  089D                     i1l12417:	
 29941                           
 29942                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 29943  089D  145A               	bsf	I2C1_ISR@i2c_address^(0+256),0
 29944  089E                     i1l12419:	
 29945                           
 29946                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 29947  089E  01D1               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 29948  089F  0AD1               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 29949  08A0  2848               	goto	i1l12395
 29950  08A1                     i1l12423:	
 29951                           
 29952                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 29953  08A1  0351               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 29954  08A2  1903               	btfsc	3,2
 29955  08A3  28A5               	goto	u1449_21
 29956  08A4  28A6               	goto	u1449_20
 29957  08A5                     u1449_21:	
 29958  08A5  28C0               	goto	i1l12443
 29959  08A6                     u1449_20:	
 29960  08A6                     i1l12425:	
 29961                           
 29962                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 29963  08A6  083D               	movf	_p_i2c1_trb_current^(0+256),w
 29964  08A7  0086               	movwf	6
 29965  08A8  083E               	movf	(_p_i2c1_trb_current+1)^(0+256),w
 29966  08A9  0087               	movwf	7
 29967  08AA  3F40               	moviw [0]fsr1
 29968  08AB  00DA               	movwf	I2C1_ISR@i2c_address^(0+256)
 29969  08AC  3F41               	moviw [1]fsr1
 29970  08AD  00DB               	movwf	(I2C1_ISR@i2c_address+1)^(0+256)
 29971  08AE                     i1l12427:	
 29972                           
 29973                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 29974  08AE  083D               	movf	_p_i2c1_trb_current^(0+256),w
 29975  08AF  0086               	movwf	6
 29976  08B0  083E               	movf	(_p_i2c1_trb_current+1)^(0+256),w
 29977  08B1  0087               	movwf	7
 29978  08B2  3143               	addfsr 1,3
 29979  08B3  0801               	movf	1,w
 29980  08B4  00F9               	movwf	??_I2C1_ISR
 29981  08B5  0879               	movf	??_I2C1_ISR,w
 29982  08B6  00D3               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 29983  08B7                     i1l12429:	
 29984                           
 29985                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 29986  08B7  083D               	movf	_p_i2c1_trb_current^(0+256),w
 29987  08B8  0086               	movwf	6
 29988  08B9  083E               	movf	(_p_i2c1_trb_current+1)^(0+256),w
 29989  08BA  0087               	movwf	7
 29990  08BB  3142               	addfsr 1,2
 29991  08BC  0801               	movf	1,w
 29992  08BD  00F9               	movwf	??_I2C1_ISR
 29993  08BE  0879               	movf	??_I2C1_ISR,w
 29994  08BF  00D2               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 29995  08C0                     i1l12443:	
 29996                           
 29997                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 29998  08C0  085A               	movf	I2C1_ISR@i2c_address^(0+256),w
 29999  08C1  0143               	movlb	3	; select bank3
 30000  08C2  008C               	movwf	12	;volatile
 30001  08C3                     i1l12445:	
 30002                           
 30003                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 30004  08C3  0142               	movlb	2	; select bank2
 30005  08C4  1C5A               	btfss	I2C1_ISR@i2c_address^(0+256),0
 30006  08C5  28C7               	goto	u1450_21
 30007  08C6  28C8               	goto	u1450_20
 30008  08C7                     u1450_21:	
 30009  08C7  2874               	goto	i1l12409
 30010  08C8                     u1450_20:	
 30011  08C8                     i1l12447:	
 30012                           
 30013                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 30014  08C8  3005               	movlw	5
 30015  08C9  00F9               	movwf	??_I2C1_ISR
 30016  08CA  0879               	movf	??_I2C1_ISR,w
 30017  08CB  00D6               	movwf	_i2c1_state^(0+256)
 30018                           
 30019                           ;mcc_generated_files/i2c1.c: 419:                 }
 30020  08CC  2980               	goto	i1l547
 30021  08CD                     i1l571:	
 30022                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 30023                           
 30024                           
 30025                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 30026  08CD  0143               	movlb	3	; select bank3
 30027  08CE  1F11               	btfss	17,6	;volatile
 30028  08CF  28D1               	goto	u1451_21
 30029  08D0  28D2               	goto	u1451_20
 30030  08D1                     u1451_21:	
 30031  08D1  28DE               	goto	i1l12457
 30032  08D2                     u1451_20:	
 30033  08D2                     i1l12451:	
 30034                           
 30035                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 30036  08D2  3001               	movlw	1
 30037  08D3  00F9               	movwf	??_I2C1_ISR
 30038  08D4  0879               	movf	??_I2C1_ISR,w
 30039  08D5  0142               	movlb	2	; select bank2
 30040  08D6  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 30041  08D7                     i1l12453:	
 30042                           
 30043                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 30044  08D7  0143               	movlb	3	; select bank3
 30045  08D8  1311               	bcf	17,6	;volatile
 30046  08D9                     i1l12455:	
 30047                           
 30048                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 30049  08D9  3005               	movlw	5
 30050  08DA  31AF  2745  3188   	fcall	_I2C1_Stop
 30051                           
 30052                           ;mcc_generated_files/i2c1.c: 442:             }
 30053  08DD  2980               	goto	i1l547
 30054  08DE                     i1l12457:	
 30055                           
 30056                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 30057  08DE  3001               	movlw	1
 30058  08DF  0142               	movlb	2	; select bank2
 30059  08E0  02D2               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 30060  08E1  0A52               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 30061  08E2  1D03               	btfss	3,2
 30062  08E3  28E5               	goto	u1452_21
 30063  08E4  28E6               	goto	u1452_20
 30064  08E5                     u1452_21:	
 30065  08E5  28F8               	goto	i1l12467
 30066  08E6                     u1452_20:	
 30067  08E6                     i1l12459:	
 30068                           
 30069                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 30070  08E6  3004               	movlw	4
 30071  08E7  07BD               	addwf	_p_i2c1_trb_current^(0+256),f
 30072  08E8  3000               	movlw	0
 30073  08E9  3DBE               	addwfc	(_p_i2c1_trb_current+1)^(0+256),f
 30074  08EA                     i1l12461:	
 30075                           
 30076                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 30077  08EA  3001               	movlw	1
 30078  08EB  02D5               	subwf	_i2c1_trb_count^(0+256),f
 30079  08EC  1D03               	btfss	3,2
 30080  08ED  28EF               	goto	u1453_21
 30081  08EE  28F0               	goto	u1453_20
 30082  08EF                     u1453_21:	
 30083  08EF  28F5               	goto	i1l575
 30084  08F0                     u1453_20:	
 30085  08F0                     i1l12463:	
 30086                           
 30087                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 30088  08F0  3000               	movlw	0
 30089  08F1  31AF  2745  3188   	fcall	_I2C1_Stop
 30090                           
 30091                           ;mcc_generated_files/i2c1.c: 457:                     }
 30092  08F4  2980               	goto	i1l547
 30093  08F5                     i1l575:	
 30094                           ;mcc_generated_files/i2c1.c: 458:                     else
 30095                           
 30096                           
 30097                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 30098  08F5  0143               	movlb	3	; select bank3
 30099  08F6  1491               	bsf	17,1	;volatile
 30100  08F7  2848               	goto	i1l12395
 30101  08F8                     i1l12467:	
 30102                           
 30103                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 30104  08F8  0853               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 30105  08F9  0086               	movwf	6
 30106  08FA  0187               	clrf	7
 30107  08FB  0801               	movf	1,w
 30108  08FC  0143               	movlb	3	; select bank3
 30109  08FD  008C               	movwf	12	;volatile
 30110  08FE                     i1l12469:	
 30111  08FE  3001               	movlw	1
 30112  08FF  00F9               	movwf	??_I2C1_ISR
 30113  0900  0879               	movf	??_I2C1_ISR,w
 30114  0901  0142               	movlb	2	; select bank2
 30115  0902  07D3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 30116  0903  2980               	goto	i1l547
 30117  0904                     i1l578:	
 30118                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 30119                           
 30120                           
 30121                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 30122  0904  0143               	movlb	3	; select bank3
 30123  0905  1F11               	btfss	17,6	;volatile
 30124  0906  2908               	goto	u1454_21
 30125  0907  2909               	goto	u1454_20
 30126  0908                     u1454_21:	
 30127  0908  2915               	goto	i1l579
 30128  0909                     u1454_20:	
 30129  0909                     i1l12471:	
 30130                           
 30131                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 30132  0909  3001               	movlw	1
 30133  090A  00F9               	movwf	??_I2C1_ISR
 30134  090B  0879               	movf	??_I2C1_ISR,w
 30135  090C  0142               	movlb	2	; select bank2
 30136  090D  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 30137  090E                     i1l12473:	
 30138                           
 30139                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 30140  090E  3004               	movlw	4
 30141  090F  31AF  2745  3188   	fcall	_I2C1_Stop
 30142  0912                     i1l12475:	
 30143                           
 30144                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 30145  0912  0143               	movlb	3	; select bank3
 30146  0913  1311               	bcf	17,6	;volatile
 30147                           
 30148                           ;mcc_generated_files/i2c1.c: 495:             }
 30149  0914  2980               	goto	i1l547
 30150  0915                     i1l579:	
 30151                           ;mcc_generated_files/i2c1.c: 496:             else
 30152                           
 30153                           
 30154                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 30155  0915  1591               	bsf	17,3	;volatile
 30156  0916                     i1l12477:	
 30157                           
 30158                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 30159  0916  3008               	movlw	8
 30160  0917  00F9               	movwf	??_I2C1_ISR
 30161  0918  0879               	movf	??_I2C1_ISR,w
 30162  0919  0142               	movlb	2	; select bank2
 30163  091A  00D6               	movwf	_i2c1_state^(0+256)
 30164  091B  2980               	goto	i1l547
 30165  091C                     i1l12479:	
 30166                           
 30167                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 30168  091C  3008               	movlw	8
 30169  091D  00F9               	movwf	??_I2C1_ISR
 30170  091E  0879               	movf	??_I2C1_ISR,w
 30171  091F  00D6               	movwf	_i2c1_state^(0+256)
 30172  0920                     i1l12481:	
 30173                           
 30174                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 30175  0920  0143               	movlb	3	; select bank3
 30176  0921  1591               	bsf	17,3	;volatile
 30177                           
 30178                           ;mcc_generated_files/i2c1.c: 513:             break;
 30179  0922  2980               	goto	i1l547
 30180  0923                     i1l12483:	
 30181                           
 30182                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 30183  0923  0143               	movlb	3	; select bank3
 30184  0924  080C               	movf	12,w	;volatile
 30185  0925  00F9               	movwf	??_I2C1_ISR
 30186  0926  0142               	movlb	2	; select bank2
 30187  0927  0853               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 30188  0928  0086               	movwf	6
 30189  0929  0187               	clrf	7
 30190  092A  0879               	movf	??_I2C1_ISR,w
 30191  092B  0081               	movwf	1
 30192  092C                     i1l12485:	
 30193  092C  3001               	movlw	1
 30194  092D  00F9               	movwf	??_I2C1_ISR
 30195  092E  0879               	movf	??_I2C1_ISR,w
 30196  092F  07D3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 30197  0930                     i1l12487:	
 30198                           
 30199                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 30200  0930  3001               	movlw	1
 30201  0931  02D2               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 30202  0932  1903               	btfsc	3,2
 30203  0933  2935               	goto	u1455_21
 30204  0934  2936               	goto	u1455_20
 30205  0935                     u1455_21:	
 30206  0935  293E               	goto	i1l583
 30207  0936                     u1455_20:	
 30208  0936                     i1l12489:	
 30209                           
 30210                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 30211  0936  0143               	movlb	3	; select bank3
 30212  0937  1291               	bcf	17,5	;volatile
 30213  0938                     i1l12491:	
 30214                           
 30215                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 30216  0938  3006               	movlw	6
 30217  0939  00F9               	movwf	??_I2C1_ISR
 30218  093A  0879               	movf	??_I2C1_ISR,w
 30219  093B  0142               	movlb	2	; select bank2
 30220  093C  00D6               	movwf	_i2c1_state^(0+256)
 30221                           
 30222                           ;mcc_generated_files/i2c1.c: 532:             }
 30223  093D  2943               	goto	i1l12495
 30224  093E                     i1l583:	
 30225                           ;mcc_generated_files/i2c1.c: 533:             else
 30226                           
 30227                           
 30228                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 30229  093E  0143               	movlb	3	; select bank3
 30230  093F  1691               	bsf	17,5	;volatile
 30231  0940                     i1l12493:	
 30232                           
 30233                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 30234  0940  31AE  260B  3188   	fcall	_I2C1_FunctionComplete
 30235  0943                     i1l12495:	
 30236                           
 30237                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 30238  0943  0143               	movlb	3	; select bank3
 30239  0944  1611               	bsf	17,4	;volatile
 30240                           
 30241                           ;mcc_generated_files/i2c1.c: 545:             break;
 30242  0945  2980               	goto	i1l547
 30243  0946                     i1l12497:	
 30244                           
 30245                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 30246  0946  3000               	movlw	0
 30247  0947  31AF  2745  3188   	fcall	_I2C1_Stop
 30248                           
 30249                           ;mcc_generated_files/i2c1.c: 552:             break;
 30250  094A  2980               	goto	i1l547
 30251  094B                     i1l12499:	
 30252                           
 30253                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 30254  094B  3001               	movlw	1
 30255  094C  00F9               	movwf	??_I2C1_ISR
 30256  094D  0879               	movf	??_I2C1_ISR,w
 30257  094E  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 30258  094F                     i1l12501:	
 30259                           
 30260                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 30261  094F  3006               	movlw	6
 30262  0950  31AF  2745  3188   	fcall	_I2C1_Stop
 30263                           
 30264                           ;mcc_generated_files/i2c1.c: 560:             break;
 30265  0953  2980               	goto	i1l547
 30266  0954                     i1l12505:	
 30267  0954  0142               	movlb	2	; select bank2
 30268  0955  0856               	movf	_i2c1_state^(0+256),w
 30269  0956  00F9               	movwf	??_I2C1_ISR
 30270  0957  01FA               	clrf	??_I2C1_ISR+1
 30271                           
 30272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30273                           ; Switch size 1, requested type "simple"
 30274                           ; Number of cases is 1, Range of values is 0 to 0
 30275                           ; switch strategies available:
 30276                           ; Name         Instructions Cycles
 30277                           ; simple_byte            4     3 (average)
 30278                           ; direct_byte            8     6 (fixed)
 30279                           ; jumptable            260     6 (fixed)
 30280                           ;	Chosen strategy is simple_byte
 30281  0958  087A               	movf	??_I2C1_ISR+1,w
 30282  0959  3A00               	xorlw	0	; case 0
 30283  095A  1903               	skipnz
 30284  095B  295D               	goto	i1l13239
 30285  095C  294B               	goto	i1l12499
 30286  095D                     i1l13239:	
 30287                           
 30288                           ; Switch size 1, requested type "simple"
 30289                           ; Number of cases is 11, Range of values is 0 to 11
 30290                           ; switch strategies available:
 30291                           ; Name         Instructions Cycles
 30292                           ; direct_byte           30     6 (fixed)
 30293                           ; simple_byte           34    18 (average)
 30294                           ; jumptable            260     6 (fixed)
 30295                           ;	Chosen strategy is simple_byte
 30296  095D  0879               	movf	??_I2C1_ISR,w
 30297  095E  3A00               	xorlw	0	; case 0
 30298  095F  1903               	skipnz
 30299  0960  2818               	goto	i1l549
 30300  0961  3A01               	xorlw	1	; case 1
 30301  0962  1903               	skipnz
 30302  0963  284E               	goto	i1l554
 30303  0964  3A03               	xorlw	3	; case 2
 30304  0965  1903               	skipnz
 30305  0966  28A1               	goto	i1l12423
 30306  0967  3A01               	xorlw	1	; case 3
 30307  0968  1903               	skipnz
 30308  0969  28CD               	goto	i1l571
 30309  096A  3A07               	xorlw	7	; case 4
 30310  096B  1903               	skipnz
 30311  096C  2946               	goto	i1l12497
 30312  096D  3A01               	xorlw	1	; case 5
 30313  096E  1903               	skipnz
 30314  096F  2904               	goto	i1l578
 30315  0970  3A03               	xorlw	3	; case 6
 30316  0971  1903               	skipnz
 30317  0972  291C               	goto	i1l12479
 30318  0973  3A01               	xorlw	1	; case 7
 30319  0974  1903               	skipnz
 30320  0975  2946               	goto	i1l12497
 30321  0976  3A0F               	xorlw	15	; case 8
 30322  0977  1903               	skipnz
 30323  0978  2923               	goto	i1l12483
 30324  0979  3A02               	xorlw	2	; case 10
 30325  097A  1903               	skipnz
 30326  097B  2851               	goto	i1l555
 30327  097C  3A01               	xorlw	1	; case 11
 30328  097D  1903               	skipnz
 30329  097E  2879               	goto	i1l560
 30330  097F  294B               	goto	i1l12499
 30331  0980                     i1l547:	
 30332  0980  0008               	return
 30333  0981                     __end_of_I2C1_ISR:	
 30334                           
 30335                           	psect	text102
 30336  2F45                     __ptext102:	
 30337 ;; *************** function _I2C1_Stop *****************
 30338 ;; Defined at:
 30339 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 30340 ;; Parameters:    Size  Location     Type
 30341 ;;  completion_c    1    wreg     enum E10895
 30342 ;; Auto vars:     Size  Location     Type
 30343 ;;  completion_c    1    1[COMMON] enum E10895
 30344 ;; Return value:  Size  Location     Type
 30345 ;;                  1    wreg      void 
 30346 ;; Registers used:
 30347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30348 ;; Tracked objects:
 30349 ;;		On entry : 0/0
 30350 ;;		On exit  : 0/0
 30351 ;;		Unchanged: 0/0
 30352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30357 ;;Total ram usage:        2 bytes
 30358 ;; Hardware stack levels used:    1
 30359 ;; This function calls:
 30360 ;;		Nothing
 30361 ;; This function is called by:
 30362 ;;		_I2C1_ISR
 30363 ;; This function uses a non-reentrant model
 30364 ;;
 30365                           
 30366                           
 30367                           ;psect for function _I2C1_Stop
 30368  2F45                     _I2C1_Stop:	
 30369                           
 30370                           ;incstack = 0
 30371 ;; hardware stack exceeded
 30372                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 30373                           ;I2C1_Stop@completion_code stored from wreg
 30374  2F45  00F8               	movwf	I2C1_Stop@completion_code
 30375  2F46                     i1l12035:	
 30376                           
 30377                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 30378  2F46  0143               	movlb	3	; select bank3
 30379  2F47  1511               	bsf	17,2	;volatile
 30380  2F48                     i1l12037:	
 30381                           
 30382                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 30383  2F48  0142               	movlb	2	; select bank2
 30384  2F49  0854               	movf	_p_i2c1_current^(0+256),w
 30385  2F4A  3E03               	addlw	3
 30386  2F4B  0086               	movwf	6
 30387  2F4C  3001               	movlw	1	; select bank2/3
 30388  2F4D  0087               	movwf	7
 30389  2F4E  0801               	movf	1,w
 30390  2F4F  1903               	btfsc	3,2
 30391  2F50  2F52               	goto	u1383_21
 30392  2F51  2F53               	goto	u1383_20
 30393  2F52                     u1383_21:	
 30394  2F52  2F5F               	goto	i1l12041
 30395  2F53                     u1383_20:	
 30396  2F53                     i1l12039:	
 30397                           
 30398                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 30399  2F53  0878               	movf	I2C1_Stop@completion_code,w
 30400  2F54  00F7               	movwf	??_I2C1_Stop
 30401  2F55  0854               	movf	_p_i2c1_current^(0+256),w
 30402  2F56  3E03               	addlw	3
 30403  2F57  0086               	movwf	6
 30404  2F58  3001               	movlw	1	; select bank2/3
 30405  2F59  0087               	movwf	7
 30406  2F5A  0801               	movf	1,w
 30407  2F5B  0086               	movwf	6
 30408  2F5C  0187               	clrf	7
 30409  2F5D  0877               	movf	??_I2C1_Stop,w
 30410  2F5E  0081               	movwf	1
 30411  2F5F                     i1l12041:	
 30412                           
 30413                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 30414  2F5F  01D6               	clrf	_i2c1_state^(0+256)
 30415  2F60                     i1l596:	
 30416  2F60  0008               	return
 30417  2F61                     __end_of_I2C1_Stop:	
 30418                           
 30419                           	psect	text103
 30420  2E0B                     __ptext103:	
 30421 ;; *************** function _I2C1_FunctionComplete *****************
 30422 ;; Defined at:
 30423 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 30424 ;; Parameters:    Size  Location     Type
 30425 ;;		None
 30426 ;; Auto vars:     Size  Location     Type
 30427 ;;		None
 30428 ;; Return value:  Size  Location     Type
 30429 ;;                  1    wreg      void 
 30430 ;; Registers used:
 30431 ;;		wreg, status,2, status,0
 30432 ;; Tracked objects:
 30433 ;;		On entry : 0/0
 30434 ;;		On exit  : 0/0
 30435 ;;		Unchanged: 0/0
 30436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30441 ;;Total ram usage:        1 bytes
 30442 ;; Hardware stack levels used:    1
 30443 ;; This function calls:
 30444 ;;		Nothing
 30445 ;; This function is called by:
 30446 ;;		_I2C1_ISR
 30447 ;; This function uses a non-reentrant model
 30448 ;;
 30449                           
 30450                           
 30451                           ;psect for function _I2C1_FunctionComplete
 30452  2E0B                     _I2C1_FunctionComplete:	
 30453  2E0B                     i1l12043:	
 30454                           ;incstack = 0
 30455 ;; hardware stack exceeded
 30456                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 30457                           
 30458                           
 30459                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 30460  2E0B  3004               	movlw	4
 30461  2E0C  0142               	movlb	2	; select bank2
 30462  2E0D  07BD               	addwf	_p_i2c1_trb_current^(0+256),f
 30463  2E0E  3000               	movlw	0
 30464  2E0F  3DBE               	addwfc	(_p_i2c1_trb_current+1)^(0+256),f
 30465  2E10                     i1l12045:	
 30466                           
 30467                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 30468  2E10  3001               	movlw	1
 30469  2E11  02D5               	subwf	_i2c1_trb_count^(0+256),f
 30470  2E12  1D03               	btfss	3,2
 30471  2E13  2E15               	goto	u1384_21
 30472  2E14  2E16               	goto	u1384_20
 30473  2E15                     u1384_21:	
 30474  2E15  2E1B               	goto	i1l590
 30475  2E16                     u1384_20:	
 30476  2E16                     i1l12047:	
 30477                           
 30478                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 30479  2E16  3004               	movlw	4
 30480  2E17  00F7               	movwf	??_I2C1_FunctionComplete
 30481  2E18  0877               	movf	??_I2C1_FunctionComplete,w
 30482  2E19  00D6               	movwf	_i2c1_state^(0+256)
 30483                           
 30484                           ;mcc_generated_files/i2c1.c: 575:     }
 30485  2E1A  2E1D               	goto	i1l592
 30486  2E1B                     i1l590:	
 30487                           ;mcc_generated_files/i2c1.c: 576:     else
 30488                           
 30489                           
 30490                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 30491  2E1B  01D6               	clrf	_i2c1_state^(0+256)
 30492  2E1C  0AD6               	incf	_i2c1_state^(0+256),f
 30493  2E1D                     i1l592:	
 30494  2E1D  0008               	return
 30495  2E1E                     __end_of_I2C1_FunctionComplete:	
 30496                           
 30497                           	psect	text104
 30498  2CE2                     __ptext104:	
 30499 ;; *************** function _I2C1_BusCollisionISR *****************
 30500 ;; Defined at:
 30501 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 30502 ;; Parameters:    Size  Location     Type
 30503 ;;		None
 30504 ;; Auto vars:     Size  Location     Type
 30505 ;;		None
 30506 ;; Return value:  Size  Location     Type
 30507 ;;                  1    wreg      void 
 30508 ;; Registers used:
 30509 ;;		None
 30510 ;; Tracked objects:
 30511 ;;		On entry : 0/0
 30512 ;;		On exit  : 0/0
 30513 ;;		Unchanged: 0/0
 30514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30519 ;;Total ram usage:        0 bytes
 30520 ;; Hardware stack levels used:    1
 30521 ;; This function calls:
 30522 ;;		Nothing
 30523 ;; This function is called by:
 30524 ;;		_INTERRUPT_InterruptManager
 30525 ;; This function uses a non-reentrant model
 30526 ;;
 30527                           
 30528                           
 30529                           ;psect for function _I2C1_BusCollisionISR
 30530  2CE2                     _I2C1_BusCollisionISR:	
 30531  2CE2                     i1l12367:	
 30532                           ;incstack = 0
 30533 ;; hardware stack exceeded
 30534                           ; Regs used in _I2C1_BusCollisionISR: []
 30535                           
 30536                           
 30537                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 30538  2CE2  014E               	movlb	14	; select bank14
 30539  2CE3  108F               	bcf	15,1	;volatile
 30540  2CE4                     i1l639:	
 30541  2CE4  0008               	return
 30542  2CE5                     __end_of_I2C1_BusCollisionISR:	
 30543                           
 30544                           	psect	text105
 30545  2299                     __ptext105:	
 30546 ;; *************** function _DMX_interrupt *****************
 30547 ;; Defined at:
 30548 ;;		line 56 in file "dmx.c"
 30549 ;; Parameters:    Size  Location     Type
 30550 ;;		None
 30551 ;; Auto vars:     Size  Location     Type
 30552 ;;  dummy           1    6[COMMON] volatile unsigned char 
 30553 ;; Return value:  Size  Location     Type
 30554 ;;                  1    wreg      void 
 30555 ;; Registers used:
 30556 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30557 ;; Tracked objects:
 30558 ;;		On entry : 0/0
 30559 ;;		On exit  : 0/0
 30560 ;;		Unchanged: 0/0
 30561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30564 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30566 ;;Total ram usage:        7 bytes
 30567 ;; Hardware stack levels used:    1
 30568 ;; This function calls:
 30569 ;;		Nothing
 30570 ;; This function is called by:
 30571 ;;		_DMX_init
 30572 ;;		_INTERRUPT_InterruptManager
 30573 ;; This function uses a non-reentrant model
 30574 ;;
 30575                           
 30576                           
 30577                           ;psect for function _DMX_interrupt
 30578  2299                     _DMX_interrupt:	
 30579  2299                     i1l12935:	
 30580                           ;incstack = 0
 30581 ;; hardware stack exceeded
 30582                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 30583                           
 30584                           
 30585                           ;dmx.c: 58:     if (RC1STAbits.OERR) {
 30586  2299  0142               	movlb	2	; select bank2
 30587  229A  1C9D               	btfss	29,1	;volatile
 30588  229B  2A9D               	goto	u1488_21
 30589  229C  2A9E               	goto	u1488_20
 30590  229D                     u1488_21:	
 30591  229D  2AA0               	goto	i1l12939
 30592  229E                     u1488_20:	
 30593  229E                     i1l12937:	
 30594                           
 30595                           ;dmx.c: 59:         RC1STAbits.CREN = 0;
 30596  229E  121D               	bcf	29,4	;volatile
 30597                           
 30598                           ;dmx.c: 60:         RC1STAbits.CREN = 1;
 30599  229F  161D               	bsf	29,4	;volatile
 30600  22A0                     i1l12939:	
 30601                           
 30602                           ;dmx.c: 63:     if (initial == 0 && !(RC1STAbits.FERR)) {
 30603  22A0  0143               	movlb	3	; select bank3
 30604  22A1  086D               	movf	_initial^(0+384),w
 30605  22A2  046E               	iorwf	(_initial+1)^(0+384),w
 30606  22A3  1D03               	btfss	3,2
 30607  22A4  2AA6               	goto	u1489_21
 30608  22A5  2AA7               	goto	u1489_20
 30609  22A6                     u1489_21:	
 30610  22A6  2AC9               	goto	i1l12947
 30611  22A7                     u1489_20:	
 30612  22A7                     i1l12941:	
 30613  22A7  0142               	movlb	2	; select bank2
 30614  22A8  191D               	btfsc	29,2	;volatile
 30615  22A9  2AAB               	goto	u1490_21
 30616  22AA  2AAC               	goto	u1490_20
 30617  22AB                     u1490_21:	
 30618  22AB  2AC9               	goto	i1l12947
 30619  22AC                     u1490_20:	
 30620  22AC                     i1l12943:	
 30621                           
 30622                           ;dmx.c: 64:         dmxArray[arrayIndex] = RC1REG;
 30623  22AC  0819               	movf	25,w	;volatile
 30624  22AD  00F7               	movwf	??_DMX_interrupt
 30625  22AE  01F8               	clrf	??_DMX_interrupt+1
 30626  22AF  0143               	movlb	3	; select bank3
 30627  22B0  0837               	movf	(_arrayIndex+1)^(0+384),w
 30628  22B1  00FA               	movwf	??_DMX_interrupt+3
 30629  22B2  0836               	movf	_arrayIndex^(0+384),w
 30630  22B3  00F9               	movwf	??_DMX_interrupt+2
 30631  22B4  35F9               	lslf	??_DMX_interrupt+2,f
 30632  22B5  0DFA               	rlf	??_DMX_interrupt+3,f
 30633  22B6  30EE               	movlw	238
 30634  22B7  00FB               	movwf	??_DMX_interrupt+4
 30635  22B8  3023               	movlw	35
 30636  22B9  00FC               	movwf	??_DMX_interrupt+5
 30637  22BA  0879               	movf	??_DMX_interrupt+2,w
 30638  22BB  077B               	addwf	??_DMX_interrupt+4,w
 30639  22BC  0086               	movwf	6
 30640  22BD  087A               	movf	??_DMX_interrupt+3,w
 30641  22BE  3D7C               	addwfc	??_DMX_interrupt+5,w
 30642  22BF  0087               	movwf	7
 30643  22C0  0877               	movf	??_DMX_interrupt,w
 30644  22C1  3FC0               	movwi [0]fsr1
 30645  22C2  0878               	movf	??_DMX_interrupt+1,w
 30646  22C3  3FC1               	movwi [1]fsr1
 30647  22C4                     i1l12945:	
 30648                           
 30649                           ;dmx.c: 65:         arrayIndex += 1;
 30650  22C4  3001               	movlw	1
 30651  22C5  07B6               	addwf	_arrayIndex^(0+384),f
 30652  22C6  3000               	movlw	0
 30653  22C7  3DB7               	addwfc	(_arrayIndex+1)^(0+384),f
 30654                           
 30655                           ;dmx.c: 66:     } else {
 30656  22C8  2AD3               	goto	i1l12951
 30657  22C9                     i1l12947:	
 30658                           
 30659                           ;dmx.c: 67:         arrayIndex = 0;
 30660  22C9  0143               	movlb	3	; select bank3
 30661  22CA  01B6               	clrf	_arrayIndex^(0+384)
 30662  22CB  01B7               	clrf	(_arrayIndex+1)^(0+384)
 30663                           
 30664                           ;dmx.c: 68:         initial = 0;
 30665  22CC  01ED               	clrf	_initial^(0+384)
 30666  22CD  01EE               	clrf	(_initial+1)^(0+384)
 30667  22CE                     i1l12949:	
 30668                           
 30669                           ;dmx.c: 69:         volatile uint8_t dummy = RC1REG;
 30670  22CE  0142               	movlb	2	; select bank2
 30671  22CF  0819               	movf	25,w	;volatile
 30672  22D0  00F7               	movwf	??_DMX_interrupt
 30673  22D1  0877               	movf	??_DMX_interrupt,w
 30674  22D2  00FD               	movwf	DMX_interrupt@dummy	;volatile
 30675  22D3                     i1l12951:	
 30676                           
 30677                           ;dmx.c: 72:     PIR3bits.RC1IF = 0;
 30678  22D3  014E               	movlb	14	; select bank14
 30679  22D4  128F               	bcf	15,5	;volatile
 30680  22D5                     i1l1372:	
 30681  22D5  0008               	return
 30682  22D6                     __end_of_DMX_interrupt:	
 30683                           
 30684                           	psect	text106
 30685  225C                     __ptext106:	
 30686 ;; *************** function _EUSART1_Receive_ISR *****************
 30687 ;; Defined at:
 30688 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 30689 ;; Parameters:    Size  Location     Type
 30690 ;;		None
 30691 ;; Auto vars:     Size  Location     Type
 30692 ;;		None
 30693 ;; Return value:  Size  Location     Type
 30694 ;;                  1    wreg      void 
 30695 ;; Registers used:
 30696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30697 ;; Tracked objects:
 30698 ;;		On entry : 0/0
 30699 ;;		On exit  : 0/0
 30700 ;;		Unchanged: 0/0
 30701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30706 ;;Total ram usage:        0 bytes
 30707 ;; Hardware stack levels used:    1
 30708 ;; Hardware stack levels required when called:    2
 30709 ;; This function calls:
 30710 ;;		Absolute function
 30711 ;;		_EUSART1_DefaultErrorHandler
 30712 ;;		_EUSART1_DefaultFramingErrorHandler
 30713 ;;		_EUSART1_DefaultOverrunErrorHandler
 30714 ;;		_EUSART1_RxDataHandler
 30715 ;; This function is called by:
 30716 ;;		_EUSART1_Initialize
 30717 ;;		_INTERRUPT_InterruptManager
 30718 ;; This function uses a non-reentrant model
 30719 ;;
 30720                           
 30721                           
 30722                           ;psect for function _EUSART1_Receive_ISR
 30723  225C                     _EUSART1_Receive_ISR:	
 30724  225C                     i1l12341:	
 30725                           ;incstack = 0
 30726 ;; hardware stack exceeded
 30727                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 30728                           
 30729                           
 30730                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 30731  225C  0876               	movf	_eusart1RxHead,w	;volatile
 30732  225D  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 30733  225E  0086               	movwf	6
 30734  225F  3001               	movlw	1	; select bank3/4
 30735  2260  0087               	movwf	7
 30736  2261  0181               	clrf	1
 30737  2262                     i1l12343:	
 30738                           
 30739                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 30740  2262  0142               	movlb	2	; select bank2
 30741  2263  1D1D               	btfss	29,2	;volatile
 30742  2264  2A66               	goto	u1438_21
 30743  2265  2A67               	goto	u1438_20
 30744  2266                     u1438_21:	
 30745  2266  2A73               	goto	i1l12349
 30746  2267                     u1438_20:	
 30747  2267                     i1l12345:	
 30748                           
 30749                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 30750  2267  0876               	movf	_eusart1RxHead,w	;volatile
 30751  2268  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 30752  2269  0086               	movwf	6
 30753  226A  3001               	movlw	1	; select bank3/4
 30754  226B  0087               	movwf	7
 30755  226C  1481               	bsf	1,1
 30756  226D                     i1l12347:	
 30757                           
 30758                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 30759  226D  0144               	movlb	4	; select bank4
 30760  226E  086B               	movf	(_EUSART1_FramingErrorHandler+1)^(0+512),w
 30761  226F  008A               	movwf	10
 30762  2270  086A               	movf	_EUSART1_FramingErrorHandler^(0+512),w
 30763  2271  000A               	callw
 30764  2272  31A2               	pagesel	$
 30765  2273                     i1l12349:	
 30766                           
 30767                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 30768  2273  0142               	movlb	2	; select bank2
 30769  2274  1C9D               	btfss	29,1	;volatile
 30770  2275  2A77               	goto	u1439_21
 30771  2276  2A78               	goto	u1439_20
 30772  2277                     u1439_21:	
 30773  2277  2A84               	goto	i1l12355
 30774  2278                     u1439_20:	
 30775  2278                     i1l12351:	
 30776                           
 30777                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 30778  2278  0876               	movf	_eusart1RxHead,w	;volatile
 30779  2279  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 30780  227A  0086               	movwf	6
 30781  227B  3001               	movlw	1	; select bank3/4
 30782  227C  0087               	movwf	7
 30783  227D  1501               	bsf	1,2
 30784  227E                     i1l12353:	
 30785                           
 30786                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 30787  227E  0145               	movlb	5	; select bank5
 30788  227F  086B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+640),w
 30789  2280  008A               	movwf	10
 30790  2281  086A               	movf	_EUSART1_OverrunErrorHandler^(0+640),w
 30791  2282  000A               	callw
 30792  2283  31A2               	pagesel	$
 30793  2284                     i1l12355:	
 30794                           
 30795                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 30796  2284  0876               	movf	_eusart1RxHead,w	;volatile
 30797  2285  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 30798  2286  0086               	movwf	6
 30799  2287  3001               	movlw	1	; select bank3/4
 30800  2288  0087               	movwf	7
 30801  2289  0801               	movf	1,w
 30802  228A  1903               	btfsc	3,2
 30803  228B  2A8D               	goto	u1440_21
 30804  228C  2A8E               	goto	u1440_20
 30805  228D                     u1440_21:	
 30806  228D  2A95               	goto	i1l12359
 30807  228E                     u1440_20:	
 30808  228E                     i1l12357:	
 30809                           
 30810                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 30811  228E  0146               	movlb	6	; select bank6
 30812  228F  0858               	movf	(_EUSART1_ErrorHandler+1)^(0+768),w
 30813  2290  008A               	movwf	10
 30814  2291  0857               	movf	_EUSART1_ErrorHandler^(0+768),w
 30815  2292  000A               	callw
 30816  2293  31A2               	pagesel	$
 30817                           
 30818                           ;mcc_generated_files/eusart1.c: 188:     } else {
 30819  2294  2A98               	goto	i1l375
 30820  2295                     i1l12359:	
 30821                           
 30822                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 30823  2295  31AE  26F6  31A2   	fcall	_EUSART1_RxDataHandler
 30824  2298                     i1l375:	
 30825  2298  0008               	return
 30826  2299                     __end_of_EUSART1_Receive_ISR:	
 30827                           
 30828                           	psect	text107
 30829  2CED                     __ptext107:	
 30830 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 30831 ;; Defined at:
 30832 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 30833 ;; Parameters:    Size  Location     Type
 30834 ;;		None
 30835 ;; Auto vars:     Size  Location     Type
 30836 ;;		None
 30837 ;; Return value:  Size  Location     Type
 30838 ;;                  1    wreg      void 
 30839 ;; Registers used:
 30840 ;;		None
 30841 ;; Tracked objects:
 30842 ;;		On entry : 0/0
 30843 ;;		On exit  : 0/0
 30844 ;;		Unchanged: 0/0
 30845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30850 ;;Total ram usage:        0 bytes
 30851 ;; Hardware stack levels used:    1
 30852 ;; This function calls:
 30853 ;;		Nothing
 30854 ;; This function is called by:
 30855 ;;		_EUSART1_Initialize
 30856 ;;		_EUSART1_Receive_ISR
 30857 ;; This function uses a non-reentrant model
 30858 ;;
 30859                           
 30860                           
 30861                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 30862  2CED                     _EUSART1_DefaultOverrunErrorHandler:	
 30863  2CED                     i1l12031:	
 30864                           ;incstack = 0
 30865 ;; hardware stack exceeded
 30866                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 30867                           
 30868                           
 30869                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 30870  2CED  0142               	movlb	2	; select bank2
 30871  2CEE  121D               	bcf	29,4	;volatile
 30872                           
 30873                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 30874  2CEF  161D               	bsf	29,4	;volatile
 30875  2CF0                     i1l385:	
 30876  2CF0  0008               	return
 30877  2CF1                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 30878                           
 30879                           	psect	text108
 30880  2CE0                     __ptext108:	
 30881 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 30882 ;; Defined at:
 30883 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 30884 ;; Parameters:    Size  Location     Type
 30885 ;;		None
 30886 ;; Auto vars:     Size  Location     Type
 30887 ;;		None
 30888 ;; Return value:  Size  Location     Type
 30889 ;;                  1    wreg      void 
 30890 ;; Registers used:
 30891 ;;		None
 30892 ;; Tracked objects:
 30893 ;;		On entry : 0/0
 30894 ;;		On exit  : 0/0
 30895 ;;		Unchanged: 0/0
 30896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30901 ;;Total ram usage:        0 bytes
 30902 ;; Hardware stack levels used:    1
 30903 ;; This function calls:
 30904 ;;		Nothing
 30905 ;; This function is called by:
 30906 ;;		_EUSART1_Initialize
 30907 ;;		_EUSART1_Receive_ISR
 30908 ;; This function uses a non-reentrant model
 30909 ;;
 30910                           
 30911                           
 30912                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 30913  2CE0                     _EUSART1_DefaultFramingErrorHandler:	
 30914  2CE0                     i1l382:	
 30915                           ;incstack = 0
 30916 ;; hardware stack exceeded
 30917                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 30918                           
 30919  2CE0  0008               	return
 30920  2CE1                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 30921                           
 30922                           	psect	text109
 30923  2CE9                     __ptext109:	
 30924 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 30925 ;; Defined at:
 30926 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 30927 ;; Parameters:    Size  Location     Type
 30928 ;;		None
 30929 ;; Auto vars:     Size  Location     Type
 30930 ;;		None
 30931 ;; Return value:  Size  Location     Type
 30932 ;;                  1    wreg      void 
 30933 ;; Registers used:
 30934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30935 ;; Tracked objects:
 30936 ;;		On entry : 0/0
 30937 ;;		On exit  : 0/0
 30938 ;;		Unchanged: 0/0
 30939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30944 ;;Total ram usage:        0 bytes
 30945 ;; Hardware stack levels used:    1
 30946 ;; Hardware stack levels required when called:    1
 30947 ;; This function calls:
 30948 ;;		_EUSART1_RxDataHandler
 30949 ;; This function is called by:
 30950 ;;		_EUSART1_Initialize
 30951 ;;		_EUSART1_Receive_ISR
 30952 ;; This function uses a non-reentrant model
 30953 ;;
 30954                           
 30955                           
 30956                           ;psect for function _EUSART1_DefaultErrorHandler
 30957  2CE9                     _EUSART1_DefaultErrorHandler:	
 30958  2CE9                     i1l12033:	
 30959                           ;incstack = 0
 30960 ;; hardware stack exceeded
 30961                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 30962                           
 30963                           
 30964                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 30965  2CE9  31AE  26F6  31AC   	fcall	_EUSART1_RxDataHandler
 30966  2CEC                     i1l388:	
 30967  2CEC  0008               	return
 30968  2CED                     __end_of_EUSART1_DefaultErrorHandler:	
 30969                           
 30970                           	psect	text110
 30971  2EF6                     __ptext110:	
 30972 ;; *************** function _EUSART1_RxDataHandler *****************
 30973 ;; Defined at:
 30974 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 30975 ;; Parameters:    Size  Location     Type
 30976 ;;		None
 30977 ;; Auto vars:     Size  Location     Type
 30978 ;;		None
 30979 ;; Return value:  Size  Location     Type
 30980 ;;                  1    wreg      void 
 30981 ;; Registers used:
 30982 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30983 ;; Tracked objects:
 30984 ;;		On entry : 0/0
 30985 ;;		On exit  : 0/0
 30986 ;;		Unchanged: 0/0
 30987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30992 ;;Total ram usage:        1 bytes
 30993 ;; Hardware stack levels used:    1
 30994 ;; This function calls:
 30995 ;;		Nothing
 30996 ;; This function is called by:
 30997 ;;		_EUSART1_Receive_ISR
 30998 ;;		_EUSART1_DefaultErrorHandler
 30999 ;; This function uses a non-reentrant model
 31000 ;;
 31001                           
 31002                           
 31003                           ;psect for function _EUSART1_RxDataHandler
 31004  2EF6                     _EUSART1_RxDataHandler:	
 31005  2EF6                     i1l11729:	
 31006                           ;incstack = 0
 31007 ;; hardware stack exceeded
 31008                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 31009                           
 31010                           
 31011                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 31012  2EF6  0142               	movlb	2	; select bank2
 31013  2EF7  0819               	movf	25,w	;volatile
 31014  2EF8  00F7               	movwf	??_EUSART1_RxDataHandler
 31015  2EF9  0876               	movf	_eusart1RxHead,w
 31016  2EFA  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 31017  2EFB  0086               	movwf	6
 31018  2EFC  3002               	movlw	2	; select bank5/6
 31019  2EFD  0087               	movwf	7
 31020  2EFE  0877               	movf	??_EUSART1_RxDataHandler,w
 31021  2EFF  0081               	movwf	1
 31022  2F00                     i1l11731:	
 31023  2F00  3001               	movlw	1
 31024  2F01  00F7               	movwf	??_EUSART1_RxDataHandler
 31025  2F02  0877               	movf	??_EUSART1_RxDataHandler,w
 31026  2F03  07F6               	addwf	_eusart1RxHead,f	;volatile
 31027  2F04                     i1l11733:	
 31028                           
 31029                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 31030  2F04  3008               	movlw	8
 31031  2F05  0276               	subwf	_eusart1RxHead,w	;volatile
 31032  2F06  1C03               	skipc
 31033  2F07  2F09               	goto	u1346_21
 31034  2F08  2F0A               	goto	u1346_20
 31035  2F09                     u1346_21:	
 31036  2F09  2F0B               	goto	i1l11737
 31037  2F0A                     u1346_20:	
 31038  2F0A                     i1l11735:	
 31039                           
 31040                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 31041  2F0A  01F6               	clrf	_eusart1RxHead	;volatile
 31042  2F0B                     i1l11737:	
 31043                           
 31044                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 31045  2F0B  3001               	movlw	1
 31046  2F0C  00F7               	movwf	??_EUSART1_RxDataHandler
 31047  2F0D  0877               	movf	??_EUSART1_RxDataHandler,w
 31048  2F0E  07D8               	addwf	_eusart1RxCount^(0+256),f	;volatile
 31049  2F0F                     i1l379:	
 31050  2F0F  0008               	return
 31051  2F10                     __end_of_EUSART1_RxDataHandler:	
 31052                           
 31053                           	psect	text111
 31054  2DDC                     __ptext111:	
 31055 ;; *************** function _ADCC_ThresholdISR *****************
 31056 ;; Defined at:
 31057 ;;		line 308 in file "mcc_generated_files/adcc.c"
 31058 ;; Parameters:    Size  Location     Type
 31059 ;;		None
 31060 ;; Auto vars:     Size  Location     Type
 31061 ;;		None
 31062 ;; Return value:  Size  Location     Type
 31063 ;;                  1    wreg      void 
 31064 ;; Registers used:
 31065 ;;		wreg, status,2, status,0, pclath, cstack
 31066 ;; Tracked objects:
 31067 ;;		On entry : 0/0
 31068 ;;		On exit  : 0/0
 31069 ;;		Unchanged: 0/0
 31070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31075 ;;Total ram usage:        0 bytes
 31076 ;; Hardware stack levels used:    1
 31077 ;; Hardware stack levels required when called:    1
 31078 ;; This function calls:
 31079 ;;		Absolute function
 31080 ;;		_ADCC_DefaultInterruptHandler
 31081 ;;		_adcThresholdHandler
 31082 ;; This function is called by:
 31083 ;;		_INTERRUPT_InterruptManager
 31084 ;; This function uses a non-reentrant model
 31085 ;;
 31086                           
 31087                           
 31088                           ;psect for function _ADCC_ThresholdISR
 31089  2DDC                     _ADCC_ThresholdISR:	
 31090  2DDC                     i1l12513:	
 31091                           ;incstack = 0
 31092 ;; hardware stack exceeded
 31093                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 31094                           
 31095                           
 31096                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 31097  2DDC  014E               	movlb	14	; select bank14
 31098  2DDD  108D               	bcf	13,1	;volatile
 31099  2DDE                     i1l12515:	
 31100                           
 31101                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 31102  2DDE  0143               	movlb	3	; select bank3
 31103  2DDF  0869               	movf	_ADCC_ADTI_InterruptHandler^(0+384),w
 31104  2DE0  046A               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+384),w
 31105  2DE1  1903               	btfsc	3,2
 31106  2DE2  2DE4               	goto	u1456_21
 31107  2DE3  2DE5               	goto	u1456_20
 31108  2DE4                     u1456_21:	
 31109  2DE4  2DEA               	goto	i1l815
 31110  2DE5                     u1456_20:	
 31111  2DE5                     i1l12517:	
 31112                           
 31113                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 31114  2DE5  086A               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+384),w
 31115  2DE6  008A               	movwf	10
 31116  2DE7  0869               	movf	_ADCC_ADTI_InterruptHandler^(0+384),w
 31117  2DE8  000A               	callw
 31118  2DE9  31AD               	pagesel	$
 31119  2DEA                     i1l815:	
 31120  2DEA  0008               	return
 31121  2DEB                     __end_of_ADCC_ThresholdISR:	
 31122                           
 31123                           	psect	text112
 31124  2CDF                     __ptext112:	
 31125 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31126 ;; Defined at:
 31127 ;;		line 320 in file "mcc_generated_files/adcc.c"
 31128 ;; Parameters:    Size  Location     Type
 31129 ;;		None
 31130 ;; Auto vars:     Size  Location     Type
 31131 ;;		None
 31132 ;; Return value:  Size  Location     Type
 31133 ;;                  1    wreg      void 
 31134 ;; Registers used:
 31135 ;;		None
 31136 ;; Tracked objects:
 31137 ;;		On entry : 0/0
 31138 ;;		On exit  : 0/0
 31139 ;;		Unchanged: 0/0
 31140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31145 ;;Total ram usage:        0 bytes
 31146 ;; Hardware stack levels used:    1
 31147 ;; This function calls:
 31148 ;;		Nothing
 31149 ;; This function is called by:
 31150 ;;		_ADCC_Initialize
 31151 ;;		_ADCC_ThresholdISR
 31152 ;; This function uses a non-reentrant model
 31153 ;;
 31154                           
 31155                           
 31156                           ;psect for function _ADCC_DefaultInterruptHandler
 31157  2CDF                     _ADCC_DefaultInterruptHandler:	
 31158  2CDF                     i1l821:	
 31159                           ;incstack = 0
 31160 ;; hardware stack exceeded
 31161                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 31162                           
 31163  2CDF  0008               	return
 31164  2CE0                     __end_of_ADCC_DefaultInterruptHandler:	
 31165                           
 31166                           	psect	text113
 31167  2CE5                     __ptext113:	
 31168 ;; *************** function _adcThresholdHandler *****************
 31169 ;; Defined at:
 31170 ;;		line 35 in file "beat.c"
 31171 ;; Parameters:    Size  Location     Type
 31172 ;;		None
 31173 ;; Auto vars:     Size  Location     Type
 31174 ;;		None
 31175 ;; Return value:  Size  Location     Type
 31176 ;;                  1    wreg      void 
 31177 ;; Registers used:
 31178 ;;		None
 31179 ;; Tracked objects:
 31180 ;;		On entry : 0/0
 31181 ;;		On exit  : 0/0
 31182 ;;		Unchanged: 0/0
 31183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 31184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 31188 ;;Total ram usage:        0 bytes
 31189 ;; Hardware stack levels used:    1
 31190 ;; This function calls:
 31191 ;;		Nothing
 31192 ;; This function is called by:
 31193 ;;		_BEAT_init
 31194 ;;		_ADCC_ThresholdISR
 31195 ;; This function uses a non-reentrant model
 31196 ;;
 31197                           
 31198                           
 31199                           ;psect for function _adcThresholdHandler
 31200  2CE5                     _adcThresholdHandler:	
 31201  2CE5                     i1l12315:	
 31202                           ;incstack = 0
 31203 ;; hardware stack exceeded
 31204                           ; Regs used in _adcThresholdHandler: []
 31205                           
 31206                           
 31207                           ;beat.c: 36:     thresholdExceeded = 1;
 31208  2CE5  0142               	movlb	2	; select bank2
 31209  2CE6  01C0               	clrf	_thresholdExceeded^(0+256)
 31210  2CE7  0AC0               	incf	_thresholdExceeded^(0+256),f
 31211  2CE8                     i1l1308:	
 31212  2CE8  0008               	return
 31213  2CE9                     __end_of_adcThresholdHandler:	
 31214  007E                     btemp	set	126	;btemp
 31215  007E                     int$flags	set	126
 31216  007E                     wtemp0	set	126


Data Sizes:
    Strings     166
    Constant    96
    Data        15
    BSS         407
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80      6      79
    BANK3            80      0      79
    BANK4            80      0      78
    BANK5            80      0      76
    BANK6            80      0      57
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK7[32]), STR_22(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK7[32]), STR_22(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[6]), STR_29(CODE[7]), 
		 -> STR_28(CODE[8]), STR_27(CODE[9]), STR_26(CODE[10]), STR_25(CODE[9]), 
		 -> STR_24(CODE[8]), STR_23(CODE[7]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK7[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3707_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[6]), STR_29(CODE[7]), 
		 -> STR_28(CODE[8]), STR_27(CODE[9]), STR_26(CODE[10]), STR_25(CODE[9]), 
		 -> STR_24(CODE[8]), STR_23(CODE[7]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[6]), STR_29(CODE[7]), 
		 -> STR_28(CODE[8]), STR_27(CODE[9]), STR_26(CODE[10]), STR_25(CODE[9]), 
		 -> STR_24(CODE[8]), STR_23(CODE[7]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK7[32]), 

    currentMenu.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    currentMenu.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    currentMenu.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    currentMenu.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    currentMenu.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    currentMenu	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatCont(BANK4[11]), beatStrobeTask(BANK5[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), 
		 -> manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), animation(BANK3[11]), 
		 -> dmx_task(BANK5[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixedTask.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixedTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixedTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatContTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatContTask.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatContTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatContTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatContTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFadeTask.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFadeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFadeTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobeTask.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobeTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualWhite.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualWhite.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualWhite.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualWhite.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualWhite.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualWhite.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualWhite.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualWhite.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualWhite.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualWhite.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualBlue.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualBlue.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualBlue.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualBlue.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualBlue.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualBlue.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualBlue.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualBlue.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualBlue.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualBlue.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualGreen.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualGreen.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualGreen.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualGreen.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualGreen.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualGreen.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualGreen.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualGreen.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualGreen.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualGreen.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualRed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualRed.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualRed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualRed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualRed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualRed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualRed.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualRed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualRed.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualRed.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationSpeedCtrl.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationSpeedCtrl.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationSpeedCtrl.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationSpeedCtrl.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationSpeedCtrl.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationSpeedCtrl.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationSpeedCtrl.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationSpeedCtrl.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationSpeedCtrl.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationSpeedCtrl.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationBrightnessCtrl.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationBrightnessCtrl.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationBrightnessCtrl.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationBrightnessCtrl.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationBrightnessCtrl.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationType.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationType.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationType.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationType.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationType.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationType.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationType.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationType.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationType.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationType.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixed.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixed.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixed.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatCont.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatCont.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatCont.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatCont.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatCont.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatCont.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatCont.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatCont.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFade.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFade.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFade.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFade.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFade.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFade.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFade.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFade.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobe.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobe.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobe.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobe.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobe.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobe.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobe.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobe.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx_task.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx_task.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx_task.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manual.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manual.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manual.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manual.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manual.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manual.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manual.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manual.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animation.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animation.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animation.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animation.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animation.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animation.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animation.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animation.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beat.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beat.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beat.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beat.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beat.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beat.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beat.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beat.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.parent.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    previousTask	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.config.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.prevItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.nextItem.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualWhite.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualWhite.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualWhite.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualWhite.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualWhite.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualBlue.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualBlue.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualBlue.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualBlue.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualBlue.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualGreen.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualGreen.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualGreen.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualGreen.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualGreen.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualRed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualRed.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manualRed.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manualRed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manualRed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationSpeedCtrl.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationSpeedCtrl.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationSpeedCtrl.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationSpeedCtrl.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationSpeedCtrl.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationBrightnessCtrl.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationBrightnessCtrl.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationType.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationType.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animationType.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animationType.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animationType.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixedTask.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixedTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixedTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatContTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatContTask.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatContTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatContTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatContTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFadeTask.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFadeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFadeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobeTask.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatMixed.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatMixed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatCont.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatCont.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatFade.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatFade.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beatStrobe.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beatStrobe.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx_task.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx_task.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx_task.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx_task.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx_task.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    manual.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    manual.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    manual.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    animation.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    animation.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    animation.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    beat.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    beat.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    beat.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    S2269menuItem$task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    S2269menuItem$parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    dmx.parent	PTR struct menuItem size(2) Largest target is 11
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 

    S2269menuItem$config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    dmx.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK6[11]), manualBlue(BANK6[11]), manualGreen(BANK6[11]), animationSpeedCtrl(BANK6[11]), 
		 -> animationType(BANK6[11]), beatMixedTask(BANK5[11]), beatContTask(BANK5[11]), beatFadeTask(BANK5[11]), 
		 -> beatStrobeTask(BANK5[11]), manualRed(BANK5[11]), animationBrightnessCtrl(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> dmx_task(BANK5[11]), NULL(NULL[0]), 

    S2269menuItem$prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    S2269menuItem$nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> beatCont(BANK4[11]), beatMixed(BANK4[11]), beatFade(BANK4[11]), beatStrobe(BANK4[11]), 
		 -> animation(BANK3[11]), manual(BANK3[11]), beat(BANK3[11]), dmx(BANK4[11]), 
		 -> NULL(NULL[0]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    S2012$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK7[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F11006.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F11000.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10895 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK4[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[4]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[4]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[4]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[4]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK3[4]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _TM1650_enable->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _DMX_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _address_inc->_printf
    _address_dec->_printf
    _TM1650_fastPrintNum_3digit->_writeData
    ___lwmod->___lwdiv
    _beatColorCreator->___fltol
    _beatBrightnessCalculation->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_fastPrintNum_2digit->_writeData
    _writeData->___awmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___awmod->___awdiv
    _LED_setColor->___fltol
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _HSLToRGB->___fltol
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fldiv
    ___flge->___flmul
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TM1650_init->_printf
    _LED_task_MANUAL->_LED_setColor
    _CONTROL_DMX->_LED_task_DMX
    _address_inc->_printf
    _address_dec->_printf
    _LED_task_DMX->_LED_setColor
    _CONTROL_BEAT->_LED_task_BEAT_CONTINUOUS
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_task_BEAT_CONTINUOUS->_HSLToRGB
    _CONTROL_ANIMATION->_LED_task_ANIMATION
    _LED_task_ANIMATION->_HSLToRGB
    _LED_setColor->_beatColorCreator
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _HSLToRGB->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_CONTROLLER_task
    _CONTROLLER_task->_CONTROL_ANIMATION

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  506848
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   33414
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    5374
                                             22 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1039
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     617
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    9324
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    9070
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     254
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      2     2      0  457794
                                              2 BANK2      2     2      0
                   Absolute function *
                  _BUTTONS_isClicked
                  _CONTROL_ANIMATION *
                       _CONTROL_BEAT *
                        _CONTROL_DMX *
                     _CONTROL_MANUAL *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       2     2      0   57043
                                             57 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                    _LED_task_MANUAL
         _TM1650_fastPrintNum_3digit
                           _colorDec
                           _colorInc
                             _printf
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             2     2      0       0
                                              0 BANK0      2     2      0
                     _getCurrentMenu
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             2     2      0       0
                                              0 BANK0      2     2      0
                     _getCurrentMenu
 ---------------------------------------------------------------------------------
 (4) _getCurrentMenu                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_task_MANUAL                                      0     0      0   19052
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   94851
                                             66 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                       _LED_task_DMX
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0   37598
         _TM1650_fastPrintNum_3digit
                             _printf
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0   37598
         _TM1650_fastPrintNum_3digit
                             _printf
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_3digit                           3     1      2    9558
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1808
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_task_DMX                                         9     9      0   19262
                                             57 BANK1      9     9      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (4) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     393
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         2     2      0  154401
                                             71 BANK1      2     2      0
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
         _TM1650_fastPrintNum_2digit
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_STROBE                                 3     3      0   42167
                                             57 BANK1      3     3      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (4) _beatColorCreator                                    14    10      4   23025
                                             35 BANK1     14    10      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (5) _beatBrightnessCalculation                           10     6      4   15588
                                             25 BANK1     10     6      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_CONTINUOUS                             3     3      0   76864
                                             68 BANK1      3     3      0
                      _BEAT_detected
                      _CLOCK_getTime
                           _HSLToRGB
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (4) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_ANIMATION                                    2     2      0  123219
                                              0 BANK2      2     2      0
                 _LED_task_ANIMATION
         _TM1650_fastPrintNum_2digit
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   28040
                                             75 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   24638
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   24066
                                             58 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   16360
                                             52 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   16056
                                             43 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2    1134
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    7324
                                             35 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    6840
                                             27 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    5690
                                             25 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    5522
                                             22 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_2digit                           4     4      0    7330
                                             22 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    5332
                                             16 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1852
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     609
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                5     2      3     676
                                              0 BANK0      5     2      3
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1030
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     842
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _LED_task_ANIMATION                                  12    10      2   87849
                                             68 BANK1     12    10      2
                      _CLOCK_getTime
                           _HSLToRGB
                       _LED_setColor
                             ___bmul
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     298
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                         8     4      4   19052
                                             49 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM4_LoadDutyValue                                   2     0      2     328
                                             25 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM3_LoadDutyValue                                   2     0      2     328
                                             25 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM2_LoadDutyValue                                   2     0      2     328
                                             25 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM1_LoadDutyValue                                   2     0      2     328
                                             25 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _HSLToRGB                                            43    33     10   57764
                                             25 BANK1     43    33     10
                           _HueToRGB
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1529
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4    1755
                                             78 BANK0      2     2      0
                                             16 BANK1      9     5      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     392
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    3484
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _HueToRGB                                            16     4     12   25274
                                              0 BANK1     16     4     12
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    7222
                                             66 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5860
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    8772
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2    1194
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1644
                                             66 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     240
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0    1200
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1256
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1256
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    2036
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1614
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INTERRUPT_InterruptManager                          0     0      0      45
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (18) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C1_ISR                                            4     4      0      42
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (19) _I2C1_Stop                                           2     2      0      42
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (19) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) _DMX_interrupt                                       7     7      0       3
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (19) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
   _CONTROLLER_task
     Absolute function(Fake) *
     _BUTTONS_isClicked *
     _CONTROL_ANIMATION *
       _LED_task_ANIMATION
         _CLOCK_getTime
         _HSLToRGB
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 _HueToRGB (ARG)
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flsub
                     ___fladd
                       __Umul8_16 (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
         ___bmul
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_BEAT *
       _LED_task_BEAT_CONTINUOUS
         _BEAT_detected
         _CLOCK_getTime
         _HSLToRGB
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 _HueToRGB (ARG)
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flsub
                     ___fladd
                       __Umul8_16 (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
       _LED_task_BEAT_FADE
       _LED_task_BEAT_MIXED
       _LED_task_BEAT_STROBE
         _BEAT_detected
         _CLOCK_getTime
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 _HueToRGB (ARG)
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flsub
                     ___fladd
                       __Umul8_16 (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
         _beatColorCreator
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_DMX *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _LED_task_DMX
         _DMX_getAddress
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 _HueToRGB (ARG)
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flsub
                     ___fladd
                       __Umul8_16 (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
       _address_dec
         _TM1650_fastPrintNum_3digit
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___awdiv (ARG)
             ___awmod (ARG)
               ___awdiv (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                   _fputs
                     _fputc
                       _putch
                         _TM1650_setDigit
                           _writeData
                             _I2C1_MasterWrite
                               _I2C1_MasterTRBInsert
                                 _I2C1_WaitForLastPacketToComplete
                               _I2C1_MasterWriteTRBBuild
                             ___awdiv (ARG)
                             ___awmod (ARG)
                               ___awdiv (ARG)
                             ___lwdiv (ARG)
                             ___lwmod (ARG)
                               ___lwdiv (ARG)
                   _strlen
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum_3digit
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___awdiv (ARG)
             ___awmod (ARG)
               ___awdiv (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                   _fputs
                     _fputc
                       _putch
                         _TM1650_setDigit
                           _writeData
                             _I2C1_MasterWrite
                               _I2C1_MasterTRBInsert
                                 _I2C1_WaitForLastPacketToComplete
                               _I2C1_MasterWriteTRBBuild
                             ___awdiv (ARG)
                             ___awmod (ARG)
                               ___awdiv (ARG)
                             ___lwdiv (ARG)
                             ___lwmod (ARG)
                               ___lwdiv (ARG)
                   _strlen
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
     _CONTROL_MANUAL *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _LED_task_MANUAL
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               _HueToRGB (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___fladd (ARG)
                 __Umul8_16 (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 _HueToRGB (ARG)
                   ___fladd
                     __Umul8_16 (ARG)
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___fladd (ARG)
                       __Umul8_16 (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flsub
                     ___fladd
                       __Umul8_16 (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___fladd (ARG)
                         __Umul8_16 (ARG)
                       ___fldiv (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
       _TM1650_fastPrintNum_3digit
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _colorDec
         _getCurrentMenu
       _colorInc
         _getCurrentMenu
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf *
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     25F       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     50      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4F      12       98.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      4E      14       97.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      4C      16       95.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      39      18       71.3%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      40      20       80.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     25F      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 27 20:42:10 2019

                       __end_of_LED_task_MANUAL 2E45                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                  ___bmul@product 0022  
                                   __CFG_CP$OFF 0000                                              l61 2D71  
                                            l55 2118                                              l58 2D67  
                                  ?_TM1650_init 0077                                    ___awdiv@sign 0026  
                                    HueToRGB@v1 00A0                                      HueToRGB@v2 00A4  
                                    HueToRGB@vH 00A8                                              _up 014F  
                            __size_of_BEAT_init 0018                              __size_of_BEAT_task 00E2  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 2CE5                                             l120 1034  
                                           l203 2D9D                                             l150 2DDB  
                                           l231 2063                                             l400 2D43  
                                           l209 2041                                             l225 2DA8  
                                           l253 2FDD                                             l341 225B  
                                           l247 2D87                                             l275 2FFF  
                                           l603 2195                                             l532 2F7C  
                                           l269 2D92                                             l630 2086  
                                           l391 2D55                                             l616 2CFD  
                                           l624 25CB                                             l464 2E6D  
                                           l730 213F                                             l394 2D5E  
                                           l900 2FBB                                             l733 2D1F  
                                           l397 2D4C                                             l910 1145  
                                           l486 2D31                                             l903 241F  
                                           l818 2D0D                                             l906 2E0A  
                                           l915 10A5                                             l931 07FF  
                                           l940 2D3A                                             l917 112D  
                                           l943 2D28                                             l927 2E98  
                                           l787 2D16                                             _PR2 028D  
                                           _bpm 01BA                                             _dmx 025B  
                                           _pad 2512                         __size_of_PMD_Initialize 000A  
                                  ___awmod@sign 002F                                 _TMR2_Initialize 2DCE  
                               _PWM4_Initialize 2D9E                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ___flmul@aexp 0056  
                                  ___flmul@bexp 0057                              _LED_task_BEAT_FADE 0800  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                   __CFG_BBEN$OFF 0000  
                           _animationBrightness 0165                                __end_of_I2C1_ISR 0981  
                                  ___fltol@exp1 006F                                            l1112 136C  
                                          l1201 1245                                            l1122 1EC1  
                                          l2101 0D9F                                            l1133 1F12  
                                          l1205 1256                                            l2102 0DA8  
                                          l1230 2F9B                                            l1311 2EDC  
                                          l1208 2D04                                            l2105 201F  
                                          l2131 0770                                            l2115 0692  
                                          l1315 2D7C                                            l1235 2EF5  
                                          l2220 23D0                                            l2117 07EE  
                                          l1253 2E30                                            l1261 1A79  
                                          l1149 277F                                            l2038 2312  
                                          l2206 1AF2                                            l1174 14AB  
                                          l1182 1181                                            l1094 12E6  
                                          l1430 2F44                                            l1238 2E82  
                                          l1319 1E30                                            l2063 0C70  
                                          l2207 1AFE                                            l2080 0D02  
                                          l2072 0DA8                                            l2136 07BC  
                                          l1424 161C                                            l2048 1837  
                                          l1089 0B70                                            l2161 0F7B  
                                          l2065 0C4C                                            l2137 07D6  
                                          l1265 2707                                            l2241 2F29  
                                          l1505 0801                                            l1361 20F3  
                                          l1433 2E44                                            l1257 1D4E  
                                          l2090 0D46                                            l2155 0FFF  
                                          l2059 0BCF                                            l2139 07E5  
                                          l2235 2EC4                                            l1427 268F  
                                          l1531 238F                                            l2084 0D24  
                                          l1276 21C3                                            l2228 2168  
                                          l1356 2E58                                            l2245 209A  
                                          l2093 0D7D                                            l1437 17FF  
                                          l1366 20CE                                            l1518 24BD  
                                          l2247 20AA                                            l2167 0FF3  
                                          l1543 0407                                            l1375 1802  
                                          l1544 0453                                            l2193 1A9D  
                                          l1546 063A                                            l1730 252E  
                                          l2195 1B26                                            l1548 063A  
                                          l1556 021B                                            l1557 03BB  
                                          l1493 1FFF                                            l1733 2550  
                                          l1469 18BA                                            l1742 2227  
                                          l1486 19DC                                            l2199 1AD8  
                                          l1911 262B                                            l1735 256D  
                                          l1489 0800                                            l1754 21F4  
                                          l1747 1C88                                            l1499 1BD6  
                                          l1924 2511                                            l1933 246E  
                          _ADCC_StartConversion 2D17                                            l1927 243D  
                                          l1944 1945                                            l1936 18D8  
                                          l1928 2459                                            l1952 27FF  
                                          l1784 2EAE                                            l1962 27FF  
                                          l1939 192C                                            ?_pad 004B  
                                          l1959 27E9                                            l9301 2F6F  
                                          l9311 2F79                                            l9303 2F70  
                                          l9313 2F7A                                            l9305 2F74  
                                          l9321 2D81                                            l9315 2F7B  
                                          l9307 2F75                                            l9251 1006  
                                          l9323 2D82                                            l9331 2D8D  
                                          l9309 2F77                                            l9261 1017  
                                          l9253 1008                                            l9245 2D68  
                                          l9317 2D7D                                            l9325 2D88  
                                          l9431 2D1E                                            l9271 1023  
                                          l9263 1019                                            l9255 100A  
                                          l9247 1000                                            l9319 2D80  
                                          l9327 2D8B                                            l9351 2DA2  
                                          l9433 2D0E                                            l9281 102D  
                                          l9273 1025                                            l9265 101B  
                                          l9257 100D                                            l9249 1004  
                                          l9329 2D8C                                            l9361 2D98  
                                          l9353 2DA3                                            l9435 2D12  
                                          l9427 2D19                                            l9291 2D63  
                                          l9283 102F                                            l9275 1027  
                                          l9267 101D                                            l9259 100F  
                                          l9355 2D93                                            l9347 2D9E  
                                          l9371 2DD6                                            l9363 2DCE  
                                          l9429 2D1C                                            l9293 2D66  
                                          l9285 1032                                            l9277 1029  
                                          l9269 1020                                            l9357 2D96  
                                          l9349 2DA1                                            l9373 2DD8  
                                          l9365 2DD1                                            l9295 2F61  
                                          l9287 2D5F                                            l9279 102B  
                                          l9359 2D97                                            l9367 2DD2  
                                          l9297 2F6D                                            l9289 2D62  
                                          l9369 2DD5                                            l9299 2F6E  
                                          l9911 2F3C                                            l9905 2F2A  
                                          l9907 2F2F                                            l9909 2F34  
                                          l8981 2D4D                                  ?_TM1650_enable 0077  
                                          l8983 2D56                                            STR_1 3055  
                                          STR_2 3073                                            l8985 2D44  
                                          STR_3 3061                                            STR_4 305B  
                                          STR_5 3049                                            STR_6 306D  
                                          l8997 2D29                                            STR_7 304F  
                                          STR_8 3067                                            l8999 2D05  
                                          STR_9 3082                         __end_of_PWM1_Initialize 2D88  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _T2PR 028D  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                    ?_beatBrightnessCalculation 00B9                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 1F13  
                                 __CFG_FCMEN$ON 0000                             ?_LED_task_BEAT_FADE 0077  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _beat 01D6                                            _dbuf 03A0  
                          ?_adcThresholdHandler 0077                                            _ctoa 21F5  
                                          _main 2313                                            _down 014E  
                                          _init 2F9C                                            _menu 0150  
                                          _prec 01B4                                            _nout 01B2  
                                          pad@i 004F                                            pad@p 004C  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 0051                          ??_I2C1_MasterTRBInsert 0023  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 004C                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 2E31                             ?_LED_task_ANIMATION 00E4  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0009  
                                 __CFG_CSWEN$ON 0000                               ___bmul@multiplier 0023  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0024  
                          __size_of_address_inc 0025                  I2C1_MasterWriteTRBBuild@length 0021  
                           _LED_task_BEAT_MIXED 0801                                  _BUTTONS_isHeld 07EF  
                                         ??_pad 004E                         __end_of_PWM2_Initialize 2D93  
                       __end_of_TMR0_Initialize 2E6E                                      _i2c1_state 0156  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0024  
                 __end_of_OSCILLATOR_Initialize 2D68                                           l11011 27AC  
                                         l11003 2780                                           l11101 06D1  
                                         l11013 27AE                                           l11005 278D  
                                         l11111 06F0                                           l11103 06D9  
                                         l11015 27B6                                           l11201 0DCC  
                                         l11041 2003                                           l11121 071C  
                                         l11113 06FE                                           l11105 06E1  
                                         l11033 27DE                                           l11025 27C5  
                                         l11017 27B9                                           l11009 2797  
                                         l12001 2E5F                                           l11211 0DE2  
                                         l11203 0DD4                                           l11131 0737  
                                         l11123 071D                                           l11115 0702  
                                         l11107 06E9                                           l11051 0649  
                                         l11035 27EE                                           l11019 27BD  
                                         l11027 27D7                                           l12011 222A  
                                         l12003 2E61                                           l11301 0FA9  
                                         l11221 0DFE                                           l11213 0DE7  
                                         l11205 0DD9                                           l11141 074C  
                                         l11133 0739                                           l11125 0725  
                                         l11117 0703                                           l11109 06EB  
                                         l11061 065D                                           l11053 064A  
                                         l11045 063B                                           l11037 27F3  
                                         l12101 1ED2                                           l12021 223B  
                                         l12013 2232                                           l12005 2E62  
                                         l11311 0FDB                                           l11303 0FAD  
                                         l11231 0E1E                                           l11223 0E03  
                                         l11215 0DEC                                           l11207 0DDD  
                                         l11039 2000                                           l11151 076D  
                                         l11135 0740                                           l11143 0750  
                                         l11119 070A                                           l11127 0729  
                                         l11071 0674                                           l11055 064F  
                                         l11063 065F                                           l11047 0641  
                                         l12111 1EEF                                           l12103 1ED7  
                                         l12023 223C                                           l12015 2235  
                                         l12007 2E6A                                           l11321 0FF7  
                                         l11313 0FDD                                           l11305 0FBA  
                                         l11241 0E79                                           l11233 0E2B  
                                         l11225 0E08                                           l11217 0DF4  
                                         l11209 0DE1                                           l11161 0786  
                                         l11145 0754                                           l11137 0744  
                                         l11129 072F                                           l11081 0688  
                                         l11073 0675                                           l11065 0667  
                                         l11057 0654                                           l11049 0645  
                                         l11401 2FBC                                           l12113 1EF4  
                                         l12105 1EDA                                           l12121 2708  
                                         l12025 2244                                           l12017 2237  
                                         l12009 2228                                           l13001 2337  
                                         l12051 2FA6                                           l11315 0FEA  
                                         l11307 0FC4                                           l11251 0EAE  
                                         l11243 0E86                                           l11235 0E45  
                                         l11219 0DF6                                           l11171 07CD  
                                         l11163 079E                                           l11155 0775  
                                         l11147 0755                                           l11139 0745  
                                         l11075 067A                                           l11083 068A  
                                         l11067 066C                                           l11059 065C  
                                         l11331 1A95                                           l11411 2FD9  
                                         l11403 2FC6                                           l10611 2CF7  
                                         l12211 1488                                           l12203 1476  
                                         l12115 1EF9                                           l12107 1EE6  
                                         l12131 271F                                           l12123 2709  
                                         l12027 224C                                           l12019 2239  
                                         l13003 233A                                           l11501 2303  
                                         l12053 2FAF                                           l12061 2E8F  
                                         l11317 0FEE                                           l11309 0FD2  
                                         l11261 0EF1                                           l11253 0EB5  
                                         l11245 0E8D                                           l11237 0E52  
                                         l11229 0E11                                           l11173 07D5  
                                         l11157 077A                                           l11165 07A2  
                                         l11149 0759                                           l11085 069A  
                                         l11093 06B3                                           l11077 067F  
                                         l11069 0670                                           l11341 1ABE  
                                         l11333 1AA5                                           l11325 1A7C  
                                         l11405 2FCA                                           l11421 2FEC  
                                         l10621 259C                                           l10613 2066  
                                         l10701 2522                                           l12213 148D  
                                         l12205 147B                                           l12117 1F03  
                                         l12109 1EEB                                           l12133 272A  
                                         l12141 2751                                           l12125 2710  
                                         l12029 2259                                           l12301 2EEA  
                                         l13005 2345                                           l11503 2308  
                                         l12055 2FB5                                           l12063 2E95  
                                         l11319 0FEF                                           l11271 0F44  
                                         l11263 0F05                                           l11255 0EC9  
                                         l11247 0E9A                                           l11239 0E6C  
                                         l11191 0DB7                                           l11175 07DB  
                                         l11167 07AF                                           l11159 0782  
                                         l11095 06B8                                           l11087 06A6  
                                         l11079 0687                                           l11351 1AE8  
                                         l11343 1AC5                                           l11327 1A81  
                                         l11407 2FCF                                           l11423 2FF1  
                                         l10631 25BC                                           l10623 25A7  
                                         l10615 2570                                           l10711 2542  
                                         l10703 2527                                           l11511 180A  
                                         l12215 1492                                           l12207 147F  
                                         l12119 1F0D                                           l12231 1156  
                                         l12151 2770                                           l12143 2756  
                                         l12135 2731                                           l12127 2714  
                                         l12303 2EEE                                           l13007 2348  
                     I2C1_MasterTRBInsert@pflag 0022                                           l11505 230E  
                                         l12057 2DFA                                           l12049 2F9E  
                                         l11273 0F4B                                           l11281 0F5B  
                                         l11265 0F1A                                           l11257 0ED0  
                                         l11249 0EA1                                           l11193 0DB8  
                                         l11185 0DA9                                           l10801 0C05  
                                         l11441 0427                                           l11177 07DF  
                                         l11169 07CA                                           l11089 06AA  
                                         l11361 1B19                                           l11353 1AEC  
                                         l11345 1AC9                                           l11337 1AAE  
                                         l11329 1A85                                           l11601 00D9  
                                         l11409 2FD5                                           l11425 2FF7  
                                         l11417 2FDE                                           l10609 2CF7  
                                         l10633 25C6                                           l10625 25AD  
                                         l10617 2575                                           l10641 218F  
                                         l10713 2555                                           l10705 252C  
                                         l10721 21FE                                           l11433 1838  
                                         l11521 1824                                           l11513 180D  
                                         l12217 149C                                           l12209 1484  
                                         l12081 1E68                                           l12073 1E31  
                                         l12241 1177                                           l12233 115D  
                                         l12153 2775                                           l12145 275B  
                                         l12129 271B                                           l12313 1CB7  
                                         l12321 20FA                                           l12305 2EF3  
                                         l13009 234B                                           l11531 2D20  
                                         l12067 2E97                                           l12059 2E85  
                                         l11283 0F5F                                           l11275 0F4F  
                                         l11267 0F31                                           l11259 0EE4  
                                         l11195 0DBD                                           l11187 0DAF  
                                         l10803 0C09                                           l10811 0C19  
                                         l11443 0487                                           l11179 07E1  
                                         l11099 06C1                                           l11363 1B1D  
                                         l11355 1AF6                                           l11347 1AD1  
                                         l11339 1AB3                                           l11611 025D  
                                         l11603 0117                                           l11427 2FFB  
                                         l11419 2FE8                                           l11371 202A  
                                         l10635 25C9                                           l10627 25B4  
                                         l10619 2591                                           l10643 2F7F  
                                         l10651 2198                                           l10715 255E  
                                         l10707 2531                                           l10723 2206  
                                         l11523 1828                                           l11515 1812  
                                         l12219 14A6                                           l12171 139F  
                                         l12091 1EA6                                           l12083 1E77  
                                         l12075 1E3E                                           l12251 119B  
                                         l12243 117E                                           l12235 1162  
                                         l12227 1146                                           l12155 277B  
                                         l12147 2762                                           l12139 2735  
                                         l12307 1C89                                           l12331 2109  
                                         l12323 20FD                                           l11293 0F80  
                                         l11285 0F60                                           l11277 0F50  
                                         l11269 0F38                                           l11197 0DC2  
                                         l11189 0DB3                                           l10901 0D50  
                                         l10821 0C58                                           l10813 0C1A  
                                         l10805 0C0D                                           l10741 0B80  
                                         l10733 0B71                                           l11453 055C  
                                         l11437 03BC                                           l11365 1B1E  
                                         l11357 1B00                                           l11349 1ADF  
                                         l11621 0333                                           l11613 0287  
                                         l11605 014A                                           l11373 202E  
                                         l11701 24D4                                           l10629 25B6  
                                         l10637 216B                                           l10645 2F83  
                                         l10661 21B4                                           l10653 219F  
                                         l10709 253D                                           l10725 220F  
                                         l11461 21CA                                           l11525 182D  
                                         l11517 1816                                           l11509 1803  
                                         l11541 19DD                                           l12181 13F3  
                                         l12173 13B6                                           l12165 136D  
                                         l12093 1EB1                                           l12077 1E5A  
                                         l12085 1E7D                                           l12261 11BB  
                                         l12253 11A0                                           l12245 1184  
                                         l12229 114B                                           l12237 1167  
                                         l12157 277E                                           l12149 2769  
                                         l12309 1C93                                           l12333 210C  
                                         l12325 2100                                           l12317 20F4  
                                         l11295 0F85                                           l11287 0F64  
                                         l11279 0F57                                           l11199 0DCA  
                                         l10911 0D87                                           l10903 0D58  
                                         l10831 0C74                                           l10823 0C5C  
                                         l10815 0C31                                           l10807 0C11  
                                         l10743 0B85                                           l10751 0B95  
                                         l10735 0B77                                           l11455 0590  
                                         l11447 051E                                           l11439 03DB  
                                         l11471 2420                                           l11359 1B14  
                                         l11623 035D                                           l11615 02AB  
                                         l11607 0166                                           l11375 2033  
                                         l11391 2055                                           l11631 2E9B  
                                         l11711 24EA                                           l11703 24DA  
                                         l10639 2170                                           l10647 2F94  
                                         l10663 21BD                                           l10655 21A6  
                                         l10671 23A0                                           l10727 2214  
                                         l10719 21F7                                           l11463 21CE  
                                         l11535 2EAF                                           l11519 181A  
                                         l11527 1833                                           l11543 19E7  
                                         l12183 140F                                           l12191 1432  
                                         l12167 1371                                           l12087 1E87  
                                         l12079 1E5D                                           l12271 11D7  
                                         l12263 11BE                                           l12247 1189  
                                         l12255 11A5                                           l12239 116C  
                                         l13231 2743                                           l12335 210F  
                                         l12327 2103                                           l12319 20F7  
                                         l12521 23D1                                           l12601 0A2E  
                                         l11297 0F8D                                           l11289 0F78  
                                         l10921 0D9B                                           l10913 0D8F  
                                         l10905 0D5C                                           l10841 0C8E  
                                         l10833 0C79                                           l10825 0C5D  
                                         l10817 0C50                                           l10809 0C15  
                                         l10761 0BAD                                           l10753 0B9D  
                                         l10745 0B8A                                           l10737 0B7B  
                                         l11449 0552                                           l11473 2435  
                                         l11625 0381                                           l11617 02DD  
                                         l11609 01DB                                           l11377 2039  
                                         l11369 2020                                           l11393 205B  
                                         l11385 2042                                           l11641 2EAD  
                                         l11633 2E9C                                           l11721 2508  
                                         l11713 24F4                                           l11705 24DD  
                                         l10649 2E20                                           l10657 21AB  
                                         l10673 23AA                                           l10665 2390  
                                         l10681 2F16                                           l10729 2215  
                                         l11465 21E2                                           l11537 2EB4  
                                         l11561 2D7B                                           l11553 2D72  
                                         l12193 143C                                           l12185 1412  
                                         l13233 13DB                                           l12169 1388  
                                         l12177 13CD                                           l12089 1EA3  
                                         l12097 1EC2                                           l12281 11F7  
                                         l12273 11DC                                           l12257 11AA  
                                         l12265 11C0                                           l12249 1194  
                                         l12337 2112                                           l12329 2106  
                                         l11491 22E7                                           l11483 22D6  
                                         l12531 241C                                           l12523 23E9  
                                         l12611 0A48                                           l12603 0A32  
                                         l10931 2092                                           l11299 0F91  
                                         l10923 0DA3                                           l10915 0D94  
                                         l10907 0D79                                           l10851 0C9F  
                                         l10843 0C92                                           l10827 0C65  
                                         l10819 0C56                                           l10771 0BC4  
                                         l10763 0BB1                                           l10755 0BA2  
                                         l10747 0B92                                           l10739 0B7F  
                                         l11475 2451                                           l11619 0301  
                                         l11627 03B3                                           l11379 203D  
                                         l11395 205F                                           l11387 204C  
                                         l11635 2EA0                                           l11651 25D7  
                                         l11723 250D                                           l11715 24F8  
                                         l11707 24E2                                           l10659 21AD  
                                         l10675 23C7                                           l10667 2396  
                                         l10691 2145                                           l10683 2F1A  
                                         l11467 21EC                                           l11459 21C6  
                                         l11555 2D78                                           l11571 1948  
                                         l11811 16CB                                           l11803 16A7  
                                         l11547 1A0B                                           l13235 24AF  
                                         l12195 1458                                           l12187 141D  
                                         l12179 13E9                                           l12099 1ECC  
                                         l12291 121F                                           l12283 11FA  
                                         l12267 11C5                                           l12275 11E1  
                                         l12259 11B5                                           l12339 2115  
                                         l12533 2EC5                                           l11493 22EB  
                                         l11485 22D9                                           l12525 23F7  
                                         l12701 0AFF                                           l12621 0A62  
                                         l12613 0A4C                                           l12605 0A3A  
                                         l12541 0997                                           l10933 2096  
                                         l10925 0DA7                                           l10917 0D95  
                                         l10909 0D82                                           l10861 0CEC  
                                         l10853 0CA7                                           l10845 0C98  
                                         l10837 0C82                                           l10829 0C69  
                                         l10781 0BDD                                           l10773 0BC5  
                                         l10765 0BB2                                           l10757 0BA8  
                                         l10749 0B93                                           l11477 246B  
                                         l11389 2050                                           l11637 2EA4  
                                         l11661 25E8                                           l11653 25D9  
                                         l11645 25CC                                           l11717 24FD  
                                         l11709 24E6                                           l11901 2692  
                                         l10669 239B                                           l10693 2153  
                                         l10685 2F23                                           l10941 1BD9  
                                         l11557 2D79                                           l11581 198D  
                                         l11573 194D                                           l11821 16FE  
                                         l11805 16AE                                           l11741 07FC  
                                         l11565 1800                                           l11549 2CFE  
                                         l13237 2381                                           l12197 145B  
                                         l12189 142C                                           l12293 122D  
                                         l12277 11E6                                           l12269 11D0  
                                         l12285 11FB                                           l13229 1352  
                                         l11495 22EF                                           l11487 22DF  
                                         l12527 2405                                           l12519 2D32  
                                         l12711 0B11                                           l12703 0B05  
                                         l12631 0A7C                                           l12623 0A66  
                                         l12615 0A50                                           l12607 0A40  
                                         l12551 09B0                                           l12543 099B  
                                         l12535 0981                                           l10935 20A1  
                                         l10927 2089                                           l10919 0D99  
                                         l10863 0CF1                                           l10847 0C9A  
                                         l10839 0C8A                                           l10855 0CAC  
                                         l10791 0BF1                                           l10783 0BE1  
                                         l10767 0BB7                                           l10775 0BC7  
                                         l10759 0BA9                                           l11479 246D  
                                         l11639 2EA6                                           l11671 25FE  
                                         l11663 25EE                                           l11655 25DD  
                                         l11647 25CE                                           l11719 2503  
                                         l11903 2698                                           l10695 2158  
                                         l10679 2F10                                           l10951 1C0E  
                                         l10943 1BEA                                           l11591 19B6  
                                         l11583 198E                                           l11575 196A  
                                         l11823 1705                                           l11815 16E1  
                                         l11751 2684                                           l11911 246F  
                                         l12199 1466                                           l12295 1238  
                                         l12287 1206                                           l12279 11F1  
                                         l11727 2D3B                                           l11497 22FE  
                                         l11489 22E2                                           l12529 2410  
                                         l12801 10F3                                           l12721 0B24  
                                         l12713 0B15                                           l12705 0B09  
                                         l12641 0A8D                                           l12633 0A80  
                                         l12625 0A6A                                           l12617 0A58  
                                         l12609 0A44                                           l12561 09C2  
                                         l12553 09B2                                           l12545 09A0  
                                         l12537 098E                                           l10937 20A6  
                                         l10929 208B                                           l10881 0D2B  
                                         l10873 0D18                                           l10857 0CC2  
                                         l10865 0CFA                                           l10849 0C9E  
                                         l10793 0BF5                                           l10785 0BE5  
                                         l10777 0BD5                                           l10769 0BBC  
                                         l11569 14AC                                           l11673 260D  
                                         l11665 25F1                                           l11681 261D  
                                         l11657 25E2                                           l11649 25D2  
                                         l10689 2142                                           l10697 2514  
                                         l10961 1C41                                           l10953 1C16  
                                         l10945 1BF2                                           l11593 19D3  
                                         l11585 1993                                           l11577 196B  
                                         l11841 175C                                           l11833 1738  
                                         l11817 16E8                                           l11809 16C4  
                                         l11745 07FE                                           l11761 20E8  
                                         l11753 20CF                                           l11921 248A  
                                         l11913 2470                                           l12289 1214  
                                         l12297 2EDF                                           l11499 2302  
                                         l12811 1127                                           l12803 10FE  
                                         l12731 0B38                                           l12723 0B26  
                                         l12715 0B1B                                           l12707 0B0B  
                                         l12651 0AA0                                           l12643 0A93  
                                         l12635 0A83                                           l12627 0A6E  
                                         l12619 0A5E                                           l12571 09DC  
                                         l12563 09CA                                           l12555 09B6  
                                         l12547 09A4                                           l12539 0996  
                                         l10891 0D39                                           l10883 0D2D  
                                         l10875 0D1F                                           l10867 0D0A  
                                         l10859 0CE6                                           l10795 0BF9  
                                         l10787 0BE9                                           l10779 0BD9  
                                         l11683 2622                                           l11675 2611  
                                         l11667 25F6                                           l11659 25E6  
                                         l11691 24C0                                           l11907 26BC  
                                         l10699 2519                                           l10971 1C62  
                                         l10963 1C49                                           l10955 1C22  
                                         l10947 1BF7                                           l11595 19D4  
                                         l11587 19B0                                           l11579 1970  
                                         l11851 178E                                           l11835 173F  
                                         l11827 171B                                           l11739 07F1  
                                         l11771 20C3                                           l11763 20AB  
                                         l11755 20D7                                           l11923 2490  
                                         l11915 2476                                           l11931 24A4  
                                         l12299 2EE4                                           l12901 1D94  
                                         l12813 113B                                           l12805 1108  
                                         l12741 0B52                                           l12733 0B3A  
                                         l12725 0B2A                                           l12717 0B1F  
                                         l12709 0B0D                                           l12661 0AB3  
                                         l12653 0AA4                                           l12645 0A97  
                                         l12637 0A85                                           l12629 0A76  
                                         l12581 09FD                                           l12573 09E0  
                                         l12565 09D0                                           l12557 09BA  
                                         l12549 09A8                                           l10893 0D3D  
                                         l10885 0D32                                           l10877 0D23  
                                         l10869 0D0F                                           l10797 0BFD  
                                         l10789 0BED                                           l11685 2627  
                                         l11677 2612                                           l11669 25FA  
                                         l11693 24C4                                           l10965 1C54  
                                         l10949 1BFC                                           l11589 19B1  
                                         l11853 1795                                           l11845 1772  
                                         l11829 1722                                           l11781 1643  
                                         l11773 161D                                           l11749 262C  
                                         l11765 20B2                                           l11757 20DC  
                                         l11909 2E31                                           l11941 2358  
                                         l11925 2497                                           l11917 247D  
                                         l12821 1261                                           l12911 1DBC  
                                         l12903 1D96                                           l12815 113F  
                                         l12807 1112                                           l12751 0B62  
                                         l12743 0B58                                           l12735 0B3E  
                                         l12727 0B34                                           l12719 0B22  
                                         l12671 0AC8                                           l12663 0AB7  
                                         l12655 0AAA                                           l12647 0A9A  
                                         l12639 0A89                                           l12591 0A14  
                                         l12583 0A03                                           l12575 09E8  
                                         l12567 09D4                                           l12559 09BE  
                                         l10991 18F8                                           l10983 18BB  
                                         l10895 0D43                                           l10879 0D28  
                                         l10887 0D34                                           l10799 0C01  
                                         l11599 00BD                                           l11679 2617  
                                         l11695 24C9                                           l10959 1C30  
                                         l10975 1C65                                           l11871 17FB  
                                         l11863 17C8                                           l11847 1779  
                                         l11839 1755                                           l11791 166B  
                                         l11783 164A                                           l11767 20B7  
                                         l11759 20E0                                           l11951 236D  
                                         l11943 235B                                           l11927 249D  
                                         l11919 2483                                           l12831 1282  
                                         l12823 1262                                           l12921 1DED  
                                         l12913 1DC2                                           l12905 1D9A  
                                         l12809 111C                                           l12753 0B66  
                                         l12745 0B5C                                           l12737 0B44  
                                         l12729 0B36                                           l12681 0ADC  
                                         l12673 0ACA                                           l12665 0ABB  
                                         l12657 0AAE                                           l12649 0A9C  
                                         l12593 0A1C                                           l12585 0A07  
                                         l12577 09EE                                           l12569 09D8  
                                         l10993 1910                                           l10985 18D0  
                                         l10889 0D38                                           l11697 24CB  
                                         l11689 24BE                                           l10977 1C7E  
                                         l10969 1C5A                                           l11881 1B52  
                                         l11873 1B27                                           l11865 17CF  
                                         l11857 17AA                                           l11793 1671  
                                         l11785 164F                                           l11777 1636  
                                         l11769 20BB                                           l11953 2373  
                                         l11945 2361                                           l11937 2351  
                                         l12841 12A9                                           l12833 1287  
                                         l12825 126A                                           l12817 1257  
                                         l12761 2E45                                           l12931 1E21  
                                         l12923 1DF2                                           l12907 1DA7  
                                         l12915 1DD5                                           l12771 1051  
                                         l12747 0B5E                                           l12739 0B4E  
                                         l12691 0AEF                                           l12683 0ADF  
                                         l12675 0ACE                                           l12667 0AC1  
                                         l12659 0AB1                                           l12595 0A22  
                                         l12587 0A0C                                           l12579 09F9  
                                         l10995 1914                                           l10987 18EC  
                                         l10899 0D4B                                           l11971 1F56  
                                         l11963 1F15                                           l11699 24CF  
                                         l11891 1B9C                                           l11883 1B57  
                                         l11859 17B1                                           l11795 1685  
                                         l11787 1651                                           l11779 1641  
                                         l11947 2364                                           l11939 2352  
                                         l12851 12D3                                           l12843 12AE  
                                         l12835 1291                                           l12827 1272  
                                         l12819 125D                                           l12763 2E4D  
                                         l12755 2E6E                                           l12933 1E26  
                                         l12925 1DFC                                           l12917 1DDC  
                                         l12909 1DB2                                           l12781 1066  
                                         l12773 1058                                           l12765 1035  
                                         l12749 0B60                                           l12693 0AF3  
                                         l12685 0AE1                                           l12677 0AD2  
                                         l12669 0AC5                                           l12597 0A26  
                                         l12589 0A10                                           l10997 1942  
                                         l10989 18F4                                           l11981 1FF4  
                                         l11973 1F5B                                           l11893 1BA8  
                                         l11885 1B79                                           l11877 1B40  
                                         l11869 17E5                                           l11797 168A  
                                         l11789 1657                                           l11949 236A  
                                         l11957 2376                                           l12861 130B  
                                         l12853 12E7                                           l12845 12B9  
                                         l12837 1296                                           l12829 127A  
                                         l12757 2E72                                           l12927 1DFF  
                                         l12919 1DDD                                           l12791 10B9  
                                         l12783 1084                                           l12767 103D  
                                         l12695 0AF5                                           l12687 0AE5  
                                         l12679 0AD8                                           l12599 0A2A  
                                         l10999 1944                                           l11975 1F5D  
                                         l11967 1F41                                           l11895 1BC0  
                                         l11887 1B7F                                           l11879 1B4B  
                                         l11799 1691                                           l12871 133A  
                                         l12863 1314                                           l12855 12F0  
                                         l12847 12C3                                           l12839 12A0  
                                         l11991 2134                                           l11983 2119  
                                         l12759 2E7A                                           l12929 1E0B  
                                         l12793 10C1                                           l12785 1095  
                                         l12697 0AF7                                           l12689 0AE9  
                                         l11977 1F9B                                           l11969 1F4C  
                                         l11889 1B97                                           l12865 131D  
                                         l12857 12F9                                           l12849 12C8  
                                         l11993 2136                                           l11985 212A  
                                         l12891 1D7B                                           l12883 1D4F  
                                         l12795 10CB                                           l12787 109F  
                                         l12779 105A                                           l12699 0AFB  
                                         l11979 1FD9                                           l11899 1BC3  
                                         l12867 1326                                           l12859 1302  
                                         l12875 1345                                           l11995 2137  
                                         l11987 212C                                           l12893 1D81  
                                         l12797 10D5                                           l12789 10AF  
                                         l12869 132F                                           l11989 2132  
                                         l11997 2E59                                           l12981 2313  
                                         l12895 1D84                                           l12887 1D6B  
                                         l12799 10E9                                           l11999 2E5E  
                                         l12991 232C                                           l12983 2316  
                                         l12897 1D89                                           l12889 1D76  
                                         l12993 232F                                           l12985 2323  
                                         l12899 1D8F                                           l12995 2332  
                                         l12987 2326                                           l12997 2333  
                                         l12989 2329                                           l12999 2334  
                         _eusart1RxStatusBuffer 01AA                                __end_of_LED_init 2F45  
                                 ___fltol@sign1 006E                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0054  
                               __end_of___fladd 0DA9                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 07EF                                           _ADREF 0116  
                               __end_of___awdiv 262C                               __end_of_I2C1_Stop 2F61  
                                         STR_10 308A                                           STR_11 3086  
                                         STR_12 307E                                           STR_20 3079  
                                         STR_21 3047                                           STR_13 3097  
                                         STR_14 30A0                                           STR_30 3043  
                                         STR_22 301C                                           STR_15 309D  
                                         STR_31 309A                                           STR_23 303C  
                                         STR_32 309A                                           STR_16 30A3  
                                         STR_24 302D                                           STR_17 3092  
                                         STR_25 3013                                   __CFG_WDTE$OFF 0000  
                                         STR_18 3096                                           STR_26 3000  
                                         STR_19 308E                                           STR_27 300A  
                                         STR_28 3025                                 __end_of___awmod 2512  
                                         STR_29 3035                                __end_of_DMX_init 2E59  
                                         _ADRPT 009A                                 __end_of___flmul 1000  
                               __end_of___flsub 2020                                 __end_of___fltol 2800  
                                         u12000 18EC                                           u12001 18EB  
                                         u12010 18F8                                           u12011 18F7  
                                         u12020 1914                                           u12100 27DD  
                                         u11300 25A7                                           u12021 1913  
                                         u12101 27DC                                           u11301 25A6  
                                         u12030 1942                                           u11310 25B4  
                                         u12031 1941                                           u11311 25B3  
                                         u12200 069A                                           u12120 27EE  
                                         u12040 278D                                           u11320 25C6  
                                         u11400 239B                                           u13000 21EC  
                                         u12201 0699                                           u12121 27ED  
                                         u12041 278C                                           u11321 25C5  
                                         u11401 239A                                           u13001 21EB  
                                         u12210 06B8                                           u13010 2435  
                                         u12130 27F3                                           u12050 27A5  
                                         u11330 2170                                           u11410 23AA  
                                         u12035 193E                                           u12211 06B7  
                                         u13011 2434                                           u12131 27F2  
                                         u12115 27DF                                           u11331 216F  
                                         u11411 23A9                                           u13100 230E  
                                         u11500 0B7F                                           u12220 06F0  
                                         u12140 0649                                           u13020 2451  
                                         u12060 27BD                                           u11340 2F9B  
                                         u11420 23C7                                 ___awdiv@divisor 0020  
                                         u13101 230D                                           u11501 0B7E  
                                         u12221 06EF                                           u12141 0648  
                                         u13021 2450                                           u12061 27BC  
                                         u11341 2F9A                                           u11421 23C6  
                                         u11510 0B85                                           u12310 0744  
                                         u12150 064F                                           u13030 246B  
                                         u12070 27C4                                           u11350 219F  
                                         u11430 2F23                                           u13110 180A  
                                         u11511 0B84                                           u12311 0743  
                                         u12151 064E                                           u13031 246A  
                                         u12071 27C3                                           u12055 27A1  
                                         u11351 219E                                           u11431 2F22  
                                         u13111 1809                                           u13040 22DF  
                                         u11600 0C3B                                           u11520 0B8A  
                                         u12400 07AF                                           u12160 0654  
                                         u11280 2CFD                                           u11360 21A6  
                                         u11440 2168                                           u13200 1970  
                                         u14000 2762                                           u13041 22DE  
                                         u11601 0C39                                           u11521 0B89  
                                         u12401 07AE                                           u12305 073A  
                                         u12161 0653                                           u11281 2CFC  
                                         u11361 21A5                                           u11425 23C3  
                                         u11441 2167                                           u13201 196F  
                                         u14001 2761                                           u11610 0C3C  
                                         u11530 0BA8                                           u12410 07CA  
                                         u12330 0754                                           u12250 0702  
                                         u12170 0674                                           u12090 27D6  
                                         u11290 2575                                           u11370 21AB  
                                         u11450 2519                                           u13210 1993  
                                         u13130 181A                                           u14010 2775  
                                         u11531 0BA7                                           u12411 07C9  
                                         u12331 0753                                           u12251 0701  
                                         u12235 06F1                                           u12171 0673  
                                         u13035 2467                                           u12091 27D5  
                                         u11291 2574                                           u11371 21AA  
                                         u11451 2518                                           u13211 1992  
                                         u13131 1819                                           u14011 2774  
                                         u13060 22EF                                           u12500 0E08  
                                         u11700 0C9E                                           u11620 0C50  
                                         u11540 0BB1                                           u12420 07DF  
                                         u12340 0759                                           u12180 067A  
                                         u11380 21B4                                           u11460 2527  
                                         u13220 19B6                                           u13140 1824  
                                         u14100 1484                                           u14020 277B  
                                         u13061 22EE                                           u12501 0E07  
                                         u11701 0C9D                                           u11621 0C4F  
                                         u11541 0BB0                                           u12421 07DE  
                                         u12405 07AB                                           u12341 0758  
                                         u12325 0746                                           u12245 06F8  
                                         u12181 0679                                           u12085 27C6  
                                         u11381 21B3                                           u11461 2526  
                                         u13221 19B5                                           u13141 1823  
                                         u13125 180E                                           u14101 1483  
                                         u14021 277A                                           u12430 0DB7  
                                         u11630 0C5C                                           u11550 0BB7  
                                         u12350 076D                                           u12270 071C  
                                         u12190 067F                                           u13230 00D9  
                                         u13310 25FE                                           u11390 2396  
                                         u11470 2550                                           u14110 148D  
                                         u14030 13F3                                           u13055 22E3  
                                         u12431 0DB6                                           u11631 0C5B  
                                         u11551 0BB6                                           u12415 07C6  
                                         u12351 076C                                           u12271 071B  
                                         u12191 067E                                           u13231 00D8  
                                         u13311 25FD                                           u11391 2395  
                                         u11471 254F                                           u14111 148C  
                                         u14031 13F2                                           u13080 22FE  
                                         u12600 0F64                                           u12440 0DBD  
                                         u11800 0D38                                           u11720 0CC2  
                                         u11560 0BBC                                           u12360 0774  
                                         u12280 072F                                           u13240 0166  
                                         u11480 2555                                           u13160 1833  
                                         u14120 1492                                           u14040 140F  
                                         u14200 117E                                           _T2CON 028E  
                                         u13081 22FD                                           u12601 0F63  
                                         u12441 0DBC                                           u11801 0D37  
                                         u11721 0CC1                                           u11561 0BBB  
                                         u12361 0773                                           u12281 072E  
                                         u12265 0704                                           u13241 0165  
                                         u13305 25F2                                           u11481 2554  
                                         u13161 1832                                           u13145 1820  
                                         u14121 1491                                           u14041 140E  
                                         u14201 117D                                           u12610 0F78  
                                         u12530 0F10                                           u12450 0DC2  
                                         u11810 0D3D                                           u11730 0CF1  
                                         u11650 0C70                                           u11570 0BD5  
                                         u12370 077A                                           u12290 0737  
                                         u13250 2EA0                                           u13330 260D  
                                         u13410 24EA                                           u11490 21FE  
                                         u13170 19E7                                           u14130 149C  
                                         u14050 142C                                           u14210 1189  
                                         u13075 22F0                                           u12611 0F77  
                                         u12515 0E87                                           u12451 0DC1  
                                         u11811 0D3C                                           u11731 0CF0  
                                         u11723 0CBE                                           u11715 0CA1  
                                         u11651 0C6F                                           u11571 0BD4  
                                         u12371 0779                                           u12291 0736  
                                         u12275 0718                                           u13251 2E9F  
                                         u13331 260C                                           u13411 24E9  
                                         u11475 254C                                           u11491 21FD  
                                         u13155 1829                                           u13171 19E6  
                                         u14131 149B                                           u14051 142B  
                                         u14211 1188                                           u12620 0F7F  
                                         u12540 0F27                                           u12460 0DE1  
                                         u11900 0D94                                           u11820 0D43  
                                         u11740 0D0A                                           u11660 0C74  
                                         u11580 0BD9                                           u12380 0786  
                                         u12700 1A85                                           u13260 2EAD  
                                         u13420 24F4                                           u13180 2D78  
                                         u13500 1635                                           u14140 14A6  
                                         u14060 143C                                           u14300 11E6  
                                         u14220 1194                                           u13085 22FA  
                                         u12621 0F7E                                           u12525 0EB6  
                                         u12461 0DE0                                           u11901 0D93  
                                         u11821 0D42                                           u11741 0D09  
                                         u11661 0C73                                           u11645 0C5F  
                                         u11581 0BD8                                           u12381 0785  
                                         u12701 1A84                                           u13261 2EAC  
                                         u13325 25FF                                           u13421 24F3  
                                         u13405 24DE                                           u13181 2D77  
                                         u13501 1634                                           u14141 14A5  
                                         u14061 143B                                           u14045 140B  
                                         u14301 11E5                                           u14221 1193  
                                         u12630 0F85                                           u12470 0DE7  
                                         u11910 0D99                                           u11830 0D4A  
                                         u11750 0D0F                                           u11670 0C79  
                                         u11590 0C31                                           u12390 0794  
                                         u12710 1AA5                                           u13350 261D  
                                         u13270 25D2                                           u13190 194D  
                                         u13510 164F                                           u14070 1458  
                                         u14310 11F1                                           u14230 119B  
                                         u14150 114B                                           u13095 2304  
                                         u12631 0F84                                           u12535 0F0C  
                                         u12471 0DE6                                           u11911 0D98  
                                         u11831 0D49                                           u11751 0D0E  
                                         u11671 0C78                                           u11591 0C30  
                                         u12711 1AA4                                           u13351 261C  
                                         u13335 2609                                           u13271 25D1  
                                         u13191 194C                                           u13511 164E  
                                         u14071 1457                                           u14055 1428  
                                         u14311 11F0                                           u14231 119A  
                                         u14151 114A                                           u12640 0F91  
                                         u12480 0DEC                                           u11920 0DA7  
                                         u11840 0D50                                           u11680 0C8E  
                                         u12800 1B0A                                           u13360 2622  
                                         u13280 25DD                                           u13440 2503  
                                         u13600 173F                                           u13520 1657  
                                         u14080 1475                                           u14320 11F7  
                                         u14240 11AA                                           u14160 1156  
                                         u12641 0F90                                           u12545 0F23  
                                         u12481 0DEB                                           u11921 0DA6  
                                         u11841 0D4F                                           u11681 0C8D  
                                         u13361 2621                                           u13345 2613  
                                         u13281 25DC                                           u13441 2502  
                                         u13425 24F0                                           u13601 173E  
                                         u13521 1656                                           u14081 1474  
                                         u14321 11F6                                           u14241 11A9  
                                         u14161 1155                                           u11930 2096  
                                         u12650 0F9F                                           u12570 0F4F  
                                         u12490 0E03                                           u11850 0D5C  
                                         u11770 0D23                                           u11690 0C92  
                                         u12810 1B19                                           u12730 1AC4  
                                         u13290 25EE                                           u13450 2508  
                                         u13370 24C4                                           u13610 175C  
                                         u13530 1671                                           u14090 147B  
                                         u14330 1206                                           u14250 11B5  
                                         u14170 115D                                           u11931 2095  
                                         u12571 0F4E                                           u12555 0F32  
                                         u12491 0E02                                           u11851 0D5B  
                                         u11771 0D22                                           u11691 0C91  
                                         u11595 0C2D                                           u12395 0790  
                                         u12811 1B18                                           u12731 1AC3  
                                         u13291 25ED                                           u13451 2507  
                                         u13435 24F9                                           u13371 24C3  
                                         u13611 175B                                           u13531 1670  
                                         u14091 147A                                           u14075 1454  
                                         u14331 1205                                           u14251 11B4  
                                         u14171 115C                                           _LATC5 00D5  
                                         u12660 0FBA                                           u11860 0D6A  
                                         u11780 0D28                                           u12820 1B1D  
                                         u12900 2FCF                                           u13380 24CF  
                                         u13700 1BC0                                           u13620 1779  
                                         u13540 1691                                           u14340 121F  
                                         u14260 11BB                                           u14180 116C  
                                         u12661 0FB9                                           u12565 0F45  
                                         u11781 0D27                                           u11765 0D19  
                                         u12821 1B1C                                           u12805 1B06  
                                         u12725 1AB8                                           u12901 2FCE  
                                         u13381 24CE                                           u13701 1BBF  
                                         u13621 1778                                           u13541 1690  
                                         u14085 1471                                           u14341 121E  
                                         u14261 11BA                                           u14181 116B  
                                         u11950 20A6                                           u12670 0FD2  
                                         u12590 0F5F                                           u11870 0D79  
                                         u11790 0D32                                           u12750 1ADE  
                                         u12830 202A                                           u13390 24DA  
                                         u13710 2698                                           u13630 1795  
                                         u13550 16AE                                           u13470 07FC  
                                         u14350 1238                                           u14270 11C5  
                                         u14190 1177                                           u11951 20A5  
                                         u12671 0FD1                                           u12655 0F9B  
                                         u12591 0F5E                                           u11871 0D78  
                                         u11791 0D31                                           u12751 1ADD  
                                         u12831 2029                                           u13391 24D9  
                                         u13711 2697                                           u13631 1794  
                                         u13551 16AD                                           u13471 07FB  
                                         u14351 1237                                           u14271 11C4  
                                         u14191 1176                                           u14600 1084  
                                         u12680 0FEE                                           u11880 0D82  
                                         u12920 2FE8                                           u12840 2033  
                                         u13800 1F40                                           u11960 1BEA  
                                         u13640 17B1                                           u13560 16CB  
                                         u13480 20D7                                           u13720 2476  
                                         u14280 11D0                                           u14360 2EE4  
                                         u14601 1083                                           u11945 209B  
                                         u12681 0FED                                           u12665 0FB6  
                                         u12585 0F51                                           u11881 0D81  
                                         u11865 0D66                                           u12745 1AD2  
                                         u12921 2FE7                                           u12841 2032  
                                         u13801 1F3F                                           u11961 1BE9  
                                         u13641 17B0                                           u13561 16CA  
                                         u13481 20D6                                           u13721 2475  
                                         u14281 11CF                                           u14361 2EE3  
                                         u14610 1095                                           u11890 0D87  
                                         u12770 1AEC                                           u12690 1A81  
                                         u12930 2FF1                                           u13810 1F56  
                                         u11970 1C0E                                           u13650 17CF  
                                         u13570 16E8                                           u13490 20B2  
                                         u13730 2483                                           u14290 11D7  
                                         u14370 1C93                                           u14611 1094  
                                         u12675 0FCE                                           u11891 0D86  
                                         u12771 1AEB                                           u12691 1A80  
                                         u12915 2FD1                                           u12931 2FF0  
                                         u13811 1F55                                           u11971 1C0D  
                                         u13651 17CE                                           u13571 16E7  
                                         u13491 20B1                                           u13731 2482  
                                         u14291 11D6                                           u14371 1C92  
                                         u15067 231C                                           u14700 1127  
                                         u14620 10AF                                           u12780 1AF2  
                                         u12860 204C                                           u13820 1FE4  
                                         u11980 1C41                                           u13660 1B3F  
                                         u13580 1705                                           u13740 2490  
                                         u13900 1EA3                                           _T2HLT 028F  
                                         u14701 1126                                           u14621 10AE  
                                         u12781 1AF1                                           u12765 1AE2  
                                         u12861 204B                                           u13805 1F3C  
                                         u11981 1C40                                           u13661 1B3E  
                                         u13581 1704                                           u13741 248F  
                                         u13901 1EA2                                           u14710 1145  
                                         u14630 10B9                                           u11990 18D0  
                                         u12950 03DB                                           u12790 1AF6  
                                         u12870 2055                                           u13670 1B62  
                                         u13590 1722                                           u13750 249D  
                                         u13910 1EC0                                           u14711 1144  
                                         u14631 10B8                                           u11991 18CF  
                                         u12951 03DA                                           u12791 1AF5  
                                         u12855 2035                                           u12871 2054  
                                         u13591 1721                                           u13751 249C  
                                         u13911 1EBF                                           u14640 10CB  
                                         u12960 0427                                           u13680 1B7F  
                                         u13760 2358                                           u13920 1ECC  
                                         u14800 133A                                           u14720 125D  
                                         u14641 10CA                                           u12961 0426  
                                         u12945 2FF3                                           u13681 1B7E  
                                         u13761 2357                                           u13921 1ECB  
                                         u13905 1E9F                                           u14801 1339  
                                         u14721 125C                                           u14810 1D6A  
                                         u14650 10D5                                           u14570 1050  
                                         u13850 2E8F                                           u12970 0487  
                                         u12890 2FC6                                           u13690 1B97  
                                         u13770 2361                                           u13930 1ED7  
                                         u14730 1287                                           u14811 1D69  
                                         u14651 10D4                                           u14571 104F  
                                         u13851 2E8E                                           u12971 0486  
                                         u12891 2FC5                                           u13691 1B96  
                                         u13771 2360                                           u13931 1ED6  
                                         u13915 1EBC                                           u14731 1286  
                                         u14820 1D7B                                           u14660 10E9  
                                         u12980 0552                                           u13780 236A  
                                         u13940 1EEB                                           u13860 1E3E  
                                         u14740 1296                                           u14821 1D7A  
                                         u14661 10E8                                           u12981 0551  
                                         u12885 2057                                           u13781 2369  
                                         u13941 1EEA                                           u13861 1E3D  
                                         u14741 1295                                           u14830 1D8F  
                                         u14670 10FE                                           u12990 0590  
                                         u13790 2373                                           u13950 1EF4  
                                         u13870 1E5A                                           u14750 12A0  
                                         u14831 1D8E                                           u14815 1D66  
                                         u14671 10FD                                           u12991 058F  
                                         u13791 2372                                           u13951 1EF3  
                                         u13871 1E59                                           u14751 129F  
                                         u14840 1D94                                           u14680 1112  
                                         u13960 1EF9                                           u13880 1E77  
                                         u14760 12AE                                           u14841 1D93  
                                         u14681 1111                                           u14585 105D  
                                         u13961 1EF8                                           u13881 1E76  
                                         u14761 12AD                                           u14850 1DBC  
                                         u14690 111C                                           u14594 107C  
                                         u13970 1F03                                           u13890 1E87  
                                         u14770 12B9                                           u14851 1DBB  
                                         u14691 111B                                           u14595 107B  
                                         u13971 1F02                                           u13891 1E86  
                                         u13875 1E56                                           u14771 12B8  
                                         u14860 1DED                                           u13980 1F0D  
                                         u14780 12C8                                           u14861 1DEC  
                                         u13981 1F0C                                           u13885 1E73  
                                         u14781 12C7                                           u14870 1E21  
                                         u13990 275B                                           u14790 12D3  
                                         u14871 1E20                                           u13991 275A  
                                         u14791 12D2                                           u14865 1DE9  
                               __end_of___lwdiv 2313                      _ADCC_ADTI_InterruptHandler 01E9  
                              __end_of_HSLToRGB 03BC                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l432 0023  
                                         i1l441 004A                                 __end_of___lwmod 1838  
                                         i1l434 002F                                           i1l435 004A  
                                         i1l436 003B                                           i1l429 0013  
                                         i1l382 2CE0                                           i1l375 2298  
                                         i1l560 0879                                           i1l552 0846  
                                         i1l385 2CF0                                           i1l561 0888  
                                         i1l554 084E                                           i1l379 2F0F  
                                         i1l571 08CD                                           i1l555 0851  
                                         i1l547 0980                                           i1l483 2DF9  
                                         i1l388 2CEC                                           i1l821 2CDF  
                                         i1l549 0818                                           i1l590 2E1B  
                                         i1l815 2DEA                                           i1l639 2CE4  
                                         i1l583 093E                                           i1l575 08F5  
                                         i1l592 2E1D                                           i1l489 2CE1  
                                         i1l578 0904                                           i1l579 0915  
                                         i1l596 2F60                                           i1l946 2CF6  
                               ___awdiv@counter 0025                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 005A                              _PWM4_LoadDutyValue 2042  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
              __end_of_LED_task_BEAT_CONTINUOUS 1BD7                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 2CE5  
                          ??_LED_task_ANIMATION 00E6                       ?_TMR0_SetInterruptHandler 0020  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 2DFA  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 015C  
                          ?_LED_task_BEAT_MIXED 0077                                           _flags 012B  
                                         _enter 014D                           ?_ADCC_StartConversion 0077  
                                         _fputc 2390                                           _fputs 2140  
                           ?_PWM4_LoadDutyValue 00B9                       __size_of_beatColorCreator 0097  
                                         pad@fp 0053                                           _width 0129  
                                         ctoa@c 0054                                           _putch 2196  
                                         ctoa@w 0058                         __end_of_PWM3_Initialize 2D9E  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0077  
                             __end_of_BEAT_init 2EDD                               __end_of_BEAT_task 1E31  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 2CE1     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0077             ?_EUSART1_DefaultFramingErrorHandler 0077  
            _EUSART1_DefaultFramingErrorHandler 2CE0                                    _beatFadeTask 02C9  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 0800  
                               __initialization 004E                            TM1650_setDigit@digit 0038  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                              ?_LED_task_MANUAL 0077                                    __end_of_ctoa 2228  
                    __end_of_EUSART1_Initialize 225C                                    __end_of_main 2351  
                                  __end_of_init 2FBC                                 _CONTROLLER_init 0981  
                              __end_of_HueToRGB 063B                                 _CONTROLLER_task 1257  
                          ??_PWM4_LoadDutyValue 0070                                   ?_LED_setColor 00D1  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
                                 ?_LED_task_DMX 0077                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 2D29                                    _beatContTask 02BE  
                       __end_of_PWM4_Initialize 2DA9                         __end_of_TMR2_Initialize 2DDC  
                   ?_INTERRUPT_InterruptManager 0077                            _LED_task_BEAT_STROBE 161D  
                                   _i2c1_object 0120                                          ??_ctoa 0056  
                                        ??_main 016D                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 2780                               __end_of_GPIO_init 2E0B  
                         ??_LED_task_BEAT_MIXED 0020                                 ??_TM1650_enable 0036  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                            __size_of_CONTROL_DMX 00E2  
                                        ?_fputc 003B                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0043  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR3H 0315                                          _CCPR1L 030C  
                                        _CCPR4H 0319                                          _CCPR2L 0310  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                              ___awdiv@dividend 0022                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0077  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0077  
                                        _RC5PPS 1F25                                          i1l1308 2CE8  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l1372 22D5                                          _RC7PPS 1F27  
                                __CFG_WDTCCS$SC 0000               LED_task_ANIMATION@calculatedSpeed 00EF  
                                        _OSCFRQ 0893                          __size_of_DMX_interrupt 003D  
                                        _TX1REG 011A                                          _TX1STA 011E  
                              __end_of___xxtofl 1B27                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0036  
                               ?_BUTTONS_isHeld 0077                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0069  
                              __end_of_colorDec 2390                                __end_of_colorInc 24BE  
                                _p_i2c1_current 0154                                          ___flge 18BB  
                                        ___bmul 2E99                                          ___fleq 2420  
                                ??_LED_setColor 00D5                     __size_of_PWM3_LoadDutyValue 0022  
                                ??_LED_task_DMX 00D9                     __end_of_TM1650_fastPrintNum 1D4F  
                             _ADCC_ThresholdISR 2DDC                                       ??___fladd 0031  
                                     ??___fldiv 0036                                       ??___awdiv 0024  
                                __CFG_STVREN$ON 0000                                       ??___awmod 002D  
                                     ??___flmul 0050                                       ??___flsub 006A  
                                     ??___fltol 00B4                                       ??___lwdiv 0024  
                  ??_TM1650_fastPrintNum_2digit 0036                                       ??___lwmod 002C  
                  ??_TM1650_fastPrintNum_3digit 0038                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                          _manual 01C0  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                           ?_LED_task_BEAT_STROBE 0077  
                                     ?_I2C1_ISR 0077                                ___awdiv@quotient 0027  
                               ___awmod@divisor 0029                                 ___awmod@counter 002E  
                                        _printf 2EAF                          __size_of_BEAT_detected 000B  
                                        pad@buf 004B                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0057  
                                _lastActiveTime 01BC                                          _strlen 2F10  
                          __size_of_TM1650_init 0015                   TM1650_fastPrintNum_2digit@num 0039  
                               _ADCC_Initialize 2119                                          fputc@c 003B  
                                _PMD_Initialize 2D68                                          fputs@c 0047  
                                  ??_CLOCK_init 0022                                          fputs@i 0049  
                                        fputs@s 0048                              __size_of__Umul8_16 0024  
                           ??_ADCC_ThresholdISR 0077                   TM1650_fastPrintNum_3digit@num 0036  
                        ??_ADCC_StartConversion 0020                                          putch@n 003A  
                              __end_of_vfprintf 21F5            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 2D0E                                     HSLToRGB@hue 00D8  
                                   HSLToRGB@hsl 00B9                                     HSLToRGB@rgb 00E0  
                 I2C1_MasterWriteTRBBuild@pdata 0020                        _LED_task_BEAT_CONTINUOUS 1B27  
                                 _tm1650_status 0143                                 _eusart1RxBuffer 02A0  
                                    ___flge@ff1 0062                                      ___flge@ff2 0066  
                       beatColorCreator@inGreen 00C3                                ?_PWM3_Initialize 0077  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 20F4                                    ___xxtofl@val 0020  
                                    ___fleq@ff1 0020                                      ___fleq@ff2 0024  
                       beatColorCreator@inWhite 00C5                         __end_of__initialization 00B9  
                       __end_of_CONTROLLER_init 0B71                         __end_of_CONTROLLER_task 136D  
                            ?_SYSTEM_Initialize 0077             __size_of_TM1650_fastPrintNum_2digit 0078  
           __size_of_TM1650_fastPrintNum_3digit 009D                      __end_of_PWM2_LoadDutyValue 3000  
                                     ?_LED_init 0077                                      ___fltol@f1 00B0  
                                     ?_DMX_init 0077                                  _i2c1_trb_count 0155  
                   PWM1_LoadDutyValue@dutyValue 00B9                                       ?_HSLToRGB 00B9  
                           ___bmul@multiplicand 0020                  __size_of_EUSART1_RxDataHandler 001A  
                     __end_of_ADCC_ThresholdISR 2DEB                         __size_of_DMX_getAddress 0003  
                 __end_of_EUSART1_RxDataHandler 2F10                           _I2C1_FunctionComplete 2E0B  
                          _I2C1_BusCollisionISR 2CE2                                  __pcstackCOMMON 0077  
                            __end_of_CLOCK_init 2D3B                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK2 2DC1                                    __pidataBANK3 0002  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0077  
                                 __end_of_fputc 23D1                                   __end_of_fputs 2169  
                                 __end_of_putch 21C4                              _PWM1_LoadDutyValue 2FBC  
                                    ??_I2C1_ISR 0079                                ?_TMR2_Initialize 0077  
                              ?_PWM4_Initialize 0077                                   _DMX_interrupt 2299  
                          __end_of_BUTTONS_init 2420                          __end_of_PMD_Initialize 2D72  
                          __end_of_BUTTONS_task 1146                     PWM4_LoadDutyValue@dutyValue 00B9  
                           ?_PWM1_LoadDutyValue 00B9                                      _beatStrobe 0250  
                   __end_of_EUSART1_Receive_ISR 2299                               _thresholdExceeded 0140  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00D1  
                                       ??_fputc 003E                       __end_of_SYSTEM_Initialize 2119  
                                       ??_fputs 0044                                _beatColorCreator 1946  
                                       ??_putch 0039                                   _eusart1RxHead 0076  
                                 _eusart1RxTail 0159                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                       ?_HueToRGB 00A0  
                                    __pbssBANK4 0220                                      __pbssBANK5 02A0  
                                    __pbssBANK6 0320                                      __pbssBANK7 03A0  
               ??_EUSART1_SetRxInterruptHandler 0022                     ??_beatBrightnessCalculation 00BD  
                       __size_of_getCurrentMenu 0007                                   _BEAT_detected 2D72  
                                 _beatMixedTask 02B3                                   _HSLToRGB$4180 00C4  
                                 _HSLToRGB$4181 00CC                                   _HSLToRGB$4182 00D0  
                                    ??_LED_init 0020                                   _HSLToRGB$4183 00C8  
                                    ??_DMX_init 0039                            ??_PWM1_LoadDutyValue 0070  
                                    ??_HSLToRGB 00C3                               __end_of__Umul8_16 20AB  
                         ?_I2C1_BusCollisionISR 0077                 __end_of_EUSART1_SetErrorHandler 2D4D  
                                    __pmaintext 2313                                         ?___flge 0062  
                                       ?___bmul 0020                                         ?___fleq 0020  
              __end_of_TMR0_SetInterruptHandler 2D32                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0034  
                       __end_of_ADCC_Initialize 2140                          ??_LED_task_BEAT_STROBE 00D9  
                                    __pintentry 0004                                 _I2C1_Initialize 2F61  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                           __size_of_CONTROL_BEAT 0078  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0077  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
              LED_task_ANIMATION@animationColor 00EB                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 2D0E           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 2D05                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00A0                                 ?_PMD_Initialize 0077  
                         _animationModeSelected 0166                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 2D56         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 2D4D                                         u1500_20 003F  
                                       u1500_21 003E                                         u1501_20 0043  
                                       u1501_21 0042                                         u1440_20 228E  
                                       u1440_21 228D                                         u1441_20 2DF4  
                                       u1441_21 2DF3                                         u1346_20 2F0A  
                                       u1450_20 08C8                                         u1442_20 0809  
                                       u1346_21 2F09                                         u1450_21 08C7  
                                       u1442_21 0808                                         u1451_20 08D2  
                                       u1443_20 081C                                         u1451_21 08D1  
                                       u1443_21 081B                                         u1452_20 08E6  
                                       u1444_20 083A                                         u1452_21 08E5  
                                       u1444_21 0839                                         i1l12031 2CED  
                                       u1453_20 08F0                                         u1445_20 0845  
                                       i1l12033 2CE9                                         i1l12041 2F5F  
                                       u1453_21 08EF                                         u1445_21 0844  
                                       i1l12043 2E0B                                         i1l12035 2F46  
                                       i1l12045 2E10                                         i1l12037 2F48  
                                       i1l12047 2E16                                         i1l12039 2F53  
                                       i1l12071 2CF1                                         u1438_20 2267  
                                       u1454_20 0909                                         u1446_20 0856  
                                       u1438_21 2266                                         u1454_21 0908  
                                       i1l12401 085B                                         u1446_21 0855  
                                       i1l12315 2CE5                                         i1l12411 087E  
                                       i1l12403 0860                                         i1l12341 225C  
                                       i1l12501 094F                                         i1l12413 0883  
                                       i1l12405 086A                                         i1l12351 2278  
                                       i1l12343 2262                                         i1l12423 08A1  
                                       i1l12415 0889                                         i1l12407 086F  
                                       u1439_20 2278                                         u1383_20 2F53  
                                       u1455_20 0936                                         u1447_20 086F  
                                       i1l12513 2DDC                                         i1l12353 227E  
                                       u1439_21 2277                                         i1l12345 2267  
                                       u1383_21 2F52                                         u1455_21 0935  
                                       i1l12425 08A6                                         i1l12417 089D  
                                       i1l12409 0874                                         u1447_21 086E  
                                       i1l12505 0954                                         i1l12361 2DEB  
                                       i1l12515 2DDE                                         i1l11731 2F00  
                                       i1l12355 2284                                         i1l12347 226D  
                                       i1l12451 08D2                                         i1l12427 08AE  
                                       i1l12443 08C0                                         i1l12419 089E  
                                       i1l12371 0809                                         i1l12363 2DED  
                                       i1l12517 2DE5                                         i1l11733 2F04  
                                       i1l12357 228E                                         i1l12349 2273  
                                       i1l12461 08EA                                         i1l12453 08D7  
                                       i1l12445 08C3                                         i1l12429 08B7  
                                       i1l12381 081C                                         i1l12373 080A  
                                       i1l12365 2DF4                                         i1l11735 2F0A  
                                       i1l12359 2295                                         i1l12367 2CE2  
                                       i1l13239 095D                                         i1l12471 0909  
                                       i1l12463 08F0                                         i1l12455 08D9  
                                       i1l12447 08C8                                         i1l12391 083E  
                                       i1l12383 0820                                         i1l12375 080C  
                                       u1456_20 2DE5                                         u1384_20 2E16  
                                       u1448_20 087E                                         u1456_21 2DE4  
                                       i1l11737 2F0B                                         i1l11729 2EF6  
                                       u1384_21 2E15                                         i1l12481 0920  
                                       i1l12473 090E                                         i1l12457 08DE  
                                       u1448_21 087D                                         i1l12393 0845  
                                       i1l12385 0828                                         i1l12377 0816  
                                       i1l12369 0802                                         i1l12491 0938  
                                       i1l12483 0923                                         i1l12475 0912  
                                       i1l12459 08E6                                         i1l12467 08F8  
                                       i1l12395 0848                                         i1l12387 0834  
                                       i1l12493 0940                                         i1l12485 092C  
                                       i1l12477 0916                                         i1l12469 08FE  
                                       i1l12389 083A                                         i1l12495 0943  
                                       i1l12487 0930                                         i1l12479 091C  
                                       i1l12399 0856                                         u1449_20 08A6  
                                       i1l12497 0946                                         i1l12489 0936  
                                       u1449_21 08A5                                         i1l12499 094B  
                                       i1l12941 22A7                                         i1l12951 22D3  
                                       i1l12943 22AC                                         i1l12935 2299  
                                       u1490_20 22AC                                         i1l12945 22C4  
                                       u1490_21 22AB                                         i1l12937 229E  
                                       i1l12961 001B                                         i1l12953 0006  
                                       i1l12947 22C9                                         i1l12939 22A0  
                                       i1l12971 0037                                         i1l12963 001F  
                                       i1l12955 000B                                         i1l12949 22CE  
                                       i1l12973 003F                                         i1l12965 0027  
                                       i1l12957 000F                                         i1l12975 0043  
                                       i1l12967 002B                                         i1l12959 0017  
                                       u1491_20 000B                                         i1l12969 0033  
                                       u1491_21 000A                                         u1492_20 000F  
                                       u1492_21 000E                                         u1493_20 0017  
                                       u1493_21 0016                                         u1494_20 001B  
                                       u1494_21 001A                                         u1495_20 001F  
                                       u1495_21 001E                                         u1488_20 229E  
                                       u1496_20 0027                                         u1488_21 229D  
                                       u1496_21 0026                                         u1489_20 22A7  
                                       u1497_20 002B                                         u1489_21 22A6  
                                       u1497_21 002A                                         u1498_20 0033  
                                       u1498_21 0032                                         u1499_20 0037  
                                       u1499_21 0036                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00B2  
                                     _I2C1_Stop 2F45                                      _arrayIndex 01B6  
                                  _animationHue 01A0                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 161D  
                             _colorModeSelected 0145                                       ?_colorDec 0077  
                             __end_of_charTable 2860                             _CLOCK_timerCallback 2CF1  
                                     ?_colorInc 0077                            __end_of_LED_task_DMX 2690  
                                    ??_HueToRGB 006E                                  ?_BEAT_detected 0077  
                 I2C1_MasterTRBInsert@ptrb_list 0020                         __size_of_CONTROL_MANUAL 013F  
                            __size_of_writeData 001F                                   ??_address_dec 006F  
                              ?_CONTROLLER_init 0077                                   ??_address_inc 006F  
                              ?_CONTROLLER_task 0077                                      _enterState 014B  
                               BUTTONS_task@btn 0028                                    _CONTROL_BEAT 2708  
                        ?_I2C1_FunctionComplete 0077                                       _BEAT_init 2EC5  
                 __size_of_I2C1_MasterTRBInsert 005E                                       _BEAT_task 1D4F  
                    __size_of_ADCC_ThresholdISR 000F                                      _manualBlue 032B  
                            _p_i2c1_trb_current 013D              __end_of_TM1650_fastPrintNum_2digit 2708  
                    _TM1650_fastPrintNum_2digit 2690              __end_of_TM1650_fastPrintNum_3digit 1A7A  
                    _TM1650_fastPrintNum_3digit 19DD                                 __size_of___flge 008B  
                               __size_of___bmul 0016                                 __size_of___fleq 004F  
                                       ___fladd 0B71                                         ___fldiv 063B  
                                       ___awdiv 25CC                            ?_CLOCK_timerCallback 0077  
                                       ___awmod 24BE                                         ___flmul 0DA9  
                                       ___flsub 2000                                         ___fltol 2780  
                                       ___lwdiv 22D6                                         ___lwmod 1803  
                                     ?_vfprintf 0063                       _beatBrightnessCalculation 1838  
                                       _address 0162                      _animationBrightnessControl 0144  
                   __size_of_LED_task_BEAT_FADE 0001                                         __ptext1 2E6E  
                                       __ptext2 2EDD                                         __ptext3 20F4  
                                       __ptext4 2DCE                                         __ptext5 2E59  
                                       __ptext6 2D9E                                         __ptext7 2D93  
                                       __ptext8 2D88                                         __ptext9 2D7D  
                               __size_of_printf 0016                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 001A  
                                       _lastRun 0131                           _OSCILLATOR_Initialize 2D5F  
                                     _T2CONbits 028E                                    __size_of_pad 005C  
                                       _initial 01ED                                         _buttons 03C0  
                                    ??___xxtofl 0024                                ___awmod@dividend 002B  
                            _EUSART1_Initialize 2228                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 00ED                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 2CE9                                         _upState 0075  
                 ??_EUSART1_DefaultErrorHandler 0078                                         _startup 0167  
                    __size_of_SYSTEM_Initialize 0025                   LED_task_BEAT_STROBE@beatState 00DB  
                          I2C1_ISR@pi2c_buf_ptr 0153                                         clrloop0 2DAA  
                                    ??_colorDec 0020                                      ??_colorInc 0020  
                              _currentSelection 0149                            end_of_initialization 00B9  
                                     _T2RSTbits 0291                                       _GPIO_init 2DFA  
                           ?_EUSART1_Initialize 0077                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003D                                         init_ram 2DB5  
                   _EUSART1_OverrunErrorHandler 02EA                                         fputs@fp 0043  
                                       initloop 2DB6                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 2F7D                                  _DMX_getAddress 1800  
         __end_of_EUSART1_SetRxInterruptHandler 2D44          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 2D3B                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                   beatBrightnessCalculation@temp 00C2  
                             __end_of_vfpfcnvrt 1C89                           __size_of_BUTTONS_init 004F  
                                _animationColor 0220                           __size_of_BUTTONS_task 0111  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                                _animationSpeed 0164                             __end_of_address_dec 20CF  
                   __size_of_PWM4_LoadDutyValue 0022                             __end_of_address_inc 20F4  
                              ?_ADCC_Initialize 0077                                      ??_vfprintf 0066  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                             _lastBeatLedChange 012D                        _TMR0_SetInterruptHandler 2D29  
                   __end_of_LED_task_BEAT_MIXED 0802                      ??_LED_task_BEAT_CONTINUOUS 00E4  
                     __size_of_I2C1_MasterWrite 002D                               __size_of_I2C1_ISR 017F  
                      __size_of_LED_task_MANUAL 0014                               __end_of_writeData 2F9C  
                                   ___fladd@grs 003C                         ?_ADCC_SetUpperThreshold 0020  
                                 ??_CONTROL_DMX 00E2                                   ___xxtofl@sign 0028  
                                     _TRISAbits 0012                                       _TRISCbits 0014  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 2EF6  
             I2C1_ISR@i2c_10bit_address_restart 0151                                  _getCurrentMenu 2CFE  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0058                                    _BUTTONS_init 23D1  
                                  _BUTTONS_task 1035                          __end_of_DMX_getAddress 1803  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 2042  
          __size_of_EUSART1_DefaultErrorHandler 0004                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_init 001B                               __size_of_DMX_init 0014  
                             __size_of_HSLToRGB 02FF                        __end_of_beatColorCreator 19DD  
                ??_ADCC_DefaultInterruptHandler 0077                                  __end_of___flge 1946  
                                __end_of___bmul 2EAF                                  __end_of___fleq 246F  
                                 ??_TM1650_init 006F                                     vfpfcnvrt@ap 005B  
                                   vfpfcnvrt@fp 0062                         I2C1_MasterWrite@trBlock 01E1  
                             __size_of_TMR0_ISR 000F                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 2FDE                        __size_of_TM1650_setDigit 0013  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 2D17  
                  __size_of_TM1650_fastPrintNum 00C6                                  __end_of_printf 2EC5  
                         __size_of_LED_setColor 0171                                  __end_of_strlen 2F2A  
                                  _lastDetected 013F                           __size_of_LED_task_DMX 0064  
                           start_initialization 004E                                    _enterPressed 0147  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0015                             ?_PWM2_LoadDutyValue 00B9  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0036  
                                   __end_of_pad 256E                          __end_of_getCurrentMenu 2D05  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                              _animationSpeedCtrl 0341  
                                _beatBrightness 0168                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 2E83                             __end_of_CONTROL_DMX 1F13  
                       _animationBrightnessCtrl 0224                                  _CONTROL_MANUAL 136D  
                               ?_DMX_getAddress 0077                              ?_BUTTONS_isClicked 0077  
                             __size_of_HueToRGB 027F                                     _address_dec 20AB  
                                   _address_inc 20CF                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 0070  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0063  
                                      ??___flge 006A                                        ??___bmul 0021  
                                      ??___fleq 0028                     PWM2_LoadDutyValue@dutyValue 00B9  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 2EF6                                    _LED_setColor 14AC  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 2087  
                                   __pdataBANK2 015C                                     __pdataBANK3 01ED  
                                  _LED_task_DMX 262C                                   _CLOCK_getTime 2D20  
                                      ??_printf 006B                                      HSLToRGB@v1 00D4  
                                    HSLToRGB@v2 00DC                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 0158  
                        beatColorCreator@inBlue 00C4                                       ___fladd@a 002D  
                                     ___fladd@b 0029                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 2E83                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0070  
                                     ___flsub@a 0062                                       ___flsub@b 0066  
             _EUSART1_RxDefaultInterruptHandler 026C                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK2 0169                               _CONTROL_ANIMATION 1146  
            __size_of_beatBrightnessCalculation 0083                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 01E5  
                             __size_of___xxtofl 00AD                                 ?_getCurrentMenu 0077  
                     __end_of_BUTTONS_isClicked 2E99                       beatColorCreator@tempColor 00CD  
                            ?_CONTROL_ANIMATION 0077                               ??_LED_task_MANUAL 0070  
                        __end_of_CONTROL_MANUAL 14AC               LED_task_BEAT_CONTINUOUS@beatState 00E6  
                                     _beatMixed 022F                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 003D  
                             __size_of_colorDec 003F                               __size_of_colorInc 004F  
                                  _menuSelected 014A                                    _currentState 0070  
                                     _charTable 2800                             ??_CONTROL_ANIMATION 0169  
                         _TMR0_InterruptHandler 01EB                                       __pnvBANK3 01E9  
                                     __pnvBANK4 026A                                       __pnvBANK5 02EA  
                                     __pnvBANK6 0357                     __size_of_PWM1_LoadDutyValue 0022  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 1000  
                                     _animation 01CB                                        ?___fladd 0029  
                   ?_TM1650_fastPrintNum_2digit 0077                                        ?___fldiv 002E  
                   ?_TM1650_fastPrintNum_3digit 0036                                        ?___awdiv 0020  
                                     __ptext100 2CE1                         LED_task_ANIMATION@speed 00E5  
                                     __ptext101 0802                                       __ptext110 2EF6  
                                     __ptext102 2F45                                       __ptext111 2DDC  
                                     __ptext103 2E0B                                       __ptext112 2CDF  
                                     __ptext104 2CE2                                       __ptext113 2CE5  
                                     __ptext105 2299                                       __ptext106 225C  
                                     __ptext107 2CED                                       __ptext108 2CE0  
                                     __ptext109 2CE9                                        ?___awmod 0029  
                                      ?___flmul 0048                                        ?___flsub 0062  
                                      ?___fltol 00B0                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0802  
                 __size_of_LED_task_BEAT_STROBE 01E3                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 007E                                 writeData@status 0035  
                             __size_of_vfprintf 0031                                _I2C1_MasterWrite 2169  
                                      _BAUD1CON 011F                       __end_of_CONTROL_ANIMATION 1257  
                  __end_of_I2C1_MasterTRBInsert 25CC      __end_of_EUSART1_DefaultOverrunErrorHandler 2CF1  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0077  
           ?_EUSART1_DefaultOverrunErrorHandler 0077              _EUSART1_DefaultOverrunErrorHandler 2CED  
                          _EUSART1_ErrorHandler 0357                                       _downState 0074  
                                   _CONTROL_DMX 1E31                         _EUSART1_SetErrorHandler 2D44  
                                     _manualRed 02A8                               ??_TM1650_setDigit 0037  
                              ___lwdiv@quotient 0026               __end_of_beatBrightnessCalculation 18BB  
                                __size_of_fputc 0041                                        _T2CLKCON 0290  
                                     _menuState 014C                                  __size_of_fputs 0029  
                               ?_CONTROL_MANUAL 0077                                  __size_of_putch 002E  
      __end_of_I2C1_WaitForLastPacketToComplete 2CFE       __size_of_I2C1_WaitForLastPacketToComplete 0007  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0077  
              _I2C1_WaitForLastPacketToComplete 2CF7                          I2C1_MasterRead@trBlock 0266  
                             ??_TMR0_Initialize 0022                               ??_PWM2_Initialize 0020  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 2DA9                                        _PIE0bits 0716  
                                      _LED_init 2F2A                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _DMX_init 2E45  
                                      _HSLToRGB 00BD             __size_of_INTERRUPT_InterruptManager 0048  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 0160                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                             __CFG_BBSIZE$BB512 0000                                   _animationType 034C  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 2DEB                      __end_of_LED_task_BEAT_FADE 0801  
                                      _SSP1STAT 018F                                  _beatStrobeTask 02D4  
                      __size_of_CONTROLLER_init 01F0                        __size_of_CONTROLLER_task 0116  
                                   _TM1650_init 2E6E                                       _threshold 015E  
                                     _vfpfcnvrt 1BD7                    LED_task_ANIMATION@brightness 00E4  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 01BE  
                    __end_of_LED_task_ANIMATION 2000                              DMX_interrupt@dummy 007D  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 2F7D                      __size_of_BUTTONS_isClicked 0016  
                                    vfpfcnvrt@c 0061                                        _HueToRGB 03BC  
                                   _lastIncTime 0135                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 2CF7                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 1C89                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 2064                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0065                                      vfprintf@fp 0068  
                                   _manualColor 0125                                     _manualGreen 0336  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 0152  
                                   _manualWhite 0320                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 0238  
                              __size_of___fldiv 01B4                                __size_of___awdiv 0060  
                             ?_beatColorCreator 00C3                           beatColorCreator@inRed 00C8  
                              __size_of___awmod 0054                                __size_of___flmul 0257  
                              __size_of___flsub 0020                                __size_of___fltol 0080  
                         __end_of_DMX_interrupt 22D6                     __size_of_EUSART1_Initialize 0034  
                                    ?_vfpfcnvrt 005A                                __size_of___lwdiv 003D  
                              __size_of___lwmod 0035                           _beatColorCreator$4196 00C9  
              __end_of_I2C1_MasterWriteTRBBuild 2087                              ??_beatColorCreator 00C7  
                                      _beatFade 0245                              _PWM3_LoadDutyValue 2020  
                                      _beatCont 023A                                      _ANSELAbits 1F38  
                                      _beatHold 0146                                      _ANSELCbits 1F4E  
                          ?_TM1650_fastPrintNum 0036                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                      __size_of_CONTROL_ANIMATION 0111  
                           TM1650_enable@enable 0036             __end_of_EUSART1_DefaultErrorHandler 2CED  
                   _EUSART1_DefaultErrorHandler 2CE9                                     _currentMenu 0072  
                                   _currentTime 0139                                      _CLOCK_init 2D32  
                                      ___xxtofl 1A7A                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0027                                     _menuPressed 0148  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 015A  
                        LED_task_ANIMATION@mode 00EA                                 ___lwdiv@counter 0025  
                                      _detected 0141                                      ?_writeData 0030  
                                      __ptext10 2D68                                        __ptext11 1000  
                                      __ptext20 2E45                                        __ptext12 2D5F  
                                      __ptext21 1C89                                        __ptext13 2F61  
                                      __ptext30 2CFE                                        __ptext22 2D3B  
                                      __ptext14 2228                                        __ptext31 2E31  
                                      __ptext23 1257                                        __ptext15 2D56  
                                      __ptext40 1946                                        __ptext32 20CF  
                                      __ptext24 2708                                        __ptext16 2D4D  
                                      __ptext41 1838                                        __ptext33 20AB  
                                      __ptext25 1146                                        __ptext17 2D44  
                                      __ptext50 2512                                        __ptext42 0801  
                                      __ptext34 19DD                                        __ptext26 1E31  
                                      __ptext18 2119                                        __ptext51 2F10  
                                      __ptext43 0800                                        __ptext35 1803  
                                      __ptext27 136D                                        __ptext19 2F2A  
                                      __ptext60 256E                                        __ptext52 2140  
                                      __ptext44 1B27                                        __ptext36 262C  
                                      __ptext28 246F                                        __ptext61 2CF7  
                                      __ptext53 2390                                        __ptext45 2D72  
                                      __ptext37 1800                                        __ptext29 2351  
                                      __ptext70 2FBC                                        __ptext62 24BE  
                                      __ptext54 2196                                        __ptext46 2EAF  
                                      __ptext38 07EF                                        __ptext71 00BD  
                                      __ptext63 25CC                                        __ptext55 2E1E  
                                      __ptext47 21C4                                        __ptext39 161D  
                                      __ptext80 2087                                        __ptext72 1A7A  
                                      __ptext64 1F13                                        __ptext56 2690  
                                      __ptext48 1BD7                                        __ptext81 18BB  
                                      __ptext73 2780                                        __ptext65 2E99  
                                      __ptext57 2F7D                                        __ptext49 21F5  
                                      __ptext90 1D4F                                        __ptext82 2E83  
                                      __ptext74 2420                                        __ptext66 14AC  
                                      __ptext58 2169                             ?_PWM3_LoadDutyValue 00B9  
                                      __ptext91 22D6                                        __ptext83 0981  
                                      __ptext75 063B                                        __ptext67 2042  
                                      __ptext59 2064                                        __ptext92 2D20  
                                      __ptext84 2D32                                        __ptext76 03BC  
                                      __ptext68 2020                                        __ptext93 2EC5  
                                      __ptext85 2D29                                        __ptext77 2000  
                                      __ptext69 2FDE                                        __ptext94 2D17  
                                      __ptext86 1035                                        __ptext78 0B71  
                                      __ptext95 2D0E                                        __ptext87 23D1  
                                      __ptext79 0DA9                                        __ptext96 2D05  
                                      __ptext88 2F9C                                        __ptext89 2DFA  
                                      __ptext98 2DEB                                        __ptext99 2CF1  
                  __size_of_LED_task_BEAT_MIXED 0001                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                                        _colorDec 2351  
                                      _colorInc 246F                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 2D7D                                        _dmx_task 02DF  
                                      _lastBeat 0133                                        _lastTime 013B  
             __size_of_LED_task_BEAT_CONTINUOUS 00B0                                 LED_task_DMX@dmx 00DE  
                     ?_LED_task_BEAT_CONTINUOUS 0077                                   __size_of_ctoa 0033  
                                 __size_of_main 003E                                   __size_of_init 0020  
                                  ?_address_dec 0077            __end_of_TMR0_DefaultInterruptHandler 2CE2  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 2CE1  
                                  ?_address_inc 0077                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 256E                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                            ??_PWM3_LoadDutyValue 0070  
                  __end_of_ADCC_StartConversion 2D20                                        int$flags 007E  
                                      _position 0142                         __size_of_BUTTONS_isHeld 0011  
                                      _vfprintf 21C4              __end_of_INTERRUPT_InterruptManager 004C  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00A0  
                        __size_of_TM1650_enable 0019                     _EUSART1_FramingErrorHandler 026A  
                           _EUSART1_Receive_ISR 225C                                 _LED_task_MANUAL 2E31  
                         ??_TM1650_fastPrintNum 0038                                ??_getCurrentMenu 0020  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0020  
                             ??_CONTROLLER_task 016B                                        init@port 0020  
                                 _HueToRGB$4179 00AC                                  __pstringtext10 3043  
                                __pstringtext11 3049                                  __pstringtext20 307E  
                                __pstringtext12 304F                                  __pstringtext21 3082  
                                __pstringtext13 3055                                  __pstringtext30 30A3  
                                __pstringtext22 3086                                  __pstringtext14 305B  
                                __pstringtext31 0000                                  __pstringtext23 308A  
                                __pstringtext15 3061                                  __pstringtext24 308E  
                                __pstringtext16 3067                                  __pstringtext25 3092  
                                __pstringtext17 306D                                  __pstringtext26 3096  
                                __pstringtext18 3073                                  __pstringtext27 309A  
                                __pstringtext19 3079                                  __pstringtext28 309D  
                                __pstringtext29 30A0            __end_of_ADCC_DefaultInterruptHandler 2CE0  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 2CDF  
                                      intlevel1 0000                                  _thresholdCount 01B8  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 0030  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 2196                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0013          __end_of_EUSART1_SetOverrunErrorHandler 2D5F  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 2D56  
                 __end_of_I2C1_FunctionComplete 2E1E                                   ?_CONTROL_BEAT 0077  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 2D7D  
                 ?_TMR0_DefaultInterruptHandler 0077                     __size_of_PWM2_LoadDutyValue 0022  
                        TM1650_fastPrintNum@num 0036                               _lastLedActiveTime 012F  
                                      printf@ap 006E  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 00B9                                 _TM1650_setDigit 2E1E  
                                   ??_vfpfcnvrt 005C                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 0157                                   __pstringtext1 2800  
                                 __pstringtext2 3000                                   __pstringtext3 300A  
                                 __pstringtext4 3013                                   __pstringtext5 301C  
                                 __pstringtext6 3025                                   __pstringtext7 302D  
                                 __pstringtext8 3035                                   __pstringtext9 303C  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 2E59  
                               _PWM2_Initialize 2D88                                ??_CONTROL_MANUAL 00D9  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0077  
                                  _previousTask 0137                        _I2C1_MasterWriteTRBBuild 2064  
                                   ??_writeData 0031                                      _TX1STAbits 011E  
                                 ___fladd@signs 0039                    __end_of_LED_task_BEAT_STROBE 1800  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0078  
                __end_of_PIN_MANAGER_Initialize 1035                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 2EDD                                    ___fladd@aexp 003A  
                                  ___fladd@bexp 003B                              __size_of_I2C1_Stop 001C  
                 ?_ADCC_DefaultInterruptHandler 0077                      __end_of_PWM1_LoadDutyValue 2FDE  
                          __Umul8_16@multiplier 0028                                  ??_CONTROL_BEAT 00E7  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 2D93  
                             __Umul8_16@product 0024  
