

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 28 00:14:24 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	cinit,global,class=CODE,merge=1,delta=2
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    36                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,merge=1,delta=2
    40                           	psect	text4,local,class=CODE,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,merge=1,delta=2
    47                           	psect	text11,local,class=CODE,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,merge=1,delta=2
    50                           	psect	text14,local,class=CODE,merge=1,delta=2
    51                           	psect	text15,local,class=CODE,merge=1,delta=2
    52                           	psect	text16,local,class=CODE,merge=1,delta=2
    53                           	psect	text17,local,class=CODE,merge=1,delta=2
    54                           	psect	text18,local,class=CODE,merge=1,delta=2
    55                           	psect	text19,local,class=CODE,merge=1,delta=2
    56                           	psect	text20,local,class=CODE,merge=1,delta=2
    57                           	psect	text21,local,class=CODE,merge=1,delta=2
    58                           	psect	text22,local,class=CODE,merge=1,delta=2
    59                           	psect	text23,local,class=CODE,merge=1,delta=2
    60                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text29,local,class=CODE,merge=1,delta=2
    66                           	psect	text30,local,class=CODE,merge=1,delta=2
    67                           	psect	text31,local,class=CODE,merge=1,delta=2
    68                           	psect	text32,local,class=CODE,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,merge=1,delta=2
    74                           	psect	text38,local,class=CODE,merge=1,delta=2
    75                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text40,local,class=CODE,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,merge=1,delta=2
    80                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text47,local,class=CODE,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,merge=1,delta=2
    88                           	psect	text52,local,class=CODE,merge=1,delta=2
    89                           	psect	text53,local,class=CODE,merge=1,delta=2
    90                           	psect	text54,local,class=CODE,merge=1,delta=2
    91                           	psect	text55,local,class=CODE,merge=1,delta=2
    92                           	psect	text56,local,class=CODE,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text60,local,class=CODE,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text71,local,class=CODE,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,merge=1,delta=2
   109                           	psect	text73,local,class=CODE,merge=1,delta=2
   110                           	psect	text74,local,class=CODE,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,merge=1,delta=2
   112                           	psect	intentry,global,class=CODE,delta=2
   113                           	psect	text77,local,class=CODE,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,merge=1,delta=2
   128                           	psect	text92,local,class=CODE,merge=1,delta=2
   129                           	dabs	1,0xCA0,32
   130                           	dabs	1,0xC20,80
   131                           	dabs	1,0xBA0,80
   132                           	dabs	1,0xB20,80
   133                           	dabs	1,0xAA0,80
   134                           	dabs	1,0xA20,80
   135                           	dabs	1,0x9A0,80
   136                           	dabs	1,0x920,80
   137                           	dabs	1,0x8A0,80
   138                           	dabs	1,0x820,80
   139                           	dabs	1,0x7A0,80
   140                           	dabs	1,0x720,80
   141                           	dabs	1,0x6A0,80
   142                           	dabs	1,0x64E,34
   143                           	dabs	1,0x23EE,0,_dmxArray
   144                           	dabs	1,0x7E,2
   145  0000                     
   146                           ; Version 2.05
   147                           ; Generated 20/12/2018 GMT
   148                           ; 
   149                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   150                           ; All rights reserved.
   151                           ; 
   152                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   153                           ; 
   154                           ; Redistribution and use in source and binary forms, with or without modification, are
   155                           ; permitted provided that the following conditions are met:
   156                           ; 
   157                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   158                           ;        conditions and the following disclaimer.
   159                           ; 
   160                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   161                           ;        of conditions and the following disclaimer in the documentation and/or other
   162                           ;        materials provided with the distribution.
   163                           ; 
   164                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   165                           ;        software without specific prior written permission.
   166                           ; 
   167                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   168                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   169                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   170                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   171                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   172                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   173                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   174                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   175                           ; 
   176                           ; 
   177                           ; Code-generator required, PIC16F18446 Definitions
   178                           ; 
   179                           ; SFR Addresses
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  008C                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  010F                     	;# 
   235  0110                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  0119                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011A                     	;# 
   249  011A                     	;# 
   250  011B                     	;# 
   251  011B                     	;# 
   252  011B                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011C                     	;# 
   256  011C                     	;# 
   257  011C                     	;# 
   258  011D                     	;# 
   259  011D                     	;# 
   260  011D                     	;# 
   261  011E                     	;# 
   262  011E                     	;# 
   263  011E                     	;# 
   264  011F                     	;# 
   265  011F                     	;# 
   266  011F                     	;# 
   267  011F                     	;# 
   268  011F                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  018E                     	;# 
   272  018F                     	;# 
   273  0190                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0196                     	;# 
   277  0197                     	;# 
   278  0198                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  020C                     	;# 
   284  020D                     	;# 
   285  020E                     	;# 
   286  020E                     	;# 
   287  020F                     	;# 
   288  020F                     	;# 
   289  0210                     	;# 
   290  0210                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0218                     	;# 
   304  0219                     	;# 
   305  021A                     	;# 
   306  021A                     	;# 
   307  021B                     	;# 
   308  021B                     	;# 
   309  021C                     	;# 
   310  021C                     	;# 
   311  021D                     	;# 
   312  021D                     	;# 
   313  021E                     	;# 
   314  021F                     	;# 
   315  028C                     	;# 
   316  028C                     	;# 
   317  028D                     	;# 
   318  028D                     	;# 
   319  028E                     	;# 
   320  028F                     	;# 
   321  0290                     	;# 
   322  0291                     	;# 
   323  0292                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0293                     	;# 
   327  0294                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0297                     	;# 
   331  0298                     	;# 
   332  0298                     	;# 
   333  0299                     	;# 
   334  0299                     	;# 
   335  029A                     	;# 
   336  029B                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  029F                     	;# 
   340  030C                     	;# 
   341  030C                     	;# 
   342  030D                     	;# 
   343  030E                     	;# 
   344  030F                     	;# 
   345  0310                     	;# 
   346  0310                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0314                     	;# 
   351  0314                     	;# 
   352  0315                     	;# 
   353  0316                     	;# 
   354  0317                     	;# 
   355  0318                     	;# 
   356  0318                     	;# 
   357  0319                     	;# 
   358  031A                     	;# 
   359  031B                     	;# 
   360  038C                     	;# 
   361  038C                     	;# 
   362  038D                     	;# 
   363  038E                     	;# 
   364  0390                     	;# 
   365  0390                     	;# 
   366  0391                     	;# 
   367  0392                     	;# 
   368  048C                     	;# 
   369  048C                     	;# 
   370  048D                     	;# 
   371  048E                     	;# 
   372  048F                     	;# 
   373  048F                     	;# 
   374  0490                     	;# 
   375  0491                     	;# 
   376  0492                     	;# 
   377  0492                     	;# 
   378  0493                     	;# 
   379  0494                     	;# 
   380  0495                     	;# 
   381  0495                     	;# 
   382  0496                     	;# 
   383  0497                     	;# 
   384  0498                     	;# 
   385  0499                     	;# 
   386  049A                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  058C                     	;# 
   391  058C                     	;# 
   392  058D                     	;# 
   393  058E                     	;# 
   394  058F                     	;# 
   395  058F                     	;# 
   396  0590                     	;# 
   397  0591                     	;# 
   398  0592                     	;# 
   399  0593                     	;# 
   400  059C                     	;# 
   401  059C                     	;# 
   402  059D                     	;# 
   403  059D                     	;# 
   404  059E                     	;# 
   405  059F                     	;# 
   406  060C                     	;# 
   407  060C                     	;# 
   408  060D                     	;# 
   409  060D                     	;# 
   410  060E                     	;# 
   411  060F                     	;# 
   412  0610                     	;# 
   413  0611                     	;# 
   414  0612                     	;# 
   415  0613                     	;# 
   416  0614                     	;# 
   417  0616                     	;# 
   418  0616                     	;# 
   419  0617                     	;# 
   420  0617                     	;# 
   421  0618                     	;# 
   422  0619                     	;# 
   423  061A                     	;# 
   424  061B                     	;# 
   425  061C                     	;# 
   426  061D                     	;# 
   427  061E                     	;# 
   428  070C                     	;# 
   429  070D                     	;# 
   430  070E                     	;# 
   431  070F                     	;# 
   432  0710                     	;# 
   433  0711                     	;# 
   434  0712                     	;# 
   435  0713                     	;# 
   436  0714                     	;# 
   437  0716                     	;# 
   438  0717                     	;# 
   439  0718                     	;# 
   440  0719                     	;# 
   441  071A                     	;# 
   442  071B                     	;# 
   443  071C                     	;# 
   444  071D                     	;# 
   445  071E                     	;# 
   446  0796                     	;# 
   447  0797                     	;# 
   448  0798                     	;# 
   449  0799                     	;# 
   450  079A                     	;# 
   451  079B                     	;# 
   452  079C                     	;# 
   453  079D                     	;# 
   454  080C                     	;# 
   455  080D                     	;# 
   456  080E                     	;# 
   457  080F                     	;# 
   458  0810                     	;# 
   459  0811                     	;# 
   460  0812                     	;# 
   461  0813                     	;# 
   462  0814                     	;# 
   463  081A                     	;# 
   464  081A                     	;# 
   465  081B                     	;# 
   466  081C                     	;# 
   467  081C                     	;# 
   468  081D                     	;# 
   469  081E                     	;# 
   470  081F                     	;# 
   471  088C                     	;# 
   472  088D                     	;# 
   473  088E                     	;# 
   474  088F                     	;# 
   475  0890                     	;# 
   476  0891                     	;# 
   477  0892                     	;# 
   478  0893                     	;# 
   479  0895                     	;# 
   480  0896                     	;# 
   481  0897                     	;# 
   482  0898                     	;# 
   483  0899                     	;# 
   484  089A                     	;# 
   485  089B                     	;# 
   486  090C                     	;# 
   487  090E                     	;# 
   488  090F                     	;# 
   489  091F                     	;# 
   490  098F                     	;# 
   491  098F                     	;# 
   492  0990                     	;# 
   493  0991                     	;# 
   494  0992                     	;# 
   495  0993                     	;# 
   496  0994                     	;# 
   497  0995                     	;# 
   498  0996                     	;# 
   499  0997                     	;# 
   500  1E0F                     	;# 
   501  1E10                     	;# 
   502  1E11                     	;# 
   503  1E12                     	;# 
   504  1E13                     	;# 
   505  1E14                     	;# 
   506  1E15                     	;# 
   507  1E16                     	;# 
   508  1E17                     	;# 
   509  1E18                     	;# 
   510  1E19                     	;# 
   511  1E1A                     	;# 
   512  1E1B                     	;# 
   513  1E1C                     	;# 
   514  1E1D                     	;# 
   515  1E1E                     	;# 
   516  1E1F                     	;# 
   517  1E20                     	;# 
   518  1E21                     	;# 
   519  1E22                     	;# 
   520  1E23                     	;# 
   521  1E24                     	;# 
   522  1E25                     	;# 
   523  1E26                     	;# 
   524  1E27                     	;# 
   525  1E28                     	;# 
   526  1E29                     	;# 
   527  1E2A                     	;# 
   528  1E2B                     	;# 
   529  1E2C                     	;# 
   530  1E2D                     	;# 
   531  1E2E                     	;# 
   532  1E2F                     	;# 
   533  1E30                     	;# 
   534  1E31                     	;# 
   535  1E32                     	;# 
   536  1E33                     	;# 
   537  1E34                     	;# 
   538  1E35                     	;# 
   539  1E36                     	;# 
   540  1E37                     	;# 
   541  1E8F                     	;# 
   542  1E90                     	;# 
   543  1E91                     	;# 
   544  1E92                     	;# 
   545  1E93                     	;# 
   546  1E94                     	;# 
   547  1E95                     	;# 
   548  1E96                     	;# 
   549  1E97                     	;# 
   550  1E9C                     	;# 
   551  1E9D                     	;# 
   552  1E9E                     	;# 
   553  1EA1                     	;# 
   554  1EA2                     	;# 
   555  1EA3                     	;# 
   556  1EA4                     	;# 
   557  1EA9                     	;# 
   558  1EAA                     	;# 
   559  1EB1                     	;# 
   560  1EB2                     	;# 
   561  1EB8                     	;# 
   562  1EB9                     	;# 
   563  1EBA                     	;# 
   564  1EBB                     	;# 
   565  1EBC                     	;# 
   566  1EBD                     	;# 
   567  1EBE                     	;# 
   568  1EC3                     	;# 
   569  1EC5                     	;# 
   570  1EC6                     	;# 
   571  1EC7                     	;# 
   572  1EC8                     	;# 
   573  1EC9                     	;# 
   574  1ECA                     	;# 
   575  1ECB                     	;# 
   576  1ECB                     	;# 
   577  1ECB                     	;# 
   578  1ECC                     	;# 
   579  1ECC                     	;# 
   580  1ECC                     	;# 
   581  1F10                     	;# 
   582  1F11                     	;# 
   583  1F12                     	;# 
   584  1F14                     	;# 
   585  1F15                     	;# 
   586  1F1C                     	;# 
   587  1F1D                     	;# 
   588  1F1E                     	;# 
   589  1F1F                     	;# 
   590  1F20                     	;# 
   591  1F21                     	;# 
   592  1F22                     	;# 
   593  1F23                     	;# 
   594  1F24                     	;# 
   595  1F25                     	;# 
   596  1F26                     	;# 
   597  1F27                     	;# 
   598  1F38                     	;# 
   599  1F39                     	;# 
   600  1F3A                     	;# 
   601  1F3B                     	;# 
   602  1F3C                     	;# 
   603  1F3D                     	;# 
   604  1F3E                     	;# 
   605  1F3F                     	;# 
   606  1F43                     	;# 
   607  1F44                     	;# 
   608  1F45                     	;# 
   609  1F46                     	;# 
   610  1F47                     	;# 
   611  1F48                     	;# 
   612  1F49                     	;# 
   613  1F4A                     	;# 
   614  1F4E                     	;# 
   615  1F4F                     	;# 
   616  1F50                     	;# 
   617  1F51                     	;# 
   618  1F52                     	;# 
   619  1F53                     	;# 
   620  1F54                     	;# 
   621  1F55                     	;# 
   622  1FE4                     	;# 
   623  1FE5                     	;# 
   624  1FE6                     	;# 
   625  1FE7                     	;# 
   626  1FE8                     	;# 
   627  1FE8                     	;# 
   628  1FE9                     	;# 
   629  1FEA                     	;# 
   630  1FEB                     	;# 
   631  1FED                     	;# 
   632  1FEE                     	;# 
   633  1FEF                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  008C                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008E                     	;# 
   660  008F                     	;# 
   661  0090                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0092                     	;# 
   665  0092                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0094                     	;# 
   669  0095                     	;# 
   670  0096                     	;# 
   671  0096                     	;# 
   672  0097                     	;# 
   673  0098                     	;# 
   674  0099                     	;# 
   675  009A                     	;# 
   676  009B                     	;# 
   677  009B                     	;# 
   678  009C                     	;# 
   679  009D                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  009F                     	;# 
   683  010C                     	;# 
   684  010C                     	;# 
   685  010D                     	;# 
   686  010E                     	;# 
   687  010F                     	;# 
   688  010F                     	;# 
   689  0110                     	;# 
   690  0111                     	;# 
   691  0112                     	;# 
   692  0113                     	;# 
   693  0114                     	;# 
   694  0115                     	;# 
   695  0116                     	;# 
   696  0117                     	;# 
   697  0118                     	;# 
   698  0119                     	;# 
   699  0119                     	;# 
   700  0119                     	;# 
   701  011A                     	;# 
   702  011A                     	;# 
   703  011A                     	;# 
   704  011B                     	;# 
   705  011B                     	;# 
   706  011B                     	;# 
   707  011B                     	;# 
   708  011B                     	;# 
   709  011C                     	;# 
   710  011C                     	;# 
   711  011C                     	;# 
   712  011D                     	;# 
   713  011D                     	;# 
   714  011D                     	;# 
   715  011E                     	;# 
   716  011E                     	;# 
   717  011E                     	;# 
   718  011F                     	;# 
   719  011F                     	;# 
   720  011F                     	;# 
   721  011F                     	;# 
   722  011F                     	;# 
   723  018C                     	;# 
   724  018D                     	;# 
   725  018E                     	;# 
   726  018F                     	;# 
   727  0190                     	;# 
   728  0191                     	;# 
   729  0192                     	;# 
   730  0196                     	;# 
   731  0197                     	;# 
   732  0198                     	;# 
   733  0199                     	;# 
   734  019A                     	;# 
   735  019B                     	;# 
   736  019C                     	;# 
   737  020C                     	;# 
   738  020D                     	;# 
   739  020E                     	;# 
   740  020E                     	;# 
   741  020F                     	;# 
   742  020F                     	;# 
   743  0210                     	;# 
   744  0210                     	;# 
   745  0211                     	;# 
   746  0211                     	;# 
   747  0212                     	;# 
   748  0213                     	;# 
   749  0214                     	;# 
   750  0214                     	;# 
   751  0215                     	;# 
   752  0215                     	;# 
   753  0216                     	;# 
   754  0216                     	;# 
   755  0217                     	;# 
   756  0217                     	;# 
   757  0218                     	;# 
   758  0219                     	;# 
   759  021A                     	;# 
   760  021A                     	;# 
   761  021B                     	;# 
   762  021B                     	;# 
   763  021C                     	;# 
   764  021C                     	;# 
   765  021D                     	;# 
   766  021D                     	;# 
   767  021E                     	;# 
   768  021F                     	;# 
   769  028C                     	;# 
   770  028C                     	;# 
   771  028D                     	;# 
   772  028D                     	;# 
   773  028E                     	;# 
   774  028F                     	;# 
   775  0290                     	;# 
   776  0291                     	;# 
   777  0292                     	;# 
   778  0292                     	;# 
   779  0293                     	;# 
   780  0293                     	;# 
   781  0294                     	;# 
   782  0295                     	;# 
   783  0296                     	;# 
   784  0297                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029B                     	;# 
   791  029C                     	;# 
   792  029D                     	;# 
   793  029F                     	;# 
   794  030C                     	;# 
   795  030C                     	;# 
   796  030D                     	;# 
   797  030E                     	;# 
   798  030F                     	;# 
   799  0310                     	;# 
   800  0310                     	;# 
   801  0311                     	;# 
   802  0312                     	;# 
   803  0313                     	;# 
   804  0314                     	;# 
   805  0314                     	;# 
   806  0315                     	;# 
   807  0316                     	;# 
   808  0317                     	;# 
   809  0318                     	;# 
   810  0318                     	;# 
   811  0319                     	;# 
   812  031A                     	;# 
   813  031B                     	;# 
   814  038C                     	;# 
   815  038C                     	;# 
   816  038D                     	;# 
   817  038E                     	;# 
   818  0390                     	;# 
   819  0390                     	;# 
   820  0391                     	;# 
   821  0392                     	;# 
   822  048C                     	;# 
   823  048C                     	;# 
   824  048D                     	;# 
   825  048E                     	;# 
   826  048F                     	;# 
   827  048F                     	;# 
   828  0490                     	;# 
   829  0491                     	;# 
   830  0492                     	;# 
   831  0492                     	;# 
   832  0493                     	;# 
   833  0494                     	;# 
   834  0495                     	;# 
   835  0495                     	;# 
   836  0496                     	;# 
   837  0497                     	;# 
   838  0498                     	;# 
   839  0499                     	;# 
   840  049A                     	;# 
   841  049B                     	;# 
   842  049C                     	;# 
   843  049D                     	;# 
   844  058C                     	;# 
   845  058C                     	;# 
   846  058D                     	;# 
   847  058E                     	;# 
   848  058F                     	;# 
   849  058F                     	;# 
   850  0590                     	;# 
   851  0591                     	;# 
   852  0592                     	;# 
   853  0593                     	;# 
   854  059C                     	;# 
   855  059C                     	;# 
   856  059D                     	;# 
   857  059D                     	;# 
   858  059E                     	;# 
   859  059F                     	;# 
   860  060C                     	;# 
   861  060C                     	;# 
   862  060D                     	;# 
   863  060D                     	;# 
   864  060E                     	;# 
   865  060F                     	;# 
   866  0610                     	;# 
   867  0611                     	;# 
   868  0612                     	;# 
   869  0613                     	;# 
   870  0614                     	;# 
   871  0616                     	;# 
   872  0616                     	;# 
   873  0617                     	;# 
   874  0617                     	;# 
   875  0618                     	;# 
   876  0619                     	;# 
   877  061A                     	;# 
   878  061B                     	;# 
   879  061C                     	;# 
   880  061D                     	;# 
   881  061E                     	;# 
   882  070C                     	;# 
   883  070D                     	;# 
   884  070E                     	;# 
   885  070F                     	;# 
   886  0710                     	;# 
   887  0711                     	;# 
   888  0712                     	;# 
   889  0713                     	;# 
   890  0714                     	;# 
   891  0716                     	;# 
   892  0717                     	;# 
   893  0718                     	;# 
   894  0719                     	;# 
   895  071A                     	;# 
   896  071B                     	;# 
   897  071C                     	;# 
   898  071D                     	;# 
   899  071E                     	;# 
   900  0796                     	;# 
   901  0797                     	;# 
   902  0798                     	;# 
   903  0799                     	;# 
   904  079A                     	;# 
   905  079B                     	;# 
   906  079C                     	;# 
   907  079D                     	;# 
   908  080C                     	;# 
   909  080D                     	;# 
   910  080E                     	;# 
   911  080F                     	;# 
   912  0810                     	;# 
   913  0811                     	;# 
   914  0812                     	;# 
   915  0813                     	;# 
   916  0814                     	;# 
   917  081A                     	;# 
   918  081A                     	;# 
   919  081B                     	;# 
   920  081C                     	;# 
   921  081C                     	;# 
   922  081D                     	;# 
   923  081E                     	;# 
   924  081F                     	;# 
   925  088C                     	;# 
   926  088D                     	;# 
   927  088E                     	;# 
   928  088F                     	;# 
   929  0890                     	;# 
   930  0891                     	;# 
   931  0892                     	;# 
   932  0893                     	;# 
   933  0895                     	;# 
   934  0896                     	;# 
   935  0897                     	;# 
   936  0898                     	;# 
   937  0899                     	;# 
   938  089A                     	;# 
   939  089B                     	;# 
   940  090C                     	;# 
   941  090E                     	;# 
   942  090F                     	;# 
   943  091F                     	;# 
   944  098F                     	;# 
   945  098F                     	;# 
   946  0990                     	;# 
   947  0991                     	;# 
   948  0992                     	;# 
   949  0993                     	;# 
   950  0994                     	;# 
   951  0995                     	;# 
   952  0996                     	;# 
   953  0997                     	;# 
   954  1E0F                     	;# 
   955  1E10                     	;# 
   956  1E11                     	;# 
   957  1E12                     	;# 
   958  1E13                     	;# 
   959  1E14                     	;# 
   960  1E15                     	;# 
   961  1E16                     	;# 
   962  1E17                     	;# 
   963  1E18                     	;# 
   964  1E19                     	;# 
   965  1E1A                     	;# 
   966  1E1B                     	;# 
   967  1E1C                     	;# 
   968  1E1D                     	;# 
   969  1E1E                     	;# 
   970  1E1F                     	;# 
   971  1E20                     	;# 
   972  1E21                     	;# 
   973  1E22                     	;# 
   974  1E23                     	;# 
   975  1E24                     	;# 
   976  1E25                     	;# 
   977  1E26                     	;# 
   978  1E27                     	;# 
   979  1E28                     	;# 
   980  1E29                     	;# 
   981  1E2A                     	;# 
   982  1E2B                     	;# 
   983  1E2C                     	;# 
   984  1E2D                     	;# 
   985  1E2E                     	;# 
   986  1E2F                     	;# 
   987  1E30                     	;# 
   988  1E31                     	;# 
   989  1E32                     	;# 
   990  1E33                     	;# 
   991  1E34                     	;# 
   992  1E35                     	;# 
   993  1E36                     	;# 
   994  1E37                     	;# 
   995  1E8F                     	;# 
   996  1E90                     	;# 
   997  1E91                     	;# 
   998  1E92                     	;# 
   999  1E93                     	;# 
  1000  1E94                     	;# 
  1001  1E95                     	;# 
  1002  1E96                     	;# 
  1003  1E97                     	;# 
  1004  1E9C                     	;# 
  1005  1E9D                     	;# 
  1006  1E9E                     	;# 
  1007  1EA1                     	;# 
  1008  1EA2                     	;# 
  1009  1EA3                     	;# 
  1010  1EA4                     	;# 
  1011  1EA9                     	;# 
  1012  1EAA                     	;# 
  1013  1EB1                     	;# 
  1014  1EB2                     	;# 
  1015  1EB8                     	;# 
  1016  1EB9                     	;# 
  1017  1EBA                     	;# 
  1018  1EBB                     	;# 
  1019  1EBC                     	;# 
  1020  1EBD                     	;# 
  1021  1EBE                     	;# 
  1022  1EC3                     	;# 
  1023  1EC5                     	;# 
  1024  1EC6                     	;# 
  1025  1EC7                     	;# 
  1026  1EC8                     	;# 
  1027  1EC9                     	;# 
  1028  1ECA                     	;# 
  1029  1ECB                     	;# 
  1030  1ECB                     	;# 
  1031  1ECB                     	;# 
  1032  1ECC                     	;# 
  1033  1ECC                     	;# 
  1034  1ECC                     	;# 
  1035  1F10                     	;# 
  1036  1F11                     	;# 
  1037  1F12                     	;# 
  1038  1F14                     	;# 
  1039  1F15                     	;# 
  1040  1F1C                     	;# 
  1041  1F1D                     	;# 
  1042  1F1E                     	;# 
  1043  1F1F                     	;# 
  1044  1F20                     	;# 
  1045  1F21                     	;# 
  1046  1F22                     	;# 
  1047  1F23                     	;# 
  1048  1F24                     	;# 
  1049  1F25                     	;# 
  1050  1F26                     	;# 
  1051  1F27                     	;# 
  1052  1F38                     	;# 
  1053  1F39                     	;# 
  1054  1F3A                     	;# 
  1055  1F3B                     	;# 
  1056  1F3C                     	;# 
  1057  1F3D                     	;# 
  1058  1F3E                     	;# 
  1059  1F3F                     	;# 
  1060  1F43                     	;# 
  1061  1F44                     	;# 
  1062  1F45                     	;# 
  1063  1F46                     	;# 
  1064  1F47                     	;# 
  1065  1F48                     	;# 
  1066  1F49                     	;# 
  1067  1F4A                     	;# 
  1068  1F4E                     	;# 
  1069  1F4F                     	;# 
  1070  1F50                     	;# 
  1071  1F51                     	;# 
  1072  1F52                     	;# 
  1073  1F53                     	;# 
  1074  1F54                     	;# 
  1075  1F55                     	;# 
  1076  1FE4                     	;# 
  1077  1FE5                     	;# 
  1078  1FE6                     	;# 
  1079  1FE7                     	;# 
  1080  1FE8                     	;# 
  1081  1FE8                     	;# 
  1082  1FE9                     	;# 
  1083  1FEA                     	;# 
  1084  1FEB                     	;# 
  1085  1FED                     	;# 
  1086  1FEE                     	;# 
  1087  1FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0014                     	;# 
  1106  0018                     	;# 
  1107  0019                     	;# 
  1108  001A                     	;# 
  1109  008C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  008E                     	;# 
  1114  008F                     	;# 
  1115  0090                     	;# 
  1116  0090                     	;# 
  1117  0091                     	;# 
  1118  0092                     	;# 
  1119  0092                     	;# 
  1120  0093                     	;# 
  1121  0094                     	;# 
  1122  0094                     	;# 
  1123  0095                     	;# 
  1124  0096                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0098                     	;# 
  1128  0099                     	;# 
  1129  009A                     	;# 
  1130  009B                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009D                     	;# 
  1135  009E                     	;# 
  1136  009F                     	;# 
  1137  010C                     	;# 
  1138  010C                     	;# 
  1139  010D                     	;# 
  1140  010E                     	;# 
  1141  010F                     	;# 
  1142  010F                     	;# 
  1143  0110                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0118                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020E                     	;# 
  1195  020F                     	;# 
  1196  020F                     	;# 
  1197  0210                     	;# 
  1198  0210                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0216                     	;# 
  1208  0216                     	;# 
  1209  0217                     	;# 
  1210  0217                     	;# 
  1211  0218                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021A                     	;# 
  1215  021B                     	;# 
  1216  021B                     	;# 
  1217  021C                     	;# 
  1218  021C                     	;# 
  1219  021D                     	;# 
  1220  021D                     	;# 
  1221  021E                     	;# 
  1222  021F                     	;# 
  1223  028C                     	;# 
  1224  028C                     	;# 
  1225  028D                     	;# 
  1226  028D                     	;# 
  1227  028E                     	;# 
  1228  028F                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  0292                     	;# 
  1232  0292                     	;# 
  1233  0293                     	;# 
  1234  0293                     	;# 
  1235  0294                     	;# 
  1236  0295                     	;# 
  1237  0296                     	;# 
  1238  0297                     	;# 
  1239  0298                     	;# 
  1240  0298                     	;# 
  1241  0299                     	;# 
  1242  0299                     	;# 
  1243  029A                     	;# 
  1244  029B                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  029F                     	;# 
  1248  030C                     	;# 
  1249  030C                     	;# 
  1250  030D                     	;# 
  1251  030E                     	;# 
  1252  030F                     	;# 
  1253  0310                     	;# 
  1254  0310                     	;# 
  1255  0311                     	;# 
  1256  0312                     	;# 
  1257  0313                     	;# 
  1258  0314                     	;# 
  1259  0314                     	;# 
  1260  0315                     	;# 
  1261  0316                     	;# 
  1262  0317                     	;# 
  1263  0318                     	;# 
  1264  0318                     	;# 
  1265  0319                     	;# 
  1266  031A                     	;# 
  1267  031B                     	;# 
  1268  038C                     	;# 
  1269  038C                     	;# 
  1270  038D                     	;# 
  1271  038E                     	;# 
  1272  0390                     	;# 
  1273  0390                     	;# 
  1274  0391                     	;# 
  1275  0392                     	;# 
  1276  048C                     	;# 
  1277  048C                     	;# 
  1278  048D                     	;# 
  1279  048E                     	;# 
  1280  048F                     	;# 
  1281  048F                     	;# 
  1282  0490                     	;# 
  1283  0491                     	;# 
  1284  0492                     	;# 
  1285  0492                     	;# 
  1286  0493                     	;# 
  1287  0494                     	;# 
  1288  0495                     	;# 
  1289  0495                     	;# 
  1290  0496                     	;# 
  1291  0497                     	;# 
  1292  0498                     	;# 
  1293  0499                     	;# 
  1294  049A                     	;# 
  1295  049B                     	;# 
  1296  049C                     	;# 
  1297  049D                     	;# 
  1298  058C                     	;# 
  1299  058C                     	;# 
  1300  058D                     	;# 
  1301  058E                     	;# 
  1302  058F                     	;# 
  1303  058F                     	;# 
  1304  0590                     	;# 
  1305  0591                     	;# 
  1306  0592                     	;# 
  1307  0593                     	;# 
  1308  059C                     	;# 
  1309  059C                     	;# 
  1310  059D                     	;# 
  1311  059D                     	;# 
  1312  059E                     	;# 
  1313  059F                     	;# 
  1314  060C                     	;# 
  1315  060C                     	;# 
  1316  060D                     	;# 
  1317  060D                     	;# 
  1318  060E                     	;# 
  1319  060F                     	;# 
  1320  0610                     	;# 
  1321  0611                     	;# 
  1322  0612                     	;# 
  1323  0613                     	;# 
  1324  0614                     	;# 
  1325  0616                     	;# 
  1326  0616                     	;# 
  1327  0617                     	;# 
  1328  0617                     	;# 
  1329  0618                     	;# 
  1330  0619                     	;# 
  1331  061A                     	;# 
  1332  061B                     	;# 
  1333  061C                     	;# 
  1334  061D                     	;# 
  1335  061E                     	;# 
  1336  070C                     	;# 
  1337  070D                     	;# 
  1338  070E                     	;# 
  1339  070F                     	;# 
  1340  0710                     	;# 
  1341  0711                     	;# 
  1342  0712                     	;# 
  1343  0713                     	;# 
  1344  0714                     	;# 
  1345  0716                     	;# 
  1346  0717                     	;# 
  1347  0718                     	;# 
  1348  0719                     	;# 
  1349  071A                     	;# 
  1350  071B                     	;# 
  1351  071C                     	;# 
  1352  071D                     	;# 
  1353  071E                     	;# 
  1354  0796                     	;# 
  1355  0797                     	;# 
  1356  0798                     	;# 
  1357  0799                     	;# 
  1358  079A                     	;# 
  1359  079B                     	;# 
  1360  079C                     	;# 
  1361  079D                     	;# 
  1362  080C                     	;# 
  1363  080D                     	;# 
  1364  080E                     	;# 
  1365  080F                     	;# 
  1366  0810                     	;# 
  1367  0811                     	;# 
  1368  0812                     	;# 
  1369  0813                     	;# 
  1370  0814                     	;# 
  1371  081A                     	;# 
  1372  081A                     	;# 
  1373  081B                     	;# 
  1374  081C                     	;# 
  1375  081C                     	;# 
  1376  081D                     	;# 
  1377  081E                     	;# 
  1378  081F                     	;# 
  1379  088C                     	;# 
  1380  088D                     	;# 
  1381  088E                     	;# 
  1382  088F                     	;# 
  1383  0890                     	;# 
  1384  0891                     	;# 
  1385  0892                     	;# 
  1386  0893                     	;# 
  1387  0895                     	;# 
  1388  0896                     	;# 
  1389  0897                     	;# 
  1390  0898                     	;# 
  1391  0899                     	;# 
  1392  089A                     	;# 
  1393  089B                     	;# 
  1394  090C                     	;# 
  1395  090E                     	;# 
  1396  090F                     	;# 
  1397  091F                     	;# 
  1398  098F                     	;# 
  1399  098F                     	;# 
  1400  0990                     	;# 
  1401  0991                     	;# 
  1402  0992                     	;# 
  1403  0993                     	;# 
  1404  0994                     	;# 
  1405  0995                     	;# 
  1406  0996                     	;# 
  1407  0997                     	;# 
  1408  1E0F                     	;# 
  1409  1E10                     	;# 
  1410  1E11                     	;# 
  1411  1E12                     	;# 
  1412  1E13                     	;# 
  1413  1E14                     	;# 
  1414  1E15                     	;# 
  1415  1E16                     	;# 
  1416  1E17                     	;# 
  1417  1E18                     	;# 
  1418  1E19                     	;# 
  1419  1E1A                     	;# 
  1420  1E1B                     	;# 
  1421  1E1C                     	;# 
  1422  1E1D                     	;# 
  1423  1E1E                     	;# 
  1424  1E1F                     	;# 
  1425  1E20                     	;# 
  1426  1E21                     	;# 
  1427  1E22                     	;# 
  1428  1E23                     	;# 
  1429  1E24                     	;# 
  1430  1E25                     	;# 
  1431  1E26                     	;# 
  1432  1E27                     	;# 
  1433  1E28                     	;# 
  1434  1E29                     	;# 
  1435  1E2A                     	;# 
  1436  1E2B                     	;# 
  1437  1E2C                     	;# 
  1438  1E2D                     	;# 
  1439  1E2E                     	;# 
  1440  1E2F                     	;# 
  1441  1E30                     	;# 
  1442  1E31                     	;# 
  1443  1E32                     	;# 
  1444  1E33                     	;# 
  1445  1E34                     	;# 
  1446  1E35                     	;# 
  1447  1E36                     	;# 
  1448  1E37                     	;# 
  1449  1E8F                     	;# 
  1450  1E90                     	;# 
  1451  1E91                     	;# 
  1452  1E92                     	;# 
  1453  1E93                     	;# 
  1454  1E94                     	;# 
  1455  1E95                     	;# 
  1456  1E96                     	;# 
  1457  1E97                     	;# 
  1458  1E9C                     	;# 
  1459  1E9D                     	;# 
  1460  1E9E                     	;# 
  1461  1EA1                     	;# 
  1462  1EA2                     	;# 
  1463  1EA3                     	;# 
  1464  1EA4                     	;# 
  1465  1EA9                     	;# 
  1466  1EAA                     	;# 
  1467  1EB1                     	;# 
  1468  1EB2                     	;# 
  1469  1EB8                     	;# 
  1470  1EB9                     	;# 
  1471  1EBA                     	;# 
  1472  1EBB                     	;# 
  1473  1EBC                     	;# 
  1474  1EBD                     	;# 
  1475  1EBE                     	;# 
  1476  1EC3                     	;# 
  1477  1EC5                     	;# 
  1478  1EC6                     	;# 
  1479  1EC7                     	;# 
  1480  1EC8                     	;# 
  1481  1EC9                     	;# 
  1482  1ECA                     	;# 
  1483  1ECB                     	;# 
  1484  1ECB                     	;# 
  1485  1ECB                     	;# 
  1486  1ECC                     	;# 
  1487  1ECC                     	;# 
  1488  1ECC                     	;# 
  1489  1F10                     	;# 
  1490  1F11                     	;# 
  1491  1F12                     	;# 
  1492  1F14                     	;# 
  1493  1F15                     	;# 
  1494  1F1C                     	;# 
  1495  1F1D                     	;# 
  1496  1F1E                     	;# 
  1497  1F1F                     	;# 
  1498  1F20                     	;# 
  1499  1F21                     	;# 
  1500  1F22                     	;# 
  1501  1F23                     	;# 
  1502  1F24                     	;# 
  1503  1F25                     	;# 
  1504  1F26                     	;# 
  1505  1F27                     	;# 
  1506  1F38                     	;# 
  1507  1F39                     	;# 
  1508  1F3A                     	;# 
  1509  1F3B                     	;# 
  1510  1F3C                     	;# 
  1511  1F3D                     	;# 
  1512  1F3E                     	;# 
  1513  1F3F                     	;# 
  1514  1F43                     	;# 
  1515  1F44                     	;# 
  1516  1F45                     	;# 
  1517  1F46                     	;# 
  1518  1F47                     	;# 
  1519  1F48                     	;# 
  1520  1F49                     	;# 
  1521  1F4A                     	;# 
  1522  1F4E                     	;# 
  1523  1F4F                     	;# 
  1524  1F50                     	;# 
  1525  1F51                     	;# 
  1526  1F52                     	;# 
  1527  1F53                     	;# 
  1528  1F54                     	;# 
  1529  1F55                     	;# 
  1530  1FE4                     	;# 
  1531  1FE5                     	;# 
  1532  1FE6                     	;# 
  1533  1FE7                     	;# 
  1534  1FE8                     	;# 
  1535  1FE8                     	;# 
  1536  1FE9                     	;# 
  1537  1FEA                     	;# 
  1538  1FEB                     	;# 
  1539  1FED                     	;# 
  1540  1FEE                     	;# 
  1541  1FEF                     	;# 
  1542  0000                     	;# 
  1543  0001                     	;# 
  1544  0002                     	;# 
  1545  0003                     	;# 
  1546  0004                     	;# 
  1547  0005                     	;# 
  1548  0006                     	;# 
  1549  0007                     	;# 
  1550  0008                     	;# 
  1551  0009                     	;# 
  1552  000A                     	;# 
  1553  000B                     	;# 
  1554  000C                     	;# 
  1555  000D                     	;# 
  1556  000E                     	;# 
  1557  0012                     	;# 
  1558  0013                     	;# 
  1559  0014                     	;# 
  1560  0018                     	;# 
  1561  0019                     	;# 
  1562  001A                     	;# 
  1563  008C                     	;# 
  1564  008C                     	;# 
  1565  008D                     	;# 
  1566  008E                     	;# 
  1567  008E                     	;# 
  1568  008F                     	;# 
  1569  0090                     	;# 
  1570  0090                     	;# 
  1571  0091                     	;# 
  1572  0092                     	;# 
  1573  0092                     	;# 
  1574  0093                     	;# 
  1575  0094                     	;# 
  1576  0094                     	;# 
  1577  0095                     	;# 
  1578  0096                     	;# 
  1579  0096                     	;# 
  1580  0097                     	;# 
  1581  0098                     	;# 
  1582  0099                     	;# 
  1583  009A                     	;# 
  1584  009B                     	;# 
  1585  009B                     	;# 
  1586  009C                     	;# 
  1587  009D                     	;# 
  1588  009D                     	;# 
  1589  009E                     	;# 
  1590  009F                     	;# 
  1591  010C                     	;# 
  1592  010C                     	;# 
  1593  010D                     	;# 
  1594  010E                     	;# 
  1595  010F                     	;# 
  1596  010F                     	;# 
  1597  0110                     	;# 
  1598  0111                     	;# 
  1599  0112                     	;# 
  1600  0113                     	;# 
  1601  0114                     	;# 
  1602  0115                     	;# 
  1603  0116                     	;# 
  1604  0117                     	;# 
  1605  0118                     	;# 
  1606  0119                     	;# 
  1607  0119                     	;# 
  1608  0119                     	;# 
  1609  011A                     	;# 
  1610  011A                     	;# 
  1611  011A                     	;# 
  1612  011B                     	;# 
  1613  011B                     	;# 
  1614  011B                     	;# 
  1615  011B                     	;# 
  1616  011B                     	;# 
  1617  011C                     	;# 
  1618  011C                     	;# 
  1619  011C                     	;# 
  1620  011D                     	;# 
  1621  011D                     	;# 
  1622  011D                     	;# 
  1623  011E                     	;# 
  1624  011E                     	;# 
  1625  011E                     	;# 
  1626  011F                     	;# 
  1627  011F                     	;# 
  1628  011F                     	;# 
  1629  011F                     	;# 
  1630  011F                     	;# 
  1631  018C                     	;# 
  1632  018D                     	;# 
  1633  018E                     	;# 
  1634  018F                     	;# 
  1635  0190                     	;# 
  1636  0191                     	;# 
  1637  0192                     	;# 
  1638  0196                     	;# 
  1639  0197                     	;# 
  1640  0198                     	;# 
  1641  0199                     	;# 
  1642  019A                     	;# 
  1643  019B                     	;# 
  1644  019C                     	;# 
  1645  020C                     	;# 
  1646  020D                     	;# 
  1647  020E                     	;# 
  1648  020E                     	;# 
  1649  020F                     	;# 
  1650  020F                     	;# 
  1651  0210                     	;# 
  1652  0210                     	;# 
  1653  0211                     	;# 
  1654  0211                     	;# 
  1655  0212                     	;# 
  1656  0213                     	;# 
  1657  0214                     	;# 
  1658  0214                     	;# 
  1659  0215                     	;# 
  1660  0215                     	;# 
  1661  0216                     	;# 
  1662  0216                     	;# 
  1663  0217                     	;# 
  1664  0217                     	;# 
  1665  0218                     	;# 
  1666  0219                     	;# 
  1667  021A                     	;# 
  1668  021A                     	;# 
  1669  021B                     	;# 
  1670  021B                     	;# 
  1671  021C                     	;# 
  1672  021C                     	;# 
  1673  021D                     	;# 
  1674  021D                     	;# 
  1675  021E                     	;# 
  1676  021F                     	;# 
  1677  028C                     	;# 
  1678  028C                     	;# 
  1679  028D                     	;# 
  1680  028D                     	;# 
  1681  028E                     	;# 
  1682  028F                     	;# 
  1683  0290                     	;# 
  1684  0291                     	;# 
  1685  0292                     	;# 
  1686  0292                     	;# 
  1687  0293                     	;# 
  1688  0293                     	;# 
  1689  0294                     	;# 
  1690  0295                     	;# 
  1691  0296                     	;# 
  1692  0297                     	;# 
  1693  0298                     	;# 
  1694  0298                     	;# 
  1695  0299                     	;# 
  1696  0299                     	;# 
  1697  029A                     	;# 
  1698  029B                     	;# 
  1699  029C                     	;# 
  1700  029D                     	;# 
  1701  029F                     	;# 
  1702  030C                     	;# 
  1703  030C                     	;# 
  1704  030D                     	;# 
  1705  030E                     	;# 
  1706  030F                     	;# 
  1707  0310                     	;# 
  1708  0310                     	;# 
  1709  0311                     	;# 
  1710  0312                     	;# 
  1711  0313                     	;# 
  1712  0314                     	;# 
  1713  0314                     	;# 
  1714  0315                     	;# 
  1715  0316                     	;# 
  1716  0317                     	;# 
  1717  0318                     	;# 
  1718  0318                     	;# 
  1719  0319                     	;# 
  1720  031A                     	;# 
  1721  031B                     	;# 
  1722  038C                     	;# 
  1723  038C                     	;# 
  1724  038D                     	;# 
  1725  038E                     	;# 
  1726  0390                     	;# 
  1727  0390                     	;# 
  1728  0391                     	;# 
  1729  0392                     	;# 
  1730  048C                     	;# 
  1731  048C                     	;# 
  1732  048D                     	;# 
  1733  048E                     	;# 
  1734  048F                     	;# 
  1735  048F                     	;# 
  1736  0490                     	;# 
  1737  0491                     	;# 
  1738  0492                     	;# 
  1739  0492                     	;# 
  1740  0493                     	;# 
  1741  0494                     	;# 
  1742  0495                     	;# 
  1743  0495                     	;# 
  1744  0496                     	;# 
  1745  0497                     	;# 
  1746  0498                     	;# 
  1747  0499                     	;# 
  1748  049A                     	;# 
  1749  049B                     	;# 
  1750  049C                     	;# 
  1751  049D                     	;# 
  1752  058C                     	;# 
  1753  058C                     	;# 
  1754  058D                     	;# 
  1755  058E                     	;# 
  1756  058F                     	;# 
  1757  058F                     	;# 
  1758  0590                     	;# 
  1759  0591                     	;# 
  1760  0592                     	;# 
  1761  0593                     	;# 
  1762  059C                     	;# 
  1763  059C                     	;# 
  1764  059D                     	;# 
  1765  059D                     	;# 
  1766  059E                     	;# 
  1767  059F                     	;# 
  1768  060C                     	;# 
  1769  060C                     	;# 
  1770  060D                     	;# 
  1771  060D                     	;# 
  1772  060E                     	;# 
  1773  060F                     	;# 
  1774  0610                     	;# 
  1775  0611                     	;# 
  1776  0612                     	;# 
  1777  0613                     	;# 
  1778  0614                     	;# 
  1779  0616                     	;# 
  1780  0616                     	;# 
  1781  0617                     	;# 
  1782  0617                     	;# 
  1783  0618                     	;# 
  1784  0619                     	;# 
  1785  061A                     	;# 
  1786  061B                     	;# 
  1787  061C                     	;# 
  1788  061D                     	;# 
  1789  061E                     	;# 
  1790  070C                     	;# 
  1791  070D                     	;# 
  1792  070E                     	;# 
  1793  070F                     	;# 
  1794  0710                     	;# 
  1795  0711                     	;# 
  1796  0712                     	;# 
  1797  0713                     	;# 
  1798  0714                     	;# 
  1799  0716                     	;# 
  1800  0717                     	;# 
  1801  0718                     	;# 
  1802  0719                     	;# 
  1803  071A                     	;# 
  1804  071B                     	;# 
  1805  071C                     	;# 
  1806  071D                     	;# 
  1807  071E                     	;# 
  1808  0796                     	;# 
  1809  0797                     	;# 
  1810  0798                     	;# 
  1811  0799                     	;# 
  1812  079A                     	;# 
  1813  079B                     	;# 
  1814  079C                     	;# 
  1815  079D                     	;# 
  1816  080C                     	;# 
  1817  080D                     	;# 
  1818  080E                     	;# 
  1819  080F                     	;# 
  1820  0810                     	;# 
  1821  0811                     	;# 
  1822  0812                     	;# 
  1823  0813                     	;# 
  1824  0814                     	;# 
  1825  081A                     	;# 
  1826  081A                     	;# 
  1827  081B                     	;# 
  1828  081C                     	;# 
  1829  081C                     	;# 
  1830  081D                     	;# 
  1831  081E                     	;# 
  1832  081F                     	;# 
  1833  088C                     	;# 
  1834  088D                     	;# 
  1835  088E                     	;# 
  1836  088F                     	;# 
  1837  0890                     	;# 
  1838  0891                     	;# 
  1839  0892                     	;# 
  1840  0893                     	;# 
  1841  0895                     	;# 
  1842  0896                     	;# 
  1843  0897                     	;# 
  1844  0898                     	;# 
  1845  0899                     	;# 
  1846  089A                     	;# 
  1847  089B                     	;# 
  1848  090C                     	;# 
  1849  090E                     	;# 
  1850  090F                     	;# 
  1851  091F                     	;# 
  1852  098F                     	;# 
  1853  098F                     	;# 
  1854  0990                     	;# 
  1855  0991                     	;# 
  1856  0992                     	;# 
  1857  0993                     	;# 
  1858  0994                     	;# 
  1859  0995                     	;# 
  1860  0996                     	;# 
  1861  0997                     	;# 
  1862  1E0F                     	;# 
  1863  1E10                     	;# 
  1864  1E11                     	;# 
  1865  1E12                     	;# 
  1866  1E13                     	;# 
  1867  1E14                     	;# 
  1868  1E15                     	;# 
  1869  1E16                     	;# 
  1870  1E17                     	;# 
  1871  1E18                     	;# 
  1872  1E19                     	;# 
  1873  1E1A                     	;# 
  1874  1E1B                     	;# 
  1875  1E1C                     	;# 
  1876  1E1D                     	;# 
  1877  1E1E                     	;# 
  1878  1E1F                     	;# 
  1879  1E20                     	;# 
  1880  1E21                     	;# 
  1881  1E22                     	;# 
  1882  1E23                     	;# 
  1883  1E24                     	;# 
  1884  1E25                     	;# 
  1885  1E26                     	;# 
  1886  1E27                     	;# 
  1887  1E28                     	;# 
  1888  1E29                     	;# 
  1889  1E2A                     	;# 
  1890  1E2B                     	;# 
  1891  1E2C                     	;# 
  1892  1E2D                     	;# 
  1893  1E2E                     	;# 
  1894  1E2F                     	;# 
  1895  1E30                     	;# 
  1896  1E31                     	;# 
  1897  1E32                     	;# 
  1898  1E33                     	;# 
  1899  1E34                     	;# 
  1900  1E35                     	;# 
  1901  1E36                     	;# 
  1902  1E37                     	;# 
  1903  1E8F                     	;# 
  1904  1E90                     	;# 
  1905  1E91                     	;# 
  1906  1E92                     	;# 
  1907  1E93                     	;# 
  1908  1E94                     	;# 
  1909  1E95                     	;# 
  1910  1E96                     	;# 
  1911  1E97                     	;# 
  1912  1E9C                     	;# 
  1913  1E9D                     	;# 
  1914  1E9E                     	;# 
  1915  1EA1                     	;# 
  1916  1EA2                     	;# 
  1917  1EA3                     	;# 
  1918  1EA4                     	;# 
  1919  1EA9                     	;# 
  1920  1EAA                     	;# 
  1921  1EB1                     	;# 
  1922  1EB2                     	;# 
  1923  1EB8                     	;# 
  1924  1EB9                     	;# 
  1925  1EBA                     	;# 
  1926  1EBB                     	;# 
  1927  1EBC                     	;# 
  1928  1EBD                     	;# 
  1929  1EBE                     	;# 
  1930  1EC3                     	;# 
  1931  1EC5                     	;# 
  1932  1EC6                     	;# 
  1933  1EC7                     	;# 
  1934  1EC8                     	;# 
  1935  1EC9                     	;# 
  1936  1ECA                     	;# 
  1937  1ECB                     	;# 
  1938  1ECB                     	;# 
  1939  1ECB                     	;# 
  1940  1ECC                     	;# 
  1941  1ECC                     	;# 
  1942  1ECC                     	;# 
  1943  1F10                     	;# 
  1944  1F11                     	;# 
  1945  1F12                     	;# 
  1946  1F14                     	;# 
  1947  1F15                     	;# 
  1948  1F1C                     	;# 
  1949  1F1D                     	;# 
  1950  1F1E                     	;# 
  1951  1F1F                     	;# 
  1952  1F20                     	;# 
  1953  1F21                     	;# 
  1954  1F22                     	;# 
  1955  1F23                     	;# 
  1956  1F24                     	;# 
  1957  1F25                     	;# 
  1958  1F26                     	;# 
  1959  1F27                     	;# 
  1960  1F38                     	;# 
  1961  1F39                     	;# 
  1962  1F3A                     	;# 
  1963  1F3B                     	;# 
  1964  1F3C                     	;# 
  1965  1F3D                     	;# 
  1966  1F3E                     	;# 
  1967  1F3F                     	;# 
  1968  1F43                     	;# 
  1969  1F44                     	;# 
  1970  1F45                     	;# 
  1971  1F46                     	;# 
  1972  1F47                     	;# 
  1973  1F48                     	;# 
  1974  1F49                     	;# 
  1975  1F4A                     	;# 
  1976  1F4E                     	;# 
  1977  1F4F                     	;# 
  1978  1F50                     	;# 
  1979  1F51                     	;# 
  1980  1F52                     	;# 
  1981  1F53                     	;# 
  1982  1F54                     	;# 
  1983  1F55                     	;# 
  1984  1FE4                     	;# 
  1985  1FE5                     	;# 
  1986  1FE6                     	;# 
  1987  1FE7                     	;# 
  1988  1FE8                     	;# 
  1989  1FE8                     	;# 
  1990  1FE9                     	;# 
  1991  1FEA                     	;# 
  1992  1FEB                     	;# 
  1993  1FED                     	;# 
  1994  1FEE                     	;# 
  1995  1FEF                     	;# 
  1996  0000                     	;# 
  1997  0001                     	;# 
  1998  0002                     	;# 
  1999  0003                     	;# 
  2000  0004                     	;# 
  2001  0005                     	;# 
  2002  0006                     	;# 
  2003  0007                     	;# 
  2004  0008                     	;# 
  2005  0009                     	;# 
  2006  000A                     	;# 
  2007  000B                     	;# 
  2008  000C                     	;# 
  2009  000D                     	;# 
  2010  000E                     	;# 
  2011  0012                     	;# 
  2012  0013                     	;# 
  2013  0014                     	;# 
  2014  0018                     	;# 
  2015  0019                     	;# 
  2016  001A                     	;# 
  2017  008C                     	;# 
  2018  008C                     	;# 
  2019  008D                     	;# 
  2020  008E                     	;# 
  2021  008E                     	;# 
  2022  008F                     	;# 
  2023  0090                     	;# 
  2024  0090                     	;# 
  2025  0091                     	;# 
  2026  0092                     	;# 
  2027  0092                     	;# 
  2028  0093                     	;# 
  2029  0094                     	;# 
  2030  0094                     	;# 
  2031  0095                     	;# 
  2032  0096                     	;# 
  2033  0096                     	;# 
  2034  0097                     	;# 
  2035  0098                     	;# 
  2036  0099                     	;# 
  2037  009A                     	;# 
  2038  009B                     	;# 
  2039  009B                     	;# 
  2040  009C                     	;# 
  2041  009D                     	;# 
  2042  009D                     	;# 
  2043  009E                     	;# 
  2044  009F                     	;# 
  2045  010C                     	;# 
  2046  010C                     	;# 
  2047  010D                     	;# 
  2048  010E                     	;# 
  2049  010F                     	;# 
  2050  010F                     	;# 
  2051  0110                     	;# 
  2052  0111                     	;# 
  2053  0112                     	;# 
  2054  0113                     	;# 
  2055  0114                     	;# 
  2056  0115                     	;# 
  2057  0116                     	;# 
  2058  0117                     	;# 
  2059  0118                     	;# 
  2060  0119                     	;# 
  2061  0119                     	;# 
  2062  0119                     	;# 
  2063  011A                     	;# 
  2064  011A                     	;# 
  2065  011A                     	;# 
  2066  011B                     	;# 
  2067  011B                     	;# 
  2068  011B                     	;# 
  2069  011B                     	;# 
  2070  011B                     	;# 
  2071  011C                     	;# 
  2072  011C                     	;# 
  2073  011C                     	;# 
  2074  011D                     	;# 
  2075  011D                     	;# 
  2076  011D                     	;# 
  2077  011E                     	;# 
  2078  011E                     	;# 
  2079  011E                     	;# 
  2080  011F                     	;# 
  2081  011F                     	;# 
  2082  011F                     	;# 
  2083  011F                     	;# 
  2084  011F                     	;# 
  2085  018C                     	;# 
  2086  018D                     	;# 
  2087  018E                     	;# 
  2088  018F                     	;# 
  2089  0190                     	;# 
  2090  0191                     	;# 
  2091  0192                     	;# 
  2092  0196                     	;# 
  2093  0197                     	;# 
  2094  0198                     	;# 
  2095  0199                     	;# 
  2096  019A                     	;# 
  2097  019B                     	;# 
  2098  019C                     	;# 
  2099  020C                     	;# 
  2100  020D                     	;# 
  2101  020E                     	;# 
  2102  020E                     	;# 
  2103  020F                     	;# 
  2104  020F                     	;# 
  2105  0210                     	;# 
  2106  0210                     	;# 
  2107  0211                     	;# 
  2108  0211                     	;# 
  2109  0212                     	;# 
  2110  0213                     	;# 
  2111  0214                     	;# 
  2112  0214                     	;# 
  2113  0215                     	;# 
  2114  0215                     	;# 
  2115  0216                     	;# 
  2116  0216                     	;# 
  2117  0217                     	;# 
  2118  0217                     	;# 
  2119  0218                     	;# 
  2120  0219                     	;# 
  2121  021A                     	;# 
  2122  021A                     	;# 
  2123  021B                     	;# 
  2124  021B                     	;# 
  2125  021C                     	;# 
  2126  021C                     	;# 
  2127  021D                     	;# 
  2128  021D                     	;# 
  2129  021E                     	;# 
  2130  021F                     	;# 
  2131  028C                     	;# 
  2132  028C                     	;# 
  2133  028D                     	;# 
  2134  028D                     	;# 
  2135  028E                     	;# 
  2136  028F                     	;# 
  2137  0290                     	;# 
  2138  0291                     	;# 
  2139  0292                     	;# 
  2140  0292                     	;# 
  2141  0293                     	;# 
  2142  0293                     	;# 
  2143  0294                     	;# 
  2144  0295                     	;# 
  2145  0296                     	;# 
  2146  0297                     	;# 
  2147  0298                     	;# 
  2148  0298                     	;# 
  2149  0299                     	;# 
  2150  0299                     	;# 
  2151  029A                     	;# 
  2152  029B                     	;# 
  2153  029C                     	;# 
  2154  029D                     	;# 
  2155  029F                     	;# 
  2156  030C                     	;# 
  2157  030C                     	;# 
  2158  030D                     	;# 
  2159  030E                     	;# 
  2160  030F                     	;# 
  2161  0310                     	;# 
  2162  0310                     	;# 
  2163  0311                     	;# 
  2164  0312                     	;# 
  2165  0313                     	;# 
  2166  0314                     	;# 
  2167  0314                     	;# 
  2168  0315                     	;# 
  2169  0316                     	;# 
  2170  0317                     	;# 
  2171  0318                     	;# 
  2172  0318                     	;# 
  2173  0319                     	;# 
  2174  031A                     	;# 
  2175  031B                     	;# 
  2176  038C                     	;# 
  2177  038C                     	;# 
  2178  038D                     	;# 
  2179  038E                     	;# 
  2180  0390                     	;# 
  2181  0390                     	;# 
  2182  0391                     	;# 
  2183  0392                     	;# 
  2184  048C                     	;# 
  2185  048C                     	;# 
  2186  048D                     	;# 
  2187  048E                     	;# 
  2188  048F                     	;# 
  2189  048F                     	;# 
  2190  0490                     	;# 
  2191  0491                     	;# 
  2192  0492                     	;# 
  2193  0492                     	;# 
  2194  0493                     	;# 
  2195  0494                     	;# 
  2196  0495                     	;# 
  2197  0495                     	;# 
  2198  0496                     	;# 
  2199  0497                     	;# 
  2200  0498                     	;# 
  2201  0499                     	;# 
  2202  049A                     	;# 
  2203  049B                     	;# 
  2204  049C                     	;# 
  2205  049D                     	;# 
  2206  058C                     	;# 
  2207  058C                     	;# 
  2208  058D                     	;# 
  2209  058E                     	;# 
  2210  058F                     	;# 
  2211  058F                     	;# 
  2212  0590                     	;# 
  2213  0591                     	;# 
  2214  0592                     	;# 
  2215  0593                     	;# 
  2216  059C                     	;# 
  2217  059C                     	;# 
  2218  059D                     	;# 
  2219  059D                     	;# 
  2220  059E                     	;# 
  2221  059F                     	;# 
  2222  060C                     	;# 
  2223  060C                     	;# 
  2224  060D                     	;# 
  2225  060D                     	;# 
  2226  060E                     	;# 
  2227  060F                     	;# 
  2228  0610                     	;# 
  2229  0611                     	;# 
  2230  0612                     	;# 
  2231  0613                     	;# 
  2232  0614                     	;# 
  2233  0616                     	;# 
  2234  0616                     	;# 
  2235  0617                     	;# 
  2236  0617                     	;# 
  2237  0618                     	;# 
  2238  0619                     	;# 
  2239  061A                     	;# 
  2240  061B                     	;# 
  2241  061C                     	;# 
  2242  061D                     	;# 
  2243  061E                     	;# 
  2244  070C                     	;# 
  2245  070D                     	;# 
  2246  070E                     	;# 
  2247  070F                     	;# 
  2248  0710                     	;# 
  2249  0711                     	;# 
  2250  0712                     	;# 
  2251  0713                     	;# 
  2252  0714                     	;# 
  2253  0716                     	;# 
  2254  0717                     	;# 
  2255  0718                     	;# 
  2256  0719                     	;# 
  2257  071A                     	;# 
  2258  071B                     	;# 
  2259  071C                     	;# 
  2260  071D                     	;# 
  2261  071E                     	;# 
  2262  0796                     	;# 
  2263  0797                     	;# 
  2264  0798                     	;# 
  2265  0799                     	;# 
  2266  079A                     	;# 
  2267  079B                     	;# 
  2268  079C                     	;# 
  2269  079D                     	;# 
  2270  080C                     	;# 
  2271  080D                     	;# 
  2272  080E                     	;# 
  2273  080F                     	;# 
  2274  0810                     	;# 
  2275  0811                     	;# 
  2276  0812                     	;# 
  2277  0813                     	;# 
  2278  0814                     	;# 
  2279  081A                     	;# 
  2280  081A                     	;# 
  2281  081B                     	;# 
  2282  081C                     	;# 
  2283  081C                     	;# 
  2284  081D                     	;# 
  2285  081E                     	;# 
  2286  081F                     	;# 
  2287  088C                     	;# 
  2288  088D                     	;# 
  2289  088E                     	;# 
  2290  088F                     	;# 
  2291  0890                     	;# 
  2292  0891                     	;# 
  2293  0892                     	;# 
  2294  0893                     	;# 
  2295  0895                     	;# 
  2296  0896                     	;# 
  2297  0897                     	;# 
  2298  0898                     	;# 
  2299  0899                     	;# 
  2300  089A                     	;# 
  2301  089B                     	;# 
  2302  090C                     	;# 
  2303  090E                     	;# 
  2304  090F                     	;# 
  2305  091F                     	;# 
  2306  098F                     	;# 
  2307  098F                     	;# 
  2308  0990                     	;# 
  2309  0991                     	;# 
  2310  0992                     	;# 
  2311  0993                     	;# 
  2312  0994                     	;# 
  2313  0995                     	;# 
  2314  0996                     	;# 
  2315  0997                     	;# 
  2316  1E0F                     	;# 
  2317  1E10                     	;# 
  2318  1E11                     	;# 
  2319  1E12                     	;# 
  2320  1E13                     	;# 
  2321  1E14                     	;# 
  2322  1E15                     	;# 
  2323  1E16                     	;# 
  2324  1E17                     	;# 
  2325  1E18                     	;# 
  2326  1E19                     	;# 
  2327  1E1A                     	;# 
  2328  1E1B                     	;# 
  2329  1E1C                     	;# 
  2330  1E1D                     	;# 
  2331  1E1E                     	;# 
  2332  1E1F                     	;# 
  2333  1E20                     	;# 
  2334  1E21                     	;# 
  2335  1E22                     	;# 
  2336  1E23                     	;# 
  2337  1E24                     	;# 
  2338  1E25                     	;# 
  2339  1E26                     	;# 
  2340  1E27                     	;# 
  2341  1E28                     	;# 
  2342  1E29                     	;# 
  2343  1E2A                     	;# 
  2344  1E2B                     	;# 
  2345  1E2C                     	;# 
  2346  1E2D                     	;# 
  2347  1E2E                     	;# 
  2348  1E2F                     	;# 
  2349  1E30                     	;# 
  2350  1E31                     	;# 
  2351  1E32                     	;# 
  2352  1E33                     	;# 
  2353  1E34                     	;# 
  2354  1E35                     	;# 
  2355  1E36                     	;# 
  2356  1E37                     	;# 
  2357  1E8F                     	;# 
  2358  1E90                     	;# 
  2359  1E91                     	;# 
  2360  1E92                     	;# 
  2361  1E93                     	;# 
  2362  1E94                     	;# 
  2363  1E95                     	;# 
  2364  1E96                     	;# 
  2365  1E97                     	;# 
  2366  1E9C                     	;# 
  2367  1E9D                     	;# 
  2368  1E9E                     	;# 
  2369  1EA1                     	;# 
  2370  1EA2                     	;# 
  2371  1EA3                     	;# 
  2372  1EA4                     	;# 
  2373  1EA9                     	;# 
  2374  1EAA                     	;# 
  2375  1EB1                     	;# 
  2376  1EB2                     	;# 
  2377  1EB8                     	;# 
  2378  1EB9                     	;# 
  2379  1EBA                     	;# 
  2380  1EBB                     	;# 
  2381  1EBC                     	;# 
  2382  1EBD                     	;# 
  2383  1EBE                     	;# 
  2384  1EC3                     	;# 
  2385  1EC5                     	;# 
  2386  1EC6                     	;# 
  2387  1EC7                     	;# 
  2388  1EC8                     	;# 
  2389  1EC9                     	;# 
  2390  1ECA                     	;# 
  2391  1ECB                     	;# 
  2392  1ECB                     	;# 
  2393  1ECB                     	;# 
  2394  1ECC                     	;# 
  2395  1ECC                     	;# 
  2396  1ECC                     	;# 
  2397  1F10                     	;# 
  2398  1F11                     	;# 
  2399  1F12                     	;# 
  2400  1F14                     	;# 
  2401  1F15                     	;# 
  2402  1F1C                     	;# 
  2403  1F1D                     	;# 
  2404  1F1E                     	;# 
  2405  1F1F                     	;# 
  2406  1F20                     	;# 
  2407  1F21                     	;# 
  2408  1F22                     	;# 
  2409  1F23                     	;# 
  2410  1F24                     	;# 
  2411  1F25                     	;# 
  2412  1F26                     	;# 
  2413  1F27                     	;# 
  2414  1F38                     	;# 
  2415  1F39                     	;# 
  2416  1F3A                     	;# 
  2417  1F3B                     	;# 
  2418  1F3C                     	;# 
  2419  1F3D                     	;# 
  2420  1F3E                     	;# 
  2421  1F3F                     	;# 
  2422  1F43                     	;# 
  2423  1F44                     	;# 
  2424  1F45                     	;# 
  2425  1F46                     	;# 
  2426  1F47                     	;# 
  2427  1F48                     	;# 
  2428  1F49                     	;# 
  2429  1F4A                     	;# 
  2430  1F4E                     	;# 
  2431  1F4F                     	;# 
  2432  1F50                     	;# 
  2433  1F51                     	;# 
  2434  1F52                     	;# 
  2435  1F53                     	;# 
  2436  1F54                     	;# 
  2437  1F55                     	;# 
  2438  1FE4                     	;# 
  2439  1FE5                     	;# 
  2440  1FE6                     	;# 
  2441  1FE7                     	;# 
  2442  1FE8                     	;# 
  2443  1FE8                     	;# 
  2444  1FE9                     	;# 
  2445  1FEA                     	;# 
  2446  1FEB                     	;# 
  2447  1FED                     	;# 
  2448  1FEE                     	;# 
  2449  1FEF                     	;# 
  2450  0000                     	;# 
  2451  0001                     	;# 
  2452  0002                     	;# 
  2453  0003                     	;# 
  2454  0004                     	;# 
  2455  0005                     	;# 
  2456  0006                     	;# 
  2457  0007                     	;# 
  2458  0008                     	;# 
  2459  0009                     	;# 
  2460  000A                     	;# 
  2461  000B                     	;# 
  2462  000C                     	;# 
  2463  000D                     	;# 
  2464  000E                     	;# 
  2465  0012                     	;# 
  2466  0013                     	;# 
  2467  0014                     	;# 
  2468  0018                     	;# 
  2469  0019                     	;# 
  2470  001A                     	;# 
  2471  008C                     	;# 
  2472  008C                     	;# 
  2473  008D                     	;# 
  2474  008E                     	;# 
  2475  008E                     	;# 
  2476  008F                     	;# 
  2477  0090                     	;# 
  2478  0090                     	;# 
  2479  0091                     	;# 
  2480  0092                     	;# 
  2481  0092                     	;# 
  2482  0093                     	;# 
  2483  0094                     	;# 
  2484  0094                     	;# 
  2485  0095                     	;# 
  2486  0096                     	;# 
  2487  0096                     	;# 
  2488  0097                     	;# 
  2489  0098                     	;# 
  2490  0099                     	;# 
  2491  009A                     	;# 
  2492  009B                     	;# 
  2493  009B                     	;# 
  2494  009C                     	;# 
  2495  009D                     	;# 
  2496  009D                     	;# 
  2497  009E                     	;# 
  2498  009F                     	;# 
  2499  010C                     	;# 
  2500  010C                     	;# 
  2501  010D                     	;# 
  2502  010E                     	;# 
  2503  010F                     	;# 
  2504  010F                     	;# 
  2505  0110                     	;# 
  2506  0111                     	;# 
  2507  0112                     	;# 
  2508  0113                     	;# 
  2509  0114                     	;# 
  2510  0115                     	;# 
  2511  0116                     	;# 
  2512  0117                     	;# 
  2513  0118                     	;# 
  2514  0119                     	;# 
  2515  0119                     	;# 
  2516  0119                     	;# 
  2517  011A                     	;# 
  2518  011A                     	;# 
  2519  011A                     	;# 
  2520  011B                     	;# 
  2521  011B                     	;# 
  2522  011B                     	;# 
  2523  011B                     	;# 
  2524  011B                     	;# 
  2525  011C                     	;# 
  2526  011C                     	;# 
  2527  011C                     	;# 
  2528  011D                     	;# 
  2529  011D                     	;# 
  2530  011D                     	;# 
  2531  011E                     	;# 
  2532  011E                     	;# 
  2533  011E                     	;# 
  2534  011F                     	;# 
  2535  011F                     	;# 
  2536  011F                     	;# 
  2537  011F                     	;# 
  2538  011F                     	;# 
  2539  018C                     	;# 
  2540  018D                     	;# 
  2541  018E                     	;# 
  2542  018F                     	;# 
  2543  0190                     	;# 
  2544  0191                     	;# 
  2545  0192                     	;# 
  2546  0196                     	;# 
  2547  0197                     	;# 
  2548  0198                     	;# 
  2549  0199                     	;# 
  2550  019A                     	;# 
  2551  019B                     	;# 
  2552  019C                     	;# 
  2553  020C                     	;# 
  2554  020D                     	;# 
  2555  020E                     	;# 
  2556  020E                     	;# 
  2557  020F                     	;# 
  2558  020F                     	;# 
  2559  0210                     	;# 
  2560  0210                     	;# 
  2561  0211                     	;# 
  2562  0211                     	;# 
  2563  0212                     	;# 
  2564  0213                     	;# 
  2565  0214                     	;# 
  2566  0214                     	;# 
  2567  0215                     	;# 
  2568  0215                     	;# 
  2569  0216                     	;# 
  2570  0216                     	;# 
  2571  0217                     	;# 
  2572  0217                     	;# 
  2573  0218                     	;# 
  2574  0219                     	;# 
  2575  021A                     	;# 
  2576  021A                     	;# 
  2577  021B                     	;# 
  2578  021B                     	;# 
  2579  021C                     	;# 
  2580  021C                     	;# 
  2581  021D                     	;# 
  2582  021D                     	;# 
  2583  021E                     	;# 
  2584  021F                     	;# 
  2585  028C                     	;# 
  2586  028C                     	;# 
  2587  028D                     	;# 
  2588  028D                     	;# 
  2589  028E                     	;# 
  2590  028F                     	;# 
  2591  0290                     	;# 
  2592  0291                     	;# 
  2593  0292                     	;# 
  2594  0292                     	;# 
  2595  0293                     	;# 
  2596  0293                     	;# 
  2597  0294                     	;# 
  2598  0295                     	;# 
  2599  0296                     	;# 
  2600  0297                     	;# 
  2601  0298                     	;# 
  2602  0298                     	;# 
  2603  0299                     	;# 
  2604  0299                     	;# 
  2605  029A                     	;# 
  2606  029B                     	;# 
  2607  029C                     	;# 
  2608  029D                     	;# 
  2609  029F                     	;# 
  2610  030C                     	;# 
  2611  030C                     	;# 
  2612  030D                     	;# 
  2613  030E                     	;# 
  2614  030F                     	;# 
  2615  0310                     	;# 
  2616  0310                     	;# 
  2617  0311                     	;# 
  2618  0312                     	;# 
  2619  0313                     	;# 
  2620  0314                     	;# 
  2621  0314                     	;# 
  2622  0315                     	;# 
  2623  0316                     	;# 
  2624  0317                     	;# 
  2625  0318                     	;# 
  2626  0318                     	;# 
  2627  0319                     	;# 
  2628  031A                     	;# 
  2629  031B                     	;# 
  2630  038C                     	;# 
  2631  038C                     	;# 
  2632  038D                     	;# 
  2633  038E                     	;# 
  2634  0390                     	;# 
  2635  0390                     	;# 
  2636  0391                     	;# 
  2637  0392                     	;# 
  2638  048C                     	;# 
  2639  048C                     	;# 
  2640  048D                     	;# 
  2641  048E                     	;# 
  2642  048F                     	;# 
  2643  048F                     	;# 
  2644  0490                     	;# 
  2645  0491                     	;# 
  2646  0492                     	;# 
  2647  0492                     	;# 
  2648  0493                     	;# 
  2649  0494                     	;# 
  2650  0495                     	;# 
  2651  0495                     	;# 
  2652  0496                     	;# 
  2653  0497                     	;# 
  2654  0498                     	;# 
  2655  0499                     	;# 
  2656  049A                     	;# 
  2657  049B                     	;# 
  2658  049C                     	;# 
  2659  049D                     	;# 
  2660  058C                     	;# 
  2661  058C                     	;# 
  2662  058D                     	;# 
  2663  058E                     	;# 
  2664  058F                     	;# 
  2665  058F                     	;# 
  2666  0590                     	;# 
  2667  0591                     	;# 
  2668  0592                     	;# 
  2669  0593                     	;# 
  2670  059C                     	;# 
  2671  059C                     	;# 
  2672  059D                     	;# 
  2673  059D                     	;# 
  2674  059E                     	;# 
  2675  059F                     	;# 
  2676  060C                     	;# 
  2677  060C                     	;# 
  2678  060D                     	;# 
  2679  060D                     	;# 
  2680  060E                     	;# 
  2681  060F                     	;# 
  2682  0610                     	;# 
  2683  0611                     	;# 
  2684  0612                     	;# 
  2685  0613                     	;# 
  2686  0614                     	;# 
  2687  0616                     	;# 
  2688  0616                     	;# 
  2689  0617                     	;# 
  2690  0617                     	;# 
  2691  0618                     	;# 
  2692  0619                     	;# 
  2693  061A                     	;# 
  2694  061B                     	;# 
  2695  061C                     	;# 
  2696  061D                     	;# 
  2697  061E                     	;# 
  2698  070C                     	;# 
  2699  070D                     	;# 
  2700  070E                     	;# 
  2701  070F                     	;# 
  2702  0710                     	;# 
  2703  0711                     	;# 
  2704  0712                     	;# 
  2705  0713                     	;# 
  2706  0714                     	;# 
  2707  0716                     	;# 
  2708  0717                     	;# 
  2709  0718                     	;# 
  2710  0719                     	;# 
  2711  071A                     	;# 
  2712  071B                     	;# 
  2713  071C                     	;# 
  2714  071D                     	;# 
  2715  071E                     	;# 
  2716  0796                     	;# 
  2717  0797                     	;# 
  2718  0798                     	;# 
  2719  0799                     	;# 
  2720  079A                     	;# 
  2721  079B                     	;# 
  2722  079C                     	;# 
  2723  079D                     	;# 
  2724  080C                     	;# 
  2725  080D                     	;# 
  2726  080E                     	;# 
  2727  080F                     	;# 
  2728  0810                     	;# 
  2729  0811                     	;# 
  2730  0812                     	;# 
  2731  0813                     	;# 
  2732  0814                     	;# 
  2733  081A                     	;# 
  2734  081A                     	;# 
  2735  081B                     	;# 
  2736  081C                     	;# 
  2737  081C                     	;# 
  2738  081D                     	;# 
  2739  081E                     	;# 
  2740  081F                     	;# 
  2741  088C                     	;# 
  2742  088D                     	;# 
  2743  088E                     	;# 
  2744  088F                     	;# 
  2745  0890                     	;# 
  2746  0891                     	;# 
  2747  0892                     	;# 
  2748  0893                     	;# 
  2749  0895                     	;# 
  2750  0896                     	;# 
  2751  0897                     	;# 
  2752  0898                     	;# 
  2753  0899                     	;# 
  2754  089A                     	;# 
  2755  089B                     	;# 
  2756  090C                     	;# 
  2757  090E                     	;# 
  2758  090F                     	;# 
  2759  091F                     	;# 
  2760  098F                     	;# 
  2761  098F                     	;# 
  2762  0990                     	;# 
  2763  0991                     	;# 
  2764  0992                     	;# 
  2765  0993                     	;# 
  2766  0994                     	;# 
  2767  0995                     	;# 
  2768  0996                     	;# 
  2769  0997                     	;# 
  2770  1E0F                     	;# 
  2771  1E10                     	;# 
  2772  1E11                     	;# 
  2773  1E12                     	;# 
  2774  1E13                     	;# 
  2775  1E14                     	;# 
  2776  1E15                     	;# 
  2777  1E16                     	;# 
  2778  1E17                     	;# 
  2779  1E18                     	;# 
  2780  1E19                     	;# 
  2781  1E1A                     	;# 
  2782  1E1B                     	;# 
  2783  1E1C                     	;# 
  2784  1E1D                     	;# 
  2785  1E1E                     	;# 
  2786  1E1F                     	;# 
  2787  1E20                     	;# 
  2788  1E21                     	;# 
  2789  1E22                     	;# 
  2790  1E23                     	;# 
  2791  1E24                     	;# 
  2792  1E25                     	;# 
  2793  1E26                     	;# 
  2794  1E27                     	;# 
  2795  1E28                     	;# 
  2796  1E29                     	;# 
  2797  1E2A                     	;# 
  2798  1E2B                     	;# 
  2799  1E2C                     	;# 
  2800  1E2D                     	;# 
  2801  1E2E                     	;# 
  2802  1E2F                     	;# 
  2803  1E30                     	;# 
  2804  1E31                     	;# 
  2805  1E32                     	;# 
  2806  1E33                     	;# 
  2807  1E34                     	;# 
  2808  1E35                     	;# 
  2809  1E36                     	;# 
  2810  1E37                     	;# 
  2811  1E8F                     	;# 
  2812  1E90                     	;# 
  2813  1E91                     	;# 
  2814  1E92                     	;# 
  2815  1E93                     	;# 
  2816  1E94                     	;# 
  2817  1E95                     	;# 
  2818  1E96                     	;# 
  2819  1E97                     	;# 
  2820  1E9C                     	;# 
  2821  1E9D                     	;# 
  2822  1E9E                     	;# 
  2823  1EA1                     	;# 
  2824  1EA2                     	;# 
  2825  1EA3                     	;# 
  2826  1EA4                     	;# 
  2827  1EA9                     	;# 
  2828  1EAA                     	;# 
  2829  1EB1                     	;# 
  2830  1EB2                     	;# 
  2831  1EB8                     	;# 
  2832  1EB9                     	;# 
  2833  1EBA                     	;# 
  2834  1EBB                     	;# 
  2835  1EBC                     	;# 
  2836  1EBD                     	;# 
  2837  1EBE                     	;# 
  2838  1EC3                     	;# 
  2839  1EC5                     	;# 
  2840  1EC6                     	;# 
  2841  1EC7                     	;# 
  2842  1EC8                     	;# 
  2843  1EC9                     	;# 
  2844  1ECA                     	;# 
  2845  1ECB                     	;# 
  2846  1ECB                     	;# 
  2847  1ECB                     	;# 
  2848  1ECC                     	;# 
  2849  1ECC                     	;# 
  2850  1ECC                     	;# 
  2851  1F10                     	;# 
  2852  1F11                     	;# 
  2853  1F12                     	;# 
  2854  1F14                     	;# 
  2855  1F15                     	;# 
  2856  1F1C                     	;# 
  2857  1F1D                     	;# 
  2858  1F1E                     	;# 
  2859  1F1F                     	;# 
  2860  1F20                     	;# 
  2861  1F21                     	;# 
  2862  1F22                     	;# 
  2863  1F23                     	;# 
  2864  1F24                     	;# 
  2865  1F25                     	;# 
  2866  1F26                     	;# 
  2867  1F27                     	;# 
  2868  1F38                     	;# 
  2869  1F39                     	;# 
  2870  1F3A                     	;# 
  2871  1F3B                     	;# 
  2872  1F3C                     	;# 
  2873  1F3D                     	;# 
  2874  1F3E                     	;# 
  2875  1F3F                     	;# 
  2876  1F43                     	;# 
  2877  1F44                     	;# 
  2878  1F45                     	;# 
  2879  1F46                     	;# 
  2880  1F47                     	;# 
  2881  1F48                     	;# 
  2882  1F49                     	;# 
  2883  1F4A                     	;# 
  2884  1F4E                     	;# 
  2885  1F4F                     	;# 
  2886  1F50                     	;# 
  2887  1F51                     	;# 
  2888  1F52                     	;# 
  2889  1F53                     	;# 
  2890  1F54                     	;# 
  2891  1F55                     	;# 
  2892  1FE4                     	;# 
  2893  1FE5                     	;# 
  2894  1FE6                     	;# 
  2895  1FE7                     	;# 
  2896  1FE8                     	;# 
  2897  1FE8                     	;# 
  2898  1FE9                     	;# 
  2899  1FEA                     	;# 
  2900  1FEB                     	;# 
  2901  1FED                     	;# 
  2902  1FEE                     	;# 
  2903  1FEF                     	;# 
  2904  0000                     	;# 
  2905  0001                     	;# 
  2906  0002                     	;# 
  2907  0003                     	;# 
  2908  0004                     	;# 
  2909  0005                     	;# 
  2910  0006                     	;# 
  2911  0007                     	;# 
  2912  0008                     	;# 
  2913  0009                     	;# 
  2914  000A                     	;# 
  2915  000B                     	;# 
  2916  000C                     	;# 
  2917  000D                     	;# 
  2918  000E                     	;# 
  2919  0012                     	;# 
  2920  0013                     	;# 
  2921  0014                     	;# 
  2922  0018                     	;# 
  2923  0019                     	;# 
  2924  001A                     	;# 
  2925  008C                     	;# 
  2926  008C                     	;# 
  2927  008D                     	;# 
  2928  008E                     	;# 
  2929  008E                     	;# 
  2930  008F                     	;# 
  2931  0090                     	;# 
  2932  0090                     	;# 
  2933  0091                     	;# 
  2934  0092                     	;# 
  2935  0092                     	;# 
  2936  0093                     	;# 
  2937  0094                     	;# 
  2938  0094                     	;# 
  2939  0095                     	;# 
  2940  0096                     	;# 
  2941  0096                     	;# 
  2942  0097                     	;# 
  2943  0098                     	;# 
  2944  0099                     	;# 
  2945  009A                     	;# 
  2946  009B                     	;# 
  2947  009B                     	;# 
  2948  009C                     	;# 
  2949  009D                     	;# 
  2950  009D                     	;# 
  2951  009E                     	;# 
  2952  009F                     	;# 
  2953  010C                     	;# 
  2954  010C                     	;# 
  2955  010D                     	;# 
  2956  010E                     	;# 
  2957  010F                     	;# 
  2958  010F                     	;# 
  2959  0110                     	;# 
  2960  0111                     	;# 
  2961  0112                     	;# 
  2962  0113                     	;# 
  2963  0114                     	;# 
  2964  0115                     	;# 
  2965  0116                     	;# 
  2966  0117                     	;# 
  2967  0118                     	;# 
  2968  0119                     	;# 
  2969  0119                     	;# 
  2970  0119                     	;# 
  2971  011A                     	;# 
  2972  011A                     	;# 
  2973  011A                     	;# 
  2974  011B                     	;# 
  2975  011B                     	;# 
  2976  011B                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011C                     	;# 
  2980  011C                     	;# 
  2981  011C                     	;# 
  2982  011D                     	;# 
  2983  011D                     	;# 
  2984  011D                     	;# 
  2985  011E                     	;# 
  2986  011E                     	;# 
  2987  011E                     	;# 
  2988  011F                     	;# 
  2989  011F                     	;# 
  2990  011F                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  018C                     	;# 
  2994  018D                     	;# 
  2995  018E                     	;# 
  2996  018F                     	;# 
  2997  0190                     	;# 
  2998  0191                     	;# 
  2999  0192                     	;# 
  3000  0196                     	;# 
  3001  0197                     	;# 
  3002  0198                     	;# 
  3003  0199                     	;# 
  3004  019A                     	;# 
  3005  019B                     	;# 
  3006  019C                     	;# 
  3007  020C                     	;# 
  3008  020D                     	;# 
  3009  020E                     	;# 
  3010  020E                     	;# 
  3011  020F                     	;# 
  3012  020F                     	;# 
  3013  0210                     	;# 
  3014  0210                     	;# 
  3015  0211                     	;# 
  3016  0211                     	;# 
  3017  0212                     	;# 
  3018  0213                     	;# 
  3019  0214                     	;# 
  3020  0214                     	;# 
  3021  0215                     	;# 
  3022  0215                     	;# 
  3023  0216                     	;# 
  3024  0216                     	;# 
  3025  0217                     	;# 
  3026  0217                     	;# 
  3027  0218                     	;# 
  3028  0219                     	;# 
  3029  021A                     	;# 
  3030  021A                     	;# 
  3031  021B                     	;# 
  3032  021B                     	;# 
  3033  021C                     	;# 
  3034  021C                     	;# 
  3035  021D                     	;# 
  3036  021D                     	;# 
  3037  021E                     	;# 
  3038  021F                     	;# 
  3039  028C                     	;# 
  3040  028C                     	;# 
  3041  028D                     	;# 
  3042  028D                     	;# 
  3043  028E                     	;# 
  3044  028F                     	;# 
  3045  0290                     	;# 
  3046  0291                     	;# 
  3047  0292                     	;# 
  3048  0292                     	;# 
  3049  0293                     	;# 
  3050  0293                     	;# 
  3051  0294                     	;# 
  3052  0295                     	;# 
  3053  0296                     	;# 
  3054  0297                     	;# 
  3055  0298                     	;# 
  3056  0298                     	;# 
  3057  0299                     	;# 
  3058  0299                     	;# 
  3059  029A                     	;# 
  3060  029B                     	;# 
  3061  029C                     	;# 
  3062  029D                     	;# 
  3063  029F                     	;# 
  3064  030C                     	;# 
  3065  030C                     	;# 
  3066  030D                     	;# 
  3067  030E                     	;# 
  3068  030F                     	;# 
  3069  0310                     	;# 
  3070  0310                     	;# 
  3071  0311                     	;# 
  3072  0312                     	;# 
  3073  0313                     	;# 
  3074  0314                     	;# 
  3075  0314                     	;# 
  3076  0315                     	;# 
  3077  0316                     	;# 
  3078  0317                     	;# 
  3079  0318                     	;# 
  3080  0318                     	;# 
  3081  0319                     	;# 
  3082  031A                     	;# 
  3083  031B                     	;# 
  3084  038C                     	;# 
  3085  038C                     	;# 
  3086  038D                     	;# 
  3087  038E                     	;# 
  3088  0390                     	;# 
  3089  0390                     	;# 
  3090  0391                     	;# 
  3091  0392                     	;# 
  3092  048C                     	;# 
  3093  048C                     	;# 
  3094  048D                     	;# 
  3095  048E                     	;# 
  3096  048F                     	;# 
  3097  048F                     	;# 
  3098  0490                     	;# 
  3099  0491                     	;# 
  3100  0492                     	;# 
  3101  0492                     	;# 
  3102  0493                     	;# 
  3103  0494                     	;# 
  3104  0495                     	;# 
  3105  0495                     	;# 
  3106  0496                     	;# 
  3107  0497                     	;# 
  3108  0498                     	;# 
  3109  0499                     	;# 
  3110  049A                     	;# 
  3111  049B                     	;# 
  3112  049C                     	;# 
  3113  049D                     	;# 
  3114  058C                     	;# 
  3115  058C                     	;# 
  3116  058D                     	;# 
  3117  058E                     	;# 
  3118  058F                     	;# 
  3119  058F                     	;# 
  3120  0590                     	;# 
  3121  0591                     	;# 
  3122  0592                     	;# 
  3123  0593                     	;# 
  3124  059C                     	;# 
  3125  059C                     	;# 
  3126  059D                     	;# 
  3127  059D                     	;# 
  3128  059E                     	;# 
  3129  059F                     	;# 
  3130  060C                     	;# 
  3131  060C                     	;# 
  3132  060D                     	;# 
  3133  060D                     	;# 
  3134  060E                     	;# 
  3135  060F                     	;# 
  3136  0610                     	;# 
  3137  0611                     	;# 
  3138  0612                     	;# 
  3139  0613                     	;# 
  3140  0614                     	;# 
  3141  0616                     	;# 
  3142  0616                     	;# 
  3143  0617                     	;# 
  3144  0617                     	;# 
  3145  0618                     	;# 
  3146  0619                     	;# 
  3147  061A                     	;# 
  3148  061B                     	;# 
  3149  061C                     	;# 
  3150  061D                     	;# 
  3151  061E                     	;# 
  3152  070C                     	;# 
  3153  070D                     	;# 
  3154  070E                     	;# 
  3155  070F                     	;# 
  3156  0710                     	;# 
  3157  0711                     	;# 
  3158  0712                     	;# 
  3159  0713                     	;# 
  3160  0714                     	;# 
  3161  0716                     	;# 
  3162  0717                     	;# 
  3163  0718                     	;# 
  3164  0719                     	;# 
  3165  071A                     	;# 
  3166  071B                     	;# 
  3167  071C                     	;# 
  3168  071D                     	;# 
  3169  071E                     	;# 
  3170  0796                     	;# 
  3171  0797                     	;# 
  3172  0798                     	;# 
  3173  0799                     	;# 
  3174  079A                     	;# 
  3175  079B                     	;# 
  3176  079C                     	;# 
  3177  079D                     	;# 
  3178  080C                     	;# 
  3179  080D                     	;# 
  3180  080E                     	;# 
  3181  080F                     	;# 
  3182  0810                     	;# 
  3183  0811                     	;# 
  3184  0812                     	;# 
  3185  0813                     	;# 
  3186  0814                     	;# 
  3187  081A                     	;# 
  3188  081A                     	;# 
  3189  081B                     	;# 
  3190  081C                     	;# 
  3191  081C                     	;# 
  3192  081D                     	;# 
  3193  081E                     	;# 
  3194  081F                     	;# 
  3195  088C                     	;# 
  3196  088D                     	;# 
  3197  088E                     	;# 
  3198  088F                     	;# 
  3199  0890                     	;# 
  3200  0891                     	;# 
  3201  0892                     	;# 
  3202  0893                     	;# 
  3203  0895                     	;# 
  3204  0896                     	;# 
  3205  0897                     	;# 
  3206  0898                     	;# 
  3207  0899                     	;# 
  3208  089A                     	;# 
  3209  089B                     	;# 
  3210  090C                     	;# 
  3211  090E                     	;# 
  3212  090F                     	;# 
  3213  091F                     	;# 
  3214  098F                     	;# 
  3215  098F                     	;# 
  3216  0990                     	;# 
  3217  0991                     	;# 
  3218  0992                     	;# 
  3219  0993                     	;# 
  3220  0994                     	;# 
  3221  0995                     	;# 
  3222  0996                     	;# 
  3223  0997                     	;# 
  3224  1E0F                     	;# 
  3225  1E10                     	;# 
  3226  1E11                     	;# 
  3227  1E12                     	;# 
  3228  1E13                     	;# 
  3229  1E14                     	;# 
  3230  1E15                     	;# 
  3231  1E16                     	;# 
  3232  1E17                     	;# 
  3233  1E18                     	;# 
  3234  1E19                     	;# 
  3235  1E1A                     	;# 
  3236  1E1B                     	;# 
  3237  1E1C                     	;# 
  3238  1E1D                     	;# 
  3239  1E1E                     	;# 
  3240  1E1F                     	;# 
  3241  1E20                     	;# 
  3242  1E21                     	;# 
  3243  1E22                     	;# 
  3244  1E23                     	;# 
  3245  1E24                     	;# 
  3246  1E25                     	;# 
  3247  1E26                     	;# 
  3248  1E27                     	;# 
  3249  1E28                     	;# 
  3250  1E29                     	;# 
  3251  1E2A                     	;# 
  3252  1E2B                     	;# 
  3253  1E2C                     	;# 
  3254  1E2D                     	;# 
  3255  1E2E                     	;# 
  3256  1E2F                     	;# 
  3257  1E30                     	;# 
  3258  1E31                     	;# 
  3259  1E32                     	;# 
  3260  1E33                     	;# 
  3261  1E34                     	;# 
  3262  1E35                     	;# 
  3263  1E36                     	;# 
  3264  1E37                     	;# 
  3265  1E8F                     	;# 
  3266  1E90                     	;# 
  3267  1E91                     	;# 
  3268  1E92                     	;# 
  3269  1E93                     	;# 
  3270  1E94                     	;# 
  3271  1E95                     	;# 
  3272  1E96                     	;# 
  3273  1E97                     	;# 
  3274  1E9C                     	;# 
  3275  1E9D                     	;# 
  3276  1E9E                     	;# 
  3277  1EA1                     	;# 
  3278  1EA2                     	;# 
  3279  1EA3                     	;# 
  3280  1EA4                     	;# 
  3281  1EA9                     	;# 
  3282  1EAA                     	;# 
  3283  1EB1                     	;# 
  3284  1EB2                     	;# 
  3285  1EB8                     	;# 
  3286  1EB9                     	;# 
  3287  1EBA                     	;# 
  3288  1EBB                     	;# 
  3289  1EBC                     	;# 
  3290  1EBD                     	;# 
  3291  1EBE                     	;# 
  3292  1EC3                     	;# 
  3293  1EC5                     	;# 
  3294  1EC6                     	;# 
  3295  1EC7                     	;# 
  3296  1EC8                     	;# 
  3297  1EC9                     	;# 
  3298  1ECA                     	;# 
  3299  1ECB                     	;# 
  3300  1ECB                     	;# 
  3301  1ECB                     	;# 
  3302  1ECC                     	;# 
  3303  1ECC                     	;# 
  3304  1ECC                     	;# 
  3305  1F10                     	;# 
  3306  1F11                     	;# 
  3307  1F12                     	;# 
  3308  1F14                     	;# 
  3309  1F15                     	;# 
  3310  1F1C                     	;# 
  3311  1F1D                     	;# 
  3312  1F1E                     	;# 
  3313  1F1F                     	;# 
  3314  1F20                     	;# 
  3315  1F21                     	;# 
  3316  1F22                     	;# 
  3317  1F23                     	;# 
  3318  1F24                     	;# 
  3319  1F25                     	;# 
  3320  1F26                     	;# 
  3321  1F27                     	;# 
  3322  1F38                     	;# 
  3323  1F39                     	;# 
  3324  1F3A                     	;# 
  3325  1F3B                     	;# 
  3326  1F3C                     	;# 
  3327  1F3D                     	;# 
  3328  1F3E                     	;# 
  3329  1F3F                     	;# 
  3330  1F43                     	;# 
  3331  1F44                     	;# 
  3332  1F45                     	;# 
  3333  1F46                     	;# 
  3334  1F47                     	;# 
  3335  1F48                     	;# 
  3336  1F49                     	;# 
  3337  1F4A                     	;# 
  3338  1F4E                     	;# 
  3339  1F4F                     	;# 
  3340  1F50                     	;# 
  3341  1F51                     	;# 
  3342  1F52                     	;# 
  3343  1F53                     	;# 
  3344  1F54                     	;# 
  3345  1F55                     	;# 
  3346  1FE4                     	;# 
  3347  1FE5                     	;# 
  3348  1FE6                     	;# 
  3349  1FE7                     	;# 
  3350  1FE8                     	;# 
  3351  1FE8                     	;# 
  3352  1FE9                     	;# 
  3353  1FEA                     	;# 
  3354  1FEB                     	;# 
  3355  1FED                     	;# 
  3356  1FEE                     	;# 
  3357  1FEF                     	;# 
  3358  0000                     	;# 
  3359  0001                     	;# 
  3360  0002                     	;# 
  3361  0003                     	;# 
  3362  0004                     	;# 
  3363  0005                     	;# 
  3364  0006                     	;# 
  3365  0007                     	;# 
  3366  0008                     	;# 
  3367  0009                     	;# 
  3368  000A                     	;# 
  3369  000B                     	;# 
  3370  000C                     	;# 
  3371  000D                     	;# 
  3372  000E                     	;# 
  3373  0012                     	;# 
  3374  0013                     	;# 
  3375  0014                     	;# 
  3376  0018                     	;# 
  3377  0019                     	;# 
  3378  001A                     	;# 
  3379  008C                     	;# 
  3380  008C                     	;# 
  3381  008D                     	;# 
  3382  008E                     	;# 
  3383  008E                     	;# 
  3384  008F                     	;# 
  3385  0090                     	;# 
  3386  0090                     	;# 
  3387  0091                     	;# 
  3388  0092                     	;# 
  3389  0092                     	;# 
  3390  0093                     	;# 
  3391  0094                     	;# 
  3392  0094                     	;# 
  3393  0095                     	;# 
  3394  0096                     	;# 
  3395  0096                     	;# 
  3396  0097                     	;# 
  3397  0098                     	;# 
  3398  0099                     	;# 
  3399  009A                     	;# 
  3400  009B                     	;# 
  3401  009B                     	;# 
  3402  009C                     	;# 
  3403  009D                     	;# 
  3404  009D                     	;# 
  3405  009E                     	;# 
  3406  009F                     	;# 
  3407  010C                     	;# 
  3408  010C                     	;# 
  3409  010D                     	;# 
  3410  010E                     	;# 
  3411  010F                     	;# 
  3412  010F                     	;# 
  3413  0110                     	;# 
  3414  0111                     	;# 
  3415  0112                     	;# 
  3416  0113                     	;# 
  3417  0114                     	;# 
  3418  0115                     	;# 
  3419  0116                     	;# 
  3420  0117                     	;# 
  3421  0118                     	;# 
  3422  0119                     	;# 
  3423  0119                     	;# 
  3424  0119                     	;# 
  3425  011A                     	;# 
  3426  011A                     	;# 
  3427  011A                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011B                     	;# 
  3432  011B                     	;# 
  3433  011C                     	;# 
  3434  011C                     	;# 
  3435  011C                     	;# 
  3436  011D                     	;# 
  3437  011D                     	;# 
  3438  011D                     	;# 
  3439  011E                     	;# 
  3440  011E                     	;# 
  3441  011E                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  011F                     	;# 
  3446  011F                     	;# 
  3447  018C                     	;# 
  3448  018D                     	;# 
  3449  018E                     	;# 
  3450  018F                     	;# 
  3451  0190                     	;# 
  3452  0191                     	;# 
  3453  0192                     	;# 
  3454  0196                     	;# 
  3455  0197                     	;# 
  3456  0198                     	;# 
  3457  0199                     	;# 
  3458  019A                     	;# 
  3459  019B                     	;# 
  3460  019C                     	;# 
  3461  020C                     	;# 
  3462  020D                     	;# 
  3463  020E                     	;# 
  3464  020E                     	;# 
  3465  020F                     	;# 
  3466  020F                     	;# 
  3467  0210                     	;# 
  3468  0210                     	;# 
  3469  0211                     	;# 
  3470  0211                     	;# 
  3471  0212                     	;# 
  3472  0213                     	;# 
  3473  0214                     	;# 
  3474  0214                     	;# 
  3475  0215                     	;# 
  3476  0215                     	;# 
  3477  0216                     	;# 
  3478  0216                     	;# 
  3479  0217                     	;# 
  3480  0217                     	;# 
  3481  0218                     	;# 
  3482  0219                     	;# 
  3483  021A                     	;# 
  3484  021A                     	;# 
  3485  021B                     	;# 
  3486  021B                     	;# 
  3487  021C                     	;# 
  3488  021C                     	;# 
  3489  021D                     	;# 
  3490  021D                     	;# 
  3491  021E                     	;# 
  3492  021F                     	;# 
  3493  028C                     	;# 
  3494  028C                     	;# 
  3495  028D                     	;# 
  3496  028D                     	;# 
  3497  028E                     	;# 
  3498  028F                     	;# 
  3499  0290                     	;# 
  3500  0291                     	;# 
  3501  0292                     	;# 
  3502  0292                     	;# 
  3503  0293                     	;# 
  3504  0293                     	;# 
  3505  0294                     	;# 
  3506  0295                     	;# 
  3507  0296                     	;# 
  3508  0297                     	;# 
  3509  0298                     	;# 
  3510  0298                     	;# 
  3511  0299                     	;# 
  3512  0299                     	;# 
  3513  029A                     	;# 
  3514  029B                     	;# 
  3515  029C                     	;# 
  3516  029D                     	;# 
  3517  029F                     	;# 
  3518  030C                     	;# 
  3519  030C                     	;# 
  3520  030D                     	;# 
  3521  030E                     	;# 
  3522  030F                     	;# 
  3523  0310                     	;# 
  3524  0310                     	;# 
  3525  0311                     	;# 
  3526  0312                     	;# 
  3527  0313                     	;# 
  3528  0314                     	;# 
  3529  0314                     	;# 
  3530  0315                     	;# 
  3531  0316                     	;# 
  3532  0317                     	;# 
  3533  0318                     	;# 
  3534  0318                     	;# 
  3535  0319                     	;# 
  3536  031A                     	;# 
  3537  031B                     	;# 
  3538  038C                     	;# 
  3539  038C                     	;# 
  3540  038D                     	;# 
  3541  038E                     	;# 
  3542  0390                     	;# 
  3543  0390                     	;# 
  3544  0391                     	;# 
  3545  0392                     	;# 
  3546  048C                     	;# 
  3547  048C                     	;# 
  3548  048D                     	;# 
  3549  048E                     	;# 
  3550  048F                     	;# 
  3551  048F                     	;# 
  3552  0490                     	;# 
  3553  0491                     	;# 
  3554  0492                     	;# 
  3555  0492                     	;# 
  3556  0493                     	;# 
  3557  0494                     	;# 
  3558  0495                     	;# 
  3559  0495                     	;# 
  3560  0496                     	;# 
  3561  0497                     	;# 
  3562  0498                     	;# 
  3563  0499                     	;# 
  3564  049A                     	;# 
  3565  049B                     	;# 
  3566  049C                     	;# 
  3567  049D                     	;# 
  3568  058C                     	;# 
  3569  058C                     	;# 
  3570  058D                     	;# 
  3571  058E                     	;# 
  3572  058F                     	;# 
  3573  058F                     	;# 
  3574  0590                     	;# 
  3575  0591                     	;# 
  3576  0592                     	;# 
  3577  0593                     	;# 
  3578  059C                     	;# 
  3579  059C                     	;# 
  3580  059D                     	;# 
  3581  059D                     	;# 
  3582  059E                     	;# 
  3583  059F                     	;# 
  3584  060C                     	;# 
  3585  060C                     	;# 
  3586  060D                     	;# 
  3587  060D                     	;# 
  3588  060E                     	;# 
  3589  060F                     	;# 
  3590  0610                     	;# 
  3591  0611                     	;# 
  3592  0612                     	;# 
  3593  0613                     	;# 
  3594  0614                     	;# 
  3595  0616                     	;# 
  3596  0616                     	;# 
  3597  0617                     	;# 
  3598  0617                     	;# 
  3599  0618                     	;# 
  3600  0619                     	;# 
  3601  061A                     	;# 
  3602  061B                     	;# 
  3603  061C                     	;# 
  3604  061D                     	;# 
  3605  061E                     	;# 
  3606  070C                     	;# 
  3607  070D                     	;# 
  3608  070E                     	;# 
  3609  070F                     	;# 
  3610  0710                     	;# 
  3611  0711                     	;# 
  3612  0712                     	;# 
  3613  0713                     	;# 
  3614  0714                     	;# 
  3615  0716                     	;# 
  3616  0717                     	;# 
  3617  0718                     	;# 
  3618  0719                     	;# 
  3619  071A                     	;# 
  3620  071B                     	;# 
  3621  071C                     	;# 
  3622  071D                     	;# 
  3623  071E                     	;# 
  3624  0796                     	;# 
  3625  0797                     	;# 
  3626  0798                     	;# 
  3627  0799                     	;# 
  3628  079A                     	;# 
  3629  079B                     	;# 
  3630  079C                     	;# 
  3631  079D                     	;# 
  3632  080C                     	;# 
  3633  080D                     	;# 
  3634  080E                     	;# 
  3635  080F                     	;# 
  3636  0810                     	;# 
  3637  0811                     	;# 
  3638  0812                     	;# 
  3639  0813                     	;# 
  3640  0814                     	;# 
  3641  081A                     	;# 
  3642  081A                     	;# 
  3643  081B                     	;# 
  3644  081C                     	;# 
  3645  081C                     	;# 
  3646  081D                     	;# 
  3647  081E                     	;# 
  3648  081F                     	;# 
  3649  088C                     	;# 
  3650  088D                     	;# 
  3651  088E                     	;# 
  3652  088F                     	;# 
  3653  0890                     	;# 
  3654  0891                     	;# 
  3655  0892                     	;# 
  3656  0893                     	;# 
  3657  0895                     	;# 
  3658  0896                     	;# 
  3659  0897                     	;# 
  3660  0898                     	;# 
  3661  0899                     	;# 
  3662  089A                     	;# 
  3663  089B                     	;# 
  3664  090C                     	;# 
  3665  090E                     	;# 
  3666  090F                     	;# 
  3667  091F                     	;# 
  3668  098F                     	;# 
  3669  098F                     	;# 
  3670  0990                     	;# 
  3671  0991                     	;# 
  3672  0992                     	;# 
  3673  0993                     	;# 
  3674  0994                     	;# 
  3675  0995                     	;# 
  3676  0996                     	;# 
  3677  0997                     	;# 
  3678  1E0F                     	;# 
  3679  1E10                     	;# 
  3680  1E11                     	;# 
  3681  1E12                     	;# 
  3682  1E13                     	;# 
  3683  1E14                     	;# 
  3684  1E15                     	;# 
  3685  1E16                     	;# 
  3686  1E17                     	;# 
  3687  1E18                     	;# 
  3688  1E19                     	;# 
  3689  1E1A                     	;# 
  3690  1E1B                     	;# 
  3691  1E1C                     	;# 
  3692  1E1D                     	;# 
  3693  1E1E                     	;# 
  3694  1E1F                     	;# 
  3695  1E20                     	;# 
  3696  1E21                     	;# 
  3697  1E22                     	;# 
  3698  1E23                     	;# 
  3699  1E24                     	;# 
  3700  1E25                     	;# 
  3701  1E26                     	;# 
  3702  1E27                     	;# 
  3703  1E28                     	;# 
  3704  1E29                     	;# 
  3705  1E2A                     	;# 
  3706  1E2B                     	;# 
  3707  1E2C                     	;# 
  3708  1E2D                     	;# 
  3709  1E2E                     	;# 
  3710  1E2F                     	;# 
  3711  1E30                     	;# 
  3712  1E31                     	;# 
  3713  1E32                     	;# 
  3714  1E33                     	;# 
  3715  1E34                     	;# 
  3716  1E35                     	;# 
  3717  1E36                     	;# 
  3718  1E37                     	;# 
  3719  1E8F                     	;# 
  3720  1E90                     	;# 
  3721  1E91                     	;# 
  3722  1E92                     	;# 
  3723  1E93                     	;# 
  3724  1E94                     	;# 
  3725  1E95                     	;# 
  3726  1E96                     	;# 
  3727  1E97                     	;# 
  3728  1E9C                     	;# 
  3729  1E9D                     	;# 
  3730  1E9E                     	;# 
  3731  1EA1                     	;# 
  3732  1EA2                     	;# 
  3733  1EA3                     	;# 
  3734  1EA4                     	;# 
  3735  1EA9                     	;# 
  3736  1EAA                     	;# 
  3737  1EB1                     	;# 
  3738  1EB2                     	;# 
  3739  1EB8                     	;# 
  3740  1EB9                     	;# 
  3741  1EBA                     	;# 
  3742  1EBB                     	;# 
  3743  1EBC                     	;# 
  3744  1EBD                     	;# 
  3745  1EBE                     	;# 
  3746  1EC3                     	;# 
  3747  1EC5                     	;# 
  3748  1EC6                     	;# 
  3749  1EC7                     	;# 
  3750  1EC8                     	;# 
  3751  1EC9                     	;# 
  3752  1ECA                     	;# 
  3753  1ECB                     	;# 
  3754  1ECB                     	;# 
  3755  1ECB                     	;# 
  3756  1ECC                     	;# 
  3757  1ECC                     	;# 
  3758  1ECC                     	;# 
  3759  1F10                     	;# 
  3760  1F11                     	;# 
  3761  1F12                     	;# 
  3762  1F14                     	;# 
  3763  1F15                     	;# 
  3764  1F1C                     	;# 
  3765  1F1D                     	;# 
  3766  1F1E                     	;# 
  3767  1F1F                     	;# 
  3768  1F20                     	;# 
  3769  1F21                     	;# 
  3770  1F22                     	;# 
  3771  1F23                     	;# 
  3772  1F24                     	;# 
  3773  1F25                     	;# 
  3774  1F26                     	;# 
  3775  1F27                     	;# 
  3776  1F38                     	;# 
  3777  1F39                     	;# 
  3778  1F3A                     	;# 
  3779  1F3B                     	;# 
  3780  1F3C                     	;# 
  3781  1F3D                     	;# 
  3782  1F3E                     	;# 
  3783  1F3F                     	;# 
  3784  1F43                     	;# 
  3785  1F44                     	;# 
  3786  1F45                     	;# 
  3787  1F46                     	;# 
  3788  1F47                     	;# 
  3789  1F48                     	;# 
  3790  1F49                     	;# 
  3791  1F4A                     	;# 
  3792  1F4E                     	;# 
  3793  1F4F                     	;# 
  3794  1F50                     	;# 
  3795  1F51                     	;# 
  3796  1F52                     	;# 
  3797  1F53                     	;# 
  3798  1F54                     	;# 
  3799  1F55                     	;# 
  3800  1FE4                     	;# 
  3801  1FE5                     	;# 
  3802  1FE6                     	;# 
  3803  1FE7                     	;# 
  3804  1FE8                     	;# 
  3805  1FE8                     	;# 
  3806  1FE9                     	;# 
  3807  1FEA                     	;# 
  3808  1FEB                     	;# 
  3809  1FED                     	;# 
  3810  1FEE                     	;# 
  3811  1FEF                     	;# 
  3812  0000                     	;# 
  3813  0001                     	;# 
  3814  0002                     	;# 
  3815  0003                     	;# 
  3816  0004                     	;# 
  3817  0005                     	;# 
  3818  0006                     	;# 
  3819  0007                     	;# 
  3820  0008                     	;# 
  3821  0009                     	;# 
  3822  000A                     	;# 
  3823  000B                     	;# 
  3824  000C                     	;# 
  3825  000D                     	;# 
  3826  000E                     	;# 
  3827  0012                     	;# 
  3828  0013                     	;# 
  3829  0014                     	;# 
  3830  0018                     	;# 
  3831  0019                     	;# 
  3832  001A                     	;# 
  3833  008C                     	;# 
  3834  008C                     	;# 
  3835  008D                     	;# 
  3836  008E                     	;# 
  3837  008E                     	;# 
  3838  008F                     	;# 
  3839  0090                     	;# 
  3840  0090                     	;# 
  3841  0091                     	;# 
  3842  0092                     	;# 
  3843  0092                     	;# 
  3844  0093                     	;# 
  3845  0094                     	;# 
  3846  0094                     	;# 
  3847  0095                     	;# 
  3848  0096                     	;# 
  3849  0096                     	;# 
  3850  0097                     	;# 
  3851  0098                     	;# 
  3852  0099                     	;# 
  3853  009A                     	;# 
  3854  009B                     	;# 
  3855  009B                     	;# 
  3856  009C                     	;# 
  3857  009D                     	;# 
  3858  009D                     	;# 
  3859  009E                     	;# 
  3860  009F                     	;# 
  3861  010C                     	;# 
  3862  010C                     	;# 
  3863  010D                     	;# 
  3864  010E                     	;# 
  3865  010F                     	;# 
  3866  010F                     	;# 
  3867  0110                     	;# 
  3868  0111                     	;# 
  3869  0112                     	;# 
  3870  0113                     	;# 
  3871  0114                     	;# 
  3872  0115                     	;# 
  3873  0116                     	;# 
  3874  0117                     	;# 
  3875  0118                     	;# 
  3876  0119                     	;# 
  3877  0119                     	;# 
  3878  0119                     	;# 
  3879  011A                     	;# 
  3880  011A                     	;# 
  3881  011A                     	;# 
  3882  011B                     	;# 
  3883  011B                     	;# 
  3884  011B                     	;# 
  3885  011B                     	;# 
  3886  011B                     	;# 
  3887  011C                     	;# 
  3888  011C                     	;# 
  3889  011C                     	;# 
  3890  011D                     	;# 
  3891  011D                     	;# 
  3892  011D                     	;# 
  3893  011E                     	;# 
  3894  011E                     	;# 
  3895  011E                     	;# 
  3896  011F                     	;# 
  3897  011F                     	;# 
  3898  011F                     	;# 
  3899  011F                     	;# 
  3900  011F                     	;# 
  3901  018C                     	;# 
  3902  018D                     	;# 
  3903  018E                     	;# 
  3904  018F                     	;# 
  3905  0190                     	;# 
  3906  0191                     	;# 
  3907  0192                     	;# 
  3908  0196                     	;# 
  3909  0197                     	;# 
  3910  0198                     	;# 
  3911  0199                     	;# 
  3912  019A                     	;# 
  3913  019B                     	;# 
  3914  019C                     	;# 
  3915  020C                     	;# 
  3916  020D                     	;# 
  3917  020E                     	;# 
  3918  020E                     	;# 
  3919  020F                     	;# 
  3920  020F                     	;# 
  3921  0210                     	;# 
  3922  0210                     	;# 
  3923  0211                     	;# 
  3924  0211                     	;# 
  3925  0212                     	;# 
  3926  0213                     	;# 
  3927  0214                     	;# 
  3928  0214                     	;# 
  3929  0215                     	;# 
  3930  0215                     	;# 
  3931  0216                     	;# 
  3932  0216                     	;# 
  3933  0217                     	;# 
  3934  0217                     	;# 
  3935  0218                     	;# 
  3936  0219                     	;# 
  3937  021A                     	;# 
  3938  021A                     	;# 
  3939  021B                     	;# 
  3940  021B                     	;# 
  3941  021C                     	;# 
  3942  021C                     	;# 
  3943  021D                     	;# 
  3944  021D                     	;# 
  3945  021E                     	;# 
  3946  021F                     	;# 
  3947  028C                     	;# 
  3948  028C                     	;# 
  3949  028D                     	;# 
  3950  028D                     	;# 
  3951  028E                     	;# 
  3952  028F                     	;# 
  3953  0290                     	;# 
  3954  0291                     	;# 
  3955  0292                     	;# 
  3956  0292                     	;# 
  3957  0293                     	;# 
  3958  0293                     	;# 
  3959  0294                     	;# 
  3960  0295                     	;# 
  3961  0296                     	;# 
  3962  0297                     	;# 
  3963  0298                     	;# 
  3964  0298                     	;# 
  3965  0299                     	;# 
  3966  0299                     	;# 
  3967  029A                     	;# 
  3968  029B                     	;# 
  3969  029C                     	;# 
  3970  029D                     	;# 
  3971  029F                     	;# 
  3972  030C                     	;# 
  3973  030C                     	;# 
  3974  030D                     	;# 
  3975  030E                     	;# 
  3976  030F                     	;# 
  3977  0310                     	;# 
  3978  0310                     	;# 
  3979  0311                     	;# 
  3980  0312                     	;# 
  3981  0313                     	;# 
  3982  0314                     	;# 
  3983  0314                     	;# 
  3984  0315                     	;# 
  3985  0316                     	;# 
  3986  0317                     	;# 
  3987  0318                     	;# 
  3988  0318                     	;# 
  3989  0319                     	;# 
  3990  031A                     	;# 
  3991  031B                     	;# 
  3992  038C                     	;# 
  3993  038C                     	;# 
  3994  038D                     	;# 
  3995  038E                     	;# 
  3996  0390                     	;# 
  3997  0390                     	;# 
  3998  0391                     	;# 
  3999  0392                     	;# 
  4000  048C                     	;# 
  4001  048C                     	;# 
  4002  048D                     	;# 
  4003  048E                     	;# 
  4004  048F                     	;# 
  4005  048F                     	;# 
  4006  0490                     	;# 
  4007  0491                     	;# 
  4008  0492                     	;# 
  4009  0492                     	;# 
  4010  0493                     	;# 
  4011  0494                     	;# 
  4012  0495                     	;# 
  4013  0495                     	;# 
  4014  0496                     	;# 
  4015  0497                     	;# 
  4016  0498                     	;# 
  4017  0499                     	;# 
  4018  049A                     	;# 
  4019  049B                     	;# 
  4020  049C                     	;# 
  4021  049D                     	;# 
  4022  058C                     	;# 
  4023  058C                     	;# 
  4024  058D                     	;# 
  4025  058E                     	;# 
  4026  058F                     	;# 
  4027  058F                     	;# 
  4028  0590                     	;# 
  4029  0591                     	;# 
  4030  0592                     	;# 
  4031  0593                     	;# 
  4032  059C                     	;# 
  4033  059C                     	;# 
  4034  059D                     	;# 
  4035  059D                     	;# 
  4036  059E                     	;# 
  4037  059F                     	;# 
  4038  060C                     	;# 
  4039  060C                     	;# 
  4040  060D                     	;# 
  4041  060D                     	;# 
  4042  060E                     	;# 
  4043  060F                     	;# 
  4044  0610                     	;# 
  4045  0611                     	;# 
  4046  0612                     	;# 
  4047  0613                     	;# 
  4048  0614                     	;# 
  4049  0616                     	;# 
  4050  0616                     	;# 
  4051  0617                     	;# 
  4052  0617                     	;# 
  4053  0618                     	;# 
  4054  0619                     	;# 
  4055  061A                     	;# 
  4056  061B                     	;# 
  4057  061C                     	;# 
  4058  061D                     	;# 
  4059  061E                     	;# 
  4060  070C                     	;# 
  4061  070D                     	;# 
  4062  070E                     	;# 
  4063  070F                     	;# 
  4064  0710                     	;# 
  4065  0711                     	;# 
  4066  0712                     	;# 
  4067  0713                     	;# 
  4068  0714                     	;# 
  4069  0716                     	;# 
  4070  0717                     	;# 
  4071  0718                     	;# 
  4072  0719                     	;# 
  4073  071A                     	;# 
  4074  071B                     	;# 
  4075  071C                     	;# 
  4076  071D                     	;# 
  4077  071E                     	;# 
  4078  0796                     	;# 
  4079  0797                     	;# 
  4080  0798                     	;# 
  4081  0799                     	;# 
  4082  079A                     	;# 
  4083  079B                     	;# 
  4084  079C                     	;# 
  4085  079D                     	;# 
  4086  080C                     	;# 
  4087  080D                     	;# 
  4088  080E                     	;# 
  4089  080F                     	;# 
  4090  0810                     	;# 
  4091  0811                     	;# 
  4092  0812                     	;# 
  4093  0813                     	;# 
  4094  0814                     	;# 
  4095  081A                     	;# 
  4096  081A                     	;# 
  4097  081B                     	;# 
  4098  081C                     	;# 
  4099  081C                     	;# 
  4100  081D                     	;# 
  4101  081E                     	;# 
  4102  081F                     	;# 
  4103  088C                     	;# 
  4104  088D                     	;# 
  4105  088E                     	;# 
  4106  088F                     	;# 
  4107  0890                     	;# 
  4108  0891                     	;# 
  4109  0892                     	;# 
  4110  0893                     	;# 
  4111  0895                     	;# 
  4112  0896                     	;# 
  4113  0897                     	;# 
  4114  0898                     	;# 
  4115  0899                     	;# 
  4116  089A                     	;# 
  4117  089B                     	;# 
  4118  090C                     	;# 
  4119  090E                     	;# 
  4120  090F                     	;# 
  4121  091F                     	;# 
  4122  098F                     	;# 
  4123  098F                     	;# 
  4124  0990                     	;# 
  4125  0991                     	;# 
  4126  0992                     	;# 
  4127  0993                     	;# 
  4128  0994                     	;# 
  4129  0995                     	;# 
  4130  0996                     	;# 
  4131  0997                     	;# 
  4132  1E0F                     	;# 
  4133  1E10                     	;# 
  4134  1E11                     	;# 
  4135  1E12                     	;# 
  4136  1E13                     	;# 
  4137  1E14                     	;# 
  4138  1E15                     	;# 
  4139  1E16                     	;# 
  4140  1E17                     	;# 
  4141  1E18                     	;# 
  4142  1E19                     	;# 
  4143  1E1A                     	;# 
  4144  1E1B                     	;# 
  4145  1E1C                     	;# 
  4146  1E1D                     	;# 
  4147  1E1E                     	;# 
  4148  1E1F                     	;# 
  4149  1E20                     	;# 
  4150  1E21                     	;# 
  4151  1E22                     	;# 
  4152  1E23                     	;# 
  4153  1E24                     	;# 
  4154  1E25                     	;# 
  4155  1E26                     	;# 
  4156  1E27                     	;# 
  4157  1E28                     	;# 
  4158  1E29                     	;# 
  4159  1E2A                     	;# 
  4160  1E2B                     	;# 
  4161  1E2C                     	;# 
  4162  1E2D                     	;# 
  4163  1E2E                     	;# 
  4164  1E2F                     	;# 
  4165  1E30                     	;# 
  4166  1E31                     	;# 
  4167  1E32                     	;# 
  4168  1E33                     	;# 
  4169  1E34                     	;# 
  4170  1E35                     	;# 
  4171  1E36                     	;# 
  4172  1E37                     	;# 
  4173  1E8F                     	;# 
  4174  1E90                     	;# 
  4175  1E91                     	;# 
  4176  1E92                     	;# 
  4177  1E93                     	;# 
  4178  1E94                     	;# 
  4179  1E95                     	;# 
  4180  1E96                     	;# 
  4181  1E97                     	;# 
  4182  1E9C                     	;# 
  4183  1E9D                     	;# 
  4184  1E9E                     	;# 
  4185  1EA1                     	;# 
  4186  1EA2                     	;# 
  4187  1EA3                     	;# 
  4188  1EA4                     	;# 
  4189  1EA9                     	;# 
  4190  1EAA                     	;# 
  4191  1EB1                     	;# 
  4192  1EB2                     	;# 
  4193  1EB8                     	;# 
  4194  1EB9                     	;# 
  4195  1EBA                     	;# 
  4196  1EBB                     	;# 
  4197  1EBC                     	;# 
  4198  1EBD                     	;# 
  4199  1EBE                     	;# 
  4200  1EC3                     	;# 
  4201  1EC5                     	;# 
  4202  1EC6                     	;# 
  4203  1EC7                     	;# 
  4204  1EC8                     	;# 
  4205  1EC9                     	;# 
  4206  1ECA                     	;# 
  4207  1ECB                     	;# 
  4208  1ECB                     	;# 
  4209  1ECB                     	;# 
  4210  1ECC                     	;# 
  4211  1ECC                     	;# 
  4212  1ECC                     	;# 
  4213  1F10                     	;# 
  4214  1F11                     	;# 
  4215  1F12                     	;# 
  4216  1F14                     	;# 
  4217  1F15                     	;# 
  4218  1F1C                     	;# 
  4219  1F1D                     	;# 
  4220  1F1E                     	;# 
  4221  1F1F                     	;# 
  4222  1F20                     	;# 
  4223  1F21                     	;# 
  4224  1F22                     	;# 
  4225  1F23                     	;# 
  4226  1F24                     	;# 
  4227  1F25                     	;# 
  4228  1F26                     	;# 
  4229  1F27                     	;# 
  4230  1F38                     	;# 
  4231  1F39                     	;# 
  4232  1F3A                     	;# 
  4233  1F3B                     	;# 
  4234  1F3C                     	;# 
  4235  1F3D                     	;# 
  4236  1F3E                     	;# 
  4237  1F3F                     	;# 
  4238  1F43                     	;# 
  4239  1F44                     	;# 
  4240  1F45                     	;# 
  4241  1F46                     	;# 
  4242  1F47                     	;# 
  4243  1F48                     	;# 
  4244  1F49                     	;# 
  4245  1F4A                     	;# 
  4246  1F4E                     	;# 
  4247  1F4F                     	;# 
  4248  1F50                     	;# 
  4249  1F51                     	;# 
  4250  1F52                     	;# 
  4251  1F53                     	;# 
  4252  1F54                     	;# 
  4253  1F55                     	;# 
  4254  1FE4                     	;# 
  4255  1FE5                     	;# 
  4256  1FE6                     	;# 
  4257  1FE7                     	;# 
  4258  1FE8                     	;# 
  4259  1FE8                     	;# 
  4260  1FE9                     	;# 
  4261  1FEA                     	;# 
  4262  1FEB                     	;# 
  4263  1FED                     	;# 
  4264  1FEE                     	;# 
  4265  1FEF                     	;# 
  4266  0000                     	;# 
  4267  0001                     	;# 
  4268  0002                     	;# 
  4269  0003                     	;# 
  4270  0004                     	;# 
  4271  0005                     	;# 
  4272  0006                     	;# 
  4273  0007                     	;# 
  4274  0008                     	;# 
  4275  0009                     	;# 
  4276  000A                     	;# 
  4277  000B                     	;# 
  4278  000C                     	;# 
  4279  000D                     	;# 
  4280  000E                     	;# 
  4281  0012                     	;# 
  4282  0013                     	;# 
  4283  0014                     	;# 
  4284  0018                     	;# 
  4285  0019                     	;# 
  4286  001A                     	;# 
  4287  008C                     	;# 
  4288  008C                     	;# 
  4289  008D                     	;# 
  4290  008E                     	;# 
  4291  008E                     	;# 
  4292  008F                     	;# 
  4293  0090                     	;# 
  4294  0090                     	;# 
  4295  0091                     	;# 
  4296  0092                     	;# 
  4297  0092                     	;# 
  4298  0093                     	;# 
  4299  0094                     	;# 
  4300  0094                     	;# 
  4301  0095                     	;# 
  4302  0096                     	;# 
  4303  0096                     	;# 
  4304  0097                     	;# 
  4305  0098                     	;# 
  4306  0099                     	;# 
  4307  009A                     	;# 
  4308  009B                     	;# 
  4309  009B                     	;# 
  4310  009C                     	;# 
  4311  009D                     	;# 
  4312  009D                     	;# 
  4313  009E                     	;# 
  4314  009F                     	;# 
  4315  010C                     	;# 
  4316  010C                     	;# 
  4317  010D                     	;# 
  4318  010E                     	;# 
  4319  010F                     	;# 
  4320  010F                     	;# 
  4321  0110                     	;# 
  4322  0111                     	;# 
  4323  0112                     	;# 
  4324  0113                     	;# 
  4325  0114                     	;# 
  4326  0115                     	;# 
  4327  0116                     	;# 
  4328  0117                     	;# 
  4329  0118                     	;# 
  4330  0119                     	;# 
  4331  0119                     	;# 
  4332  0119                     	;# 
  4333  011A                     	;# 
  4334  011A                     	;# 
  4335  011A                     	;# 
  4336  011B                     	;# 
  4337  011B                     	;# 
  4338  011B                     	;# 
  4339  011B                     	;# 
  4340  011B                     	;# 
  4341  011C                     	;# 
  4342  011C                     	;# 
  4343  011C                     	;# 
  4344  011D                     	;# 
  4345  011D                     	;# 
  4346  011D                     	;# 
  4347  011E                     	;# 
  4348  011E                     	;# 
  4349  011E                     	;# 
  4350  011F                     	;# 
  4351  011F                     	;# 
  4352  011F                     	;# 
  4353  011F                     	;# 
  4354  011F                     	;# 
  4355  018C                     	;# 
  4356  018D                     	;# 
  4357  018E                     	;# 
  4358  018F                     	;# 
  4359  0190                     	;# 
  4360  0191                     	;# 
  4361  0192                     	;# 
  4362  0196                     	;# 
  4363  0197                     	;# 
  4364  0198                     	;# 
  4365  0199                     	;# 
  4366  019A                     	;# 
  4367  019B                     	;# 
  4368  019C                     	;# 
  4369  020C                     	;# 
  4370  020D                     	;# 
  4371  020E                     	;# 
  4372  020E                     	;# 
  4373  020F                     	;# 
  4374  020F                     	;# 
  4375  0210                     	;# 
  4376  0210                     	;# 
  4377  0211                     	;# 
  4378  0211                     	;# 
  4379  0212                     	;# 
  4380  0213                     	;# 
  4381  0214                     	;# 
  4382  0214                     	;# 
  4383  0215                     	;# 
  4384  0215                     	;# 
  4385  0216                     	;# 
  4386  0216                     	;# 
  4387  0217                     	;# 
  4388  0217                     	;# 
  4389  0218                     	;# 
  4390  0219                     	;# 
  4391  021A                     	;# 
  4392  021A                     	;# 
  4393  021B                     	;# 
  4394  021B                     	;# 
  4395  021C                     	;# 
  4396  021C                     	;# 
  4397  021D                     	;# 
  4398  021D                     	;# 
  4399  021E                     	;# 
  4400  021F                     	;# 
  4401  028C                     	;# 
  4402  028C                     	;# 
  4403  028D                     	;# 
  4404  028D                     	;# 
  4405  028E                     	;# 
  4406  028F                     	;# 
  4407  0290                     	;# 
  4408  0291                     	;# 
  4409  0292                     	;# 
  4410  0292                     	;# 
  4411  0293                     	;# 
  4412  0293                     	;# 
  4413  0294                     	;# 
  4414  0295                     	;# 
  4415  0296                     	;# 
  4416  0297                     	;# 
  4417  0298                     	;# 
  4418  0298                     	;# 
  4419  0299                     	;# 
  4420  0299                     	;# 
  4421  029A                     	;# 
  4422  029B                     	;# 
  4423  029C                     	;# 
  4424  029D                     	;# 
  4425  029F                     	;# 
  4426  030C                     	;# 
  4427  030C                     	;# 
  4428  030D                     	;# 
  4429  030E                     	;# 
  4430  030F                     	;# 
  4431  0310                     	;# 
  4432  0310                     	;# 
  4433  0311                     	;# 
  4434  0312                     	;# 
  4435  0313                     	;# 
  4436  0314                     	;# 
  4437  0314                     	;# 
  4438  0315                     	;# 
  4439  0316                     	;# 
  4440  0317                     	;# 
  4441  0318                     	;# 
  4442  0318                     	;# 
  4443  0319                     	;# 
  4444  031A                     	;# 
  4445  031B                     	;# 
  4446  038C                     	;# 
  4447  038C                     	;# 
  4448  038D                     	;# 
  4449  038E                     	;# 
  4450  0390                     	;# 
  4451  0390                     	;# 
  4452  0391                     	;# 
  4453  0392                     	;# 
  4454  048C                     	;# 
  4455  048C                     	;# 
  4456  048D                     	;# 
  4457  048E                     	;# 
  4458  048F                     	;# 
  4459  048F                     	;# 
  4460  0490                     	;# 
  4461  0491                     	;# 
  4462  0492                     	;# 
  4463  0492                     	;# 
  4464  0493                     	;# 
  4465  0494                     	;# 
  4466  0495                     	;# 
  4467  0495                     	;# 
  4468  0496                     	;# 
  4469  0497                     	;# 
  4470  0498                     	;# 
  4471  0499                     	;# 
  4472  049A                     	;# 
  4473  049B                     	;# 
  4474  049C                     	;# 
  4475  049D                     	;# 
  4476  058C                     	;# 
  4477  058C                     	;# 
  4478  058D                     	;# 
  4479  058E                     	;# 
  4480  058F                     	;# 
  4481  058F                     	;# 
  4482  0590                     	;# 
  4483  0591                     	;# 
  4484  0592                     	;# 
  4485  0593                     	;# 
  4486  059C                     	;# 
  4487  059C                     	;# 
  4488  059D                     	;# 
  4489  059D                     	;# 
  4490  059E                     	;# 
  4491  059F                     	;# 
  4492  060C                     	;# 
  4493  060C                     	;# 
  4494  060D                     	;# 
  4495  060D                     	;# 
  4496  060E                     	;# 
  4497  060F                     	;# 
  4498  0610                     	;# 
  4499  0611                     	;# 
  4500  0612                     	;# 
  4501  0613                     	;# 
  4502  0614                     	;# 
  4503  0616                     	;# 
  4504  0616                     	;# 
  4505  0617                     	;# 
  4506  0617                     	;# 
  4507  0618                     	;# 
  4508  0619                     	;# 
  4509  061A                     	;# 
  4510  061B                     	;# 
  4511  061C                     	;# 
  4512  061D                     	;# 
  4513  061E                     	;# 
  4514  070C                     	;# 
  4515  070D                     	;# 
  4516  070E                     	;# 
  4517  070F                     	;# 
  4518  0710                     	;# 
  4519  0711                     	;# 
  4520  0712                     	;# 
  4521  0713                     	;# 
  4522  0714                     	;# 
  4523  0716                     	;# 
  4524  0717                     	;# 
  4525  0718                     	;# 
  4526  0719                     	;# 
  4527  071A                     	;# 
  4528  071B                     	;# 
  4529  071C                     	;# 
  4530  071D                     	;# 
  4531  071E                     	;# 
  4532  0796                     	;# 
  4533  0797                     	;# 
  4534  0798                     	;# 
  4535  0799                     	;# 
  4536  079A                     	;# 
  4537  079B                     	;# 
  4538  079C                     	;# 
  4539  079D                     	;# 
  4540  080C                     	;# 
  4541  080D                     	;# 
  4542  080E                     	;# 
  4543  080F                     	;# 
  4544  0810                     	;# 
  4545  0811                     	;# 
  4546  0812                     	;# 
  4547  0813                     	;# 
  4548  0814                     	;# 
  4549  081A                     	;# 
  4550  081A                     	;# 
  4551  081B                     	;# 
  4552  081C                     	;# 
  4553  081C                     	;# 
  4554  081D                     	;# 
  4555  081E                     	;# 
  4556  081F                     	;# 
  4557  088C                     	;# 
  4558  088D                     	;# 
  4559  088E                     	;# 
  4560  088F                     	;# 
  4561  0890                     	;# 
  4562  0891                     	;# 
  4563  0892                     	;# 
  4564  0893                     	;# 
  4565  0895                     	;# 
  4566  0896                     	;# 
  4567  0897                     	;# 
  4568  0898                     	;# 
  4569  0899                     	;# 
  4570  089A                     	;# 
  4571  089B                     	;# 
  4572  090C                     	;# 
  4573  090E                     	;# 
  4574  090F                     	;# 
  4575  091F                     	;# 
  4576  098F                     	;# 
  4577  098F                     	;# 
  4578  0990                     	;# 
  4579  0991                     	;# 
  4580  0992                     	;# 
  4581  0993                     	;# 
  4582  0994                     	;# 
  4583  0995                     	;# 
  4584  0996                     	;# 
  4585  0997                     	;# 
  4586  1E0F                     	;# 
  4587  1E10                     	;# 
  4588  1E11                     	;# 
  4589  1E12                     	;# 
  4590  1E13                     	;# 
  4591  1E14                     	;# 
  4592  1E15                     	;# 
  4593  1E16                     	;# 
  4594  1E17                     	;# 
  4595  1E18                     	;# 
  4596  1E19                     	;# 
  4597  1E1A                     	;# 
  4598  1E1B                     	;# 
  4599  1E1C                     	;# 
  4600  1E1D                     	;# 
  4601  1E1E                     	;# 
  4602  1E1F                     	;# 
  4603  1E20                     	;# 
  4604  1E21                     	;# 
  4605  1E22                     	;# 
  4606  1E23                     	;# 
  4607  1E24                     	;# 
  4608  1E25                     	;# 
  4609  1E26                     	;# 
  4610  1E27                     	;# 
  4611  1E28                     	;# 
  4612  1E29                     	;# 
  4613  1E2A                     	;# 
  4614  1E2B                     	;# 
  4615  1E2C                     	;# 
  4616  1E2D                     	;# 
  4617  1E2E                     	;# 
  4618  1E2F                     	;# 
  4619  1E30                     	;# 
  4620  1E31                     	;# 
  4621  1E32                     	;# 
  4622  1E33                     	;# 
  4623  1E34                     	;# 
  4624  1E35                     	;# 
  4625  1E36                     	;# 
  4626  1E37                     	;# 
  4627  1E8F                     	;# 
  4628  1E90                     	;# 
  4629  1E91                     	;# 
  4630  1E92                     	;# 
  4631  1E93                     	;# 
  4632  1E94                     	;# 
  4633  1E95                     	;# 
  4634  1E96                     	;# 
  4635  1E97                     	;# 
  4636  1E9C                     	;# 
  4637  1E9D                     	;# 
  4638  1E9E                     	;# 
  4639  1EA1                     	;# 
  4640  1EA2                     	;# 
  4641  1EA3                     	;# 
  4642  1EA4                     	;# 
  4643  1EA9                     	;# 
  4644  1EAA                     	;# 
  4645  1EB1                     	;# 
  4646  1EB2                     	;# 
  4647  1EB8                     	;# 
  4648  1EB9                     	;# 
  4649  1EBA                     	;# 
  4650  1EBB                     	;# 
  4651  1EBC                     	;# 
  4652  1EBD                     	;# 
  4653  1EBE                     	;# 
  4654  1EC3                     	;# 
  4655  1EC5                     	;# 
  4656  1EC6                     	;# 
  4657  1EC7                     	;# 
  4658  1EC8                     	;# 
  4659  1EC9                     	;# 
  4660  1ECA                     	;# 
  4661  1ECB                     	;# 
  4662  1ECB                     	;# 
  4663  1ECB                     	;# 
  4664  1ECC                     	;# 
  4665  1ECC                     	;# 
  4666  1ECC                     	;# 
  4667  1F10                     	;# 
  4668  1F11                     	;# 
  4669  1F12                     	;# 
  4670  1F14                     	;# 
  4671  1F15                     	;# 
  4672  1F1C                     	;# 
  4673  1F1D                     	;# 
  4674  1F1E                     	;# 
  4675  1F1F                     	;# 
  4676  1F20                     	;# 
  4677  1F21                     	;# 
  4678  1F22                     	;# 
  4679  1F23                     	;# 
  4680  1F24                     	;# 
  4681  1F25                     	;# 
  4682  1F26                     	;# 
  4683  1F27                     	;# 
  4684  1F38                     	;# 
  4685  1F39                     	;# 
  4686  1F3A                     	;# 
  4687  1F3B                     	;# 
  4688  1F3C                     	;# 
  4689  1F3D                     	;# 
  4690  1F3E                     	;# 
  4691  1F3F                     	;# 
  4692  1F43                     	;# 
  4693  1F44                     	;# 
  4694  1F45                     	;# 
  4695  1F46                     	;# 
  4696  1F47                     	;# 
  4697  1F48                     	;# 
  4698  1F49                     	;# 
  4699  1F4A                     	;# 
  4700  1F4E                     	;# 
  4701  1F4F                     	;# 
  4702  1F50                     	;# 
  4703  1F51                     	;# 
  4704  1F52                     	;# 
  4705  1F53                     	;# 
  4706  1F54                     	;# 
  4707  1F55                     	;# 
  4708  1FE4                     	;# 
  4709  1FE5                     	;# 
  4710  1FE6                     	;# 
  4711  1FE7                     	;# 
  4712  1FE8                     	;# 
  4713  1FE8                     	;# 
  4714  1FE9                     	;# 
  4715  1FEA                     	;# 
  4716  1FEB                     	;# 
  4717  1FED                     	;# 
  4718  1FEE                     	;# 
  4719  1FEF                     	;# 
  4720  0000                     	;# 
  4721  0001                     	;# 
  4722  0002                     	;# 
  4723  0003                     	;# 
  4724  0004                     	;# 
  4725  0005                     	;# 
  4726  0006                     	;# 
  4727  0007                     	;# 
  4728  0008                     	;# 
  4729  0009                     	;# 
  4730  000A                     	;# 
  4731  000B                     	;# 
  4732  000C                     	;# 
  4733  000D                     	;# 
  4734  000E                     	;# 
  4735  0012                     	;# 
  4736  0013                     	;# 
  4737  0014                     	;# 
  4738  0018                     	;# 
  4739  0019                     	;# 
  4740  001A                     	;# 
  4741  008C                     	;# 
  4742  008C                     	;# 
  4743  008D                     	;# 
  4744  008E                     	;# 
  4745  008E                     	;# 
  4746  008F                     	;# 
  4747  0090                     	;# 
  4748  0090                     	;# 
  4749  0091                     	;# 
  4750  0092                     	;# 
  4751  0092                     	;# 
  4752  0093                     	;# 
  4753  0094                     	;# 
  4754  0094                     	;# 
  4755  0095                     	;# 
  4756  0096                     	;# 
  4757  0096                     	;# 
  4758  0097                     	;# 
  4759  0098                     	;# 
  4760  0099                     	;# 
  4761  009A                     	;# 
  4762  009B                     	;# 
  4763  009B                     	;# 
  4764  009C                     	;# 
  4765  009D                     	;# 
  4766  009D                     	;# 
  4767  009E                     	;# 
  4768  009F                     	;# 
  4769  010C                     	;# 
  4770  010C                     	;# 
  4771  010D                     	;# 
  4772  010E                     	;# 
  4773  010F                     	;# 
  4774  010F                     	;# 
  4775  0110                     	;# 
  4776  0111                     	;# 
  4777  0112                     	;# 
  4778  0113                     	;# 
  4779  0114                     	;# 
  4780  0115                     	;# 
  4781  0116                     	;# 
  4782  0117                     	;# 
  4783  0118                     	;# 
  4784  0119                     	;# 
  4785  0119                     	;# 
  4786  0119                     	;# 
  4787  011A                     	;# 
  4788  011A                     	;# 
  4789  011A                     	;# 
  4790  011B                     	;# 
  4791  011B                     	;# 
  4792  011B                     	;# 
  4793  011B                     	;# 
  4794  011B                     	;# 
  4795  011C                     	;# 
  4796  011C                     	;# 
  4797  011C                     	;# 
  4798  011D                     	;# 
  4799  011D                     	;# 
  4800  011D                     	;# 
  4801  011E                     	;# 
  4802  011E                     	;# 
  4803  011E                     	;# 
  4804  011F                     	;# 
  4805  011F                     	;# 
  4806  011F                     	;# 
  4807  011F                     	;# 
  4808  011F                     	;# 
  4809  018C                     	;# 
  4810  018D                     	;# 
  4811  018E                     	;# 
  4812  018F                     	;# 
  4813  0190                     	;# 
  4814  0191                     	;# 
  4815  0192                     	;# 
  4816  0196                     	;# 
  4817  0197                     	;# 
  4818  0198                     	;# 
  4819  0199                     	;# 
  4820  019A                     	;# 
  4821  019B                     	;# 
  4822  019C                     	;# 
  4823  020C                     	;# 
  4824  020D                     	;# 
  4825  020E                     	;# 
  4826  020E                     	;# 
  4827  020F                     	;# 
  4828  020F                     	;# 
  4829  0210                     	;# 
  4830  0210                     	;# 
  4831  0211                     	;# 
  4832  0211                     	;# 
  4833  0212                     	;# 
  4834  0213                     	;# 
  4835  0214                     	;# 
  4836  0214                     	;# 
  4837  0215                     	;# 
  4838  0215                     	;# 
  4839  0216                     	;# 
  4840  0216                     	;# 
  4841  0217                     	;# 
  4842  0217                     	;# 
  4843  0218                     	;# 
  4844  0219                     	;# 
  4845  021A                     	;# 
  4846  021A                     	;# 
  4847  021B                     	;# 
  4848  021B                     	;# 
  4849  021C                     	;# 
  4850  021C                     	;# 
  4851  021D                     	;# 
  4852  021D                     	;# 
  4853  021E                     	;# 
  4854  021F                     	;# 
  4855  028C                     	;# 
  4856  028C                     	;# 
  4857  028D                     	;# 
  4858  028D                     	;# 
  4859  028E                     	;# 
  4860  028F                     	;# 
  4861  0290                     	;# 
  4862  0291                     	;# 
  4863  0292                     	;# 
  4864  0292                     	;# 
  4865  0293                     	;# 
  4866  0293                     	;# 
  4867  0294                     	;# 
  4868  0295                     	;# 
  4869  0296                     	;# 
  4870  0297                     	;# 
  4871  0298                     	;# 
  4872  0298                     	;# 
  4873  0299                     	;# 
  4874  0299                     	;# 
  4875  029A                     	;# 
  4876  029B                     	;# 
  4877  029C                     	;# 
  4878  029D                     	;# 
  4879  029F                     	;# 
  4880  030C                     	;# 
  4881  030C                     	;# 
  4882  030D                     	;# 
  4883  030E                     	;# 
  4884  030F                     	;# 
  4885  0310                     	;# 
  4886  0310                     	;# 
  4887  0311                     	;# 
  4888  0312                     	;# 
  4889  0313                     	;# 
  4890  0314                     	;# 
  4891  0314                     	;# 
  4892  0315                     	;# 
  4893  0316                     	;# 
  4894  0317                     	;# 
  4895  0318                     	;# 
  4896  0318                     	;# 
  4897  0319                     	;# 
  4898  031A                     	;# 
  4899  031B                     	;# 
  4900  038C                     	;# 
  4901  038C                     	;# 
  4902  038D                     	;# 
  4903  038E                     	;# 
  4904  0390                     	;# 
  4905  0390                     	;# 
  4906  0391                     	;# 
  4907  0392                     	;# 
  4908  048C                     	;# 
  4909  048C                     	;# 
  4910  048D                     	;# 
  4911  048E                     	;# 
  4912  048F                     	;# 
  4913  048F                     	;# 
  4914  0490                     	;# 
  4915  0491                     	;# 
  4916  0492                     	;# 
  4917  0492                     	;# 
  4918  0493                     	;# 
  4919  0494                     	;# 
  4920  0495                     	;# 
  4921  0495                     	;# 
  4922  0496                     	;# 
  4923  0497                     	;# 
  4924  0498                     	;# 
  4925  0499                     	;# 
  4926  049A                     	;# 
  4927  049B                     	;# 
  4928  049C                     	;# 
  4929  049D                     	;# 
  4930  058C                     	;# 
  4931  058C                     	;# 
  4932  058D                     	;# 
  4933  058E                     	;# 
  4934  058F                     	;# 
  4935  058F                     	;# 
  4936  0590                     	;# 
  4937  0591                     	;# 
  4938  0592                     	;# 
  4939  0593                     	;# 
  4940  059C                     	;# 
  4941  059C                     	;# 
  4942  059D                     	;# 
  4943  059D                     	;# 
  4944  059E                     	;# 
  4945  059F                     	;# 
  4946  060C                     	;# 
  4947  060C                     	;# 
  4948  060D                     	;# 
  4949  060D                     	;# 
  4950  060E                     	;# 
  4951  060F                     	;# 
  4952  0610                     	;# 
  4953  0611                     	;# 
  4954  0612                     	;# 
  4955  0613                     	;# 
  4956  0614                     	;# 
  4957  0616                     	;# 
  4958  0616                     	;# 
  4959  0617                     	;# 
  4960  0617                     	;# 
  4961  0618                     	;# 
  4962  0619                     	;# 
  4963  061A                     	;# 
  4964  061B                     	;# 
  4965  061C                     	;# 
  4966  061D                     	;# 
  4967  061E                     	;# 
  4968  070C                     	;# 
  4969  070D                     	;# 
  4970  070E                     	;# 
  4971  070F                     	;# 
  4972  0710                     	;# 
  4973  0711                     	;# 
  4974  0712                     	;# 
  4975  0713                     	;# 
  4976  0714                     	;# 
  4977  0716                     	;# 
  4978  0717                     	;# 
  4979  0718                     	;# 
  4980  0719                     	;# 
  4981  071A                     	;# 
  4982  071B                     	;# 
  4983  071C                     	;# 
  4984  071D                     	;# 
  4985  071E                     	;# 
  4986  0796                     	;# 
  4987  0797                     	;# 
  4988  0798                     	;# 
  4989  0799                     	;# 
  4990  079A                     	;# 
  4991  079B                     	;# 
  4992  079C                     	;# 
  4993  079D                     	;# 
  4994  080C                     	;# 
  4995  080D                     	;# 
  4996  080E                     	;# 
  4997  080F                     	;# 
  4998  0810                     	;# 
  4999  0811                     	;# 
  5000  0812                     	;# 
  5001  0813                     	;# 
  5002  0814                     	;# 
  5003  081A                     	;# 
  5004  081A                     	;# 
  5005  081B                     	;# 
  5006  081C                     	;# 
  5007  081C                     	;# 
  5008  081D                     	;# 
  5009  081E                     	;# 
  5010  081F                     	;# 
  5011  088C                     	;# 
  5012  088D                     	;# 
  5013  088E                     	;# 
  5014  088F                     	;# 
  5015  0890                     	;# 
  5016  0891                     	;# 
  5017  0892                     	;# 
  5018  0893                     	;# 
  5019  0895                     	;# 
  5020  0896                     	;# 
  5021  0897                     	;# 
  5022  0898                     	;# 
  5023  0899                     	;# 
  5024  089A                     	;# 
  5025  089B                     	;# 
  5026  090C                     	;# 
  5027  090E                     	;# 
  5028  090F                     	;# 
  5029  091F                     	;# 
  5030  098F                     	;# 
  5031  098F                     	;# 
  5032  0990                     	;# 
  5033  0991                     	;# 
  5034  0992                     	;# 
  5035  0993                     	;# 
  5036  0994                     	;# 
  5037  0995                     	;# 
  5038  0996                     	;# 
  5039  0997                     	;# 
  5040  1E0F                     	;# 
  5041  1E10                     	;# 
  5042  1E11                     	;# 
  5043  1E12                     	;# 
  5044  1E13                     	;# 
  5045  1E14                     	;# 
  5046  1E15                     	;# 
  5047  1E16                     	;# 
  5048  1E17                     	;# 
  5049  1E18                     	;# 
  5050  1E19                     	;# 
  5051  1E1A                     	;# 
  5052  1E1B                     	;# 
  5053  1E1C                     	;# 
  5054  1E1D                     	;# 
  5055  1E1E                     	;# 
  5056  1E1F                     	;# 
  5057  1E20                     	;# 
  5058  1E21                     	;# 
  5059  1E22                     	;# 
  5060  1E23                     	;# 
  5061  1E24                     	;# 
  5062  1E25                     	;# 
  5063  1E26                     	;# 
  5064  1E27                     	;# 
  5065  1E28                     	;# 
  5066  1E29                     	;# 
  5067  1E2A                     	;# 
  5068  1E2B                     	;# 
  5069  1E2C                     	;# 
  5070  1E2D                     	;# 
  5071  1E2E                     	;# 
  5072  1E2F                     	;# 
  5073  1E30                     	;# 
  5074  1E31                     	;# 
  5075  1E32                     	;# 
  5076  1E33                     	;# 
  5077  1E34                     	;# 
  5078  1E35                     	;# 
  5079  1E36                     	;# 
  5080  1E37                     	;# 
  5081  1E8F                     	;# 
  5082  1E90                     	;# 
  5083  1E91                     	;# 
  5084  1E92                     	;# 
  5085  1E93                     	;# 
  5086  1E94                     	;# 
  5087  1E95                     	;# 
  5088  1E96                     	;# 
  5089  1E97                     	;# 
  5090  1E9C                     	;# 
  5091  1E9D                     	;# 
  5092  1E9E                     	;# 
  5093  1EA1                     	;# 
  5094  1EA2                     	;# 
  5095  1EA3                     	;# 
  5096  1EA4                     	;# 
  5097  1EA9                     	;# 
  5098  1EAA                     	;# 
  5099  1EB1                     	;# 
  5100  1EB2                     	;# 
  5101  1EB8                     	;# 
  5102  1EB9                     	;# 
  5103  1EBA                     	;# 
  5104  1EBB                     	;# 
  5105  1EBC                     	;# 
  5106  1EBD                     	;# 
  5107  1EBE                     	;# 
  5108  1EC3                     	;# 
  5109  1EC5                     	;# 
  5110  1EC6                     	;# 
  5111  1EC7                     	;# 
  5112  1EC8                     	;# 
  5113  1EC9                     	;# 
  5114  1ECA                     	;# 
  5115  1ECB                     	;# 
  5116  1ECB                     	;# 
  5117  1ECB                     	;# 
  5118  1ECC                     	;# 
  5119  1ECC                     	;# 
  5120  1ECC                     	;# 
  5121  1F10                     	;# 
  5122  1F11                     	;# 
  5123  1F12                     	;# 
  5124  1F14                     	;# 
  5125  1F15                     	;# 
  5126  1F1C                     	;# 
  5127  1F1D                     	;# 
  5128  1F1E                     	;# 
  5129  1F1F                     	;# 
  5130  1F20                     	;# 
  5131  1F21                     	;# 
  5132  1F22                     	;# 
  5133  1F23                     	;# 
  5134  1F24                     	;# 
  5135  1F25                     	;# 
  5136  1F26                     	;# 
  5137  1F27                     	;# 
  5138  1F38                     	;# 
  5139  1F39                     	;# 
  5140  1F3A                     	;# 
  5141  1F3B                     	;# 
  5142  1F3C                     	;# 
  5143  1F3D                     	;# 
  5144  1F3E                     	;# 
  5145  1F3F                     	;# 
  5146  1F43                     	;# 
  5147  1F44                     	;# 
  5148  1F45                     	;# 
  5149  1F46                     	;# 
  5150  1F47                     	;# 
  5151  1F48                     	;# 
  5152  1F49                     	;# 
  5153  1F4A                     	;# 
  5154  1F4E                     	;# 
  5155  1F4F                     	;# 
  5156  1F50                     	;# 
  5157  1F51                     	;# 
  5158  1F52                     	;# 
  5159  1F53                     	;# 
  5160  1F54                     	;# 
  5161  1F55                     	;# 
  5162  1FE4                     	;# 
  5163  1FE5                     	;# 
  5164  1FE6                     	;# 
  5165  1FE7                     	;# 
  5166  1FE8                     	;# 
  5167  1FE8                     	;# 
  5168  1FE9                     	;# 
  5169  1FEA                     	;# 
  5170  1FEB                     	;# 
  5171  1FED                     	;# 
  5172  1FEE                     	;# 
  5173  1FEF                     	;# 
  5174  0000                     	;# 
  5175  0001                     	;# 
  5176  0002                     	;# 
  5177  0003                     	;# 
  5178  0004                     	;# 
  5179  0005                     	;# 
  5180  0006                     	;# 
  5181  0007                     	;# 
  5182  0008                     	;# 
  5183  0009                     	;# 
  5184  000A                     	;# 
  5185  000B                     	;# 
  5186  000C                     	;# 
  5187  000D                     	;# 
  5188  000E                     	;# 
  5189  0012                     	;# 
  5190  0013                     	;# 
  5191  0014                     	;# 
  5192  0018                     	;# 
  5193  0019                     	;# 
  5194  001A                     	;# 
  5195  008C                     	;# 
  5196  008C                     	;# 
  5197  008D                     	;# 
  5198  008E                     	;# 
  5199  008E                     	;# 
  5200  008F                     	;# 
  5201  0090                     	;# 
  5202  0090                     	;# 
  5203  0091                     	;# 
  5204  0092                     	;# 
  5205  0092                     	;# 
  5206  0093                     	;# 
  5207  0094                     	;# 
  5208  0094                     	;# 
  5209  0095                     	;# 
  5210  0096                     	;# 
  5211  0096                     	;# 
  5212  0097                     	;# 
  5213  0098                     	;# 
  5214  0099                     	;# 
  5215  009A                     	;# 
  5216  009B                     	;# 
  5217  009B                     	;# 
  5218  009C                     	;# 
  5219  009D                     	;# 
  5220  009D                     	;# 
  5221  009E                     	;# 
  5222  009F                     	;# 
  5223  010C                     	;# 
  5224  010C                     	;# 
  5225  010D                     	;# 
  5226  010E                     	;# 
  5227  010F                     	;# 
  5228  010F                     	;# 
  5229  0110                     	;# 
  5230  0111                     	;# 
  5231  0112                     	;# 
  5232  0113                     	;# 
  5233  0114                     	;# 
  5234  0115                     	;# 
  5235  0116                     	;# 
  5236  0117                     	;# 
  5237  0118                     	;# 
  5238  0119                     	;# 
  5239  0119                     	;# 
  5240  0119                     	;# 
  5241  011A                     	;# 
  5242  011A                     	;# 
  5243  011A                     	;# 
  5244  011B                     	;# 
  5245  011B                     	;# 
  5246  011B                     	;# 
  5247  011B                     	;# 
  5248  011B                     	;# 
  5249  011C                     	;# 
  5250  011C                     	;# 
  5251  011C                     	;# 
  5252  011D                     	;# 
  5253  011D                     	;# 
  5254  011D                     	;# 
  5255  011E                     	;# 
  5256  011E                     	;# 
  5257  011E                     	;# 
  5258  011F                     	;# 
  5259  011F                     	;# 
  5260  011F                     	;# 
  5261  011F                     	;# 
  5262  011F                     	;# 
  5263  018C                     	;# 
  5264  018D                     	;# 
  5265  018E                     	;# 
  5266  018F                     	;# 
  5267  0190                     	;# 
  5268  0191                     	;# 
  5269  0192                     	;# 
  5270  0196                     	;# 
  5271  0197                     	;# 
  5272  0198                     	;# 
  5273  0199                     	;# 
  5274  019A                     	;# 
  5275  019B                     	;# 
  5276  019C                     	;# 
  5277  020C                     	;# 
  5278  020D                     	;# 
  5279  020E                     	;# 
  5280  020E                     	;# 
  5281  020F                     	;# 
  5282  020F                     	;# 
  5283  0210                     	;# 
  5284  0210                     	;# 
  5285  0211                     	;# 
  5286  0211                     	;# 
  5287  0212                     	;# 
  5288  0213                     	;# 
  5289  0214                     	;# 
  5290  0214                     	;# 
  5291  0215                     	;# 
  5292  0215                     	;# 
  5293  0216                     	;# 
  5294  0216                     	;# 
  5295  0217                     	;# 
  5296  0217                     	;# 
  5297  0218                     	;# 
  5298  0219                     	;# 
  5299  021A                     	;# 
  5300  021A                     	;# 
  5301  021B                     	;# 
  5302  021B                     	;# 
  5303  021C                     	;# 
  5304  021C                     	;# 
  5305  021D                     	;# 
  5306  021D                     	;# 
  5307  021E                     	;# 
  5308  021F                     	;# 
  5309  028C                     	;# 
  5310  028C                     	;# 
  5311  028D                     	;# 
  5312  028D                     	;# 
  5313  028E                     	;# 
  5314  028F                     	;# 
  5315  0290                     	;# 
  5316  0291                     	;# 
  5317  0292                     	;# 
  5318  0292                     	;# 
  5319  0293                     	;# 
  5320  0293                     	;# 
  5321  0294                     	;# 
  5322  0295                     	;# 
  5323  0296                     	;# 
  5324  0297                     	;# 
  5325  0298                     	;# 
  5326  0298                     	;# 
  5327  0299                     	;# 
  5328  0299                     	;# 
  5329  029A                     	;# 
  5330  029B                     	;# 
  5331  029C                     	;# 
  5332  029D                     	;# 
  5333  029F                     	;# 
  5334  030C                     	;# 
  5335  030C                     	;# 
  5336  030D                     	;# 
  5337  030E                     	;# 
  5338  030F                     	;# 
  5339  0310                     	;# 
  5340  0310                     	;# 
  5341  0311                     	;# 
  5342  0312                     	;# 
  5343  0313                     	;# 
  5344  0314                     	;# 
  5345  0314                     	;# 
  5346  0315                     	;# 
  5347  0316                     	;# 
  5348  0317                     	;# 
  5349  0318                     	;# 
  5350  0318                     	;# 
  5351  0319                     	;# 
  5352  031A                     	;# 
  5353  031B                     	;# 
  5354  038C                     	;# 
  5355  038C                     	;# 
  5356  038D                     	;# 
  5357  038E                     	;# 
  5358  0390                     	;# 
  5359  0390                     	;# 
  5360  0391                     	;# 
  5361  0392                     	;# 
  5362  048C                     	;# 
  5363  048C                     	;# 
  5364  048D                     	;# 
  5365  048E                     	;# 
  5366  048F                     	;# 
  5367  048F                     	;# 
  5368  0490                     	;# 
  5369  0491                     	;# 
  5370  0492                     	;# 
  5371  0492                     	;# 
  5372  0493                     	;# 
  5373  0494                     	;# 
  5374  0495                     	;# 
  5375  0495                     	;# 
  5376  0496                     	;# 
  5377  0497                     	;# 
  5378  0498                     	;# 
  5379  0499                     	;# 
  5380  049A                     	;# 
  5381  049B                     	;# 
  5382  049C                     	;# 
  5383  049D                     	;# 
  5384  058C                     	;# 
  5385  058C                     	;# 
  5386  058D                     	;# 
  5387  058E                     	;# 
  5388  058F                     	;# 
  5389  058F                     	;# 
  5390  0590                     	;# 
  5391  0591                     	;# 
  5392  0592                     	;# 
  5393  0593                     	;# 
  5394  059C                     	;# 
  5395  059C                     	;# 
  5396  059D                     	;# 
  5397  059D                     	;# 
  5398  059E                     	;# 
  5399  059F                     	;# 
  5400  060C                     	;# 
  5401  060C                     	;# 
  5402  060D                     	;# 
  5403  060D                     	;# 
  5404  060E                     	;# 
  5405  060F                     	;# 
  5406  0610                     	;# 
  5407  0611                     	;# 
  5408  0612                     	;# 
  5409  0613                     	;# 
  5410  0614                     	;# 
  5411  0616                     	;# 
  5412  0616                     	;# 
  5413  0617                     	;# 
  5414  0617                     	;# 
  5415  0618                     	;# 
  5416  0619                     	;# 
  5417  061A                     	;# 
  5418  061B                     	;# 
  5419  061C                     	;# 
  5420  061D                     	;# 
  5421  061E                     	;# 
  5422  070C                     	;# 
  5423  070D                     	;# 
  5424  070E                     	;# 
  5425  070F                     	;# 
  5426  0710                     	;# 
  5427  0711                     	;# 
  5428  0712                     	;# 
  5429  0713                     	;# 
  5430  0714                     	;# 
  5431  0716                     	;# 
  5432  0717                     	;# 
  5433  0718                     	;# 
  5434  0719                     	;# 
  5435  071A                     	;# 
  5436  071B                     	;# 
  5437  071C                     	;# 
  5438  071D                     	;# 
  5439  071E                     	;# 
  5440  0796                     	;# 
  5441  0797                     	;# 
  5442  0798                     	;# 
  5443  0799                     	;# 
  5444  079A                     	;# 
  5445  079B                     	;# 
  5446  079C                     	;# 
  5447  079D                     	;# 
  5448  080C                     	;# 
  5449  080D                     	;# 
  5450  080E                     	;# 
  5451  080F                     	;# 
  5452  0810                     	;# 
  5453  0811                     	;# 
  5454  0812                     	;# 
  5455  0813                     	;# 
  5456  0814                     	;# 
  5457  081A                     	;# 
  5458  081A                     	;# 
  5459  081B                     	;# 
  5460  081C                     	;# 
  5461  081C                     	;# 
  5462  081D                     	;# 
  5463  081E                     	;# 
  5464  081F                     	;# 
  5465  088C                     	;# 
  5466  088D                     	;# 
  5467  088E                     	;# 
  5468  088F                     	;# 
  5469  0890                     	;# 
  5470  0891                     	;# 
  5471  0892                     	;# 
  5472  0893                     	;# 
  5473  0895                     	;# 
  5474  0896                     	;# 
  5475  0897                     	;# 
  5476  0898                     	;# 
  5477  0899                     	;# 
  5478  089A                     	;# 
  5479  089B                     	;# 
  5480  090C                     	;# 
  5481  090E                     	;# 
  5482  090F                     	;# 
  5483  091F                     	;# 
  5484  098F                     	;# 
  5485  098F                     	;# 
  5486  0990                     	;# 
  5487  0991                     	;# 
  5488  0992                     	;# 
  5489  0993                     	;# 
  5490  0994                     	;# 
  5491  0995                     	;# 
  5492  0996                     	;# 
  5493  0997                     	;# 
  5494  1E0F                     	;# 
  5495  1E10                     	;# 
  5496  1E11                     	;# 
  5497  1E12                     	;# 
  5498  1E13                     	;# 
  5499  1E14                     	;# 
  5500  1E15                     	;# 
  5501  1E16                     	;# 
  5502  1E17                     	;# 
  5503  1E18                     	;# 
  5504  1E19                     	;# 
  5505  1E1A                     	;# 
  5506  1E1B                     	;# 
  5507  1E1C                     	;# 
  5508  1E1D                     	;# 
  5509  1E1E                     	;# 
  5510  1E1F                     	;# 
  5511  1E20                     	;# 
  5512  1E21                     	;# 
  5513  1E22                     	;# 
  5514  1E23                     	;# 
  5515  1E24                     	;# 
  5516  1E25                     	;# 
  5517  1E26                     	;# 
  5518  1E27                     	;# 
  5519  1E28                     	;# 
  5520  1E29                     	;# 
  5521  1E2A                     	;# 
  5522  1E2B                     	;# 
  5523  1E2C                     	;# 
  5524  1E2D                     	;# 
  5525  1E2E                     	;# 
  5526  1E2F                     	;# 
  5527  1E30                     	;# 
  5528  1E31                     	;# 
  5529  1E32                     	;# 
  5530  1E33                     	;# 
  5531  1E34                     	;# 
  5532  1E35                     	;# 
  5533  1E36                     	;# 
  5534  1E37                     	;# 
  5535  1E8F                     	;# 
  5536  1E90                     	;# 
  5537  1E91                     	;# 
  5538  1E92                     	;# 
  5539  1E93                     	;# 
  5540  1E94                     	;# 
  5541  1E95                     	;# 
  5542  1E96                     	;# 
  5543  1E97                     	;# 
  5544  1E9C                     	;# 
  5545  1E9D                     	;# 
  5546  1E9E                     	;# 
  5547  1EA1                     	;# 
  5548  1EA2                     	;# 
  5549  1EA3                     	;# 
  5550  1EA4                     	;# 
  5551  1EA9                     	;# 
  5552  1EAA                     	;# 
  5553  1EB1                     	;# 
  5554  1EB2                     	;# 
  5555  1EB8                     	;# 
  5556  1EB9                     	;# 
  5557  1EBA                     	;# 
  5558  1EBB                     	;# 
  5559  1EBC                     	;# 
  5560  1EBD                     	;# 
  5561  1EBE                     	;# 
  5562  1EC3                     	;# 
  5563  1EC5                     	;# 
  5564  1EC6                     	;# 
  5565  1EC7                     	;# 
  5566  1EC8                     	;# 
  5567  1EC9                     	;# 
  5568  1ECA                     	;# 
  5569  1ECB                     	;# 
  5570  1ECB                     	;# 
  5571  1ECB                     	;# 
  5572  1ECC                     	;# 
  5573  1ECC                     	;# 
  5574  1ECC                     	;# 
  5575  1F10                     	;# 
  5576  1F11                     	;# 
  5577  1F12                     	;# 
  5578  1F14                     	;# 
  5579  1F15                     	;# 
  5580  1F1C                     	;# 
  5581  1F1D                     	;# 
  5582  1F1E                     	;# 
  5583  1F1F                     	;# 
  5584  1F20                     	;# 
  5585  1F21                     	;# 
  5586  1F22                     	;# 
  5587  1F23                     	;# 
  5588  1F24                     	;# 
  5589  1F25                     	;# 
  5590  1F26                     	;# 
  5591  1F27                     	;# 
  5592  1F38                     	;# 
  5593  1F39                     	;# 
  5594  1F3A                     	;# 
  5595  1F3B                     	;# 
  5596  1F3C                     	;# 
  5597  1F3D                     	;# 
  5598  1F3E                     	;# 
  5599  1F3F                     	;# 
  5600  1F43                     	;# 
  5601  1F44                     	;# 
  5602  1F45                     	;# 
  5603  1F46                     	;# 
  5604  1F47                     	;# 
  5605  1F48                     	;# 
  5606  1F49                     	;# 
  5607  1F4A                     	;# 
  5608  1F4E                     	;# 
  5609  1F4F                     	;# 
  5610  1F50                     	;# 
  5611  1F51                     	;# 
  5612  1F52                     	;# 
  5613  1F53                     	;# 
  5614  1F54                     	;# 
  5615  1F55                     	;# 
  5616  1FE4                     	;# 
  5617  1FE5                     	;# 
  5618  1FE6                     	;# 
  5619  1FE7                     	;# 
  5620  1FE8                     	;# 
  5621  1FE8                     	;# 
  5622  1FE9                     	;# 
  5623  1FEA                     	;# 
  5624  1FEB                     	;# 
  5625  1FED                     	;# 
  5626  1FEE                     	;# 
  5627  1FEF                     	;# 
  5628  0000                     	;# 
  5629  0001                     	;# 
  5630  0002                     	;# 
  5631  0003                     	;# 
  5632  0004                     	;# 
  5633  0005                     	;# 
  5634  0006                     	;# 
  5635  0007                     	;# 
  5636  0008                     	;# 
  5637  0009                     	;# 
  5638  000A                     	;# 
  5639  000B                     	;# 
  5640  000C                     	;# 
  5641  000D                     	;# 
  5642  000E                     	;# 
  5643  0012                     	;# 
  5644  0013                     	;# 
  5645  0014                     	;# 
  5646  0018                     	;# 
  5647  0019                     	;# 
  5648  001A                     	;# 
  5649  008C                     	;# 
  5650  008C                     	;# 
  5651  008D                     	;# 
  5652  008E                     	;# 
  5653  008E                     	;# 
  5654  008F                     	;# 
  5655  0090                     	;# 
  5656  0090                     	;# 
  5657  0091                     	;# 
  5658  0092                     	;# 
  5659  0092                     	;# 
  5660  0093                     	;# 
  5661  0094                     	;# 
  5662  0094                     	;# 
  5663  0095                     	;# 
  5664  0096                     	;# 
  5665  0096                     	;# 
  5666  0097                     	;# 
  5667  0098                     	;# 
  5668  0099                     	;# 
  5669  009A                     	;# 
  5670  009B                     	;# 
  5671  009B                     	;# 
  5672  009C                     	;# 
  5673  009D                     	;# 
  5674  009D                     	;# 
  5675  009E                     	;# 
  5676  009F                     	;# 
  5677  010C                     	;# 
  5678  010C                     	;# 
  5679  010D                     	;# 
  5680  010E                     	;# 
  5681  010F                     	;# 
  5682  010F                     	;# 
  5683  0110                     	;# 
  5684  0111                     	;# 
  5685  0112                     	;# 
  5686  0113                     	;# 
  5687  0114                     	;# 
  5688  0115                     	;# 
  5689  0116                     	;# 
  5690  0117                     	;# 
  5691  0118                     	;# 
  5692  0119                     	;# 
  5693  0119                     	;# 
  5694  0119                     	;# 
  5695  011A                     	;# 
  5696  011A                     	;# 
  5697  011A                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011B                     	;# 
  5702  011B                     	;# 
  5703  011C                     	;# 
  5704  011C                     	;# 
  5705  011C                     	;# 
  5706  011D                     	;# 
  5707  011D                     	;# 
  5708  011D                     	;# 
  5709  011E                     	;# 
  5710  011E                     	;# 
  5711  011E                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  011F                     	;# 
  5716  011F                     	;# 
  5717  018C                     	;# 
  5718  018D                     	;# 
  5719  018E                     	;# 
  5720  018F                     	;# 
  5721  0190                     	;# 
  5722  0191                     	;# 
  5723  0192                     	;# 
  5724  0196                     	;# 
  5725  0197                     	;# 
  5726  0198                     	;# 
  5727  0199                     	;# 
  5728  019A                     	;# 
  5729  019B                     	;# 
  5730  019C                     	;# 
  5731  020C                     	;# 
  5732  020D                     	;# 
  5733  020E                     	;# 
  5734  020E                     	;# 
  5735  020F                     	;# 
  5736  020F                     	;# 
  5737  0210                     	;# 
  5738  0210                     	;# 
  5739  0211                     	;# 
  5740  0211                     	;# 
  5741  0212                     	;# 
  5742  0213                     	;# 
  5743  0214                     	;# 
  5744  0214                     	;# 
  5745  0215                     	;# 
  5746  0215                     	;# 
  5747  0216                     	;# 
  5748  0216                     	;# 
  5749  0217                     	;# 
  5750  0217                     	;# 
  5751  0218                     	;# 
  5752  0219                     	;# 
  5753  021A                     	;# 
  5754  021A                     	;# 
  5755  021B                     	;# 
  5756  021B                     	;# 
  5757  021C                     	;# 
  5758  021C                     	;# 
  5759  021D                     	;# 
  5760  021D                     	;# 
  5761  021E                     	;# 
  5762  021F                     	;# 
  5763  028C                     	;# 
  5764  028C                     	;# 
  5765  028D                     	;# 
  5766  028D                     	;# 
  5767  028E                     	;# 
  5768  028F                     	;# 
  5769  0290                     	;# 
  5770  0291                     	;# 
  5771  0292                     	;# 
  5772  0292                     	;# 
  5773  0293                     	;# 
  5774  0293                     	;# 
  5775  0294                     	;# 
  5776  0295                     	;# 
  5777  0296                     	;# 
  5778  0297                     	;# 
  5779  0298                     	;# 
  5780  0298                     	;# 
  5781  0299                     	;# 
  5782  0299                     	;# 
  5783  029A                     	;# 
  5784  029B                     	;# 
  5785  029C                     	;# 
  5786  029D                     	;# 
  5787  029F                     	;# 
  5788  030C                     	;# 
  5789  030C                     	;# 
  5790  030D                     	;# 
  5791  030E                     	;# 
  5792  030F                     	;# 
  5793  0310                     	;# 
  5794  0310                     	;# 
  5795  0311                     	;# 
  5796  0312                     	;# 
  5797  0313                     	;# 
  5798  0314                     	;# 
  5799  0314                     	;# 
  5800  0315                     	;# 
  5801  0316                     	;# 
  5802  0317                     	;# 
  5803  0318                     	;# 
  5804  0318                     	;# 
  5805  0319                     	;# 
  5806  031A                     	;# 
  5807  031B                     	;# 
  5808  038C                     	;# 
  5809  038C                     	;# 
  5810  038D                     	;# 
  5811  038E                     	;# 
  5812  0390                     	;# 
  5813  0390                     	;# 
  5814  0391                     	;# 
  5815  0392                     	;# 
  5816  048C                     	;# 
  5817  048C                     	;# 
  5818  048D                     	;# 
  5819  048E                     	;# 
  5820  048F                     	;# 
  5821  048F                     	;# 
  5822  0490                     	;# 
  5823  0491                     	;# 
  5824  0492                     	;# 
  5825  0492                     	;# 
  5826  0493                     	;# 
  5827  0494                     	;# 
  5828  0495                     	;# 
  5829  0495                     	;# 
  5830  0496                     	;# 
  5831  0497                     	;# 
  5832  0498                     	;# 
  5833  0499                     	;# 
  5834  049A                     	;# 
  5835  049B                     	;# 
  5836  049C                     	;# 
  5837  049D                     	;# 
  5838  058C                     	;# 
  5839  058C                     	;# 
  5840  058D                     	;# 
  5841  058E                     	;# 
  5842  058F                     	;# 
  5843  058F                     	;# 
  5844  0590                     	;# 
  5845  0591                     	;# 
  5846  0592                     	;# 
  5847  0593                     	;# 
  5848  059C                     	;# 
  5849  059C                     	;# 
  5850  059D                     	;# 
  5851  059D                     	;# 
  5852  059E                     	;# 
  5853  059F                     	;# 
  5854  060C                     	;# 
  5855  060C                     	;# 
  5856  060D                     	;# 
  5857  060D                     	;# 
  5858  060E                     	;# 
  5859  060F                     	;# 
  5860  0610                     	;# 
  5861  0611                     	;# 
  5862  0612                     	;# 
  5863  0613                     	;# 
  5864  0614                     	;# 
  5865  0616                     	;# 
  5866  0616                     	;# 
  5867  0617                     	;# 
  5868  0617                     	;# 
  5869  0618                     	;# 
  5870  0619                     	;# 
  5871  061A                     	;# 
  5872  061B                     	;# 
  5873  061C                     	;# 
  5874  061D                     	;# 
  5875  061E                     	;# 
  5876  070C                     	;# 
  5877  070D                     	;# 
  5878  070E                     	;# 
  5879  070F                     	;# 
  5880  0710                     	;# 
  5881  0711                     	;# 
  5882  0712                     	;# 
  5883  0713                     	;# 
  5884  0714                     	;# 
  5885  0716                     	;# 
  5886  0717                     	;# 
  5887  0718                     	;# 
  5888  0719                     	;# 
  5889  071A                     	;# 
  5890  071B                     	;# 
  5891  071C                     	;# 
  5892  071D                     	;# 
  5893  071E                     	;# 
  5894  0796                     	;# 
  5895  0797                     	;# 
  5896  0798                     	;# 
  5897  0799                     	;# 
  5898  079A                     	;# 
  5899  079B                     	;# 
  5900  079C                     	;# 
  5901  079D                     	;# 
  5902  080C                     	;# 
  5903  080D                     	;# 
  5904  080E                     	;# 
  5905  080F                     	;# 
  5906  0810                     	;# 
  5907  0811                     	;# 
  5908  0812                     	;# 
  5909  0813                     	;# 
  5910  0814                     	;# 
  5911  081A                     	;# 
  5912  081A                     	;# 
  5913  081B                     	;# 
  5914  081C                     	;# 
  5915  081C                     	;# 
  5916  081D                     	;# 
  5917  081E                     	;# 
  5918  081F                     	;# 
  5919  088C                     	;# 
  5920  088D                     	;# 
  5921  088E                     	;# 
  5922  088F                     	;# 
  5923  0890                     	;# 
  5924  0891                     	;# 
  5925  0892                     	;# 
  5926  0893                     	;# 
  5927  0895                     	;# 
  5928  0896                     	;# 
  5929  0897                     	;# 
  5930  0898                     	;# 
  5931  0899                     	;# 
  5932  089A                     	;# 
  5933  089B                     	;# 
  5934  090C                     	;# 
  5935  090E                     	;# 
  5936  090F                     	;# 
  5937  091F                     	;# 
  5938  098F                     	;# 
  5939  098F                     	;# 
  5940  0990                     	;# 
  5941  0991                     	;# 
  5942  0992                     	;# 
  5943  0993                     	;# 
  5944  0994                     	;# 
  5945  0995                     	;# 
  5946  0996                     	;# 
  5947  0997                     	;# 
  5948  1E0F                     	;# 
  5949  1E10                     	;# 
  5950  1E11                     	;# 
  5951  1E12                     	;# 
  5952  1E13                     	;# 
  5953  1E14                     	;# 
  5954  1E15                     	;# 
  5955  1E16                     	;# 
  5956  1E17                     	;# 
  5957  1E18                     	;# 
  5958  1E19                     	;# 
  5959  1E1A                     	;# 
  5960  1E1B                     	;# 
  5961  1E1C                     	;# 
  5962  1E1D                     	;# 
  5963  1E1E                     	;# 
  5964  1E1F                     	;# 
  5965  1E20                     	;# 
  5966  1E21                     	;# 
  5967  1E22                     	;# 
  5968  1E23                     	;# 
  5969  1E24                     	;# 
  5970  1E25                     	;# 
  5971  1E26                     	;# 
  5972  1E27                     	;# 
  5973  1E28                     	;# 
  5974  1E29                     	;# 
  5975  1E2A                     	;# 
  5976  1E2B                     	;# 
  5977  1E2C                     	;# 
  5978  1E2D                     	;# 
  5979  1E2E                     	;# 
  5980  1E2F                     	;# 
  5981  1E30                     	;# 
  5982  1E31                     	;# 
  5983  1E32                     	;# 
  5984  1E33                     	;# 
  5985  1E34                     	;# 
  5986  1E35                     	;# 
  5987  1E36                     	;# 
  5988  1E37                     	;# 
  5989  1E8F                     	;# 
  5990  1E90                     	;# 
  5991  1E91                     	;# 
  5992  1E92                     	;# 
  5993  1E93                     	;# 
  5994  1E94                     	;# 
  5995  1E95                     	;# 
  5996  1E96                     	;# 
  5997  1E97                     	;# 
  5998  1E9C                     	;# 
  5999  1E9D                     	;# 
  6000  1E9E                     	;# 
  6001  1EA1                     	;# 
  6002  1EA2                     	;# 
  6003  1EA3                     	;# 
  6004  1EA4                     	;# 
  6005  1EA9                     	;# 
  6006  1EAA                     	;# 
  6007  1EB1                     	;# 
  6008  1EB2                     	;# 
  6009  1EB8                     	;# 
  6010  1EB9                     	;# 
  6011  1EBA                     	;# 
  6012  1EBB                     	;# 
  6013  1EBC                     	;# 
  6014  1EBD                     	;# 
  6015  1EBE                     	;# 
  6016  1EC3                     	;# 
  6017  1EC5                     	;# 
  6018  1EC6                     	;# 
  6019  1EC7                     	;# 
  6020  1EC8                     	;# 
  6021  1EC9                     	;# 
  6022  1ECA                     	;# 
  6023  1ECB                     	;# 
  6024  1ECB                     	;# 
  6025  1ECB                     	;# 
  6026  1ECC                     	;# 
  6027  1ECC                     	;# 
  6028  1ECC                     	;# 
  6029  1F10                     	;# 
  6030  1F11                     	;# 
  6031  1F12                     	;# 
  6032  1F14                     	;# 
  6033  1F15                     	;# 
  6034  1F1C                     	;# 
  6035  1F1D                     	;# 
  6036  1F1E                     	;# 
  6037  1F1F                     	;# 
  6038  1F20                     	;# 
  6039  1F21                     	;# 
  6040  1F22                     	;# 
  6041  1F23                     	;# 
  6042  1F24                     	;# 
  6043  1F25                     	;# 
  6044  1F26                     	;# 
  6045  1F27                     	;# 
  6046  1F38                     	;# 
  6047  1F39                     	;# 
  6048  1F3A                     	;# 
  6049  1F3B                     	;# 
  6050  1F3C                     	;# 
  6051  1F3D                     	;# 
  6052  1F3E                     	;# 
  6053  1F3F                     	;# 
  6054  1F43                     	;# 
  6055  1F44                     	;# 
  6056  1F45                     	;# 
  6057  1F46                     	;# 
  6058  1F47                     	;# 
  6059  1F48                     	;# 
  6060  1F49                     	;# 
  6061  1F4A                     	;# 
  6062  1F4E                     	;# 
  6063  1F4F                     	;# 
  6064  1F50                     	;# 
  6065  1F51                     	;# 
  6066  1F52                     	;# 
  6067  1F53                     	;# 
  6068  1F54                     	;# 
  6069  1F55                     	;# 
  6070  1FE4                     	;# 
  6071  1FE5                     	;# 
  6072  1FE6                     	;# 
  6073  1FE7                     	;# 
  6074  1FE8                     	;# 
  6075  1FE8                     	;# 
  6076  1FE9                     	;# 
  6077  1FEA                     	;# 
  6078  1FEB                     	;# 
  6079  1FED                     	;# 
  6080  1FEE                     	;# 
  6081  1FEF                     	;# 
  6082  0000                     	;# 
  6083  0001                     	;# 
  6084  0002                     	;# 
  6085  0003                     	;# 
  6086  0004                     	;# 
  6087  0005                     	;# 
  6088  0006                     	;# 
  6089  0007                     	;# 
  6090  0008                     	;# 
  6091  0009                     	;# 
  6092  000A                     	;# 
  6093  000B                     	;# 
  6094  000C                     	;# 
  6095  000D                     	;# 
  6096  000E                     	;# 
  6097  0012                     	;# 
  6098  0013                     	;# 
  6099  0014                     	;# 
  6100  0018                     	;# 
  6101  0019                     	;# 
  6102  001A                     	;# 
  6103  008C                     	;# 
  6104  008C                     	;# 
  6105  008D                     	;# 
  6106  008E                     	;# 
  6107  008E                     	;# 
  6108  008F                     	;# 
  6109  0090                     	;# 
  6110  0090                     	;# 
  6111  0091                     	;# 
  6112  0092                     	;# 
  6113  0092                     	;# 
  6114  0093                     	;# 
  6115  0094                     	;# 
  6116  0094                     	;# 
  6117  0095                     	;# 
  6118  0096                     	;# 
  6119  0096                     	;# 
  6120  0097                     	;# 
  6121  0098                     	;# 
  6122  0099                     	;# 
  6123  009A                     	;# 
  6124  009B                     	;# 
  6125  009B                     	;# 
  6126  009C                     	;# 
  6127  009D                     	;# 
  6128  009D                     	;# 
  6129  009E                     	;# 
  6130  009F                     	;# 
  6131  010C                     	;# 
  6132  010C                     	;# 
  6133  010D                     	;# 
  6134  010E                     	;# 
  6135  010F                     	;# 
  6136  010F                     	;# 
  6137  0110                     	;# 
  6138  0111                     	;# 
  6139  0112                     	;# 
  6140  0113                     	;# 
  6141  0114                     	;# 
  6142  0115                     	;# 
  6143  0116                     	;# 
  6144  0117                     	;# 
  6145  0118                     	;# 
  6146  0119                     	;# 
  6147  0119                     	;# 
  6148  0119                     	;# 
  6149  011A                     	;# 
  6150  011A                     	;# 
  6151  011A                     	;# 
  6152  011B                     	;# 
  6153  011B                     	;# 
  6154  011B                     	;# 
  6155  011B                     	;# 
  6156  011B                     	;# 
  6157  011C                     	;# 
  6158  011C                     	;# 
  6159  011C                     	;# 
  6160  011D                     	;# 
  6161  011D                     	;# 
  6162  011D                     	;# 
  6163  011E                     	;# 
  6164  011E                     	;# 
  6165  011E                     	;# 
  6166  011F                     	;# 
  6167  011F                     	;# 
  6168  011F                     	;# 
  6169  011F                     	;# 
  6170  011F                     	;# 
  6171  018C                     	;# 
  6172  018D                     	;# 
  6173  018E                     	;# 
  6174  018F                     	;# 
  6175  0190                     	;# 
  6176  0191                     	;# 
  6177  0192                     	;# 
  6178  0196                     	;# 
  6179  0197                     	;# 
  6180  0198                     	;# 
  6181  0199                     	;# 
  6182  019A                     	;# 
  6183  019B                     	;# 
  6184  019C                     	;# 
  6185  020C                     	;# 
  6186  020D                     	;# 
  6187  020E                     	;# 
  6188  020E                     	;# 
  6189  020F                     	;# 
  6190  020F                     	;# 
  6191  0210                     	;# 
  6192  0210                     	;# 
  6193  0211                     	;# 
  6194  0211                     	;# 
  6195  0212                     	;# 
  6196  0213                     	;# 
  6197  0214                     	;# 
  6198  0214                     	;# 
  6199  0215                     	;# 
  6200  0215                     	;# 
  6201  0216                     	;# 
  6202  0216                     	;# 
  6203  0217                     	;# 
  6204  0217                     	;# 
  6205  0218                     	;# 
  6206  0219                     	;# 
  6207  021A                     	;# 
  6208  021A                     	;# 
  6209  021B                     	;# 
  6210  021B                     	;# 
  6211  021C                     	;# 
  6212  021C                     	;# 
  6213  021D                     	;# 
  6214  021D                     	;# 
  6215  021E                     	;# 
  6216  021F                     	;# 
  6217  028C                     	;# 
  6218  028C                     	;# 
  6219  028D                     	;# 
  6220  028D                     	;# 
  6221  028E                     	;# 
  6222  028F                     	;# 
  6223  0290                     	;# 
  6224  0291                     	;# 
  6225  0292                     	;# 
  6226  0292                     	;# 
  6227  0293                     	;# 
  6228  0293                     	;# 
  6229  0294                     	;# 
  6230  0295                     	;# 
  6231  0296                     	;# 
  6232  0297                     	;# 
  6233  0298                     	;# 
  6234  0298                     	;# 
  6235  0299                     	;# 
  6236  0299                     	;# 
  6237  029A                     	;# 
  6238  029B                     	;# 
  6239  029C                     	;# 
  6240  029D                     	;# 
  6241  029F                     	;# 
  6242  030C                     	;# 
  6243  030C                     	;# 
  6244  030D                     	;# 
  6245  030E                     	;# 
  6246  030F                     	;# 
  6247  0310                     	;# 
  6248  0310                     	;# 
  6249  0311                     	;# 
  6250  0312                     	;# 
  6251  0313                     	;# 
  6252  0314                     	;# 
  6253  0314                     	;# 
  6254  0315                     	;# 
  6255  0316                     	;# 
  6256  0317                     	;# 
  6257  0318                     	;# 
  6258  0318                     	;# 
  6259  0319                     	;# 
  6260  031A                     	;# 
  6261  031B                     	;# 
  6262  038C                     	;# 
  6263  038C                     	;# 
  6264  038D                     	;# 
  6265  038E                     	;# 
  6266  0390                     	;# 
  6267  0390                     	;# 
  6268  0391                     	;# 
  6269  0392                     	;# 
  6270  048C                     	;# 
  6271  048C                     	;# 
  6272  048D                     	;# 
  6273  048E                     	;# 
  6274  048F                     	;# 
  6275  048F                     	;# 
  6276  0490                     	;# 
  6277  0491                     	;# 
  6278  0492                     	;# 
  6279  0492                     	;# 
  6280  0493                     	;# 
  6281  0494                     	;# 
  6282  0495                     	;# 
  6283  0495                     	;# 
  6284  0496                     	;# 
  6285  0497                     	;# 
  6286  0498                     	;# 
  6287  0499                     	;# 
  6288  049A                     	;# 
  6289  049B                     	;# 
  6290  049C                     	;# 
  6291  049D                     	;# 
  6292  058C                     	;# 
  6293  058C                     	;# 
  6294  058D                     	;# 
  6295  058E                     	;# 
  6296  058F                     	;# 
  6297  058F                     	;# 
  6298  0590                     	;# 
  6299  0591                     	;# 
  6300  0592                     	;# 
  6301  0593                     	;# 
  6302  059C                     	;# 
  6303  059C                     	;# 
  6304  059D                     	;# 
  6305  059D                     	;# 
  6306  059E                     	;# 
  6307  059F                     	;# 
  6308  060C                     	;# 
  6309  060C                     	;# 
  6310  060D                     	;# 
  6311  060D                     	;# 
  6312  060E                     	;# 
  6313  060F                     	;# 
  6314  0610                     	;# 
  6315  0611                     	;# 
  6316  0612                     	;# 
  6317  0613                     	;# 
  6318  0614                     	;# 
  6319  0616                     	;# 
  6320  0616                     	;# 
  6321  0617                     	;# 
  6322  0617                     	;# 
  6323  0618                     	;# 
  6324  0619                     	;# 
  6325  061A                     	;# 
  6326  061B                     	;# 
  6327  061C                     	;# 
  6328  061D                     	;# 
  6329  061E                     	;# 
  6330  070C                     	;# 
  6331  070D                     	;# 
  6332  070E                     	;# 
  6333  070F                     	;# 
  6334  0710                     	;# 
  6335  0711                     	;# 
  6336  0712                     	;# 
  6337  0713                     	;# 
  6338  0714                     	;# 
  6339  0716                     	;# 
  6340  0717                     	;# 
  6341  0718                     	;# 
  6342  0719                     	;# 
  6343  071A                     	;# 
  6344  071B                     	;# 
  6345  071C                     	;# 
  6346  071D                     	;# 
  6347  071E                     	;# 
  6348  0796                     	;# 
  6349  0797                     	;# 
  6350  0798                     	;# 
  6351  0799                     	;# 
  6352  079A                     	;# 
  6353  079B                     	;# 
  6354  079C                     	;# 
  6355  079D                     	;# 
  6356  080C                     	;# 
  6357  080D                     	;# 
  6358  080E                     	;# 
  6359  080F                     	;# 
  6360  0810                     	;# 
  6361  0811                     	;# 
  6362  0812                     	;# 
  6363  0813                     	;# 
  6364  0814                     	;# 
  6365  081A                     	;# 
  6366  081A                     	;# 
  6367  081B                     	;# 
  6368  081C                     	;# 
  6369  081C                     	;# 
  6370  081D                     	;# 
  6371  081E                     	;# 
  6372  081F                     	;# 
  6373  088C                     	;# 
  6374  088D                     	;# 
  6375  088E                     	;# 
  6376  088F                     	;# 
  6377  0890                     	;# 
  6378  0891                     	;# 
  6379  0892                     	;# 
  6380  0893                     	;# 
  6381  0895                     	;# 
  6382  0896                     	;# 
  6383  0897                     	;# 
  6384  0898                     	;# 
  6385  0899                     	;# 
  6386  089A                     	;# 
  6387  089B                     	;# 
  6388  090C                     	;# 
  6389  090E                     	;# 
  6390  090F                     	;# 
  6391  091F                     	;# 
  6392  098F                     	;# 
  6393  098F                     	;# 
  6394  0990                     	;# 
  6395  0991                     	;# 
  6396  0992                     	;# 
  6397  0993                     	;# 
  6398  0994                     	;# 
  6399  0995                     	;# 
  6400  0996                     	;# 
  6401  0997                     	;# 
  6402  1E0F                     	;# 
  6403  1E10                     	;# 
  6404  1E11                     	;# 
  6405  1E12                     	;# 
  6406  1E13                     	;# 
  6407  1E14                     	;# 
  6408  1E15                     	;# 
  6409  1E16                     	;# 
  6410  1E17                     	;# 
  6411  1E18                     	;# 
  6412  1E19                     	;# 
  6413  1E1A                     	;# 
  6414  1E1B                     	;# 
  6415  1E1C                     	;# 
  6416  1E1D                     	;# 
  6417  1E1E                     	;# 
  6418  1E1F                     	;# 
  6419  1E20                     	;# 
  6420  1E21                     	;# 
  6421  1E22                     	;# 
  6422  1E23                     	;# 
  6423  1E24                     	;# 
  6424  1E25                     	;# 
  6425  1E26                     	;# 
  6426  1E27                     	;# 
  6427  1E28                     	;# 
  6428  1E29                     	;# 
  6429  1E2A                     	;# 
  6430  1E2B                     	;# 
  6431  1E2C                     	;# 
  6432  1E2D                     	;# 
  6433  1E2E                     	;# 
  6434  1E2F                     	;# 
  6435  1E30                     	;# 
  6436  1E31                     	;# 
  6437  1E32                     	;# 
  6438  1E33                     	;# 
  6439  1E34                     	;# 
  6440  1E35                     	;# 
  6441  1E36                     	;# 
  6442  1E37                     	;# 
  6443  1E8F                     	;# 
  6444  1E90                     	;# 
  6445  1E91                     	;# 
  6446  1E92                     	;# 
  6447  1E93                     	;# 
  6448  1E94                     	;# 
  6449  1E95                     	;# 
  6450  1E96                     	;# 
  6451  1E97                     	;# 
  6452  1E9C                     	;# 
  6453  1E9D                     	;# 
  6454  1E9E                     	;# 
  6455  1EA1                     	;# 
  6456  1EA2                     	;# 
  6457  1EA3                     	;# 
  6458  1EA4                     	;# 
  6459  1EA9                     	;# 
  6460  1EAA                     	;# 
  6461  1EB1                     	;# 
  6462  1EB2                     	;# 
  6463  1EB8                     	;# 
  6464  1EB9                     	;# 
  6465  1EBA                     	;# 
  6466  1EBB                     	;# 
  6467  1EBC                     	;# 
  6468  1EBD                     	;# 
  6469  1EBE                     	;# 
  6470  1EC3                     	;# 
  6471  1EC5                     	;# 
  6472  1EC6                     	;# 
  6473  1EC7                     	;# 
  6474  1EC8                     	;# 
  6475  1EC9                     	;# 
  6476  1ECA                     	;# 
  6477  1ECB                     	;# 
  6478  1ECB                     	;# 
  6479  1ECB                     	;# 
  6480  1ECC                     	;# 
  6481  1ECC                     	;# 
  6482  1ECC                     	;# 
  6483  1F10                     	;# 
  6484  1F11                     	;# 
  6485  1F12                     	;# 
  6486  1F14                     	;# 
  6487  1F15                     	;# 
  6488  1F1C                     	;# 
  6489  1F1D                     	;# 
  6490  1F1E                     	;# 
  6491  1F1F                     	;# 
  6492  1F20                     	;# 
  6493  1F21                     	;# 
  6494  1F22                     	;# 
  6495  1F23                     	;# 
  6496  1F24                     	;# 
  6497  1F25                     	;# 
  6498  1F26                     	;# 
  6499  1F27                     	;# 
  6500  1F38                     	;# 
  6501  1F39                     	;# 
  6502  1F3A                     	;# 
  6503  1F3B                     	;# 
  6504  1F3C                     	;# 
  6505  1F3D                     	;# 
  6506  1F3E                     	;# 
  6507  1F3F                     	;# 
  6508  1F43                     	;# 
  6509  1F44                     	;# 
  6510  1F45                     	;# 
  6511  1F46                     	;# 
  6512  1F47                     	;# 
  6513  1F48                     	;# 
  6514  1F49                     	;# 
  6515  1F4A                     	;# 
  6516  1F4E                     	;# 
  6517  1F4F                     	;# 
  6518  1F50                     	;# 
  6519  1F51                     	;# 
  6520  1F52                     	;# 
  6521  1F53                     	;# 
  6522  1F54                     	;# 
  6523  1F55                     	;# 
  6524  1FE4                     	;# 
  6525  1FE5                     	;# 
  6526  1FE6                     	;# 
  6527  1FE7                     	;# 
  6528  1FE8                     	;# 
  6529  1FE8                     	;# 
  6530  1FE9                     	;# 
  6531  1FEA                     	;# 
  6532  1FEB                     	;# 
  6533  1FED                     	;# 
  6534  1FEE                     	;# 
  6535  1FEF                     	;# 
  6536  0000                     	;# 
  6537  0001                     	;# 
  6538  0002                     	;# 
  6539  0003                     	;# 
  6540  0004                     	;# 
  6541  0005                     	;# 
  6542  0006                     	;# 
  6543  0007                     	;# 
  6544  0008                     	;# 
  6545  0009                     	;# 
  6546  000A                     	;# 
  6547  000B                     	;# 
  6548  000C                     	;# 
  6549  000D                     	;# 
  6550  000E                     	;# 
  6551  0012                     	;# 
  6552  0013                     	;# 
  6553  0014                     	;# 
  6554  0018                     	;# 
  6555  0019                     	;# 
  6556  001A                     	;# 
  6557  008C                     	;# 
  6558  008C                     	;# 
  6559  008D                     	;# 
  6560  008E                     	;# 
  6561  008E                     	;# 
  6562  008F                     	;# 
  6563  0090                     	;# 
  6564  0090                     	;# 
  6565  0091                     	;# 
  6566  0092                     	;# 
  6567  0092                     	;# 
  6568  0093                     	;# 
  6569  0094                     	;# 
  6570  0094                     	;# 
  6571  0095                     	;# 
  6572  0096                     	;# 
  6573  0096                     	;# 
  6574  0097                     	;# 
  6575  0098                     	;# 
  6576  0099                     	;# 
  6577  009A                     	;# 
  6578  009B                     	;# 
  6579  009B                     	;# 
  6580  009C                     	;# 
  6581  009D                     	;# 
  6582  009D                     	;# 
  6583  009E                     	;# 
  6584  009F                     	;# 
  6585  010C                     	;# 
  6586  010C                     	;# 
  6587  010D                     	;# 
  6588  010E                     	;# 
  6589  010F                     	;# 
  6590  010F                     	;# 
  6591  0110                     	;# 
  6592  0111                     	;# 
  6593  0112                     	;# 
  6594  0113                     	;# 
  6595  0114                     	;# 
  6596  0115                     	;# 
  6597  0116                     	;# 
  6598  0117                     	;# 
  6599  0118                     	;# 
  6600  0119                     	;# 
  6601  0119                     	;# 
  6602  0119                     	;# 
  6603  011A                     	;# 
  6604  011A                     	;# 
  6605  011A                     	;# 
  6606  011B                     	;# 
  6607  011B                     	;# 
  6608  011B                     	;# 
  6609  011B                     	;# 
  6610  011B                     	;# 
  6611  011C                     	;# 
  6612  011C                     	;# 
  6613  011C                     	;# 
  6614  011D                     	;# 
  6615  011D                     	;# 
  6616  011D                     	;# 
  6617  011E                     	;# 
  6618  011E                     	;# 
  6619  011E                     	;# 
  6620  011F                     	;# 
  6621  011F                     	;# 
  6622  011F                     	;# 
  6623  011F                     	;# 
  6624  011F                     	;# 
  6625  018C                     	;# 
  6626  018D                     	;# 
  6627  018E                     	;# 
  6628  018F                     	;# 
  6629  0190                     	;# 
  6630  0191                     	;# 
  6631  0192                     	;# 
  6632  0196                     	;# 
  6633  0197                     	;# 
  6634  0198                     	;# 
  6635  0199                     	;# 
  6636  019A                     	;# 
  6637  019B                     	;# 
  6638  019C                     	;# 
  6639  020C                     	;# 
  6640  020D                     	;# 
  6641  020E                     	;# 
  6642  020E                     	;# 
  6643  020F                     	;# 
  6644  020F                     	;# 
  6645  0210                     	;# 
  6646  0210                     	;# 
  6647  0211                     	;# 
  6648  0211                     	;# 
  6649  0212                     	;# 
  6650  0213                     	;# 
  6651  0214                     	;# 
  6652  0214                     	;# 
  6653  0215                     	;# 
  6654  0215                     	;# 
  6655  0216                     	;# 
  6656  0216                     	;# 
  6657  0217                     	;# 
  6658  0217                     	;# 
  6659  0218                     	;# 
  6660  0219                     	;# 
  6661  021A                     	;# 
  6662  021A                     	;# 
  6663  021B                     	;# 
  6664  021B                     	;# 
  6665  021C                     	;# 
  6666  021C                     	;# 
  6667  021D                     	;# 
  6668  021D                     	;# 
  6669  021E                     	;# 
  6670  021F                     	;# 
  6671  028C                     	;# 
  6672  028C                     	;# 
  6673  028D                     	;# 
  6674  028D                     	;# 
  6675  028E                     	;# 
  6676  028F                     	;# 
  6677  0290                     	;# 
  6678  0291                     	;# 
  6679  0292                     	;# 
  6680  0292                     	;# 
  6681  0293                     	;# 
  6682  0293                     	;# 
  6683  0294                     	;# 
  6684  0295                     	;# 
  6685  0296                     	;# 
  6686  0297                     	;# 
  6687  0298                     	;# 
  6688  0298                     	;# 
  6689  0299                     	;# 
  6690  0299                     	;# 
  6691  029A                     	;# 
  6692  029B                     	;# 
  6693  029C                     	;# 
  6694  029D                     	;# 
  6695  029F                     	;# 
  6696  030C                     	;# 
  6697  030C                     	;# 
  6698  030D                     	;# 
  6699  030E                     	;# 
  6700  030F                     	;# 
  6701  0310                     	;# 
  6702  0310                     	;# 
  6703  0311                     	;# 
  6704  0312                     	;# 
  6705  0313                     	;# 
  6706  0314                     	;# 
  6707  0314                     	;# 
  6708  0315                     	;# 
  6709  0316                     	;# 
  6710  0317                     	;# 
  6711  0318                     	;# 
  6712  0318                     	;# 
  6713  0319                     	;# 
  6714  031A                     	;# 
  6715  031B                     	;# 
  6716  038C                     	;# 
  6717  038C                     	;# 
  6718  038D                     	;# 
  6719  038E                     	;# 
  6720  0390                     	;# 
  6721  0390                     	;# 
  6722  0391                     	;# 
  6723  0392                     	;# 
  6724  048C                     	;# 
  6725  048C                     	;# 
  6726  048D                     	;# 
  6727  048E                     	;# 
  6728  048F                     	;# 
  6729  048F                     	;# 
  6730  0490                     	;# 
  6731  0491                     	;# 
  6732  0492                     	;# 
  6733  0492                     	;# 
  6734  0493                     	;# 
  6735  0494                     	;# 
  6736  0495                     	;# 
  6737  0495                     	;# 
  6738  0496                     	;# 
  6739  0497                     	;# 
  6740  0498                     	;# 
  6741  0499                     	;# 
  6742  049A                     	;# 
  6743  049B                     	;# 
  6744  049C                     	;# 
  6745  049D                     	;# 
  6746  058C                     	;# 
  6747  058C                     	;# 
  6748  058D                     	;# 
  6749  058E                     	;# 
  6750  058F                     	;# 
  6751  058F                     	;# 
  6752  0590                     	;# 
  6753  0591                     	;# 
  6754  0592                     	;# 
  6755  0593                     	;# 
  6756  059C                     	;# 
  6757  059C                     	;# 
  6758  059D                     	;# 
  6759  059D                     	;# 
  6760  059E                     	;# 
  6761  059F                     	;# 
  6762  060C                     	;# 
  6763  060C                     	;# 
  6764  060D                     	;# 
  6765  060D                     	;# 
  6766  060E                     	;# 
  6767  060F                     	;# 
  6768  0610                     	;# 
  6769  0611                     	;# 
  6770  0612                     	;# 
  6771  0613                     	;# 
  6772  0614                     	;# 
  6773  0616                     	;# 
  6774  0616                     	;# 
  6775  0617                     	;# 
  6776  0617                     	;# 
  6777  0618                     	;# 
  6778  0619                     	;# 
  6779  061A                     	;# 
  6780  061B                     	;# 
  6781  061C                     	;# 
  6782  061D                     	;# 
  6783  061E                     	;# 
  6784  070C                     	;# 
  6785  070D                     	;# 
  6786  070E                     	;# 
  6787  070F                     	;# 
  6788  0710                     	;# 
  6789  0711                     	;# 
  6790  0712                     	;# 
  6791  0713                     	;# 
  6792  0714                     	;# 
  6793  0716                     	;# 
  6794  0717                     	;# 
  6795  0718                     	;# 
  6796  0719                     	;# 
  6797  071A                     	;# 
  6798  071B                     	;# 
  6799  071C                     	;# 
  6800  071D                     	;# 
  6801  071E                     	;# 
  6802  0796                     	;# 
  6803  0797                     	;# 
  6804  0798                     	;# 
  6805  0799                     	;# 
  6806  079A                     	;# 
  6807  079B                     	;# 
  6808  079C                     	;# 
  6809  079D                     	;# 
  6810  080C                     	;# 
  6811  080D                     	;# 
  6812  080E                     	;# 
  6813  080F                     	;# 
  6814  0810                     	;# 
  6815  0811                     	;# 
  6816  0812                     	;# 
  6817  0813                     	;# 
  6818  0814                     	;# 
  6819  081A                     	;# 
  6820  081A                     	;# 
  6821  081B                     	;# 
  6822  081C                     	;# 
  6823  081C                     	;# 
  6824  081D                     	;# 
  6825  081E                     	;# 
  6826  081F                     	;# 
  6827  088C                     	;# 
  6828  088D                     	;# 
  6829  088E                     	;# 
  6830  088F                     	;# 
  6831  0890                     	;# 
  6832  0891                     	;# 
  6833  0892                     	;# 
  6834  0893                     	;# 
  6835  0895                     	;# 
  6836  0896                     	;# 
  6837  0897                     	;# 
  6838  0898                     	;# 
  6839  0899                     	;# 
  6840  089A                     	;# 
  6841  089B                     	;# 
  6842  090C                     	;# 
  6843  090E                     	;# 
  6844  090F                     	;# 
  6845  091F                     	;# 
  6846  098F                     	;# 
  6847  098F                     	;# 
  6848  0990                     	;# 
  6849  0991                     	;# 
  6850  0992                     	;# 
  6851  0993                     	;# 
  6852  0994                     	;# 
  6853  0995                     	;# 
  6854  0996                     	;# 
  6855  0997                     	;# 
  6856  1E0F                     	;# 
  6857  1E10                     	;# 
  6858  1E11                     	;# 
  6859  1E12                     	;# 
  6860  1E13                     	;# 
  6861  1E14                     	;# 
  6862  1E15                     	;# 
  6863  1E16                     	;# 
  6864  1E17                     	;# 
  6865  1E18                     	;# 
  6866  1E19                     	;# 
  6867  1E1A                     	;# 
  6868  1E1B                     	;# 
  6869  1E1C                     	;# 
  6870  1E1D                     	;# 
  6871  1E1E                     	;# 
  6872  1E1F                     	;# 
  6873  1E20                     	;# 
  6874  1E21                     	;# 
  6875  1E22                     	;# 
  6876  1E23                     	;# 
  6877  1E24                     	;# 
  6878  1E25                     	;# 
  6879  1E26                     	;# 
  6880  1E27                     	;# 
  6881  1E28                     	;# 
  6882  1E29                     	;# 
  6883  1E2A                     	;# 
  6884  1E2B                     	;# 
  6885  1E2C                     	;# 
  6886  1E2D                     	;# 
  6887  1E2E                     	;# 
  6888  1E2F                     	;# 
  6889  1E30                     	;# 
  6890  1E31                     	;# 
  6891  1E32                     	;# 
  6892  1E33                     	;# 
  6893  1E34                     	;# 
  6894  1E35                     	;# 
  6895  1E36                     	;# 
  6896  1E37                     	;# 
  6897  1E8F                     	;# 
  6898  1E90                     	;# 
  6899  1E91                     	;# 
  6900  1E92                     	;# 
  6901  1E93                     	;# 
  6902  1E94                     	;# 
  6903  1E95                     	;# 
  6904  1E96                     	;# 
  6905  1E97                     	;# 
  6906  1E9C                     	;# 
  6907  1E9D                     	;# 
  6908  1E9E                     	;# 
  6909  1EA1                     	;# 
  6910  1EA2                     	;# 
  6911  1EA3                     	;# 
  6912  1EA4                     	;# 
  6913  1EA9                     	;# 
  6914  1EAA                     	;# 
  6915  1EB1                     	;# 
  6916  1EB2                     	;# 
  6917  1EB8                     	;# 
  6918  1EB9                     	;# 
  6919  1EBA                     	;# 
  6920  1EBB                     	;# 
  6921  1EBC                     	;# 
  6922  1EBD                     	;# 
  6923  1EBE                     	;# 
  6924  1EC3                     	;# 
  6925  1EC5                     	;# 
  6926  1EC6                     	;# 
  6927  1EC7                     	;# 
  6928  1EC8                     	;# 
  6929  1EC9                     	;# 
  6930  1ECA                     	;# 
  6931  1ECB                     	;# 
  6932  1ECB                     	;# 
  6933  1ECB                     	;# 
  6934  1ECC                     	;# 
  6935  1ECC                     	;# 
  6936  1ECC                     	;# 
  6937  1F10                     	;# 
  6938  1F11                     	;# 
  6939  1F12                     	;# 
  6940  1F14                     	;# 
  6941  1F15                     	;# 
  6942  1F1C                     	;# 
  6943  1F1D                     	;# 
  6944  1F1E                     	;# 
  6945  1F1F                     	;# 
  6946  1F20                     	;# 
  6947  1F21                     	;# 
  6948  1F22                     	;# 
  6949  1F23                     	;# 
  6950  1F24                     	;# 
  6951  1F25                     	;# 
  6952  1F26                     	;# 
  6953  1F27                     	;# 
  6954  1F38                     	;# 
  6955  1F39                     	;# 
  6956  1F3A                     	;# 
  6957  1F3B                     	;# 
  6958  1F3C                     	;# 
  6959  1F3D                     	;# 
  6960  1F3E                     	;# 
  6961  1F3F                     	;# 
  6962  1F43                     	;# 
  6963  1F44                     	;# 
  6964  1F45                     	;# 
  6965  1F46                     	;# 
  6966  1F47                     	;# 
  6967  1F48                     	;# 
  6968  1F49                     	;# 
  6969  1F4A                     	;# 
  6970  1F4E                     	;# 
  6971  1F4F                     	;# 
  6972  1F50                     	;# 
  6973  1F51                     	;# 
  6974  1F52                     	;# 
  6975  1F53                     	;# 
  6976  1F54                     	;# 
  6977  1F55                     	;# 
  6978  1FE4                     	;# 
  6979  1FE5                     	;# 
  6980  1FE6                     	;# 
  6981  1FE7                     	;# 
  6982  1FE8                     	;# 
  6983  1FE8                     	;# 
  6984  1FE9                     	;# 
  6985  1FEA                     	;# 
  6986  1FEB                     	;# 
  6987  1FED                     	;# 
  6988  1FEE                     	;# 
  6989  1FEF                     	;# 
  6990  0000                     	;# 
  6991  0001                     	;# 
  6992  0002                     	;# 
  6993  0003                     	;# 
  6994  0004                     	;# 
  6995  0005                     	;# 
  6996  0006                     	;# 
  6997  0007                     	;# 
  6998  0008                     	;# 
  6999  0009                     	;# 
  7000  000A                     	;# 
  7001  000B                     	;# 
  7002  000C                     	;# 
  7003  000D                     	;# 
  7004  000E                     	;# 
  7005  0012                     	;# 
  7006  0013                     	;# 
  7007  0014                     	;# 
  7008  0018                     	;# 
  7009  0019                     	;# 
  7010  001A                     	;# 
  7011  008C                     	;# 
  7012  008C                     	;# 
  7013  008D                     	;# 
  7014  008E                     	;# 
  7015  008E                     	;# 
  7016  008F                     	;# 
  7017  0090                     	;# 
  7018  0090                     	;# 
  7019  0091                     	;# 
  7020  0092                     	;# 
  7021  0092                     	;# 
  7022  0093                     	;# 
  7023  0094                     	;# 
  7024  0094                     	;# 
  7025  0095                     	;# 
  7026  0096                     	;# 
  7027  0096                     	;# 
  7028  0097                     	;# 
  7029  0098                     	;# 
  7030  0099                     	;# 
  7031  009A                     	;# 
  7032  009B                     	;# 
  7033  009B                     	;# 
  7034  009C                     	;# 
  7035  009D                     	;# 
  7036  009D                     	;# 
  7037  009E                     	;# 
  7038  009F                     	;# 
  7039  010C                     	;# 
  7040  010C                     	;# 
  7041  010D                     	;# 
  7042  010E                     	;# 
  7043  010F                     	;# 
  7044  010F                     	;# 
  7045  0110                     	;# 
  7046  0111                     	;# 
  7047  0112                     	;# 
  7048  0113                     	;# 
  7049  0114                     	;# 
  7050  0115                     	;# 
  7051  0116                     	;# 
  7052  0117                     	;# 
  7053  0118                     	;# 
  7054  0119                     	;# 
  7055  0119                     	;# 
  7056  0119                     	;# 
  7057  011A                     	;# 
  7058  011A                     	;# 
  7059  011A                     	;# 
  7060  011B                     	;# 
  7061  011B                     	;# 
  7062  011B                     	;# 
  7063  011B                     	;# 
  7064  011B                     	;# 
  7065  011C                     	;# 
  7066  011C                     	;# 
  7067  011C                     	;# 
  7068  011D                     	;# 
  7069  011D                     	;# 
  7070  011D                     	;# 
  7071  011E                     	;# 
  7072  011E                     	;# 
  7073  011E                     	;# 
  7074  011F                     	;# 
  7075  011F                     	;# 
  7076  011F                     	;# 
  7077  011F                     	;# 
  7078  011F                     	;# 
  7079  018C                     	;# 
  7080  018D                     	;# 
  7081  018E                     	;# 
  7082  018F                     	;# 
  7083  0190                     	;# 
  7084  0191                     	;# 
  7085  0192                     	;# 
  7086  0196                     	;# 
  7087  0197                     	;# 
  7088  0198                     	;# 
  7089  0199                     	;# 
  7090  019A                     	;# 
  7091  019B                     	;# 
  7092  019C                     	;# 
  7093  020C                     	;# 
  7094  020D                     	;# 
  7095  020E                     	;# 
  7096  020E                     	;# 
  7097  020F                     	;# 
  7098  020F                     	;# 
  7099  0210                     	;# 
  7100  0210                     	;# 
  7101  0211                     	;# 
  7102  0211                     	;# 
  7103  0212                     	;# 
  7104  0213                     	;# 
  7105  0214                     	;# 
  7106  0214                     	;# 
  7107  0215                     	;# 
  7108  0215                     	;# 
  7109  0216                     	;# 
  7110  0216                     	;# 
  7111  0217                     	;# 
  7112  0217                     	;# 
  7113  0218                     	;# 
  7114  0219                     	;# 
  7115  021A                     	;# 
  7116  021A                     	;# 
  7117  021B                     	;# 
  7118  021B                     	;# 
  7119  021C                     	;# 
  7120  021C                     	;# 
  7121  021D                     	;# 
  7122  021D                     	;# 
  7123  021E                     	;# 
  7124  021F                     	;# 
  7125  028C                     	;# 
  7126  028C                     	;# 
  7127  028D                     	;# 
  7128  028D                     	;# 
  7129  028E                     	;# 
  7130  028F                     	;# 
  7131  0290                     	;# 
  7132  0291                     	;# 
  7133  0292                     	;# 
  7134  0292                     	;# 
  7135  0293                     	;# 
  7136  0293                     	;# 
  7137  0294                     	;# 
  7138  0295                     	;# 
  7139  0296                     	;# 
  7140  0297                     	;# 
  7141  0298                     	;# 
  7142  0298                     	;# 
  7143  0299                     	;# 
  7144  0299                     	;# 
  7145  029A                     	;# 
  7146  029B                     	;# 
  7147  029C                     	;# 
  7148  029D                     	;# 
  7149  029F                     	;# 
  7150  030C                     	;# 
  7151  030C                     	;# 
  7152  030D                     	;# 
  7153  030E                     	;# 
  7154  030F                     	;# 
  7155  0310                     	;# 
  7156  0310                     	;# 
  7157  0311                     	;# 
  7158  0312                     	;# 
  7159  0313                     	;# 
  7160  0314                     	;# 
  7161  0314                     	;# 
  7162  0315                     	;# 
  7163  0316                     	;# 
  7164  0317                     	;# 
  7165  0318                     	;# 
  7166  0318                     	;# 
  7167  0319                     	;# 
  7168  031A                     	;# 
  7169  031B                     	;# 
  7170  038C                     	;# 
  7171  038C                     	;# 
  7172  038D                     	;# 
  7173  038E                     	;# 
  7174  0390                     	;# 
  7175  0390                     	;# 
  7176  0391                     	;# 
  7177  0392                     	;# 
  7178  048C                     	;# 
  7179  048C                     	;# 
  7180  048D                     	;# 
  7181  048E                     	;# 
  7182  048F                     	;# 
  7183  048F                     	;# 
  7184  0490                     	;# 
  7185  0491                     	;# 
  7186  0492                     	;# 
  7187  0492                     	;# 
  7188  0493                     	;# 
  7189  0494                     	;# 
  7190  0495                     	;# 
  7191  0495                     	;# 
  7192  0496                     	;# 
  7193  0497                     	;# 
  7194  0498                     	;# 
  7195  0499                     	;# 
  7196  049A                     	;# 
  7197  049B                     	;# 
  7198  049C                     	;# 
  7199  049D                     	;# 
  7200  058C                     	;# 
  7201  058C                     	;# 
  7202  058D                     	;# 
  7203  058E                     	;# 
  7204  058F                     	;# 
  7205  058F                     	;# 
  7206  0590                     	;# 
  7207  0591                     	;# 
  7208  0592                     	;# 
  7209  0593                     	;# 
  7210  059C                     	;# 
  7211  059C                     	;# 
  7212  059D                     	;# 
  7213  059D                     	;# 
  7214  059E                     	;# 
  7215  059F                     	;# 
  7216  060C                     	;# 
  7217  060C                     	;# 
  7218  060D                     	;# 
  7219  060D                     	;# 
  7220  060E                     	;# 
  7221  060F                     	;# 
  7222  0610                     	;# 
  7223  0611                     	;# 
  7224  0612                     	;# 
  7225  0613                     	;# 
  7226  0614                     	;# 
  7227  0616                     	;# 
  7228  0616                     	;# 
  7229  0617                     	;# 
  7230  0617                     	;# 
  7231  0618                     	;# 
  7232  0619                     	;# 
  7233  061A                     	;# 
  7234  061B                     	;# 
  7235  061C                     	;# 
  7236  061D                     	;# 
  7237  061E                     	;# 
  7238  070C                     	;# 
  7239  070D                     	;# 
  7240  070E                     	;# 
  7241  070F                     	;# 
  7242  0710                     	;# 
  7243  0711                     	;# 
  7244  0712                     	;# 
  7245  0713                     	;# 
  7246  0714                     	;# 
  7247  0716                     	;# 
  7248  0717                     	;# 
  7249  0718                     	;# 
  7250  0719                     	;# 
  7251  071A                     	;# 
  7252  071B                     	;# 
  7253  071C                     	;# 
  7254  071D                     	;# 
  7255  071E                     	;# 
  7256  0796                     	;# 
  7257  0797                     	;# 
  7258  0798                     	;# 
  7259  0799                     	;# 
  7260  079A                     	;# 
  7261  079B                     	;# 
  7262  079C                     	;# 
  7263  079D                     	;# 
  7264  080C                     	;# 
  7265  080D                     	;# 
  7266  080E                     	;# 
  7267  080F                     	;# 
  7268  0810                     	;# 
  7269  0811                     	;# 
  7270  0812                     	;# 
  7271  0813                     	;# 
  7272  0814                     	;# 
  7273  081A                     	;# 
  7274  081A                     	;# 
  7275  081B                     	;# 
  7276  081C                     	;# 
  7277  081C                     	;# 
  7278  081D                     	;# 
  7279  081E                     	;# 
  7280  081F                     	;# 
  7281  088C                     	;# 
  7282  088D                     	;# 
  7283  088E                     	;# 
  7284  088F                     	;# 
  7285  0890                     	;# 
  7286  0891                     	;# 
  7287  0892                     	;# 
  7288  0893                     	;# 
  7289  0895                     	;# 
  7290  0896                     	;# 
  7291  0897                     	;# 
  7292  0898                     	;# 
  7293  0899                     	;# 
  7294  089A                     	;# 
  7295  089B                     	;# 
  7296  090C                     	;# 
  7297  090E                     	;# 
  7298  090F                     	;# 
  7299  091F                     	;# 
  7300  098F                     	;# 
  7301  098F                     	;# 
  7302  0990                     	;# 
  7303  0991                     	;# 
  7304  0992                     	;# 
  7305  0993                     	;# 
  7306  0994                     	;# 
  7307  0995                     	;# 
  7308  0996                     	;# 
  7309  0997                     	;# 
  7310  1E0F                     	;# 
  7311  1E10                     	;# 
  7312  1E11                     	;# 
  7313  1E12                     	;# 
  7314  1E13                     	;# 
  7315  1E14                     	;# 
  7316  1E15                     	;# 
  7317  1E16                     	;# 
  7318  1E17                     	;# 
  7319  1E18                     	;# 
  7320  1E19                     	;# 
  7321  1E1A                     	;# 
  7322  1E1B                     	;# 
  7323  1E1C                     	;# 
  7324  1E1D                     	;# 
  7325  1E1E                     	;# 
  7326  1E1F                     	;# 
  7327  1E20                     	;# 
  7328  1E21                     	;# 
  7329  1E22                     	;# 
  7330  1E23                     	;# 
  7331  1E24                     	;# 
  7332  1E25                     	;# 
  7333  1E26                     	;# 
  7334  1E27                     	;# 
  7335  1E28                     	;# 
  7336  1E29                     	;# 
  7337  1E2A                     	;# 
  7338  1E2B                     	;# 
  7339  1E2C                     	;# 
  7340  1E2D                     	;# 
  7341  1E2E                     	;# 
  7342  1E2F                     	;# 
  7343  1E30                     	;# 
  7344  1E31                     	;# 
  7345  1E32                     	;# 
  7346  1E33                     	;# 
  7347  1E34                     	;# 
  7348  1E35                     	;# 
  7349  1E36                     	;# 
  7350  1E37                     	;# 
  7351  1E8F                     	;# 
  7352  1E90                     	;# 
  7353  1E91                     	;# 
  7354  1E92                     	;# 
  7355  1E93                     	;# 
  7356  1E94                     	;# 
  7357  1E95                     	;# 
  7358  1E96                     	;# 
  7359  1E97                     	;# 
  7360  1E9C                     	;# 
  7361  1E9D                     	;# 
  7362  1E9E                     	;# 
  7363  1EA1                     	;# 
  7364  1EA2                     	;# 
  7365  1EA3                     	;# 
  7366  1EA4                     	;# 
  7367  1EA9                     	;# 
  7368  1EAA                     	;# 
  7369  1EB1                     	;# 
  7370  1EB2                     	;# 
  7371  1EB8                     	;# 
  7372  1EB9                     	;# 
  7373  1EBA                     	;# 
  7374  1EBB                     	;# 
  7375  1EBC                     	;# 
  7376  1EBD                     	;# 
  7377  1EBE                     	;# 
  7378  1EC3                     	;# 
  7379  1EC5                     	;# 
  7380  1EC6                     	;# 
  7381  1EC7                     	;# 
  7382  1EC8                     	;# 
  7383  1EC9                     	;# 
  7384  1ECA                     	;# 
  7385  1ECB                     	;# 
  7386  1ECB                     	;# 
  7387  1ECB                     	;# 
  7388  1ECC                     	;# 
  7389  1ECC                     	;# 
  7390  1ECC                     	;# 
  7391  1F10                     	;# 
  7392  1F11                     	;# 
  7393  1F12                     	;# 
  7394  1F14                     	;# 
  7395  1F15                     	;# 
  7396  1F1C                     	;# 
  7397  1F1D                     	;# 
  7398  1F1E                     	;# 
  7399  1F1F                     	;# 
  7400  1F20                     	;# 
  7401  1F21                     	;# 
  7402  1F22                     	;# 
  7403  1F23                     	;# 
  7404  1F24                     	;# 
  7405  1F25                     	;# 
  7406  1F26                     	;# 
  7407  1F27                     	;# 
  7408  1F38                     	;# 
  7409  1F39                     	;# 
  7410  1F3A                     	;# 
  7411  1F3B                     	;# 
  7412  1F3C                     	;# 
  7413  1F3D                     	;# 
  7414  1F3E                     	;# 
  7415  1F3F                     	;# 
  7416  1F43                     	;# 
  7417  1F44                     	;# 
  7418  1F45                     	;# 
  7419  1F46                     	;# 
  7420  1F47                     	;# 
  7421  1F48                     	;# 
  7422  1F49                     	;# 
  7423  1F4A                     	;# 
  7424  1F4E                     	;# 
  7425  1F4F                     	;# 
  7426  1F50                     	;# 
  7427  1F51                     	;# 
  7428  1F52                     	;# 
  7429  1F53                     	;# 
  7430  1F54                     	;# 
  7431  1F55                     	;# 
  7432  1FE4                     	;# 
  7433  1FE5                     	;# 
  7434  1FE6                     	;# 
  7435  1FE7                     	;# 
  7436  1FE8                     	;# 
  7437  1FE8                     	;# 
  7438  1FE9                     	;# 
  7439  1FEA                     	;# 
  7440  1FEB                     	;# 
  7441  1FED                     	;# 
  7442  1FEE                     	;# 
  7443  1FEF                     	;# 
  7444  0000                     	;# 
  7445  0001                     	;# 
  7446  0002                     	;# 
  7447  0003                     	;# 
  7448  0004                     	;# 
  7449  0005                     	;# 
  7450  0006                     	;# 
  7451  0007                     	;# 
  7452  0008                     	;# 
  7453  0009                     	;# 
  7454  000A                     	;# 
  7455  000B                     	;# 
  7456  000C                     	;# 
  7457  000D                     	;# 
  7458  000E                     	;# 
  7459  0012                     	;# 
  7460  0013                     	;# 
  7461  0014                     	;# 
  7462  0018                     	;# 
  7463  0019                     	;# 
  7464  001A                     	;# 
  7465  008C                     	;# 
  7466  008C                     	;# 
  7467  008D                     	;# 
  7468  008E                     	;# 
  7469  008E                     	;# 
  7470  008F                     	;# 
  7471  0090                     	;# 
  7472  0090                     	;# 
  7473  0091                     	;# 
  7474  0092                     	;# 
  7475  0092                     	;# 
  7476  0093                     	;# 
  7477  0094                     	;# 
  7478  0094                     	;# 
  7479  0095                     	;# 
  7480  0096                     	;# 
  7481  0096                     	;# 
  7482  0097                     	;# 
  7483  0098                     	;# 
  7484  0099                     	;# 
  7485  009A                     	;# 
  7486  009B                     	;# 
  7487  009B                     	;# 
  7488  009C                     	;# 
  7489  009D                     	;# 
  7490  009D                     	;# 
  7491  009E                     	;# 
  7492  009F                     	;# 
  7493  010C                     	;# 
  7494  010C                     	;# 
  7495  010D                     	;# 
  7496  010E                     	;# 
  7497  010F                     	;# 
  7498  010F                     	;# 
  7499  0110                     	;# 
  7500  0111                     	;# 
  7501  0112                     	;# 
  7502  0113                     	;# 
  7503  0114                     	;# 
  7504  0115                     	;# 
  7505  0116                     	;# 
  7506  0117                     	;# 
  7507  0118                     	;# 
  7508  0119                     	;# 
  7509  0119                     	;# 
  7510  0119                     	;# 
  7511  011A                     	;# 
  7512  011A                     	;# 
  7513  011A                     	;# 
  7514  011B                     	;# 
  7515  011B                     	;# 
  7516  011B                     	;# 
  7517  011B                     	;# 
  7518  011B                     	;# 
  7519  011C                     	;# 
  7520  011C                     	;# 
  7521  011C                     	;# 
  7522  011D                     	;# 
  7523  011D                     	;# 
  7524  011D                     	;# 
  7525  011E                     	;# 
  7526  011E                     	;# 
  7527  011E                     	;# 
  7528  011F                     	;# 
  7529  011F                     	;# 
  7530  011F                     	;# 
  7531  011F                     	;# 
  7532  011F                     	;# 
  7533  018C                     	;# 
  7534  018D                     	;# 
  7535  018E                     	;# 
  7536  018F                     	;# 
  7537  0190                     	;# 
  7538  0191                     	;# 
  7539  0192                     	;# 
  7540  0196                     	;# 
  7541  0197                     	;# 
  7542  0198                     	;# 
  7543  0199                     	;# 
  7544  019A                     	;# 
  7545  019B                     	;# 
  7546  019C                     	;# 
  7547  020C                     	;# 
  7548  020D                     	;# 
  7549  020E                     	;# 
  7550  020E                     	;# 
  7551  020F                     	;# 
  7552  020F                     	;# 
  7553  0210                     	;# 
  7554  0210                     	;# 
  7555  0211                     	;# 
  7556  0211                     	;# 
  7557  0212                     	;# 
  7558  0213                     	;# 
  7559  0214                     	;# 
  7560  0214                     	;# 
  7561  0215                     	;# 
  7562  0215                     	;# 
  7563  0216                     	;# 
  7564  0216                     	;# 
  7565  0217                     	;# 
  7566  0217                     	;# 
  7567  0218                     	;# 
  7568  0219                     	;# 
  7569  021A                     	;# 
  7570  021A                     	;# 
  7571  021B                     	;# 
  7572  021B                     	;# 
  7573  021C                     	;# 
  7574  021C                     	;# 
  7575  021D                     	;# 
  7576  021D                     	;# 
  7577  021E                     	;# 
  7578  021F                     	;# 
  7579  028C                     	;# 
  7580  028C                     	;# 
  7581  028D                     	;# 
  7582  028D                     	;# 
  7583  028E                     	;# 
  7584  028F                     	;# 
  7585  0290                     	;# 
  7586  0291                     	;# 
  7587  0292                     	;# 
  7588  0292                     	;# 
  7589  0293                     	;# 
  7590  0293                     	;# 
  7591  0294                     	;# 
  7592  0295                     	;# 
  7593  0296                     	;# 
  7594  0297                     	;# 
  7595  0298                     	;# 
  7596  0298                     	;# 
  7597  0299                     	;# 
  7598  0299                     	;# 
  7599  029A                     	;# 
  7600  029B                     	;# 
  7601  029C                     	;# 
  7602  029D                     	;# 
  7603  029F                     	;# 
  7604  030C                     	;# 
  7605  030C                     	;# 
  7606  030D                     	;# 
  7607  030E                     	;# 
  7608  030F                     	;# 
  7609  0310                     	;# 
  7610  0310                     	;# 
  7611  0311                     	;# 
  7612  0312                     	;# 
  7613  0313                     	;# 
  7614  0314                     	;# 
  7615  0314                     	;# 
  7616  0315                     	;# 
  7617  0316                     	;# 
  7618  0317                     	;# 
  7619  0318                     	;# 
  7620  0318                     	;# 
  7621  0319                     	;# 
  7622  031A                     	;# 
  7623  031B                     	;# 
  7624  038C                     	;# 
  7625  038C                     	;# 
  7626  038D                     	;# 
  7627  038E                     	;# 
  7628  0390                     	;# 
  7629  0390                     	;# 
  7630  0391                     	;# 
  7631  0392                     	;# 
  7632  048C                     	;# 
  7633  048C                     	;# 
  7634  048D                     	;# 
  7635  048E                     	;# 
  7636  048F                     	;# 
  7637  048F                     	;# 
  7638  0490                     	;# 
  7639  0491                     	;# 
  7640  0492                     	;# 
  7641  0492                     	;# 
  7642  0493                     	;# 
  7643  0494                     	;# 
  7644  0495                     	;# 
  7645  0495                     	;# 
  7646  0496                     	;# 
  7647  0497                     	;# 
  7648  0498                     	;# 
  7649  0499                     	;# 
  7650  049A                     	;# 
  7651  049B                     	;# 
  7652  049C                     	;# 
  7653  049D                     	;# 
  7654  058C                     	;# 
  7655  058C                     	;# 
  7656  058D                     	;# 
  7657  058E                     	;# 
  7658  058F                     	;# 
  7659  058F                     	;# 
  7660  0590                     	;# 
  7661  0591                     	;# 
  7662  0592                     	;# 
  7663  0593                     	;# 
  7664  059C                     	;# 
  7665  059C                     	;# 
  7666  059D                     	;# 
  7667  059D                     	;# 
  7668  059E                     	;# 
  7669  059F                     	;# 
  7670  060C                     	;# 
  7671  060C                     	;# 
  7672  060D                     	;# 
  7673  060D                     	;# 
  7674  060E                     	;# 
  7675  060F                     	;# 
  7676  0610                     	;# 
  7677  0611                     	;# 
  7678  0612                     	;# 
  7679  0613                     	;# 
  7680  0614                     	;# 
  7681  0616                     	;# 
  7682  0616                     	;# 
  7683  0617                     	;# 
  7684  0617                     	;# 
  7685  0618                     	;# 
  7686  0619                     	;# 
  7687  061A                     	;# 
  7688  061B                     	;# 
  7689  061C                     	;# 
  7690  061D                     	;# 
  7691  061E                     	;# 
  7692  070C                     	;# 
  7693  070D                     	;# 
  7694  070E                     	;# 
  7695  070F                     	;# 
  7696  0710                     	;# 
  7697  0711                     	;# 
  7698  0712                     	;# 
  7699  0713                     	;# 
  7700  0714                     	;# 
  7701  0716                     	;# 
  7702  0717                     	;# 
  7703  0718                     	;# 
  7704  0719                     	;# 
  7705  071A                     	;# 
  7706  071B                     	;# 
  7707  071C                     	;# 
  7708  071D                     	;# 
  7709  071E                     	;# 
  7710  0796                     	;# 
  7711  0797                     	;# 
  7712  0798                     	;# 
  7713  0799                     	;# 
  7714  079A                     	;# 
  7715  079B                     	;# 
  7716  079C                     	;# 
  7717  079D                     	;# 
  7718  080C                     	;# 
  7719  080D                     	;# 
  7720  080E                     	;# 
  7721  080F                     	;# 
  7722  0810                     	;# 
  7723  0811                     	;# 
  7724  0812                     	;# 
  7725  0813                     	;# 
  7726  0814                     	;# 
  7727  081A                     	;# 
  7728  081A                     	;# 
  7729  081B                     	;# 
  7730  081C                     	;# 
  7731  081C                     	;# 
  7732  081D                     	;# 
  7733  081E                     	;# 
  7734  081F                     	;# 
  7735  088C                     	;# 
  7736  088D                     	;# 
  7737  088E                     	;# 
  7738  088F                     	;# 
  7739  0890                     	;# 
  7740  0891                     	;# 
  7741  0892                     	;# 
  7742  0893                     	;# 
  7743  0895                     	;# 
  7744  0896                     	;# 
  7745  0897                     	;# 
  7746  0898                     	;# 
  7747  0899                     	;# 
  7748  089A                     	;# 
  7749  089B                     	;# 
  7750  090C                     	;# 
  7751  090E                     	;# 
  7752  090F                     	;# 
  7753  091F                     	;# 
  7754  098F                     	;# 
  7755  098F                     	;# 
  7756  0990                     	;# 
  7757  0991                     	;# 
  7758  0992                     	;# 
  7759  0993                     	;# 
  7760  0994                     	;# 
  7761  0995                     	;# 
  7762  0996                     	;# 
  7763  0997                     	;# 
  7764  1E0F                     	;# 
  7765  1E10                     	;# 
  7766  1E11                     	;# 
  7767  1E12                     	;# 
  7768  1E13                     	;# 
  7769  1E14                     	;# 
  7770  1E15                     	;# 
  7771  1E16                     	;# 
  7772  1E17                     	;# 
  7773  1E18                     	;# 
  7774  1E19                     	;# 
  7775  1E1A                     	;# 
  7776  1E1B                     	;# 
  7777  1E1C                     	;# 
  7778  1E1D                     	;# 
  7779  1E1E                     	;# 
  7780  1E1F                     	;# 
  7781  1E20                     	;# 
  7782  1E21                     	;# 
  7783  1E22                     	;# 
  7784  1E23                     	;# 
  7785  1E24                     	;# 
  7786  1E25                     	;# 
  7787  1E26                     	;# 
  7788  1E27                     	;# 
  7789  1E28                     	;# 
  7790  1E29                     	;# 
  7791  1E2A                     	;# 
  7792  1E2B                     	;# 
  7793  1E2C                     	;# 
  7794  1E2D                     	;# 
  7795  1E2E                     	;# 
  7796  1E2F                     	;# 
  7797  1E30                     	;# 
  7798  1E31                     	;# 
  7799  1E32                     	;# 
  7800  1E33                     	;# 
  7801  1E34                     	;# 
  7802  1E35                     	;# 
  7803  1E36                     	;# 
  7804  1E37                     	;# 
  7805  1E8F                     	;# 
  7806  1E90                     	;# 
  7807  1E91                     	;# 
  7808  1E92                     	;# 
  7809  1E93                     	;# 
  7810  1E94                     	;# 
  7811  1E95                     	;# 
  7812  1E96                     	;# 
  7813  1E97                     	;# 
  7814  1E9C                     	;# 
  7815  1E9D                     	;# 
  7816  1E9E                     	;# 
  7817  1EA1                     	;# 
  7818  1EA2                     	;# 
  7819  1EA3                     	;# 
  7820  1EA4                     	;# 
  7821  1EA9                     	;# 
  7822  1EAA                     	;# 
  7823  1EB1                     	;# 
  7824  1EB2                     	;# 
  7825  1EB8                     	;# 
  7826  1EB9                     	;# 
  7827  1EBA                     	;# 
  7828  1EBB                     	;# 
  7829  1EBC                     	;# 
  7830  1EBD                     	;# 
  7831  1EBE                     	;# 
  7832  1EC3                     	;# 
  7833  1EC5                     	;# 
  7834  1EC6                     	;# 
  7835  1EC7                     	;# 
  7836  1EC8                     	;# 
  7837  1EC9                     	;# 
  7838  1ECA                     	;# 
  7839  1ECB                     	;# 
  7840  1ECB                     	;# 
  7841  1ECB                     	;# 
  7842  1ECC                     	;# 
  7843  1ECC                     	;# 
  7844  1ECC                     	;# 
  7845  1F10                     	;# 
  7846  1F11                     	;# 
  7847  1F12                     	;# 
  7848  1F14                     	;# 
  7849  1F15                     	;# 
  7850  1F1C                     	;# 
  7851  1F1D                     	;# 
  7852  1F1E                     	;# 
  7853  1F1F                     	;# 
  7854  1F20                     	;# 
  7855  1F21                     	;# 
  7856  1F22                     	;# 
  7857  1F23                     	;# 
  7858  1F24                     	;# 
  7859  1F25                     	;# 
  7860  1F26                     	;# 
  7861  1F27                     	;# 
  7862  1F38                     	;# 
  7863  1F39                     	;# 
  7864  1F3A                     	;# 
  7865  1F3B                     	;# 
  7866  1F3C                     	;# 
  7867  1F3D                     	;# 
  7868  1F3E                     	;# 
  7869  1F3F                     	;# 
  7870  1F43                     	;# 
  7871  1F44                     	;# 
  7872  1F45                     	;# 
  7873  1F46                     	;# 
  7874  1F47                     	;# 
  7875  1F48                     	;# 
  7876  1F49                     	;# 
  7877  1F4A                     	;# 
  7878  1F4E                     	;# 
  7879  1F4F                     	;# 
  7880  1F50                     	;# 
  7881  1F51                     	;# 
  7882  1F52                     	;# 
  7883  1F53                     	;# 
  7884  1F54                     	;# 
  7885  1F55                     	;# 
  7886  1FE4                     	;# 
  7887  1FE5                     	;# 
  7888  1FE6                     	;# 
  7889  1FE7                     	;# 
  7890  1FE8                     	;# 
  7891  1FE8                     	;# 
  7892  1FE9                     	;# 
  7893  1FEA                     	;# 
  7894  1FEB                     	;# 
  7895  1FED                     	;# 
  7896  1FEE                     	;# 
  7897  1FEF                     	;# 
  7898  0000                     	;# 
  7899  0001                     	;# 
  7900  0002                     	;# 
  7901  0003                     	;# 
  7902  0004                     	;# 
  7903  0005                     	;# 
  7904  0006                     	;# 
  7905  0007                     	;# 
  7906  0008                     	;# 
  7907  0009                     	;# 
  7908  000A                     	;# 
  7909  000B                     	;# 
  7910  000C                     	;# 
  7911  000D                     	;# 
  7912  000E                     	;# 
  7913  0012                     	;# 
  7914  0013                     	;# 
  7915  0014                     	;# 
  7916  0018                     	;# 
  7917  0019                     	;# 
  7918  001A                     	;# 
  7919  008C                     	;# 
  7920  008C                     	;# 
  7921  008D                     	;# 
  7922  008E                     	;# 
  7923  008E                     	;# 
  7924  008F                     	;# 
  7925  0090                     	;# 
  7926  0090                     	;# 
  7927  0091                     	;# 
  7928  0092                     	;# 
  7929  0092                     	;# 
  7930  0093                     	;# 
  7931  0094                     	;# 
  7932  0094                     	;# 
  7933  0095                     	;# 
  7934  0096                     	;# 
  7935  0096                     	;# 
  7936  0097                     	;# 
  7937  0098                     	;# 
  7938  0099                     	;# 
  7939  009A                     	;# 
  7940  009B                     	;# 
  7941  009B                     	;# 
  7942  009C                     	;# 
  7943  009D                     	;# 
  7944  009D                     	;# 
  7945  009E                     	;# 
  7946  009F                     	;# 
  7947  010C                     	;# 
  7948  010C                     	;# 
  7949  010D                     	;# 
  7950  010E                     	;# 
  7951  010F                     	;# 
  7952  010F                     	;# 
  7953  0110                     	;# 
  7954  0111                     	;# 
  7955  0112                     	;# 
  7956  0113                     	;# 
  7957  0114                     	;# 
  7958  0115                     	;# 
  7959  0116                     	;# 
  7960  0117                     	;# 
  7961  0118                     	;# 
  7962  0119                     	;# 
  7963  0119                     	;# 
  7964  0119                     	;# 
  7965  011A                     	;# 
  7966  011A                     	;# 
  7967  011A                     	;# 
  7968  011B                     	;# 
  7969  011B                     	;# 
  7970  011B                     	;# 
  7971  011B                     	;# 
  7972  011B                     	;# 
  7973  011C                     	;# 
  7974  011C                     	;# 
  7975  011C                     	;# 
  7976  011D                     	;# 
  7977  011D                     	;# 
  7978  011D                     	;# 
  7979  011E                     	;# 
  7980  011E                     	;# 
  7981  011E                     	;# 
  7982  011F                     	;# 
  7983  011F                     	;# 
  7984  011F                     	;# 
  7985  011F                     	;# 
  7986  011F                     	;# 
  7987  018C                     	;# 
  7988  018D                     	;# 
  7989  018E                     	;# 
  7990  018F                     	;# 
  7991  0190                     	;# 
  7992  0191                     	;# 
  7993  0192                     	;# 
  7994  0196                     	;# 
  7995  0197                     	;# 
  7996  0198                     	;# 
  7997  0199                     	;# 
  7998  019A                     	;# 
  7999  019B                     	;# 
  8000  019C                     	;# 
  8001  020C                     	;# 
  8002  020D                     	;# 
  8003  020E                     	;# 
  8004  020E                     	;# 
  8005  020F                     	;# 
  8006  020F                     	;# 
  8007  0210                     	;# 
  8008  0210                     	;# 
  8009  0211                     	;# 
  8010  0211                     	;# 
  8011  0212                     	;# 
  8012  0213                     	;# 
  8013  0214                     	;# 
  8014  0214                     	;# 
  8015  0215                     	;# 
  8016  0215                     	;# 
  8017  0216                     	;# 
  8018  0216                     	;# 
  8019  0217                     	;# 
  8020  0217                     	;# 
  8021  0218                     	;# 
  8022  0219                     	;# 
  8023  021A                     	;# 
  8024  021A                     	;# 
  8025  021B                     	;# 
  8026  021B                     	;# 
  8027  021C                     	;# 
  8028  021C                     	;# 
  8029  021D                     	;# 
  8030  021D                     	;# 
  8031  021E                     	;# 
  8032  021F                     	;# 
  8033  028C                     	;# 
  8034  028C                     	;# 
  8035  028D                     	;# 
  8036  028D                     	;# 
  8037  028E                     	;# 
  8038  028F                     	;# 
  8039  0290                     	;# 
  8040  0291                     	;# 
  8041  0292                     	;# 
  8042  0292                     	;# 
  8043  0293                     	;# 
  8044  0293                     	;# 
  8045  0294                     	;# 
  8046  0295                     	;# 
  8047  0296                     	;# 
  8048  0297                     	;# 
  8049  0298                     	;# 
  8050  0298                     	;# 
  8051  0299                     	;# 
  8052  0299                     	;# 
  8053  029A                     	;# 
  8054  029B                     	;# 
  8055  029C                     	;# 
  8056  029D                     	;# 
  8057  029F                     	;# 
  8058  030C                     	;# 
  8059  030C                     	;# 
  8060  030D                     	;# 
  8061  030E                     	;# 
  8062  030F                     	;# 
  8063  0310                     	;# 
  8064  0310                     	;# 
  8065  0311                     	;# 
  8066  0312                     	;# 
  8067  0313                     	;# 
  8068  0314                     	;# 
  8069  0314                     	;# 
  8070  0315                     	;# 
  8071  0316                     	;# 
  8072  0317                     	;# 
  8073  0318                     	;# 
  8074  0318                     	;# 
  8075  0319                     	;# 
  8076  031A                     	;# 
  8077  031B                     	;# 
  8078  038C                     	;# 
  8079  038C                     	;# 
  8080  038D                     	;# 
  8081  038E                     	;# 
  8082  0390                     	;# 
  8083  0390                     	;# 
  8084  0391                     	;# 
  8085  0392                     	;# 
  8086  048C                     	;# 
  8087  048C                     	;# 
  8088  048D                     	;# 
  8089  048E                     	;# 
  8090  048F                     	;# 
  8091  048F                     	;# 
  8092  0490                     	;# 
  8093  0491                     	;# 
  8094  0492                     	;# 
  8095  0492                     	;# 
  8096  0493                     	;# 
  8097  0494                     	;# 
  8098  0495                     	;# 
  8099  0495                     	;# 
  8100  0496                     	;# 
  8101  0497                     	;# 
  8102  0498                     	;# 
  8103  0499                     	;# 
  8104  049A                     	;# 
  8105  049B                     	;# 
  8106  049C                     	;# 
  8107  049D                     	;# 
  8108  058C                     	;# 
  8109  058C                     	;# 
  8110  058D                     	;# 
  8111  058E                     	;# 
  8112  058F                     	;# 
  8113  058F                     	;# 
  8114  0590                     	;# 
  8115  0591                     	;# 
  8116  0592                     	;# 
  8117  0593                     	;# 
  8118  059C                     	;# 
  8119  059C                     	;# 
  8120  059D                     	;# 
  8121  059D                     	;# 
  8122  059E                     	;# 
  8123  059F                     	;# 
  8124  060C                     	;# 
  8125  060C                     	;# 
  8126  060D                     	;# 
  8127  060D                     	;# 
  8128  060E                     	;# 
  8129  060F                     	;# 
  8130  0610                     	;# 
  8131  0611                     	;# 
  8132  0612                     	;# 
  8133  0613                     	;# 
  8134  0614                     	;# 
  8135  0616                     	;# 
  8136  0616                     	;# 
  8137  0617                     	;# 
  8138  0617                     	;# 
  8139  0618                     	;# 
  8140  0619                     	;# 
  8141  061A                     	;# 
  8142  061B                     	;# 
  8143  061C                     	;# 
  8144  061D                     	;# 
  8145  061E                     	;# 
  8146  070C                     	;# 
  8147  070D                     	;# 
  8148  070E                     	;# 
  8149  070F                     	;# 
  8150  0710                     	;# 
  8151  0711                     	;# 
  8152  0712                     	;# 
  8153  0713                     	;# 
  8154  0714                     	;# 
  8155  0716                     	;# 
  8156  0717                     	;# 
  8157  0718                     	;# 
  8158  0719                     	;# 
  8159  071A                     	;# 
  8160  071B                     	;# 
  8161  071C                     	;# 
  8162  071D                     	;# 
  8163  071E                     	;# 
  8164  0796                     	;# 
  8165  0797                     	;# 
  8166  0798                     	;# 
  8167  0799                     	;# 
  8168  079A                     	;# 
  8169  079B                     	;# 
  8170  079C                     	;# 
  8171  079D                     	;# 
  8172  080C                     	;# 
  8173  080D                     	;# 
  8174  080E                     	;# 
  8175  080F                     	;# 
  8176  0810                     	;# 
  8177  0811                     	;# 
  8178  0812                     	;# 
  8179  0813                     	;# 
  8180  0814                     	;# 
  8181  081A                     	;# 
  8182  081A                     	;# 
  8183  081B                     	;# 
  8184  081C                     	;# 
  8185  081C                     	;# 
  8186  081D                     	;# 
  8187  081E                     	;# 
  8188  081F                     	;# 
  8189  088C                     	;# 
  8190  088D                     	;# 
  8191  088E                     	;# 
  8192  088F                     	;# 
  8193  0890                     	;# 
  8194  0891                     	;# 
  8195  0892                     	;# 
  8196  0893                     	;# 
  8197  0895                     	;# 
  8198  0896                     	;# 
  8199  0897                     	;# 
  8200  0898                     	;# 
  8201  0899                     	;# 
  8202  089A                     	;# 
  8203  089B                     	;# 
  8204  090C                     	;# 
  8205  090E                     	;# 
  8206  090F                     	;# 
  8207  091F                     	;# 
  8208  098F                     	;# 
  8209  098F                     	;# 
  8210  0990                     	;# 
  8211  0991                     	;# 
  8212  0992                     	;# 
  8213  0993                     	;# 
  8214  0994                     	;# 
  8215  0995                     	;# 
  8216  0996                     	;# 
  8217  0997                     	;# 
  8218  1E0F                     	;# 
  8219  1E10                     	;# 
  8220  1E11                     	;# 
  8221  1E12                     	;# 
  8222  1E13                     	;# 
  8223  1E14                     	;# 
  8224  1E15                     	;# 
  8225  1E16                     	;# 
  8226  1E17                     	;# 
  8227  1E18                     	;# 
  8228  1E19                     	;# 
  8229  1E1A                     	;# 
  8230  1E1B                     	;# 
  8231  1E1C                     	;# 
  8232  1E1D                     	;# 
  8233  1E1E                     	;# 
  8234  1E1F                     	;# 
  8235  1E20                     	;# 
  8236  1E21                     	;# 
  8237  1E22                     	;# 
  8238  1E23                     	;# 
  8239  1E24                     	;# 
  8240  1E25                     	;# 
  8241  1E26                     	;# 
  8242  1E27                     	;# 
  8243  1E28                     	;# 
  8244  1E29                     	;# 
  8245  1E2A                     	;# 
  8246  1E2B                     	;# 
  8247  1E2C                     	;# 
  8248  1E2D                     	;# 
  8249  1E2E                     	;# 
  8250  1E2F                     	;# 
  8251  1E30                     	;# 
  8252  1E31                     	;# 
  8253  1E32                     	;# 
  8254  1E33                     	;# 
  8255  1E34                     	;# 
  8256  1E35                     	;# 
  8257  1E36                     	;# 
  8258  1E37                     	;# 
  8259  1E8F                     	;# 
  8260  1E90                     	;# 
  8261  1E91                     	;# 
  8262  1E92                     	;# 
  8263  1E93                     	;# 
  8264  1E94                     	;# 
  8265  1E95                     	;# 
  8266  1E96                     	;# 
  8267  1E97                     	;# 
  8268  1E9C                     	;# 
  8269  1E9D                     	;# 
  8270  1E9E                     	;# 
  8271  1EA1                     	;# 
  8272  1EA2                     	;# 
  8273  1EA3                     	;# 
  8274  1EA4                     	;# 
  8275  1EA9                     	;# 
  8276  1EAA                     	;# 
  8277  1EB1                     	;# 
  8278  1EB2                     	;# 
  8279  1EB8                     	;# 
  8280  1EB9                     	;# 
  8281  1EBA                     	;# 
  8282  1EBB                     	;# 
  8283  1EBC                     	;# 
  8284  1EBD                     	;# 
  8285  1EBE                     	;# 
  8286  1EC3                     	;# 
  8287  1EC5                     	;# 
  8288  1EC6                     	;# 
  8289  1EC7                     	;# 
  8290  1EC8                     	;# 
  8291  1EC9                     	;# 
  8292  1ECA                     	;# 
  8293  1ECB                     	;# 
  8294  1ECB                     	;# 
  8295  1ECB                     	;# 
  8296  1ECC                     	;# 
  8297  1ECC                     	;# 
  8298  1ECC                     	;# 
  8299  1F10                     	;# 
  8300  1F11                     	;# 
  8301  1F12                     	;# 
  8302  1F14                     	;# 
  8303  1F15                     	;# 
  8304  1F1C                     	;# 
  8305  1F1D                     	;# 
  8306  1F1E                     	;# 
  8307  1F1F                     	;# 
  8308  1F20                     	;# 
  8309  1F21                     	;# 
  8310  1F22                     	;# 
  8311  1F23                     	;# 
  8312  1F24                     	;# 
  8313  1F25                     	;# 
  8314  1F26                     	;# 
  8315  1F27                     	;# 
  8316  1F38                     	;# 
  8317  1F39                     	;# 
  8318  1F3A                     	;# 
  8319  1F3B                     	;# 
  8320  1F3C                     	;# 
  8321  1F3D                     	;# 
  8322  1F3E                     	;# 
  8323  1F3F                     	;# 
  8324  1F43                     	;# 
  8325  1F44                     	;# 
  8326  1F45                     	;# 
  8327  1F46                     	;# 
  8328  1F47                     	;# 
  8329  1F48                     	;# 
  8330  1F49                     	;# 
  8331  1F4A                     	;# 
  8332  1F4E                     	;# 
  8333  1F4F                     	;# 
  8334  1F50                     	;# 
  8335  1F51                     	;# 
  8336  1F52                     	;# 
  8337  1F53                     	;# 
  8338  1F54                     	;# 
  8339  1F55                     	;# 
  8340  1FE4                     	;# 
  8341  1FE5                     	;# 
  8342  1FE6                     	;# 
  8343  1FE7                     	;# 
  8344  1FE8                     	;# 
  8345  1FE8                     	;# 
  8346  1FE9                     	;# 
  8347  1FEA                     	;# 
  8348  1FEB                     	;# 
  8349  1FED                     	;# 
  8350  1FEE                     	;# 
  8351  1FEF                     	;# 
  8352  0000                     	;# 
  8353  0001                     	;# 
  8354  0002                     	;# 
  8355  0003                     	;# 
  8356  0004                     	;# 
  8357  0005                     	;# 
  8358  0006                     	;# 
  8359  0007                     	;# 
  8360  0008                     	;# 
  8361  0009                     	;# 
  8362  000A                     	;# 
  8363  000B                     	;# 
  8364  000C                     	;# 
  8365  000D                     	;# 
  8366  000E                     	;# 
  8367  0012                     	;# 
  8368  0013                     	;# 
  8369  0014                     	;# 
  8370  0018                     	;# 
  8371  0019                     	;# 
  8372  001A                     	;# 
  8373  008C                     	;# 
  8374  008C                     	;# 
  8375  008D                     	;# 
  8376  008E                     	;# 
  8377  008E                     	;# 
  8378  008F                     	;# 
  8379  0090                     	;# 
  8380  0090                     	;# 
  8381  0091                     	;# 
  8382  0092                     	;# 
  8383  0092                     	;# 
  8384  0093                     	;# 
  8385  0094                     	;# 
  8386  0094                     	;# 
  8387  0095                     	;# 
  8388  0096                     	;# 
  8389  0096                     	;# 
  8390  0097                     	;# 
  8391  0098                     	;# 
  8392  0099                     	;# 
  8393  009A                     	;# 
  8394  009B                     	;# 
  8395  009B                     	;# 
  8396  009C                     	;# 
  8397  009D                     	;# 
  8398  009D                     	;# 
  8399  009E                     	;# 
  8400  009F                     	;# 
  8401  010C                     	;# 
  8402  010C                     	;# 
  8403  010D                     	;# 
  8404  010E                     	;# 
  8405  010F                     	;# 
  8406  010F                     	;# 
  8407  0110                     	;# 
  8408  0111                     	;# 
  8409  0112                     	;# 
  8410  0113                     	;# 
  8411  0114                     	;# 
  8412  0115                     	;# 
  8413  0116                     	;# 
  8414  0117                     	;# 
  8415  0118                     	;# 
  8416  0119                     	;# 
  8417  0119                     	;# 
  8418  0119                     	;# 
  8419  011A                     	;# 
  8420  011A                     	;# 
  8421  011A                     	;# 
  8422  011B                     	;# 
  8423  011B                     	;# 
  8424  011B                     	;# 
  8425  011B                     	;# 
  8426  011B                     	;# 
  8427  011C                     	;# 
  8428  011C                     	;# 
  8429  011C                     	;# 
  8430  011D                     	;# 
  8431  011D                     	;# 
  8432  011D                     	;# 
  8433  011E                     	;# 
  8434  011E                     	;# 
  8435  011E                     	;# 
  8436  011F                     	;# 
  8437  011F                     	;# 
  8438  011F                     	;# 
  8439  011F                     	;# 
  8440  011F                     	;# 
  8441  018C                     	;# 
  8442  018D                     	;# 
  8443  018E                     	;# 
  8444  018F                     	;# 
  8445  0190                     	;# 
  8446  0191                     	;# 
  8447  0192                     	;# 
  8448  0196                     	;# 
  8449  0197                     	;# 
  8450  0198                     	;# 
  8451  0199                     	;# 
  8452  019A                     	;# 
  8453  019B                     	;# 
  8454  019C                     	;# 
  8455  020C                     	;# 
  8456  020D                     	;# 
  8457  020E                     	;# 
  8458  020E                     	;# 
  8459  020F                     	;# 
  8460  020F                     	;# 
  8461  0210                     	;# 
  8462  0210                     	;# 
  8463  0211                     	;# 
  8464  0211                     	;# 
  8465  0212                     	;# 
  8466  0213                     	;# 
  8467  0214                     	;# 
  8468  0214                     	;# 
  8469  0215                     	;# 
  8470  0215                     	;# 
  8471  0216                     	;# 
  8472  0216                     	;# 
  8473  0217                     	;# 
  8474  0217                     	;# 
  8475  0218                     	;# 
  8476  0219                     	;# 
  8477  021A                     	;# 
  8478  021A                     	;# 
  8479  021B                     	;# 
  8480  021B                     	;# 
  8481  021C                     	;# 
  8482  021C                     	;# 
  8483  021D                     	;# 
  8484  021D                     	;# 
  8485  021E                     	;# 
  8486  021F                     	;# 
  8487  028C                     	;# 
  8488  028C                     	;# 
  8489  028D                     	;# 
  8490  028D                     	;# 
  8491  028E                     	;# 
  8492  028F                     	;# 
  8493  0290                     	;# 
  8494  0291                     	;# 
  8495  0292                     	;# 
  8496  0292                     	;# 
  8497  0293                     	;# 
  8498  0293                     	;# 
  8499  0294                     	;# 
  8500  0295                     	;# 
  8501  0296                     	;# 
  8502  0297                     	;# 
  8503  0298                     	;# 
  8504  0298                     	;# 
  8505  0299                     	;# 
  8506  0299                     	;# 
  8507  029A                     	;# 
  8508  029B                     	;# 
  8509  029C                     	;# 
  8510  029D                     	;# 
  8511  029F                     	;# 
  8512  030C                     	;# 
  8513  030C                     	;# 
  8514  030D                     	;# 
  8515  030E                     	;# 
  8516  030F                     	;# 
  8517  0310                     	;# 
  8518  0310                     	;# 
  8519  0311                     	;# 
  8520  0312                     	;# 
  8521  0313                     	;# 
  8522  0314                     	;# 
  8523  0314                     	;# 
  8524  0315                     	;# 
  8525  0316                     	;# 
  8526  0317                     	;# 
  8527  0318                     	;# 
  8528  0318                     	;# 
  8529  0319                     	;# 
  8530  031A                     	;# 
  8531  031B                     	;# 
  8532  038C                     	;# 
  8533  038C                     	;# 
  8534  038D                     	;# 
  8535  038E                     	;# 
  8536  0390                     	;# 
  8537  0390                     	;# 
  8538  0391                     	;# 
  8539  0392                     	;# 
  8540  048C                     	;# 
  8541  048C                     	;# 
  8542  048D                     	;# 
  8543  048E                     	;# 
  8544  048F                     	;# 
  8545  048F                     	;# 
  8546  0490                     	;# 
  8547  0491                     	;# 
  8548  0492                     	;# 
  8549  0492                     	;# 
  8550  0493                     	;# 
  8551  0494                     	;# 
  8552  0495                     	;# 
  8553  0495                     	;# 
  8554  0496                     	;# 
  8555  0497                     	;# 
  8556  0498                     	;# 
  8557  0499                     	;# 
  8558  049A                     	;# 
  8559  049B                     	;# 
  8560  049C                     	;# 
  8561  049D                     	;# 
  8562  058C                     	;# 
  8563  058C                     	;# 
  8564  058D                     	;# 
  8565  058E                     	;# 
  8566  058F                     	;# 
  8567  058F                     	;# 
  8568  0590                     	;# 
  8569  0591                     	;# 
  8570  0592                     	;# 
  8571  0593                     	;# 
  8572  059C                     	;# 
  8573  059C                     	;# 
  8574  059D                     	;# 
  8575  059D                     	;# 
  8576  059E                     	;# 
  8577  059F                     	;# 
  8578  060C                     	;# 
  8579  060C                     	;# 
  8580  060D                     	;# 
  8581  060D                     	;# 
  8582  060E                     	;# 
  8583  060F                     	;# 
  8584  0610                     	;# 
  8585  0611                     	;# 
  8586  0612                     	;# 
  8587  0613                     	;# 
  8588  0614                     	;# 
  8589  0616                     	;# 
  8590  0616                     	;# 
  8591  0617                     	;# 
  8592  0617                     	;# 
  8593  0618                     	;# 
  8594  0619                     	;# 
  8595  061A                     	;# 
  8596  061B                     	;# 
  8597  061C                     	;# 
  8598  061D                     	;# 
  8599  061E                     	;# 
  8600  070C                     	;# 
  8601  070D                     	;# 
  8602  070E                     	;# 
  8603  070F                     	;# 
  8604  0710                     	;# 
  8605  0711                     	;# 
  8606  0712                     	;# 
  8607  0713                     	;# 
  8608  0714                     	;# 
  8609  0716                     	;# 
  8610  0717                     	;# 
  8611  0718                     	;# 
  8612  0719                     	;# 
  8613  071A                     	;# 
  8614  071B                     	;# 
  8615  071C                     	;# 
  8616  071D                     	;# 
  8617  071E                     	;# 
  8618  0796                     	;# 
  8619  0797                     	;# 
  8620  0798                     	;# 
  8621  0799                     	;# 
  8622  079A                     	;# 
  8623  079B                     	;# 
  8624  079C                     	;# 
  8625  079D                     	;# 
  8626  080C                     	;# 
  8627  080D                     	;# 
  8628  080E                     	;# 
  8629  080F                     	;# 
  8630  0810                     	;# 
  8631  0811                     	;# 
  8632  0812                     	;# 
  8633  0813                     	;# 
  8634  0814                     	;# 
  8635  081A                     	;# 
  8636  081A                     	;# 
  8637  081B                     	;# 
  8638  081C                     	;# 
  8639  081C                     	;# 
  8640  081D                     	;# 
  8641  081E                     	;# 
  8642  081F                     	;# 
  8643  088C                     	;# 
  8644  088D                     	;# 
  8645  088E                     	;# 
  8646  088F                     	;# 
  8647  0890                     	;# 
  8648  0891                     	;# 
  8649  0892                     	;# 
  8650  0893                     	;# 
  8651  0895                     	;# 
  8652  0896                     	;# 
  8653  0897                     	;# 
  8654  0898                     	;# 
  8655  0899                     	;# 
  8656  089A                     	;# 
  8657  089B                     	;# 
  8658  090C                     	;# 
  8659  090E                     	;# 
  8660  090F                     	;# 
  8661  091F                     	;# 
  8662  098F                     	;# 
  8663  098F                     	;# 
  8664  0990                     	;# 
  8665  0991                     	;# 
  8666  0992                     	;# 
  8667  0993                     	;# 
  8668  0994                     	;# 
  8669  0995                     	;# 
  8670  0996                     	;# 
  8671  0997                     	;# 
  8672  1E0F                     	;# 
  8673  1E10                     	;# 
  8674  1E11                     	;# 
  8675  1E12                     	;# 
  8676  1E13                     	;# 
  8677  1E14                     	;# 
  8678  1E15                     	;# 
  8679  1E16                     	;# 
  8680  1E17                     	;# 
  8681  1E18                     	;# 
  8682  1E19                     	;# 
  8683  1E1A                     	;# 
  8684  1E1B                     	;# 
  8685  1E1C                     	;# 
  8686  1E1D                     	;# 
  8687  1E1E                     	;# 
  8688  1E1F                     	;# 
  8689  1E20                     	;# 
  8690  1E21                     	;# 
  8691  1E22                     	;# 
  8692  1E23                     	;# 
  8693  1E24                     	;# 
  8694  1E25                     	;# 
  8695  1E26                     	;# 
  8696  1E27                     	;# 
  8697  1E28                     	;# 
  8698  1E29                     	;# 
  8699  1E2A                     	;# 
  8700  1E2B                     	;# 
  8701  1E2C                     	;# 
  8702  1E2D                     	;# 
  8703  1E2E                     	;# 
  8704  1E2F                     	;# 
  8705  1E30                     	;# 
  8706  1E31                     	;# 
  8707  1E32                     	;# 
  8708  1E33                     	;# 
  8709  1E34                     	;# 
  8710  1E35                     	;# 
  8711  1E36                     	;# 
  8712  1E37                     	;# 
  8713  1E8F                     	;# 
  8714  1E90                     	;# 
  8715  1E91                     	;# 
  8716  1E92                     	;# 
  8717  1E93                     	;# 
  8718  1E94                     	;# 
  8719  1E95                     	;# 
  8720  1E96                     	;# 
  8721  1E97                     	;# 
  8722  1E9C                     	;# 
  8723  1E9D                     	;# 
  8724  1E9E                     	;# 
  8725  1EA1                     	;# 
  8726  1EA2                     	;# 
  8727  1EA3                     	;# 
  8728  1EA4                     	;# 
  8729  1EA9                     	;# 
  8730  1EAA                     	;# 
  8731  1EB1                     	;# 
  8732  1EB2                     	;# 
  8733  1EB8                     	;# 
  8734  1EB9                     	;# 
  8735  1EBA                     	;# 
  8736  1EBB                     	;# 
  8737  1EBC                     	;# 
  8738  1EBD                     	;# 
  8739  1EBE                     	;# 
  8740  1EC3                     	;# 
  8741  1EC5                     	;# 
  8742  1EC6                     	;# 
  8743  1EC7                     	;# 
  8744  1EC8                     	;# 
  8745  1EC9                     	;# 
  8746  1ECA                     	;# 
  8747  1ECB                     	;# 
  8748  1ECB                     	;# 
  8749  1ECB                     	;# 
  8750  1ECC                     	;# 
  8751  1ECC                     	;# 
  8752  1ECC                     	;# 
  8753  1F10                     	;# 
  8754  1F11                     	;# 
  8755  1F12                     	;# 
  8756  1F14                     	;# 
  8757  1F15                     	;# 
  8758  1F1C                     	;# 
  8759  1F1D                     	;# 
  8760  1F1E                     	;# 
  8761  1F1F                     	;# 
  8762  1F20                     	;# 
  8763  1F21                     	;# 
  8764  1F22                     	;# 
  8765  1F23                     	;# 
  8766  1F24                     	;# 
  8767  1F25                     	;# 
  8768  1F26                     	;# 
  8769  1F27                     	;# 
  8770  1F38                     	;# 
  8771  1F39                     	;# 
  8772  1F3A                     	;# 
  8773  1F3B                     	;# 
  8774  1F3C                     	;# 
  8775  1F3D                     	;# 
  8776  1F3E                     	;# 
  8777  1F3F                     	;# 
  8778  1F43                     	;# 
  8779  1F44                     	;# 
  8780  1F45                     	;# 
  8781  1F46                     	;# 
  8782  1F47                     	;# 
  8783  1F48                     	;# 
  8784  1F49                     	;# 
  8785  1F4A                     	;# 
  8786  1F4E                     	;# 
  8787  1F4F                     	;# 
  8788  1F50                     	;# 
  8789  1F51                     	;# 
  8790  1F52                     	;# 
  8791  1F53                     	;# 
  8792  1F54                     	;# 
  8793  1F55                     	;# 
  8794  1FE4                     	;# 
  8795  1FE5                     	;# 
  8796  1FE6                     	;# 
  8797  1FE7                     	;# 
  8798  1FE8                     	;# 
  8799  1FE8                     	;# 
  8800  1FE9                     	;# 
  8801  1FEA                     	;# 
  8802  1FEB                     	;# 
  8803  1FED                     	;# 
  8804  1FEE                     	;# 
  8805  1FEF                     	;# 
  8806  0000                     	;# 
  8807  0001                     	;# 
  8808  0002                     	;# 
  8809  0003                     	;# 
  8810  0004                     	;# 
  8811  0005                     	;# 
  8812  0006                     	;# 
  8813  0007                     	;# 
  8814  0008                     	;# 
  8815  0009                     	;# 
  8816  000A                     	;# 
  8817  000B                     	;# 
  8818  000C                     	;# 
  8819  000D                     	;# 
  8820  000E                     	;# 
  8821  0012                     	;# 
  8822  0013                     	;# 
  8823  0014                     	;# 
  8824  0018                     	;# 
  8825  0019                     	;# 
  8826  001A                     	;# 
  8827  008C                     	;# 
  8828  008C                     	;# 
  8829  008D                     	;# 
  8830  008E                     	;# 
  8831  008E                     	;# 
  8832  008F                     	;# 
  8833  0090                     	;# 
  8834  0090                     	;# 
  8835  0091                     	;# 
  8836  0092                     	;# 
  8837  0092                     	;# 
  8838  0093                     	;# 
  8839  0094                     	;# 
  8840  0094                     	;# 
  8841  0095                     	;# 
  8842  0096                     	;# 
  8843  0096                     	;# 
  8844  0097                     	;# 
  8845  0098                     	;# 
  8846  0099                     	;# 
  8847  009A                     	;# 
  8848  009B                     	;# 
  8849  009B                     	;# 
  8850  009C                     	;# 
  8851  009D                     	;# 
  8852  009D                     	;# 
  8853  009E                     	;# 
  8854  009F                     	;# 
  8855  010C                     	;# 
  8856  010C                     	;# 
  8857  010D                     	;# 
  8858  010E                     	;# 
  8859  010F                     	;# 
  8860  010F                     	;# 
  8861  0110                     	;# 
  8862  0111                     	;# 
  8863  0112                     	;# 
  8864  0113                     	;# 
  8865  0114                     	;# 
  8866  0115                     	;# 
  8867  0116                     	;# 
  8868  0117                     	;# 
  8869  0118                     	;# 
  8870  0119                     	;# 
  8871  0119                     	;# 
  8872  0119                     	;# 
  8873  011A                     	;# 
  8874  011A                     	;# 
  8875  011A                     	;# 
  8876  011B                     	;# 
  8877  011B                     	;# 
  8878  011B                     	;# 
  8879  011B                     	;# 
  8880  011B                     	;# 
  8881  011C                     	;# 
  8882  011C                     	;# 
  8883  011C                     	;# 
  8884  011D                     	;# 
  8885  011D                     	;# 
  8886  011D                     	;# 
  8887  011E                     	;# 
  8888  011E                     	;# 
  8889  011E                     	;# 
  8890  011F                     	;# 
  8891  011F                     	;# 
  8892  011F                     	;# 
  8893  011F                     	;# 
  8894  011F                     	;# 
  8895  018C                     	;# 
  8896  018D                     	;# 
  8897  018E                     	;# 
  8898  018F                     	;# 
  8899  0190                     	;# 
  8900  0191                     	;# 
  8901  0192                     	;# 
  8902  0196                     	;# 
  8903  0197                     	;# 
  8904  0198                     	;# 
  8905  0199                     	;# 
  8906  019A                     	;# 
  8907  019B                     	;# 
  8908  019C                     	;# 
  8909  020C                     	;# 
  8910  020D                     	;# 
  8911  020E                     	;# 
  8912  020E                     	;# 
  8913  020F                     	;# 
  8914  020F                     	;# 
  8915  0210                     	;# 
  8916  0210                     	;# 
  8917  0211                     	;# 
  8918  0211                     	;# 
  8919  0212                     	;# 
  8920  0213                     	;# 
  8921  0214                     	;# 
  8922  0214                     	;# 
  8923  0215                     	;# 
  8924  0215                     	;# 
  8925  0216                     	;# 
  8926  0216                     	;# 
  8927  0217                     	;# 
  8928  0217                     	;# 
  8929  0218                     	;# 
  8930  0219                     	;# 
  8931  021A                     	;# 
  8932  021A                     	;# 
  8933  021B                     	;# 
  8934  021B                     	;# 
  8935  021C                     	;# 
  8936  021C                     	;# 
  8937  021D                     	;# 
  8938  021D                     	;# 
  8939  021E                     	;# 
  8940  021F                     	;# 
  8941  028C                     	;# 
  8942  028C                     	;# 
  8943  028D                     	;# 
  8944  028D                     	;# 
  8945  028E                     	;# 
  8946  028F                     	;# 
  8947  0290                     	;# 
  8948  0291                     	;# 
  8949  0292                     	;# 
  8950  0292                     	;# 
  8951  0293                     	;# 
  8952  0293                     	;# 
  8953  0294                     	;# 
  8954  0295                     	;# 
  8955  0296                     	;# 
  8956  0297                     	;# 
  8957  0298                     	;# 
  8958  0298                     	;# 
  8959  0299                     	;# 
  8960  0299                     	;# 
  8961  029A                     	;# 
  8962  029B                     	;# 
  8963  029C                     	;# 
  8964  029D                     	;# 
  8965  029F                     	;# 
  8966  030C                     	;# 
  8967  030C                     	;# 
  8968  030D                     	;# 
  8969  030E                     	;# 
  8970  030F                     	;# 
  8971  0310                     	;# 
  8972  0310                     	;# 
  8973  0311                     	;# 
  8974  0312                     	;# 
  8975  0313                     	;# 
  8976  0314                     	;# 
  8977  0314                     	;# 
  8978  0315                     	;# 
  8979  0316                     	;# 
  8980  0317                     	;# 
  8981  0318                     	;# 
  8982  0318                     	;# 
  8983  0319                     	;# 
  8984  031A                     	;# 
  8985  031B                     	;# 
  8986  038C                     	;# 
  8987  038C                     	;# 
  8988  038D                     	;# 
  8989  038E                     	;# 
  8990  0390                     	;# 
  8991  0390                     	;# 
  8992  0391                     	;# 
  8993  0392                     	;# 
  8994  048C                     	;# 
  8995  048C                     	;# 
  8996  048D                     	;# 
  8997  048E                     	;# 
  8998  048F                     	;# 
  8999  048F                     	;# 
  9000  0490                     	;# 
  9001  0491                     	;# 
  9002  0492                     	;# 
  9003  0492                     	;# 
  9004  0493                     	;# 
  9005  0494                     	;# 
  9006  0495                     	;# 
  9007  0495                     	;# 
  9008  0496                     	;# 
  9009  0497                     	;# 
  9010  0498                     	;# 
  9011  0499                     	;# 
  9012  049A                     	;# 
  9013  049B                     	;# 
  9014  049C                     	;# 
  9015  049D                     	;# 
  9016  058C                     	;# 
  9017  058C                     	;# 
  9018  058D                     	;# 
  9019  058E                     	;# 
  9020  058F                     	;# 
  9021  058F                     	;# 
  9022  0590                     	;# 
  9023  0591                     	;# 
  9024  0592                     	;# 
  9025  0593                     	;# 
  9026  059C                     	;# 
  9027  059C                     	;# 
  9028  059D                     	;# 
  9029  059D                     	;# 
  9030  059E                     	;# 
  9031  059F                     	;# 
  9032  060C                     	;# 
  9033  060C                     	;# 
  9034  060D                     	;# 
  9035  060D                     	;# 
  9036  060E                     	;# 
  9037  060F                     	;# 
  9038  0610                     	;# 
  9039  0611                     	;# 
  9040  0612                     	;# 
  9041  0613                     	;# 
  9042  0614                     	;# 
  9043  0616                     	;# 
  9044  0616                     	;# 
  9045  0617                     	;# 
  9046  0617                     	;# 
  9047  0618                     	;# 
  9048  0619                     	;# 
  9049  061A                     	;# 
  9050  061B                     	;# 
  9051  061C                     	;# 
  9052  061D                     	;# 
  9053  061E                     	;# 
  9054  070C                     	;# 
  9055  070D                     	;# 
  9056  070E                     	;# 
  9057  070F                     	;# 
  9058  0710                     	;# 
  9059  0711                     	;# 
  9060  0712                     	;# 
  9061  0713                     	;# 
  9062  0714                     	;# 
  9063  0716                     	;# 
  9064  0717                     	;# 
  9065  0718                     	;# 
  9066  0719                     	;# 
  9067  071A                     	;# 
  9068  071B                     	;# 
  9069  071C                     	;# 
  9070  071D                     	;# 
  9071  071E                     	;# 
  9072  0796                     	;# 
  9073  0797                     	;# 
  9074  0798                     	;# 
  9075  0799                     	;# 
  9076  079A                     	;# 
  9077  079B                     	;# 
  9078  079C                     	;# 
  9079  079D                     	;# 
  9080  080C                     	;# 
  9081  080D                     	;# 
  9082  080E                     	;# 
  9083  080F                     	;# 
  9084  0810                     	;# 
  9085  0811                     	;# 
  9086  0812                     	;# 
  9087  0813                     	;# 
  9088  0814                     	;# 
  9089  081A                     	;# 
  9090  081A                     	;# 
  9091  081B                     	;# 
  9092  081C                     	;# 
  9093  081C                     	;# 
  9094  081D                     	;# 
  9095  081E                     	;# 
  9096  081F                     	;# 
  9097  088C                     	;# 
  9098  088D                     	;# 
  9099  088E                     	;# 
  9100  088F                     	;# 
  9101  0890                     	;# 
  9102  0891                     	;# 
  9103  0892                     	;# 
  9104  0893                     	;# 
  9105  0895                     	;# 
  9106  0896                     	;# 
  9107  0897                     	;# 
  9108  0898                     	;# 
  9109  0899                     	;# 
  9110  089A                     	;# 
  9111  089B                     	;# 
  9112  090C                     	;# 
  9113  090E                     	;# 
  9114  090F                     	;# 
  9115  091F                     	;# 
  9116  098F                     	;# 
  9117  098F                     	;# 
  9118  0990                     	;# 
  9119  0991                     	;# 
  9120  0992                     	;# 
  9121  0993                     	;# 
  9122  0994                     	;# 
  9123  0995                     	;# 
  9124  0996                     	;# 
  9125  0997                     	;# 
  9126  1E0F                     	;# 
  9127  1E10                     	;# 
  9128  1E11                     	;# 
  9129  1E12                     	;# 
  9130  1E13                     	;# 
  9131  1E14                     	;# 
  9132  1E15                     	;# 
  9133  1E16                     	;# 
  9134  1E17                     	;# 
  9135  1E18                     	;# 
  9136  1E19                     	;# 
  9137  1E1A                     	;# 
  9138  1E1B                     	;# 
  9139  1E1C                     	;# 
  9140  1E1D                     	;# 
  9141  1E1E                     	;# 
  9142  1E1F                     	;# 
  9143  1E20                     	;# 
  9144  1E21                     	;# 
  9145  1E22                     	;# 
  9146  1E23                     	;# 
  9147  1E24                     	;# 
  9148  1E25                     	;# 
  9149  1E26                     	;# 
  9150  1E27                     	;# 
  9151  1E28                     	;# 
  9152  1E29                     	;# 
  9153  1E2A                     	;# 
  9154  1E2B                     	;# 
  9155  1E2C                     	;# 
  9156  1E2D                     	;# 
  9157  1E2E                     	;# 
  9158  1E2F                     	;# 
  9159  1E30                     	;# 
  9160  1E31                     	;# 
  9161  1E32                     	;# 
  9162  1E33                     	;# 
  9163  1E34                     	;# 
  9164  1E35                     	;# 
  9165  1E36                     	;# 
  9166  1E37                     	;# 
  9167  1E8F                     	;# 
  9168  1E90                     	;# 
  9169  1E91                     	;# 
  9170  1E92                     	;# 
  9171  1E93                     	;# 
  9172  1E94                     	;# 
  9173  1E95                     	;# 
  9174  1E96                     	;# 
  9175  1E97                     	;# 
  9176  1E9C                     	;# 
  9177  1E9D                     	;# 
  9178  1E9E                     	;# 
  9179  1EA1                     	;# 
  9180  1EA2                     	;# 
  9181  1EA3                     	;# 
  9182  1EA4                     	;# 
  9183  1EA9                     	;# 
  9184  1EAA                     	;# 
  9185  1EB1                     	;# 
  9186  1EB2                     	;# 
  9187  1EB8                     	;# 
  9188  1EB9                     	;# 
  9189  1EBA                     	;# 
  9190  1EBB                     	;# 
  9191  1EBC                     	;# 
  9192  1EBD                     	;# 
  9193  1EBE                     	;# 
  9194  1EC3                     	;# 
  9195  1EC5                     	;# 
  9196  1EC6                     	;# 
  9197  1EC7                     	;# 
  9198  1EC8                     	;# 
  9199  1EC9                     	;# 
  9200  1ECA                     	;# 
  9201  1ECB                     	;# 
  9202  1ECB                     	;# 
  9203  1ECB                     	;# 
  9204  1ECC                     	;# 
  9205  1ECC                     	;# 
  9206  1ECC                     	;# 
  9207  1F10                     	;# 
  9208  1F11                     	;# 
  9209  1F12                     	;# 
  9210  1F14                     	;# 
  9211  1F15                     	;# 
  9212  1F1C                     	;# 
  9213  1F1D                     	;# 
  9214  1F1E                     	;# 
  9215  1F1F                     	;# 
  9216  1F20                     	;# 
  9217  1F21                     	;# 
  9218  1F22                     	;# 
  9219  1F23                     	;# 
  9220  1F24                     	;# 
  9221  1F25                     	;# 
  9222  1F26                     	;# 
  9223  1F27                     	;# 
  9224  1F38                     	;# 
  9225  1F39                     	;# 
  9226  1F3A                     	;# 
  9227  1F3B                     	;# 
  9228  1F3C                     	;# 
  9229  1F3D                     	;# 
  9230  1F3E                     	;# 
  9231  1F3F                     	;# 
  9232  1F43                     	;# 
  9233  1F44                     	;# 
  9234  1F45                     	;# 
  9235  1F46                     	;# 
  9236  1F47                     	;# 
  9237  1F48                     	;# 
  9238  1F49                     	;# 
  9239  1F4A                     	;# 
  9240  1F4E                     	;# 
  9241  1F4F                     	;# 
  9242  1F50                     	;# 
  9243  1F51                     	;# 
  9244  1F52                     	;# 
  9245  1F53                     	;# 
  9246  1F54                     	;# 
  9247  1F55                     	;# 
  9248  1FE4                     	;# 
  9249  1FE5                     	;# 
  9250  1FE6                     	;# 
  9251  1FE7                     	;# 
  9252  1FE8                     	;# 
  9253  1FE8                     	;# 
  9254  1FE9                     	;# 
  9255  1FEA                     	;# 
  9256  1FEB                     	;# 
  9257  1FED                     	;# 
  9258  1FEE                     	;# 
  9259  1FEF                     	;# 
  9260  0000                     	;# 
  9261  0001                     	;# 
  9262  0002                     	;# 
  9263  0003                     	;# 
  9264  0004                     	;# 
  9265  0005                     	;# 
  9266  0006                     	;# 
  9267  0007                     	;# 
  9268  0008                     	;# 
  9269  0009                     	;# 
  9270  000A                     	;# 
  9271  000B                     	;# 
  9272  000C                     	;# 
  9273  000D                     	;# 
  9274  000E                     	;# 
  9275  0012                     	;# 
  9276  0013                     	;# 
  9277  0014                     	;# 
  9278  0018                     	;# 
  9279  0019                     	;# 
  9280  001A                     	;# 
  9281  008C                     	;# 
  9282  008C                     	;# 
  9283  008D                     	;# 
  9284  008E                     	;# 
  9285  008E                     	;# 
  9286  008F                     	;# 
  9287  0090                     	;# 
  9288  0090                     	;# 
  9289  0091                     	;# 
  9290  0092                     	;# 
  9291  0092                     	;# 
  9292  0093                     	;# 
  9293  0094                     	;# 
  9294  0094                     	;# 
  9295  0095                     	;# 
  9296  0096                     	;# 
  9297  0096                     	;# 
  9298  0097                     	;# 
  9299  0098                     	;# 
  9300  0099                     	;# 
  9301  009A                     	;# 
  9302  009B                     	;# 
  9303  009B                     	;# 
  9304  009C                     	;# 
  9305  009D                     	;# 
  9306  009D                     	;# 
  9307  009E                     	;# 
  9308  009F                     	;# 
  9309  010C                     	;# 
  9310  010C                     	;# 
  9311  010D                     	;# 
  9312  010E                     	;# 
  9313  010F                     	;# 
  9314  010F                     	;# 
  9315  0110                     	;# 
  9316  0111                     	;# 
  9317  0112                     	;# 
  9318  0113                     	;# 
  9319  0114                     	;# 
  9320  0115                     	;# 
  9321  0116                     	;# 
  9322  0117                     	;# 
  9323  0118                     	;# 
  9324  0119                     	;# 
  9325  0119                     	;# 
  9326  0119                     	;# 
  9327  011A                     	;# 
  9328  011A                     	;# 
  9329  011A                     	;# 
  9330  011B                     	;# 
  9331  011B                     	;# 
  9332  011B                     	;# 
  9333  011B                     	;# 
  9334  011B                     	;# 
  9335  011C                     	;# 
  9336  011C                     	;# 
  9337  011C                     	;# 
  9338  011D                     	;# 
  9339  011D                     	;# 
  9340  011D                     	;# 
  9341  011E                     	;# 
  9342  011E                     	;# 
  9343  011E                     	;# 
  9344  011F                     	;# 
  9345  011F                     	;# 
  9346  011F                     	;# 
  9347  011F                     	;# 
  9348  011F                     	;# 
  9349  018C                     	;# 
  9350  018D                     	;# 
  9351  018E                     	;# 
  9352  018F                     	;# 
  9353  0190                     	;# 
  9354  0191                     	;# 
  9355  0192                     	;# 
  9356  0196                     	;# 
  9357  0197                     	;# 
  9358  0198                     	;# 
  9359  0199                     	;# 
  9360  019A                     	;# 
  9361  019B                     	;# 
  9362  019C                     	;# 
  9363  020C                     	;# 
  9364  020D                     	;# 
  9365  020E                     	;# 
  9366  020E                     	;# 
  9367  020F                     	;# 
  9368  020F                     	;# 
  9369  0210                     	;# 
  9370  0210                     	;# 
  9371  0211                     	;# 
  9372  0211                     	;# 
  9373  0212                     	;# 
  9374  0213                     	;# 
  9375  0214                     	;# 
  9376  0214                     	;# 
  9377  0215                     	;# 
  9378  0215                     	;# 
  9379  0216                     	;# 
  9380  0216                     	;# 
  9381  0217                     	;# 
  9382  0217                     	;# 
  9383  0218                     	;# 
  9384  0219                     	;# 
  9385  021A                     	;# 
  9386  021A                     	;# 
  9387  021B                     	;# 
  9388  021B                     	;# 
  9389  021C                     	;# 
  9390  021C                     	;# 
  9391  021D                     	;# 
  9392  021D                     	;# 
  9393  021E                     	;# 
  9394  021F                     	;# 
  9395  028C                     	;# 
  9396  028C                     	;# 
  9397  028D                     	;# 
  9398  028D                     	;# 
  9399  028E                     	;# 
  9400  028F                     	;# 
  9401  0290                     	;# 
  9402  0291                     	;# 
  9403  0292                     	;# 
  9404  0292                     	;# 
  9405  0293                     	;# 
  9406  0293                     	;# 
  9407  0294                     	;# 
  9408  0295                     	;# 
  9409  0296                     	;# 
  9410  0297                     	;# 
  9411  0298                     	;# 
  9412  0298                     	;# 
  9413  0299                     	;# 
  9414  0299                     	;# 
  9415  029A                     	;# 
  9416  029B                     	;# 
  9417  029C                     	;# 
  9418  029D                     	;# 
  9419  029F                     	;# 
  9420  030C                     	;# 
  9421  030C                     	;# 
  9422  030D                     	;# 
  9423  030E                     	;# 
  9424  030F                     	;# 
  9425  0310                     	;# 
  9426  0310                     	;# 
  9427  0311                     	;# 
  9428  0312                     	;# 
  9429  0313                     	;# 
  9430  0314                     	;# 
  9431  0314                     	;# 
  9432  0315                     	;# 
  9433  0316                     	;# 
  9434  0317                     	;# 
  9435  0318                     	;# 
  9436  0318                     	;# 
  9437  0319                     	;# 
  9438  031A                     	;# 
  9439  031B                     	;# 
  9440  038C                     	;# 
  9441  038C                     	;# 
  9442  038D                     	;# 
  9443  038E                     	;# 
  9444  0390                     	;# 
  9445  0390                     	;# 
  9446  0391                     	;# 
  9447  0392                     	;# 
  9448  048C                     	;# 
  9449  048C                     	;# 
  9450  048D                     	;# 
  9451  048E                     	;# 
  9452  048F                     	;# 
  9453  048F                     	;# 
  9454  0490                     	;# 
  9455  0491                     	;# 
  9456  0492                     	;# 
  9457  0492                     	;# 
  9458  0493                     	;# 
  9459  0494                     	;# 
  9460  0495                     	;# 
  9461  0495                     	;# 
  9462  0496                     	;# 
  9463  0497                     	;# 
  9464  0498                     	;# 
  9465  0499                     	;# 
  9466  049A                     	;# 
  9467  049B                     	;# 
  9468  049C                     	;# 
  9469  049D                     	;# 
  9470  058C                     	;# 
  9471  058C                     	;# 
  9472  058D                     	;# 
  9473  058E                     	;# 
  9474  058F                     	;# 
  9475  058F                     	;# 
  9476  0590                     	;# 
  9477  0591                     	;# 
  9478  0592                     	;# 
  9479  0593                     	;# 
  9480  059C                     	;# 
  9481  059C                     	;# 
  9482  059D                     	;# 
  9483  059D                     	;# 
  9484  059E                     	;# 
  9485  059F                     	;# 
  9486  060C                     	;# 
  9487  060C                     	;# 
  9488  060D                     	;# 
  9489  060D                     	;# 
  9490  060E                     	;# 
  9491  060F                     	;# 
  9492  0610                     	;# 
  9493  0611                     	;# 
  9494  0612                     	;# 
  9495  0613                     	;# 
  9496  0614                     	;# 
  9497  0616                     	;# 
  9498  0616                     	;# 
  9499  0617                     	;# 
  9500  0617                     	;# 
  9501  0618                     	;# 
  9502  0619                     	;# 
  9503  061A                     	;# 
  9504  061B                     	;# 
  9505  061C                     	;# 
  9506  061D                     	;# 
  9507  061E                     	;# 
  9508  070C                     	;# 
  9509  070D                     	;# 
  9510  070E                     	;# 
  9511  070F                     	;# 
  9512  0710                     	;# 
  9513  0711                     	;# 
  9514  0712                     	;# 
  9515  0713                     	;# 
  9516  0714                     	;# 
  9517  0716                     	;# 
  9518  0717                     	;# 
  9519  0718                     	;# 
  9520  0719                     	;# 
  9521  071A                     	;# 
  9522  071B                     	;# 
  9523  071C                     	;# 
  9524  071D                     	;# 
  9525  071E                     	;# 
  9526  0796                     	;# 
  9527  0797                     	;# 
  9528  0798                     	;# 
  9529  0799                     	;# 
  9530  079A                     	;# 
  9531  079B                     	;# 
  9532  079C                     	;# 
  9533  079D                     	;# 
  9534  080C                     	;# 
  9535  080D                     	;# 
  9536  080E                     	;# 
  9537  080F                     	;# 
  9538  0810                     	;# 
  9539  0811                     	;# 
  9540  0812                     	;# 
  9541  0813                     	;# 
  9542  0814                     	;# 
  9543  081A                     	;# 
  9544  081A                     	;# 
  9545  081B                     	;# 
  9546  081C                     	;# 
  9547  081C                     	;# 
  9548  081D                     	;# 
  9549  081E                     	;# 
  9550  081F                     	;# 
  9551  088C                     	;# 
  9552  088D                     	;# 
  9553  088E                     	;# 
  9554  088F                     	;# 
  9555  0890                     	;# 
  9556  0891                     	;# 
  9557  0892                     	;# 
  9558  0893                     	;# 
  9559  0895                     	;# 
  9560  0896                     	;# 
  9561  0897                     	;# 
  9562  0898                     	;# 
  9563  0899                     	;# 
  9564  089A                     	;# 
  9565  089B                     	;# 
  9566  090C                     	;# 
  9567  090E                     	;# 
  9568  090F                     	;# 
  9569  091F                     	;# 
  9570  098F                     	;# 
  9571  098F                     	;# 
  9572  0990                     	;# 
  9573  0991                     	;# 
  9574  0992                     	;# 
  9575  0993                     	;# 
  9576  0994                     	;# 
  9577  0995                     	;# 
  9578  0996                     	;# 
  9579  0997                     	;# 
  9580  1E0F                     	;# 
  9581  1E10                     	;# 
  9582  1E11                     	;# 
  9583  1E12                     	;# 
  9584  1E13                     	;# 
  9585  1E14                     	;# 
  9586  1E15                     	;# 
  9587  1E16                     	;# 
  9588  1E17                     	;# 
  9589  1E18                     	;# 
  9590  1E19                     	;# 
  9591  1E1A                     	;# 
  9592  1E1B                     	;# 
  9593  1E1C                     	;# 
  9594  1E1D                     	;# 
  9595  1E1E                     	;# 
  9596  1E1F                     	;# 
  9597  1E20                     	;# 
  9598  1E21                     	;# 
  9599  1E22                     	;# 
  9600  1E23                     	;# 
  9601  1E24                     	;# 
  9602  1E25                     	;# 
  9603  1E26                     	;# 
  9604  1E27                     	;# 
  9605  1E28                     	;# 
  9606  1E29                     	;# 
  9607  1E2A                     	;# 
  9608  1E2B                     	;# 
  9609  1E2C                     	;# 
  9610  1E2D                     	;# 
  9611  1E2E                     	;# 
  9612  1E2F                     	;# 
  9613  1E30                     	;# 
  9614  1E31                     	;# 
  9615  1E32                     	;# 
  9616  1E33                     	;# 
  9617  1E34                     	;# 
  9618  1E35                     	;# 
  9619  1E36                     	;# 
  9620  1E37                     	;# 
  9621  1E8F                     	;# 
  9622  1E90                     	;# 
  9623  1E91                     	;# 
  9624  1E92                     	;# 
  9625  1E93                     	;# 
  9626  1E94                     	;# 
  9627  1E95                     	;# 
  9628  1E96                     	;# 
  9629  1E97                     	;# 
  9630  1E9C                     	;# 
  9631  1E9D                     	;# 
  9632  1E9E                     	;# 
  9633  1EA1                     	;# 
  9634  1EA2                     	;# 
  9635  1EA3                     	;# 
  9636  1EA4                     	;# 
  9637  1EA9                     	;# 
  9638  1EAA                     	;# 
  9639  1EB1                     	;# 
  9640  1EB2                     	;# 
  9641  1EB8                     	;# 
  9642  1EB9                     	;# 
  9643  1EBA                     	;# 
  9644  1EBB                     	;# 
  9645  1EBC                     	;# 
  9646  1EBD                     	;# 
  9647  1EBE                     	;# 
  9648  1EC3                     	;# 
  9649  1EC5                     	;# 
  9650  1EC6                     	;# 
  9651  1EC7                     	;# 
  9652  1EC8                     	;# 
  9653  1EC9                     	;# 
  9654  1ECA                     	;# 
  9655  1ECB                     	;# 
  9656  1ECB                     	;# 
  9657  1ECB                     	;# 
  9658  1ECC                     	;# 
  9659  1ECC                     	;# 
  9660  1ECC                     	;# 
  9661  1F10                     	;# 
  9662  1F11                     	;# 
  9663  1F12                     	;# 
  9664  1F14                     	;# 
  9665  1F15                     	;# 
  9666  1F1C                     	;# 
  9667  1F1D                     	;# 
  9668  1F1E                     	;# 
  9669  1F1F                     	;# 
  9670  1F20                     	;# 
  9671  1F21                     	;# 
  9672  1F22                     	;# 
  9673  1F23                     	;# 
  9674  1F24                     	;# 
  9675  1F25                     	;# 
  9676  1F26                     	;# 
  9677  1F27                     	;# 
  9678  1F38                     	;# 
  9679  1F39                     	;# 
  9680  1F3A                     	;# 
  9681  1F3B                     	;# 
  9682  1F3C                     	;# 
  9683  1F3D                     	;# 
  9684  1F3E                     	;# 
  9685  1F3F                     	;# 
  9686  1F43                     	;# 
  9687  1F44                     	;# 
  9688  1F45                     	;# 
  9689  1F46                     	;# 
  9690  1F47                     	;# 
  9691  1F48                     	;# 
  9692  1F49                     	;# 
  9693  1F4A                     	;# 
  9694  1F4E                     	;# 
  9695  1F4F                     	;# 
  9696  1F50                     	;# 
  9697  1F51                     	;# 
  9698  1F52                     	;# 
  9699  1F53                     	;# 
  9700  1F54                     	;# 
  9701  1F55                     	;# 
  9702  1FE4                     	;# 
  9703  1FE5                     	;# 
  9704  1FE6                     	;# 
  9705  1FE7                     	;# 
  9706  1FE8                     	;# 
  9707  1FE8                     	;# 
  9708  1FE9                     	;# 
  9709  1FEA                     	;# 
  9710  1FEB                     	;# 
  9711  1FED                     	;# 
  9712  1FEE                     	;# 
  9713  1FEF                     	;_dmxArray
  9714                           
  9715                           	psect	idataBANK1
  9716  1F0C                     __pidataBANK1:	
  9717                           
  9718                           ;initializer for _threshold
  9719  1F0C  3490               	retlw	144
  9720  1F0D  3406               	retlw	6
  9721                           
  9722                           ;initializer for _incInterval
  9723  1F0E  3464               	retlw	100
  9724  1F0F  3400               	retlw	0
  9725                           
  9726                           ;initializer for _address
  9727  1F10  3401               	retlw	1
  9728  1F11  3400               	retlw	0
  9729                           
  9730                           ;initializer for _currentSelection
  9731  1F12  3402               	retlw	2
  9732                           
  9733                           ;initializer for _menuSelected
  9734  1F13  3402               	retlw	2
  9735                           
  9736                           ;initializer for _startup
  9737  1F14  3401               	retlw	1
  9738                           
  9739                           ;initializer for _beatBrightness
  9740  1F15  3401               	retlw	1
  9741                           
  9742                           	psect	idataBANK2
  9743  1E90                     __pidataBANK2:	
  9744                           
  9745                           ;initializer for _initial
  9746  1E90  3401               	retlw	1
  9747  1E91  3400               	retlw	0
  9748                           
  9749                           ;initializer for _delay
  9750  1E92  340A               	retlw	10
  9751  1E93  3400               	retlw	0
  9752                           
  9753                           	psect	stringtext1
  9754  1800                     __pstringtext1:	
  9755  1800                     _charTable:	
  9756  1800  3400               	retlw	0
  9757  1801  3482               	retlw	130
  9758  1802  3421               	retlw	33
  9759  1803  3400               	retlw	0
  9760  1804  3400               	retlw	0
  9761  1805  3400               	retlw	0
  9762  1806  3400               	retlw	0
  9763  1807  3402               	retlw	2
  9764  1808  3439               	retlw	57
  9765  1809  340F               	retlw	15
  9766  180A  3400               	retlw	0
  9767  180B  3400               	retlw	0
  9768  180C  3400               	retlw	0
  9769  180D  3440               	retlw	64
  9770  180E  3480               	retlw	128
  9771  180F  3400               	retlw	0
  9772  1810  343F               	retlw	63
  9773  1811  3406               	retlw	6
  9774  1812  345B               	retlw	91
  9775  1813  344F               	retlw	79
  9776  1814  3466               	retlw	102
  9777  1815  346D               	retlw	109
  9778  1816  347D               	retlw	125
  9779  1817  3407               	retlw	7
  9780  1818  347F               	retlw	127
  9781  1819  346F               	retlw	111
  9782  181A  3400               	retlw	0
  9783  181B  3400               	retlw	0
  9784  181C  3400               	retlw	0
  9785  181D  3448               	retlw	72
  9786  181E  3400               	retlw	0
  9787  181F  3453               	retlw	83
  9788  1820  3400               	retlw	0
  9789  1821  3477               	retlw	119
  9790  1822  347C               	retlw	124
  9791  1823  3439               	retlw	57
  9792  1824  345E               	retlw	94
  9793  1825  3479               	retlw	121
  9794  1826  3471               	retlw	113
  9795  1827  346F               	retlw	111
  9796  1828  3476               	retlw	118
  9797  1829  3406               	retlw	6
  9798  182A  341E               	retlw	30
  9799  182B  3400               	retlw	0
  9800  182C  3438               	retlw	56
  9801  182D  3400               	retlw	0
  9802  182E  3454               	retlw	84
  9803  182F  343F               	retlw	63
  9804  1830  3473               	retlw	115
  9805  1831  3467               	retlw	103
  9806  1832  3450               	retlw	80
  9807  1833  346D               	retlw	109
  9808  1834  3478               	retlw	120
  9809  1835  343E               	retlw	62
  9810  1836  3400               	retlw	0
  9811  1837  3400               	retlw	0
  9812  1838  3400               	retlw	0
  9813  1839  346E               	retlw	110
  9814  183A  3400               	retlw	0
  9815  183B  3439               	retlw	57
  9816  183C  3400               	retlw	0
  9817  183D  340F               	retlw	15
  9818  183E  3400               	retlw	0
  9819  183F  3408               	retlw	8
  9820  1840  3463               	retlw	99
  9821  1841  345F               	retlw	95
  9822  1842  347C               	retlw	124
  9823  1843  3458               	retlw	88
  9824  1844  345E               	retlw	94
  9825  1845  347B               	retlw	123
  9826  1846  3471               	retlw	113
  9827  1847  346F               	retlw	111
  9828  1848  3474               	retlw	116
  9829  1849  3402               	retlw	2
  9830  184A  341E               	retlw	30
  9831  184B  3400               	retlw	0
  9832  184C  3406               	retlw	6
  9833  184D  3400               	retlw	0
  9834  184E  3454               	retlw	84
  9835  184F  345C               	retlw	92
  9836  1850  3473               	retlw	115
  9837  1851  3467               	retlw	103
  9838  1852  3450               	retlw	80
  9839  1853  346D               	retlw	109
  9840  1854  3478               	retlw	120
  9841  1855  341C               	retlw	28
  9842  1856  3400               	retlw	0
  9843  1857  3400               	retlw	0
  9844  1858  3400               	retlw	0
  9845  1859  346E               	retlw	110
  9846  185A  3400               	retlw	0
  9847  185B  3439               	retlw	57
  9848  185C  3430               	retlw	48
  9849  185D  340F               	retlw	15
  9850  185E  3400               	retlw	0
  9851  185F  3400               	retlw	0
  9852  1860                     __end_of_charTable:	
  9853                           
  9854                           	psect	nvBANK2
  9855  0144                     __pnvBANK2:	
  9856  0144                     _ADCC_ADTI_InterruptHandler:	
  9857  0144                     	ds	2
  9858  0146                     _TMR0_InterruptHandler:	
  9859  0146                     	ds	2
  9860  0148                     _EUSART1_ErrorHandler:	
  9861  0148                     	ds	2
  9862  014A                     _EUSART1_OverrunErrorHandler:	
  9863  014A                     	ds	2
  9864  014C                     _EUSART1_FramingErrorHandler:	
  9865  014C                     	ds	2
  9866  014E                     _EUSART1_RxDefaultInterruptHandler:	
  9867  014E                     	ds	2
  9868  0014                     _TRISCbits	set	20
  9869  0012                     _TRISAbits	set	18
  9870  000B                     _INTCONbits	set	11
  9871  0014                     _TRISC	set	20
  9872  0013                     _TRISB	set	19
  9873  0012                     _TRISA	set	18
  9874  001A                     _LATC	set	26
  9875  0019                     _LATB	set	25
  9876  0018                     _LATA	set	24
  9877  000C                     _PORTA	set	12
  9878  000E                     _PORTC	set	14
  9879  0090                     _ADERRL	set	144
  9880  0091                     _ADERRH	set	145
  9881  009B                     _ADPREVL	set	155
  9882  009C                     _ADPREVH	set	156
  9883  0094                     _ADFLTRL	set	148
  9884  0095                     _ADFLTRH	set	149
  9885  0096                     _ADACCL	set	150
  9886  0097                     _ADACCH	set	151
  9887  0099                     _ADCNT	set	153
  9888  009D                     _ADRESL	set	157
  9889  009E                     _ADRESH	set	158
  9890  009F                     _ADPCH	set	159
  9891  009A                     _ADRPT	set	154
  9892  0098                     _ADACCU	set	152
  9893  0093                     _ADSTPTH	set	147
  9894  0092                     _ADSTPTL	set	146
  9895  008F                     _ADUTHH	set	143
  9896  008E                     _ADUTHL	set	142
  9897  008D                     _ADLTHH	set	141
  9898  008C                     _ADLTHL	set	140
  9899  0112                     _ADCON1bits	set	274
  9900  0115                     _ADSTATbits	set	277
  9901  0113                     _ADCON2bits	set	275
  9902  0114                     _ADCON3bits	set	276
  9903  0111                     _ADCON0bits	set	273
  9904  0111                     _ADCON0	set	273
  9905  0118                     _ADCLK	set	280
  9906  0117                     _ADACT	set	279
  9907  0116                     _ADREF	set	278
  9908  0115                     _ADSTAT	set	277
  9909  0114                     _ADCON3	set	276
  9910  0113                     _ADCON2	set	275
  9911  0112                     _ADCON1	set	274
  9912  0110                     _ADPREH	set	272
  9913  010F                     _ADPREL	set	271
  9914  010E                     _ADCAP	set	270
  9915  010D                     _ADACQH	set	269
  9916  010C                     _ADACQL	set	268
  9917  0119                     _RC1REG	set	281
  9918  011D                     _RC1STAbits	set	285
  9919  011A                     _TX1REG	set	282
  9920  011E                     _TX1STAbits	set	286
  9921  011C                     _SP1BRGH	set	284
  9922  011B                     _SP1BRGL	set	283
  9923  011E                     _TX1STA	set	286
  9924  011D                     _RC1STA	set	285
  9925  011F                     _BAUD1CON	set	287
  9926  018C                     _SSP1BUF	set	396
  9927  0191                     _SSP1CON2bits	set	401
  9928  0190                     _SSP1CON1bits	set	400
  9929  018D                     _SSP1ADD	set	397
  9930  0192                     _SSP1CON3	set	402
  9931  0190                     _SSP1CON1	set	400
  9932  018F                     _SSP1STAT	set	399
  9933  021E                     _CCPTMRS0bits	set	542
  9934  028D                     _PR2	set	653
  9935  028C                     _TMR2	set	652
  9936  028E                     _T2CONbits	set	654
  9937  0291                     _T2RSTbits	set	657
  9938  028F                     _T2HLTbits	set	655
  9939  028E                     _T2CON	set	654
  9940  028C                     _T2TMR	set	652
  9941  028D                     _T2PR	set	653
  9942  0291                     _T2RST	set	657
  9943  028F                     _T2HLT	set	655
  9944  0290                     _T2CLKCON	set	656
  9945  0312                     _CCP2CONbits	set	786
  9946  0310                     _CCPR2L	set	784
  9947  0311                     _CCPR2H	set	785
  9948  0312                     _CCP2CON	set	786
  9949  030E                     _CCP1CONbits	set	782
  9950  030C                     _CCPR1L	set	780
  9951  030D                     _CCPR1H	set	781
  9952  030E                     _CCP1CON	set	782
  9953  031A                     _CCP4CONbits	set	794
  9954  0318                     _CCPR4L	set	792
  9955  0319                     _CCPR4H	set	793
  9956  031A                     _CCP4CON	set	794
  9957  0316                     _CCP3CONbits	set	790
  9958  0314                     _CCPR3L	set	788
  9959  0315                     _CCPR3H	set	789
  9960  0316                     _CCP3CON	set	790
  9961  059E                     _T0CON0bits	set	1438
  9962  059E                     _T0CON0	set	1438
  9963  059C                     _TMR0L	set	1436
  9964  059D                     _TMR0H	set	1437
  9965  059F                     _T0CON1	set	1439
  9966  070D                     _PIR1bits	set	1805
  9967  0717                     _PIE1bits	set	1815
  9968  070C                     _PIR0bits	set	1804
  9969  0716                     _PIE0bits	set	1814
  9970  070F                     _PIR3bits	set	1807
  9971  0719                     _PIE3bits	set	1817
  9972  0710                     _PIR4bits	set	1808
  9973  079D                     _PMD7	set	1949
  9974  079C                     _PMD6	set	1948
  9975  079B                     _PMD5	set	1947
  9976  079A                     _PMD4	set	1946
  9977  0799                     _PMD3	set	1945
  9978  0798                     _PMD2	set	1944
  9979  0797                     _PMD1	set	1943
  9980  0796                     _PMD0	set	1942
  9981  0892                     _OSCTUNE	set	2194
  9982  0893                     _OSCFRQ	set	2195
  9983  0891                     _OSCEN	set	2193
  9984  088F                     _OSCCON3	set	2191
  9985  088D                     _OSCCON1	set	2189
  9986  1ECB                     _RX1DTPPS	set	7883
  9987  1EC6                     _SSP1DATPPS	set	7878
  9988  1EC5                     _SSP1CLKPPS	set	7877
  9989  1F4F                     _WPUCbits	set	8015
  9990  1F4E                     _ANSELCbits	set	8014
  9991  1F39                     _WPUAbits	set	7993
  9992  1F38                     _ANSELAbits	set	7992
  9993  1F27                     _RC7PPS	set	7975
  9994  1F26                     _RC6PPS	set	7974
  9995  1F25                     _RC5PPS	set	7973
  9996  1F15                     _RA5PPS	set	7957
  9997  1F24                     _RC4PPS	set	7972
  9998  1F23                     _RC3PPS	set	7971
  9999  1F14                     _RA4PPS	set	7956
 10000  1F51                     _SLRCONC	set	8017
 10001  1F46                     _SLRCONB	set	8006
 10002  1F3B                     _SLRCONA	set	7995
 10003  1F50                     _ODCONC	set	8016
 10004  1F45                     _ODCONB	set	8005
 10005  1F3A                     _ODCONA	set	7994
 10006  1F4F                     _WPUC	set	8015
 10007  1F39                     _WPUA	set	7993
 10008  1F44                     _WPUB	set	8004
 10009  1F38                     _ANSELA	set	7992
 10010  1F43                     _ANSELB	set	8003
 10011  1F4E                     _ANSELC	set	8014
 10012                           
 10013                           	psect	stringtext2
 10014  2000                     __pstringtext2:	
 10015  2000                     STR_12:	
 10016  2000  3425               	retlw	37	;'%'
 10017  2001  3463               	retlw	99	;'c'
 10018  2002  3425               	retlw	37	;'%'
 10019  2003  3463               	retlw	99	;'c'
 10020  2004  3425               	retlw	37	;'%'
 10021  2005  3463               	retlw	99	;'c'
 10022  2006  3425               	retlw	37	;'%'
 10023  2007  3463               	retlw	99	;'c'
 10024  2008  340D               	retlw	13
 10025  2009  3400               	retlw	0
 10026                           
 10027                           	psect	stringtext3
 10028  200A                     __pstringtext3:	
 10029  200A                     STR_13:	
 10030  200A  3425               	retlw	37	;'%'
 10031  200B  3463               	retlw	99	;'c'
 10032  200C  3425               	retlw	37	;'%'
 10033  200D  3463               	retlw	99	;'c'
 10034  200E  3425               	retlw	37	;'%'
 10035  200F  3463               	retlw	99	;'c'
 10036  2010  3420               	retlw	32	;' '
 10037  2011  340D               	retlw	13
 10038  2012  3400               	retlw	0
 10039                           
 10040                           	psect	stringtext4
 10041  2013                     __pstringtext4:	
 10042  2013                     STR_11:	
 10043  2013  3420               	retlw	32	;' '
 10044  2014  3425               	retlw	37	;'%'
 10045  2015  3463               	retlw	99	;'c'
 10046  2016  3425               	retlw	37	;'%'
 10047  2017  3463               	retlw	99	;'c'
 10048  2018  3425               	retlw	37	;'%'
 10049  2019  3463               	retlw	99	;'c'
 10050  201A  340D               	retlw	13
 10051  201B  3400               	retlw	0
 10052                           
 10053                           	psect	stringtext5
 10054  201C                     __pstringtext5:	
 10055  201C                     STR_8:	
 10056  201C  3448               	retlw	72	;'H'
 10057  201D  3445               	retlw	69	;'E'
 10058  201E  3459               	retlw	89	;'Y'
 10059  201F  3459               	retlw	89	;'Y'
 10060  2020  3459               	retlw	89	;'Y'
 10061  2021  3459               	retlw	89	;'Y'
 10062  2022  3459               	retlw	89	;'Y'
 10063  2023  3459               	retlw	89	;'Y'
 10064  2024  3400               	retlw	0
 10065                           
 10066                           	psect	stringtext6
 10067  2025                     __pstringtext6:	
 10068  2025                     STR_14:	
 10069  2025  3425               	retlw	37	;'%'
 10070  2026  3463               	retlw	99	;'c'
 10071  2027  3425               	retlw	37	;'%'
 10072  2028  3463               	retlw	99	;'c'
 10073  2029  3420               	retlw	32	;' '
 10074  202A  3420               	retlw	32	;' '
 10075  202B  340D               	retlw	13
 10076  202C  3400               	retlw	0
 10077                           
 10078                           	psect	stringtext7
 10079  202D                     __pstringtext7:	
 10080  202D                     STR_10:	
 10081  202D  3420               	retlw	32	;' '
 10082  202E  3420               	retlw	32	;' '
 10083  202F  3425               	retlw	37	;'%'
 10084  2030  3463               	retlw	99	;'c'
 10085  2031  3425               	retlw	37	;'%'
 10086  2032  3463               	retlw	99	;'c'
 10087  2033  340D               	retlw	13
 10088  2034  3400               	retlw	0
 10089                           
 10090                           	psect	stringtext8
 10091  2035                     __pstringtext8:	
 10092  2035                     STR_2:	
 10093  2035  3442               	retlw	66	;'B'
 10094  2036  342D               	retlw	45	;'-'
 10095  2037  3425               	retlw	37	;'%'
 10096  2038  3475               	retlw	117	;'u'
 10097  2039  3420               	retlw	32	;' '
 10098  203A  3420               	retlw	32	;' '
 10099  203B  340D               	retlw	13
 10100  203C  3400               	retlw	0
 10101                           
 10102                           	psect	stringtext9
 10103  203D                     __pstringtext9:	
 10104  203D                     STR_15:	
 10105  203D  3425               	retlw	37	;'%'
 10106  203E  3463               	retlw	99	;'c'
 10107  203F  3420               	retlw	32	;' '
 10108  2040  3420               	retlw	32	;' '
 10109  2041  3420               	retlw	32	;' '
 10110  2042  340D               	retlw	13
 10111  2043  3400               	retlw	0
 10112                           
 10113                           	psect	stringtext10
 10114  2044                     __pstringtext10:	
 10115  2044                     STR_9:	
 10116  2044  3420               	retlw	32	;' '
 10117  2045  3420               	retlw	32	;' '
 10118  2046  3420               	retlw	32	;' '
 10119  2047  3425               	retlw	37	;'%'
 10120  2048  3463               	retlw	99	;'c'
 10121  2049  340D               	retlw	13
 10122  204A  3400               	retlw	0
 10123                           
 10124                           	psect	stringtext11
 10125  204B                     __pstringtext11:	
 10126  204B                     STR_16:	
 10127  204B  3420               	retlw	32	;' '
 10128  204C  3420               	retlw	32	;' '
 10129  204D  3420               	retlw	32	;' '
 10130  204E  3420               	retlw	32	;' '
 10131  204F  340D               	retlw	13
 10132  2050  3400               	retlw	0
 10133                           
 10134                           	psect	stringtext12
 10135  2051                     __pstringtext12:	
 10136  2051                     STR_5:	
 10137  2051  3450               	retlw	80	;'P'
 10138  2052  3443               	retlw	67	;'C'
 10139  2053  3420               	retlw	32	;' '
 10140  2054  3420               	retlw	32	;' '
 10141  2055  340D               	retlw	13
 10142  2056  3400               	retlw	0
 10143                           
 10144                           	psect	stringtext13
 10145  2057                     __pstringtext13:	
 10146  2057                     STR_3:	
 10147  2057  3441               	retlw	65	;'A'
 10148  2058  344E               	retlw	78	;'N'
 10149  2059  3449               	retlw	73	;'I'
 10150  205A  3420               	retlw	32	;' '
 10151  205B  340D               	retlw	13
 10152  205C  3400               	retlw	0
 10153                           
 10154                           	psect	stringtext14
 10155  205D                     __pstringtext14:	
 10156  205D                     STR_1:	
 10157  205D  3453               	retlw	83	;'S'
 10158  205E  3445               	retlw	69	;'E'
 10159  205F  344C               	retlw	76	;'L'
 10160  2060  3431               	retlw	49	;'1'
 10161  2061  340D               	retlw	13
 10162  2062  3400               	retlw	0
 10163                           
 10164                           	psect	stringtext15
 10165  2063                     __pstringtext15:	
 10166  2063                     STR_4:	
 10167  2063  3442               	retlw	66	;'B'
 10168  2064  3445               	retlw	69	;'E'
 10169  2065  3441               	retlw	65	;'A'
 10170  2066  3454               	retlw	84	;'T'
 10171  2067  340D               	retlw	13
 10172  2068  3400               	retlw	0
 10173                           
 10174                           	psect	stringtext16
 10175  2069                     __pstringtext16:	
 10176  2069                     STR_6:	
 10177  2069  3420               	retlw	32	;' '
 10178  206A  3420               	retlw	32	;' '
 10179  206B  3420               	retlw	32	;' '
 10180  206C  3420               	retlw	32	;' '
 10181  206D  3400               	retlw	0
 10182                           
 10183                           	psect	stringtext17
 10184  0000                     __pstringtext17:	
 10185  204F                     
 10186                           ; #config settings
 10187  0000                     
 10188                           	psect	cinit
 10189  0032                     start_initialization:	
 10190  0032                     __initialization:		;BIGRAM
 10191                           
 10192                           ; Initialize objects allocated to BANK1
 10193  0032  300C               	movlw	low __pidataBANK1
 10194  0033  0084               	movwf	4
 10195  0034  309F               	movlw	(high __pidataBANK1)| (0+128)
 10196  0035  0085               	movwf	5
 10197  0036  30E6               	movlw	low __pdataBANK1
 10198  0037  0086               	movwf	6
 10199  0038  3000               	movlw	high __pdataBANK1
 10200  0039  0087               	movwf	7
 10201  003A  3000               	movlw	0
 10202  003B  00FF               	movwf	btemp+1
 10203  003C  300A               	movlw	10
 10204  003D  319F  274E  3180   	fcall	init_ram
 10205                           
 10206                           ; Initialize objects allocated to BANK2
 10207  0040  3090               	movlw	low __pidataBANK2
 10208  0041  0084               	movwf	4
 10209  0042  309E               	movlw	(high __pidataBANK2)| (0+128)
 10210  0043  0085               	movwf	5
 10211  0044  3050               	movlw	low __pdataBANK2
 10212  0045  0086               	movwf	6
 10213  0046  3001               	movlw	high __pdataBANK2
 10214  0047  0087               	movwf	7
 10215  0048  3000               	movlw	0
 10216  0049  00FF               	movwf	btemp+1
 10217  004A  3004               	movlw	4
 10218  004B  319F  274E  3180   	fcall	init_ram
 10219                           
 10220                           ; Clear objects allocated to BIGRAM
 10221  004E  30EE               	movlw	low (0+9198)
 10222  004F  0084               	movwf	4
 10223  0050  3023               	movlw	high (0+9198)
 10224  0051  0085               	movwf	5
 10225  0052  3002               	movlw	2
 10226  0053  00FE               	movwf	btemp
 10227  0054  3004               	movlw	4
 10228  0055  00FF               	movwf	btemp+1
 10229  0056  319F  2742  3180   	fcall	clear_ram0
 10230                           
 10231                           ; Clear objects allocated to COMMON
 10232  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10233  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10234  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10235  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10236  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10237  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10238  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10239                           
 10240                           ; Clear objects allocated to BANK1
 10241  0060  30A0               	movlw	low __pbssBANK1
 10242  0061  0084               	movwf	4
 10243  0062  3000               	movlw	high __pbssBANK1
 10244  0063  0085               	movwf	5
 10245  0064  3031               	movlw	49
 10246  0065  00FE               	movwf	btemp
 10247  0066  3000               	movlw	0
 10248  0067  00FF               	movwf	btemp+1
 10249  0068  319F  2742  3180   	fcall	clear_ram0
 10250                           
 10251                           ; Clear objects allocated to BANK2
 10252  006B  3020               	movlw	low __pbssBANK2
 10253  006C  0084               	movwf	4
 10254  006D  3001               	movlw	high __pbssBANK2
 10255  006E  0085               	movwf	5
 10256  006F  3024               	movlw	36
 10257  0070  00FE               	movwf	btemp
 10258  0071  3000               	movlw	0
 10259  0072  00FF               	movwf	btemp+1
 10260  0073  319F  2742  3180   	fcall	clear_ram0
 10261                           
 10262                           ; Clear objects allocated to BANK3
 10263  0076  30A0               	movlw	low __pbssBANK3
 10264  0077  0084               	movwf	4
 10265  0078  3001               	movlw	high __pbssBANK3
 10266  0079  0085               	movwf	5
 10267  007A  3040               	movlw	64
 10268  007B  00FE               	movwf	btemp
 10269  007C  3000               	movlw	0
 10270  007D  00FF               	movwf	btemp+1
 10271  007E  319F  2742         	fcall	clear_ram0
 10272  0080                     end_of_initialization:	
 10273                           ;End of C runtime variable initialization code
 10274                           
 10275  0080                     __end_of__initialization:	
 10276  0080  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10277  0081  0140               	movlb	0
 10278  0082  3194  2C99         	ljmp	_main	;jump to C main() function
 10279                           
 10280                           	psect	bssCOMMON
 10281  0070                     __pbssCOMMON:	
 10282  0070                     _currentState:	
 10283  0070                     	ds	2
 10284  0072                     _p_i2c1_trb_current:	
 10285  0072                     	ds	1
 10286  0073                     _eusart1RxTail:	
 10287  0073                     	ds	1
 10288  0074                     _eusart1RxHead:	
 10289  0074                     	ds	1
 10290  0075                     I2C1_ISR@i2c_address:	
 10291  0075                     	ds	2
 10292                           
 10293                           	psect	bssBANK1
 10294  00A0                     __pbssBANK1:	
 10295  00A0                     _i2c1_object:	
 10296  00A0                     	ds	5
 10297  00A5                     _width:	
 10298  00A5                     	ds	2
 10299  00A7                     _flags:	
 10300  00A7                     	ds	2
 10301  00A9                     _lastRun:	
 10302  00A9                     	ds	2
 10303  00AB                     _lastBeat:	
 10304  00AB                     	ds	2
 10305  00AD                     _lastActiveTime:	
 10306  00AD                     	ds	2
 10307  00AF                     _lastIncTime:	
 10308  00AF                     	ds	2
 10309  00B1                     _currentTime:	
 10310  00B1                     	ds	2
 10311  00B3                     _lastTime:	
 10312  00B3                     	ds	2
 10313  00B5                     _startTime:	
 10314  00B5                     	ds	2
 10315  00B7                     _lastDetected:	
 10316  00B7                     	ds	1
 10317  00B8                     _thresholdExceeded:	
 10318  00B8                     	ds	1
 10319  00B9                     _detected:	
 10320  00B9                     	ds	1
 10321  00BA                     _position:	
 10322  00BA                     	ds	1
 10323  00BB                     _tm1650_status:	
 10324  00BB                     	ds	1
 10325  00BC                     _enterState:	
 10326  00BC                     	ds	1
 10327  00BD                     _menuState:	
 10328  00BD                     	ds	1
 10329  00BE                     _downState:	
 10330  00BE                     	ds	1
 10331  00BF                     _upState:	
 10332  00BF                     	ds	1
 10333  00C0                     _enterPressed:	
 10334  00C0                     	ds	1
 10335  00C1                     _menuPressed:	
 10336  00C1                     	ds	1
 10337  00C2                     _enter:	
 10338  00C2                     	ds	1
 10339  00C3                     _down:	
 10340  00C3                     	ds	1
 10341  00C4                     _up:	
 10342  00C4                     	ds	1
 10343  00C5                     _menu:	
 10344  00C5                     	ds	1
 10345  00C6                     I2C1_ISR@i2c_10bit_address_restart:	
 10346  00C6                     	ds	1
 10347  00C7                     I2C1_ISR@i2c_bytes_left:	
 10348  00C7                     	ds	1
 10349  00C8                     I2C1_ISR@pi2c_buf_ptr:	
 10350  00C8                     	ds	1
 10351  00C9                     _p_i2c1_current:	
 10352  00C9                     	ds	1
 10353  00CA                     _i2c1_trb_count:	
 10354  00CA                     	ds	1
 10355  00CB                     _i2c1_state:	
 10356  00CB                     	ds	1
 10357  00CC                     _eusart1RxLastError:	
 10358  00CC                     	ds	1
 10359  00CD                     _eusart1RxCount:	
 10360  00CD                     	ds	1
 10361  00CE                     _i2c1_tr_queue:	
 10362  00CE                     	ds	3
 10363                           
 10364                           	psect	dataBANK1
 10365  00E6                     __pdataBANK1:	
 10366  00E6                     _threshold:	
 10367  00E6                     	ds	2
 10368  00E8                     _incInterval:	
 10369  00E8                     	ds	2
 10370  00EA                     _address:	
 10371  00EA                     	ds	2
 10372  00EC                     _currentSelection:	
 10373  00EC                     	ds	1
 10374  00ED                     _menuSelected:	
 10375  00ED                     	ds	1
 10376  00EE                     _startup:	
 10377  00EE                     	ds	1
 10378  00EF                     _beatBrightness:	
 10379  00EF                     	ds	1
 10380                           
 10381                           	psect	bssBANK2
 10382  0120                     __pbssBANK2:	
 10383  0120                     _eusart1RxStatusBuffer:	
 10384  0120                     	ds	8
 10385  0128                     _eusart1RxBuffer:	
 10386  0128                     	ds	8
 10387  0130                     _nout:	
 10388  0130                     	ds	2
 10389  0132                     _prec:	
 10390  0132                     	ds	2
 10391  0134                     _lastLedActiveTime:	
 10392  0134                     	ds	2
 10393  0136                     _arrayIndex:	
 10394  0136                     	ds	2
 10395  0138                     _thresholdCount:	
 10396  0138                     	ds	2
 10397  013A                     _bpm:	
 10398  013A                     	ds	2
 10399  013C                     I2C1_MasterRead@trBlock:	
 10400  013C                     	ds	4
 10401  0140                     I2C1_MasterWrite@trBlock:	
 10402  0140                     	ds	4
 10403                           
 10404                           	psect	dataBANK2
 10405  0150                     __pdataBANK2:	
 10406  0150                     _initial:	
 10407  0150                     	ds	2
 10408  0152                     _delay:	
 10409  0152                     	ds	2
 10410                           
 10411                           	psect	bssBANK3
 10412  01A0                     __pbssBANK3:	
 10413  01A0                     _dbuf:	
 10414  01A0                     	ds	32
 10415  01C0                     _buttons:	
 10416  01C0                     	ds	32
 10417                           
 10418                           	psect	inittext
 10419  1F4E                     init_ram:	
 10420  1F4E  00FE               	movwf	126
 10421  1F4F                     initloop:	
 10422  1F4F  0012               	moviw fsr0++
 10423  1F50  001E               	movwi fsr1++
 10424  1F51  3001               	movlw	1
 10425  1F52  02FE               	subwf	126,f
 10426  1F53  3000               	movlw	0
 10427  1F54  3BFF               	subwfb	127,f
 10428  1F55  087F               	movf	127,w
 10429  1F56  047E               	iorwf	126,w
 10430  1F57  1903               	btfsc	3,2
 10431  1F58  3400               	retlw	0
 10432  1F59  2F4F               	goto	initloop
 10433                           
 10434                           	psect	clrtext
 10435  1F42                     clear_ram0:	
 10436                           ;	Called with FSR0 containing the base address, and
 10437                           ;	btemp/btemp+1 has the size to clear
 10438                           
 10439  1F42  0064               	clrwdt	;clear the watchdog before getting into this loop
 10440  1F43                     clrloop0:	
 10441  1F43  0180               	clrf	0	;clear RAM location pointed to by FSR
 10442  1F44  3101               	addfsr 0,1
 10443  1F45  3001               	movlw	1
 10444  1F46  02FE               	subwf	126,f
 10445  1F47  3000               	movlw	0
 10446  1F48  3BFF               	subwfb	127,f
 10447  1F49  087F               	movf	127,w
 10448  1F4A  047E               	iorwf	126,w
 10449  1F4B  1903               	btfsc	3,2
 10450  1F4C  3400               	retlw	0	;all done for this memory range, return
 10451  1F4D  2F43               	goto	clrloop0	;have we reached the end yet?
 10452                           
 10453                           	psect	cstackBANK1
 10454  00D1                     __pcstackBANK1:	
 10455  00D1                     ??_LED_task_BEAT:	
 10456  00D1                     ?_LED_setColor:	
 10457                           ; 1 bytes @ 0x0
 10458                           
 10459  00D1                     ?_printf:	
 10460                           ; 1 bytes @ 0x0
 10461                           
 10462  00D1                     printf@fmt:	
 10463                           ; 2 bytes @ 0x0
 10464                           
 10465  00D1                     LED_setColor@input:	
 10466                           ; 2 bytes @ 0x0
 10467                           
 10468                           
 10469                           ; 4 bytes @ 0x0
 10470  00D1                     	ds	4
 10471  00D5                     ??_LED_setColor:	
 10472                           
 10473                           ; 1 bytes @ 0x4
 10474  00D5                     	ds	4
 10475  00D9                     ??_LED_task_DMX:	
 10476                           
 10477                           ; 1 bytes @ 0x8
 10478  00D9                     	ds	2
 10479  00DB                     ??_CONTROLLER_task:	
 10480                           
 10481                           ; 1 bytes @ 0xA
 10482  00DB                     	ds	3
 10483  00DE                     LED_task_DMX@dmx:	
 10484                           
 10485                           ; 4 bytes @ 0xD
 10486  00DE                     	ds	4
 10487  00E2                     ??_LED_task:	
 10488                           
 10489                           ; 1 bytes @ 0x11
 10490  00E2                     	ds	2
 10491  00E4                     ??_main:	
 10492                           
 10493                           ; 1 bytes @ 0x13
 10494  00E4                     	ds	2
 10495                           
 10496                           	psect	cstackCOMMON
 10497  0077                     __pcstackCOMMON:	
 10498  0077                     ?_PMD_Initialize:	
 10499  0077                     ?_PIN_MANAGER_Initialize:	
 10500                           ; 1 bytes @ 0x0
 10501                           
 10502  0077                     ?_OSCILLATOR_Initialize:	
 10503                           ; 1 bytes @ 0x0
 10504                           
 10505  0077                     ?_I2C1_Initialize:	
 10506                           ; 1 bytes @ 0x0
 10507                           
 10508  0077                     ?_PWM1_Initialize:	
 10509                           ; 1 bytes @ 0x0
 10510                           
 10511  0077                     ?_PWM2_Initialize:	
 10512                           ; 1 bytes @ 0x0
 10513                           
 10514  0077                     ?_ADCC_Initialize:	
 10515                           ; 1 bytes @ 0x0
 10516                           
 10517  0077                     ?_PWM4_Initialize:	
 10518                           ; 1 bytes @ 0x0
 10519                           
 10520  0077                     ?_PWM3_Initialize:	
 10521                           ; 1 bytes @ 0x0
 10522                           
 10523  0077                     ?_TMR2_Initialize:	
 10524                           ; 1 bytes @ 0x0
 10525                           
 10526  0077                     ?_TMR0_Initialize:	
 10527                           ; 1 bytes @ 0x0
 10528                           
 10529  0077                     ?_EUSART1_Initialize:	
 10530                           ; 1 bytes @ 0x0
 10531                           
 10532  0077                     ?_EUSART1_Receive_ISR:	
 10533                           ; 1 bytes @ 0x0
 10534                           
 10535  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10536                           ; 1 bytes @ 0x0
 10537                           
 10538  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10539                           ; 1 bytes @ 0x0
 10540                           
 10541  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10542                           ; 1 bytes @ 0x0
 10543                           
 10544  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10545                           ; 1 bytes @ 0x0
 10546                           
 10547  0077                     ?_EUSART1_DefaultErrorHandler:	
 10548                           ; 1 bytes @ 0x0
 10549                           
 10550  0077                     ?_EUSART1_RxDataHandler:	
 10551                           ; 1 bytes @ 0x0
 10552                           
 10553  0077                     ??_EUSART1_RxDataHandler:	
 10554                           ; 1 bytes @ 0x0
 10555                           
 10556  0077                     ?_TMR0_ISR:	
 10557                           ; 1 bytes @ 0x0
 10558                           
 10559  0077                     ??_TMR0_ISR:	
 10560                           ; 1 bytes @ 0x0
 10561                           
 10562  0077                     ?_I2C1_BusCollisionISR:	
 10563                           ; 1 bytes @ 0x0
 10564                           
 10565  0077                     ??_I2C1_BusCollisionISR:	
 10566                           ; 1 bytes @ 0x0
 10567                           
 10568  0077                     ?_I2C1_ISR:	
 10569                           ; 1 bytes @ 0x0
 10570                           
 10571  0077                     ?_ADCC_ThresholdISR:	
 10572                           ; 1 bytes @ 0x0
 10573                           
 10574  0077                     ??_ADCC_ThresholdISR:	
 10575                           ; 1 bytes @ 0x0
 10576                           
 10577  0077                     ?_TMR0_DefaultInterruptHandler:	
 10578                           ; 1 bytes @ 0x0
 10579                           
 10580  0077                     ??_TMR0_DefaultInterruptHandler:	
 10581                           ; 1 bytes @ 0x0
 10582                           
 10583  0077                     ?_I2C1_Stop:	
 10584                           ; 1 bytes @ 0x0
 10585                           
 10586  0077                     ??_I2C1_Stop:	
 10587                           ; 1 bytes @ 0x0
 10588                           
 10589  0077                     ?_I2C1_FunctionComplete:	
 10590                           ; 1 bytes @ 0x0
 10591                           
 10592  0077                     ??_I2C1_FunctionComplete:	
 10593                           ; 1 bytes @ 0x0
 10594                           
 10595  0077                     ?_ADCC_DefaultInterruptHandler:	
 10596                           ; 1 bytes @ 0x0
 10597                           
 10598  0077                     ??_ADCC_DefaultInterruptHandler:	
 10599                           ; 1 bytes @ 0x0
 10600                           
 10601  0077                     ?_CLOCK_init:	
 10602                           ; 1 bytes @ 0x0
 10603                           
 10604  0077                     ?_BUTTONS_init:	
 10605                           ; 1 bytes @ 0x0
 10606                           
 10607  0077                     ?_BEAT_init:	
 10608                           ; 1 bytes @ 0x0
 10609                           
 10610  0077                     ?_TM1650_init:	
 10611                           ; 1 bytes @ 0x0
 10612                           
 10613  0077                     ?_DMX_init:	
 10614                           ; 1 bytes @ 0x0
 10615                           
 10616  0077                     ?_BUTTONS_task:	
 10617                           ; 1 bytes @ 0x0
 10618                           
 10619  0077                     ?_CONTROLLER_task:	
 10620                           ; 1 bytes @ 0x0
 10621                           
 10622  0077                     ?_BEAT_task:	
 10623                           ; 1 bytes @ 0x0
 10624                           
 10625  0077                     ?_LED_task:	
 10626                           ; 1 bytes @ 0x0
 10627                           
 10628  0077                     ?_GPIO_init:	
 10629                           ; 1 bytes @ 0x0
 10630                           
 10631  0077                     ?_CLOCK_timerCallback:	
 10632                           ; 1 bytes @ 0x0
 10633                           
 10634  0077                     ??_CLOCK_timerCallback:	
 10635                           ; 1 bytes @ 0x0
 10636                           
 10637  0077                     ?_menuSelection:	
 10638                           ; 1 bytes @ 0x0
 10639                           
 10640  0077                     ?_CONTROL_DMX:	
 10641                           ; 1 bytes @ 0x0
 10642                           
 10643  0077                     ?_CONTROL_BEAT:	
 10644                           ; 1 bytes @ 0x0
 10645                           
 10646  0077                     ?_TM1650_enable:	
 10647                           ; 1 bytes @ 0x0
 10648                           
 10649  0077                     ?_address_inc:	
 10650                           ; 1 bytes @ 0x0
 10651                           
 10652  0077                     ?_address_dec:	
 10653                           ; 1 bytes @ 0x0
 10654                           
 10655  0077                     ?_DMX_interrupt:	
 10656                           ; 1 bytes @ 0x0
 10657                           
 10658  0077                     ??_DMX_interrupt:	
 10659                           ; 1 bytes @ 0x0
 10660                           
 10661  0077                     ?_LED_task_BEAT:	
 10662                           ; 1 bytes @ 0x0
 10663                           
 10664  0077                     ?_LED_task_ANIMATION:	
 10665                           ; 1 bytes @ 0x0
 10666                           
 10667  0077                     ?_SYSTEM_Initialize:	
 10668                           ; 1 bytes @ 0x0
 10669                           
 10670  0077                     ?_INTERRUPT_InterruptManager:	
 10671                           ; 1 bytes @ 0x0
 10672                           
 10673  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10674                           ; 1 bytes @ 0x0
 10675                           
 10676  0077                     ?_ADCC_StartConversion:	
 10677                           ; 1 bytes @ 0x0
 10678                           
 10679  0077                     ?_main:	
 10680                           ; 1 bytes @ 0x0
 10681                           
 10682  0077                     ?_BUTTONS_isClicked:	
 10683                           ; 1 bytes @ 0x0
 10684                           
 10685  0077                     ?_BUTTONS_isHeld:	
 10686                           ; 1 bytes @ 0x0
 10687                           
 10688  0077                     ?_getMode:	
 10689                           ; 1 bytes @ 0x0
 10690                           
 10691  0077                     ?_putch:	
 10692                           ; 1 bytes @ 0x0
 10693                           
 10694  0077                     ?_adcThresholdHandler:	
 10695                           ; 1 bytes @ 0x0
 10696                           
 10697  0077                     ??_adcThresholdHandler:	
 10698                           ; 1 bytes @ 0x0
 10699                           
 10700  0077                     ?_BEAT_detected:	
 10701                           ; 1 bytes @ 0x0
 10702                           
 10703  0077                     ?_DMX_getAddress:	
 10704                           ; 1 bytes @ 0x0
 10705                           
 10706  0077                     ?_LED_task_DMX:	
 10707                           ; 1 bytes @ 0x0
 10708                           
 10709                           
 10710                           ; 1 bytes @ 0x0
 10711  0077                     	ds	1
 10712  0078                     ??_EUSART1_Receive_ISR:	
 10713  0078                     ??_EUSART1_DefaultErrorHandler:	
 10714                           ; 1 bytes @ 0x1
 10715                           
 10716  0078                     I2C1_Stop@completion_code:	
 10717                           ; 1 bytes @ 0x1
 10718                           
 10719                           
 10720                           ; 1 bytes @ 0x1
 10721  0078                     	ds	1
 10722  0079                     ??_I2C1_ISR:	
 10723                           
 10724                           ; 1 bytes @ 0x2
 10725  0079                     	ds	4
 10726  007D                     DMX_interrupt@dummy:	
 10727                           
 10728                           ; 1 bytes @ 0x6
 10729  007D                     	ds	1
 10730  007E                     ??_INTERRUPT_InterruptManager:	
 10731                           
 10732                           	psect	cstackBANK0
 10733  0020                     __pcstackBANK0:	
 10734                           ; 1 bytes @ 0x7
 10735                           
 10736  0020                     ??_PMD_Initialize:	
 10737  0020                     ??_PIN_MANAGER_Initialize:	
 10738                           ; 1 bytes @ 0x0
 10739                           
 10740  0020                     ??_OSCILLATOR_Initialize:	
 10741                           ; 1 bytes @ 0x0
 10742                           
 10743  0020                     ??_I2C1_Initialize:	
 10744                           ; 1 bytes @ 0x0
 10745                           
 10746  0020                     ??_PWM1_Initialize:	
 10747                           ; 1 bytes @ 0x0
 10748                           
 10749  0020                     ??_PWM2_Initialize:	
 10750                           ; 1 bytes @ 0x0
 10751                           
 10752  0020                     ??_PWM4_Initialize:	
 10753                           ; 1 bytes @ 0x0
 10754                           
 10755  0020                     ??_PWM3_Initialize:	
 10756                           ; 1 bytes @ 0x0
 10757                           
 10758  0020                     ??_TMR2_Initialize:	
 10759                           ; 1 bytes @ 0x0
 10760                           
 10761  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10762                           ; 1 bytes @ 0x0
 10763                           
 10764  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10765                           ; 1 bytes @ 0x0
 10766                           
 10767  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10768                           ; 1 bytes @ 0x0
 10769                           
 10770  0020                     ?_EUSART1_SetErrorHandler:	
 10771                           ; 1 bytes @ 0x0
 10772                           
 10773  0020                     ?_TMR0_SetInterruptHandler:	
 10774                           ; 1 bytes @ 0x0
 10775                           
 10776  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10777                           ; 1 bytes @ 0x0
 10778                           
 10779  0020                     ?_I2C1_MasterTRBInsert:	
 10780                           ; 1 bytes @ 0x0
 10781                           
 10782  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10783                           ; 1 bytes @ 0x0
 10784                           
 10785  0020                     ??_GPIO_init:	
 10786                           ; 1 bytes @ 0x0
 10787                           
 10788  0020                     ??_CONTROL_BEAT:	
 10789                           ; 1 bytes @ 0x0
 10790                           
 10791  0020                     ??_LED_task_ANIMATION:	
 10792                           ; 1 bytes @ 0x0
 10793                           
 10794  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10795                           ; 1 bytes @ 0x0
 10796                           
 10797  0020                     ??_ADCC_StartConversion:	
 10798                           ; 1 bytes @ 0x0
 10799                           
 10800  0020                     ?_ADCC_SetUpperThreshold:	
 10801                           ; 1 bytes @ 0x0
 10802                           
 10803  0020                     ?_init:	
 10804                           ; 1 bytes @ 0x0
 10805                           
 10806  0020                     ??_BUTTONS_isClicked:	
 10807                           ; 1 bytes @ 0x0
 10808                           
 10809  0020                     ??_BUTTONS_isHeld:	
 10810                           ; 1 bytes @ 0x0
 10811                           
 10812  0020                     ??_getMode:	
 10813                           ; 1 bytes @ 0x0
 10814                           
 10815  0020                     ??_BEAT_detected:	
 10816                           ; 1 bytes @ 0x0
 10817                           
 10818  0020                     ??_DMX_getAddress:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0020                     ?_CLOCK_getTime:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0020                     ?_strlen:	
 10825                           ; 2 bytes @ 0x0
 10826                           
 10827  0020                     ?__Umul8_16:	
 10828                           ; 2 bytes @ 0x0
 10829                           
 10830  0020                     ?___lwdiv:	
 10831                           ; 2 bytes @ 0x0
 10832                           
 10833  0020                     ?___xxtofl:	
 10834                           ; 2 bytes @ 0x0
 10835                           
 10836  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 10837                           ; 4 bytes @ 0x0
 10838                           
 10839  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0020                     ADCC_StartConversion@channel:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0020                     BUTTONS_isClicked@button:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0020                     BUTTONS_isHeld@button:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0020                     __Umul8_16@multiplicand:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10858                           ; 2 bytes @ 0x0
 10859                           
 10860  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 10861                           ; 2 bytes @ 0x0
 10862                           
 10863  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10864                           ; 2 bytes @ 0x0
 10865                           
 10866  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 10867                           ; 2 bytes @ 0x0
 10868                           
 10869  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 10870                           ; 2 bytes @ 0x0
 10871                           
 10872  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 10873                           ; 2 bytes @ 0x0
 10874                           
 10875  0020                     init@port:	
 10876                           ; 2 bytes @ 0x0
 10877                           
 10878  0020                     ___lwdiv@divisor:	
 10879                           ; 2 bytes @ 0x0
 10880                           
 10881  0020                     strlen@s:	
 10882                           ; 2 bytes @ 0x0
 10883                           
 10884  0020                     ___xxtofl@val:	
 10885                           ; 2 bytes @ 0x0
 10886                           
 10887                           
 10888                           ; 4 bytes @ 0x0
 10889  0020                     	ds	1
 10890  0021                     I2C1_MasterTRBInsert@pflag:	
 10891  0021                     I2C1_MasterWriteTRBBuild@length:	
 10892                           ; 1 bytes @ 0x1
 10893                           
 10894                           
 10895                           ; 1 bytes @ 0x1
 10896  0021                     	ds	1
 10897  0022                     ??_ADCC_Initialize:	
 10898  0022                     ??_TMR0_Initialize:	
 10899                           ; 1 bytes @ 0x2
 10900                           
 10901  0022                     ??_EUSART1_Initialize:	
 10902                           ; 1 bytes @ 0x2
 10903                           
 10904  0022                     ??_EUSART1_SetRxInterruptHandler:	
 10905                           ; 1 bytes @ 0x2
 10906                           
 10907  0022                     ??_EUSART1_SetFramingErrorHandler:	
 10908                           ; 1 bytes @ 0x2
 10909                           
 10910  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 10911                           ; 1 bytes @ 0x2
 10912                           
 10913  0022                     ??_EUSART1_SetErrorHandler:	
 10914                           ; 1 bytes @ 0x2
 10915                           
 10916  0022                     ??_TMR0_SetInterruptHandler:	
 10917                           ; 1 bytes @ 0x2
 10918                           
 10919  0022                     ??_I2C1_MasterTRBInsert:	
 10920                           ; 1 bytes @ 0x2
 10921                           
 10922  0022                     ??_ADCC_SetADTIInterruptHandler:	
 10923                           ; 1 bytes @ 0x2
 10924                           
 10925  0022                     ??_CLOCK_init:	
 10926                           ; 1 bytes @ 0x2
 10927                           
 10928  0022                     ??_BEAT_init:	
 10929                           ; 1 bytes @ 0x2
 10930                           
 10931  0022                     ??_CLOCK_getTime:	
 10932                           ; 1 bytes @ 0x2
 10933                           
 10934  0022                     ??_BUTTONS_task:	
 10935                           ; 1 bytes @ 0x2
 10936                           
 10937  0022                     ??_strlen:	
 10938                           ; 1 bytes @ 0x2
 10939                           
 10940  0022                     ??__Umul8_16:	
 10941                           ; 1 bytes @ 0x2
 10942                           
 10943  0022                     ??_SYSTEM_Initialize:	
 10944                           ; 1 bytes @ 0x2
 10945                           
 10946  0022                     ??_ADCC_SetUpperThreshold:	
 10947                           ; 1 bytes @ 0x2
 10948                           
 10949  0022                     init@pin:	
 10950                           ; 1 bytes @ 0x2
 10951                           
 10952  0022                     I2C1_MasterWriteTRBBuild@address:	
 10953                           ; 1 bytes @ 0x2
 10954                           
 10955  0022                     ___lwdiv@dividend:	
 10956                           ; 2 bytes @ 0x2
 10957                           
 10958                           
 10959                           ; 2 bytes @ 0x2
 10960  0022                     	ds	1
 10961  0023                     ??_init:	
 10962  0023                     I2C1_MasterTRBInsert@count:	
 10963                           ; 1 bytes @ 0x3
 10964                           
 10965  0023                     strlen@a:	
 10966                           ; 1 bytes @ 0x3
 10967                           
 10968                           
 10969                           ; 2 bytes @ 0x3
 10970  0023                     	ds	1
 10971  0024                     ??_I2C1_MasterWriteTRBBuild:	
 10972  0024                     ??___lwdiv:	
 10973                           ; 1 bytes @ 0x4
 10974                           
 10975  0024                     ??___xxtofl:	
 10976                           ; 1 bytes @ 0x4
 10977                           
 10978  0024                     init@btn:	
 10979                           ; 1 bytes @ 0x4
 10980                           
 10981  0024                     __Umul8_16@product:	
 10982                           ; 1 bytes @ 0x4
 10983                           
 10984                           
 10985                           ; 2 bytes @ 0x4
 10986  0024                     	ds	1
 10987  0025                     ??_BUTTONS_init:	
 10988  0025                     BUTTONS_task@i:	
 10989                           ; 1 bytes @ 0x5
 10990                           
 10991  0025                     ___lwdiv@quotient:	
 10992                           ; 1 bytes @ 0x5
 10993                           
 10994                           
 10995                           ; 2 bytes @ 0x5
 10996  0025                     	ds	1
 10997  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 10998  0026                     BUTTONS_task@time:	
 10999                           ; 1 bytes @ 0x6
 11000                           
 11001  0026                     __Umul8_16@word_mpld:	
 11002                           ; 2 bytes @ 0x6
 11003                           
 11004                           
 11005                           ; 2 bytes @ 0x6
 11006  0026                     	ds	1
 11007  0027                     ?_I2C1_MasterWrite:	
 11008  0027                     I2C1_MasterWrite@length:	
 11009                           ; 1 bytes @ 0x7
 11010                           
 11011  0027                     ___lwdiv@counter:	
 11012                           ; 1 bytes @ 0x7
 11013                           
 11014                           
 11015                           ; 1 bytes @ 0x7
 11016  0027                     	ds	1
 11017  0028                     ??_BEAT_task:	
 11018  0028                     ?___lwmod:	
 11019                           ; 1 bytes @ 0x8
 11020                           
 11021  0028                     BUTTONS_task@btn:	
 11022                           ; 2 bytes @ 0x8
 11023                           
 11024  0028                     ___xxtofl@sign:	
 11025                           ; 1 bytes @ 0x8
 11026                           
 11027  0028                     __Umul8_16@multiplier:	
 11028                           ; 1 bytes @ 0x8
 11029                           
 11030  0028                     I2C1_MasterWrite@address:	
 11031                           ; 1 bytes @ 0x8
 11032                           
 11033  0028                     ___lwmod@divisor:	
 11034                           ; 2 bytes @ 0x8
 11035                           
 11036                           
 11037                           ; 2 bytes @ 0x8
 11038  0028                     	ds	1
 11039  0029                     ___xxtofl@exp:	
 11040                           
 11041                           ; 1 bytes @ 0x9
 11042  0029                     	ds	1
 11043  002A                     I2C1_MasterWrite@pflag:	
 11044  002A                     BEAT_task@offset:	
 11045                           ; 1 bytes @ 0xA
 11046                           
 11047  002A                     ___lwmod@dividend:	
 11048                           ; 2 bytes @ 0xA
 11049                           
 11050  002A                     ___xxtofl@arg:	
 11051                           ; 2 bytes @ 0xA
 11052                           
 11053                           
 11054                           ; 4 bytes @ 0xA
 11055  002A                     	ds	1
 11056  002B                     ??_I2C1_MasterWrite:	
 11057                           
 11058                           ; 1 bytes @ 0xB
 11059  002B                     	ds	1
 11060  002C                     ??___lwmod:	
 11061                           
 11062                           ; 1 bytes @ 0xC
 11063  002C                     	ds	1
 11064  002D                     I2C1_MasterWrite@pdata:	
 11065  002D                     ___lwmod@counter:	
 11066                           ; 1 bytes @ 0xD
 11067                           
 11068                           
 11069                           ; 1 bytes @ 0xD
 11070  002D                     	ds	1
 11071  002E                     ?_writeData:	
 11072  002E                     ?___fldiv:	
 11073                           ; 1 bytes @ 0xE
 11074                           
 11075  002E                     writeData@data:	
 11076                           ; 4 bytes @ 0xE
 11077                           
 11078  002E                     ___fldiv@a:	
 11079                           ; 1 bytes @ 0xE
 11080                           
 11081                           
 11082                           ; 4 bytes @ 0xE
 11083  002E                     	ds	1
 11084  002F                     ??_writeData:	
 11085                           
 11086                           ; 1 bytes @ 0xF
 11087  002F                     	ds	3
 11088  0032                     writeData@address:	
 11089  0032                     ___fldiv@b:	
 11090                           ; 1 bytes @ 0x12
 11091                           
 11092                           
 11093                           ; 4 bytes @ 0x12
 11094  0032                     	ds	1
 11095  0033                     writeData@status:	
 11096                           
 11097                           ; 1 bytes @ 0x13
 11098  0033                     	ds	1
 11099  0034                     ??_TM1650_enable:	
 11100  0034                     ?_TM1650_fastPrintNum:	
 11101                           ; 1 bytes @ 0x14
 11102                           
 11103  0034                     ?_TM1650_setDigit:	
 11104                           ; 1 bytes @ 0x14
 11105                           
 11106  0034                     TM1650_enable@enable:	
 11107                           ; 1 bytes @ 0x14
 11108                           
 11109  0034                     TM1650_setDigit@data:	
 11110                           ; 1 bytes @ 0x14
 11111                           
 11112  0034                     TM1650_fastPrintNum@num:	
 11113                           ; 1 bytes @ 0x14
 11114                           
 11115                           
 11116                           ; 2 bytes @ 0x14
 11117  0034                     	ds	1
 11118  0035                     ??_TM1650_setDigit:	
 11119                           
 11120                           ; 1 bytes @ 0x15
 11121  0035                     	ds	1
 11122  0036                     ??_TM1650_fastPrintNum:	
 11123  0036                     ??___fldiv:	
 11124                           ; 1 bytes @ 0x16
 11125                           
 11126  0036                     TM1650_setDigit@digit:	
 11127                           ; 1 bytes @ 0x16
 11128                           
 11129                           
 11130                           ; 1 bytes @ 0x16
 11131  0036                     	ds	1
 11132  0037                     ??_DMX_init:	
 11133  0037                     ??_CONTROL_DMX:	
 11134                           ; 1 bytes @ 0x17
 11135                           
 11136  0037                     ??_address_inc:	
 11137                           ; 1 bytes @ 0x17
 11138                           
 11139  0037                     ??_address_dec:	
 11140                           ; 1 bytes @ 0x17
 11141                           
 11142  0037                     ??_putch:	
 11143                           ; 1 bytes @ 0x17
 11144                           
 11145                           
 11146                           ; 1 bytes @ 0x17
 11147  0037                     	ds	1
 11148  0038                     putch@n:	
 11149                           
 11150                           ; 1 bytes @ 0x18
 11151  0038                     	ds	1
 11152  0039                     ?_fputc:	
 11153  0039                     fputc@c:	
 11154                           ; 2 bytes @ 0x19
 11155                           
 11156                           
 11157                           ; 2 bytes @ 0x19
 11158  0039                     	ds	2
 11159  003B                     fputc@fp:	
 11160  003B                     ___fldiv@rem:	
 11161                           ; 1 bytes @ 0x1B
 11162                           
 11163                           
 11164                           ; 4 bytes @ 0x1B
 11165  003B                     	ds	1
 11166  003C                     ??_fputc:	
 11167                           
 11168                           ; 1 bytes @ 0x1C
 11169  003C                     	ds	3
 11170  003F                     ___fldiv@sign:	
 11171                           
 11172                           ; 1 bytes @ 0x1F
 11173  003F                     	ds	1
 11174  0040                     ___fldiv@new_exp:	
 11175                           
 11176                           ; 2 bytes @ 0x20
 11177  0040                     	ds	1
 11178  0041                     ?_fputs:	
 11179  0041                     fputs@fp:	
 11180                           ; 2 bytes @ 0x21
 11181                           
 11182                           
 11183                           ; 1 bytes @ 0x21
 11184  0041                     	ds	1
 11185  0042                     ??_fputs:	
 11186  0042                     ___fldiv@grs:	
 11187                           ; 1 bytes @ 0x22
 11188                           
 11189                           
 11190                           ; 4 bytes @ 0x22
 11191  0042                     	ds	3
 11192  0045                     fputs@c:	
 11193                           
 11194                           ; 1 bytes @ 0x25
 11195  0045                     	ds	1
 11196  0046                     ___fldiv@bexp:	
 11197  0046                     fputs@i:	
 11198                           ; 1 bytes @ 0x26
 11199                           
 11200                           
 11201                           ; 2 bytes @ 0x26
 11202  0046                     	ds	1
 11203  0047                     ___fldiv@aexp:	
 11204                           
 11205                           ; 1 bytes @ 0x27
 11206  0047                     	ds	1
 11207  0048                     ?___flmul:	
 11208  0048                     fputs@s:	
 11209                           ; 4 bytes @ 0x28
 11210                           
 11211  0048                     ___flmul@b:	
 11212                           ; 1 bytes @ 0x28
 11213                           
 11214                           
 11215                           ; 4 bytes @ 0x28
 11216  0048                     	ds	1
 11217  0049                     ?_pad:	
 11218  0049                     pad@buf:	
 11219                           ; 2 bytes @ 0x29
 11220                           
 11221                           
 11222                           ; 1 bytes @ 0x29
 11223  0049                     	ds	1
 11224  004A                     pad@p:	
 11225                           
 11226                           ; 2 bytes @ 0x2A
 11227  004A                     	ds	2
 11228  004C                     ??_pad:	
 11229  004C                     ___flmul@a:	
 11230                           ; 1 bytes @ 0x2C
 11231                           
 11232                           
 11233                           ; 4 bytes @ 0x2C
 11234  004C                     	ds	1
 11235  004D                     pad@i:	
 11236                           
 11237                           ; 2 bytes @ 0x2D
 11238  004D                     	ds	2
 11239  004F                     pad@w:	
 11240                           
 11241                           ; 2 bytes @ 0x2F
 11242  004F                     	ds	1
 11243  0050                     ??___flmul:	
 11244                           
 11245                           ; 1 bytes @ 0x30
 11246  0050                     	ds	1
 11247  0051                     pad@fp:	
 11248                           
 11249                           ; 1 bytes @ 0x31
 11250  0051                     	ds	1
 11251  0052                     ?_ctoa:	
 11252  0052                     ctoa@c:	
 11253                           ; 2 bytes @ 0x32
 11254                           
 11255                           
 11256                           ; 1 bytes @ 0x32
 11257  0052                     	ds	2
 11258  0054                     ??_ctoa:	
 11259                           
 11260                           ; 1 bytes @ 0x34
 11261  0054                     	ds	1
 11262  0055                     ___flmul@sign:	
 11263  0055                     ctoa@w:	
 11264                           ; 1 bytes @ 0x35
 11265                           
 11266                           
 11267                           ; 2 bytes @ 0x35
 11268  0055                     	ds	1
 11269  0056                     ___flmul@grs:	
 11270                           
 11271                           ; 4 bytes @ 0x36
 11272  0056                     	ds	1
 11273  0057                     ctoa@fp:	
 11274                           
 11275                           ; 1 bytes @ 0x37
 11276  0057                     	ds	1
 11277  0058                     ?_vfpfcnvrt:	
 11278  0058                     vfpfcnvrt@fmt:	
 11279                           ; 2 bytes @ 0x38
 11280                           
 11281                           
 11282                           ; 1 bytes @ 0x38
 11283  0058                     	ds	1
 11284  0059                     vfpfcnvrt@ap:	
 11285                           
 11286                           ; 1 bytes @ 0x39
 11287  0059                     	ds	1
 11288  005A                     ??_vfpfcnvrt:	
 11289  005A                     ___flmul@aexp:	
 11290                           ; 1 bytes @ 0x3A
 11291                           
 11292                           
 11293                           ; 1 bytes @ 0x3A
 11294  005A                     	ds	1
 11295  005B                     ___flmul@bexp:	
 11296                           
 11297                           ; 1 bytes @ 0x3B
 11298  005B                     	ds	1
 11299  005C                     ___flmul@prod:	
 11300                           
 11301                           ; 4 bytes @ 0x3C
 11302  005C                     	ds	3
 11303  005F                     vfpfcnvrt@c:	
 11304                           
 11305                           ; 1 bytes @ 0x3F
 11306  005F                     	ds	1
 11307  0060                     vfpfcnvrt@fp:	
 11308  0060                     ___flmul@temp:	
 11309                           ; 1 bytes @ 0x40
 11310                           
 11311                           
 11312                           ; 2 bytes @ 0x40
 11313  0060                     	ds	1
 11314  0061                     ?_vfprintf:	
 11315  0061                     vfprintf@fmt:	
 11316                           ; 2 bytes @ 0x41
 11317                           
 11318                           
 11319                           ; 2 bytes @ 0x41
 11320  0061                     	ds	1
 11321  0062                     ?___fltol:	
 11322  0062                     ___fltol@f1:	
 11323                           ; 4 bytes @ 0x42
 11324                           
 11325                           
 11326                           ; 4 bytes @ 0x42
 11327  0062                     	ds	1
 11328  0063                     vfprintf@ap:	
 11329                           
 11330                           ; 1 bytes @ 0x43
 11331  0063                     	ds	1
 11332  0064                     ??_vfprintf:	
 11333                           
 11334                           ; 1 bytes @ 0x44
 11335  0064                     	ds	2
 11336  0066                     ??___fltol:	
 11337  0066                     vfprintf@fp:	
 11338                           ; 1 bytes @ 0x46
 11339                           
 11340                           
 11341                           ; 1 bytes @ 0x46
 11342  0066                     	ds	1
 11343  0067                     vfprintf@cfmt:	
 11344                           
 11345                           ; 2 bytes @ 0x47
 11346  0067                     	ds	2
 11347  0069                     ??_printf:	
 11348                           
 11349                           ; 1 bytes @ 0x49
 11350  0069                     	ds	2
 11351  006B                     ___fltol@sign1:	
 11352                           
 11353                           ; 1 bytes @ 0x4B
 11354  006B                     	ds	1
 11355  006C                     ___fltol@exp1:	
 11356  006C                     printf@ap:	
 11357                           ; 1 bytes @ 0x4C
 11358                           
 11359                           
 11360                           ; 1 bytes @ 0x4C
 11361  006C                     	ds	1
 11362  006D                     ??_TM1650_init:	
 11363  006D                     ??_menuSelection:	
 11364                           ; 1 bytes @ 0x4D
 11365                           
 11366  006D                     ?_PWM3_LoadDutyValue:	
 11367                           ; 1 bytes @ 0x4D
 11368                           
 11369  006D                     ?_PWM4_LoadDutyValue:	
 11370                           ; 1 bytes @ 0x4D
 11371                           
 11372  006D                     ?_PWM1_LoadDutyValue:	
 11373                           ; 1 bytes @ 0x4D
 11374                           
 11375  006D                     ?_PWM2_LoadDutyValue:	
 11376                           ; 1 bytes @ 0x4D
 11377                           
 11378  006D                     PWM3_LoadDutyValue@dutyValue:	
 11379                           ; 1 bytes @ 0x4D
 11380                           
 11381  006D                     PWM4_LoadDutyValue@dutyValue:	
 11382                           ; 2 bytes @ 0x4D
 11383                           
 11384  006D                     PWM1_LoadDutyValue@dutyValue:	
 11385                           ; 2 bytes @ 0x4D
 11386                           
 11387  006D                     PWM2_LoadDutyValue@dutyValue:	
 11388                           ; 2 bytes @ 0x4D
 11389                           
 11390                           
 11391                           ; 2 bytes @ 0x4D
 11392  006D                     	ds	2
 11393  006F                     ??_PWM3_LoadDutyValue:	
 11394  006F                     ??_PWM4_LoadDutyValue:	
 11395                           ; 1 bytes @ 0x4F
 11396                           
 11397  006F                     ??_PWM1_LoadDutyValue:	
 11398                           ; 1 bytes @ 0x4F
 11399                           
 11400  006F                     ??_PWM2_LoadDutyValue:	
 11401                           ; 1 bytes @ 0x4F
 11402                           
 11403  006F                     CONTROLLER_task@isActive:	
 11404                           ; 1 bytes @ 0x4F
 11405                           
 11406                           
 11407                           ; 1 bytes @ 0x4F
 11408  006F                     	ds	1
 11409                           
 11410                           	psect	maintext
 11411  1499                     __pmaintext:	
 11412 ;;
 11413 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11414 ;;
 11415 ;; *************** function _main *****************
 11416 ;; Defined at:
 11417 ;;		line 58 in file "main.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;		None
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;		None
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1    wreg      void 
 11424 ;; Registers used:
 11425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11426 ;; Tracked objects:
 11427 ;;		On entry : B3F/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11433 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11434 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11435 ;;Total ram usage:        2 bytes
 11436 ;; Hardware stack levels required when called:   19
 11437 ;; This function calls:
 11438 ;;		_BEAT_init
 11439 ;;		_BEAT_task
 11440 ;;		_BUTTONS_init
 11441 ;;		_BUTTONS_task
 11442 ;;		_CLOCK_getTime
 11443 ;;		_CLOCK_init
 11444 ;;		_CONTROLLER_task
 11445 ;;		_DMX_init
 11446 ;;		_LED_task
 11447 ;;		_SYSTEM_Initialize
 11448 ;;		_TM1650_init
 11449 ;; This function is called by:
 11450 ;;		Startup code after reset
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           
 11455                           ;psect for function _main
 11456  1499                     _main:	
 11457                           
 11458                           ;main.c: 61:     SYSTEM_Initialize();
 11459                           
 11460                           ;incstack = 0
 11461 ;; hardware stack exceeded
 11462                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11463  1499  3192  223A  3194   	fcall	_SYSTEM_Initialize
 11464                           
 11465                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11466  149C  3015               	movlw	21
 11467  149D  0141               	movlb	1	; select bank1
 11468  149E  00E5               	movwf	(??_main^(0+128)+1)
 11469  149F  304B               	movlw	75
 11470  14A0  00E4               	movwf	??_main^(0+128)
 11471  14A1  30BE               	movlw	190
 11472  14A2                     u6317:	
 11473  14A2  0B89               	decfsz	9,f
 11474  14A3  2CA2               	goto	u6317
 11475  14A4  0BE4               	decfsz	??_main^(0+128),f
 11476  14A5  2CA2               	goto	u6317
 11477  14A6  0BE5               	decfsz	(??_main^(0+128)+1),f
 11478  14A7  2CA2               	goto	u6317
 11479  14A8  0000               	nop
 11480                           
 11481                           ;main.c: 63:     CLOCK_init();
 11482  14A9  3190  2000  3194   	fcall	_CLOCK_init
 11483                           
 11484                           ;main.c: 64:     BUTTONS_init();
 11485  14AC  3194  24D2  3194   	fcall	_BUTTONS_init
 11486                           
 11487                           ;main.c: 65:     BEAT_init();
 11488  14AF  3188  2000  3194   	fcall	_BEAT_init
 11489                           
 11490                           ;main.c: 67:     (INTCONbits.GIE = 1);
 11491  14B2  178B               	bsf	11,7	;volatile
 11492                           
 11493                           ;main.c: 68:     (INTCONbits.PEIE = 1);
 11494  14B3  170B               	bsf	11,6	;volatile
 11495                           
 11496                           ;main.c: 70:     TM1650_init();
 11497  14B4  3190  2008  3194   	fcall	_TM1650_init
 11498                           
 11499                           ;main.c: 71:     DMX_init();
 11500  14B7  319F  27C5  3194   	fcall	_DMX_init
 11501                           
 11502                           ;main.c: 72:     startTime = CLOCK_getTime();
 11503  14BA  319E  26BA  3194   	fcall	_CLOCK_getTime
 11504  14BD  0140               	movlb	0	; select bank0
 11505  14BE  0821               	movf	?_CLOCK_getTime+1,w
 11506  14BF  0141               	movlb	1	; select bank1
 11507  14C0  00B6               	movwf	(_startTime+1)^(0+128)
 11508  14C1  0140               	movlb	0	; select bank0
 11509  14C2  0820               	movf	?_CLOCK_getTime,w
 11510  14C3  0141               	movlb	1	; select bank1
 11511  14C4  00B5               	movwf	_startTime^(0+128)
 11512  14C5                     l6829:	
 11513                           
 11514                           ;main.c: 75:     {;main.c: 76:         BUTTONS_task();
 11515  14C5  318A  220D  3194   	fcall	_BUTTONS_task
 11516                           
 11517                           ;main.c: 77:         CONTROLLER_task();
 11518  14C8  318A  22F2  3194   	fcall	_CONTROLLER_task
 11519                           
 11520                           ;main.c: 78:         BEAT_task();
 11521  14CB  3189  213C  3194   	fcall	_BEAT_task
 11522                           
 11523                           ;main.c: 79:         LED_task();
 11524  14CE  3191  21B0  3194   	fcall	_LED_task
 11525  14D1  2CC5               	goto	l6829
 11526  14D2                     __end_of_main:	
 11527                           
 11528                           	psect	text1
 11529  1008                     __ptext1:	
 11530 ;; *************** function _TM1650_init *****************
 11531 ;; Defined at:
 11532 ;;		line 51 in file "tm1650.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;		None
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11550 ;;Total ram usage:        0 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:   17
 11553 ;; This function calls:
 11554 ;;		_TM1650_enable
 11555 ;;		_printf
 11556 ;; This function is called by:
 11557 ;;		_main
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           
 11562                           ;psect for function _TM1650_init
 11563  1008                     _TM1650_init:	
 11564                           
 11565                           ;tm1650.c: 53:     TM1650_enable(1);
 11566                           
 11567                           ;incstack = 0
 11568 ;; hardware stack exceeded
 11569                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11570  1008  3001               	movlw	1
 11571  1009  3190  201C  3190   	fcall	_TM1650_enable
 11572                           
 11573                           ;tm1650.c: 54:     printf("    ");
 11574  100C  3069               	movlw	low (STR_6| (0+32768))
 11575  100D  0141               	movlb	1	; select bank1
 11576  100E  00D1               	movwf	printf@fmt^(0+128)
 11577  100F  30A0               	movlw	high (STR_6| (0+32768))
 11578  1010  00D2               	movwf	(printf@fmt^(0+128)+1)
 11579  1011  3190  2031  3190   	fcall	_printf
 11580                           
 11581                           ;tm1650.c: 55:     printf("\r");
 11582  1014  304F               	movlw	low ((STR_16+4)| (0+32768))
 11583  1015  0141               	movlb	1	; select bank1
 11584  1016  00D1               	movwf	printf@fmt^(0+128)
 11585  1017  30A0               	movlw	high ((STR_16+4)| (0+32768))
 11586  1018  00D2               	movwf	(printf@fmt^(0+128)+1)
 11587  1019  3190  2031         	fcall	_printf
 11588  101B  0008               	return
 11589  101C                     __end_of_TM1650_init:	
 11590                           
 11591                           	psect	text2
 11592  123A                     __ptext2:	
 11593 ;; *************** function _SYSTEM_Initialize *****************
 11594 ;; Defined at:
 11595 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0, pclath, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11613 ;;Total ram usage:        0 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    6
 11616 ;; This function calls:
 11617 ;;		_ADCC_Initialize
 11618 ;;		_EUSART1_Initialize
 11619 ;;		_I2C1_Initialize
 11620 ;;		_OSCILLATOR_Initialize
 11621 ;;		_PIN_MANAGER_Initialize
 11622 ;;		_PMD_Initialize
 11623 ;;		_PWM1_Initialize
 11624 ;;		_PWM2_Initialize
 11625 ;;		_PWM3_Initialize
 11626 ;;		_PWM4_Initialize
 11627 ;;		_TMR0_Initialize
 11628 ;;		_TMR2_Initialize
 11629 ;; This function is called by:
 11630 ;;		_main
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           
 11635                           ;psect for function _SYSTEM_Initialize
 11636  123A                     _SYSTEM_Initialize:	
 11637                           
 11638                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11639                           
 11640                           ;incstack = 0
 11641                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11642  123A  319F  2702  3192   	fcall	_PMD_Initialize
 11643                           
 11644                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11645  123D  3194  242D  3192   	fcall	_PIN_MANAGER_Initialize
 11646                           
 11647                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11648  1240  319E  26F9  3192   	fcall	_OSCILLATOR_Initialize
 11649                           
 11650                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11651  1243  3190  20BF  3192   	fcall	_I2C1_Initialize
 11652                           
 11653                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11654  1246  319F  2716  3192   	fcall	_PWM1_Initialize
 11655                           
 11656                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11657  1249  319F  2721  3192   	fcall	_PWM2_Initialize
 11658                           
 11659                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11660  124C  3192  2284  3192   	fcall	_ADCC_Initialize
 11661                           
 11662                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11663  124F  319F  2737  3192   	fcall	_PWM4_Initialize
 11664                           
 11665                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11666  1252  319F  272C  3192   	fcall	_PWM3_Initialize
 11667                           
 11668                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11669  1255  319F  2774  3192   	fcall	_TMR2_Initialize
 11670                           
 11671                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11672  1258  319F  27EC  3192   	fcall	_TMR0_Initialize
 11673                           
 11674                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11675  125B  3193  2391         	fcall	_EUSART1_Initialize
 11676  125D  0008               	return
 11677  125E                     __end_of_SYSTEM_Initialize:	
 11678                           
 11679                           	psect	text3
 11680  1F74                     __ptext3:	
 11681 ;; *************** function _TMR2_Initialize *****************
 11682 ;; Defined at:
 11683 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11701 ;;Total ram usage:        0 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    4
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_SYSTEM_Initialize
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function _TMR2_Initialize
 11713  1F74                     _TMR2_Initialize:	
 11714                           
 11715                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11716                           
 11717                           ;incstack = 0
 11718                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11719  1F74  3001               	movlw	1
 11720  1F75  0145               	movlb	5	; select bank5
 11721  1F76  0090               	movwf	16	;volatile
 11722                           
 11723                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11724  1F77  018F               	clrf	15	;volatile
 11725                           
 11726                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11727  1F78  0191               	clrf	17	;volatile
 11728                           
 11729                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11730  1F79  30FF               	movlw	255
 11731  1F7A  008D               	movwf	13	;volatile
 11732                           
 11733                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11734  1F7B  018C               	clrf	12	;volatile
 11735                           
 11736                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11737  1F7C  014E               	movlb	14	; select bank14
 11738  1F7D  1090               	bcf	16,1	;volatile
 11739                           
 11740                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
 11741  1F7E  30D0               	movlw	208
 11742  1F7F  0145               	movlb	5	; select bank5
 11743  1F80  008E               	movwf	14	;volatile
 11744  1F81  0008               	return
 11745  1F82                     __end_of_TMR2_Initialize:	
 11746                           
 11747                           	psect	text4
 11748  1FEC                     __ptext4:	
 11749 ;; *************** function _TMR0_Initialize *****************
 11750 ;; Defined at:
 11751 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;		None
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;		None
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  1    wreg      void 
 11758 ;; Registers used:
 11759 ;;		wreg, status,2, status,0, pclath, cstack
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11769 ;;Total ram usage:        0 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    5
 11772 ;; This function calls:
 11773 ;;		_TMR0_SetInterruptHandler
 11774 ;; This function is called by:
 11775 ;;		_SYSTEM_Initialize
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           
 11780                           ;psect for function _TMR0_Initialize
 11781  1FEC                     _TMR0_Initialize:	
 11782                           
 11783                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11784                           
 11785                           ;incstack = 0
 11786                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11787  1FEC  3045               	movlw	69
 11788  1FED  014B               	movlb	11	; select bank11
 11789  1FEE  009F               	movwf	31	;volatile
 11790                           
 11791                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11792  1FEF  30F9               	movlw	249
 11793  1FF0  009D               	movwf	29	;volatile
 11794                           
 11795                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11796  1FF1  019C               	clrf	28	;volatile
 11797                           
 11798                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11799  1FF2  014E               	movlb	14	; select bank14
 11800  1FF3  128C               	bcf	12,5	;volatile
 11801                           
 11802                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11803  1FF4  1696               	bsf	22,5	;volatile
 11804                           
 11805                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11806  1FF5  3002               	movlw	low _TMR0_DefaultInterruptHandler
 11807  1FF6  0140               	movlb	0	; select bank0
 11808  1FF7  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11809  1FF8  3000               	movlw	high _TMR0_DefaultInterruptHandler
 11810  1FF9  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11811  1FFA  319E  26C3         	fcall	_TMR0_SetInterruptHandler
 11812                           
 11813                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 11814  1FFC  3080               	movlw	128
 11815  1FFD  014B               	movlb	11	; select bank11
 11816  1FFE  009E               	movwf	30	;volatile
 11817  1FFF  0008               	return
 11818  2000                     __end_of_TMR0_Initialize:	
 11819                           
 11820                           	psect	text5
 11821  1F37                     __ptext5:	
 11822 ;; *************** function _PWM4_Initialize *****************
 11823 ;; Defined at:
 11824 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;		None
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;		None
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      void 
 11831 ;; Registers used:
 11832 ;;		wreg, status,2, status,0
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11842 ;;Total ram usage:        0 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    4
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_SYSTEM_Initialize
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           
 11853                           ;psect for function _PWM4_Initialize
 11854  1F37                     _PWM4_Initialize:	
 11855                           
 11856                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 11857                           
 11858                           ;incstack = 0
 11859                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 11860  1F37  308C               	movlw	140
 11861  1F38  0146               	movlb	6	; select bank6
 11862  1F39  009A               	movwf	26	;volatile
 11863                           
 11864                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 11865  1F3A  0199               	clrf	25	;volatile
 11866                           
 11867                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 11868  1F3B  0198               	clrf	24	;volatile
 11869                           
 11870                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 11871  1F3C  0144               	movlb	4	; select bank4
 11872  1F3D  081E               	movf	30,w	;volatile
 11873  1F3E  393F               	andlw	-193
 11874  1F3F  3840               	iorlw	64
 11875  1F40  009E               	movwf	30	;volatile
 11876  1F41  0008               	return
 11877  1F42                     __end_of_PWM4_Initialize:	
 11878                           
 11879                           	psect	text6
 11880  1F2C                     __ptext6:	
 11881 ;; *************** function _PWM3_Initialize *****************
 11882 ;; Defined at:
 11883 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;		None
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg, status,2, status,0
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11901 ;;Total ram usage:        0 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:    4
 11904 ;; This function calls:
 11905 ;;		Nothing
 11906 ;; This function is called by:
 11907 ;;		_SYSTEM_Initialize
 11908 ;; This function uses a non-reentrant model
 11909 ;;
 11910                           
 11911                           
 11912                           ;psect for function _PWM3_Initialize
 11913  1F2C                     _PWM3_Initialize:	
 11914                           
 11915                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 11916                           
 11917                           ;incstack = 0
 11918                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 11919  1F2C  308C               	movlw	140
 11920  1F2D  0146               	movlb	6	; select bank6
 11921  1F2E  0096               	movwf	22	;volatile
 11922                           
 11923                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 11924  1F2F  0195               	clrf	21	;volatile
 11925                           
 11926                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 11927  1F30  0194               	clrf	20	;volatile
 11928                           
 11929                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 11930  1F31  0144               	movlb	4	; select bank4
 11931  1F32  081E               	movf	30,w	;volatile
 11932  1F33  39CF               	andlw	-49
 11933  1F34  3810               	iorlw	16
 11934  1F35  009E               	movwf	30	;volatile
 11935  1F36  0008               	return
 11936  1F37                     __end_of_PWM3_Initialize:	
 11937                           
 11938                           	psect	text7
 11939  1F21                     __ptext7:	
 11940 ;; *************** function _PWM2_Initialize *****************
 11941 ;; Defined at:
 11942 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;		None
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;		None
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1    wreg      void 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11960 ;;Total ram usage:        0 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    4
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_SYSTEM_Initialize
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           
 11971                           ;psect for function _PWM2_Initialize
 11972  1F21                     _PWM2_Initialize:	
 11973                           
 11974                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 11975                           
 11976                           ;incstack = 0
 11977                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 11978  1F21  308C               	movlw	140
 11979  1F22  0146               	movlb	6	; select bank6
 11980  1F23  0092               	movwf	18	;volatile
 11981                           
 11982                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 11983  1F24  0191               	clrf	17	;volatile
 11984                           
 11985                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 11986  1F25  0190               	clrf	16	;volatile
 11987                           
 11988                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 11989  1F26  0144               	movlb	4	; select bank4
 11990  1F27  081E               	movf	30,w	;volatile
 11991  1F28  39F3               	andlw	-13
 11992  1F29  3804               	iorlw	4
 11993  1F2A  009E               	movwf	30	;volatile
 11994  1F2B  0008               	return
 11995  1F2C                     __end_of_PWM2_Initialize:	
 11996                           
 11997                           	psect	text8
 11998  1F16                     __ptext8:	
 11999 ;; *************** function _PWM1_Initialize *****************
 12000 ;; Defined at:
 12001 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg, status,2, status,0
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12019 ;;Total ram usage:        0 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:    4
 12022 ;; This function calls:
 12023 ;;		Nothing
 12024 ;; This function is called by:
 12025 ;;		_SYSTEM_Initialize
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           
 12030                           ;psect for function _PWM1_Initialize
 12031  1F16                     _PWM1_Initialize:	
 12032                           
 12033                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12034                           
 12035                           ;incstack = 0
 12036                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12037  1F16  308C               	movlw	140
 12038  1F17  0146               	movlb	6	; select bank6
 12039  1F18  008E               	movwf	14	;volatile
 12040                           
 12041                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12042  1F19  018D               	clrf	13	;volatile
 12043                           
 12044                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12045  1F1A  018C               	clrf	12	;volatile
 12046                           
 12047                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12048  1F1B  0144               	movlb	4	; select bank4
 12049  1F1C  081E               	movf	30,w	;volatile
 12050  1F1D  39FC               	andlw	-4
 12051  1F1E  3801               	iorlw	1
 12052  1F1F  009E               	movwf	30	;volatile
 12053  1F20  0008               	return
 12054  1F21                     __end_of_PWM1_Initialize:	
 12055                           
 12056                           	psect	text9
 12057  1F02                     __ptext9:	
 12058 ;; *************** function _PMD_Initialize *****************
 12059 ;; Defined at:
 12060 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;		None
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;		None
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		status,2
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12078 ;;Total ram usage:        0 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:    4
 12081 ;; This function calls:
 12082 ;;		Nothing
 12083 ;; This function is called by:
 12084 ;;		_SYSTEM_Initialize
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           
 12089                           ;psect for function _PMD_Initialize
 12090  1F02                     _PMD_Initialize:	
 12091                           
 12092                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12093                           
 12094                           ;incstack = 0
 12095                           ; Regs used in _PMD_Initialize: [status,2]
 12096  1F02  014F               	movlb	15	; select bank15
 12097  1F03  0196               	clrf	22	;volatile
 12098                           
 12099                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12100  1F04  0197               	clrf	23	;volatile
 12101                           
 12102                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12103  1F05  0198               	clrf	24	;volatile
 12104                           
 12105                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12106  1F06  0199               	clrf	25	;volatile
 12107                           
 12108                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12109  1F07  019A               	clrf	26	;volatile
 12110                           
 12111                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12112  1F08  019B               	clrf	27	;volatile
 12113                           
 12114                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12115  1F09  019C               	clrf	28	;volatile
 12116                           
 12117                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12118  1F0A  019D               	clrf	29	;volatile
 12119  1F0B  0008               	return
 12120  1F0C                     __end_of_PMD_Initialize:	
 12121                           
 12122                           	psect	text10
 12123  142D                     __ptext10:	
 12124 ;; *************** function _PIN_MANAGER_Initialize *****************
 12125 ;; Defined at:
 12126 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;		None
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12144 ;;Total ram usage:        0 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    4
 12147 ;; This function calls:
 12148 ;;		Nothing
 12149 ;; This function is called by:
 12150 ;;		_SYSTEM_Initialize
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           
 12155                           ;psect for function _PIN_MANAGER_Initialize
 12156  142D                     _PIN_MANAGER_Initialize:	
 12157                           
 12158                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12159                           
 12160                           ;incstack = 0
 12161                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12162  142D  0140               	movlb	0	; select bank0
 12163  142E  0198               	clrf	24	;volatile
 12164                           
 12165                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12166  142F  0199               	clrf	25	;volatile
 12167                           
 12168                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12169  1430  019A               	clrf	26	;volatile
 12170                           
 12171                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12172  1431  303F               	movlw	63
 12173  1432  0092               	movwf	18	;volatile
 12174                           
 12175                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12176  1433  30F0               	movlw	240
 12177  1434  0093               	movwf	19	;volatile
 12178                           
 12179                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12180  1435  3006               	movlw	6
 12181  1436  0094               	movwf	20	;volatile
 12182                           
 12183                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12184  1437  30FF               	movlw	255
 12185  1438  017E               	movlb	62	; select bank62
 12186  1439  00CE               	movwf	78	;volatile
 12187                           
 12188                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12189  143A  30E0               	movlw	224
 12190  143B  00C3               	movwf	67	;volatile
 12191                           
 12192                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12193  143C  3007               	movlw	7
 12194  143D  00B8               	movwf	56	;volatile
 12195                           
 12196                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12197  143E  01C4               	clrf	68	;volatile
 12198                           
 12199                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12200  143F  01B9               	clrf	57	;volatile
 12201                           
 12202                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12203  1440  01CF               	clrf	79	;volatile
 12204                           
 12205                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12206  1441  01BA               	clrf	58	;volatile
 12207                           
 12208                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12209  1442  01C5               	clrf	69	;volatile
 12210                           
 12211                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12212  1443  01D0               	clrf	80	;volatile
 12213                           
 12214                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12215  1444  3037               	movlw	55
 12216  1445  00BB               	movwf	59	;volatile
 12217                           
 12218                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12219  1446  30F0               	movlw	240
 12220  1447  00C6               	movwf	70	;volatile
 12221                           
 12222                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12223  1448  30FF               	movlw	255
 12224  1449  00D1               	movwf	81	;volatile
 12225                           
 12226                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12227  144A  3005               	movlw	5
 12228  144B  017D               	movlb	61	; select bank61
 12229  144C  00C5               	movwf	69	;volatile
 12230                           
 12231                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12232  144D  3014               	movlw	20
 12233  144E  017E               	movlb	62	; select bank62
 12234  144F  0094               	movwf	20	;volatile
 12235                           
 12236                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12237  1450  300B               	movlw	11
 12238  1451  00A3               	movwf	35	;volatile
 12239                           
 12240                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12241  1452  300C               	movlw	12
 12242  1453  00A4               	movwf	36	;volatile
 12243                           
 12244                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12245  1454  3013               	movlw	19
 12246  1455  0095               	movwf	21	;volatile
 12247                           
 12248                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12249  1456  3009               	movlw	9
 12250  1457  00A5               	movwf	37	;volatile
 12251                           
 12252                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12253  1458  300A               	movlw	10
 12254  1459  00A6               	movwf	38	;volatile
 12255                           
 12256                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12257  145A  3009               	movlw	9
 12258  145B  00A7               	movwf	39	;volatile
 12259                           
 12260                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12261  145C  3004               	movlw	4
 12262  145D  017D               	movlb	61	; select bank61
 12263  145E  00C6               	movwf	70	;volatile
 12264                           
 12265                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12266  145F  300C               	movlw	12
 12267  1460  00CB               	movwf	75	;volatile
 12268  1461  0008               	return
 12269  1462                     __end_of_PIN_MANAGER_Initialize:	
 12270                           
 12271                           	psect	text11
 12272  1EF9                     __ptext11:	
 12273 ;; *************** function _OSCILLATOR_Initialize *****************
 12274 ;; Defined at:
 12275 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;		None
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      void 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:    4
 12296 ;; This function calls:
 12297 ;;		Nothing
 12298 ;; This function is called by:
 12299 ;;		_SYSTEM_Initialize
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           
 12304                           ;psect for function _OSCILLATOR_Initialize
 12305  1EF9                     _OSCILLATOR_Initialize:	
 12306                           
 12307                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12308                           
 12309                           ;incstack = 0
 12310                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12311  1EF9  3060               	movlw	96
 12312  1EFA  0151               	movlb	17	; select bank17
 12313  1EFB  008D               	movwf	13	;volatile
 12314                           
 12315                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12316  1EFC  018F               	clrf	15	;volatile
 12317                           
 12318                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12319  1EFD  0191               	clrf	17	;volatile
 12320                           
 12321                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12322  1EFE  3006               	movlw	6
 12323  1EFF  0093               	movwf	19	;volatile
 12324                           
 12325                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12326  1F00  0192               	clrf	18	;volatile
 12327  1F01  0008               	return
 12328  1F02                     __end_of_OSCILLATOR_Initialize:	
 12329                           
 12330                           	psect	text12
 12331  10BF                     __ptext12:	
 12332 ;; *************** function _I2C1_Initialize *****************
 12333 ;; Defined at:
 12334 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;		None
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;		None
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      void 
 12341 ;; Registers used:
 12342 ;;		wreg, status,2
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12352 ;;Total ram usage:        1 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:    4
 12355 ;; This function calls:
 12356 ;;		Nothing
 12357 ;; This function is called by:
 12358 ;;		_SYSTEM_Initialize
 12359 ;; This function uses a non-reentrant model
 12360 ;;
 12361                           
 12362                           
 12363                           ;psect for function _I2C1_Initialize
 12364  10BF                     _I2C1_Initialize:	
 12365                           
 12366                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12367                           
 12368                           ;incstack = 0
 12369                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12370  10BF  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12371  10C0  0140               	movlb	0	; select bank0
 12372  10C1  00A0               	movwf	??_I2C1_Initialize
 12373  10C2  0820               	movf	??_I2C1_Initialize,w
 12374  10C3  0141               	movlb	1	; select bank1
 12375  10C4  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12376                           
 12377                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12378  10C5  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12379  10C6  0140               	movlb	0	; select bank0
 12380  10C7  00A0               	movwf	??_I2C1_Initialize
 12381  10C8  0820               	movf	??_I2C1_Initialize,w
 12382  10C9  0141               	movlb	1	; select bank1
 12383  10CA  00A0               	movwf	_i2c1_object^(0+128)
 12384                           
 12385                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12386  10CB  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12387                           
 12388                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12389  10CC  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12390                           
 12391                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12392  10CD  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12393                           
 12394                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12395  10CE  0143               	movlb	3	; select bank3
 12396  10CF  018F               	clrf	15	;volatile
 12397                           
 12398                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12399  10D0  3028               	movlw	40
 12400  10D1  0090               	movwf	16	;volatile
 12401                           
 12402                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12403  10D2  0192               	clrf	18	;volatile
 12404                           
 12405                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12406  10D3  304F               	movlw	79
 12407  10D4  008D               	movwf	13	;volatile
 12408                           
 12409                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12410  10D5  014E               	movlb	14	; select bank14
 12411  10D6  100F               	bcf	15,0	;volatile
 12412                           
 12413                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12414  10D7  108F               	bcf	15,1	;volatile
 12415                           
 12416                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12417  10D8  1419               	bsf	25,0	;volatile
 12418                           
 12419                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12420  10D9  1499               	bsf	25,1	;volatile
 12421  10DA  0008               	return
 12422  10DB                     __end_of_I2C1_Initialize:	
 12423                           
 12424                           	psect	text13
 12425  1391                     __ptext13:	
 12426 ;; *************** function _EUSART1_Initialize *****************
 12427 ;; Defined at:
 12428 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0, pclath, cstack
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;Total ram usage:        0 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:    5
 12449 ;; This function calls:
 12450 ;;		_EUSART1_SetErrorHandler
 12451 ;;		_EUSART1_SetFramingErrorHandler
 12452 ;;		_EUSART1_SetOverrunErrorHandler
 12453 ;;		_EUSART1_SetRxInterruptHandler
 12454 ;; This function is called by:
 12455 ;;		_SYSTEM_Initialize
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           
 12460                           ;psect for function _EUSART1_Initialize
 12461  1391                     _EUSART1_Initialize:	
 12462                           
 12463                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12464                           
 12465                           ;incstack = 0
 12466                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12467  1391  014E               	movlb	14	; select bank14
 12468  1392  1299               	bcf	25,5	;volatile
 12469                           
 12470                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12471  1393  30C4               	movlw	low _EUSART1_Receive_ISR
 12472  1394  0140               	movlb	0	; select bank0
 12473  1395  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12474  1396  3013               	movlw	high _EUSART1_Receive_ISR
 12475  1397  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12476  1398  319E  26CC  3193   	fcall	_EUSART1_SetRxInterruptHandler
 12477                           
 12478                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12479  139B  3008               	movlw	8
 12480  139C  0142               	movlb	2	; select bank2
 12481  139D  009F               	movwf	31	;volatile
 12482                           
 12483                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12484  139E  3090               	movlw	144
 12485  139F  009D               	movwf	29	;volatile
 12486                           
 12487                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12488  13A0  3004               	movlw	4
 12489  13A1  009E               	movwf	30	;volatile
 12490                           
 12491                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12492  13A2  301F               	movlw	31
 12493  13A3  009B               	movwf	27	;volatile
 12494                           
 12495                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12496  13A4  019C               	clrf	28	;volatile
 12497                           
 12498                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12499  13A5  307B               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12500  13A6  0140               	movlb	0	; select bank0
 12501  13A7  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12502  13A8  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12503  13A9  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12504  13AA  319E  26E7  3193   	fcall	_EUSART1_SetFramingErrorHandler
 12505                           
 12506                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12507  13AD  308C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12508  13AE  0140               	movlb	0	; select bank0
 12509  13AF  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12510  13B0  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12511  13B1  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12512  13B2  319E  26F0  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 12513                           
 12514                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12515  13B5  307C               	movlw	low _EUSART1_DefaultErrorHandler
 12516  13B6  0140               	movlb	0	; select bank0
 12517  13B7  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12518  13B8  301E               	movlw	high _EUSART1_DefaultErrorHandler
 12519  13B9  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12520  13BA  319E  26DE         	fcall	_EUSART1_SetErrorHandler
 12521                           
 12522                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12523  13BC  0141               	movlb	1	; select bank1
 12524  13BD  01CC               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12525                           
 12526                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12527  13BE  01F4               	clrf	_eusart1RxHead	;volatile
 12528                           
 12529                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12530  13BF  01F3               	clrf	_eusart1RxTail	;volatile
 12531                           
 12532                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12533  13C0  01CD               	clrf	_eusart1RxCount^(0+128)	;volatile
 12534                           
 12535                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12536  13C1  014E               	movlb	14	; select bank14
 12537  13C2  1699               	bsf	25,5	;volatile
 12538  13C3  0008               	return
 12539  13C4                     __end_of_EUSART1_Initialize:	
 12540                           
 12541                           	psect	text14
 12542  1EF0                     __ptext14:	
 12543 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12544 ;; Defined at:
 12545 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12548 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      void 
 12553 ;; Registers used:
 12554 ;;		wreg
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12564 ;;Total ram usage:        2 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:    4
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_EUSART1_Initialize
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           
 12575                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12576  1EF0                     _EUSART1_SetOverrunErrorHandler:	
 12577                           
 12578                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12579                           
 12580                           ;incstack = 0
 12581                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12582  1EF0  0140               	movlb	0	; select bank0
 12583  1EF1  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12584  1EF2  0142               	movlb	2	; select bank2
 12585  1EF3  00CB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12586  1EF4  0140               	movlb	0	; select bank0
 12587  1EF5  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12588  1EF6  0142               	movlb	2	; select bank2
 12589  1EF7  00CA               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12590  1EF8  0008               	return
 12591  1EF9                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12592                           
 12593                           	psect	text15
 12594  1EE7                     __ptext15:	
 12595 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12596 ;; Defined at:
 12597 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12600 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;		None
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  1    wreg      void 
 12605 ;; Registers used:
 12606 ;;		wreg
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12616 ;;Total ram usage:        2 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; Hardware stack levels required when called:    4
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		_EUSART1_Initialize
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           
 12627                           ;psect for function _EUSART1_SetFramingErrorHandler
 12628  1EE7                     _EUSART1_SetFramingErrorHandler:	
 12629                           
 12630                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12631                           
 12632                           ;incstack = 0
 12633                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12634  1EE7  0140               	movlb	0	; select bank0
 12635  1EE8  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12636  1EE9  0142               	movlb	2	; select bank2
 12637  1EEA  00CD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12638  1EEB  0140               	movlb	0	; select bank0
 12639  1EEC  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12640  1EED  0142               	movlb	2	; select bank2
 12641  1EEE  00CC               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12642  1EEF  0008               	return
 12643  1EF0                     __end_of_EUSART1_SetFramingErrorHandler:	
 12644                           
 12645                           	psect	text16
 12646  1EDE                     __ptext16:	
 12647 ;; *************** function _EUSART1_SetErrorHandler *****************
 12648 ;; Defined at:
 12649 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12650 ;; Parameters:    Size  Location     Type
 12651 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12652 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;		None
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  1    wreg      void 
 12657 ;; Registers used:
 12658 ;;		wreg
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12668 ;;Total ram usage:        2 bytes
 12669 ;; Hardware stack levels used:    1
 12670 ;; Hardware stack levels required when called:    4
 12671 ;; This function calls:
 12672 ;;		Nothing
 12673 ;; This function is called by:
 12674 ;;		_EUSART1_Initialize
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           
 12679                           ;psect for function _EUSART1_SetErrorHandler
 12680  1EDE                     _EUSART1_SetErrorHandler:	
 12681                           
 12682                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12683                           
 12684                           ;incstack = 0
 12685                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12686  1EDE  0140               	movlb	0	; select bank0
 12687  1EDF  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12688  1EE0  0142               	movlb	2	; select bank2
 12689  1EE1  00C9               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12690  1EE2  0140               	movlb	0	; select bank0
 12691  1EE3  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12692  1EE4  0142               	movlb	2	; select bank2
 12693  1EE5  00C8               	movwf	_EUSART1_ErrorHandler^(0+256)
 12694  1EE6  0008               	return
 12695  1EE7                     __end_of_EUSART1_SetErrorHandler:	
 12696                           
 12697                           	psect	text17
 12698  1284                     __ptext17:	
 12699 ;; *************** function _ADCC_Initialize *****************
 12700 ;; Defined at:
 12701 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2, status,0, pclath, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    5
 12722 ;; This function calls:
 12723 ;;		_ADCC_SetADTIInterruptHandler
 12724 ;; This function is called by:
 12725 ;;		_SYSTEM_Initialize
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729                           
 12730                           ;psect for function _ADCC_Initialize
 12731  1284                     _ADCC_Initialize:	
 12732                           
 12733                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12734                           
 12735                           ;incstack = 0
 12736                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12737  1284  0141               	movlb	1	; select bank1
 12738  1285  018C               	clrf	12	;volatile
 12739                           
 12740                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12741  1286  018D               	clrf	13	;volatile
 12742                           
 12743                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12744  1287  018E               	clrf	14	;volatile
 12745                           
 12746                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12747  1288  018F               	clrf	15	;volatile
 12748                           
 12749                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12750  1289  0192               	clrf	18	;volatile
 12751                           
 12752                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12753  128A  0193               	clrf	19	;volatile
 12754                           
 12755                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12756  128B  0198               	clrf	24	;volatile
 12757                           
 12758                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12759  128C  019A               	clrf	26	;volatile
 12760                           
 12761                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12762  128D  019F               	clrf	31	;volatile
 12763                           
 12764                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12765  128E  0142               	movlb	2	; select bank2
 12766  128F  018C               	clrf	12	;volatile
 12767                           
 12768                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12769  1290  018D               	clrf	13	;volatile
 12770                           
 12771                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12772  1291  018E               	clrf	14	;volatile
 12773                           
 12774                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12775  1292  018F               	clrf	15	;volatile
 12776                           
 12777                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12778  1293  0190               	clrf	16	;volatile
 12779                           
 12780                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12781  1294  0192               	clrf	18	;volatile
 12782                           
 12783                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12784  1295  3054               	movlw	84
 12785  1296  0093               	movwf	19	;volatile
 12786                           
 12787                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12788  1297  3056               	movlw	86
 12789  1298  0094               	movwf	20	;volatile
 12790                           
 12791                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12792  1299  0195               	clrf	21	;volatile
 12793                           
 12794                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12795  129A  0196               	clrf	22	;volatile
 12796                           
 12797                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12798  129B  0197               	clrf	23	;volatile
 12799                           
 12800                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12801  129C  0198               	clrf	24	;volatile
 12802                           
 12803                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12804  129D  30D4               	movlw	212
 12805  129E  0091               	movwf	17	;volatile
 12806                           
 12807                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12808  129F  014E               	movlb	14	; select bank14
 12809  12A0  108D               	bcf	13,1	;volatile
 12810                           
 12811                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12812  12A1  1497               	bsf	23,1	;volatile
 12813                           
 12814                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12815  12A2  307A               	movlw	low _ADCC_DefaultInterruptHandler
 12816  12A3  0140               	movlb	0	; select bank0
 12817  12A4  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 12818  12A5  301E               	movlw	high _ADCC_DefaultInterruptHandler
 12819  12A6  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 12820  12A7  319E  269F         	fcall	_ADCC_SetADTIInterruptHandler
 12821  12A9  0008               	return
 12822  12AA                     __end_of_ADCC_Initialize:	
 12823                           
 12824                           	psect	text18
 12825  11B0                     __ptext18:	
 12826 ;; *************** function _LED_task *****************
 12827 ;; Defined at:
 12828 ;;		line 44 in file "led.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  1    wreg      void 
 12835 ;; Registers used:
 12836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12844 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12845 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12846 ;;Total ram usage:        2 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    8
 12849 ;; This function calls:
 12850 ;;		_LED_task_ANIMATION
 12851 ;;		_LED_task_BEAT
 12852 ;;		_LED_task_DMX
 12853 ;;		_getMode
 12854 ;; This function is called by:
 12855 ;;		_main
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           
 12860                           ;psect for function _LED_task
 12861  11B0                     _LED_task:	
 12862                           
 12863                           ;led.c: 46:     switch(getMode()){
 12864                           
 12865                           ;incstack = 0
 12866                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12867  11B0  29BA               	goto	l6797
 12868  11B1                     l6789:	
 12869                           
 12870                           ;led.c: 48:             LED_task_DMX();
 12871  11B1  3188  2017         	fcall	_LED_task_DMX
 12872                           
 12873                           ;led.c: 49:             break;
 12874  11B3  0008               	return
 12875  11B4                     l6791:	
 12876                           
 12877                           ;led.c: 52:             LED_task_BEAT();
 12878  11B4  3180  2084         	fcall	_LED_task_BEAT
 12879                           
 12880                           ;led.c: 53:             break;
 12881  11B6  0008               	return
 12882  11B7                     l6793:	
 12883                           
 12884                           ;led.c: 56:             LED_task_ANIMATION();
 12885  11B7  3180  2003         	fcall	_LED_task_ANIMATION
 12886                           
 12887                           ;led.c: 57:             break;
 12888  11B9  0008               	return
 12889  11BA                     l6797:	
 12890  11BA  319E  2685  3191   	fcall	_getMode
 12891  11BD  0141               	movlb	1	; select bank1
 12892  11BE  00E2               	movwf	??_LED_task^(0+128)
 12893  11BF  01E3               	clrf	(??_LED_task^(0+128)+1)
 12894                           
 12895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12896                           ; Switch size 1, requested type "simple"
 12897                           ; Number of cases is 1, Range of values is 0 to 0
 12898                           ; switch strategies available:
 12899                           ; Name         Instructions Cycles
 12900                           ; simple_byte            4     3 (average)
 12901                           ; direct_byte            8     6 (fixed)
 12902                           ; jumptable            260     6 (fixed)
 12903                           ;	Chosen strategy is simple_byte
 12904  11C0  0863               	movf	(??_LED_task+1)^(0+128),w
 12905  11C1  3A00               	xorlw	0	; case 0
 12906  11C2  1903               	skipnz
 12907  11C3  29C5               	goto	l6965
 12908  11C4  29D0               	goto	l1274
 12909  11C5                     l6965:	
 12910                           
 12911                           ; Switch size 1, requested type "simple"
 12912                           ; Number of cases is 3, Range of values is 0 to 2
 12913                           ; switch strategies available:
 12914                           ; Name         Instructions Cycles
 12915                           ; simple_byte           10     6 (average)
 12916                           ; direct_byte           12     6 (fixed)
 12917                           ; jumptable            260     6 (fixed)
 12918                           ;	Chosen strategy is simple_byte
 12919  11C5  0862               	movf	??_LED_task^(0+128),w
 12920  11C6  3A00               	xorlw	0	; case 0
 12921  11C7  1903               	skipnz
 12922  11C8  29B7               	goto	l6793
 12923  11C9  3A01               	xorlw	1	; case 1
 12924  11CA  1903               	skipnz
 12925  11CB  29B4               	goto	l6791
 12926  11CC  3A03               	xorlw	3	; case 2
 12927  11CD  1903               	skipnz
 12928  11CE  29B1               	goto	l6789
 12929  11CF  29D0               	goto	l1274
 12930  11D0                     l1274:	
 12931  11D0  0008               	return
 12932  11D1                     __end_of_LED_task:	
 12933                           
 12934                           	psect	text19
 12935  1E85                     __ptext19:	
 12936 ;; *************** function _getMode *****************
 12937 ;; Defined at:
 12938 ;;		line 118 in file "controller.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;		None
 12941 ;; Auto vars:     Size  Location     Type
 12942 ;;		None
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  1    wreg      enum E10869
 12945 ;; Registers used:
 12946 ;;		wreg
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12956 ;;Total ram usage:        0 bytes
 12957 ;; Hardware stack levels used:    1
 12958 ;; Hardware stack levels required when called:    4
 12959 ;; This function calls:
 12960 ;;		Nothing
 12961 ;; This function is called by:
 12962 ;;		_LED_task
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           
 12967                           ;psect for function _getMode
 12968  1E85                     _getMode:	
 12969                           
 12970                           ;controller.c: 119:     return currentSelection;
 12971                           
 12972                           ;incstack = 0
 12973                           ; Regs used in _getMode: [wreg]
 12974  1E85  0141               	movlb	1	; select bank1
 12975  1E86  086C               	movf	_currentSelection^(0+128),w
 12976  1E87  0008               	return
 12977  1E88                     __end_of_getMode:	
 12978                           
 12979                           	psect	text20
 12980  0817                     __ptext20:	
 12981 ;; *************** function _LED_task_DMX *****************
 12982 ;; Defined at:
 12983 ;;		line 31 in file "led.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;  dmx             4   13[BANK1 ] struct .
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/0
 12994 ;;		On exit  : 0/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12998 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12999 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13000 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13001 ;;Total ram usage:        9 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:    7
 13004 ;; This function calls:
 13005 ;;		_DMX_getAddress
 13006 ;;		_LED_setColor
 13007 ;; This function is called by:
 13008 ;;		_LED_task
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012                           
 13013                           ;psect for function _LED_task_DMX
 13014  0817                     _LED_task_DMX:	
 13015                           
 13016                           ;led.c: 33:     color_t dmx;;led.c: 35:     dmx.red = dmxArray[DMX_getAddress()];
 13017                           
 13018                           ;incstack = 0
 13019                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13020  0817  319E  2682  3188   	fcall	_DMX_getAddress
 13021  081A  0141               	movlb	1	; select bank1
 13022  081B  00D9               	movwf	??_LED_task_DMX^(0+128)
 13023  081C  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13024  081D  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13025  081E  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13026  081F  30EE               	movlw	238
 13027  0820  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13028  0821  3023               	movlw	35
 13029  0822  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13030  0823  0859               	movf	??_LED_task_DMX^(0+128),w
 13031  0824  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13032  0825  0086               	movwf	6
 13033  0826  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13034  0827  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13035  0828  0087               	movwf	7
 13036  0829  0801               	movf	1,w
 13037  082A  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13038  082B  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13039  082C  00DF               	movwf	(LED_task_DMX@dmx^(0+128)+1)
 13040                           
 13041                           ;led.c: 36:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13042  082D  319E  2682  3188   	fcall	_DMX_getAddress
 13043  0830  0141               	movlb	1	; select bank1
 13044  0831  00D9               	movwf	??_LED_task_DMX^(0+128)
 13045  0832  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13046  0833  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13047  0834  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13048  0835  30F0               	movlw	240
 13049  0836  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13050  0837  3023               	movlw	35
 13051  0838  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13052  0839  0859               	movf	??_LED_task_DMX^(0+128),w
 13053  083A  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13054  083B  0086               	movwf	6
 13055  083C  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13056  083D  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13057  083E  0087               	movwf	7
 13058  083F  0801               	movf	1,w
 13059  0840  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13060  0841  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13061  0842  00E0               	movwf	(LED_task_DMX@dmx^(0+128)+2)
 13062                           
 13063                           ;led.c: 37:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13064  0843  319E  2682  3188   	fcall	_DMX_getAddress
 13065  0846  0141               	movlb	1	; select bank1
 13066  0847  00D9               	movwf	??_LED_task_DMX^(0+128)
 13067  0848  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13068  0849  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13069  084A  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13070  084B  30F2               	movlw	242
 13071  084C  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13072  084D  3023               	movlw	35
 13073  084E  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13074  084F  0859               	movf	??_LED_task_DMX^(0+128),w
 13075  0850  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13076  0851  0086               	movwf	6
 13077  0852  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13078  0853  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13079  0854  0087               	movwf	7
 13080  0855  0801               	movf	1,w
 13081  0856  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13082  0857  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13083  0858  00E1               	movwf	(LED_task_DMX@dmx^(0+128)+3)
 13084                           
 13085                           ;led.c: 38:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13086  0859  319E  2682  3188   	fcall	_DMX_getAddress
 13087  085C  0141               	movlb	1	; select bank1
 13088  085D  00D9               	movwf	??_LED_task_DMX^(0+128)
 13089  085E  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13090  085F  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13091  0860  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13092  0861  30F4               	movlw	244
 13093  0862  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13094  0863  3023               	movlw	35
 13095  0864  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13096  0865  0859               	movf	??_LED_task_DMX^(0+128),w
 13097  0866  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13098  0867  0086               	movwf	6
 13099  0868  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13100  0869  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13101  086A  0087               	movwf	7
 13102  086B  0801               	movf	1,w
 13103  086C  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13104  086D  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13105  086E  00DE               	movwf	LED_task_DMX@dmx^(0+128)
 13106                           
 13107                           ;led.c: 40:     LED_setColor(dmx);
 13108  086F  0861               	movf	(LED_task_DMX@dmx+3)^(0+128),w
 13109  0870  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 13110  0871  0860               	movf	(LED_task_DMX@dmx+2)^(0+128),w
 13111  0872  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 13112  0873  085F               	movf	(LED_task_DMX@dmx+1)^(0+128),w
 13113  0874  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 13114  0875  085E               	movf	LED_task_DMX@dmx^(0+128),w
 13115  0876  00D1               	movwf	LED_setColor@input^(0+128)
 13116  0877  318D  252F         	fcall	_LED_setColor
 13117  0879  0008               	return
 13118  087A                     __end_of_LED_task_DMX:	
 13119                           
 13120                           	psect	text21
 13121  0D2F                     __ptext21:	
 13122 ;; *************** function _LED_setColor *****************
 13123 ;; Defined at:
 13124 ;;		line 22 in file "led.c"
 13125 ;; Parameters:    Size  Location     Type
 13126 ;;  input           4    0[BANK1 ] struct .
 13127 ;; Auto vars:     Size  Location     Type
 13128 ;;		None
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  1    wreg      void 
 13131 ;; Registers used:
 13132 ;;		wreg, status,2, status,0, pclath, cstack
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13138 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13141 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13142 ;;Total ram usage:        8 bytes
 13143 ;; Hardware stack levels used:    1
 13144 ;; Hardware stack levels required when called:    6
 13145 ;; This function calls:
 13146 ;;		_PWM1_LoadDutyValue
 13147 ;;		_PWM2_LoadDutyValue
 13148 ;;		_PWM3_LoadDutyValue
 13149 ;;		_PWM4_LoadDutyValue
 13150 ;;		___fldiv
 13151 ;;		___flmul
 13152 ;;		___fltol
 13153 ;;		___xxtofl
 13154 ;; This function is called by:
 13155 ;;		_LED_task_DMX
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           
 13160                           ;psect for function _LED_setColor
 13161  0D2F                     _LED_setColor:	
 13162                           
 13163                           ;led.c: 23:     if(!startup){
 13164                           
 13165                           ;incstack = 0
 13166                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 13167  0D2F  0141               	movlb	1	; select bank1
 13168  0D30  086E               	movf	_startup^(0+128),w
 13169  0D31  1D03               	btfss	3,2
 13170  0D32  0008               	return
 13171                           
 13172                           ;led.c: 24:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 120 );
 13173  0D33  0852               	movf	(LED_setColor@input^(0+128)+1),w
 13174  0D34  00D5               	movwf	??_LED_setColor^(0+128)
 13175  0D35  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13176  0D36  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13177  0D37  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13178  0D38  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13179  0D39  0140               	movlb	0	; select bank0
 13180  0D3A  00A3               	movwf	___xxtofl@val+3
 13181  0D3B  0141               	movlb	1	; select bank1
 13182  0D3C  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13183  0D3D  0140               	movlb	0	; select bank0
 13184  0D3E  00A2               	movwf	___xxtofl@val+2
 13185  0D3F  0141               	movlb	1	; select bank1
 13186  0D40  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13187  0D41  0140               	movlb	0	; select bank0
 13188  0D42  00A1               	movwf	___xxtofl@val+1
 13189  0D43  0141               	movlb	1	; select bank1
 13190  0D44  0855               	movf	??_LED_setColor^(0+128),w
 13191  0D45  0140               	movlb	0	; select bank0
 13192  0D46  00A0               	movwf	___xxtofl@val
 13193  0D47  3001               	movlw	1
 13194  0D48  3196  261F  318D   	fcall	___xxtofl
 13195  0D4B  0140               	movlb	0	; select bank0
 13196  0D4C  0823               	movf	?___xxtofl+3,w
 13197  0D4D  00B5               	movwf	___fldiv@b+3
 13198  0D4E  0822               	movf	?___xxtofl+2,w
 13199  0D4F  00B4               	movwf	___fldiv@b+2
 13200  0D50  0821               	movf	?___xxtofl+1,w
 13201  0D51  00B3               	movwf	___fldiv@b+1
 13202  0D52  0820               	movf	?___xxtofl,w
 13203  0D53  00B2               	movwf	___fldiv@b
 13204  0D54  3043               	movlw	67
 13205  0D55  00B1               	movwf	___fldiv@a+3
 13206  0D56  307F               	movlw	127
 13207  0D57  00B0               	movwf	___fldiv@a+2
 13208  0D58  3000               	movlw	0
 13209  0D59  00AF               	movwf	___fldiv@a+1
 13210  0D5A  3000               	movlw	0
 13211  0D5B  00AE               	movwf	___fldiv@a
 13212  0D5C  318E  2686  318D   	fcall	___fldiv
 13213  0D5F  0140               	movlb	0	; select bank0
 13214  0D60  0831               	movf	?___fldiv+3,w
 13215  0D61  00CF               	movwf	___flmul@a+3
 13216  0D62  0830               	movf	?___fldiv+2,w
 13217  0D63  00CE               	movwf	___flmul@a+2
 13218  0D64  082F               	movf	?___fldiv+1,w
 13219  0D65  00CD               	movwf	___flmul@a+1
 13220  0D66  082E               	movf	?___fldiv,w
 13221  0D67  00CC               	movwf	___flmul@a
 13222  0D68  3042               	movlw	66
 13223  0D69  00CB               	movwf	___flmul@b+3
 13224  0D6A  30F0               	movlw	240
 13225  0D6B  00CA               	movwf	___flmul@b+2
 13226  0D6C  3000               	movlw	0
 13227  0D6D  00C9               	movwf	___flmul@b+1
 13228  0D6E  3000               	movlw	0
 13229  0D6F  00C8               	movwf	___flmul@b
 13230  0D70  3185  256E  318D   	fcall	___flmul
 13231  0D73  0140               	movlb	0	; select bank0
 13232  0D74  084B               	movf	?___flmul+3,w
 13233  0D75  00E5               	movwf	___fltol@f1+3
 13234  0D76  084A               	movf	?___flmul+2,w
 13235  0D77  00E4               	movwf	___fltol@f1+2
 13236  0D78  0849               	movf	?___flmul+1,w
 13237  0D79  00E3               	movwf	___fltol@f1+1
 13238  0D7A  0848               	movf	?___flmul,w
 13239  0D7B  00E2               	movwf	___fltol@f1
 13240  0D7C  3187  279A  318D   	fcall	___fltol
 13241  0D7F  0140               	movlb	0	; select bank0
 13242  0D80  0863               	movf	?___fltol+1,w
 13243  0D81  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13244  0D82  0862               	movf	?___fltol,w
 13245  0D83  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13246  0D84  3190  20F8  318D   	fcall	_PWM1_LoadDutyValue
 13247                           
 13248                           ;led.c: 25:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 120 );
 13249  0D87  0141               	movlb	1	; select bank1
 13250  0D88  0853               	movf	(LED_setColor@input^(0+128)+2),w
 13251  0D89  00D5               	movwf	??_LED_setColor^(0+128)
 13252  0D8A  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13253  0D8B  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13254  0D8C  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13255  0D8D  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13256  0D8E  0140               	movlb	0	; select bank0
 13257  0D8F  00A3               	movwf	___xxtofl@val+3
 13258  0D90  0141               	movlb	1	; select bank1
 13259  0D91  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13260  0D92  0140               	movlb	0	; select bank0
 13261  0D93  00A2               	movwf	___xxtofl@val+2
 13262  0D94  0141               	movlb	1	; select bank1
 13263  0D95  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13264  0D96  0140               	movlb	0	; select bank0
 13265  0D97  00A1               	movwf	___xxtofl@val+1
 13266  0D98  0141               	movlb	1	; select bank1
 13267  0D99  0855               	movf	??_LED_setColor^(0+128),w
 13268  0D9A  0140               	movlb	0	; select bank0
 13269  0D9B  00A0               	movwf	___xxtofl@val
 13270  0D9C  3001               	movlw	1
 13271  0D9D  3196  261F  318D   	fcall	___xxtofl
 13272  0DA0  0140               	movlb	0	; select bank0
 13273  0DA1  0823               	movf	?___xxtofl+3,w
 13274  0DA2  00B5               	movwf	___fldiv@b+3
 13275  0DA3  0822               	movf	?___xxtofl+2,w
 13276  0DA4  00B4               	movwf	___fldiv@b+2
 13277  0DA5  0821               	movf	?___xxtofl+1,w
 13278  0DA6  00B3               	movwf	___fldiv@b+1
 13279  0DA7  0820               	movf	?___xxtofl,w
 13280  0DA8  00B2               	movwf	___fldiv@b
 13281  0DA9  3043               	movlw	67
 13282  0DAA  00B1               	movwf	___fldiv@a+3
 13283  0DAB  307F               	movlw	127
 13284  0DAC  00B0               	movwf	___fldiv@a+2
 13285  0DAD  3000               	movlw	0
 13286  0DAE  00AF               	movwf	___fldiv@a+1
 13287  0DAF  3000               	movlw	0
 13288  0DB0  00AE               	movwf	___fldiv@a
 13289  0DB1  318E  2686  318D   	fcall	___fldiv
 13290  0DB4  0140               	movlb	0	; select bank0
 13291  0DB5  0831               	movf	?___fldiv+3,w
 13292  0DB6  00CF               	movwf	___flmul@a+3
 13293  0DB7  0830               	movf	?___fldiv+2,w
 13294  0DB8  00CE               	movwf	___flmul@a+2
 13295  0DB9  082F               	movf	?___fldiv+1,w
 13296  0DBA  00CD               	movwf	___flmul@a+1
 13297  0DBB  082E               	movf	?___fldiv,w
 13298  0DBC  00CC               	movwf	___flmul@a
 13299  0DBD  3042               	movlw	66
 13300  0DBE  00CB               	movwf	___flmul@b+3
 13301  0DBF  30F0               	movlw	240
 13302  0DC0  00CA               	movwf	___flmul@b+2
 13303  0DC1  3000               	movlw	0
 13304  0DC2  00C9               	movwf	___flmul@b+1
 13305  0DC3  3000               	movlw	0
 13306  0DC4  00C8               	movwf	___flmul@b
 13307  0DC5  3185  256E  318D   	fcall	___flmul
 13308  0DC8  0140               	movlb	0	; select bank0
 13309  0DC9  084B               	movf	?___flmul+3,w
 13310  0DCA  00E5               	movwf	___fltol@f1+3
 13311  0DCB  084A               	movf	?___flmul+2,w
 13312  0DCC  00E4               	movwf	___fltol@f1+2
 13313  0DCD  0849               	movf	?___flmul+1,w
 13314  0DCE  00E3               	movwf	___fltol@f1+1
 13315  0DCF  0848               	movf	?___flmul,w
 13316  0DD0  00E2               	movwf	___fltol@f1
 13317  0DD1  3187  279A  318D   	fcall	___fltol
 13318  0DD4  0140               	movlb	0	; select bank0
 13319  0DD5  0863               	movf	?___fltol+1,w
 13320  0DD6  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13321  0DD7  0862               	movf	?___fltol,w
 13322  0DD8  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13323  0DD9  3191  2116  318D   	fcall	_PWM2_LoadDutyValue
 13324                           
 13325                           ;led.c: 26:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 120 );
 13326  0DDC  0141               	movlb	1	; select bank1
 13327  0DDD  0854               	movf	(LED_setColor@input^(0+128)+3),w
 13328  0DDE  00D5               	movwf	??_LED_setColor^(0+128)
 13329  0DDF  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13330  0DE0  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13331  0DE1  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13332  0DE2  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13333  0DE3  0140               	movlb	0	; select bank0
 13334  0DE4  00A3               	movwf	___xxtofl@val+3
 13335  0DE5  0141               	movlb	1	; select bank1
 13336  0DE6  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13337  0DE7  0140               	movlb	0	; select bank0
 13338  0DE8  00A2               	movwf	___xxtofl@val+2
 13339  0DE9  0141               	movlb	1	; select bank1
 13340  0DEA  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13341  0DEB  0140               	movlb	0	; select bank0
 13342  0DEC  00A1               	movwf	___xxtofl@val+1
 13343  0DED  0141               	movlb	1	; select bank1
 13344  0DEE  0855               	movf	??_LED_setColor^(0+128),w
 13345  0DEF  0140               	movlb	0	; select bank0
 13346  0DF0  00A0               	movwf	___xxtofl@val
 13347  0DF1  3001               	movlw	1
 13348  0DF2  3196  261F  318D   	fcall	___xxtofl
 13349  0DF5  0140               	movlb	0	; select bank0
 13350  0DF6  0823               	movf	?___xxtofl+3,w
 13351  0DF7  00B5               	movwf	___fldiv@b+3
 13352  0DF8  0822               	movf	?___xxtofl+2,w
 13353  0DF9  00B4               	movwf	___fldiv@b+2
 13354  0DFA  0821               	movf	?___xxtofl+1,w
 13355  0DFB  00B3               	movwf	___fldiv@b+1
 13356  0DFC  0820               	movf	?___xxtofl,w
 13357  0DFD  00B2               	movwf	___fldiv@b
 13358  0DFE  3043               	movlw	67
 13359  0DFF  00B1               	movwf	___fldiv@a+3
 13360  0E00  307F               	movlw	127
 13361  0E01  00B0               	movwf	___fldiv@a+2
 13362  0E02  3000               	movlw	0
 13363  0E03  00AF               	movwf	___fldiv@a+1
 13364  0E04  3000               	movlw	0
 13365  0E05  00AE               	movwf	___fldiv@a
 13366  0E06  318E  2686  318D   	fcall	___fldiv
 13367  0E09  0140               	movlb	0	; select bank0
 13368  0E0A  0831               	movf	?___fldiv+3,w
 13369  0E0B  00CF               	movwf	___flmul@a+3
 13370  0E0C  0830               	movf	?___fldiv+2,w
 13371  0E0D  00CE               	movwf	___flmul@a+2
 13372  0E0E  082F               	movf	?___fldiv+1,w
 13373  0E0F  00CD               	movwf	___flmul@a+1
 13374  0E10  082E               	movf	?___fldiv,w
 13375  0E11  00CC               	movwf	___flmul@a
 13376  0E12  3042               	movlw	66
 13377  0E13  00CB               	movwf	___flmul@b+3
 13378  0E14  30F0               	movlw	240
 13379  0E15  00CA               	movwf	___flmul@b+2
 13380  0E16  3000               	movlw	0
 13381  0E17  00C9               	movwf	___flmul@b+1
 13382  0E18  3000               	movlw	0
 13383  0E19  00C8               	movwf	___flmul@b
 13384  0E1A  3185  256E  318D   	fcall	___flmul
 13385  0E1D  0140               	movlb	0	; select bank0
 13386  0E1E  084B               	movf	?___flmul+3,w
 13387  0E1F  00E5               	movwf	___fltol@f1+3
 13388  0E20  084A               	movf	?___flmul+2,w
 13389  0E21  00E4               	movwf	___fltol@f1+2
 13390  0E22  0849               	movf	?___flmul+1,w
 13391  0E23  00E3               	movwf	___fltol@f1+1
 13392  0E24  0848               	movf	?___flmul,w
 13393  0E25  00E2               	movwf	___fltol@f1
 13394  0E26  3187  279A  318D   	fcall	___fltol
 13395  0E29  0140               	movlb	0	; select bank0
 13396  0E2A  0863               	movf	?___fltol+1,w
 13397  0E2B  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13398  0E2C  0862               	movf	?___fltol,w
 13399  0E2D  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 13400  0E2E  3191  2134  318D   	fcall	_PWM3_LoadDutyValue
 13401                           
 13402                           ;led.c: 27:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 120 );
 13403  0E31  0141               	movlb	1	; select bank1
 13404  0E32  0851               	movf	LED_setColor@input^(0+128),w
 13405  0E33  00D5               	movwf	??_LED_setColor^(0+128)
 13406  0E34  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13407  0E35  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13408  0E36  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13409  0E37  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13410  0E38  0140               	movlb	0	; select bank0
 13411  0E39  00A3               	movwf	___xxtofl@val+3
 13412  0E3A  0141               	movlb	1	; select bank1
 13413  0E3B  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13414  0E3C  0140               	movlb	0	; select bank0
 13415  0E3D  00A2               	movwf	___xxtofl@val+2
 13416  0E3E  0141               	movlb	1	; select bank1
 13417  0E3F  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13418  0E40  0140               	movlb	0	; select bank0
 13419  0E41  00A1               	movwf	___xxtofl@val+1
 13420  0E42  0141               	movlb	1	; select bank1
 13421  0E43  0855               	movf	??_LED_setColor^(0+128),w
 13422  0E44  0140               	movlb	0	; select bank0
 13423  0E45  00A0               	movwf	___xxtofl@val
 13424  0E46  3001               	movlw	1
 13425  0E47  3196  261F  318D   	fcall	___xxtofl
 13426  0E4A  0140               	movlb	0	; select bank0
 13427  0E4B  0823               	movf	?___xxtofl+3,w
 13428  0E4C  00B5               	movwf	___fldiv@b+3
 13429  0E4D  0822               	movf	?___xxtofl+2,w
 13430  0E4E  00B4               	movwf	___fldiv@b+2
 13431  0E4F  0821               	movf	?___xxtofl+1,w
 13432  0E50  00B3               	movwf	___fldiv@b+1
 13433  0E51  0820               	movf	?___xxtofl,w
 13434  0E52  00B2               	movwf	___fldiv@b
 13435  0E53  3043               	movlw	67
 13436  0E54  00B1               	movwf	___fldiv@a+3
 13437  0E55  307F               	movlw	127
 13438  0E56  00B0               	movwf	___fldiv@a+2
 13439  0E57  3000               	movlw	0
 13440  0E58  00AF               	movwf	___fldiv@a+1
 13441  0E59  3000               	movlw	0
 13442  0E5A  00AE               	movwf	___fldiv@a
 13443  0E5B  318E  2686  318D   	fcall	___fldiv
 13444  0E5E  0140               	movlb	0	; select bank0
 13445  0E5F  0831               	movf	?___fldiv+3,w
 13446  0E60  00CF               	movwf	___flmul@a+3
 13447  0E61  0830               	movf	?___fldiv+2,w
 13448  0E62  00CE               	movwf	___flmul@a+2
 13449  0E63  082F               	movf	?___fldiv+1,w
 13450  0E64  00CD               	movwf	___flmul@a+1
 13451  0E65  082E               	movf	?___fldiv,w
 13452  0E66  00CC               	movwf	___flmul@a
 13453  0E67  3042               	movlw	66
 13454  0E68  00CB               	movwf	___flmul@b+3
 13455  0E69  30F0               	movlw	240
 13456  0E6A  00CA               	movwf	___flmul@b+2
 13457  0E6B  3000               	movlw	0
 13458  0E6C  00C9               	movwf	___flmul@b+1
 13459  0E6D  3000               	movlw	0
 13460  0E6E  00C8               	movwf	___flmul@b
 13461  0E6F  3185  256E  318D   	fcall	___flmul
 13462  0E72  0140               	movlb	0	; select bank0
 13463  0E73  084B               	movf	?___flmul+3,w
 13464  0E74  00E5               	movwf	___fltol@f1+3
 13465  0E75  084A               	movf	?___flmul+2,w
 13466  0E76  00E4               	movwf	___fltol@f1+2
 13467  0E77  0849               	movf	?___flmul+1,w
 13468  0E78  00E3               	movwf	___fltol@f1+1
 13469  0E79  0848               	movf	?___flmul,w
 13470  0E7A  00E2               	movwf	___fltol@f1
 13471  0E7B  3187  279A  318D   	fcall	___fltol
 13472  0E7E  0140               	movlb	0	; select bank0
 13473  0E7F  0863               	movf	?___fltol+1,w
 13474  0E80  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13475  0E81  0862               	movf	?___fltol,w
 13476  0E82  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 13477  0E83  3191  2152         	fcall	_PWM4_LoadDutyValue
 13478  0E85  0008               	return
 13479  0E86                     __end_of_LED_setColor:	
 13480                           
 13481                           	psect	text22
 13482  1E82                     __ptext22:	
 13483 ;; *************** function _DMX_getAddress *****************
 13484 ;; Defined at:
 13485 ;;		line 73 in file "dmx.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;		None
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;		None
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      unsigned char 
 13492 ;; Registers used:
 13493 ;;		wreg
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 0/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13503 ;;Total ram usage:        0 bytes
 13504 ;; Hardware stack levels used:    1
 13505 ;; Hardware stack levels required when called:    4
 13506 ;; This function calls:
 13507 ;;		Nothing
 13508 ;; This function is called by:
 13509 ;;		_LED_task_DMX
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           
 13514                           ;psect for function _DMX_getAddress
 13515  1E82                     _DMX_getAddress:	
 13516                           
 13517                           ;dmx.c: 74:     return address;
 13518                           
 13519                           ;incstack = 0
 13520                           ; Regs used in _DMX_getAddress: [wreg]
 13521  1E82  0141               	movlb	1	; select bank1
 13522  1E83  086A               	movf	_address^(0+128),w
 13523  1E84  0008               	return
 13524  1E85                     __end_of_DMX_getAddress:	
 13525                           
 13526                           	psect	text23
 13527  0084                     __ptext23:	
 13528 ;; *************** function _LED_task_BEAT *****************
 13529 ;; Defined at:
 13530 ;;		line 62 in file "led.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;		None
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		wreg, status,2, status,0, pclath, cstack
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13546 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13547 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13548 ;;Total ram usage:        4 bytes
 13549 ;; Hardware stack levels used:    1
 13550 ;; Hardware stack levels required when called:    6
 13551 ;; This function calls:
 13552 ;;		_BEAT_detected
 13553 ;;		_CLOCK_getTime
 13554 ;;		_PWM1_LoadDutyValue
 13555 ;;		_PWM2_LoadDutyValue
 13556 ;;		_PWM3_LoadDutyValue
 13557 ;;		_PWM4_LoadDutyValue
 13558 ;;		___fldiv
 13559 ;;		___flmul
 13560 ;;		___fltol
 13561 ;;		___xxtofl
 13562 ;; This function is called by:
 13563 ;;		_LED_task
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           
 13568                           ;psect for function _LED_task_BEAT
 13569  0084                     _LED_task_BEAT:	
 13570                           
 13571                           ;led.c: 64:     if(CLOCK_getTime() - lastLedActiveTime < 100){
 13572                           
 13573                           ;incstack = 0
 13574                           ; Regs used in _LED_task_BEAT: [wreg+status,2+status,0+pclath+cstack]
 13575  0084  319E  26BA  3180   	fcall	_CLOCK_getTime
 13576  0087  0142               	movlb	2	; select bank2
 13577  0088  0834               	movf	_lastLedActiveTime^(0+256),w
 13578  0089  0140               	movlb	0	; select bank0
 13579  008A  0220               	subwf	?_CLOCK_getTime,w
 13580  008B  0141               	movlb	1	; select bank1
 13581  008C  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13582  008D  0142               	movlb	2	; select bank2
 13583  008E  0835               	movf	(_lastLedActiveTime+1)^(0+256),w
 13584  008F  0140               	movlb	0	; select bank0
 13585  0090  3B21               	subwfb	?_CLOCK_getTime+1,w
 13586  0091  0141               	movlb	1	; select bank1
 13587  0092  00D2               	movwf	(??_LED_task_BEAT+1)^(0+128)
 13588  0093  3000               	movlw	0
 13589  0094  0252               	subwf	(??_LED_task_BEAT+1)^(0+128),w
 13590  0095  3064               	movlw	100
 13591  0096  1903               	skipnz
 13592  0097  0251               	subwf	??_LED_task_BEAT^(0+128),w
 13593  0098  1C03               	btfss	3,0
 13594  0099  0008               	return
 13595                           
 13596                           ;led.c: 68:     lastLedActiveTime = CLOCK_getTime();
 13597  009A  319E  26BA  3180   	fcall	_CLOCK_getTime
 13598  009D  0140               	movlb	0	; select bank0
 13599  009E  0821               	movf	?_CLOCK_getTime+1,w
 13600  009F  0142               	movlb	2	; select bank2
 13601  00A0  00B5               	movwf	(_lastLedActiveTime+1)^(0+256)
 13602  00A1  0140               	movlb	0	; select bank0
 13603  00A2  0820               	movf	?_CLOCK_getTime,w
 13604  00A3  0142               	movlb	2	; select bank2
 13605  00A4  00B4               	movwf	_lastLedActiveTime^(0+256)
 13606                           
 13607                           ;led.c: 70:      if(!BEAT_detected()){
 13608  00A5  319E  26D5  3180   	fcall	_BEAT_detected
 13609  00A8  3A00               	xorlw	0
 13610  00A9  1D03               	skipz
 13611  00AA  28C7               	goto	l6503
 13612                           
 13613                           ;led.c: 71:         PWM1_LoadDutyValue(0);
 13614  00AB  3000               	movlw	0
 13615  00AC  0140               	movlb	0	; select bank0
 13616  00AD  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13617  00AE  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13618  00AF  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 13619                           
 13620                           ;led.c: 72:         PWM2_LoadDutyValue(0);
 13621  00B2  3000               	movlw	0
 13622  00B3  0140               	movlb	0	; select bank0
 13623  00B4  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13624  00B5  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13625  00B6  3191  2116  3180   	fcall	_PWM2_LoadDutyValue
 13626                           
 13627                           ;led.c: 73:         PWM3_LoadDutyValue(0);
 13628  00B9  3000               	movlw	0
 13629  00BA  0140               	movlb	0	; select bank0
 13630  00BB  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 13631  00BC  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13632  00BD  3191  2134  3180   	fcall	_PWM3_LoadDutyValue
 13633                           
 13634                           ;led.c: 74:         PWM4_LoadDutyValue(0);
 13635  00C0  3000               	movlw	0
 13636  00C1  0140               	movlb	0	; select bank0
 13637  00C2  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 13638  00C3  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13639  00C4  3191  2152         	fcall	_PWM4_LoadDutyValue
 13640                           
 13641                           ;led.c: 75:     } else if (currentState == 1){
 13642  00C6  0008               	return
 13643  00C7                     l6503:	
 13644  00C7  0370               	decf	_currentState,w
 13645  00C8  0471               	iorwf	_currentState+1,w
 13646  00C9  1D03               	btfss	3,2
 13647  00CA  2BF8               	goto	l6509
 13648                           
 13649                           ;led.c: 76:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13650  00CB  0141               	movlb	1	; select bank1
 13651  00CC  086F               	movf	_beatBrightness^(0+128),w
 13652  00CD  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13653  00CE  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13654  00CF  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13655  00D0  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13656  00D1  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13657  00D2  0140               	movlb	0	; select bank0
 13658  00D3  00A3               	movwf	___xxtofl@val+3
 13659  00D4  0141               	movlb	1	; select bank1
 13660  00D5  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13661  00D6  0140               	movlb	0	; select bank0
 13662  00D7  00A2               	movwf	___xxtofl@val+2
 13663  00D8  0141               	movlb	1	; select bank1
 13664  00D9  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13665  00DA  0140               	movlb	0	; select bank0
 13666  00DB  00A1               	movwf	___xxtofl@val+1
 13667  00DC  0141               	movlb	1	; select bank1
 13668  00DD  0851               	movf	??_LED_task_BEAT^(0+128),w
 13669  00DE  0140               	movlb	0	; select bank0
 13670  00DF  00A0               	movwf	___xxtofl@val
 13671  00E0  3001               	movlw	1
 13672  00E1  3196  261F  3180   	fcall	___xxtofl
 13673  00E4  0140               	movlb	0	; select bank0
 13674  00E5  0823               	movf	?___xxtofl+3,w
 13675  00E6  00B5               	movwf	___fldiv@b+3
 13676  00E7  0822               	movf	?___xxtofl+2,w
 13677  00E8  00B4               	movwf	___fldiv@b+2
 13678  00E9  0821               	movf	?___xxtofl+1,w
 13679  00EA  00B3               	movwf	___fldiv@b+1
 13680  00EB  0820               	movf	?___xxtofl,w
 13681  00EC  00B2               	movwf	___fldiv@b
 13682  00ED  3041               	movlw	65
 13683  00EE  00B1               	movwf	___fldiv@a+3
 13684  00EF  3010               	movlw	16
 13685  00F0  00B0               	movwf	___fldiv@a+2
 13686  00F1  3000               	movlw	0
 13687  00F2  00AF               	movwf	___fldiv@a+1
 13688  00F3  3000               	movlw	0
 13689  00F4  00AE               	movwf	___fldiv@a
 13690  00F5  318E  2686  3180   	fcall	___fldiv
 13691  00F8  0140               	movlb	0	; select bank0
 13692  00F9  0831               	movf	?___fldiv+3,w
 13693  00FA  00CF               	movwf	___flmul@a+3
 13694  00FB  0830               	movf	?___fldiv+2,w
 13695  00FC  00CE               	movwf	___flmul@a+2
 13696  00FD  082F               	movf	?___fldiv+1,w
 13697  00FE  00CD               	movwf	___flmul@a+1
 13698  00FF  082E               	movf	?___fldiv,w
 13699  0100  00CC               	movwf	___flmul@a
 13700  0101  3042               	movlw	66
 13701  0102  00CB               	movwf	___flmul@b+3
 13702  0103  30F0               	movlw	240
 13703  0104  00CA               	movwf	___flmul@b+2
 13704  0105  3000               	movlw	0
 13705  0106  00C9               	movwf	___flmul@b+1
 13706  0107  3000               	movlw	0
 13707  0108  00C8               	movwf	___flmul@b
 13708  0109  3185  256E  3180   	fcall	___flmul
 13709  010C  0140               	movlb	0	; select bank0
 13710  010D  084B               	movf	?___flmul+3,w
 13711  010E  00E5               	movwf	___fltol@f1+3
 13712  010F  084A               	movf	?___flmul+2,w
 13713  0110  00E4               	movwf	___fltol@f1+2
 13714  0111  0849               	movf	?___flmul+1,w
 13715  0112  00E3               	movwf	___fltol@f1+1
 13716  0113  0848               	movf	?___flmul,w
 13717  0114  00E2               	movwf	___fltol@f1
 13718  0115  3187  279A  3180   	fcall	___fltol
 13719  0118  0140               	movlb	0	; select bank0
 13720  0119  0863               	movf	?___fltol+1,w
 13721  011A  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13722  011B  0862               	movf	?___fltol,w
 13723  011C  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13724  011D  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 13725                           
 13726                           ;led.c: 77:         PWM2_LoadDutyValue(0);
 13727  0120  3000               	movlw	0
 13728  0121  0140               	movlb	0	; select bank0
 13729  0122  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13730  0123  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13731  0124  3191  2116  3180   	fcall	_PWM2_LoadDutyValue
 13732                           
 13733                           ;led.c: 78:         PWM3_LoadDutyValue(0);
 13734  0127  3000               	movlw	0
 13735  0128  0140               	movlb	0	; select bank0
 13736  0129  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 13737  012A  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13738  012B  2A8C               	goto	L10
 13739  012C                     l6511:	
 13740                           ;led.c: 79:         PWM4_LoadDutyValue(0);
 13741                           
 13742                           
 13743                           ;led.c: 82:         PWM1_LoadDutyValue(0);
 13744  012C  3000               	movlw	0
 13745  012D  0140               	movlb	0	; select bank0
 13746  012E  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13747  012F  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13748  0130  29E2               	goto	L7
 13749  0131                     l6517:	
 13750                           ;led.c: 85:         PWM4_LoadDutyValue(0);
 13751                           
 13752                           ;led.c: 84:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13753                           
 13754                           ;led.c: 83:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13755                           
 13756                           
 13757                           ;led.c: 88:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13758  0131  0141               	movlb	1	; select bank1
 13759  0132  086F               	movf	_beatBrightness^(0+128),w
 13760  0133  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13761  0134  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13762  0135  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13763  0136  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13764  0137  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13765  0138  0140               	movlb	0	; select bank0
 13766  0139  00A3               	movwf	___xxtofl@val+3
 13767  013A  0141               	movlb	1	; select bank1
 13768  013B  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13769  013C  0140               	movlb	0	; select bank0
 13770  013D  00A2               	movwf	___xxtofl@val+2
 13771  013E  0141               	movlb	1	; select bank1
 13772  013F  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13773  0140  0140               	movlb	0	; select bank0
 13774  0141  00A1               	movwf	___xxtofl@val+1
 13775  0142  0141               	movlb	1	; select bank1
 13776  0143  0851               	movf	??_LED_task_BEAT^(0+128),w
 13777  0144  0140               	movlb	0	; select bank0
 13778  0145  00A0               	movwf	___xxtofl@val
 13779  0146  3001               	movlw	1
 13780  0147  3196  261F  3180   	fcall	___xxtofl
 13781  014A  0140               	movlb	0	; select bank0
 13782  014B  0823               	movf	?___xxtofl+3,w
 13783  014C  00B5               	movwf	___fldiv@b+3
 13784  014D  0822               	movf	?___xxtofl+2,w
 13785  014E  00B4               	movwf	___fldiv@b+2
 13786  014F  0821               	movf	?___xxtofl+1,w
 13787  0150  00B3               	movwf	___fldiv@b+1
 13788  0151  0820               	movf	?___xxtofl,w
 13789  0152  00B2               	movwf	___fldiv@b
 13790  0153  3041               	movlw	65
 13791  0154  00B1               	movwf	___fldiv@a+3
 13792  0155  3010               	movlw	16
 13793  0156  00B0               	movwf	___fldiv@a+2
 13794  0157  3000               	movlw	0
 13795  0158  00AF               	movwf	___fldiv@a+1
 13796  0159  3000               	movlw	0
 13797  015A  00AE               	movwf	___fldiv@a
 13798  015B  318E  2686  3180   	fcall	___fldiv
 13799  015E  0140               	movlb	0	; select bank0
 13800  015F  0831               	movf	?___fldiv+3,w
 13801  0160  00CF               	movwf	___flmul@a+3
 13802  0161  0830               	movf	?___fldiv+2,w
 13803  0162  00CE               	movwf	___flmul@a+2
 13804  0163  082F               	movf	?___fldiv+1,w
 13805  0164  00CD               	movwf	___flmul@a+1
 13806  0165  082E               	movf	?___fldiv,w
 13807  0166  00CC               	movwf	___flmul@a
 13808  0167  3042               	movlw	66
 13809  0168  00CB               	movwf	___flmul@b+3
 13810  0169  30F0               	movlw	240
 13811  016A  00CA               	movwf	___flmul@b+2
 13812  016B  3000               	movlw	0
 13813  016C  00C9               	movwf	___flmul@b+1
 13814  016D  3000               	movlw	0
 13815  016E  00C8               	movwf	___flmul@b
 13816  016F  3185  256E  3180   	fcall	___flmul
 13817  0172  0140               	movlb	0	; select bank0
 13818  0173  084B               	movf	?___flmul+3,w
 13819  0174  00E5               	movwf	___fltol@f1+3
 13820  0175  084A               	movf	?___flmul+2,w
 13821  0176  00E4               	movwf	___fltol@f1+2
 13822  0177  0849               	movf	?___flmul+1,w
 13823  0178  00E3               	movwf	___fltol@f1+1
 13824  0179  0848               	movf	?___flmul,w
 13825  017A  00E2               	movwf	___fltol@f1
 13826  017B  3187  279A  3180   	fcall	___fltol
 13827  017E  0140               	movlb	0	; select bank0
 13828  017F  0863               	movf	?___fltol+1,w
 13829  0180  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13830  0181  0862               	movf	?___fltol,w
 13831  0182  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13832  0183  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 13833                           
 13834                           ;led.c: 89:         PWM2_LoadDutyValue(0);
 13835  0186  3000               	movlw	0
 13836  0187  0140               	movlb	0	; select bank0
 13837  0188  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13838  0189  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13839  018A  2A37               	goto	L8
 13840  018B                     l6523:	
 13841                           ;led.c: 91:         PWM4_LoadDutyValue(0);
 13842                           
 13843                           ;led.c: 90:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13844                           
 13845                           
 13846                           ;led.c: 94:         PWM1_LoadDutyValue(0);
 13847  018B  3000               	movlw	0
 13848  018C  0140               	movlb	0	; select bank0
 13849  018D  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13850  018E  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13851  018F  2AE6               	goto	L9
 13852  0190                     l6529:	
 13853                           ;led.c: 97:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13854                           
 13855                           ;led.c: 96:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13856                           
 13857                           ;led.c: 95:         PWM2_LoadDutyValue(0);
 13858                           
 13859                           
 13860                           ;led.c: 100:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13861  0190  0141               	movlb	1	; select bank1
 13862  0191  086F               	movf	_beatBrightness^(0+128),w
 13863  0192  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13864  0193  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13865  0194  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13866  0195  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13867  0196  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13868  0197  0140               	movlb	0	; select bank0
 13869  0198  00A3               	movwf	___xxtofl@val+3
 13870  0199  0141               	movlb	1	; select bank1
 13871  019A  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13872  019B  0140               	movlb	0	; select bank0
 13873  019C  00A2               	movwf	___xxtofl@val+2
 13874  019D  0141               	movlb	1	; select bank1
 13875  019E  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13876  019F  0140               	movlb	0	; select bank0
 13877  01A0  00A1               	movwf	___xxtofl@val+1
 13878  01A1  0141               	movlb	1	; select bank1
 13879  01A2  0851               	movf	??_LED_task_BEAT^(0+128),w
 13880  01A3  0140               	movlb	0	; select bank0
 13881  01A4  00A0               	movwf	___xxtofl@val
 13882  01A5  3001               	movlw	1
 13883  01A6  3196  261F  3180   	fcall	___xxtofl
 13884  01A9  0140               	movlb	0	; select bank0
 13885  01AA  0823               	movf	?___xxtofl+3,w
 13886  01AB  00B5               	movwf	___fldiv@b+3
 13887  01AC  0822               	movf	?___xxtofl+2,w
 13888  01AD  00B4               	movwf	___fldiv@b+2
 13889  01AE  0821               	movf	?___xxtofl+1,w
 13890  01AF  00B3               	movwf	___fldiv@b+1
 13891  01B0  0820               	movf	?___xxtofl,w
 13892  01B1  00B2               	movwf	___fldiv@b
 13893  01B2  3041               	movlw	65
 13894  01B3  00B1               	movwf	___fldiv@a+3
 13895  01B4  3010               	movlw	16
 13896  01B5  00B0               	movwf	___fldiv@a+2
 13897  01B6  3000               	movlw	0
 13898  01B7  00AF               	movwf	___fldiv@a+1
 13899  01B8  3000               	movlw	0
 13900  01B9  00AE               	movwf	___fldiv@a
 13901  01BA  318E  2686  3180   	fcall	___fldiv
 13902  01BD  0140               	movlb	0	; select bank0
 13903  01BE  0831               	movf	?___fldiv+3,w
 13904  01BF  00CF               	movwf	___flmul@a+3
 13905  01C0  0830               	movf	?___fldiv+2,w
 13906  01C1  00CE               	movwf	___flmul@a+2
 13907  01C2  082F               	movf	?___fldiv+1,w
 13908  01C3  00CD               	movwf	___flmul@a+1
 13909  01C4  082E               	movf	?___fldiv,w
 13910  01C5  00CC               	movwf	___flmul@a
 13911  01C6  3042               	movlw	66
 13912  01C7  00CB               	movwf	___flmul@b+3
 13913  01C8  30F0               	movlw	240
 13914  01C9  00CA               	movwf	___flmul@b+2
 13915  01CA  3000               	movlw	0
 13916  01CB  00C9               	movwf	___flmul@b+1
 13917  01CC  3000               	movlw	0
 13918  01CD  00C8               	movwf	___flmul@b
 13919  01CE  3185  256E  3180   	fcall	___flmul
 13920  01D1  0140               	movlb	0	; select bank0
 13921  01D2  084B               	movf	?___flmul+3,w
 13922  01D3  00E5               	movwf	___fltol@f1+3
 13923  01D4  084A               	movf	?___flmul+2,w
 13924  01D5  00E4               	movwf	___fltol@f1+2
 13925  01D6  0849               	movf	?___flmul+1,w
 13926  01D7  00E3               	movwf	___fltol@f1+1
 13927  01D8  0848               	movf	?___flmul,w
 13928  01D9  00E2               	movwf	___fltol@f1
 13929  01DA  3187  279A  3180   	fcall	___fltol
 13930  01DD  0140               	movlb	0	; select bank0
 13931  01DE  0863               	movf	?___fltol+1,w
 13932  01DF  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13933  01E0  0862               	movf	?___fltol,w
 13934  01E1  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13935  01E2                     L7:	
 13936  01E2  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 13937                           
 13938                           ;led.c: 101:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13939  01E5  0141               	movlb	1	; select bank1
 13940  01E6  086F               	movf	_beatBrightness^(0+128),w
 13941  01E7  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13942  01E8  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13943  01E9  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13944  01EA  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13945  01EB  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13946  01EC  0140               	movlb	0	; select bank0
 13947  01ED  00A3               	movwf	___xxtofl@val+3
 13948  01EE  0141               	movlb	1	; select bank1
 13949  01EF  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13950  01F0  0140               	movlb	0	; select bank0
 13951  01F1  00A2               	movwf	___xxtofl@val+2
 13952  01F2  0141               	movlb	1	; select bank1
 13953  01F3  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13954  01F4  0140               	movlb	0	; select bank0
 13955  01F5  00A1               	movwf	___xxtofl@val+1
 13956  01F6  0141               	movlb	1	; select bank1
 13957  01F7  0851               	movf	??_LED_task_BEAT^(0+128),w
 13958  01F8  0140               	movlb	0	; select bank0
 13959  01F9  00A0               	movwf	___xxtofl@val
 13960  01FA  3001               	movlw	1
 13961  01FB  3196  261F  3180   	fcall	___xxtofl
 13962  01FE  0140               	movlb	0	; select bank0
 13963  01FF  0823               	movf	?___xxtofl+3,w
 13964  0200  00B5               	movwf	___fldiv@b+3
 13965  0201  0822               	movf	?___xxtofl+2,w
 13966  0202  00B4               	movwf	___fldiv@b+2
 13967  0203  0821               	movf	?___xxtofl+1,w
 13968  0204  00B3               	movwf	___fldiv@b+1
 13969  0205  0820               	movf	?___xxtofl,w
 13970  0206  00B2               	movwf	___fldiv@b
 13971  0207  3041               	movlw	65
 13972  0208  00B1               	movwf	___fldiv@a+3
 13973  0209  3010               	movlw	16
 13974  020A  00B0               	movwf	___fldiv@a+2
 13975  020B  3000               	movlw	0
 13976  020C  00AF               	movwf	___fldiv@a+1
 13977  020D  3000               	movlw	0
 13978  020E  00AE               	movwf	___fldiv@a
 13979  020F  318E  2686  3180   	fcall	___fldiv
 13980  0212  0140               	movlb	0	; select bank0
 13981  0213  0831               	movf	?___fldiv+3,w
 13982  0214  00CF               	movwf	___flmul@a+3
 13983  0215  0830               	movf	?___fldiv+2,w
 13984  0216  00CE               	movwf	___flmul@a+2
 13985  0217  082F               	movf	?___fldiv+1,w
 13986  0218  00CD               	movwf	___flmul@a+1
 13987  0219  082E               	movf	?___fldiv,w
 13988  021A  00CC               	movwf	___flmul@a
 13989  021B  3042               	movlw	66
 13990  021C  00CB               	movwf	___flmul@b+3
 13991  021D  30F0               	movlw	240
 13992  021E  00CA               	movwf	___flmul@b+2
 13993  021F  3000               	movlw	0
 13994  0220  00C9               	movwf	___flmul@b+1
 13995  0221  3000               	movlw	0
 13996  0222  00C8               	movwf	___flmul@b
 13997  0223  3185  256E  3180   	fcall	___flmul
 13998  0226  0140               	movlb	0	; select bank0
 13999  0227  084B               	movf	?___flmul+3,w
 14000  0228  00E5               	movwf	___fltol@f1+3
 14001  0229  084A               	movf	?___flmul+2,w
 14002  022A  00E4               	movwf	___fltol@f1+2
 14003  022B  0849               	movf	?___flmul+1,w
 14004  022C  00E3               	movwf	___fltol@f1+1
 14005  022D  0848               	movf	?___flmul,w
 14006  022E  00E2               	movwf	___fltol@f1
 14007  022F  3187  279A  3180   	fcall	___fltol
 14008  0232  0140               	movlb	0	; select bank0
 14009  0233  0863               	movf	?___fltol+1,w
 14010  0234  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14011  0235  0862               	movf	?___fltol,w
 14012  0236  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14013  0237                     L8:	
 14014  0237  3191  2116  3180   	fcall	_PWM2_LoadDutyValue
 14015                           
 14016                           ;led.c: 102:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14017  023A  0141               	movlb	1	; select bank1
 14018  023B  086F               	movf	_beatBrightness^(0+128),w
 14019  023C  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14020  023D  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14021  023E  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14022  023F  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14023  0240  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14024  0241  0140               	movlb	0	; select bank0
 14025  0242  00A3               	movwf	___xxtofl@val+3
 14026  0243  0141               	movlb	1	; select bank1
 14027  0244  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14028  0245  0140               	movlb	0	; select bank0
 14029  0246  00A2               	movwf	___xxtofl@val+2
 14030  0247  0141               	movlb	1	; select bank1
 14031  0248  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14032  0249  0140               	movlb	0	; select bank0
 14033  024A  00A1               	movwf	___xxtofl@val+1
 14034  024B  0141               	movlb	1	; select bank1
 14035  024C  0851               	movf	??_LED_task_BEAT^(0+128),w
 14036  024D  0140               	movlb	0	; select bank0
 14037  024E  00A0               	movwf	___xxtofl@val
 14038  024F  3001               	movlw	1
 14039  0250  3196  261F  3180   	fcall	___xxtofl
 14040  0253  0140               	movlb	0	; select bank0
 14041  0254  0823               	movf	?___xxtofl+3,w
 14042  0255  00B5               	movwf	___fldiv@b+3
 14043  0256  0822               	movf	?___xxtofl+2,w
 14044  0257  00B4               	movwf	___fldiv@b+2
 14045  0258  0821               	movf	?___xxtofl+1,w
 14046  0259  00B3               	movwf	___fldiv@b+1
 14047  025A  0820               	movf	?___xxtofl,w
 14048  025B  00B2               	movwf	___fldiv@b
 14049  025C  3041               	movlw	65
 14050  025D  00B1               	movwf	___fldiv@a+3
 14051  025E  3010               	movlw	16
 14052  025F  00B0               	movwf	___fldiv@a+2
 14053  0260  3000               	movlw	0
 14054  0261  00AF               	movwf	___fldiv@a+1
 14055  0262  3000               	movlw	0
 14056  0263  00AE               	movwf	___fldiv@a
 14057  0264  318E  2686  3180   	fcall	___fldiv
 14058  0267  0140               	movlb	0	; select bank0
 14059  0268  0831               	movf	?___fldiv+3,w
 14060  0269  00CF               	movwf	___flmul@a+3
 14061  026A  0830               	movf	?___fldiv+2,w
 14062  026B  00CE               	movwf	___flmul@a+2
 14063  026C  082F               	movf	?___fldiv+1,w
 14064  026D  00CD               	movwf	___flmul@a+1
 14065  026E  082E               	movf	?___fldiv,w
 14066  026F  00CC               	movwf	___flmul@a
 14067  0270  3042               	movlw	66
 14068  0271  00CB               	movwf	___flmul@b+3
 14069  0272  30F0               	movlw	240
 14070  0273  00CA               	movwf	___flmul@b+2
 14071  0274  3000               	movlw	0
 14072  0275  00C9               	movwf	___flmul@b+1
 14073  0276  3000               	movlw	0
 14074  0277  00C8               	movwf	___flmul@b
 14075  0278  3185  256E  3180   	fcall	___flmul
 14076  027B  0140               	movlb	0	; select bank0
 14077  027C  084B               	movf	?___flmul+3,w
 14078  027D  00E5               	movwf	___fltol@f1+3
 14079  027E  084A               	movf	?___flmul+2,w
 14080  027F  00E4               	movwf	___fltol@f1+2
 14081  0280  0849               	movf	?___flmul+1,w
 14082  0281  00E3               	movwf	___fltol@f1+1
 14083  0282  0848               	movf	?___flmul,w
 14084  0283  00E2               	movwf	___fltol@f1
 14085  0284  3187  279A  3180   	fcall	___fltol
 14086  0287  0140               	movlb	0	; select bank0
 14087  0288  0863               	movf	?___fltol+1,w
 14088  0289  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 14089  028A  0862               	movf	?___fltol,w
 14090  028B  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 14091  028C                     L10:	
 14092  028C  3191  2134  3180   	fcall	_PWM3_LoadDutyValue
 14093                           
 14094                           ;led.c: 103:         PWM4_LoadDutyValue(0);
 14095  028F  3000               	movlw	0
 14096  0290  0140               	movlb	0	; select bank0
 14097  0291  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 14098  0292  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 14099  0293  2BF1               	goto	L1
 14100  0294                     l6535:	
 14101                           
 14102                           ;led.c: 106:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14103  0294  0141               	movlb	1	; select bank1
 14104  0295  086F               	movf	_beatBrightness^(0+128),w
 14105  0296  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14106  0297  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14107  0298  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14108  0299  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14109  029A  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14110  029B  0140               	movlb	0	; select bank0
 14111  029C  00A3               	movwf	___xxtofl@val+3
 14112  029D  0141               	movlb	1	; select bank1
 14113  029E  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14114  029F  0140               	movlb	0	; select bank0
 14115  02A0  00A2               	movwf	___xxtofl@val+2
 14116  02A1  0141               	movlb	1	; select bank1
 14117  02A2  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14118  02A3  0140               	movlb	0	; select bank0
 14119  02A4  00A1               	movwf	___xxtofl@val+1
 14120  02A5  0141               	movlb	1	; select bank1
 14121  02A6  0851               	movf	??_LED_task_BEAT^(0+128),w
 14122  02A7  0140               	movlb	0	; select bank0
 14123  02A8  00A0               	movwf	___xxtofl@val
 14124  02A9  3001               	movlw	1
 14125  02AA  3196  261F  3180   	fcall	___xxtofl
 14126  02AD  0140               	movlb	0	; select bank0
 14127  02AE  0823               	movf	?___xxtofl+3,w
 14128  02AF  00B5               	movwf	___fldiv@b+3
 14129  02B0  0822               	movf	?___xxtofl+2,w
 14130  02B1  00B4               	movwf	___fldiv@b+2
 14131  02B2  0821               	movf	?___xxtofl+1,w
 14132  02B3  00B3               	movwf	___fldiv@b+1
 14133  02B4  0820               	movf	?___xxtofl,w
 14134  02B5  00B2               	movwf	___fldiv@b
 14135  02B6  3041               	movlw	65
 14136  02B7  00B1               	movwf	___fldiv@a+3
 14137  02B8  3010               	movlw	16
 14138  02B9  00B0               	movwf	___fldiv@a+2
 14139  02BA  3000               	movlw	0
 14140  02BB  00AF               	movwf	___fldiv@a+1
 14141  02BC  3000               	movlw	0
 14142  02BD  00AE               	movwf	___fldiv@a
 14143  02BE  318E  2686  3180   	fcall	___fldiv
 14144  02C1  0140               	movlb	0	; select bank0
 14145  02C2  0831               	movf	?___fldiv+3,w
 14146  02C3  00CF               	movwf	___flmul@a+3
 14147  02C4  0830               	movf	?___fldiv+2,w
 14148  02C5  00CE               	movwf	___flmul@a+2
 14149  02C6  082F               	movf	?___fldiv+1,w
 14150  02C7  00CD               	movwf	___flmul@a+1
 14151  02C8  082E               	movf	?___fldiv,w
 14152  02C9  00CC               	movwf	___flmul@a
 14153  02CA  3042               	movlw	66
 14154  02CB  00CB               	movwf	___flmul@b+3
 14155  02CC  30F0               	movlw	240
 14156  02CD  00CA               	movwf	___flmul@b+2
 14157  02CE  3000               	movlw	0
 14158  02CF  00C9               	movwf	___flmul@b+1
 14159  02D0  3000               	movlw	0
 14160  02D1  00C8               	movwf	___flmul@b
 14161  02D2  3185  256E  3180   	fcall	___flmul
 14162  02D5  0140               	movlb	0	; select bank0
 14163  02D6  084B               	movf	?___flmul+3,w
 14164  02D7  00E5               	movwf	___fltol@f1+3
 14165  02D8  084A               	movf	?___flmul+2,w
 14166  02D9  00E4               	movwf	___fltol@f1+2
 14167  02DA  0849               	movf	?___flmul+1,w
 14168  02DB  00E3               	movwf	___fltol@f1+1
 14169  02DC  0848               	movf	?___flmul,w
 14170  02DD  00E2               	movwf	___fltol@f1
 14171  02DE  3187  279A  3180   	fcall	___fltol
 14172  02E1  0140               	movlb	0	; select bank0
 14173  02E2  0863               	movf	?___fltol+1,w
 14174  02E3  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 14175  02E4  0862               	movf	?___fltol,w
 14176  02E5  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 14177  02E6                     L9:	
 14178  02E6  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 14179                           
 14180                           ;led.c: 107:         PWM2_LoadDutyValue(0);
 14181  02E9  3000               	movlw	0
 14182  02EA  0140               	movlb	0	; select bank0
 14183  02EB  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14184  02EC  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14185  02ED  2B47               	goto	L5
 14186  02EE                     l6541:	
 14187                           ;led.c: 109:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14188                           
 14189                           ;led.c: 108:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14190                           
 14191                           
 14192                           ;led.c: 112:         PWM1_LoadDutyValue(0);
 14193  02EE  3000               	movlw	0
 14194  02EF  0140               	movlb	0	; select bank0
 14195  02F0  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 14196  02F1  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 14197  02F2  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 14198                           
 14199                           ;led.c: 113:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14200  02F5  0141               	movlb	1	; select bank1
 14201  02F6  086F               	movf	_beatBrightness^(0+128),w
 14202  02F7  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14203  02F8  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14204  02F9  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14205  02FA  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14206  02FB  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14207  02FC  0140               	movlb	0	; select bank0
 14208  02FD  00A3               	movwf	___xxtofl@val+3
 14209  02FE  0141               	movlb	1	; select bank1
 14210  02FF  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14211  0300  0140               	movlb	0	; select bank0
 14212  0301  00A2               	movwf	___xxtofl@val+2
 14213  0302  0141               	movlb	1	; select bank1
 14214  0303  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14215  0304  0140               	movlb	0	; select bank0
 14216  0305  00A1               	movwf	___xxtofl@val+1
 14217  0306  0141               	movlb	1	; select bank1
 14218  0307  0851               	movf	??_LED_task_BEAT^(0+128),w
 14219  0308  0140               	movlb	0	; select bank0
 14220  0309  00A0               	movwf	___xxtofl@val
 14221  030A  3001               	movlw	1
 14222  030B  3196  261F  3180   	fcall	___xxtofl
 14223  030E  0140               	movlb	0	; select bank0
 14224  030F  0823               	movf	?___xxtofl+3,w
 14225  0310  00B5               	movwf	___fldiv@b+3
 14226  0311  0822               	movf	?___xxtofl+2,w
 14227  0312  00B4               	movwf	___fldiv@b+2
 14228  0313  0821               	movf	?___xxtofl+1,w
 14229  0314  00B3               	movwf	___fldiv@b+1
 14230  0315  0820               	movf	?___xxtofl,w
 14231  0316  00B2               	movwf	___fldiv@b
 14232  0317  3041               	movlw	65
 14233  0318  00B1               	movwf	___fldiv@a+3
 14234  0319  3010               	movlw	16
 14235  031A  00B0               	movwf	___fldiv@a+2
 14236  031B  3000               	movlw	0
 14237  031C  00AF               	movwf	___fldiv@a+1
 14238  031D  3000               	movlw	0
 14239  031E  00AE               	movwf	___fldiv@a
 14240  031F  318E  2686  3180   	fcall	___fldiv
 14241  0322  0140               	movlb	0	; select bank0
 14242  0323  0831               	movf	?___fldiv+3,w
 14243  0324  00CF               	movwf	___flmul@a+3
 14244  0325  0830               	movf	?___fldiv+2,w
 14245  0326  00CE               	movwf	___flmul@a+2
 14246  0327  082F               	movf	?___fldiv+1,w
 14247  0328  00CD               	movwf	___flmul@a+1
 14248  0329  082E               	movf	?___fldiv,w
 14249  032A  00CC               	movwf	___flmul@a
 14250  032B  3042               	movlw	66
 14251  032C  00CB               	movwf	___flmul@b+3
 14252  032D  30F0               	movlw	240
 14253  032E  00CA               	movwf	___flmul@b+2
 14254  032F  3000               	movlw	0
 14255  0330  00C9               	movwf	___flmul@b+1
 14256  0331  3000               	movlw	0
 14257  0332  00C8               	movwf	___flmul@b
 14258  0333  3185  256E  3180   	fcall	___flmul
 14259  0336  0140               	movlb	0	; select bank0
 14260  0337  084B               	movf	?___flmul+3,w
 14261  0338  00E5               	movwf	___fltol@f1+3
 14262  0339  084A               	movf	?___flmul+2,w
 14263  033A  00E4               	movwf	___fltol@f1+2
 14264  033B  0849               	movf	?___flmul+1,w
 14265  033C  00E3               	movwf	___fltol@f1+1
 14266  033D  0848               	movf	?___flmul,w
 14267  033E  00E2               	movwf	___fltol@f1
 14268  033F  3187  279A  3180   	fcall	___fltol
 14269  0342  0140               	movlb	0	; select bank0
 14270  0343  0863               	movf	?___fltol+1,w
 14271  0344  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14272  0345  0862               	movf	?___fltol,w
 14273  0346  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14274  0347                     L5:	
 14275  0347  3191  2116  3180   	fcall	_PWM2_LoadDutyValue
 14276                           
 14277                           ;led.c: 114:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14278  034A  0141               	movlb	1	; select bank1
 14279  034B  086F               	movf	_beatBrightness^(0+128),w
 14280  034C  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14281  034D  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14282  034E  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14283  034F  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14284  0350  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14285  0351  0140               	movlb	0	; select bank0
 14286  0352  00A3               	movwf	___xxtofl@val+3
 14287  0353  0141               	movlb	1	; select bank1
 14288  0354  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14289  0355  0140               	movlb	0	; select bank0
 14290  0356  00A2               	movwf	___xxtofl@val+2
 14291  0357  0141               	movlb	1	; select bank1
 14292  0358  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14293  0359  0140               	movlb	0	; select bank0
 14294  035A  00A1               	movwf	___xxtofl@val+1
 14295  035B  0141               	movlb	1	; select bank1
 14296  035C  0851               	movf	??_LED_task_BEAT^(0+128),w
 14297  035D  0140               	movlb	0	; select bank0
 14298  035E  00A0               	movwf	___xxtofl@val
 14299  035F  3001               	movlw	1
 14300  0360  3196  261F  3180   	fcall	___xxtofl
 14301  0363  0140               	movlb	0	; select bank0
 14302  0364  0823               	movf	?___xxtofl+3,w
 14303  0365  00B5               	movwf	___fldiv@b+3
 14304  0366  0822               	movf	?___xxtofl+2,w
 14305  0367  00B4               	movwf	___fldiv@b+2
 14306  0368  0821               	movf	?___xxtofl+1,w
 14307  0369  00B3               	movwf	___fldiv@b+1
 14308  036A  0820               	movf	?___xxtofl,w
 14309  036B  00B2               	movwf	___fldiv@b
 14310  036C  3041               	movlw	65
 14311  036D  00B1               	movwf	___fldiv@a+3
 14312  036E  3010               	movlw	16
 14313  036F  00B0               	movwf	___fldiv@a+2
 14314  0370  3000               	movlw	0
 14315  0371  00AF               	movwf	___fldiv@a+1
 14316  0372  3000               	movlw	0
 14317  0373  00AE               	movwf	___fldiv@a
 14318  0374  318E  2686  3180   	fcall	___fldiv
 14319  0377  0140               	movlb	0	; select bank0
 14320  0378  0831               	movf	?___fldiv+3,w
 14321  0379  00CF               	movwf	___flmul@a+3
 14322  037A  0830               	movf	?___fldiv+2,w
 14323  037B  00CE               	movwf	___flmul@a+2
 14324  037C  082F               	movf	?___fldiv+1,w
 14325  037D  00CD               	movwf	___flmul@a+1
 14326  037E  082E               	movf	?___fldiv,w
 14327  037F  00CC               	movwf	___flmul@a
 14328  0380  3042               	movlw	66
 14329  0381  00CB               	movwf	___flmul@b+3
 14330  0382  30F0               	movlw	240
 14331  0383  00CA               	movwf	___flmul@b+2
 14332  0384  3000               	movlw	0
 14333  0385  00C9               	movwf	___flmul@b+1
 14334  0386  3000               	movlw	0
 14335  0387  00C8               	movwf	___flmul@b
 14336  0388  3185  256E  3180   	fcall	___flmul
 14337  038B  0140               	movlb	0	; select bank0
 14338  038C  084B               	movf	?___flmul+3,w
 14339  038D  00E5               	movwf	___fltol@f1+3
 14340  038E  084A               	movf	?___flmul+2,w
 14341  038F  00E4               	movwf	___fltol@f1+2
 14342  0390  0849               	movf	?___flmul+1,w
 14343  0391  00E3               	movwf	___fltol@f1+1
 14344  0392  0848               	movf	?___flmul,w
 14345  0393  00E2               	movwf	___fltol@f1
 14346  0394  3187  279A  3180   	fcall	___fltol
 14347  0397  0140               	movlb	0	; select bank0
 14348  0398  0863               	movf	?___fltol+1,w
 14349  0399  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 14350  039A  0862               	movf	?___fltol,w
 14351  039B  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 14352  039C  3191  2134  3180   	fcall	_PWM3_LoadDutyValue
 14353                           
 14354                           ;led.c: 115:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14355  039F  0141               	movlb	1	; select bank1
 14356  03A0  086F               	movf	_beatBrightness^(0+128),w
 14357  03A1  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14358  03A2  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14359  03A3  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14360  03A4  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14361  03A5  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14362  03A6  0140               	movlb	0	; select bank0
 14363  03A7  00A3               	movwf	___xxtofl@val+3
 14364  03A8  0141               	movlb	1	; select bank1
 14365  03A9  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14366  03AA  0140               	movlb	0	; select bank0
 14367  03AB  00A2               	movwf	___xxtofl@val+2
 14368  03AC  0141               	movlb	1	; select bank1
 14369  03AD  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14370  03AE  0140               	movlb	0	; select bank0
 14371  03AF  00A1               	movwf	___xxtofl@val+1
 14372  03B0  0141               	movlb	1	; select bank1
 14373  03B1  0851               	movf	??_LED_task_BEAT^(0+128),w
 14374  03B2  0140               	movlb	0	; select bank0
 14375  03B3  00A0               	movwf	___xxtofl@val
 14376  03B4  3001               	movlw	1
 14377  03B5  3196  261F  3180   	fcall	___xxtofl
 14378  03B8  0140               	movlb	0	; select bank0
 14379  03B9  0823               	movf	?___xxtofl+3,w
 14380  03BA  00B5               	movwf	___fldiv@b+3
 14381  03BB  0822               	movf	?___xxtofl+2,w
 14382  03BC  00B4               	movwf	___fldiv@b+2
 14383  03BD  0821               	movf	?___xxtofl+1,w
 14384  03BE  00B3               	movwf	___fldiv@b+1
 14385  03BF  0820               	movf	?___xxtofl,w
 14386  03C0  00B2               	movwf	___fldiv@b
 14387  03C1  3041               	movlw	65
 14388  03C2  00B1               	movwf	___fldiv@a+3
 14389  03C3  3010               	movlw	16
 14390  03C4  00B0               	movwf	___fldiv@a+2
 14391  03C5  3000               	movlw	0
 14392  03C6  00AF               	movwf	___fldiv@a+1
 14393  03C7  3000               	movlw	0
 14394  03C8  00AE               	movwf	___fldiv@a
 14395  03C9  318E  2686  3180   	fcall	___fldiv
 14396  03CC  0140               	movlb	0	; select bank0
 14397  03CD  0831               	movf	?___fldiv+3,w
 14398  03CE  00CF               	movwf	___flmul@a+3
 14399  03CF  0830               	movf	?___fldiv+2,w
 14400  03D0  00CE               	movwf	___flmul@a+2
 14401  03D1  082F               	movf	?___fldiv+1,w
 14402  03D2  00CD               	movwf	___flmul@a+1
 14403  03D3  082E               	movf	?___fldiv,w
 14404  03D4  00CC               	movwf	___flmul@a
 14405  03D5  3042               	movlw	66
 14406  03D6  00CB               	movwf	___flmul@b+3
 14407  03D7  30F0               	movlw	240
 14408  03D8  00CA               	movwf	___flmul@b+2
 14409  03D9  3000               	movlw	0
 14410  03DA  00C9               	movwf	___flmul@b+1
 14411  03DB  3000               	movlw	0
 14412  03DC  00C8               	movwf	___flmul@b
 14413  03DD  3185  256E  3180   	fcall	___flmul
 14414  03E0  0140               	movlb	0	; select bank0
 14415  03E1  084B               	movf	?___flmul+3,w
 14416  03E2  00E5               	movwf	___fltol@f1+3
 14417  03E3  084A               	movf	?___flmul+2,w
 14418  03E4  00E4               	movwf	___fltol@f1+2
 14419  03E5  0849               	movf	?___flmul+1,w
 14420  03E6  00E3               	movwf	___fltol@f1+1
 14421  03E7  0848               	movf	?___flmul,w
 14422  03E8  00E2               	movwf	___fltol@f1
 14423  03E9  3187  279A  3180   	fcall	___fltol
 14424  03EC  0140               	movlb	0	; select bank0
 14425  03ED  0863               	movf	?___fltol+1,w
 14426  03EE  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 14427  03EF  0862               	movf	?___fltol,w
 14428  03F0  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 14429  03F1                     L1:	
 14430  03F1  3191  2152         	fcall	_PWM4_LoadDutyValue
 14431                           
 14432                           ;led.c: 80:         currentState++;
 14433  03F3  3001               	movlw	1
 14434  03F4  07F0               	addwf	_currentState,f
 14435  03F5  3000               	movlw	0
 14436  03F6  3DF1               	addwfc	_currentState+1,f
 14437                           
 14438                           ;led.c: 81:     } else if(currentState == 2){
 14439  03F7  0008               	return
 14440  03F8                     l6509:	
 14441  03F8  3002               	movlw	2
 14442  03F9  0670               	xorwf	_currentState,w
 14443  03FA  0471               	iorwf	_currentState+1,w
 14444  03FB  1903               	btfsc	3,2
 14445  03FC  292C               	goto	l6511
 14446  03FD  3003               	movlw	3
 14447  03FE  0670               	xorwf	_currentState,w
 14448  03FF  0471               	iorwf	_currentState+1,w
 14449  0400  1903               	btfsc	3,2
 14450  0401  2931               	goto	l6517
 14451  0402  3004               	movlw	4
 14452  0403  0670               	xorwf	_currentState,w
 14453  0404  0471               	iorwf	_currentState+1,w
 14454  0405  1903               	btfsc	3,2
 14455  0406  298B               	goto	l6523
 14456  0407  3005               	movlw	5
 14457  0408  0670               	xorwf	_currentState,w
 14458  0409  0471               	iorwf	_currentState+1,w
 14459  040A  1903               	btfsc	3,2
 14460  040B  2990               	goto	l6529
 14461  040C  3006               	movlw	6
 14462  040D  0670               	xorwf	_currentState,w
 14463  040E  0471               	iorwf	_currentState+1,w
 14464  040F  1903               	btfsc	3,2
 14465  0410  2A94               	goto	l6535
 14466  0411  3008               	movlw	8
 14467  0412  0670               	xorwf	_currentState,w
 14468  0413  0471               	iorwf	_currentState+1,w
 14469  0414  1903               	btfsc	3,2
 14470  0415  2AEE               	goto	l6541
 14471                           
 14472                           ;led.c: 118:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14473  0416  0141               	movlb	1	; select bank1
 14474  0417  086F               	movf	_beatBrightness^(0+128),w
 14475  0418  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14476  0419  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14477  041A  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14478  041B  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14479  041C  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14480  041D  0140               	movlb	0	; select bank0
 14481  041E  00A3               	movwf	___xxtofl@val+3
 14482  041F  0141               	movlb	1	; select bank1
 14483  0420  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14484  0421  0140               	movlb	0	; select bank0
 14485  0422  00A2               	movwf	___xxtofl@val+2
 14486  0423  0141               	movlb	1	; select bank1
 14487  0424  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14488  0425  0140               	movlb	0	; select bank0
 14489  0426  00A1               	movwf	___xxtofl@val+1
 14490  0427  0141               	movlb	1	; select bank1
 14491  0428  0851               	movf	??_LED_task_BEAT^(0+128),w
 14492  0429  0140               	movlb	0	; select bank0
 14493  042A  00A0               	movwf	___xxtofl@val
 14494  042B  3001               	movlw	1
 14495  042C  3196  261F  3180   	fcall	___xxtofl
 14496  042F  0140               	movlb	0	; select bank0
 14497  0430  0823               	movf	?___xxtofl+3,w
 14498  0431  00B5               	movwf	___fldiv@b+3
 14499  0432  0822               	movf	?___xxtofl+2,w
 14500  0433  00B4               	movwf	___fldiv@b+2
 14501  0434  0821               	movf	?___xxtofl+1,w
 14502  0435  00B3               	movwf	___fldiv@b+1
 14503  0436  0820               	movf	?___xxtofl,w
 14504  0437  00B2               	movwf	___fldiv@b
 14505  0438  3041               	movlw	65
 14506  0439  00B1               	movwf	___fldiv@a+3
 14507  043A  3010               	movlw	16
 14508  043B  00B0               	movwf	___fldiv@a+2
 14509  043C  3000               	movlw	0
 14510  043D  00AF               	movwf	___fldiv@a+1
 14511  043E  3000               	movlw	0
 14512  043F  00AE               	movwf	___fldiv@a
 14513  0440  318E  2686  3180   	fcall	___fldiv
 14514  0443  0140               	movlb	0	; select bank0
 14515  0444  0831               	movf	?___fldiv+3,w
 14516  0445  00CF               	movwf	___flmul@a+3
 14517  0446  0830               	movf	?___fldiv+2,w
 14518  0447  00CE               	movwf	___flmul@a+2
 14519  0448  082F               	movf	?___fldiv+1,w
 14520  0449  00CD               	movwf	___flmul@a+1
 14521  044A  082E               	movf	?___fldiv,w
 14522  044B  00CC               	movwf	___flmul@a
 14523  044C  3042               	movlw	66
 14524  044D  00CB               	movwf	___flmul@b+3
 14525  044E  30F0               	movlw	240
 14526  044F  00CA               	movwf	___flmul@b+2
 14527  0450  3000               	movlw	0
 14528  0451  00C9               	movwf	___flmul@b+1
 14529  0452  3000               	movlw	0
 14530  0453  00C8               	movwf	___flmul@b
 14531  0454  3185  256E  3180   	fcall	___flmul
 14532  0457  0140               	movlb	0	; select bank0
 14533  0458  084B               	movf	?___flmul+3,w
 14534  0459  00E5               	movwf	___fltol@f1+3
 14535  045A  084A               	movf	?___flmul+2,w
 14536  045B  00E4               	movwf	___fltol@f1+2
 14537  045C  0849               	movf	?___flmul+1,w
 14538  045D  00E3               	movwf	___fltol@f1+1
 14539  045E  0848               	movf	?___flmul,w
 14540  045F  00E2               	movwf	___fltol@f1
 14541  0460  3187  279A  3180   	fcall	___fltol
 14542  0463  0140               	movlb	0	; select bank0
 14543  0464  0863               	movf	?___fltol+1,w
 14544  0465  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 14545  0466  0862               	movf	?___fltol,w
 14546  0467  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 14547  0468  3190  20F8  3180   	fcall	_PWM1_LoadDutyValue
 14548                           
 14549                           ;led.c: 119:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14550  046B  0141               	movlb	1	; select bank1
 14551  046C  086F               	movf	_beatBrightness^(0+128),w
 14552  046D  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14553  046E  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14554  046F  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14555  0470  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14556  0471  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14557  0472  0140               	movlb	0	; select bank0
 14558  0473  00A3               	movwf	___xxtofl@val+3
 14559  0474  0141               	movlb	1	; select bank1
 14560  0475  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14561  0476  0140               	movlb	0	; select bank0
 14562  0477  00A2               	movwf	___xxtofl@val+2
 14563  0478  0141               	movlb	1	; select bank1
 14564  0479  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14565  047A  0140               	movlb	0	; select bank0
 14566  047B  00A1               	movwf	___xxtofl@val+1
 14567  047C  0141               	movlb	1	; select bank1
 14568  047D  0851               	movf	??_LED_task_BEAT^(0+128),w
 14569  047E  0140               	movlb	0	; select bank0
 14570  047F  00A0               	movwf	___xxtofl@val
 14571  0480  3001               	movlw	1
 14572  0481  3196  261F  3180   	fcall	___xxtofl
 14573  0484  0140               	movlb	0	; select bank0
 14574  0485  0823               	movf	?___xxtofl+3,w
 14575  0486  00B5               	movwf	___fldiv@b+3
 14576  0487  0822               	movf	?___xxtofl+2,w
 14577  0488  00B4               	movwf	___fldiv@b+2
 14578  0489  0821               	movf	?___xxtofl+1,w
 14579  048A  00B3               	movwf	___fldiv@b+1
 14580  048B  0820               	movf	?___xxtofl,w
 14581  048C  00B2               	movwf	___fldiv@b
 14582  048D  3041               	movlw	65
 14583  048E  00B1               	movwf	___fldiv@a+3
 14584  048F  3010               	movlw	16
 14585  0490  00B0               	movwf	___fldiv@a+2
 14586  0491  3000               	movlw	0
 14587  0492  00AF               	movwf	___fldiv@a+1
 14588  0493  3000               	movlw	0
 14589  0494  00AE               	movwf	___fldiv@a
 14590  0495  318E  2686  3180   	fcall	___fldiv
 14591  0498  0140               	movlb	0	; select bank0
 14592  0499  0831               	movf	?___fldiv+3,w
 14593  049A  00CF               	movwf	___flmul@a+3
 14594  049B  0830               	movf	?___fldiv+2,w
 14595  049C  00CE               	movwf	___flmul@a+2
 14596  049D  082F               	movf	?___fldiv+1,w
 14597  049E  00CD               	movwf	___flmul@a+1
 14598  049F  082E               	movf	?___fldiv,w
 14599  04A0  00CC               	movwf	___flmul@a
 14600  04A1  3042               	movlw	66
 14601  04A2  00CB               	movwf	___flmul@b+3
 14602  04A3  30F0               	movlw	240
 14603  04A4  00CA               	movwf	___flmul@b+2
 14604  04A5  3000               	movlw	0
 14605  04A6  00C9               	movwf	___flmul@b+1
 14606  04A7  3000               	movlw	0
 14607  04A8  00C8               	movwf	___flmul@b
 14608  04A9  3185  256E  3180   	fcall	___flmul
 14609  04AC  0140               	movlb	0	; select bank0
 14610  04AD  084B               	movf	?___flmul+3,w
 14611  04AE  00E5               	movwf	___fltol@f1+3
 14612  04AF  084A               	movf	?___flmul+2,w
 14613  04B0  00E4               	movwf	___fltol@f1+2
 14614  04B1  0849               	movf	?___flmul+1,w
 14615  04B2  00E3               	movwf	___fltol@f1+1
 14616  04B3  0848               	movf	?___flmul,w
 14617  04B4  00E2               	movwf	___fltol@f1
 14618  04B5  3187  279A  3180   	fcall	___fltol
 14619  04B8  0140               	movlb	0	; select bank0
 14620  04B9  0863               	movf	?___fltol+1,w
 14621  04BA  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14622  04BB  0862               	movf	?___fltol,w
 14623  04BC  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14624  04BD  3191  2116  3180   	fcall	_PWM2_LoadDutyValue
 14625                           
 14626                           ;led.c: 120:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14627  04C0  0141               	movlb	1	; select bank1
 14628  04C1  086F               	movf	_beatBrightness^(0+128),w
 14629  04C2  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14630  04C3  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14631  04C4  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14632  04C5  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14633  04C6  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14634  04C7  0140               	movlb	0	; select bank0
 14635  04C8  00A3               	movwf	___xxtofl@val+3
 14636  04C9  0141               	movlb	1	; select bank1
 14637  04CA  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14638  04CB  0140               	movlb	0	; select bank0
 14639  04CC  00A2               	movwf	___xxtofl@val+2
 14640  04CD  0141               	movlb	1	; select bank1
 14641  04CE  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14642  04CF  0140               	movlb	0	; select bank0
 14643  04D0  00A1               	movwf	___xxtofl@val+1
 14644  04D1  0141               	movlb	1	; select bank1
 14645  04D2  0851               	movf	??_LED_task_BEAT^(0+128),w
 14646  04D3  0140               	movlb	0	; select bank0
 14647  04D4  00A0               	movwf	___xxtofl@val
 14648  04D5  3001               	movlw	1
 14649  04D6  3196  261F  3180   	fcall	___xxtofl
 14650  04D9  0140               	movlb	0	; select bank0
 14651  04DA  0823               	movf	?___xxtofl+3,w
 14652  04DB  00B5               	movwf	___fldiv@b+3
 14653  04DC  0822               	movf	?___xxtofl+2,w
 14654  04DD  00B4               	movwf	___fldiv@b+2
 14655  04DE  0821               	movf	?___xxtofl+1,w
 14656  04DF  00B3               	movwf	___fldiv@b+1
 14657  04E0  0820               	movf	?___xxtofl,w
 14658  04E1  00B2               	movwf	___fldiv@b
 14659  04E2  3041               	movlw	65
 14660  04E3  00B1               	movwf	___fldiv@a+3
 14661  04E4  3010               	movlw	16
 14662  04E5  00B0               	movwf	___fldiv@a+2
 14663  04E6  3000               	movlw	0
 14664  04E7  00AF               	movwf	___fldiv@a+1
 14665  04E8  3000               	movlw	0
 14666  04E9  00AE               	movwf	___fldiv@a
 14667  04EA  318E  2686  3180   	fcall	___fldiv
 14668  04ED  0140               	movlb	0	; select bank0
 14669  04EE  0831               	movf	?___fldiv+3,w
 14670  04EF  00CF               	movwf	___flmul@a+3
 14671  04F0  0830               	movf	?___fldiv+2,w
 14672  04F1  00CE               	movwf	___flmul@a+2
 14673  04F2  082F               	movf	?___fldiv+1,w
 14674  04F3  00CD               	movwf	___flmul@a+1
 14675  04F4  082E               	movf	?___fldiv,w
 14676  04F5  00CC               	movwf	___flmul@a
 14677  04F6  3042               	movlw	66
 14678  04F7  00CB               	movwf	___flmul@b+3
 14679  04F8  30F0               	movlw	240
 14680  04F9  00CA               	movwf	___flmul@b+2
 14681  04FA  3000               	movlw	0
 14682  04FB  00C9               	movwf	___flmul@b+1
 14683  04FC  3000               	movlw	0
 14684  04FD  00C8               	movwf	___flmul@b
 14685  04FE  3185  256E  3180   	fcall	___flmul
 14686  0501  0140               	movlb	0	; select bank0
 14687  0502  084B               	movf	?___flmul+3,w
 14688  0503  00E5               	movwf	___fltol@f1+3
 14689  0504  084A               	movf	?___flmul+2,w
 14690  0505  00E4               	movwf	___fltol@f1+2
 14691  0506  0849               	movf	?___flmul+1,w
 14692  0507  00E3               	movwf	___fltol@f1+1
 14693  0508  0848               	movf	?___flmul,w
 14694  0509  00E2               	movwf	___fltol@f1
 14695  050A  3187  279A  3180   	fcall	___fltol
 14696  050D  0140               	movlb	0	; select bank0
 14697  050E  0863               	movf	?___fltol+1,w
 14698  050F  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 14699  0510  0862               	movf	?___fltol,w
 14700  0511  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 14701  0512  3191  2134  3180   	fcall	_PWM3_LoadDutyValue
 14702                           
 14703                           ;led.c: 121:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14704  0515  0141               	movlb	1	; select bank1
 14705  0516  086F               	movf	_beatBrightness^(0+128),w
 14706  0517  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14707  0518  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14708  0519  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14709  051A  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14710  051B  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14711  051C  0140               	movlb	0	; select bank0
 14712  051D  00A3               	movwf	___xxtofl@val+3
 14713  051E  0141               	movlb	1	; select bank1
 14714  051F  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14715  0520  0140               	movlb	0	; select bank0
 14716  0521  00A2               	movwf	___xxtofl@val+2
 14717  0522  0141               	movlb	1	; select bank1
 14718  0523  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14719  0524  0140               	movlb	0	; select bank0
 14720  0525  00A1               	movwf	___xxtofl@val+1
 14721  0526  0141               	movlb	1	; select bank1
 14722  0527  0851               	movf	??_LED_task_BEAT^(0+128),w
 14723  0528  0140               	movlb	0	; select bank0
 14724  0529  00A0               	movwf	___xxtofl@val
 14725  052A  3001               	movlw	1
 14726  052B  3196  261F  3180   	fcall	___xxtofl
 14727  052E  0140               	movlb	0	; select bank0
 14728  052F  0823               	movf	?___xxtofl+3,w
 14729  0530  00B5               	movwf	___fldiv@b+3
 14730  0531  0822               	movf	?___xxtofl+2,w
 14731  0532  00B4               	movwf	___fldiv@b+2
 14732  0533  0821               	movf	?___xxtofl+1,w
 14733  0534  00B3               	movwf	___fldiv@b+1
 14734  0535  0820               	movf	?___xxtofl,w
 14735  0536  00B2               	movwf	___fldiv@b
 14736  0537  3041               	movlw	65
 14737  0538  00B1               	movwf	___fldiv@a+3
 14738  0539  3010               	movlw	16
 14739  053A  00B0               	movwf	___fldiv@a+2
 14740  053B  3000               	movlw	0
 14741  053C  00AF               	movwf	___fldiv@a+1
 14742  053D  3000               	movlw	0
 14743  053E  00AE               	movwf	___fldiv@a
 14744  053F  318E  2686  3180   	fcall	___fldiv
 14745  0542  0140               	movlb	0	; select bank0
 14746  0543  0831               	movf	?___fldiv+3,w
 14747  0544  00CF               	movwf	___flmul@a+3
 14748  0545  0830               	movf	?___fldiv+2,w
 14749  0546  00CE               	movwf	___flmul@a+2
 14750  0547  082F               	movf	?___fldiv+1,w
 14751  0548  00CD               	movwf	___flmul@a+1
 14752  0549  082E               	movf	?___fldiv,w
 14753  054A  00CC               	movwf	___flmul@a
 14754  054B  3042               	movlw	66
 14755  054C  00CB               	movwf	___flmul@b+3
 14756  054D  30F0               	movlw	240
 14757  054E  00CA               	movwf	___flmul@b+2
 14758  054F  3000               	movlw	0
 14759  0550  00C9               	movwf	___flmul@b+1
 14760  0551  3000               	movlw	0
 14761  0552  00C8               	movwf	___flmul@b
 14762  0553  3185  256E  3180   	fcall	___flmul
 14763  0556  0140               	movlb	0	; select bank0
 14764  0557  084B               	movf	?___flmul+3,w
 14765  0558  00E5               	movwf	___fltol@f1+3
 14766  0559  084A               	movf	?___flmul+2,w
 14767  055A  00E4               	movwf	___fltol@f1+2
 14768  055B  0849               	movf	?___flmul+1,w
 14769  055C  00E3               	movwf	___fltol@f1+1
 14770  055D  0848               	movf	?___flmul,w
 14771  055E  00E2               	movwf	___fltol@f1
 14772  055F  3187  279A  3180   	fcall	___fltol
 14773  0562  0140               	movlb	0	; select bank0
 14774  0563  0863               	movf	?___fltol+1,w
 14775  0564  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 14776  0565  0862               	movf	?___fltol,w
 14777  0566  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 14778  0567  3191  2152         	fcall	_PWM4_LoadDutyValue
 14779                           
 14780                           ;led.c: 122:         currentState = 1;
 14781  0569  3001               	movlw	1
 14782  056A  00F0               	movwf	_currentState
 14783  056B  3000               	movlw	0
 14784  056C  00F1               	movwf	_currentState+1
 14785  056D  0008               	return
 14786  056E                     __end_of_LED_task_BEAT:	
 14787                           
 14788                           	psect	text24
 14789  161F                     __ptext24:	
 14790 ;; *************** function ___xxtofl *****************
 14791 ;; Defined at:
 14792 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  sign            1    wreg     unsigned char 
 14795 ;;  val             4    0[BANK0 ] long 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;  sign            1    8[BANK0 ] unsigned char 
 14798 ;;  arg             4   10[BANK0 ] unsigned long 
 14799 ;;  exp             1    9[BANK0 ] unsigned char 
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  4    0[BANK0 ] unsigned char 
 14802 ;; Registers used:
 14803 ;;		wreg, status,2, status,0
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14810 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14811 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14812 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14813 ;;Total ram usage:       14 bytes
 14814 ;; Hardware stack levels used:    1
 14815 ;; Hardware stack levels required when called:    4
 14816 ;; This function calls:
 14817 ;;		Nothing
 14818 ;; This function is called by:
 14819 ;;		_LED_setColor
 14820 ;;		_LED_task_BEAT
 14821 ;; This function uses a non-reentrant model
 14822 ;;
 14823                           
 14824                           
 14825                           ;psect for function ___xxtofl
 14826  161F                     ___xxtofl:	
 14827                           
 14828                           ;incstack = 0
 14829                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14830                           ;___xxtofl@sign stored from wreg
 14831  161F  0140               	movlb	0	; select bank0
 14832  1620  00A8               	movwf	___xxtofl@sign
 14833  1621  0828               	movf	___xxtofl@sign,w
 14834  1622  1D03               	btfss	3,2
 14835  1623  1FA3               	btfss	___xxtofl@val+3,7
 14836  1624  2E35               	goto	l4635
 14837  1625  0920               	comf	___xxtofl@val,w
 14838  1626  00AA               	movwf	___xxtofl@arg
 14839  1627  0921               	comf	___xxtofl@val+1,w
 14840  1628  00AB               	movwf	___xxtofl@arg+1
 14841  1629  0922               	comf	___xxtofl@val+2,w
 14842  162A  00AC               	movwf	___xxtofl@arg+2
 14843  162B  0923               	comf	___xxtofl@val+3,w
 14844  162C  00AD               	movwf	___xxtofl@arg+3
 14845  162D  0AAA               	incf	___xxtofl@arg,f
 14846  162E  1903               	skipnz
 14847  162F  0AAB               	incf	___xxtofl@arg+1,f
 14848  1630  1903               	skipnz
 14849  1631  0AAC               	incf	___xxtofl@arg+2,f
 14850  1632  1903               	skipnz
 14851  1633  0AAD               	incf	___xxtofl@arg+3,f
 14852  1634  2E3D               	goto	l1933
 14853  1635                     l4635:	
 14854  1635  0823               	movf	___xxtofl@val+3,w
 14855  1636  00AD               	movwf	___xxtofl@arg+3
 14856  1637  0822               	movf	___xxtofl@val+2,w
 14857  1638  00AC               	movwf	___xxtofl@arg+2
 14858  1639  0821               	movf	___xxtofl@val+1,w
 14859  163A  00AB               	movwf	___xxtofl@arg+1
 14860  163B  0820               	movf	___xxtofl@val,w
 14861  163C  00AA               	movwf	___xxtofl@arg
 14862  163D                     l1933:	
 14863  163D  0823               	movf	___xxtofl@val+3,w
 14864  163E  0422               	iorwf	___xxtofl@val+2,w
 14865  163F  0421               	iorwf	___xxtofl@val+1,w
 14866  1640  0420               	iorwf	___xxtofl@val,w
 14867  1641  1D03               	skipz
 14868  1642  2E4C               	goto	l4641
 14869  1643  3000               	movlw	0
 14870  1644  00A3               	movwf	?___xxtofl+3
 14871  1645  3000               	movlw	0
 14872  1646  00A2               	movwf	?___xxtofl+2
 14873  1647  3000               	movlw	0
 14874  1648  00A1               	movwf	?___xxtofl+1
 14875  1649  3000               	movlw	0
 14876  164A  00A0               	movwf	?___xxtofl
 14877  164B  0008               	return
 14878  164C                     l4641:	
 14879  164C  3096               	movlw	150
 14880  164D  00A4               	movwf	??___xxtofl
 14881  164E  0824               	movf	??___xxtofl,w
 14882  164F  00A9               	movwf	___xxtofl@exp
 14883  1650                     l4645:	
 14884  1650  30FE               	movlw	254
 14885  1651  052D               	andwf	___xxtofl@arg+3,w
 14886  1652  1903               	btfsc	3,2
 14887  1653  2E73               	goto	l1939
 14888  1654  3001               	movlw	1
 14889  1655  00A4               	movwf	??___xxtofl
 14890  1656  0824               	movf	??___xxtofl,w
 14891  1657  07A9               	addwf	___xxtofl@exp,f
 14892  1658  3001               	movlw	1
 14893  1659                     u3765:	
 14894  1659  36AD               	lsrf	___xxtofl@arg+3,f
 14895  165A  0CAC               	rrf	___xxtofl@arg+2,f
 14896  165B  0CAB               	rrf	___xxtofl@arg+1,f
 14897  165C  0CAA               	rrf	___xxtofl@arg,f
 14898  165D  0B89               	decfsz	9,f
 14899  165E  2E59               	goto	u3765
 14900  165F  2E50               	goto	l4645
 14901  1660                     l4647:	
 14902  1660  3001               	movlw	1
 14903  1661  00A4               	movwf	??___xxtofl
 14904  1662  0824               	movf	??___xxtofl,w
 14905  1663  07A9               	addwf	___xxtofl@exp,f
 14906  1664  3001               	movlw	1
 14907  1665  07AA               	addwf	___xxtofl@arg,f
 14908  1666  3000               	movlw	0
 14909  1667  3DAB               	addwfc	___xxtofl@arg+1,f
 14910  1668  3000               	movlw	0
 14911  1669  3DAC               	addwfc	___xxtofl@arg+2,f
 14912  166A  3000               	movlw	0
 14913  166B  3DAD               	addwfc	___xxtofl@arg+3,f
 14914  166C  3001               	movlw	1
 14915  166D                     u3785:	
 14916  166D  36AD               	lsrf	___xxtofl@arg+3,f
 14917  166E  0CAC               	rrf	___xxtofl@arg+2,f
 14918  166F  0CAB               	rrf	___xxtofl@arg+1,f
 14919  1670  0CAA               	rrf	___xxtofl@arg,f
 14920  1671  0B89               	decfsz	9,f
 14921  1672  2E6D               	goto	u3785
 14922  1673                     l1939:	
 14923  1673  30FF               	movlw	255
 14924  1674  052D               	andwf	___xxtofl@arg+3,w
 14925  1675  1903               	btfsc	3,2
 14926  1676  2E85               	goto	l4655
 14927  1677  2E60               	goto	l4647
 14928  1678                     l4657:	
 14929  1678  3002               	movlw	2
 14930  1679  0229               	subwf	___xxtofl@exp,w
 14931  167A  1C03               	btfss	3,0
 14932  167B  2E87               	goto	l1946
 14933  167C  3001               	movlw	1
 14934  167D  02A9               	subwf	___xxtofl@exp,f
 14935  167E  3001               	movlw	1
 14936  167F                     u3805:	
 14937  167F  35AA               	lslf	___xxtofl@arg,f
 14938  1680  0DAB               	rlf	___xxtofl@arg+1,f
 14939  1681  0DAC               	rlf	___xxtofl@arg+2,f
 14940  1682  0DAD               	rlf	___xxtofl@arg+3,f
 14941  1683  0B89               	decfsz	9,f
 14942  1684  2E7F               	goto	u3805
 14943  1685                     l4655:	
 14944  1685  1FAC               	btfss	___xxtofl@arg+2,7
 14945  1686  2E78               	goto	l4657
 14946  1687                     l1946:	
 14947  1687  1829               	btfsc	___xxtofl@exp,0
 14948  1688  2E91               	goto	l1947
 14949  1689  30FF               	movlw	255
 14950  168A  05AA               	andwf	___xxtofl@arg,f
 14951  168B  30FF               	movlw	255
 14952  168C  05AB               	andwf	___xxtofl@arg+1,f
 14953  168D  307F               	movlw	127
 14954  168E  05AC               	andwf	___xxtofl@arg+2,f
 14955  168F  30FF               	movlw	255
 14956  1690  05AD               	andwf	___xxtofl@arg+3,f
 14957  1691                     l1947:	
 14958  1691  1003               	clrc
 14959  1692  0CA9               	rrf	___xxtofl@exp,f
 14960  1693  0829               	movf	___xxtofl@exp,w
 14961  1694  00A4               	movwf	??___xxtofl
 14962  1695  01A5               	clrf	??___xxtofl+1
 14963  1696  01A6               	clrf	??___xxtofl+2
 14964  1697  01A7               	clrf	??___xxtofl+3
 14965  1698  3018               	movlw	24
 14966  1699                     u3845:	
 14967  1699  35A4               	lslf	??___xxtofl,f
 14968  169A  0DA5               	rlf	??___xxtofl+1,f
 14969  169B  0DA6               	rlf	??___xxtofl+2,f
 14970  169C  0DA7               	rlf	??___xxtofl+3,f
 14971  169D  0B89               	decfsz	9,f
 14972  169E  2E99               	goto	u3845
 14973  169F  0824               	movf	??___xxtofl,w
 14974  16A0  04AA               	iorwf	___xxtofl@arg,f
 14975  16A1  0825               	movf	??___xxtofl+1,w
 14976  16A2  04AB               	iorwf	___xxtofl@arg+1,f
 14977  16A3  0826               	movf	??___xxtofl+2,w
 14978  16A4  04AC               	iorwf	___xxtofl@arg+2,f
 14979  16A5  0827               	movf	??___xxtofl+3,w
 14980  16A6  04AD               	iorwf	___xxtofl@arg+3,f
 14981  16A7  0828               	movf	___xxtofl@sign,w
 14982  16A8  1D03               	btfss	3,2
 14983  16A9  1FA3               	btfss	___xxtofl@val+3,7
 14984  16AA  2EAC               	goto	l4669
 14985  16AB  17AD               	bsf	___xxtofl@arg+3,7
 14986  16AC                     l4669:	
 14987  16AC  082D               	movf	___xxtofl@arg+3,w
 14988  16AD  00A3               	movwf	?___xxtofl+3
 14989  16AE  082C               	movf	___xxtofl@arg+2,w
 14990  16AF  00A2               	movwf	?___xxtofl+2
 14991  16B0  082B               	movf	___xxtofl@arg+1,w
 14992  16B1  00A1               	movwf	?___xxtofl+1
 14993  16B2  082A               	movf	___xxtofl@arg,w
 14994  16B3  00A0               	movwf	?___xxtofl
 14995  16B4  0008               	return
 14996  16B5                     __end_of___xxtofl:	
 14997                           
 14998                           	psect	text25
 14999  079A                     __ptext25:	
 15000 ;; *************** function ___fltol *****************
 15001 ;; Defined at:
 15002 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;  f1              4   66[BANK0 ] unsigned char 
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;  exp1            1   76[BANK0 ] unsigned char 
 15007 ;;  sign1           1   75[BANK0 ] unsigned char 
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  4   66[BANK0 ] long 
 15010 ;; Registers used:
 15011 ;;		wreg, status,2, status,0
 15012 ;; Tracked objects:
 15013 ;;		On entry : 0/0
 15014 ;;		On exit  : 0/0
 15015 ;;		Unchanged: 0/0
 15016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15019 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15020 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15021 ;;Total ram usage:       11 bytes
 15022 ;; Hardware stack levels used:    1
 15023 ;; Hardware stack levels required when called:    4
 15024 ;; This function calls:
 15025 ;;		Nothing
 15026 ;; This function is called by:
 15027 ;;		_LED_setColor
 15028 ;;		_LED_task_BEAT
 15029 ;; This function uses a non-reentrant model
 15030 ;;
 15031                           
 15032                           
 15033                           ;psect for function ___fltol
 15034  079A                     ___fltol:	
 15035                           
 15036                           ;incstack = 0
 15037                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15038  079A  1003               	clrc
 15039  079B  0140               	movlb	0	; select bank0
 15040  079C  0D64               	rlf	___fltol@f1+2,w
 15041  079D  0D65               	rlf	___fltol@f1+3,w
 15042  079E  00E6               	movwf	??___fltol
 15043  079F  0866               	movf	??___fltol,w
 15044  07A0  00EC               	movwf	___fltol@exp1
 15045  07A1  086C               	movf	___fltol@exp1,w
 15046  07A2  1D03               	btfss	3,2
 15047  07A3  2FAD               	goto	l4319
 15048  07A4                     l4315:	
 15049  07A4  3000               	movlw	0
 15050  07A5  00E5               	movwf	?___fltol+3
 15051  07A6  3000               	movlw	0
 15052  07A7  00E4               	movwf	?___fltol+2
 15053  07A8  3000               	movlw	0
 15054  07A9  00E3               	movwf	?___fltol+1
 15055  07AA  3000               	movlw	0
 15056  07AB  00E2               	movwf	?___fltol
 15057  07AC  0008               	return
 15058  07AD                     l4319:	
 15059  07AD  0862               	movf	___fltol@f1,w
 15060  07AE  00E6               	movwf	??___fltol
 15061  07AF  0863               	movf	___fltol@f1+1,w
 15062  07B0  00E7               	movwf	??___fltol+1
 15063  07B1  0864               	movf	___fltol@f1+2,w
 15064  07B2  00E8               	movwf	??___fltol+2
 15065  07B3  0865               	movf	___fltol@f1+3,w
 15066  07B4  00E9               	movwf	??___fltol+3
 15067  07B5  301F               	movlw	31
 15068  07B6                     u3095:	
 15069  07B6  36E9               	lsrf	??___fltol+3,f
 15070  07B7  0CE8               	rrf	??___fltol+2,f
 15071  07B8  0CE7               	rrf	??___fltol+1,f
 15072  07B9  0CE6               	rrf	??___fltol,f
 15073  07BA  0B89               	decfsz	9,f
 15074  07BB  2FB6               	goto	u3095
 15075  07BC  0866               	movf	??___fltol,w
 15076  07BD  00EA               	movwf	??___fltol+4
 15077  07BE  086A               	movf	??___fltol+4,w
 15078  07BF  00EB               	movwf	___fltol@sign1
 15079  07C0  17E4               	bsf	___fltol@f1+2,7
 15080  07C1  30FF               	movlw	255
 15081  07C2  05E2               	andwf	___fltol@f1,f
 15082  07C3  30FF               	movlw	255
 15083  07C4  05E3               	andwf	___fltol@f1+1,f
 15084  07C5  30FF               	movlw	255
 15085  07C6  05E4               	andwf	___fltol@f1+2,f
 15086  07C7  3000               	movlw	0
 15087  07C8  05E5               	andwf	___fltol@f1+3,f
 15088  07C9  3096               	movlw	150
 15089  07CA  02EC               	subwf	___fltol@exp1,f
 15090  07CB  1FEC               	btfss	___fltol@exp1,7
 15091  07CC  2FE0               	goto	l4337
 15092  07CD  086C               	movf	___fltol@exp1,w
 15093  07CE  3A80               	xorlw	128
 15094  07CF  3E97               	addlw	151
 15095  07D0  1C03               	btfss	3,0
 15096  07D1  2FA4               	goto	l4315
 15097  07D2                     l4335:	
 15098  07D2  3001               	movlw	1
 15099  07D3                     u3125:	
 15100  07D3  36E5               	lsrf	___fltol@f1+3,f
 15101  07D4  0CE4               	rrf	___fltol@f1+2,f
 15102  07D5  0CE3               	rrf	___fltol@f1+1,f
 15103  07D6  0CE2               	rrf	___fltol@f1,f
 15104  07D7  0B89               	decfsz	9,f
 15105  07D8  2FD3               	goto	u3125
 15106  07D9  3001               	movlw	1
 15107  07DA  00E6               	movwf	??___fltol
 15108  07DB  0866               	movf	??___fltol,w
 15109  07DC  07EC               	addwf	___fltol@exp1,f
 15110  07DD  1903               	btfsc	3,2
 15111  07DE  2FF1               	goto	l4345
 15112  07DF  2FD2               	goto	l4335
 15113  07E0                     l4337:	
 15114  07E0  3020               	movlw	32
 15115  07E1  026C               	subwf	___fltol@exp1,w
 15116  07E2  1803               	btfsc	3,0
 15117  07E3  2FA4               	goto	l4315
 15118  07E4                     l1699:	
 15119  07E4  086C               	movf	___fltol@exp1,w
 15120  07E5  1903               	btfsc	3,2
 15121  07E6  2FF1               	goto	l4345
 15122  07E7  3001               	movlw	1
 15123  07E8                     u3155:	
 15124  07E8  35E2               	lslf	___fltol@f1,f
 15125  07E9  0DE3               	rlf	___fltol@f1+1,f
 15126  07EA  0DE4               	rlf	___fltol@f1+2,f
 15127  07EB  0DE5               	rlf	___fltol@f1+3,f
 15128  07EC  0B89               	decfsz	9,f
 15129  07ED  2FE8               	goto	u3155
 15130  07EE  3001               	movlw	1
 15131  07EF  02EC               	subwf	___fltol@exp1,f
 15132  07F0  2FE4               	goto	l1699
 15133  07F1                     l4345:	
 15134  07F1  086B               	movf	___fltol@sign1,w
 15135  07F2  1903               	btfsc	3,2
 15136  07F3  0008               	return
 15137  07F4  09E2               	comf	___fltol@f1,f
 15138  07F5  09E3               	comf	___fltol@f1+1,f
 15139  07F6  09E4               	comf	___fltol@f1+2,f
 15140  07F7  09E5               	comf	___fltol@f1+3,f
 15141  07F8  0AE2               	incf	___fltol@f1,f
 15142  07F9  1903               	skipnz
 15143  07FA  0AE3               	incf	___fltol@f1+1,f
 15144  07FB  1903               	skipnz
 15145  07FC  0AE4               	incf	___fltol@f1+2,f
 15146  07FD  1903               	skipnz
 15147  07FE  0AE5               	incf	___fltol@f1+3,f
 15148  07FF  0008               	return
 15149  0800                     __end_of___fltol:	
 15150                           
 15151                           	psect	text26
 15152  056E                     __ptext26:	
 15153 ;; *************** function ___flmul *****************
 15154 ;; Defined at:
 15155 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;  b               4   40[BANK0 ] long 
 15158 ;;  a               4   44[BANK0 ] long 
 15159 ;; Auto vars:     Size  Location     Type
 15160 ;;  prod            4   60[BANK0 ] struct .
 15161 ;;  grs             4   54[BANK0 ] unsigned long 
 15162 ;;  temp            2   64[BANK0 ] struct .
 15163 ;;  bexp            1   59[BANK0 ] unsigned char 
 15164 ;;  aexp            1   58[BANK0 ] unsigned char 
 15165 ;;  sign            1   53[BANK0 ] unsigned char 
 15166 ;; Return value:  Size  Location     Type
 15167 ;;                  4   40[BANK0 ] unsigned char 
 15168 ;; Registers used:
 15169 ;;		wreg, status,2, status,0, pclath, cstack
 15170 ;; Tracked objects:
 15171 ;;		On entry : 0/0
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15176 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15177 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15178 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15179 ;;Total ram usage:       26 bytes
 15180 ;; Hardware stack levels used:    1
 15181 ;; Hardware stack levels required when called:    5
 15182 ;; This function calls:
 15183 ;;		__Umul8_16
 15184 ;; This function is called by:
 15185 ;;		_LED_setColor
 15186 ;;		_LED_task_BEAT
 15187 ;; This function uses a non-reentrant model
 15188 ;;
 15189                           
 15190                           
 15191                           ;psect for function ___flmul
 15192  056E                     ___flmul:	
 15193                           
 15194                           ;incstack = 0
 15195                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15196  056E  0140               	movlb	0	; select bank0
 15197  056F  084B               	movf	___flmul@b+3,w
 15198  0570  3980               	andlw	128
 15199  0571  00D0               	movwf	??___flmul
 15200  0572  0850               	movf	??___flmul,w
 15201  0573  00D5               	movwf	___flmul@sign
 15202  0574  354B               	lslf	___flmul@b+3,w
 15203  0575  00D0               	movwf	??___flmul
 15204  0576  0850               	movf	??___flmul,w
 15205  0577  00DB               	movwf	___flmul@bexp
 15206  0578  1BCA               	btfsc	___flmul@b+2,7
 15207  0579  145B               	bsf	___flmul@bexp,0
 15208  057A  085B               	movf	___flmul@bexp,w
 15209  057B  1903               	btfsc	3,2
 15210  057C  2D8A               	goto	l4505
 15211  057D  0A5B               	incf	___flmul@bexp,w
 15212  057E  1D03               	btfss	3,2
 15213  057F  2D88               	goto	l4503
 15214  0580  3000               	movlw	0
 15215  0581  00CB               	movwf	___flmul@b+3
 15216  0582  3000               	movlw	0
 15217  0583  00CA               	movwf	___flmul@b+2
 15218  0584  3000               	movlw	0
 15219  0585  00C9               	movwf	___flmul@b+1
 15220  0586  3000               	movlw	0
 15221  0587  00C8               	movwf	___flmul@b
 15222  0588                     l4503:	
 15223  0588  17CA               	bsf	___flmul@b+2,7
 15224  0589  2D92               	goto	l4507
 15225  058A                     l4505:	
 15226  058A  3000               	movlw	0
 15227  058B  00CB               	movwf	___flmul@b+3
 15228  058C  3000               	movlw	0
 15229  058D  00CA               	movwf	___flmul@b+2
 15230  058E  3000               	movlw	0
 15231  058F  00C9               	movwf	___flmul@b+1
 15232  0590  3000               	movlw	0
 15233  0591  00C8               	movwf	___flmul@b
 15234  0592                     l4507:	
 15235  0592  084F               	movf	___flmul@a+3,w
 15236  0593  3980               	andlw	128
 15237  0594  00D0               	movwf	??___flmul
 15238  0595  0850               	movf	??___flmul,w
 15239  0596  06D5               	xorwf	___flmul@sign,f
 15240  0597  354F               	lslf	___flmul@a+3,w
 15241  0598  00D0               	movwf	??___flmul
 15242  0599  0850               	movf	??___flmul,w
 15243  059A  00DA               	movwf	___flmul@aexp
 15244  059B  1BCE               	btfsc	___flmul@a+2,7
 15245  059C  145A               	bsf	___flmul@aexp,0
 15246  059D  085A               	movf	___flmul@aexp,w
 15247  059E  1903               	btfsc	3,2
 15248  059F  2DAD               	goto	l4523
 15249  05A0  0A5A               	incf	___flmul@aexp,w
 15250  05A1  1D03               	btfss	3,2
 15251  05A2  2DAB               	goto	l4521
 15252  05A3  3000               	movlw	0
 15253  05A4  00CF               	movwf	___flmul@a+3
 15254  05A5  3000               	movlw	0
 15255  05A6  00CE               	movwf	___flmul@a+2
 15256  05A7  3000               	movlw	0
 15257  05A8  00CD               	movwf	___flmul@a+1
 15258  05A9  3000               	movlw	0
 15259  05AA  00CC               	movwf	___flmul@a
 15260  05AB                     l4521:	
 15261  05AB  17CE               	bsf	___flmul@a+2,7
 15262  05AC  2DB5               	goto	l4525
 15263  05AD                     l4523:	
 15264  05AD  3000               	movlw	0
 15265  05AE  00CF               	movwf	___flmul@a+3
 15266  05AF  3000               	movlw	0
 15267  05B0  00CE               	movwf	___flmul@a+2
 15268  05B1  3000               	movlw	0
 15269  05B2  00CD               	movwf	___flmul@a+1
 15270  05B3  3000               	movlw	0
 15271  05B4  00CC               	movwf	___flmul@a
 15272  05B5                     l4525:	
 15273  05B5  085A               	movf	___flmul@aexp,w
 15274  05B6  1D03               	btfss	3,2
 15275  05B7  085B               	movf	___flmul@bexp,w
 15276  05B8  1D03               	btfss	3,2
 15277  05B9  2DC3               	goto	l4533
 15278  05BA  3000               	movlw	0
 15279  05BB  00CB               	movwf	?___flmul+3
 15280  05BC  3000               	movlw	0
 15281  05BD  00CA               	movwf	?___flmul+2
 15282  05BE  3000               	movlw	0
 15283  05BF  00C9               	movwf	?___flmul+1
 15284  05C0  3000               	movlw	0
 15285  05C1  00C8               	movwf	?___flmul
 15286  05C2  0008               	return
 15287  05C3                     l4533:	
 15288  05C3  0848               	movf	___flmul@b,w
 15289  05C4  00D0               	movwf	??___flmul
 15290  05C5  0850               	movf	??___flmul,w
 15291  05C6  00A0               	movwf	__Umul8_16@multiplicand
 15292  05C7  084E               	movf	___flmul@a+2,w
 15293  05C8  3191  2190  3185   	fcall	__Umul8_16
 15294  05CB  0140               	movlb	0	; select bank0
 15295  05CC  0821               	movf	?__Umul8_16+1,w
 15296  05CD  00E1               	movwf	___flmul@temp+1
 15297  05CE  0820               	movf	?__Umul8_16,w
 15298  05CF  00E0               	movwf	___flmul@temp
 15299  05D0  0860               	movf	___flmul@temp,w
 15300  05D1  00D0               	movwf	??___flmul
 15301  05D2  01D1               	clrf	??___flmul+1
 15302  05D3  01D2               	clrf	??___flmul+2
 15303  05D4  01D3               	clrf	??___flmul+3
 15304  05D5  0853               	movf	??___flmul+3,w
 15305  05D6  00D9               	movwf	___flmul@grs+3
 15306  05D7  0852               	movf	??___flmul+2,w
 15307  05D8  00D8               	movwf	___flmul@grs+2
 15308  05D9  0851               	movf	??___flmul+1,w
 15309  05DA  00D7               	movwf	___flmul@grs+1
 15310  05DB  0850               	movf	??___flmul,w
 15311  05DC  00D6               	movwf	___flmul@grs
 15312  05DD  0861               	movf	___flmul@temp+1,w
 15313  05DE  00D0               	movwf	??___flmul
 15314  05DF  01D1               	clrf	??___flmul+1
 15315  05E0  01D2               	clrf	??___flmul+2
 15316  05E1  01D3               	clrf	??___flmul+3
 15317  05E2  0853               	movf	??___flmul+3,w
 15318  05E3  00DF               	movwf	___flmul@prod+3
 15319  05E4  0852               	movf	??___flmul+2,w
 15320  05E5  00DE               	movwf	___flmul@prod+2
 15321  05E6  0851               	movf	??___flmul+1,w
 15322  05E7  00DD               	movwf	___flmul@prod+1
 15323  05E8  0850               	movf	??___flmul,w
 15324  05E9  00DC               	movwf	___flmul@prod
 15325  05EA  0849               	movf	___flmul@b+1,w
 15326  05EB  00D0               	movwf	??___flmul
 15327  05EC  0850               	movf	??___flmul,w
 15328  05ED  00A0               	movwf	__Umul8_16@multiplicand
 15329  05EE  084D               	movf	___flmul@a+1,w
 15330  05EF  3191  2190  3185   	fcall	__Umul8_16
 15331  05F2  0140               	movlb	0	; select bank0
 15332  05F3  0821               	movf	?__Umul8_16+1,w
 15333  05F4  00E1               	movwf	___flmul@temp+1
 15334  05F5  0820               	movf	?__Umul8_16,w
 15335  05F6  00E0               	movwf	___flmul@temp
 15336  05F7  0860               	movf	___flmul@temp,w
 15337  05F8  00D0               	movwf	??___flmul
 15338  05F9  01D1               	clrf	??___flmul+1
 15339  05FA  01D2               	clrf	??___flmul+2
 15340  05FB  01D3               	clrf	??___flmul+3
 15341  05FC  0850               	movf	??___flmul,w
 15342  05FD  07D6               	addwf	___flmul@grs,f
 15343  05FE  0851               	movf	??___flmul+1,w
 15344  05FF  3DD7               	addwfc	___flmul@grs+1,f
 15345  0600  0852               	movf	??___flmul+2,w
 15346  0601  3DD8               	addwfc	___flmul@grs+2,f
 15347  0602  0853               	movf	??___flmul+3,w
 15348  0603  3DD9               	addwfc	___flmul@grs+3,f
 15349  0604  0861               	movf	___flmul@temp+1,w
 15350  0605  00D0               	movwf	??___flmul
 15351  0606  01D1               	clrf	??___flmul+1
 15352  0607  01D2               	clrf	??___flmul+2
 15353  0608  01D3               	clrf	??___flmul+3
 15354  0609  0850               	movf	??___flmul,w
 15355  060A  07DC               	addwf	___flmul@prod,f
 15356  060B  0851               	movf	??___flmul+1,w
 15357  060C  3DDD               	addwfc	___flmul@prod+1,f
 15358  060D  0852               	movf	??___flmul+2,w
 15359  060E  3DDE               	addwfc	___flmul@prod+2,f
 15360  060F  0853               	movf	??___flmul+3,w
 15361  0610  3DDF               	addwfc	___flmul@prod+3,f
 15362  0611  084A               	movf	___flmul@b+2,w
 15363  0612  00D0               	movwf	??___flmul
 15364  0613  0850               	movf	??___flmul,w
 15365  0614  00A0               	movwf	__Umul8_16@multiplicand
 15366  0615  084C               	movf	___flmul@a,w
 15367  0616  3191  2190  3185   	fcall	__Umul8_16
 15368  0619  0140               	movlb	0	; select bank0
 15369  061A  0821               	movf	?__Umul8_16+1,w
 15370  061B  00E1               	movwf	___flmul@temp+1
 15371  061C  0820               	movf	?__Umul8_16,w
 15372  061D  00E0               	movwf	___flmul@temp
 15373  061E  0860               	movf	___flmul@temp,w
 15374  061F  00D0               	movwf	??___flmul
 15375  0620  01D1               	clrf	??___flmul+1
 15376  0621  01D2               	clrf	??___flmul+2
 15377  0622  01D3               	clrf	??___flmul+3
 15378  0623  0850               	movf	??___flmul,w
 15379  0624  07D6               	addwf	___flmul@grs,f
 15380  0625  0851               	movf	??___flmul+1,w
 15381  0626  3DD7               	addwfc	___flmul@grs+1,f
 15382  0627  0852               	movf	??___flmul+2,w
 15383  0628  3DD8               	addwfc	___flmul@grs+2,f
 15384  0629  0853               	movf	??___flmul+3,w
 15385  062A  3DD9               	addwfc	___flmul@grs+3,f
 15386  062B  0861               	movf	___flmul@temp+1,w
 15387  062C  00D0               	movwf	??___flmul
 15388  062D  01D1               	clrf	??___flmul+1
 15389  062E  01D2               	clrf	??___flmul+2
 15390  062F  01D3               	clrf	??___flmul+3
 15391  0630  0850               	movf	??___flmul,w
 15392  0631  07DC               	addwf	___flmul@prod,f
 15393  0632  0851               	movf	??___flmul+1,w
 15394  0633  3DDD               	addwfc	___flmul@prod+1,f
 15395  0634  0852               	movf	??___flmul+2,w
 15396  0635  3DDE               	addwfc	___flmul@prod+2,f
 15397  0636  0853               	movf	??___flmul+3,w
 15398  0637  3DDF               	addwfc	___flmul@prod+3,f
 15399  0638  3008               	movlw	8
 15400  0639                     u3555:	
 15401  0639  35D6               	lslf	___flmul@grs,f
 15402  063A  0DD7               	rlf	___flmul@grs+1,f
 15403  063B  0DD8               	rlf	___flmul@grs+2,f
 15404  063C  0DD9               	rlf	___flmul@grs+3,f
 15405  063D  0B89               	decfsz	9,f
 15406  063E  2E39               	goto	u3555
 15407  063F  0849               	movf	___flmul@b+1,w
 15408  0640  00D0               	movwf	??___flmul
 15409  0641  0850               	movf	??___flmul,w
 15410  0642  00A0               	movwf	__Umul8_16@multiplicand
 15411  0643  084C               	movf	___flmul@a,w
 15412  0644  3191  2190  3185   	fcall	__Umul8_16
 15413  0647  0140               	movlb	0	; select bank0
 15414  0648  0821               	movf	?__Umul8_16+1,w
 15415  0649  00E1               	movwf	___flmul@temp+1
 15416  064A  0820               	movf	?__Umul8_16,w
 15417  064B  00E0               	movwf	___flmul@temp
 15418  064C  0860               	movf	___flmul@temp,w
 15419  064D  07D6               	addwf	___flmul@grs,f
 15420  064E  0861               	movf	___flmul@temp+1,w
 15421  064F  3DD7               	addwfc	___flmul@grs+1,f
 15422  0650  3000               	movlw	0
 15423  0651  3DD8               	addwfc	___flmul@grs+2,f
 15424  0652  3DD9               	addwfc	___flmul@grs+3,f
 15425  0653  0848               	movf	___flmul@b,w
 15426  0654  00D0               	movwf	??___flmul
 15427  0655  0850               	movf	??___flmul,w
 15428  0656  00A0               	movwf	__Umul8_16@multiplicand
 15429  0657  084D               	movf	___flmul@a+1,w
 15430  0658  3191  2190  3185   	fcall	__Umul8_16
 15431  065B  0140               	movlb	0	; select bank0
 15432  065C  0821               	movf	?__Umul8_16+1,w
 15433  065D  00E1               	movwf	___flmul@temp+1
 15434  065E  0820               	movf	?__Umul8_16,w
 15435  065F  00E0               	movwf	___flmul@temp
 15436  0660  0860               	movf	___flmul@temp,w
 15437  0661  07D6               	addwf	___flmul@grs,f
 15438  0662  0861               	movf	___flmul@temp+1,w
 15439  0663  3DD7               	addwfc	___flmul@grs+1,f
 15440  0664  3000               	movlw	0
 15441  0665  3DD8               	addwfc	___flmul@grs+2,f
 15442  0666  3DD9               	addwfc	___flmul@grs+3,f
 15443  0667  3008               	movlw	8
 15444  0668                     u3565:	
 15445  0668  35D6               	lslf	___flmul@grs,f
 15446  0669  0DD7               	rlf	___flmul@grs+1,f
 15447  066A  0DD8               	rlf	___flmul@grs+2,f
 15448  066B  0DD9               	rlf	___flmul@grs+3,f
 15449  066C  0B89               	decfsz	9,f
 15450  066D  2E68               	goto	u3565
 15451  066E  0848               	movf	___flmul@b,w
 15452  066F  00D0               	movwf	??___flmul
 15453  0670  0850               	movf	??___flmul,w
 15454  0671  00A0               	movwf	__Umul8_16@multiplicand
 15455  0672  084C               	movf	___flmul@a,w
 15456  0673  3191  2190  3185   	fcall	__Umul8_16
 15457  0676  0140               	movlb	0	; select bank0
 15458  0677  0821               	movf	?__Umul8_16+1,w
 15459  0678  00E1               	movwf	___flmul@temp+1
 15460  0679  0820               	movf	?__Umul8_16,w
 15461  067A  00E0               	movwf	___flmul@temp
 15462  067B  0860               	movf	___flmul@temp,w
 15463  067C  07D6               	addwf	___flmul@grs,f
 15464  067D  0861               	movf	___flmul@temp+1,w
 15465  067E  3DD7               	addwfc	___flmul@grs+1,f
 15466  067F  3000               	movlw	0
 15467  0680  3DD8               	addwfc	___flmul@grs+2,f
 15468  0681  3DD9               	addwfc	___flmul@grs+3,f
 15469  0682  0849               	movf	___flmul@b+1,w
 15470  0683  00D0               	movwf	??___flmul
 15471  0684  0850               	movf	??___flmul,w
 15472  0685  00A0               	movwf	__Umul8_16@multiplicand
 15473  0686  084E               	movf	___flmul@a+2,w
 15474  0687  3191  2190  3185   	fcall	__Umul8_16
 15475  068A  0140               	movlb	0	; select bank0
 15476  068B  0821               	movf	?__Umul8_16+1,w
 15477  068C  00E1               	movwf	___flmul@temp+1
 15478  068D  0820               	movf	?__Umul8_16,w
 15479  068E  00E0               	movwf	___flmul@temp
 15480  068F  0860               	movf	___flmul@temp,w
 15481  0690  07DC               	addwf	___flmul@prod,f
 15482  0691  0861               	movf	___flmul@temp+1,w
 15483  0692  3DDD               	addwfc	___flmul@prod+1,f
 15484  0693  3000               	movlw	0
 15485  0694  3DDE               	addwfc	___flmul@prod+2,f
 15486  0695  3DDF               	addwfc	___flmul@prod+3,f
 15487  0696  084A               	movf	___flmul@b+2,w
 15488  0697  00D0               	movwf	??___flmul
 15489  0698  0850               	movf	??___flmul,w
 15490  0699  00A0               	movwf	__Umul8_16@multiplicand
 15491  069A  084D               	movf	___flmul@a+1,w
 15492  069B  3191  2190  3185   	fcall	__Umul8_16
 15493  069E  0140               	movlb	0	; select bank0
 15494  069F  0821               	movf	?__Umul8_16+1,w
 15495  06A0  00E1               	movwf	___flmul@temp+1
 15496  06A1  0820               	movf	?__Umul8_16,w
 15497  06A2  00E0               	movwf	___flmul@temp
 15498  06A3  0860               	movf	___flmul@temp,w
 15499  06A4  07DC               	addwf	___flmul@prod,f
 15500  06A5  0861               	movf	___flmul@temp+1,w
 15501  06A6  3DDD               	addwfc	___flmul@prod+1,f
 15502  06A7  3000               	movlw	0
 15503  06A8  3DDE               	addwfc	___flmul@prod+2,f
 15504  06A9  3DDF               	addwfc	___flmul@prod+3,f
 15505  06AA  084A               	movf	___flmul@b+2,w
 15506  06AB  00D0               	movwf	??___flmul
 15507  06AC  0850               	movf	??___flmul,w
 15508  06AD  00A0               	movwf	__Umul8_16@multiplicand
 15509  06AE  084E               	movf	___flmul@a+2,w
 15510  06AF  3191  2190  3185   	fcall	__Umul8_16
 15511  06B2  0140               	movlb	0	; select bank0
 15512  06B3  0821               	movf	?__Umul8_16+1,w
 15513  06B4  00E1               	movwf	___flmul@temp+1
 15514  06B5  0820               	movf	?__Umul8_16,w
 15515  06B6  00E0               	movwf	___flmul@temp
 15516  06B7  0860               	movf	___flmul@temp,w
 15517  06B8  00D0               	movwf	??___flmul
 15518  06B9  0861               	movf	___flmul@temp+1,w
 15519  06BA  00D1               	movwf	??___flmul+1
 15520  06BB  01D2               	clrf	??___flmul+2
 15521  06BC  01D3               	clrf	??___flmul+3
 15522  06BD  3008               	movlw	8
 15523  06BE                     u3575:	
 15524  06BE  35D0               	lslf	??___flmul,f
 15525  06BF  0DD1               	rlf	??___flmul+1,f
 15526  06C0  0DD2               	rlf	??___flmul+2,f
 15527  06C1  0DD3               	rlf	??___flmul+3,f
 15528  06C2  0B89               	decfsz	9,f
 15529  06C3  2EBE               	goto	u3575
 15530  06C4  0850               	movf	??___flmul,w
 15531  06C5  07DC               	addwf	___flmul@prod,f
 15532  06C6  0851               	movf	??___flmul+1,w
 15533  06C7  3DDD               	addwfc	___flmul@prod+1,f
 15534  06C8  0852               	movf	??___flmul+2,w
 15535  06C9  3DDE               	addwfc	___flmul@prod+2,f
 15536  06CA  0853               	movf	??___flmul+3,w
 15537  06CB  3DDF               	addwfc	___flmul@prod+3,f
 15538  06CC  0856               	movf	___flmul@grs,w
 15539  06CD  00D0               	movwf	??___flmul
 15540  06CE  0857               	movf	___flmul@grs+1,w
 15541  06CF  00D1               	movwf	??___flmul+1
 15542  06D0  0858               	movf	___flmul@grs+2,w
 15543  06D1  00D2               	movwf	??___flmul+2
 15544  06D2  0859               	movf	___flmul@grs+3,w
 15545  06D3  00D3               	movwf	??___flmul+3
 15546  06D4  3018               	movlw	24
 15547  06D5                     u3585:	
 15548  06D5  36D3               	lsrf	??___flmul+3,f
 15549  06D6  0CD2               	rrf	??___flmul+2,f
 15550  06D7  0CD1               	rrf	??___flmul+1,f
 15551  06D8  0CD0               	rrf	??___flmul,f
 15552  06D9  0B89               	decfsz	9,f
 15553  06DA  2ED5               	goto	u3585
 15554  06DB  0850               	movf	??___flmul,w
 15555  06DC  07DC               	addwf	___flmul@prod,f
 15556  06DD  0851               	movf	??___flmul+1,w
 15557  06DE  3DDD               	addwfc	___flmul@prod+1,f
 15558  06DF  0852               	movf	??___flmul+2,w
 15559  06E0  3DDE               	addwfc	___flmul@prod+2,f
 15560  06E1  0853               	movf	??___flmul+3,w
 15561  06E2  3DDF               	addwfc	___flmul@prod+3,f
 15562  06E3  3008               	movlw	8
 15563  06E4                     u3595:	
 15564  06E4  35D6               	lslf	___flmul@grs,f
 15565  06E5  0DD7               	rlf	___flmul@grs+1,f
 15566  06E6  0DD8               	rlf	___flmul@grs+2,f
 15567  06E7  0DD9               	rlf	___flmul@grs+3,f
 15568  06E8  0B89               	decfsz	9,f
 15569  06E9  2EE4               	goto	u3595
 15570  06EA  085B               	movf	___flmul@bexp,w
 15571  06EB  075A               	addwf	___flmul@aexp,w
 15572  06EC  00D0               	movwf	??___flmul
 15573  06ED  01D1               	clrf	??___flmul+1
 15574  06EE  0DD1               	rlf	??___flmul+1,f
 15575  06EF  0850               	movf	??___flmul,w
 15576  06F0  3E82               	addlw	130
 15577  06F1  00E0               	movwf	___flmul@temp
 15578  06F2  30FF               	movlw	255
 15579  06F3  3D51               	addwfc	??___flmul+1,w
 15580  06F4  00E1               	movwf	___flmul@temp+1
 15581  06F5                     l4585:	
 15582  06F5  1BDE               	btfsc	___flmul@prod+2,7
 15583  06F6  2F0C               	goto	l4587
 15584  06F7  3001               	movlw	1
 15585  06F8                     u3605:	
 15586  06F8  35DC               	lslf	___flmul@prod,f
 15587  06F9  0DDD               	rlf	___flmul@prod+1,f
 15588  06FA  0DDE               	rlf	___flmul@prod+2,f
 15589  06FB  0DDF               	rlf	___flmul@prod+3,f
 15590  06FC  0B89               	decfsz	9,f
 15591  06FD  2EF8               	goto	u3605
 15592  06FE  1BD9               	btfsc	___flmul@grs+3,7
 15593  06FF  145C               	bsf	___flmul@prod,0
 15594  0700  3001               	movlw	1
 15595  0701                     u3625:	
 15596  0701  35D6               	lslf	___flmul@grs,f
 15597  0702  0DD7               	rlf	___flmul@grs+1,f
 15598  0703  0DD8               	rlf	___flmul@grs+2,f
 15599  0704  0DD9               	rlf	___flmul@grs+3,f
 15600  0705  0B89               	decfsz	9,f
 15601  0706  2F01               	goto	u3625
 15602  0707  30FF               	movlw	255
 15603  0708  07E0               	addwf	___flmul@temp,f
 15604  0709  30FF               	movlw	255
 15605  070A  3DE1               	addwfc	___flmul@temp+1,f
 15606  070B  2EF5               	goto	l4585
 15607  070C                     l4587:	
 15608  070C  01DA               	clrf	___flmul@aexp
 15609  070D  1FD9               	btfss	___flmul@grs+3,7
 15610  070E  2F25               	goto	l4597
 15611  070F  30FF               	movlw	255
 15612  0710  0556               	andwf	___flmul@grs,w
 15613  0711  00D0               	movwf	??___flmul
 15614  0712  30FF               	movlw	255
 15615  0713  0557               	andwf	___flmul@grs+1,w
 15616  0714  00D1               	movwf	??___flmul+1
 15617  0715  30FF               	movlw	255
 15618  0716  0558               	andwf	___flmul@grs+2,w
 15619  0717  00D2               	movwf	??___flmul+2
 15620  0718  307F               	movlw	127
 15621  0719  0559               	andwf	___flmul@grs+3,w
 15622  071A  00D3               	movwf	??___flmul+3
 15623  071B  0853               	movf	??___flmul+3,w
 15624  071C  0452               	iorwf	??___flmul+2,w
 15625  071D  0451               	iorwf	??___flmul+1,w
 15626  071E  0450               	iorwf	??___flmul,w
 15627  071F  1903               	skipnz
 15628  0720  185C               	btfsc	___flmul@prod,0
 15629  0721  2F23               	goto	l4593
 15630  0722  2F25               	goto	l4597
 15631  0723                     l4593:	
 15632  0723  01DA               	clrf	___flmul@aexp
 15633  0724  0ADA               	incf	___flmul@aexp,f
 15634  0725                     l4597:	
 15635  0725  085A               	movf	___flmul@aexp,w
 15636  0726  1903               	btfsc	3,2
 15637  0727  2F4E               	goto	l4607
 15638  0728  3001               	movlw	1
 15639  0729  07DC               	addwf	___flmul@prod,f
 15640  072A  3000               	movlw	0
 15641  072B  3DDD               	addwfc	___flmul@prod+1,f
 15642  072C  3000               	movlw	0
 15643  072D  3DDE               	addwfc	___flmul@prod+2,f
 15644  072E  3000               	movlw	0
 15645  072F  3DDF               	addwfc	___flmul@prod+3,f
 15646  0730  1C5F               	btfss	___flmul@prod+3,0
 15647  0731  2F4E               	goto	l4607
 15648  0732  085C               	movf	___flmul@prod,w
 15649  0733  00D0               	movwf	??___flmul
 15650  0734  085D               	movf	___flmul@prod+1,w
 15651  0735  00D1               	movwf	??___flmul+1
 15652  0736  085E               	movf	___flmul@prod+2,w
 15653  0737  00D2               	movwf	??___flmul+2
 15654  0738  085F               	movf	___flmul@prod+3,w
 15655  0739  00D3               	movwf	??___flmul+3
 15656  073A  3001               	movlw	1
 15657  073B  00D4               	movwf	??___flmul+4
 15658  073C                     u3695:	
 15659  073C  37D3               	asrf	??___flmul+3,f
 15660  073D  0CD2               	rrf	??___flmul+2,f
 15661  073E  0CD1               	rrf	??___flmul+1,f
 15662  073F  0CD0               	rrf	??___flmul,f
 15663  0740  0BD4               	decfsz	??___flmul+4,f
 15664  0741  2F3C               	goto	u3695
 15665  0742  0853               	movf	??___flmul+3,w
 15666  0743  00DF               	movwf	___flmul@prod+3
 15667  0744  0852               	movf	??___flmul+2,w
 15668  0745  00DE               	movwf	___flmul@prod+2
 15669  0746  0851               	movf	??___flmul+1,w
 15670  0747  00DD               	movwf	___flmul@prod+1
 15671  0748  0850               	movf	??___flmul,w
 15672  0749  00DC               	movwf	___flmul@prod
 15673  074A  3001               	movlw	1
 15674  074B  07E0               	addwf	___flmul@temp,f
 15675  074C  3000               	movlw	0
 15676  074D  3DE1               	addwfc	___flmul@temp+1,f
 15677  074E                     l4607:	
 15678  074E  0861               	movf	___flmul@temp+1,w
 15679  074F  3A80               	xorlw	128
 15680  0750  00D0               	movwf	??___flmul
 15681  0751  3080               	movlw	128
 15682  0752  0250               	subwf	??___flmul,w
 15683  0753  1D03               	skipz
 15684  0754  2F57               	goto	u3705
 15685  0755  30FF               	movlw	255
 15686  0756  0260               	subwf	___flmul@temp,w
 15687  0757                     u3705:	
 15688  0757  1C03               	skipc
 15689  0758  2F63               	goto	l4611
 15690  0759  307F               	movlw	127
 15691  075A  0140               	movlb	0	; select bank0
 15692  075B  00DF               	movwf	___flmul@prod+3
 15693  075C  3080               	movlw	128
 15694  075D  00DE               	movwf	___flmul@prod+2
 15695  075E  3000               	movlw	0
 15696  075F  00DD               	movwf	___flmul@prod+1
 15697  0760  3000               	movlw	0
 15698  0761  00DC               	movwf	___flmul@prod
 15699  0762  2F8D               	goto	l1907
 15700  0763                     l4611:	
 15701  0763  0140               	movlb	0	; select bank0
 15702  0764  0861               	movf	___flmul@temp+1,w
 15703  0765  3A80               	xorlw	128
 15704  0766  00D0               	movwf	??___flmul
 15705  0767  3080               	movlw	128
 15706  0768  0250               	subwf	??___flmul,w
 15707  0769  1D03               	skipz
 15708  076A  2F6D               	goto	u3715
 15709  076B  3001               	movlw	1
 15710  076C  0260               	subwf	___flmul@temp,w
 15711  076D                     u3715:	
 15712  076D  1803               	skipnc
 15713  076E  2F7A               	goto	l4617
 15714  076F  3000               	movlw	0
 15715  0770  0140               	movlb	0	; select bank0
 15716  0771  00DF               	movwf	___flmul@prod+3
 15717  0772  3000               	movlw	0
 15718  0773  00DE               	movwf	___flmul@prod+2
 15719  0774  3000               	movlw	0
 15720  0775  00DD               	movwf	___flmul@prod+1
 15721  0776  3000               	movlw	0
 15722  0777  00DC               	movwf	___flmul@prod
 15723  0778  01D5               	clrf	___flmul@sign
 15724  0779  2F8D               	goto	l1907
 15725  077A                     l4617:	
 15726  077A  0140               	movlb	0	; select bank0
 15727  077B  0860               	movf	___flmul@temp,w
 15728  077C  00D0               	movwf	??___flmul
 15729  077D  0850               	movf	??___flmul,w
 15730  077E  00DB               	movwf	___flmul@bexp
 15731  077F  30FF               	movlw	255
 15732  0780  05DC               	andwf	___flmul@prod,f
 15733  0781  30FF               	movlw	255
 15734  0782  05DD               	andwf	___flmul@prod+1,f
 15735  0783  307F               	movlw	127
 15736  0784  05DE               	andwf	___flmul@prod+2,f
 15737  0785  3000               	movlw	0
 15738  0786  05DF               	andwf	___flmul@prod+3,f
 15739  0787  185B               	btfsc	___flmul@bexp,0
 15740  0788  17DE               	bsf	___flmul@prod+2,7
 15741  0789  365B               	lsrf	___flmul@bexp,w
 15742  078A  00D0               	movwf	??___flmul
 15743  078B  0850               	movf	??___flmul,w
 15744  078C  00DF               	movwf	___flmul@prod+3
 15745  078D                     l1907:	
 15746  078D  0855               	movf	___flmul@sign,w
 15747  078E  00D0               	movwf	??___flmul
 15748  078F  0850               	movf	??___flmul,w
 15749  0790  04DF               	iorwf	___flmul@prod+3,f
 15750  0791  085F               	movf	___flmul@prod+3,w
 15751  0792  00CB               	movwf	?___flmul+3
 15752  0793  085E               	movf	___flmul@prod+2,w
 15753  0794  00CA               	movwf	?___flmul+2
 15754  0795  085D               	movf	___flmul@prod+1,w
 15755  0796  00C9               	movwf	?___flmul+1
 15756  0797  085C               	movf	___flmul@prod,w
 15757  0798  00C8               	movwf	?___flmul
 15758  0799  0008               	return
 15759  079A                     __end_of___flmul:	
 15760                           
 15761                           	psect	text27
 15762  1190                     __ptext27:	
 15763 ;; *************** function __Umul8_16 *****************
 15764 ;; Defined at:
 15765 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15766 ;; Parameters:    Size  Location     Type
 15767 ;;  multiplier      1    wreg     unsigned char 
 15768 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15769 ;; Auto vars:     Size  Location     Type
 15770 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15771 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15772 ;;  product         2    4[BANK0 ] unsigned int 
 15773 ;; Return value:  Size  Location     Type
 15774 ;;                  2    0[BANK0 ] unsigned int 
 15775 ;; Registers used:
 15776 ;;		wreg, status,2, status,0
 15777 ;; Tracked objects:
 15778 ;;		On entry : 0/0
 15779 ;;		On exit  : 0/0
 15780 ;;		Unchanged: 0/0
 15781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15783 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15785 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15786 ;;Total ram usage:        9 bytes
 15787 ;; Hardware stack levels used:    1
 15788 ;; Hardware stack levels required when called:    4
 15789 ;; This function calls:
 15790 ;;		Nothing
 15791 ;; This function is called by:
 15792 ;;		___flmul
 15793 ;; This function uses a non-reentrant model
 15794 ;;
 15795                           
 15796                           
 15797                           ;psect for function __Umul8_16
 15798  1190                     __Umul8_16:	
 15799                           
 15800                           ;incstack = 0
 15801                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15802                           ;__Umul8_16@multiplier stored from wreg
 15803  1190  0140               	movlb	0	; select bank0
 15804  1191  00A8               	movwf	__Umul8_16@multiplier
 15805  1192  01A4               	clrf	__Umul8_16@product
 15806  1193  01A5               	clrf	__Umul8_16@product+1
 15807  1194  0820               	movf	__Umul8_16@multiplicand,w
 15808  1195  00A2               	movwf	??__Umul8_16
 15809  1196  01A3               	clrf	??__Umul8_16+1
 15810  1197  0822               	movf	??__Umul8_16,w
 15811  1198  00A6               	movwf	__Umul8_16@word_mpld
 15812  1199  0823               	movf	??__Umul8_16+1,w
 15813  119A  00A7               	movwf	__Umul8_16@word_mpld+1
 15814  119B                     l4219:	
 15815  119B  1C28               	btfss	__Umul8_16@multiplier,0
 15816  119C  29A1               	goto	l1985
 15817  119D  0826               	movf	__Umul8_16@word_mpld,w
 15818  119E  07A4               	addwf	__Umul8_16@product,f
 15819  119F  0827               	movf	__Umul8_16@word_mpld+1,w
 15820  11A0  3DA5               	addwfc	__Umul8_16@product+1,f
 15821  11A1                     l1985:	
 15822  11A1  3001               	movlw	1
 15823  11A2                     u2925:	
 15824  11A2  35A6               	lslf	__Umul8_16@word_mpld,f
 15825  11A3  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15826  11A4  0B89               	decfsz	9,f
 15827  11A5  29A2               	goto	u2925
 15828  11A6  1003               	clrc
 15829  11A7  0CA8               	rrf	__Umul8_16@multiplier,f
 15830  11A8  0828               	movf	__Umul8_16@multiplier,w
 15831  11A9  1D03               	btfss	3,2
 15832  11AA  299B               	goto	l4219
 15833  11AB  0825               	movf	__Umul8_16@product+1,w
 15834  11AC  00A1               	movwf	?__Umul8_16+1
 15835  11AD  0824               	movf	__Umul8_16@product,w
 15836  11AE  00A0               	movwf	?__Umul8_16
 15837  11AF  0008               	return
 15838  11B0                     __end_of__Umul8_16:	
 15839                           
 15840                           	psect	text28
 15841  0E86                     __ptext28:	
 15842 ;; *************** function ___fldiv *****************
 15843 ;; Defined at:
 15844 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  a               4   14[BANK0 ] unsigned int 
 15847 ;;  b               4   18[BANK0 ] unsigned int 
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;  grs             4   34[BANK0 ] unsigned long 
 15850 ;;  rem             4   27[BANK0 ] unsigned long 
 15851 ;;  new_exp         2   32[BANK0 ] int 
 15852 ;;  aexp            1   39[BANK0 ] unsigned char 
 15853 ;;  bexp            1   38[BANK0 ] unsigned char 
 15854 ;;  sign            1   31[BANK0 ] unsigned char 
 15855 ;; Return value:  Size  Location     Type
 15856 ;;                  4   14[BANK0 ] unsigned char 
 15857 ;; Registers used:
 15858 ;;		wreg, status,2, status,0
 15859 ;; Tracked objects:
 15860 ;;		On entry : 0/0
 15861 ;;		On exit  : 0/0
 15862 ;;		Unchanged: 0/0
 15863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15864 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15865 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15866 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15867 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15868 ;;Total ram usage:       26 bytes
 15869 ;; Hardware stack levels used:    1
 15870 ;; Hardware stack levels required when called:    4
 15871 ;; This function calls:
 15872 ;;		Nothing
 15873 ;; This function is called by:
 15874 ;;		_LED_setColor
 15875 ;;		_LED_task_BEAT
 15876 ;; This function uses a non-reentrant model
 15877 ;;
 15878                           
 15879                           
 15880                           ;psect for function ___fldiv
 15881  0E86                     ___fldiv:	
 15882                           
 15883                           ;incstack = 0
 15884                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15885  0E86  0140               	movlb	0	; select bank0
 15886  0E87  0835               	movf	___fldiv@b+3,w
 15887  0E88  3980               	andlw	128
 15888  0E89  00B6               	movwf	??___fldiv
 15889  0E8A  0836               	movf	??___fldiv,w
 15890  0E8B  00BF               	movwf	___fldiv@sign
 15891  0E8C  3535               	lslf	___fldiv@b+3,w
 15892  0E8D  00B6               	movwf	??___fldiv
 15893  0E8E  0836               	movf	??___fldiv,w
 15894  0E8F  00C6               	movwf	___fldiv@bexp
 15895  0E90  1BB4               	btfsc	___fldiv@b+2,7
 15896  0E91  1446               	bsf	___fldiv@bexp,0
 15897  0E92  0846               	movf	___fldiv@bexp,w
 15898  0E93  1903               	btfsc	3,2
 15899  0E94  2EA3               	goto	l4367
 15900  0E95  0A46               	incf	___fldiv@bexp,w
 15901  0E96  1D03               	btfss	3,2
 15902  0E97  2EA0               	goto	l4363
 15903  0E98  3000               	movlw	0
 15904  0E99  00B5               	movwf	___fldiv@b+3
 15905  0E9A  3000               	movlw	0
 15906  0E9B  00B4               	movwf	___fldiv@b+2
 15907  0E9C  3000               	movlw	0
 15908  0E9D  00B3               	movwf	___fldiv@b+1
 15909  0E9E  3000               	movlw	0
 15910  0E9F  00B2               	movwf	___fldiv@b
 15911  0EA0                     l4363:	
 15912  0EA0  17B4               	bsf	___fldiv@b+2,7
 15913  0EA1  01B5               	clrf	___fldiv@b+3
 15914  0EA2  2EAB               	goto	l4369
 15915  0EA3                     l4367:	
 15916  0EA3  3000               	movlw	0
 15917  0EA4  00B5               	movwf	___fldiv@b+3
 15918  0EA5  3000               	movlw	0
 15919  0EA6  00B4               	movwf	___fldiv@b+2
 15920  0EA7  3000               	movlw	0
 15921  0EA8  00B3               	movwf	___fldiv@b+1
 15922  0EA9  3000               	movlw	0
 15923  0EAA  00B2               	movwf	___fldiv@b
 15924  0EAB                     l4369:	
 15925  0EAB  0831               	movf	___fldiv@a+3,w
 15926  0EAC  3980               	andlw	128
 15927  0EAD  00B6               	movwf	??___fldiv
 15928  0EAE  0836               	movf	??___fldiv,w
 15929  0EAF  06BF               	xorwf	___fldiv@sign,f
 15930  0EB0  3531               	lslf	___fldiv@a+3,w
 15931  0EB1  00B6               	movwf	??___fldiv
 15932  0EB2  0836               	movf	??___fldiv,w
 15933  0EB3  00C7               	movwf	___fldiv@aexp
 15934  0EB4  1BB0               	btfsc	___fldiv@a+2,7
 15935  0EB5  1447               	bsf	___fldiv@aexp,0
 15936  0EB6  0847               	movf	___fldiv@aexp,w
 15937  0EB7  1903               	btfsc	3,2
 15938  0EB8  2EC7               	goto	l4387
 15939  0EB9  0A47               	incf	___fldiv@aexp,w
 15940  0EBA  1D03               	btfss	3,2
 15941  0EBB  2EC4               	goto	l4383
 15942  0EBC  3000               	movlw	0
 15943  0EBD  00B1               	movwf	___fldiv@a+3
 15944  0EBE  3000               	movlw	0
 15945  0EBF  00B0               	movwf	___fldiv@a+2
 15946  0EC0  3000               	movlw	0
 15947  0EC1  00AF               	movwf	___fldiv@a+1
 15948  0EC2  3000               	movlw	0
 15949  0EC3  00AE               	movwf	___fldiv@a
 15950  0EC4                     l4383:	
 15951  0EC4  17B0               	bsf	___fldiv@a+2,7
 15952  0EC5  01B1               	clrf	___fldiv@a+3
 15953  0EC6  2ECF               	goto	l1855
 15954  0EC7                     l4387:	
 15955  0EC7  3000               	movlw	0
 15956  0EC8  00B1               	movwf	___fldiv@a+3
 15957  0EC9  3000               	movlw	0
 15958  0ECA  00B0               	movwf	___fldiv@a+2
 15959  0ECB  3000               	movlw	0
 15960  0ECC  00AF               	movwf	___fldiv@a+1
 15961  0ECD  3000               	movlw	0
 15962  0ECE  00AE               	movwf	___fldiv@a
 15963  0ECF                     l1855:	
 15964  0ECF  0831               	movf	___fldiv@a+3,w
 15965  0ED0  0430               	iorwf	___fldiv@a+2,w
 15966  0ED1  042F               	iorwf	___fldiv@a+1,w
 15967  0ED2  042E               	iorwf	___fldiv@a,w
 15968  0ED3  1D03               	skipz
 15969  0ED4  2EEE               	goto	l4397
 15970  0ED5  3000               	movlw	0
 15971  0ED6  00B5               	movwf	___fldiv@b+3
 15972  0ED7  3000               	movlw	0
 15973  0ED8  00B4               	movwf	___fldiv@b+2
 15974  0ED9  3000               	movlw	0
 15975  0EDA  00B3               	movwf	___fldiv@b+1
 15976  0EDB  3000               	movlw	0
 15977  0EDC  00B2               	movwf	___fldiv@b
 15978  0EDD  3080               	movlw	128
 15979  0EDE  04B4               	iorwf	___fldiv@b+2,f
 15980  0EDF  307F               	movlw	127
 15981  0EE0  04B5               	iorwf	___fldiv@b+3,f
 15982  0EE1                     L11:	
 15983  0EE1  083F               	movf	___fldiv@sign,w
 15984  0EE2  00B6               	movwf	??___fldiv
 15985  0EE3  0836               	movf	??___fldiv,w
 15986  0EE4  04B5               	iorwf	___fldiv@b+3,f
 15987  0EE5  0835               	movf	___fldiv@b+3,w
 15988  0EE6  00B1               	movwf	?___fldiv+3
 15989  0EE7  0834               	movf	___fldiv@b+2,w
 15990  0EE8  00B0               	movwf	?___fldiv+2
 15991  0EE9  0833               	movf	___fldiv@b+1,w
 15992  0EEA  00AF               	movwf	?___fldiv+1
 15993  0EEB  0832               	movf	___fldiv@b,w
 15994  0EEC  00AE               	movwf	?___fldiv
 15995  0EED  0008               	return
 15996  0EEE                     l4397:	
 15997  0EEE  0846               	movf	___fldiv@bexp,w
 15998  0EEF  1D03               	btfss	3,2
 15999  0EF0  2EFA               	goto	l4403
 16000  0EF1  3000               	movlw	0
 16001  0EF2  00B1               	movwf	?___fldiv+3
 16002  0EF3  3000               	movlw	0
 16003  0EF4  00B0               	movwf	?___fldiv+2
 16004  0EF5  3000               	movlw	0
 16005  0EF6  00AF               	movwf	?___fldiv+1
 16006  0EF7  3000               	movlw	0
 16007  0EF8  00AE               	movwf	?___fldiv
 16008  0EF9  0008               	return
 16009  0EFA                     l4403:	
 16010  0EFA  0846               	movf	___fldiv@bexp,w
 16011  0EFB  00B6               	movwf	??___fldiv
 16012  0EFC  01B7               	clrf	??___fldiv+1
 16013  0EFD  0837               	movf	??___fldiv+1,w
 16014  0EFE  00B9               	movwf	??___fldiv+3
 16015  0EFF  0847               	movf	___fldiv@aexp,w
 16016  0F00  0236               	subwf	??___fldiv,w
 16017  0F01  00B8               	movwf	??___fldiv+2
 16018  0F02  1C03               	skipc
 16019  0F03  03B9               	decf	??___fldiv+3,f
 16020  0F04  0838               	movf	??___fldiv+2,w
 16021  0F05  3E7F               	addlw	127
 16022  0F06  00C0               	movwf	___fldiv@new_exp
 16023  0F07  3000               	movlw	0
 16024  0F08  3D39               	addwfc	??___fldiv+3,w
 16025  0F09  00C1               	movwf	___fldiv@new_exp+1
 16026  0F0A  0835               	movf	___fldiv@b+3,w
 16027  0F0B  00BE               	movwf	___fldiv@rem+3
 16028  0F0C  0834               	movf	___fldiv@b+2,w
 16029  0F0D  00BD               	movwf	___fldiv@rem+2
 16030  0F0E  0833               	movf	___fldiv@b+1,w
 16031  0F0F  00BC               	movwf	___fldiv@rem+1
 16032  0F10  0832               	movf	___fldiv@b,w
 16033  0F11  00BB               	movwf	___fldiv@rem
 16034  0F12  3000               	movlw	0
 16035  0F13  00B5               	movwf	___fldiv@b+3
 16036  0F14  3000               	movlw	0
 16037  0F15  00B4               	movwf	___fldiv@b+2
 16038  0F16  3000               	movlw	0
 16039  0F17  00B3               	movwf	___fldiv@b+1
 16040  0F18  3000               	movlw	0
 16041  0F19  00B2               	movwf	___fldiv@b
 16042  0F1A  3000               	movlw	0
 16043  0F1B  00C5               	movwf	___fldiv@grs+3
 16044  0F1C  3000               	movlw	0
 16045  0F1D  00C4               	movwf	___fldiv@grs+2
 16046  0F1E  3000               	movlw	0
 16047  0F1F  00C3               	movwf	___fldiv@grs+1
 16048  0F20  3000               	movlw	0
 16049  0F21  00C2               	movwf	___fldiv@grs
 16050  0F22  01C7               	clrf	___fldiv@aexp
 16051  0F23                     l4431:	
 16052  0F23  301A               	movlw	26
 16053  0F24  0247               	subwf	___fldiv@aexp,w
 16054  0F25  1803               	btfsc	3,0
 16055  0F26  2F5F               	goto	l4433
 16056  0F27  0847               	movf	___fldiv@aexp,w
 16057  0F28  1903               	btfsc	3,2
 16058  0F29  2F41               	goto	l4423
 16059  0F2A  3001               	movlw	1
 16060  0F2B                     u3275:	
 16061  0F2B  35BB               	lslf	___fldiv@rem,f
 16062  0F2C  0DBC               	rlf	___fldiv@rem+1,f
 16063  0F2D  0DBD               	rlf	___fldiv@rem+2,f
 16064  0F2E  0DBE               	rlf	___fldiv@rem+3,f
 16065  0F2F  0B89               	decfsz	9,f
 16066  0F30  2F2B               	goto	u3275
 16067  0F31  3001               	movlw	1
 16068  0F32                     u3285:	
 16069  0F32  35B2               	lslf	___fldiv@b,f
 16070  0F33  0DB3               	rlf	___fldiv@b+1,f
 16071  0F34  0DB4               	rlf	___fldiv@b+2,f
 16072  0F35  0DB5               	rlf	___fldiv@b+3,f
 16073  0F36  0B89               	decfsz	9,f
 16074  0F37  2F32               	goto	u3285
 16075  0F38  1BC5               	btfsc	___fldiv@grs+3,7
 16076  0F39  1432               	bsf	___fldiv@b,0
 16077  0F3A  3001               	movlw	1
 16078  0F3B                     u3305:	
 16079  0F3B  35C2               	lslf	___fldiv@grs,f
 16080  0F3C  0DC3               	rlf	___fldiv@grs+1,f
 16081  0F3D  0DC4               	rlf	___fldiv@grs+2,f
 16082  0F3E  0DC5               	rlf	___fldiv@grs+3,f
 16083  0F3F  0B89               	decfsz	9,f
 16084  0F40  2F3B               	goto	u3305
 16085  0F41                     l4423:	
 16086  0F41  0831               	movf	___fldiv@a+3,w
 16087  0F42  023E               	subwf	___fldiv@rem+3,w
 16088  0F43  1D03               	skipz
 16089  0F44  2F4F               	goto	u3315
 16090  0F45  0830               	movf	___fldiv@a+2,w
 16091  0F46  023D               	subwf	___fldiv@rem+2,w
 16092  0F47  1D03               	skipz
 16093  0F48  2F4F               	goto	u3315
 16094  0F49  082F               	movf	___fldiv@a+1,w
 16095  0F4A  023C               	subwf	___fldiv@rem+1,w
 16096  0F4B  1D03               	skipz
 16097  0F4C  2F4F               	goto	u3315
 16098  0F4D  082E               	movf	___fldiv@a,w
 16099  0F4E  023B               	subwf	___fldiv@rem,w
 16100  0F4F                     u3315:	
 16101  0F4F  1C03               	skipc
 16102  0F50  2F5A               	goto	l4429
 16103  0F51  1745               	bsf	___fldiv@grs+3,6
 16104  0F52  082E               	movf	___fldiv@a,w
 16105  0F53  02BB               	subwf	___fldiv@rem,f
 16106  0F54  082F               	movf	___fldiv@a+1,w
 16107  0F55  3BBC               	subwfb	___fldiv@rem+1,f
 16108  0F56  0830               	movf	___fldiv@a+2,w
 16109  0F57  3BBD               	subwfb	___fldiv@rem+2,f
 16110  0F58  0831               	movf	___fldiv@a+3,w
 16111  0F59  3BBE               	subwfb	___fldiv@rem+3,f
 16112  0F5A                     l4429:	
 16113  0F5A  3001               	movlw	1
 16114  0F5B  00B6               	movwf	??___fldiv
 16115  0F5C  0836               	movf	??___fldiv,w
 16116  0F5D  07C7               	addwf	___fldiv@aexp,f
 16117  0F5E  2F23               	goto	l4431
 16118  0F5F                     l4433:	
 16119  0F5F  083E               	movf	___fldiv@rem+3,w
 16120  0F60  043D               	iorwf	___fldiv@rem+2,w
 16121  0F61  043C               	iorwf	___fldiv@rem+1,w
 16122  0F62  043B               	iorwf	___fldiv@rem,w
 16123  0F63  1D03               	btfss	3,2
 16124  0F64  1442               	bsf	___fldiv@grs,0
 16125  0F65                     l4447:	
 16126  0F65  1BB4               	btfsc	___fldiv@b+2,7
 16127  0F66  2F7C               	goto	l4449
 16128  0F67  3001               	movlw	1
 16129  0F68                     u3345:	
 16130  0F68  35B2               	lslf	___fldiv@b,f
 16131  0F69  0DB3               	rlf	___fldiv@b+1,f
 16132  0F6A  0DB4               	rlf	___fldiv@b+2,f
 16133  0F6B  0DB5               	rlf	___fldiv@b+3,f
 16134  0F6C  0B89               	decfsz	9,f
 16135  0F6D  2F68               	goto	u3345
 16136  0F6E  1BC5               	btfsc	___fldiv@grs+3,7
 16137  0F6F  1432               	bsf	___fldiv@b,0
 16138  0F70  3001               	movlw	1
 16139  0F71                     u3365:	
 16140  0F71  35C2               	lslf	___fldiv@grs,f
 16141  0F72  0DC3               	rlf	___fldiv@grs+1,f
 16142  0F73  0DC4               	rlf	___fldiv@grs+2,f
 16143  0F74  0DC5               	rlf	___fldiv@grs+3,f
 16144  0F75  0B89               	decfsz	9,f
 16145  0F76  2F71               	goto	u3365
 16146  0F77  30FF               	movlw	255
 16147  0F78  07C0               	addwf	___fldiv@new_exp,f
 16148  0F79  30FF               	movlw	255
 16149  0F7A  3DC1               	addwfc	___fldiv@new_exp+1,f
 16150  0F7B  2F65               	goto	l4447
 16151  0F7C                     l4449:	
 16152  0F7C  01C7               	clrf	___fldiv@aexp
 16153  0F7D  1FC5               	btfss	___fldiv@grs+3,7
 16154  0F7E  2F95               	goto	l4459
 16155  0F7F  30FF               	movlw	255
 16156  0F80  0542               	andwf	___fldiv@grs,w
 16157  0F81  00B6               	movwf	??___fldiv
 16158  0F82  30FF               	movlw	255
 16159  0F83  0543               	andwf	___fldiv@grs+1,w
 16160  0F84  00B7               	movwf	??___fldiv+1
 16161  0F85  30FF               	movlw	255
 16162  0F86  0544               	andwf	___fldiv@grs+2,w
 16163  0F87  00B8               	movwf	??___fldiv+2
 16164  0F88  307F               	movlw	127
 16165  0F89  0545               	andwf	___fldiv@grs+3,w
 16166  0F8A  00B9               	movwf	??___fldiv+3
 16167  0F8B  0839               	movf	??___fldiv+3,w
 16168  0F8C  0438               	iorwf	??___fldiv+2,w
 16169  0F8D  0437               	iorwf	??___fldiv+1,w
 16170  0F8E  0436               	iorwf	??___fldiv,w
 16171  0F8F  1903               	skipnz
 16172  0F90  1832               	btfsc	___fldiv@b,0
 16173  0F91  2F93               	goto	l4455
 16174  0F92  2F95               	goto	l4459
 16175  0F93                     l4455:	
 16176  0F93  01C7               	clrf	___fldiv@aexp
 16177  0F94  0AC7               	incf	___fldiv@aexp,f
 16178  0F95                     l4459:	
 16179  0F95  0847               	movf	___fldiv@aexp,w
 16180  0F96  1903               	btfsc	3,2
 16181  0F97  2FBE               	goto	l4469
 16182  0F98  3001               	movlw	1
 16183  0F99  07B2               	addwf	___fldiv@b,f
 16184  0F9A  3000               	movlw	0
 16185  0F9B  3DB3               	addwfc	___fldiv@b+1,f
 16186  0F9C  3000               	movlw	0
 16187  0F9D  3DB4               	addwfc	___fldiv@b+2,f
 16188  0F9E  3000               	movlw	0
 16189  0F9F  3DB5               	addwfc	___fldiv@b+3,f
 16190  0FA0  1C35               	btfss	___fldiv@b+3,0
 16191  0FA1  2FBE               	goto	l4469
 16192  0FA2  0832               	movf	___fldiv@b,w
 16193  0FA3  00B6               	movwf	??___fldiv
 16194  0FA4  0833               	movf	___fldiv@b+1,w
 16195  0FA5  00B7               	movwf	??___fldiv+1
 16196  0FA6  0834               	movf	___fldiv@b+2,w
 16197  0FA7  00B8               	movwf	??___fldiv+2
 16198  0FA8  0835               	movf	___fldiv@b+3,w
 16199  0FA9  00B9               	movwf	??___fldiv+3
 16200  0FAA  3001               	movlw	1
 16201  0FAB  00BA               	movwf	??___fldiv+4
 16202  0FAC                     u3435:	
 16203  0FAC  37B9               	asrf	??___fldiv+3,f
 16204  0FAD  0CB8               	rrf	??___fldiv+2,f
 16205  0FAE  0CB7               	rrf	??___fldiv+1,f
 16206  0FAF  0CB6               	rrf	??___fldiv,f
 16207  0FB0  0BBA               	decfsz	??___fldiv+4,f
 16208  0FB1  2FAC               	goto	u3435
 16209  0FB2  0839               	movf	??___fldiv+3,w
 16210  0FB3  00B5               	movwf	___fldiv@b+3
 16211  0FB4  0838               	movf	??___fldiv+2,w
 16212  0FB5  00B4               	movwf	___fldiv@b+2
 16213  0FB6  0837               	movf	??___fldiv+1,w
 16214  0FB7  00B3               	movwf	___fldiv@b+1
 16215  0FB8  0836               	movf	??___fldiv,w
 16216  0FB9  00B2               	movwf	___fldiv@b
 16217  0FBA  3001               	movlw	1
 16218  0FBB  07C0               	addwf	___fldiv@new_exp,f
 16219  0FBC  3000               	movlw	0
 16220  0FBD  3DC1               	addwfc	___fldiv@new_exp+1,f
 16221  0FBE                     l4469:	
 16222  0FBE  0841               	movf	___fldiv@new_exp+1,w
 16223  0FBF  3A80               	xorlw	128
 16224  0FC0  00B6               	movwf	??___fldiv
 16225  0FC1  3080               	movlw	128
 16226  0FC2  0236               	subwf	??___fldiv,w
 16227  0FC3  1D03               	skipz
 16228  0FC4  2FC7               	goto	u3445
 16229  0FC5  30FF               	movlw	255
 16230  0FC6  0240               	subwf	___fldiv@new_exp,w
 16231  0FC7                     u3445:	
 16232  0FC7  1C03               	skipc
 16233  0FC8  2FD6               	goto	l1876
 16234  0FC9  30FF               	movlw	255
 16235  0FCA  0140               	movlb	0	; select bank0
 16236  0FCB  00C0               	movwf	___fldiv@new_exp
 16237  0FCC  3000               	movlw	0
 16238  0FCD  00C1               	movwf	___fldiv@new_exp+1
 16239  0FCE  3000               	movlw	0
 16240  0FCF  00B5               	movwf	___fldiv@b+3
 16241  0FD0  3000               	movlw	0
 16242  0FD1  00B4               	movwf	___fldiv@b+2
 16243  0FD2  3000               	movlw	0
 16244  0FD3  00B3               	movwf	___fldiv@b+1
 16245  0FD4  3000               	movlw	0
 16246  0FD5  00B2               	movwf	___fldiv@b
 16247  0FD6                     l1876:	
 16248  0FD6  0140               	movlb	0	; select bank0
 16249  0FD7  0841               	movf	___fldiv@new_exp+1,w
 16250  0FD8  3A80               	xorlw	128
 16251  0FD9  00B6               	movwf	??___fldiv
 16252  0FDA  3080               	movlw	128
 16253  0FDB  0236               	subwf	??___fldiv,w
 16254  0FDC  1D03               	skipz
 16255  0FDD  2FE0               	goto	u3455
 16256  0FDE  3001               	movlw	1
 16257  0FDF  0240               	subwf	___fldiv@new_exp,w
 16258  0FE0                     u3455:	
 16259  0FE0  1803               	skipnc
 16260  0FE1  2FEE               	goto	l1877
 16261  0FE2  0140               	movlb	0	; select bank0
 16262  0FE3  01C0               	clrf	___fldiv@new_exp
 16263  0FE4  01C1               	clrf	___fldiv@new_exp+1
 16264  0FE5  3000               	movlw	0
 16265  0FE6  00B5               	movwf	___fldiv@b+3
 16266  0FE7  3000               	movlw	0
 16267  0FE8  00B4               	movwf	___fldiv@b+2
 16268  0FE9  3000               	movlw	0
 16269  0FEA  00B3               	movwf	___fldiv@b+1
 16270  0FEB  3000               	movlw	0
 16271  0FEC  00B2               	movwf	___fldiv@b
 16272  0FED  01BF               	clrf	___fldiv@sign
 16273  0FEE                     l1877:	
 16274  0FEE  0140               	movlb	0	; select bank0
 16275  0FEF  0840               	movf	___fldiv@new_exp,w
 16276  0FF0  00B6               	movwf	??___fldiv
 16277  0FF1  0836               	movf	??___fldiv,w
 16278  0FF2  00C6               	movwf	___fldiv@bexp
 16279  0FF3  1C46               	btfss	___fldiv@bexp,0
 16280  0FF4  2FF7               	goto	l4483
 16281  0FF5  17B4               	bsf	___fldiv@b+2,7
 16282  0FF6  2FFB               	goto	l1879
 16283  0FF7                     l4483:	
 16284  0FF7  307F               	movlw	127
 16285  0FF8  00B6               	movwf	??___fldiv
 16286  0FF9  0836               	movf	??___fldiv,w
 16287  0FFA  05B4               	andwf	___fldiv@b+2,f
 16288  0FFB                     l1879:	
 16289  0FFB  3646               	lsrf	___fldiv@bexp,w
 16290  0FFC  00B6               	movwf	??___fldiv
 16291  0FFD  0836               	movf	??___fldiv,w
 16292  0FFE  00B5               	movwf	___fldiv@b+3
 16293  0FFF  2EE1               	goto	L11
 16294  1000                     __end_of___fldiv:	
 16295                           
 16296                           	psect	text29
 16297  1152                     __ptext29:	
 16298 ;; *************** function _PWM4_LoadDutyValue *****************
 16299 ;; Defined at:
 16300 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 16301 ;; Parameters:    Size  Location     Type
 16302 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;		None
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg, status,2
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16318 ;;Total ram usage:        2 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    4
 16321 ;; This function calls:
 16322 ;;		Nothing
 16323 ;; This function is called by:
 16324 ;;		_LED_setColor
 16325 ;;		_LED_task_BEAT
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           
 16330                           ;psect for function _PWM4_LoadDutyValue
 16331  1152                     _PWM4_LoadDutyValue:	
 16332                           
 16333                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 120){
 16334                           
 16335                           ;incstack = 0
 16336                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 16337  1152  3000               	movlw	0
 16338  1153  0140               	movlb	0	; select bank0
 16339  1154  026E               	subwf	PWM4_LoadDutyValue@dutyValue+1,w
 16340  1155  3079               	movlw	121
 16341  1156  1903               	skipnz
 16342  1157  026D               	subwf	PWM4_LoadDutyValue@dutyValue,w
 16343  1158  1803               	skipnc
 16344  1159  0008               	return
 16345                           
 16346                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 16347  115A  30FF               	movlw	255
 16348  115B  05ED               	andwf	PWM4_LoadDutyValue@dutyValue,f
 16349  115C  3003               	movlw	3
 16350  115D  05EE               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 16351                           
 16352                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 16353  115E  0146               	movlb	6	; select bank6
 16354  115F  1E1A               	btfss	26,4	;volatile
 16355  1160  2967               	goto	l6031
 16356                           
 16357                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 16358  1161  3006               	movlw	6
 16359  1162  0140               	movlb	0	; select bank0
 16360  1163                     u5385:	
 16361  1163  35ED               	lslf	PWM4_LoadDutyValue@dutyValue,f
 16362  1164  0DEE               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 16363  1165  0B89               	decfsz	9,f
 16364  1166  2963               	goto	u5385
 16365  1167                     l6031:	
 16366                           
 16367                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 16368  1167  0140               	movlb	0	; select bank0
 16369  1168  086E               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 16370  1169  0146               	movlb	6	; select bank6
 16371  116A  0099               	movwf	25	;volatile
 16372                           
 16373                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 16374  116B  0140               	movlb	0	; select bank0
 16375  116C  086D               	movf	PWM4_LoadDutyValue@dutyValue,w
 16376  116D  0146               	movlb	6	; select bank6
 16377  116E  0098               	movwf	24	;volatile
 16378                           
 16379                           ;mcc_generated_files/pwm4.c: 93:         }
 16380  116F  0008               	return
 16381  1170                     __end_of_PWM4_LoadDutyValue:	
 16382                           
 16383                           	psect	text30
 16384  1134                     __ptext30:	
 16385 ;; *************** function _PWM3_LoadDutyValue *****************
 16386 ;; Defined at:
 16387 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;		None
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  1    wreg      void 
 16394 ;; Registers used:
 16395 ;;		wreg, status,2
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16405 ;;Total ram usage:        2 bytes
 16406 ;; Hardware stack levels used:    1
 16407 ;; Hardware stack levels required when called:    4
 16408 ;; This function calls:
 16409 ;;		Nothing
 16410 ;; This function is called by:
 16411 ;;		_LED_setColor
 16412 ;;		_LED_task_BEAT
 16413 ;; This function uses a non-reentrant model
 16414 ;;
 16415                           
 16416                           
 16417                           ;psect for function _PWM3_LoadDutyValue
 16418  1134                     _PWM3_LoadDutyValue:	
 16419                           
 16420                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 120){
 16421                           
 16422                           ;incstack = 0
 16423                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 16424  1134  3000               	movlw	0
 16425  1135  0140               	movlb	0	; select bank0
 16426  1136  026E               	subwf	PWM3_LoadDutyValue@dutyValue+1,w
 16427  1137  3079               	movlw	121
 16428  1138  1903               	skipnz
 16429  1139  026D               	subwf	PWM3_LoadDutyValue@dutyValue,w
 16430  113A  1803               	skipnc
 16431  113B  0008               	return
 16432                           
 16433                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 16434  113C  30FF               	movlw	255
 16435  113D  05ED               	andwf	PWM3_LoadDutyValue@dutyValue,f
 16436  113E  3003               	movlw	3
 16437  113F  05EE               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 16438                           
 16439                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 16440  1140  0146               	movlb	6	; select bank6
 16441  1141  1E16               	btfss	22,4	;volatile
 16442  1142  2949               	goto	l6015
 16443                           
 16444                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 16445  1143  3006               	movlw	6
 16446  1144  0140               	movlb	0	; select bank0
 16447  1145                     u5355:	
 16448  1145  35ED               	lslf	PWM3_LoadDutyValue@dutyValue,f
 16449  1146  0DEE               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 16450  1147  0B89               	decfsz	9,f
 16451  1148  2945               	goto	u5355
 16452  1149                     l6015:	
 16453                           
 16454                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16455  1149  0140               	movlb	0	; select bank0
 16456  114A  086E               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 16457  114B  0146               	movlb	6	; select bank6
 16458  114C  0095               	movwf	21	;volatile
 16459                           
 16460                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16461  114D  0140               	movlb	0	; select bank0
 16462  114E  086D               	movf	PWM3_LoadDutyValue@dutyValue,w
 16463  114F  0146               	movlb	6	; select bank6
 16464  1150  0094               	movwf	20	;volatile
 16465                           
 16466                           ;mcc_generated_files/pwm3.c: 93:         }
 16467  1151  0008               	return
 16468  1152                     __end_of_PWM3_LoadDutyValue:	
 16469                           
 16470                           	psect	text31
 16471  1116                     __ptext31:	
 16472 ;; *************** function _PWM2_LoadDutyValue *****************
 16473 ;; Defined at:
 16474 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16475 ;; Parameters:    Size  Location     Type
 16476 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16477 ;; Auto vars:     Size  Location     Type
 16478 ;;		None
 16479 ;; Return value:  Size  Location     Type
 16480 ;;                  1    wreg      void 
 16481 ;; Registers used:
 16482 ;;		wreg, status,2
 16483 ;; Tracked objects:
 16484 ;;		On entry : 0/0
 16485 ;;		On exit  : 0/0
 16486 ;;		Unchanged: 0/0
 16487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16492 ;;Total ram usage:        2 bytes
 16493 ;; Hardware stack levels used:    1
 16494 ;; Hardware stack levels required when called:    4
 16495 ;; This function calls:
 16496 ;;		Nothing
 16497 ;; This function is called by:
 16498 ;;		_LED_setColor
 16499 ;;		_LED_task_BEAT
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           
 16504                           ;psect for function _PWM2_LoadDutyValue
 16505  1116                     _PWM2_LoadDutyValue:	
 16506                           
 16507                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 120){
 16508                           
 16509                           ;incstack = 0
 16510                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16511  1116  3000               	movlw	0
 16512  1117  0140               	movlb	0	; select bank0
 16513  1118  026E               	subwf	PWM2_LoadDutyValue@dutyValue+1,w
 16514  1119  3079               	movlw	121
 16515  111A  1903               	skipnz
 16516  111B  026D               	subwf	PWM2_LoadDutyValue@dutyValue,w
 16517  111C  1803               	skipnc
 16518  111D  0008               	return
 16519                           
 16520                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16521  111E  30FF               	movlw	255
 16522  111F  05ED               	andwf	PWM2_LoadDutyValue@dutyValue,f
 16523  1120  3003               	movlw	3
 16524  1121  05EE               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 16525                           
 16526                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16527  1122  0146               	movlb	6	; select bank6
 16528  1123  1E12               	btfss	18,4	;volatile
 16529  1124  292B               	goto	l6063
 16530                           
 16531                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16532  1125  3006               	movlw	6
 16533  1126  0140               	movlb	0	; select bank0
 16534  1127                     u5445:	
 16535  1127  35ED               	lslf	PWM2_LoadDutyValue@dutyValue,f
 16536  1128  0DEE               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 16537  1129  0B89               	decfsz	9,f
 16538  112A  2927               	goto	u5445
 16539  112B                     l6063:	
 16540                           
 16541                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16542  112B  0140               	movlb	0	; select bank0
 16543  112C  086E               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 16544  112D  0146               	movlb	6	; select bank6
 16545  112E  0091               	movwf	17	;volatile
 16546                           
 16547                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16548  112F  0140               	movlb	0	; select bank0
 16549  1130  086D               	movf	PWM2_LoadDutyValue@dutyValue,w
 16550  1131  0146               	movlb	6	; select bank6
 16551  1132  0090               	movwf	16	;volatile
 16552                           
 16553                           ;mcc_generated_files/pwm2.c: 93:         }
 16554  1133  0008               	return
 16555  1134                     __end_of_PWM2_LoadDutyValue:	
 16556                           
 16557                           	psect	text32
 16558  10F8                     __ptext32:	
 16559 ;; *************** function _PWM1_LoadDutyValue *****************
 16560 ;; Defined at:
 16561 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16562 ;; Parameters:    Size  Location     Type
 16563 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16564 ;; Auto vars:     Size  Location     Type
 16565 ;;		None
 16566 ;; Return value:  Size  Location     Type
 16567 ;;                  1    wreg      void 
 16568 ;; Registers used:
 16569 ;;		wreg, status,2
 16570 ;; Tracked objects:
 16571 ;;		On entry : 0/0
 16572 ;;		On exit  : 0/0
 16573 ;;		Unchanged: 0/0
 16574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16579 ;;Total ram usage:        2 bytes
 16580 ;; Hardware stack levels used:    1
 16581 ;; Hardware stack levels required when called:    4
 16582 ;; This function calls:
 16583 ;;		Nothing
 16584 ;; This function is called by:
 16585 ;;		_LED_setColor
 16586 ;;		_LED_task_BEAT
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590                           
 16591                           ;psect for function _PWM1_LoadDutyValue
 16592  10F8                     _PWM1_LoadDutyValue:	
 16593                           
 16594                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 120){
 16595                           
 16596                           ;incstack = 0
 16597                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16598  10F8  3000               	movlw	0
 16599  10F9  0140               	movlb	0	; select bank0
 16600  10FA  026E               	subwf	PWM1_LoadDutyValue@dutyValue+1,w
 16601  10FB  3079               	movlw	121
 16602  10FC  1903               	skipnz
 16603  10FD  026D               	subwf	PWM1_LoadDutyValue@dutyValue,w
 16604  10FE  1803               	skipnc
 16605  10FF  0008               	return
 16606                           
 16607                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16608  1100  30FF               	movlw	255
 16609  1101  05ED               	andwf	PWM1_LoadDutyValue@dutyValue,f
 16610  1102  3003               	movlw	3
 16611  1103  05EE               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 16612                           
 16613                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16614  1104  0146               	movlb	6	; select bank6
 16615  1105  1E0E               	btfss	14,4	;volatile
 16616  1106  290D               	goto	l6047
 16617                           
 16618                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16619  1107  3006               	movlw	6
 16620  1108  0140               	movlb	0	; select bank0
 16621  1109                     u5415:	
 16622  1109  35ED               	lslf	PWM1_LoadDutyValue@dutyValue,f
 16623  110A  0DEE               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 16624  110B  0B89               	decfsz	9,f
 16625  110C  2909               	goto	u5415
 16626  110D                     l6047:	
 16627                           
 16628                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16629  110D  0140               	movlb	0	; select bank0
 16630  110E  086E               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 16631  110F  0146               	movlb	6	; select bank6
 16632  1110  008D               	movwf	13	;volatile
 16633                           
 16634                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16635  1111  0140               	movlb	0	; select bank0
 16636  1112  086D               	movf	PWM1_LoadDutyValue@dutyValue,w
 16637  1113  0146               	movlb	6	; select bank6
 16638  1114  008C               	movwf	12	;volatile
 16639                           
 16640                           ;mcc_generated_files/pwm1.c: 93:         }
 16641  1115  0008               	return
 16642  1116                     __end_of_PWM1_LoadDutyValue:	
 16643                           
 16644                           	psect	text33
 16645  1ED5                     __ptext33:	
 16646 ;; *************** function _BEAT_detected *****************
 16647 ;; Defined at:
 16648 ;;		line 49 in file "beat.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;		None
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;		None
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1    wreg      _Bool 
 16655 ;; Registers used:
 16656 ;;		wreg, status,2, status,0
 16657 ;; Tracked objects:
 16658 ;;		On entry : 0/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16666 ;;Total ram usage:        0 bytes
 16667 ;; Hardware stack levels used:    1
 16668 ;; Hardware stack levels required when called:    4
 16669 ;; This function calls:
 16670 ;;		Nothing
 16671 ;; This function is called by:
 16672 ;;		_LED_task_BEAT
 16673 ;; This function uses a non-reentrant model
 16674 ;;
 16675                           
 16676                           
 16677                           ;psect for function _BEAT_detected
 16678  1ED5                     _BEAT_detected:	
 16679                           
 16680                           ;beat.c: 50:     if (detected) {
 16681                           
 16682                           ;incstack = 0
 16683                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16684  1ED5  0141               	movlb	1	; select bank1
 16685  1ED6  0839               	movf	_detected^(0+128),w
 16686  1ED7  1903               	btfsc	3,2
 16687  1ED8  2EDC               	goto	l6147
 16688                           
 16689                           ;beat.c: 51:         detected = 0;
 16690  1ED9  01B9               	clrf	_detected^(0+128)
 16691                           
 16692                           ;beat.c: 52:         return 1;
 16693  1EDA  3001               	movlw	1
 16694  1EDB  0008               	return
 16695  1EDC                     l6147:	
 16696                           
 16697                           ;beat.c: 55:     return 0;
 16698  1EDC  3000               	movlw	0
 16699  1EDD  0008               	return
 16700  1EDE                     __end_of_BEAT_detected:	
 16701                           
 16702                           	psect	text34
 16703  0003                     __ptext34:	
 16704 ;; *************** function _LED_task_ANIMATION *****************
 16705 ;; Defined at:
 16706 ;;		line 129 in file "led.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      void 
 16713 ;; Registers used:
 16714 ;;		None
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    4
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_LED_task
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           
 16735                           ;psect for function _LED_task_ANIMATION
 16736  0003                     _LED_task_ANIMATION:	
 16737                           
 16738                           ;incstack = 0
 16739                           ; Regs used in _LED_task_ANIMATION: []
 16740  0003  0008               	return
 16741  0004                     __end_of_LED_task_ANIMATION:	
 16742                           
 16743                           	psect	text35
 16744  1FC5                     __ptext35:	
 16745 ;; *************** function _DMX_init *****************
 16746 ;; Defined at:
 16747 ;;		line 21 in file "dmx.c"
 16748 ;; Parameters:    Size  Location     Type
 16749 ;;		None
 16750 ;; Auto vars:     Size  Location     Type
 16751 ;;		None
 16752 ;; Return value:  Size  Location     Type
 16753 ;;                  1    wreg      void 
 16754 ;; Registers used:
 16755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16756 ;; Tracked objects:
 16757 ;;		On entry : 0/0
 16758 ;;		On exit  : 0/0
 16759 ;;		Unchanged: 0/0
 16760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16765 ;;Total ram usage:        0 bytes
 16766 ;; Hardware stack levels used:    1
 16767 ;; Hardware stack levels required when called:    9
 16768 ;; This function calls:
 16769 ;;		_EUSART1_SetRxInterruptHandler
 16770 ;;		_TM1650_fastPrintNum
 16771 ;; This function is called by:
 16772 ;;		_main
 16773 ;; This function uses a non-reentrant model
 16774 ;;
 16775                           
 16776                           
 16777                           ;psect for function _DMX_init
 16778  1FC5                     _DMX_init:	
 16779                           
 16780                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16781                           
 16782                           ;incstack = 0
 16783                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16784  1FC5  3060               	movlw	low _DMX_interrupt
 16785  1FC6  0140               	movlb	0	; select bank0
 16786  1FC7  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16787  1FC8  3013               	movlw	high _DMX_interrupt
 16788  1FC9  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16789  1FCA  319E  26CC  319F   	fcall	_EUSART1_SetRxInterruptHandler
 16790                           
 16791                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16792  1FCD  0141               	movlb	1	; select bank1
 16793  1FCE  086B               	movf	(_address+1)^(0+128),w
 16794  1FCF  0140               	movlb	0	; select bank0
 16795  1FD0  00B5               	movwf	TM1650_fastPrintNum@num+1
 16796  1FD1  0141               	movlb	1	; select bank1
 16797  1FD2  086A               	movf	_address^(0+128),w
 16798  1FD3  0140               	movlb	0	; select bank0
 16799  1FD4  00B4               	movwf	TM1650_fastPrintNum@num
 16800  1FD5  3188  207A         	fcall	_TM1650_fastPrintNum
 16801  1FD7  0008               	return
 16802  1FD8                     __end_of_DMX_init:	
 16803                           
 16804                           	psect	text36
 16805  1ECC                     __ptext36:	
 16806 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16807 ;; Defined at:
 16808 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16809 ;; Parameters:    Size  Location     Type
 16810 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16811 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16812 ;; Auto vars:     Size  Location     Type
 16813 ;;		None
 16814 ;; Return value:  Size  Location     Type
 16815 ;;                  1    wreg      void 
 16816 ;; Registers used:
 16817 ;;		wreg
 16818 ;; Tracked objects:
 16819 ;;		On entry : 0/0
 16820 ;;		On exit  : 0/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16827 ;;Total ram usage:        2 bytes
 16828 ;; Hardware stack levels used:    1
 16829 ;; Hardware stack levels required when called:    4
 16830 ;; This function calls:
 16831 ;;		Nothing
 16832 ;; This function is called by:
 16833 ;;		_EUSART1_Initialize
 16834 ;;		_DMX_init
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           
 16839                           ;psect for function _EUSART1_SetRxInterruptHandler
 16840  1ECC                     _EUSART1_SetRxInterruptHandler:	
 16841                           
 16842                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16843                           
 16844                           ;incstack = 0
 16845                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16846  1ECC  0140               	movlb	0	; select bank0
 16847  1ECD  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16848  1ECE  0142               	movlb	2	; select bank2
 16849  1ECF  00CF               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 16850  1ED0  0140               	movlb	0	; select bank0
 16851  1ED1  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16852  1ED2  0142               	movlb	2	; select bank2
 16853  1ED3  00CE               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 16854  1ED4  0008               	return
 16855  1ED5                     __end_of_EUSART1_SetRxInterruptHandler:	
 16856                           
 16857                           	psect	text37
 16858  0AF2                     __ptext37:	
 16859 ;; *************** function _CONTROLLER_task *****************
 16860 ;; Defined at:
 16861 ;;		line 21 in file "controller.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;		None
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;  isActive        1   79[BANK0 ] _Bool 
 16866 ;; Return value:  Size  Location     Type
 16867 ;;                  1    wreg      void 
 16868 ;; Registers used:
 16869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16870 ;; Tracked objects:
 16871 ;;		On entry : 0/0
 16872 ;;		On exit  : 0/0
 16873 ;;		Unchanged: 0/0
 16874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16877 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16878 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16879 ;;Total ram usage:        3 bytes
 16880 ;; Hardware stack levels used:    1
 16881 ;; Hardware stack levels required when called:   18
 16882 ;; This function calls:
 16883 ;;		_BUTTONS_isClicked
 16884 ;;		_CLOCK_getTime
 16885 ;;		_CONTROL_BEAT
 16886 ;;		_CONTROL_DMX
 16887 ;;		_TM1650_enable
 16888 ;;		_TM1650_fastPrintNum
 16889 ;;		_menuSelection
 16890 ;;		_printf
 16891 ;; This function is called by:
 16892 ;;		_main
 16893 ;; This function uses a non-reentrant model
 16894 ;;
 16895                           
 16896                           
 16897                           ;psect for function _CONTROLLER_task
 16898  0AF2                     _CONTROLLER_task:	
 16899                           
 16900                           ;controller.c: 23:     _Bool isActive = 1;
 16901                           
 16902                           ;incstack = 0
 16903 ;; hardware stack exceeded
 16904                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16905  0AF2  0140               	movlb	0	; select bank0
 16906  0AF3  01EF               	clrf	CONTROLLER_task@isActive
 16907  0AF4  0AEF               	incf	CONTROLLER_task@isActive,f
 16908                           
 16909                           ;controller.c: 24:     upState = BUTTONS_isClicked(up);
 16910  0AF5  0141               	movlb	1	; select bank1
 16911  0AF6  0844               	movf	_up^(0+128),w
 16912  0AF7  319F  27D8  318A   	fcall	_BUTTONS_isClicked
 16913  0AFA  0141               	movlb	1	; select bank1
 16914  0AFB  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16915  0AFC  085B               	movf	??_CONTROLLER_task^(0+128),w
 16916  0AFD  00BF               	movwf	_upState^(0+128)
 16917                           
 16918                           ;controller.c: 25:     downState = BUTTONS_isClicked(down);
 16919  0AFE  0843               	movf	_down^(0+128),w
 16920  0AFF  319F  27D8  318A   	fcall	_BUTTONS_isClicked
 16921  0B02  0141               	movlb	1	; select bank1
 16922  0B03  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16923  0B04  085B               	movf	??_CONTROLLER_task^(0+128),w
 16924  0B05  00BE               	movwf	_downState^(0+128)
 16925                           
 16926                           ;controller.c: 26:     menuState = BUTTONS_isClicked(menu);
 16927  0B06  0845               	movf	_menu^(0+128),w
 16928  0B07  319F  27D8  318A   	fcall	_BUTTONS_isClicked
 16929  0B0A  0141               	movlb	1	; select bank1
 16930  0B0B  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16931  0B0C  085B               	movf	??_CONTROLLER_task^(0+128),w
 16932  0B0D  00BD               	movwf	_menuState^(0+128)
 16933                           
 16934                           ;controller.c: 27:     enterState = BUTTONS_isClicked(enter);
 16935  0B0E  0842               	movf	_enter^(0+128),w
 16936  0B0F  319F  27D8  318A   	fcall	_BUTTONS_isClicked
 16937  0B12  0141               	movlb	1	; select bank1
 16938  0B13  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16939  0B14  085B               	movf	??_CONTROLLER_task^(0+128),w
 16940  0B15  00BC               	movwf	_enterState^(0+128)
 16941                           
 16942                           ;controller.c: 29:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 16943  0B16  036E               	decf	_startup^(0+128),w
 16944  0B17  1D03               	btfss	3,2
 16945  0B18  2B3D               	goto	l6667
 16946  0B19  319E  26BA  318A   	fcall	_CLOCK_getTime
 16947  0B1C  0141               	movlb	1	; select bank1
 16948  0B1D  0835               	movf	_startTime^(0+128),w
 16949  0B1E  0140               	movlb	0	; select bank0
 16950  0B1F  0220               	subwf	?_CLOCK_getTime,w
 16951  0B20  0141               	movlb	1	; select bank1
 16952  0B21  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16953  0B22  0836               	movf	(_startTime+1)^(0+128),w
 16954  0B23  0140               	movlb	0	; select bank0
 16955  0B24  3B21               	subwfb	?_CLOCK_getTime+1,w
 16956  0B25  0141               	movlb	1	; select bank1
 16957  0B26  00DC               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16958  0B27  3013               	movlw	19
 16959  0B28  025C               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16960  0B29  3088               	movlw	136
 16961  0B2A  1903               	skipnz
 16962  0B2B  025B               	subwf	??_CONTROLLER_task^(0+128),w
 16963  0B2C  1803               	skipnc
 16964  0B2D  2B3D               	goto	l6667
 16965                           
 16966                           ;controller.c: 30:         menuSelection();
 16967  0B2E  3195  25C5  318A   	fcall	_menuSelection
 16968                           
 16969                           ;controller.c: 31:         if (upState || downState || menuState) {
 16970  0B31  0141               	movlb	1	; select bank1
 16971  0B32  083F               	movf	_upState^(0+128),w
 16972  0B33  1D03               	btfss	3,2
 16973  0B34  2B3A               	goto	l1005
 16974  0B35  083E               	movf	_downState^(0+128),w
 16975  0B36  1903               	btfsc	3,2
 16976  0B37  083D               	movf	_menuState^(0+128),w
 16977  0B38  1903               	btfsc	3,2
 16978  0B39  0008               	return
 16979  0B3A                     l1005:	
 16980                           
 16981                           ;controller.c: 32:             menuPressed = 1;
 16982  0B3A  01C1               	clrf	_menuPressed^(0+128)
 16983  0B3B  0AC1               	incf	_menuPressed^(0+128),f
 16984  0B3C  0008               	return
 16985  0B3D                     l6667:	
 16986                           
 16987                           ;controller.c: 38:         if (menuPressed == 0 && startup == 1)
 16988  0B3D  0841               	movf	_menuPressed^(0+128),w
 16989  0B3E  1D03               	btfss	3,2
 16990  0B3F  2B47               	goto	l6673
 16991  0B40  036E               	decf	_startup^(0+128),w
 16992  0B41  1D03               	btfss	3,2
 16993  0B42  2B47               	goto	l6673
 16994                           
 16995                           ;controller.c: 39:             currentSelection = MODE_DMX;
 16996  0B43  3002               	movlw	2
 16997  0B44  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16998  0B45  085B               	movf	??_CONTROLLER_task^(0+128),w
 16999  0B46  00EC               	movwf	_currentSelection^(0+128)
 17000  0B47                     l6673:	
 17001                           
 17002                           ;controller.c: 40:         startup = 0;
 17003  0B47  01EE               	clrf	_startup^(0+128)
 17004                           
 17005                           ;controller.c: 43:     if ((menuState || menuPressed) && !enterPressed) {
 17006  0B48  083D               	movf	_menuState^(0+128),w
 17007  0B49  1903               	btfsc	3,2
 17008  0B4A  0841               	movf	_menuPressed^(0+128),w
 17009  0B4B  1903               	btfsc	3,2
 17010  0B4C  2B56               	goto	l6685
 17011  0B4D  0840               	movf	_enterPressed^(0+128),w
 17012  0B4E  1D03               	btfss	3,2
 17013  0B4F  2B56               	goto	l6685
 17014                           
 17015                           ;controller.c: 44:         menuPressed = 1;
 17016  0B50  01C1               	clrf	_menuPressed^(0+128)
 17017  0B51  0AC1               	incf	_menuPressed^(0+128),f
 17018                           
 17019                           ;controller.c: 45:         menuSelection();
 17020  0B52  3195  25C5  318A   	fcall	_menuSelection
 17021                           
 17022                           ;controller.c: 46:     } else if (currentSelection == MODE_DMX) {
 17023  0B55  2B73               	goto	l6699
 17024  0B56                     l6685:	
 17025  0B56  3002               	movlw	2
 17026  0B57  066C               	xorwf	_currentSelection^(0+128),w
 17027  0B58  1D03               	btfss	3,2
 17028  0B59  2B5E               	goto	l6689
 17029                           
 17030                           ;controller.c: 47:         isActive = CONTROL_DMX();
 17031  0B5A  3196  26B5  318A   	fcall	_CONTROL_DMX
 17032  0B5D  2B6B               	goto	L12
 17033  0B5E                     l6689:	
 17034                           ;controller.c: 48:     } else if (currentSelection == MODE_ANIMATION) {
 17035                           
 17036  0B5E  086C               	movf	_currentSelection^(0+128),w
 17037  0B5F  1D03               	btfss	3,2
 17038  0B60  2B65               	goto	l6693
 17039                           
 17040                           ;controller.c: 49:         isActive = 1;
 17041  0B61  0140               	movlb	0	; select bank0
 17042  0B62  01EF               	clrf	CONTROLLER_task@isActive
 17043  0B63  0AEF               	incf	CONTROLLER_task@isActive,f
 17044                           
 17045                           ;controller.c: 50:     } else if (currentSelection == MODE_BEAT) {
 17046  0B64  2B73               	goto	l6699
 17047  0B65                     l6693:	
 17048  0B65  036C               	decf	_currentSelection^(0+128),w
 17049  0B66  1D03               	btfss	3,2
 17050  0B67  2B71               	goto	l6697
 17051                           
 17052                           ;controller.c: 51:         isActive = CONTROL_BEAT();
 17053  0B68  3191  21D1  318A   	fcall	_CONTROL_BEAT
 17054  0B6B                     L12:	
 17055  0B6B  0141               	movlb	1	; select bank1
 17056  0B6C  00DB               	movwf	??_CONTROLLER_task^(0+128)
 17057  0B6D  085B               	movf	??_CONTROLLER_task^(0+128),w
 17058  0B6E  0140               	movlb	0	; select bank0
 17059  0B6F  00EF               	movwf	CONTROLLER_task@isActive
 17060                           
 17061                           ;controller.c: 52:     } else {
 17062  0B70  2B73               	goto	l6699
 17063  0B71                     l6697:	
 17064                           
 17065                           ;controller.c: 53:         isActive = 0;
 17066  0B71  0140               	movlb	0	; select bank0
 17067  0B72  01EF               	clrf	CONTROLLER_task@isActive
 17068  0B73                     l6699:	
 17069                           
 17070                           ;controller.c: 56:     if (isActive) {
 17071  0B73  0140               	movlb	0	; select bank0
 17072  0B74  086F               	movf	CONTROLLER_task@isActive,w
 17073  0B75  1903               	btfsc	3,2
 17074  0B76  2B82               	goto	l6703
 17075                           
 17076                           ;controller.c: 57:         lastActiveTime = CLOCK_getTime();
 17077  0B77  319E  26BA  318A   	fcall	_CLOCK_getTime
 17078  0B7A  0140               	movlb	0	; select bank0
 17079  0B7B  0821               	movf	?_CLOCK_getTime+1,w
 17080  0B7C  0141               	movlb	1	; select bank1
 17081  0B7D  00AE               	movwf	(_lastActiveTime+1)^(0+128)
 17082  0B7E  0140               	movlb	0	; select bank0
 17083  0B7F  0820               	movf	?_CLOCK_getTime,w
 17084  0B80  0141               	movlb	1	; select bank1
 17085  0B81  00AD               	movwf	_lastActiveTime^(0+128)
 17086  0B82                     l6703:	
 17087                           
 17088                           ;controller.c: 60:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 17089  0B82  319E  26BA  318A   	fcall	_CLOCK_getTime
 17090  0B85  0141               	movlb	1	; select bank1
 17091  0B86  082D               	movf	_lastActiveTime^(0+128),w
 17092  0B87  0140               	movlb	0	; select bank0
 17093  0B88  0220               	subwf	?_CLOCK_getTime,w
 17094  0B89  0141               	movlb	1	; select bank1
 17095  0B8A  00DB               	movwf	??_CONTROLLER_task^(0+128)
 17096  0B8B  082E               	movf	(_lastActiveTime+1)^(0+128),w
 17097  0B8C  0140               	movlb	0	; select bank0
 17098  0B8D  3B21               	subwfb	?_CLOCK_getTime+1,w
 17099  0B8E  0141               	movlb	1	; select bank1
 17100  0B8F  00DC               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17101  0B90  3013               	movlw	19
 17102  0B91  025C               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17103  0B92  3088               	movlw	136
 17104  0B93  1903               	skipnz
 17105  0B94  025B               	subwf	??_CONTROLLER_task^(0+128),w
 17106  0B95  1C03               	skipc
 17107  0B96  2BA9               	goto	l6709
 17108                           
 17109                           ;controller.c: 61:         TM1650_enable(0);
 17110  0B97  3000               	movlw	0
 17111  0B98  3190  201C  318A   	fcall	_TM1650_enable
 17112                           
 17113                           ;controller.c: 62:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 17114  0B9B  319E  26BA  318A   	fcall	_CLOCK_getTime
 17115  0B9E  0140               	movlb	0	; select bank0
 17116  0B9F  0820               	movf	?_CLOCK_getTime,w
 17117  0BA0  3E77               	addlw	119
 17118  0BA1  0141               	movlb	1	; select bank1
 17119  0BA2  00AD               	movwf	_lastActiveTime^(0+128)
 17120  0BA3  30EC               	movlw	236
 17121  0BA4  0140               	movlb	0	; select bank0
 17122  0BA5  3D21               	addwfc	?_CLOCK_getTime+1,w
 17123  0BA6  0141               	movlb	1	; select bank1
 17124  0BA7  00AE               	movwf	(_lastActiveTime+1)^(0+128)
 17125                           
 17126                           ;controller.c: 63:     } else {
 17127  0BA8  2BAD               	goto	l6711
 17128  0BA9                     l6709:	
 17129                           
 17130                           ;controller.c: 64:         TM1650_enable(1);
 17131  0BA9  3001               	movlw	1
 17132  0BAA  3190  201C  318A   	fcall	_TM1650_enable
 17133  0BAD                     l6711:	
 17134                           
 17135                           ;controller.c: 67:     if (currentSelection == MODE_DMX && !menuPressed) {
 17136  0BAD  3002               	movlw	2
 17137  0BAE  0141               	movlb	1	; select bank1
 17138  0BAF  066C               	xorwf	_currentSelection^(0+128),w
 17139  0BB0  1D03               	btfss	3,2
 17140  0BB1  2BCC               	goto	l6719
 17141  0BB2  0841               	movf	_menuPressed^(0+128),w
 17142  0BB3  1D03               	btfss	3,2
 17143  0BB4  2BCC               	goto	l6719
 17144                           
 17145                           ;controller.c: 68:         TM1650_fastPrintNum(address);
 17146  0BB5  086B               	movf	(_address+1)^(0+128),w
 17147  0BB6  0140               	movlb	0	; select bank0
 17148  0BB7  00B5               	movwf	TM1650_fastPrintNum@num+1
 17149  0BB8  0141               	movlb	1	; select bank1
 17150  0BB9  086A               	movf	_address^(0+128),w
 17151  0BBA  0140               	movlb	0	; select bank0
 17152  0BBB  00B4               	movwf	TM1650_fastPrintNum@num
 17153  0BBC  3188  207A  318A   	fcall	_TM1650_fastPrintNum
 17154  0BBF  2BC9               	goto	l6717
 17155  0BC0                     l6721:	
 17156  0BC0  0841               	movf	_menuPressed^(0+128),w
 17157  0BC1  1D03               	btfss	3,2
 17158  0BC2  2BCF               	goto	l6727
 17159                           
 17160                           ;controller.c: 71:         printf("SEL1\r");
 17161  0BC3  305D               	movlw	low (STR_1| (0+32768))
 17162  0BC4  00D1               	movwf	printf@fmt^(0+128)
 17163  0BC5  30A0               	movlw	high (STR_1| (0+32768))
 17164  0BC6  00D2               	movwf	(printf@fmt^(0+128)+1)
 17165  0BC7                     L13:	
 17166  0BC7  3190  2031         	fcall	_printf
 17167  0BC9                     l6717:	
 17168                           
 17169                           ;controller.c: 69:         enterPressed = 0;
 17170  0BC9  0141               	movlb	1	; select bank1
 17171  0BCA  01C0               	clrf	_enterPressed^(0+128)
 17172                           
 17173                           ;controller.c: 70:     } else if (currentSelection == MODE_ANIMATION && !menuPressed) {
 17174  0BCB  0008               	return
 17175  0BCC                     l6719:	
 17176  0BCC  086C               	movf	_currentSelection^(0+128),w
 17177  0BCD  1903               	btfsc	3,2
 17178  0BCE  2BC0               	goto	l6721
 17179  0BCF                     l6727:	
 17180  0BCF  036C               	decf	_currentSelection^(0+128),w
 17181  0BD0  1D03               	btfss	3,2
 17182  0BD1  0008               	return
 17183  0BD2  0841               	movf	_menuPressed^(0+128),w
 17184  0BD3  1D03               	btfss	3,2
 17185  0BD4  0008               	return
 17186                           
 17187                           ;controller.c: 74:         printf("B-%u  \r", beatBrightness);
 17188  0BD5  3035               	movlw	low (STR_2| (0+32768))
 17189  0BD6  00D1               	movwf	printf@fmt^(0+128)
 17190  0BD7  30A0               	movlw	high (STR_2| (0+32768))
 17191  0BD8  00D2               	movwf	(printf@fmt^(0+128)+1)
 17192  0BD9  086F               	movf	_beatBrightness^(0+128),w
 17193  0BDA  00DB               	movwf	??_CONTROLLER_task^(0+128)
 17194  0BDB  01DC               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17195  0BDC  085B               	movf	??_CONTROLLER_task^(0+128),w
 17196  0BDD  00D3               	movwf	(?_printf^(0+128)+2)
 17197  0BDE  085C               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17198  0BDF  00D4               	movwf	((?_printf+1)^(0+128)+2)
 17199  0BE0  2BC7               	goto	L13
 17200  0BE1                     __end_of_CONTROLLER_task:	
 17201                           
 17202                           	psect	text38
 17203  15C5                     __ptext38:	
 17204 ;; *************** function _menuSelection *****************
 17205 ;; Defined at:
 17206 ;;		line 80 in file "controller.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;		None
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;		None
 17211 ;; Return value:  Size  Location     Type
 17212 ;;                  1    wreg      void 
 17213 ;; Registers used:
 17214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17215 ;; Tracked objects:
 17216 ;;		On entry : 0/0
 17217 ;;		On exit  : 0/0
 17218 ;;		Unchanged: 0/0
 17219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17224 ;;Total ram usage:        2 bytes
 17225 ;; Hardware stack levels used:    1
 17226 ;; Hardware stack levels required when called:   17
 17227 ;; This function calls:
 17228 ;;		_printf
 17229 ;; This function is called by:
 17230 ;;		_CONTROLLER_task
 17231 ;; This function uses a non-reentrant model
 17232 ;;
 17233                           
 17234                           
 17235                           ;psect for function _menuSelection
 17236  15C5                     _menuSelection:	
 17237                           
 17238                           ;controller.c: 82:     if(upState){
 17239                           
 17240                           ;incstack = 0
 17241 ;; hardware stack exceeded
 17242                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17243  15C5  0141               	movlb	1	; select bank1
 17244  15C6  083F               	movf	_upState^(0+128),w
 17245  15C7  1903               	btfsc	3,2
 17246  15C8  2DDB               	goto	l6333
 17247                           
 17248                           ;controller.c: 83:         if(menuSelected < 2){
 17249  15C9  3002               	movlw	2
 17250  15CA  026D               	subwf	_menuSelected^(0+128),w
 17251  15CB  1803               	skipnc
 17252  15CC  2DD4               	goto	l6331
 17253                           
 17254                           ;controller.c: 84:             menuSelected++;
 17255  15CD  3001               	movlw	1
 17256  15CE  0140               	movlb	0	; select bank0
 17257  15CF  00ED               	movwf	??_menuSelection
 17258  15D0  086D               	movf	??_menuSelection,w
 17259  15D1  0141               	movlb	1	; select bank1
 17260  15D2  07ED               	addwf	_menuSelected^(0+128),f
 17261                           
 17262                           ;controller.c: 85:         } else {
 17263  15D3  2DE5               	goto	l6341
 17264  15D4                     l6331:	
 17265                           
 17266                           ;controller.c: 86:             menuSelected = 2;
 17267  15D4  3002               	movlw	2
 17268  15D5  0140               	movlb	0	; select bank0
 17269  15D6  00ED               	movwf	??_menuSelection
 17270  15D7  086D               	movf	??_menuSelection,w
 17271  15D8  0141               	movlb	1	; select bank1
 17272  15D9  00ED               	movwf	_menuSelected^(0+128)
 17273  15DA  2DE5               	goto	l6341
 17274  15DB                     l6333:	
 17275  15DB  083E               	movf	_downState^(0+128),w
 17276  15DC  1903               	btfsc	3,2
 17277  15DD  2DE5               	goto	l6341
 17278                           
 17279                           ;controller.c: 89:         if(menuSelected > 0){
 17280  15DE  086D               	movf	_menuSelected^(0+128),w
 17281  15DF  1903               	btfsc	3,2
 17282  15E0  2DE4               	goto	l6339
 17283                           
 17284                           ;controller.c: 90:             menuSelected--;
 17285  15E1  3001               	movlw	1
 17286  15E2  02ED               	subwf	_menuSelected^(0+128),f
 17287                           
 17288                           ;controller.c: 91:         } else {
 17289  15E3  2DE5               	goto	l6341
 17290  15E4                     l6339:	
 17291                           
 17292                           ;controller.c: 92:             menuSelected = 0;
 17293  15E4  01ED               	clrf	_menuSelected^(0+128)
 17294  15E5                     l6341:	
 17295                           
 17296                           ;controller.c: 96:     if (enterState) {
 17297  15E5  083C               	movf	_enterState^(0+128),w
 17298  15E6  1903               	btfsc	3,2
 17299  15E7  2E0A               	goto	l6359
 17300                           
 17301                           ;controller.c: 97:         currentSelection = menuSelected;
 17302  15E8  086D               	movf	_menuSelected^(0+128),w
 17303  15E9  0140               	movlb	0	; select bank0
 17304  15EA  00ED               	movwf	??_menuSelection
 17305  15EB  086D               	movf	??_menuSelection,w
 17306  15EC  0141               	movlb	1	; select bank1
 17307  15ED  00EC               	movwf	_currentSelection^(0+128)
 17308                           
 17309                           ;controller.c: 98:         menuPressed = 0;
 17310  15EE  01C1               	clrf	_menuPressed^(0+128)
 17311                           
 17312                           ;controller.c: 99:         enterPressed = 1;
 17313  15EF  01C0               	clrf	_enterPressed^(0+128)
 17314  15F0  0AC0               	incf	_enterPressed^(0+128),f
 17315  15F1  0008               	return
 17316  15F2                     l6351:	
 17317                           
 17318                           ;controller.c: 105:             printf("ANI \r");
 17319  15F2  3057               	movlw	low (STR_3| (0+32768))
 17320  15F3  0141               	movlb	1	; select bank1
 17321  15F4  00D1               	movwf	printf@fmt^(0+128)
 17322  15F5  30A0               	movlw	high (STR_3| (0+32768))
 17323  15F6  00D2               	movwf	(printf@fmt^(0+128)+1)
 17324  15F7  3190  2031         	fcall	_printf
 17325                           
 17326                           ;controller.c: 106:             break;
 17327  15F9  0008               	return
 17328  15FA                     l6353:	
 17329                           
 17330                           ;controller.c: 109:             printf("BEAT\r");
 17331  15FA  3063               	movlw	low (STR_4| (0+32768))
 17332  15FB  0141               	movlb	1	; select bank1
 17333  15FC  00D1               	movwf	printf@fmt^(0+128)
 17334  15FD  30A0               	movlw	high (STR_4| (0+32768))
 17335  15FE  00D2               	movwf	(printf@fmt^(0+128)+1)
 17336  15FF  3190  2031         	fcall	_printf
 17337                           
 17338                           ;controller.c: 110:             break;
 17339  1601  0008               	return
 17340  1602                     l6355:	
 17341                           
 17342                           ;controller.c: 113:             printf("PC  \r");
 17343  1602  3051               	movlw	low (STR_5| (0+32768))
 17344  1603  0141               	movlb	1	; select bank1
 17345  1604  00D1               	movwf	printf@fmt^(0+128)
 17346  1605  30A0               	movlw	high (STR_5| (0+32768))
 17347  1606  00D2               	movwf	(printf@fmt^(0+128)+1)
 17348  1607  3190  2031         	fcall	_printf
 17349                           
 17350                           ;controller.c: 114:             break;
 17351  1609  0008               	return
 17352  160A                     l6359:	
 17353  160A  086D               	movf	_menuSelected^(0+128),w
 17354  160B  0140               	movlb	0	; select bank0
 17355  160C  00ED               	movwf	??_menuSelection
 17356  160D  01EE               	clrf	??_menuSelection+1
 17357                           
 17358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17359                           ; Switch size 1, requested type "simple"
 17360                           ; Number of cases is 1, Range of values is 0 to 0
 17361                           ; switch strategies available:
 17362                           ; Name         Instructions Cycles
 17363                           ; simple_byte            4     3 (average)
 17364                           ; direct_byte            8     6 (fixed)
 17365                           ; jumptable            260     6 (fixed)
 17366                           ;	Chosen strategy is simple_byte
 17367  160E  086E               	movf	??_menuSelection+1,w
 17368  160F  3A00               	xorlw	0	; case 0
 17369  1610  1903               	skipnz
 17370  1611  2E13               	goto	l6967
 17371  1612  2E1E               	goto	l1037
 17372  1613                     l6967:	
 17373                           
 17374                           ; Switch size 1, requested type "simple"
 17375                           ; Number of cases is 3, Range of values is 0 to 2
 17376                           ; switch strategies available:
 17377                           ; Name         Instructions Cycles
 17378                           ; simple_byte           10     6 (average)
 17379                           ; direct_byte           12     6 (fixed)
 17380                           ; jumptable            260     6 (fixed)
 17381                           ;	Chosen strategy is simple_byte
 17382  1613  086D               	movf	??_menuSelection,w
 17383  1614  3A00               	xorlw	0	; case 0
 17384  1615  1903               	skipnz
 17385  1616  2DF2               	goto	l6351
 17386  1617  3A01               	xorlw	1	; case 1
 17387  1618  1903               	skipnz
 17388  1619  2DFA               	goto	l6353
 17389  161A  3A03               	xorlw	3	; case 2
 17390  161B  1903               	skipnz
 17391  161C  2E02               	goto	l6355
 17392  161D  2E1E               	goto	l1037
 17393  161E                     l1037:	
 17394  161E  0008               	return
 17395  161F                     __end_of_menuSelection:	
 17396                           
 17397                           	psect	text39
 17398  1031                     __ptext39:	
 17399 ;; *************** function _printf *****************
 17400 ;; Defined at:
 17401 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17404 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 17405 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 17406 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 17407 ;;		 -> STR_3(6), STR_2(8), STR_1(6), 
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  ret             2    0        int 
 17410 ;;  ap              1   76[BANK0 ] PTR void [1]
 17411 ;;		 -> ?_printf(2), 
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  2    0[BANK1 ] int 
 17414 ;; Registers used:
 17415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17421 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17424 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17425 ;;Total ram usage:       14 bytes
 17426 ;; Hardware stack levels used:    1
 17427 ;; Hardware stack levels required when called:   16
 17428 ;; This function calls:
 17429 ;;		_vfprintf
 17430 ;; This function is called by:
 17431 ;;		_CONTROLLER_task
 17432 ;;		_menuSelection
 17433 ;;		_TM1650_init
 17434 ;;		_TM1650_scrollPrint
 17435 ;; This function uses a non-reentrant model
 17436 ;;
 17437                           
 17438                           
 17439                           ;psect for function _printf
 17440  1031                     _printf:	
 17441                           
 17442                           ;incstack = 0
 17443 ;; hardware stack exceeded
 17444                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17445  1031  30D3               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17446  1032  0140               	movlb	0	; select bank0
 17447  1033  00E9               	movwf	??_printf
 17448  1034  0869               	movf	??_printf,w
 17449  1035  00EC               	movwf	printf@ap
 17450  1036  0141               	movlb	1	; select bank1
 17451  1037  0852               	movf	(printf@fmt+1)^(0+128),w
 17452  1038  0140               	movlb	0	; select bank0
 17453  1039  00E2               	movwf	vfprintf@fmt+1
 17454  103A  0141               	movlb	1	; select bank1
 17455  103B  0851               	movf	printf@fmt^(0+128),w
 17456  103C  0140               	movlb	0	; select bank0
 17457  103D  00E1               	movwf	vfprintf@fmt
 17458  103E  306C               	movlw	(low (printf@ap| 0))& (0+255)
 17459  103F  00E9               	movwf	??_printf
 17460  1040  0869               	movf	??_printf,w
 17461  1041  00E3               	movwf	vfprintf@ap
 17462  1042  3000               	movlw	0
 17463  1043  3193  2301         	fcall	_vfprintf
 17464  1045  0008               	return
 17465  1046                     __end_of_printf:	
 17466                           
 17467                           	psect	text40
 17468  1301                     __ptext40:	
 17469 ;; *************** function _vfprintf *****************
 17470 ;; Defined at:
 17471 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17472 ;; Parameters:    Size  Location     Type
 17473 ;;  fp              1    wreg     PTR struct _IO_FILE
 17474 ;;		 -> NULL(0), 
 17475 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 17476 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 17477 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 17478 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 17479 ;;		 -> STR_3(6), STR_2(8), STR_1(6), 
 17480 ;;  ap              1   67[BANK0 ] PTR PTR void 
 17481 ;;		 -> printf@ap(1), 
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 17484 ;;		 -> NULL(0), 
 17485 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 17486 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 17487 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 17488 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 17489 ;;		 -> STR_3(6), STR_2(8), STR_1(6), 
 17490 ;; Return value:  Size  Location     Type
 17491 ;;                  2   65[BANK0 ] int 
 17492 ;; Registers used:
 17493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17494 ;; Tracked objects:
 17495 ;;		On entry : 0/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17499 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17500 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17502 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17503 ;;Total ram usage:        8 bytes
 17504 ;; Hardware stack levels used:    1
 17505 ;; Hardware stack levels required when called:   15
 17506 ;; This function calls:
 17507 ;;		_vfpfcnvrt
 17508 ;; This function is called by:
 17509 ;;		_printf
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513                           
 17514                           ;psect for function _vfprintf
 17515  1301                     _vfprintf:	
 17516                           
 17517                           ;incstack = 0
 17518 ;; hardware stack exceeded
 17519                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17520                           ;vfprintf@fp stored from wreg
 17521  1301  0140               	movlb	0	; select bank0
 17522  1302  00E6               	movwf	vfprintf@fp
 17523                           
 17524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 17525  1303  0862               	movf	vfprintf@fmt+1,w
 17526  1304  00E8               	movwf	vfprintf@cfmt+1
 17527  1305  0861               	movf	vfprintf@fmt,w
 17528  1306  00E7               	movwf	vfprintf@cfmt
 17529                           
 17530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 17531  1307  0142               	movlb	2	; select bank2
 17532  1308  01B0               	clrf	_nout^(0+256)
 17533  1309  01B1               	clrf	(_nout+1)^(0+256)
 17534  130A                     l6085:	
 17535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17536                           
 17537                           
 17538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17539  130A  0140               	movlb	0	; select bank0
 17540  130B  0867               	movf	vfprintf@cfmt,w
 17541  130C  0084               	movwf	4
 17542  130D  0868               	movf	vfprintf@cfmt+1,w
 17543  130E  0085               	movwf	5
 17544  130F  0012               	moviw fsr0++
 17545  1310  1903               	btfsc	3,2
 17546  1311  2B27               	goto	l6087
 17547                           
 17548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 17549  1312  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 17550  1313  00E4               	movwf	??_vfprintf
 17551  1314  0864               	movf	??_vfprintf,w
 17552  1315  00D8               	movwf	vfpfcnvrt@fmt
 17553  1316  0863               	movf	vfprintf@ap,w
 17554  1317  00E5               	movwf	??_vfprintf+1
 17555  1318  0865               	movf	??_vfprintf+1,w
 17556  1319  00D9               	movwf	vfpfcnvrt@ap
 17557  131A  0866               	movf	vfprintf@fp,w
 17558  131B  3197  2757  3193   	fcall	_vfpfcnvrt
 17559  131E  0140               	movlb	0	; select bank0
 17560  131F  0858               	movf	?_vfpfcnvrt,w
 17561  1320  0142               	movlb	2	; select bank2
 17562  1321  07B0               	addwf	_nout^(0+256),f
 17563  1322  0140               	movlb	0	; select bank0
 17564  1323  0859               	movf	?_vfpfcnvrt+1,w
 17565  1324  0142               	movlb	2	; select bank2
 17566  1325  3DB1               	addwfc	(_nout+1)^(0+256),f
 17567  1326  2B0A               	goto	l6085
 17568  1327                     l6087:	
 17569                           
 17570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 17571  1327  0142               	movlb	2	; select bank2
 17572  1328  0831               	movf	(_nout+1)^(0+256),w
 17573  1329  0140               	movlb	0	; select bank0
 17574  132A  00E2               	movwf	?_vfprintf+1
 17575  132B  0142               	movlb	2	; select bank2
 17576  132C  0830               	movf	_nout^(0+256),w
 17577  132D  0140               	movlb	0	; select bank0
 17578  132E  00E1               	movwf	?_vfprintf
 17579  132F  0008               	return
 17580  1330                     __end_of_vfprintf:	
 17581                           
 17582                           	psect	text41
 17583  1757                     __ptext41:	
 17584 ;; *************** function _vfpfcnvrt *****************
 17585 ;; Defined at:
 17586 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17587 ;; Parameters:    Size  Location     Type
 17588 ;;  fp              1    wreg     PTR struct _IO_FILE
 17589 ;;		 -> NULL(0), 
 17590 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 17591 ;;		 -> vfprintf@cfmt(2), 
 17592 ;;  ap              1   57[BANK0 ] PTR PTR void 
 17593 ;;		 -> printf@ap(1), 
 17594 ;; Auto vars:     Size  Location     Type
 17595 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 17596 ;;		 -> NULL(0), 
 17597 ;;  llu             8    0        unsigned long long 
 17598 ;;  ll              8    0        long long 
 17599 ;;  f               4    0        long long 
 17600 ;;  ct              3    0        unsigned char [3]
 17601 ;;  vp              2    0        PTR void 
 17602 ;;  i               2    0        int 
 17603 ;;  done            2    0        int 
 17604 ;;  cp              2    0        PTR unsigned char 
 17605 ;;  c               1   63[BANK0 ] unsigned char 
 17606 ;; Return value:  Size  Location     Type
 17607 ;;                  2   56[BANK0 ] int 
 17608 ;; Registers used:
 17609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17610 ;; Tracked objects:
 17611 ;;		On entry : 0/0
 17612 ;;		On exit  : 0/0
 17613 ;;		Unchanged: 0/0
 17614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17617 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17618 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17619 ;;Total ram usage:        9 bytes
 17620 ;; Hardware stack levels used:    1
 17621 ;; Hardware stack levels required when called:   14
 17622 ;; This function calls:
 17623 ;;		_ctoa
 17624 ;;		_fputc
 17625 ;; This function is called by:
 17626 ;;		_vfprintf
 17627 ;; This function uses a non-reentrant model
 17628 ;;
 17629                           
 17630                           
 17631                           ;psect for function _vfpfcnvrt
 17632  1757                     _vfpfcnvrt:	
 17633                           
 17634                           ;incstack = 0
 17635 ;; hardware stack exceeded
 17636                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17637                           ;vfpfcnvrt@fp stored from wreg
 17638  1757  0140               	movlb	0	; select bank0
 17639  1758  00E0               	movwf	vfpfcnvrt@fp
 17640                           
 17641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 17642  1759  0858               	movf	vfpfcnvrt@fmt,w
 17643  175A  0086               	movwf	6
 17644  175B  0187               	clrf	7
 17645  175C  3F40               	moviw [0]fsr1
 17646  175D  00DA               	movwf	??_vfpfcnvrt
 17647  175E  3F41               	moviw [1]fsr1
 17648  175F  00DB               	movwf	??_vfpfcnvrt+1
 17649  1760  085A               	movf	??_vfpfcnvrt,w
 17650  1761  0084               	movwf	4
 17651  1762  085B               	movf	??_vfpfcnvrt+1,w
 17652  1763  0085               	movwf	5
 17653  1764  0012               	moviw fsr0++
 17654  1765  3A25               	xorlw	37
 17655  1766  1D03               	btfss	3,2
 17656  1767  2FDD               	goto	l5999
 17657                           
 17658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 17659  1768  0858               	movf	vfpfcnvrt@fmt,w
 17660  1769  0086               	movwf	6
 17661  176A  0187               	clrf	7
 17662  176B  3001               	movlw	1
 17663  176C  0781               	addwf	1,f
 17664  176D  3141               	addfsr 1,1
 17665  176E  1803               	skipnc
 17666  176F  0A81               	incf	1,f
 17667                           
 17668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 17669  1770  0141               	movlb	1	; select bank1
 17670  1771  01A5               	clrf	_width^(0+128)
 17671  1772  01A6               	clrf	(_width+1)^(0+128)
 17672  1773  01A7               	clrf	_flags^(0+128)
 17673  1774  01A8               	clrf	(_flags+1)^(0+128)
 17674                           
 17675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 17676  1775  30FF               	movlw	255
 17677  1776  0142               	movlb	2	; select bank2
 17678  1777  00B2               	movwf	_prec^(0+256)
 17679  1778  30FF               	movlw	255
 17680  1779  00B3               	movwf	(_prec^(0+256)+1)
 17681                           
 17682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 17683  177A  0140               	movlb	0	; select bank0
 17684  177B  0858               	movf	vfpfcnvrt@fmt,w
 17685  177C  0086               	movwf	6
 17686  177D  0187               	clrf	7
 17687  177E  3F40               	moviw [0]fsr1
 17688  177F  00DA               	movwf	??_vfpfcnvrt
 17689  1780  3F41               	moviw [1]fsr1
 17690  1781  00DB               	movwf	??_vfpfcnvrt+1
 17691  1782  085A               	movf	??_vfpfcnvrt,w
 17692  1783  0084               	movwf	4
 17693  1784  085B               	movf	??_vfpfcnvrt+1,w
 17694  1785  0085               	movwf	5
 17695  1786  0012               	moviw fsr0++
 17696  1787  3A63               	xorlw	99
 17697  1788  1D03               	btfss	3,2
 17698  1789  2FAB               	goto	l5983
 17699                           
 17700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 17701  178A  0858               	movf	vfpfcnvrt@fmt,w
 17702  178B  0086               	movwf	6
 17703  178C  0187               	clrf	7
 17704  178D  3001               	movlw	1
 17705  178E  0781               	addwf	1,f
 17706  178F  3141               	addfsr 1,1
 17707  1790  1803               	skipnc
 17708  1791  0A81               	incf	1,f
 17709                           
 17710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17711  1792  0859               	movf	vfpfcnvrt@ap,w
 17712  1793  0086               	movwf	6
 17713  1794  0187               	clrf	7
 17714  1795  0801               	movf	1,w
 17715  1796  0084               	movwf	4
 17716  1797  0185               	clrf	5
 17717  1798  3002               	movlw	2
 17718  1799  0781               	addwf	1,f
 17719  179A  0800               	movf	0,w
 17720  179B  00DA               	movwf	??_vfpfcnvrt
 17721  179C  085A               	movf	??_vfpfcnvrt,w
 17722  179D  00DF               	movwf	vfpfcnvrt@c
 17723                           
 17724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 17725  179E  085F               	movf	vfpfcnvrt@c,w
 17726  179F  00DA               	movwf	??_vfpfcnvrt
 17727  17A0  085A               	movf	??_vfpfcnvrt,w
 17728  17A1  00D2               	movwf	ctoa@c
 17729  17A2  0860               	movf	vfpfcnvrt@fp,w
 17730  17A3  3193  2330         	fcall	_ctoa
 17731  17A5  0140               	movlb	0	; select bank0
 17732  17A6  0853               	movf	?_ctoa+1,w
 17733  17A7  00D9               	movwf	?_vfpfcnvrt+1
 17734  17A8  0852               	movf	?_ctoa,w
 17735  17A9  00D8               	movwf	?_vfpfcnvrt
 17736  17AA  0008               	return
 17737  17AB                     l5983:	
 17738                           
 17739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 17740  17AB  0858               	movf	vfpfcnvrt@fmt,w
 17741  17AC  0086               	movwf	6
 17742  17AD  0187               	clrf	7
 17743  17AE  3F40               	moviw [0]fsr1
 17744  17AF  00DA               	movwf	??_vfpfcnvrt
 17745  17B0  3F41               	moviw [1]fsr1
 17746  17B1  00DB               	movwf	??_vfpfcnvrt+1
 17747  17B2  085A               	movf	??_vfpfcnvrt,w
 17748  17B3  0084               	movwf	4
 17749  17B4  085B               	movf	??_vfpfcnvrt+1,w
 17750  17B5  0085               	movwf	5
 17751  17B6  0012               	moviw fsr0++
 17752  17B7  3A25               	xorlw	37
 17753  17B8  1D03               	btfss	3,2
 17754  17B9  2FD2               	goto	l5993
 17755                           
 17756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 17757  17BA  0858               	movf	vfpfcnvrt@fmt,w
 17758  17BB  0086               	movwf	6
 17759  17BC  0187               	clrf	7
 17760  17BD  3001               	movlw	1
 17761  17BE  0781               	addwf	1,f
 17762  17BF  3141               	addfsr 1,1
 17763  17C0  1803               	skipnc
 17764  17C1  0A81               	incf	1,f
 17765                           
 17766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 17767  17C2  3025               	movlw	37
 17768  17C3  00B9               	movwf	fputc@c
 17769  17C4  3000               	movlw	0
 17770  17C5  00BA               	movwf	fputc@c+1
 17771  17C6  0860               	movf	vfpfcnvrt@fp,w
 17772  17C7  00DA               	movwf	??_vfpfcnvrt
 17773  17C8  085A               	movf	??_vfpfcnvrt,w
 17774  17C9  00BB               	movwf	fputc@fp
 17775  17CA  3194  2462         	fcall	_fputc
 17776  17CC                     l5989:	
 17777                           
 17778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 17779  17CC  3001               	movlw	1
 17780  17CD  0140               	movlb	0	; select bank0
 17781  17CE  00D8               	movwf	?_vfpfcnvrt
 17782  17CF  3000               	movlw	0
 17783  17D0  00D9               	movwf	?_vfpfcnvrt+1
 17784  17D1  0008               	return
 17785  17D2                     l5993:	
 17786                           
 17787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 17788  17D2  0858               	movf	vfpfcnvrt@fmt,w
 17789  17D3  0086               	movwf	6
 17790  17D4  0187               	clrf	7
 17791  17D5  3001               	movlw	1
 17792  17D6  0781               	addwf	1,f
 17793  17D7  3141               	addfsr 1,1
 17794  17D8  1803               	skipnc
 17795  17D9  0A81               	incf	1,f
 17796                           
 17797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 17798  17DA  01D8               	clrf	?_vfpfcnvrt
 17799  17DB  01D9               	clrf	?_vfpfcnvrt+1
 17800  17DC  0008               	return
 17801  17DD                     l5999:	
 17802                           
 17803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 17804  17DD  0858               	movf	vfpfcnvrt@fmt,w
 17805  17DE  0086               	movwf	6
 17806  17DF  0187               	clrf	7
 17807  17E0  3F40               	moviw [0]fsr1
 17808  17E1  00DA               	movwf	??_vfpfcnvrt
 17809  17E2  3F41               	moviw [1]fsr1
 17810  17E3  00DB               	movwf	??_vfpfcnvrt+1
 17811  17E4  085A               	movf	??_vfpfcnvrt,w
 17812  17E5  0084               	movwf	4
 17813  17E6  085B               	movf	??_vfpfcnvrt+1,w
 17814  17E7  0085               	movwf	5
 17815  17E8  0800               	movf	0,w	;code access
 17816  17E9  00DC               	movwf	??_vfpfcnvrt+2
 17817  17EA  01DD               	clrf	??_vfpfcnvrt+3
 17818  17EB  085C               	movf	??_vfpfcnvrt+2,w
 17819  17EC  00B9               	movwf	fputc@c
 17820  17ED  085D               	movf	??_vfpfcnvrt+3,w
 17821  17EE  00BA               	movwf	fputc@c+1
 17822  17EF  0860               	movf	vfpfcnvrt@fp,w
 17823  17F0  00DE               	movwf	??_vfpfcnvrt+4
 17824  17F1  085E               	movf	??_vfpfcnvrt+4,w
 17825  17F2  00BB               	movwf	fputc@fp
 17826  17F3  3194  2462  3197   	fcall	_fputc
 17827                           
 17828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 17829  17F6  0140               	movlb	0	; select bank0
 17830  17F7  0858               	movf	vfpfcnvrt@fmt,w
 17831  17F8  0086               	movwf	6
 17832  17F9  0187               	clrf	7
 17833  17FA  3001               	movlw	1
 17834  17FB  0781               	addwf	1,f
 17835  17FC  3141               	addfsr 1,1
 17836  17FD  1803               	skipnc
 17837  17FE  0A81               	incf	1,f
 17838  17FF  2FCC               	goto	l5989
 17839  1800                     __end_of_vfpfcnvrt:	
 17840                           
 17841                           	psect	text42
 17842  1330                     __ptext42:	
 17843 ;; *************** function _ctoa *****************
 17844 ;; Defined at:
 17845 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;  fp              1    wreg     PTR struct _IO_FILE
 17848 ;;		 -> NULL(0), 
 17849 ;;  c               1   50[BANK0 ] unsigned char 
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 17852 ;;		 -> NULL(0), 
 17853 ;;  w               2   53[BANK0 ] int 
 17854 ;;  l               2    0        int 
 17855 ;; Return value:  Size  Location     Type
 17856 ;;                  2   50[BANK0 ] int 
 17857 ;; Registers used:
 17858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17859 ;; Tracked objects:
 17860 ;;		On entry : 0/0
 17861 ;;		On exit  : 0/0
 17862 ;;		Unchanged: 0/0
 17863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17865 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17867 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17868 ;;Total ram usage:        6 bytes
 17869 ;; Hardware stack levels used:    1
 17870 ;; Hardware stack levels required when called:   13
 17871 ;; This function calls:
 17872 ;;		_pad
 17873 ;; This function is called by:
 17874 ;;		_vfpfcnvrt
 17875 ;; This function uses a non-reentrant model
 17876 ;;
 17877                           
 17878                           
 17879                           ;psect for function _ctoa
 17880  1330                     _ctoa:	
 17881                           
 17882                           ;incstack = 0
 17883 ;; hardware stack exceeded
 17884                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17885                           ;ctoa@fp stored from wreg
 17886  1330  0140               	movlb	0	; select bank0
 17887  1331  00D7               	movwf	ctoa@fp
 17888                           
 17889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17890  1332  0141               	movlb	1	; select bank1
 17891  1333  0825               	movf	_width^(0+128),w
 17892  1334  0426               	iorwf	(_width+1)^(0+128),w
 17893  1335  1D03               	btfss	3,2
 17894  1336  2B3F               	goto	l5955
 17895  1337  0826               	movf	(_width+1)^(0+128),w
 17896  1338  0140               	movlb	0	; select bank0
 17897  1339  00D6               	movwf	ctoa@w+1
 17898  133A  0141               	movlb	1	; select bank1
 17899  133B  0825               	movf	_width^(0+128),w
 17900  133C  0140               	movlb	0	; select bank0
 17901  133D  00D5               	movwf	ctoa@w
 17902  133E  2B48               	goto	l5957
 17903  133F                     l5955:	
 17904  133F  0825               	movf	_width^(0+128),w
 17905  1340  3EFF               	addlw	255
 17906  1341  0140               	movlb	0	; select bank0
 17907  1342  00D5               	movwf	ctoa@w
 17908  1343  30FF               	movlw	255
 17909  1344  0141               	movlb	1	; select bank1
 17910  1345  3D26               	addwfc	(_width+1)^(0+128),w
 17911  1346  0140               	movlb	0	; select bank0
 17912  1347  00D6               	movwf	ctoa@w+1
 17913  1348                     l5957:	
 17914                           
 17915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17916  1348  0852               	movf	ctoa@c,w
 17917  1349  00D4               	movwf	??_ctoa
 17918  134A  0854               	movf	??_ctoa,w
 17919  134B  0143               	movlb	3	; select bank3
 17920  134C  00A0               	movwf	_dbuf^(0+384)
 17921                           
 17922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17923  134D  01A1               	clrf	(_dbuf^(0+384)+1)
 17924                           
 17925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17926  134E  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 17927  134F  0140               	movlb	0	; select bank0
 17928  1350  00D4               	movwf	??_ctoa
 17929  1351  0854               	movf	??_ctoa,w
 17930  1352  00C9               	movwf	pad@buf
 17931  1353  0856               	movf	ctoa@w+1,w
 17932  1354  00CB               	movwf	pad@p+1
 17933  1355  0855               	movf	ctoa@w,w
 17934  1356  00CA               	movwf	pad@p
 17935  1357  0857               	movf	ctoa@fp,w
 17936  1358  3195  2572         	fcall	_pad
 17937  135A  0140               	movlb	0	; select bank0
 17938  135B  084A               	movf	?_pad+1,w
 17939  135C  00D3               	movwf	?_ctoa+1
 17940  135D  0849               	movf	?_pad,w
 17941  135E  00D2               	movwf	?_ctoa
 17942  135F  0008               	return
 17943  1360                     __end_of_ctoa:	
 17944                           
 17945                           	psect	text43
 17946  1572                     __ptext43:	
 17947 ;; *************** function _pad *****************
 17948 ;; Defined at:
 17949 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17950 ;; Parameters:    Size  Location     Type
 17951 ;;  fp              1    wreg     PTR struct _IO_FILE
 17952 ;;		 -> NULL(0), 
 17953 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 17954 ;;		 -> dbuf(32), 
 17955 ;;  p               2   42[BANK0 ] int 
 17956 ;; Auto vars:     Size  Location     Type
 17957 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 17958 ;;		 -> NULL(0), 
 17959 ;;  w               2   47[BANK0 ] int 
 17960 ;;  i               2   45[BANK0 ] int 
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  2   41[BANK0 ] int 
 17963 ;; Registers used:
 17964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17965 ;; Tracked objects:
 17966 ;;		On entry : 0/0
 17967 ;;		On exit  : 0/0
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17970 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17971 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17973 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17974 ;;Total ram usage:        9 bytes
 17975 ;; Hardware stack levels used:    1
 17976 ;; Hardware stack levels required when called:   12
 17977 ;; This function calls:
 17978 ;;		_fputc
 17979 ;;		_fputs
 17980 ;;		_strlen
 17981 ;; This function is called by:
 17982 ;;		_ctoa
 17983 ;; This function uses a non-reentrant model
 17984 ;;
 17985                           
 17986                           
 17987                           ;psect for function _pad
 17988  1572                     _pad:	
 17989                           
 17990                           ;incstack = 0
 17991 ;; hardware stack exceeded
 17992                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17993                           ;pad@fp stored from wreg
 17994  1572  0140               	movlb	0	; select bank0
 17995  1573  00D1               	movwf	pad@fp
 17996                           
 17997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17998  1574  0141               	movlb	1	; select bank1
 17999  1575  1C27               	btfss	_flags^(0+128),0
 18000  1576  2D80               	goto	l5933
 18001                           
 18002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18003  1577  0140               	movlb	0	; select bank0
 18004  1578  0851               	movf	pad@fp,w
 18005  1579  00CC               	movwf	??_pad
 18006  157A  084C               	movf	??_pad,w
 18007  157B  00C1               	movwf	fputs@fp
 18008  157C  0849               	movf	pad@buf,w
 18009  157D  3192  225E  3195   	fcall	_fputs
 18010  1580                     l5933:	
 18011                           
 18012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18013  1580  0140               	movlb	0	; select bank0
 18014  1581  1BCB               	btfsc	pad@p+1,7
 18015  1582  2D88               	goto	l5937
 18016  1583  084B               	movf	pad@p+1,w
 18017  1584  00D0               	movwf	pad@w+1
 18018  1585  084A               	movf	pad@p,w
 18019  1586  00CF               	movwf	pad@w
 18020  1587  2D8A               	goto	l1470
 18021  1588                     l5937:	
 18022  1588  01CF               	clrf	pad@w
 18023  1589  01D0               	clrf	pad@w+1
 18024  158A                     l1470:	
 18025                           
 18026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18027  158A  01CD               	clrf	pad@i
 18028  158B  01CE               	clrf	pad@i+1
 18029  158C                     l5943:	
 18030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18031                           
 18032                           
 18033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18034  158C  084E               	movf	pad@i+1,w
 18035  158D  3A80               	xorlw	128
 18036  158E  00CC               	movwf	??_pad
 18037  158F  0850               	movf	pad@w+1,w
 18038  1590  3A80               	xorlw	128
 18039  1591  024C               	subwf	??_pad,w
 18040  1592  1D03               	skipz
 18041  1593  2D96               	goto	u5275
 18042  1594  084F               	movf	pad@w,w
 18043  1595  024D               	subwf	pad@i,w
 18044  1596                     u5275:	
 18045  1596  1803               	btfsc	3,0
 18046  1597  2DAA               	goto	l1473
 18047                           
 18048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18049  1598  3020               	movlw	32
 18050  1599  0140               	movlb	0	; select bank0
 18051  159A  00B9               	movwf	fputc@c
 18052  159B  3000               	movlw	0
 18053  159C  00BA               	movwf	fputc@c+1
 18054  159D  0851               	movf	pad@fp,w
 18055  159E  00CC               	movwf	??_pad
 18056  159F  084C               	movf	??_pad,w
 18057  15A0  00BB               	movwf	fputc@fp
 18058  15A1  3194  2462  3195   	fcall	_fputc
 18059                           
 18060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18061  15A4  3001               	movlw	1
 18062  15A5  0140               	movlb	0	; select bank0
 18063  15A6  07CD               	addwf	pad@i,f
 18064  15A7  3000               	movlw	0
 18065  15A8  3DCE               	addwfc	pad@i+1,f
 18066  15A9  2D8C               	goto	l5943
 18067  15AA                     l1473:	
 18068                           
 18069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18070  15AA  0141               	movlb	1	; select bank1
 18071  15AB  1827               	btfsc	_flags^(0+128),0
 18072  15AC  2DB6               	goto	l5947
 18073                           
 18074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18075  15AD  0140               	movlb	0	; select bank0
 18076  15AE  0851               	movf	pad@fp,w
 18077  15AF  00CC               	movwf	??_pad
 18078  15B0  084C               	movf	??_pad,w
 18079  15B1  00C1               	movwf	fputs@fp
 18080  15B2  0849               	movf	pad@buf,w
 18081  15B3  3192  225E  3195   	fcall	_fputs
 18082  15B6                     l5947:	
 18083                           
 18084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18085  15B6  0140               	movlb	0	; select bank0
 18086  15B7  0849               	movf	pad@buf,w
 18087  15B8  00A0               	movwf	strlen@s
 18088  15B9  3001               	movlw	1
 18089  15BA  00A1               	movwf	strlen@s+1
 18090  15BB  3190  208E         	fcall	_strlen
 18091  15BD  0140               	movlb	0	; select bank0
 18092  15BE  084F               	movf	pad@w,w
 18093  15BF  0720               	addwf	?_strlen,w
 18094  15C0  00C9               	movwf	?_pad
 18095  15C1  0850               	movf	pad@w+1,w
 18096  15C2  3D21               	addwfc	?_strlen+1,w
 18097  15C3  00CA               	movwf	?_pad+1
 18098  15C4  0008               	return
 18099  15C5                     __end_of_pad:	
 18100                           
 18101                           	psect	text44
 18102  108E                     __ptext44:	
 18103 ;; *************** function _strlen *****************
 18104 ;; Defined at:
 18105 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 18106 ;; Parameters:    Size  Location     Type
 18107 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18108 ;;		 -> dbuf(32), STR_8(9), 
 18109 ;; Auto vars:     Size  Location     Type
 18110 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18111 ;;		 -> dbuf(32), STR_8(9), 
 18112 ;; Return value:  Size  Location     Type
 18113 ;;                  2    0[BANK0 ] unsigned int 
 18114 ;; Registers used:
 18115 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18116 ;; Tracked objects:
 18117 ;;		On entry : 0/0
 18118 ;;		On exit  : 0/0
 18119 ;;		Unchanged: 0/0
 18120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18123 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18125 ;;Total ram usage:        5 bytes
 18126 ;; Hardware stack levels used:    1
 18127 ;; Hardware stack levels required when called:    4
 18128 ;; This function calls:
 18129 ;;		Nothing
 18130 ;; This function is called by:
 18131 ;;		_pad
 18132 ;;		_TM1650_scrollPrint
 18133 ;; This function uses a non-reentrant model
 18134 ;;
 18135                           
 18136                           
 18137                           ;psect for function _strlen
 18138  108E                     _strlen:	
 18139                           
 18140                           ;incstack = 0
 18141                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18142  108E  0140               	movlb	0	; select bank0
 18143  108F  0821               	movf	strlen@s+1,w
 18144  1090  00A4               	movwf	strlen@a+1
 18145  1091  0820               	movf	strlen@s,w
 18146  1092  00A3               	movwf	strlen@a
 18147  1093                     l4075:	
 18148  1093  0820               	movf	strlen@s,w
 18149  1094  0084               	movwf	4
 18150  1095  0821               	movf	strlen@s+1,w
 18151  1096  0085               	movwf	5
 18152  1097  0012               	moviw fsr0++
 18153  1098  1903               	btfsc	3,2
 18154  1099  289F               	goto	l4077
 18155  109A  3001               	movlw	1
 18156  109B  07A0               	addwf	strlen@s,f
 18157  109C  3000               	movlw	0
 18158  109D  3DA1               	addwfc	strlen@s+1,f
 18159  109E  2893               	goto	l4075
 18160  109F                     l4077:	
 18161  109F  0823               	movf	strlen@a,w
 18162  10A0  0220               	subwf	strlen@s,w
 18163  10A1  00A0               	movwf	?_strlen
 18164  10A2  0824               	movf	strlen@a+1,w
 18165  10A3  3B21               	subwfb	strlen@s+1,w
 18166  10A4  00A1               	movwf	?_strlen+1
 18167  10A5  0008               	return
 18168  10A6                     __end_of_strlen:	
 18169                           
 18170                           	psect	text45
 18171  125E                     __ptext45:	
 18172 ;; *************** function _fputs *****************
 18173 ;; Defined at:
 18174 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 18175 ;; Parameters:    Size  Location     Type
 18176 ;;  s               1    wreg     PTR const unsigned char 
 18177 ;;		 -> dbuf(32), 
 18178 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 18179 ;;		 -> NULL(0), 
 18180 ;; Auto vars:     Size  Location     Type
 18181 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 18182 ;;		 -> dbuf(32), 
 18183 ;;  i               2   38[BANK0 ] int 
 18184 ;;  c               1   37[BANK0 ] unsigned char 
 18185 ;; Return value:  Size  Location     Type
 18186 ;;                  2   33[BANK0 ] int 
 18187 ;; Registers used:
 18188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18189 ;; Tracked objects:
 18190 ;;		On entry : 0/0
 18191 ;;		On exit  : 0/0
 18192 ;;		Unchanged: 0/0
 18193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18194 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18195 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18196 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18198 ;;Total ram usage:        8 bytes
 18199 ;; Hardware stack levels used:    1
 18200 ;; Hardware stack levels required when called:   11
 18201 ;; This function calls:
 18202 ;;		_fputc
 18203 ;; This function is called by:
 18204 ;;		_pad
 18205 ;; This function uses a non-reentrant model
 18206 ;;
 18207                           
 18208                           
 18209                           ;psect for function _fputs
 18210  125E                     _fputs:	
 18211                           
 18212                           ;incstack = 0
 18213 ;; hardware stack exceeded
 18214                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18215                           ;fputs@s stored from wreg
 18216  125E  0140               	movlb	0	; select bank0
 18217  125F  00C8               	movwf	fputs@s
 18218  1260  01C6               	clrf	fputs@i
 18219  1261  01C7               	clrf	fputs@i+1
 18220  1262                     l5927:	
 18221  1262  0846               	movf	fputs@i,w
 18222  1263  0748               	addwf	fputs@s,w
 18223  1264  00C2               	movwf	??_fputs
 18224  1265  0842               	movf	??_fputs,w
 18225  1266  0086               	movwf	6
 18226  1267  3001               	movlw	1	; select bank2/3
 18227  1268  0087               	movwf	7
 18228  1269  0801               	movf	1,w
 18229  126A  00C3               	movwf	??_fputs+1
 18230  126B  0843               	movf	??_fputs+1,w
 18231  126C  00C5               	movwf	fputs@c
 18232  126D  0845               	movf	fputs@c,w
 18233  126E  1903               	btfsc	3,2
 18234  126F  0008               	return
 18235  1270  0845               	movf	fputs@c,w
 18236  1271  00C2               	movwf	??_fputs
 18237  1272  01C3               	clrf	??_fputs+1
 18238  1273  0842               	movf	??_fputs,w
 18239  1274  00B9               	movwf	fputc@c
 18240  1275  0843               	movf	??_fputs+1,w
 18241  1276  00BA               	movwf	fputc@c+1
 18242  1277  0841               	movf	fputs@fp,w
 18243  1278  00C4               	movwf	??_fputs+2
 18244  1279  0844               	movf	??_fputs+2,w
 18245  127A  00BB               	movwf	fputc@fp
 18246  127B  3194  2462  3192   	fcall	_fputc
 18247  127E  3001               	movlw	1
 18248  127F  0140               	movlb	0	; select bank0
 18249  1280  07C6               	addwf	fputs@i,f
 18250  1281  3000               	movlw	0
 18251  1282  3DC7               	addwfc	fputs@i+1,f
 18252  1283  2A62               	goto	l5927
 18253  1284                     __end_of_fputs:	
 18254                           
 18255                           	psect	text46
 18256  1462                     __ptext46:	
 18257 ;; *************** function _fputc *****************
 18258 ;; Defined at:
 18259 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 18260 ;; Parameters:    Size  Location     Type
 18261 ;;  c               2   25[BANK0 ] int 
 18262 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 18263 ;;		 -> NULL(0), 
 18264 ;; Auto vars:     Size  Location     Type
 18265 ;;		None
 18266 ;; Return value:  Size  Location     Type
 18267 ;;                  2   25[BANK0 ] int 
 18268 ;; Registers used:
 18269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18270 ;; Tracked objects:
 18271 ;;		On entry : 0/0
 18272 ;;		On exit  : 0/0
 18273 ;;		Unchanged: 0/0
 18274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18275 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18277 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18278 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18279 ;;Total ram usage:        8 bytes
 18280 ;; Hardware stack levels used:    1
 18281 ;; Hardware stack levels required when called:   10
 18282 ;; This function calls:
 18283 ;;		_putch
 18284 ;; This function is called by:
 18285 ;;		_pad
 18286 ;;		_vfpfcnvrt
 18287 ;;		_fputs
 18288 ;; This function uses a non-reentrant model
 18289 ;;
 18290                           
 18291                           
 18292                           ;psect for function _fputc
 18293  1462                     _fputc:	
 18294                           
 18295                           ;incstack = 0
 18296                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18297  1462  0140               	movlb	0	; select bank0
 18298  1463  083B               	movf	fputc@fp,w
 18299  1464  1D03               	btfss	3,2
 18300  1465  083B               	movf	fputc@fp,w
 18301  1466  1D03               	btfss	3,2
 18302  1467  2C6C               	goto	l5913
 18303  1468  0839               	movf	fputc@c,w
 18304  1469  3192  2216         	fcall	_putch
 18305  146B  0008               	return
 18306  146C                     l5913:	
 18307  146C  083B               	movf	fputc@fp,w
 18308  146D  3E03               	addlw	3
 18309  146E  0086               	movwf	6
 18310  146F  0187               	clrf	7
 18311  1470  0016               	moviw fsr1++
 18312  1471  0401               	iorwf	1,w
 18313  1472  1903               	btfsc	3,2
 18314  1473  2C8F               	goto	l5917
 18315  1474  083B               	movf	fputc@fp,w
 18316  1475  3E03               	addlw	3
 18317  1476  0086               	movwf	6
 18318  1477  0187               	clrf	7
 18319  1478  3F40               	moviw [0]fsr1
 18320  1479  00BC               	movwf	??_fputc
 18321  147A  3F41               	moviw [1]fsr1
 18322  147B  00BD               	movwf	??_fputc+1
 18323  147C  0A3B               	incf	fputc@fp,w
 18324  147D  0086               	movwf	6
 18325  147E  0187               	clrf	7
 18326  147F  3F40               	moviw [0]fsr1
 18327  1480  00BE               	movwf	??_fputc+2
 18328  1481  3F41               	moviw [1]fsr1
 18329  1482  00BF               	movwf	??_fputc+3
 18330  1483  083F               	movf	??_fputc+3,w
 18331  1484  3A80               	xorlw	128
 18332  1485  00C0               	movwf	??_fputc+4
 18333  1486  083D               	movf	??_fputc+1,w
 18334  1487  3A80               	xorlw	128
 18335  1488  0240               	subwf	??_fputc+4,w
 18336  1489  1D03               	skipz
 18337  148A  2C8D               	goto	u5235
 18338  148B  083C               	movf	??_fputc,w
 18339  148C  023E               	subwf	??_fputc+2,w
 18340  148D                     u5235:	
 18341  148D  1803               	skipnc
 18342  148E  0008               	return
 18343  148F                     l5917:	
 18344  148F  0140               	movlb	0	; select bank0
 18345  1490  0A3B               	incf	fputc@fp,w
 18346  1491  0086               	movwf	6
 18347  1492  0187               	clrf	7
 18348  1493  3001               	movlw	1
 18349  1494  0781               	addwf	1,f
 18350  1495  3141               	addfsr 1,1
 18351  1496  1803               	skipnc
 18352  1497  0A81               	incf	1,f
 18353  1498  0008               	return
 18354  1499                     __end_of_fputc:	
 18355                           
 18356                           	psect	text47
 18357  1216                     __ptext47:	
 18358 ;; *************** function _putch *****************
 18359 ;; Defined at:
 18360 ;;		line 120 in file "tm1650.c"
 18361 ;; Parameters:    Size  Location     Type
 18362 ;;  n               1    wreg     unsigned char 
 18363 ;; Auto vars:     Size  Location     Type
 18364 ;;  n               1   24[BANK0 ] unsigned char 
 18365 ;; Return value:  Size  Location     Type
 18366 ;;                  1    wreg      void 
 18367 ;; Registers used:
 18368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18369 ;; Tracked objects:
 18370 ;;		On entry : 0/0
 18371 ;;		On exit  : 0/0
 18372 ;;		Unchanged: 0/0
 18373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18377 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18378 ;;Total ram usage:        2 bytes
 18379 ;; Hardware stack levels used:    1
 18380 ;; Hardware stack levels required when called:    9
 18381 ;; This function calls:
 18382 ;;		_TM1650_setDigit
 18383 ;; This function is called by:
 18384 ;;		_fputc
 18385 ;; This function uses a non-reentrant model
 18386 ;;
 18387                           
 18388                           
 18389                           ;psect for function _putch
 18390  1216                     _putch:	
 18391                           
 18392                           ;incstack = 0
 18393                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18394                           ;putch@n stored from wreg
 18395  1216  0140               	movlb	0	; select bank0
 18396  1217  00B8               	movwf	putch@n
 18397                           
 18398                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 18399  1218  3004               	movlw	4
 18400  1219  0141               	movlb	1	; select bank1
 18401  121A  023A               	subwf	_position^(0+128),w
 18402  121B  1803               	skipnc
 18403  121C  2A24               	goto	l5899
 18404  121D  300D               	movlw	13
 18405  121E  0140               	movlb	0	; select bank0
 18406  121F  0638               	xorwf	putch@n,w
 18407  1220  1D03               	btfss	3,2
 18408  1221  0838               	movf	putch@n,w
 18409  1222  1D03               	btfss	3,2
 18410  1223  2A26               	goto	l5901
 18411  1224                     l5899:	
 18412                           
 18413                           ;tm1650.c: 123:         position = 0;
 18414  1224  0141               	movlb	1	; select bank1
 18415  1225  01BA               	clrf	_position^(0+128)
 18416  1226                     l5901:	
 18417                           
 18418                           ;tm1650.c: 125:     if(n != '\r'){
 18419  1226  300D               	movlw	13
 18420  1227  0140               	movlb	0	; select bank0
 18421  1228  0638               	xorwf	putch@n,w
 18422  1229  1903               	btfsc	3,2
 18423  122A  0008               	return
 18424                           
 18425                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 18426  122B  0838               	movf	putch@n,w
 18427  122C  00B7               	movwf	??_putch
 18428  122D  0837               	movf	??_putch,w
 18429  122E  00B4               	movwf	TM1650_setDigit@data
 18430  122F  0141               	movlb	1	; select bank1
 18431  1230  083A               	movf	_position^(0+128),w
 18432  1231  319F  27B3         	fcall	_TM1650_setDigit
 18433                           
 18434                           ;tm1650.c: 127:         position++;
 18435  1233  3001               	movlw	1
 18436  1234  0140               	movlb	0	; select bank0
 18437  1235  00B7               	movwf	??_putch
 18438  1236  0837               	movf	??_putch,w
 18439  1237  0141               	movlb	1	; select bank1
 18440  1238  07BA               	addwf	_position^(0+128),f
 18441  1239  0008               	return
 18442  123A                     __end_of_putch:	
 18443                           
 18444                           	psect	text48
 18445  1FB3                     __ptext48:	
 18446 ;; *************** function _TM1650_setDigit *****************
 18447 ;; Defined at:
 18448 ;;		line 95 in file "tm1650.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;  digit           1    wreg     unsigned char 
 18451 ;;  data            1   20[BANK0 ] unsigned char 
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;  digit           1   22[BANK0 ] unsigned char 
 18454 ;; Return value:  Size  Location     Type
 18455 ;;                  1    wreg      void 
 18456 ;; Registers used:
 18457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18458 ;; Tracked objects:
 18459 ;;		On entry : 0/0
 18460 ;;		On exit  : 0/0
 18461 ;;		Unchanged: 0/0
 18462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18463 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18467 ;;Total ram usage:        3 bytes
 18468 ;; Hardware stack levels used:    1
 18469 ;; Hardware stack levels required when called:    8
 18470 ;; This function calls:
 18471 ;;		_writeData
 18472 ;; This function is called by:
 18473 ;;		_putch
 18474 ;; This function uses a non-reentrant model
 18475 ;;
 18476                           
 18477                           
 18478                           ;psect for function _TM1650_setDigit
 18479  1FB3                     _TM1650_setDigit:	
 18480                           
 18481                           ;incstack = 0
 18482                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18483                           ;TM1650_setDigit@digit stored from wreg
 18484  1FB3  0140               	movlb	0	; select bank0
 18485  1FB4  00B6               	movwf	TM1650_setDigit@digit
 18486                           
 18487                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 18488  1FB5  0834               	movf	TM1650_setDigit@data,w
 18489  1FB6  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 18490  1FB7  0084               	movwf	4
 18491  1FB8  3097               	movlw	high ((_charTable+65504)| (0+32768))
 18492  1FB9  1803               	skipnc
 18493  1FBA  3E01               	addlw	1
 18494  1FBB  0085               	movwf	5
 18495  1FBC  0800               	movf	0,w	;code access
 18496  1FBD  00B5               	movwf	??_TM1650_setDigit
 18497  1FBE  0835               	movf	??_TM1650_setDigit,w
 18498  1FBF  00AE               	movwf	writeData@data
 18499  1FC0  0836               	movf	TM1650_setDigit@digit,w
 18500  1FC1  3E34               	addlw	52
 18501  1FC2  3190  20DB         	fcall	_writeData
 18502  1FC4  0008               	return
 18503  1FC5                     __end_of_TM1650_setDigit:	
 18504                           
 18505                           	psect	text49
 18506  101C                     __ptext49:	
 18507 ;; *************** function _TM1650_enable *****************
 18508 ;; Defined at:
 18509 ;;		line 41 in file "tm1650.c"
 18510 ;; Parameters:    Size  Location     Type
 18511 ;;  enable          1    wreg     _Bool 
 18512 ;; Auto vars:     Size  Location     Type
 18513 ;;  enable          1   20[BANK0 ] _Bool 
 18514 ;; Return value:  Size  Location     Type
 18515 ;;                  1    wreg      void 
 18516 ;; Registers used:
 18517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18518 ;; Tracked objects:
 18519 ;;		On entry : 0/0
 18520 ;;		On exit  : 0/0
 18521 ;;		Unchanged: 0/0
 18522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18524 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18527 ;;Total ram usage:        1 bytes
 18528 ;; Hardware stack levels used:    1
 18529 ;; Hardware stack levels required when called:    8
 18530 ;; This function calls:
 18531 ;;		_writeData
 18532 ;; This function is called by:
 18533 ;;		_CONTROLLER_task
 18534 ;;		_TM1650_init
 18535 ;; This function uses a non-reentrant model
 18536 ;;
 18537                           
 18538                           
 18539                           ;psect for function _TM1650_enable
 18540  101C                     _TM1650_enable:	
 18541                           
 18542                           ;incstack = 0
 18543                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18544                           ;TM1650_enable@enable stored from wreg
 18545  101C  0140               	movlb	0	; select bank0
 18546  101D  00B4               	movwf	TM1650_enable@enable
 18547                           
 18548                           ;tm1650.c: 42:     if(enable){
 18549  101E  0834               	movf	TM1650_enable@enable,w
 18550  101F  1903               	btfsc	3,2
 18551  1020  282A               	goto	l6481
 18552                           
 18553                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 18554  1021  01AE               	clrf	writeData@data
 18555  1022  0AAE               	incf	writeData@data,f
 18556  1023  3024               	movlw	36
 18557  1024  3190  20DB         	fcall	_writeData
 18558                           
 18559                           ;tm1650.c: 44:         tm1650_status = 1;
 18560  1026  0141               	movlb	1	; select bank1
 18561  1027  01BB               	clrf	_tm1650_status^(0+128)
 18562  1028  0ABB               	incf	_tm1650_status^(0+128),f
 18563                           
 18564                           ;tm1650.c: 45:     } else {
 18565  1029  0008               	return
 18566  102A                     l6481:	
 18567                           
 18568                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 18569  102A  01AE               	clrf	writeData@data
 18570  102B  3024               	movlw	36
 18571  102C  3190  20DB         	fcall	_writeData
 18572                           
 18573                           ;tm1650.c: 47:         tm1650_status = 0;
 18574  102E  0141               	movlb	1	; select bank1
 18575  102F  01BB               	clrf	_tm1650_status^(0+128)
 18576  1030  0008               	return
 18577  1031                     __end_of_TM1650_enable:	
 18578                           
 18579                           	psect	text50
 18580  16B5                     __ptext50:	
 18581 ;; *************** function _CONTROL_DMX *****************
 18582 ;; Defined at:
 18583 ;;		line 122 in file "controller.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      _Bool 
 18590 ;; Registers used:
 18591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18601 ;;Total ram usage:        2 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; Hardware stack levels required when called:   10
 18604 ;; This function calls:
 18605 ;;		_BUTTONS_isHeld
 18606 ;;		_CLOCK_getTime
 18607 ;;		_address_dec
 18608 ;;		_address_inc
 18609 ;; This function is called by:
 18610 ;;		_CONTROLLER_task
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           
 18615                           ;psect for function _CONTROL_DMX
 18616  16B5                     _CONTROL_DMX:	
 18617                           
 18618                           ;controller.c: 124:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 18619                           
 18620                           ;incstack = 0
 18621                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18622  16B5  0141               	movlb	1	; select bank1
 18623  16B6  0844               	movf	_up^(0+128),w
 18624  16B7  319F  2782  3196   	fcall	_BUTTONS_isHeld
 18625  16BA  3A00               	xorlw	0
 18626  16BB  1903               	skipnz
 18627  16BC  2F13               	goto	l6381
 18628  16BD  319E  26BA  3196   	fcall	_CLOCK_getTime
 18629  16C0  0141               	movlb	1	; select bank1
 18630  16C1  082F               	movf	_lastIncTime^(0+128),w
 18631  16C2  0140               	movlb	0	; select bank0
 18632  16C3  0220               	subwf	?_CLOCK_getTime,w
 18633  16C4  00B7               	movwf	??_CONTROL_DMX
 18634  16C5  0141               	movlb	1	; select bank1
 18635  16C6  0830               	movf	(_lastIncTime+1)^(0+128),w
 18636  16C7  0140               	movlb	0	; select bank0
 18637  16C8  3B21               	subwfb	?_CLOCK_getTime+1,w
 18638  16C9  00B8               	movwf	??_CONTROL_DMX+1
 18639  16CA  0838               	movf	??_CONTROL_DMX+1,w
 18640  16CB  0141               	movlb	1	; select bank1
 18641  16CC  0269               	subwf	(_incInterval+1)^(0+128),w
 18642  16CD  1D03               	skipz
 18643  16CE  2ED3               	goto	u5595
 18644  16CF  0140               	movlb	0	; select bank0
 18645  16D0  0837               	movf	??_CONTROL_DMX,w
 18646  16D1  0141               	movlb	1	; select bank1
 18647  16D2  0268               	subwf	_incInterval^(0+128),w
 18648  16D3                     u5595:	
 18649  16D3  1803               	skipnc
 18650  16D4  2F13               	goto	l6381
 18651                           
 18652                           ;controller.c: 125:         address_inc();
 18653  16D5  3190  20A6  3196   	fcall	_address_inc
 18654  16D8  2EF4               	goto	L14
 18655  16D9                     l6383:	
 18656                           ;controller.c: 127:         if(incInterval > 20){
 18657                           
 18658                           ;controller.c: 126:         lastIncTime = CLOCK_getTime();
 18659                           
 18660  16D9  319E  26BA  3196   	fcall	_CLOCK_getTime
 18661  16DC  0141               	movlb	1	; select bank1
 18662  16DD  082F               	movf	_lastIncTime^(0+128),w
 18663  16DE  0140               	movlb	0	; select bank0
 18664  16DF  0220               	subwf	?_CLOCK_getTime,w
 18665  16E0  00B7               	movwf	??_CONTROL_DMX
 18666  16E1  0141               	movlb	1	; select bank1
 18667  16E2  0830               	movf	(_lastIncTime+1)^(0+128),w
 18668  16E3  0140               	movlb	0	; select bank0
 18669  16E4  3B21               	subwfb	?_CLOCK_getTime+1,w
 18670  16E5  00B8               	movwf	??_CONTROL_DMX+1
 18671  16E6  0838               	movf	??_CONTROL_DMX+1,w
 18672  16E7  0141               	movlb	1	; select bank1
 18673  16E8  0269               	subwf	(_incInterval+1)^(0+128),w
 18674  16E9  1D03               	skipz
 18675  16EA  2EEF               	goto	u5625
 18676  16EB  0140               	movlb	0	; select bank0
 18677  16EC  0837               	movf	??_CONTROL_DMX,w
 18678  16ED  0141               	movlb	1	; select bank1
 18679  16EE  0268               	subwf	_incInterval^(0+128),w
 18680  16EF                     u5625:	
 18681  16EF  1803               	skipnc
 18682  16F0  2F1B               	goto	l6397
 18683                           
 18684                           ;controller.c: 132:         address_dec();
 18685  16F1  3190  2076  3196   	fcall	_address_dec
 18686  16F4                     L14:	
 18687                           
 18688                           ;controller.c: 133:         lastIncTime = CLOCK_getTime();
 18689  16F4  319E  26BA  3196   	fcall	_CLOCK_getTime
 18690  16F7  0140               	movlb	0	; select bank0
 18691  16F8  0821               	movf	?_CLOCK_getTime+1,w
 18692  16F9  0141               	movlb	1	; select bank1
 18693  16FA  00B0               	movwf	(_lastIncTime+1)^(0+128)
 18694  16FB  0140               	movlb	0	; select bank0
 18695  16FC  0820               	movf	?_CLOCK_getTime,w
 18696  16FD  0141               	movlb	1	; select bank1
 18697  16FE  00AF               	movwf	_lastIncTime^(0+128)
 18698                           
 18699                           ;controller.c: 134:         if(incInterval > 20){
 18700  16FF  0869               	movf	(_incInterval+1)^(0+128),w
 18701  1700  3A80               	xorlw	128
 18702  1701  0140               	movlb	0	; select bank0
 18703  1702  00B7               	movwf	??_CONTROL_DMX
 18704  1703  3080               	movlw	128
 18705  1704  0237               	subwf	??_CONTROL_DMX,w
 18706  1705  1D03               	skipz
 18707  1706  2F0A               	goto	u5635
 18708  1707  3015               	movlw	21
 18709  1708  0141               	movlb	1	; select bank1
 18710  1709  0268               	subwf	_incInterval^(0+128),w
 18711  170A                     u5635:	
 18712  170A  1C03               	skipc
 18713  170B  2F11               	goto	l1049
 18714                           
 18715                           ;controller.c: 128:             incInterval-=1;
 18716  170C  30FF               	movlw	255
 18717  170D  0141               	movlb	1	; select bank1
 18718  170E  07E8               	addwf	_incInterval^(0+128),f
 18719  170F  30FF               	movlw	255
 18720  1710  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 18721  1711                     l1049:	
 18722                           ;controller.c: 129:         }
 18723                           
 18724                           
 18725                           ;controller.c: 130:         return 1;
 18726  1711  3001               	movlw	1
 18727  1712  0008               	return
 18728  1713                     l6381:	
 18729  1713  0141               	movlb	1	; select bank1
 18730  1714  0843               	movf	_down^(0+128),w
 18731  1715  319F  2782  3196   	fcall	_BUTTONS_isHeld
 18732  1718  3A00               	xorlw	0
 18733  1719  1D03               	btfss	3,2
 18734  171A  2ED9               	goto	l6383
 18735  171B                     l6397:	
 18736  171B  0141               	movlb	1	; select bank1
 18737  171C  0842               	movf	_enter^(0+128),w
 18738  171D  319F  2782  3196   	fcall	_BUTTONS_isHeld
 18739  1720  3A00               	xorlw	0
 18740  1721  1903               	skipnz
 18741  1722  2F2A               	goto	l6405
 18742                           
 18743                           ;controller.c: 139:         address = 1;
 18744  1723  3001               	movlw	1
 18745  1724  0141               	movlb	1	; select bank1
 18746  1725  00EA               	movwf	_address^(0+128)
 18747  1726  3000               	movlw	0
 18748  1727  00EB               	movwf	(_address^(0+128)+1)
 18749                           
 18750                           ;controller.c: 140:         return 1;
 18751  1728  3001               	movlw	1
 18752  1729  0008               	return
 18753  172A                     l6405:	
 18754  172A  0141               	movlb	1	; select bank1
 18755  172B  083F               	movf	_upState^(0+128),w
 18756  172C  1903               	btfsc	3,2
 18757  172D  2F32               	goto	l6415
 18758                           
 18759                           ;controller.c: 142:         address_inc();
 18760  172E  3190  20A6  3196   	fcall	_address_inc
 18761  1731  2F11               	goto	l1049
 18762  1732                     l6415:	
 18763  1732  083E               	movf	_downState^(0+128),w
 18764  1733  1903               	btfsc	3,2
 18765  1734  2F39               	goto	l6425
 18766                           
 18767                           ;controller.c: 146:         address_dec();
 18768  1735  3190  2076  3196   	fcall	_address_dec
 18769  1738  2F11               	goto	l1049
 18770  1739                     l6425:	
 18771  1739  083C               	movf	_enterState^(0+128),w
 18772  173A  1D03               	btfss	3,2
 18773  173B  2F11               	goto	l1049
 18774  173C  083F               	movf	_upState^(0+128),w
 18775  173D  1D03               	btfss	3,2
 18776  173E  083E               	movf	_downState^(0+128),w
 18777  173F  1D03               	btfss	3,2
 18778  1740  2F55               	goto	l6443
 18779  1741  0843               	movf	_down^(0+128),w
 18780  1742  319F  2782  3196   	fcall	_BUTTONS_isHeld
 18781  1745  3A00               	xorlw	0
 18782  1746  1D03               	skipz
 18783  1747  2F55               	goto	l6443
 18784  1748  0141               	movlb	1	; select bank1
 18785  1749  0844               	movf	_up^(0+128),w
 18786  174A  319F  2782  3196   	fcall	_BUTTONS_isHeld
 18787  174D  3A00               	xorlw	0
 18788  174E  1D03               	skipz
 18789  174F  2F55               	goto	l6443
 18790                           
 18791                           ;controller.c: 151:         incInterval = 100;
 18792  1750  3064               	movlw	100
 18793  1751  0141               	movlb	1	; select bank1
 18794  1752  00E8               	movwf	_incInterval^(0+128)
 18795  1753  3000               	movlw	0
 18796  1754  00E9               	movwf	(_incInterval^(0+128)+1)
 18797  1755                     l6443:	
 18798                           ;controller.c: 152:     } else {
 18799                           
 18800                           
 18801                           ;controller.c: 153:         return 0;
 18802  1755  3000               	movlw	0
 18803  1756  0008               	return
 18804  1757                     __end_of_CONTROL_DMX:	
 18805                           
 18806                           	psect	text51
 18807  10A6                     __ptext51:	
 18808 ;; *************** function _address_inc *****************
 18809 ;; Defined at:
 18810 ;;		line 29 in file "dmx.c"
 18811 ;; Parameters:    Size  Location     Type
 18812 ;;		None
 18813 ;; Auto vars:     Size  Location     Type
 18814 ;;		None
 18815 ;; Return value:  Size  Location     Type
 18816 ;;                  1    wreg      void 
 18817 ;; Registers used:
 18818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18819 ;; Tracked objects:
 18820 ;;		On entry : 0/0
 18821 ;;		On exit  : 0/0
 18822 ;;		Unchanged: 0/0
 18823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18828 ;;Total ram usage:        0 bytes
 18829 ;; Hardware stack levels used:    1
 18830 ;; Hardware stack levels required when called:    9
 18831 ;; This function calls:
 18832 ;;		_TM1650_fastPrintNum
 18833 ;; This function is called by:
 18834 ;;		_CONTROL_DMX
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           
 18839                           ;psect for function _address_inc
 18840  10A6                     _address_inc:	
 18841                           
 18842                           ;dmx.c: 31:     if(address == 512)
 18843                           
 18844                           ;incstack = 0
 18845                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18846  10A6  3002               	movlw	2
 18847  10A7  0141               	movlb	1	; select bank1
 18848  10A8  066B               	xorwf	(_address+1)^(0+128),w
 18849  10A9  046A               	iorwf	_address^(0+128),w
 18850  10AA  1D03               	btfss	3,2
 18851  10AB  28B1               	goto	l6127
 18852                           
 18853                           ;dmx.c: 32:         address = 1;
 18854  10AC  3001               	movlw	1
 18855  10AD  00EA               	movwf	_address^(0+128)
 18856  10AE  3000               	movlw	0
 18857  10AF  00EB               	movwf	(_address^(0+128)+1)
 18858  10B0  28B5               	goto	l6129
 18859  10B1                     l6127:	
 18860                           
 18861                           ;dmx.c: 34:         address++;
 18862  10B1  3001               	movlw	1
 18863  10B2  07EA               	addwf	_address^(0+128),f
 18864  10B3  3000               	movlw	0
 18865  10B4  3DEB               	addwfc	(_address+1)^(0+128),f
 18866  10B5                     l6129:	
 18867                           
 18868                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 18869  10B5  086B               	movf	(_address+1)^(0+128),w
 18870  10B6  0140               	movlb	0	; select bank0
 18871  10B7  00B5               	movwf	TM1650_fastPrintNum@num+1
 18872  10B8  0141               	movlb	1	; select bank1
 18873  10B9  086A               	movf	_address^(0+128),w
 18874  10BA  0140               	movlb	0	; select bank0
 18875  10BB  00B4               	movwf	TM1650_fastPrintNum@num
 18876  10BC  3188  207A         	fcall	_TM1650_fastPrintNum
 18877  10BE  0008               	return
 18878  10BF                     __end_of_address_inc:	
 18879                           
 18880                           	psect	text52
 18881  1076                     __ptext52:	
 18882 ;; *************** function _address_dec *****************
 18883 ;; Defined at:
 18884 ;;		line 43 in file "dmx.c"
 18885 ;; Parameters:    Size  Location     Type
 18886 ;;		None
 18887 ;; Auto vars:     Size  Location     Type
 18888 ;;		None
 18889 ;; Return value:  Size  Location     Type
 18890 ;;                  1    wreg      void 
 18891 ;; Registers used:
 18892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18893 ;; Tracked objects:
 18894 ;;		On entry : 0/0
 18895 ;;		On exit  : 0/0
 18896 ;;		Unchanged: 0/0
 18897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18902 ;;Total ram usage:        0 bytes
 18903 ;; Hardware stack levels used:    1
 18904 ;; Hardware stack levels required when called:    9
 18905 ;; This function calls:
 18906 ;;		_TM1650_fastPrintNum
 18907 ;; This function is called by:
 18908 ;;		_CONTROL_DMX
 18909 ;; This function uses a non-reentrant model
 18910 ;;
 18911                           
 18912                           
 18913                           ;psect for function _address_dec
 18914  1076                     _address_dec:	
 18915                           
 18916                           ;dmx.c: 45:     if(address == 1)
 18917                           
 18918                           ;incstack = 0
 18919                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18920  1076  0141               	movlb	1	; select bank1
 18921  1077  036A               	decf	_address^(0+128),w
 18922  1078  046B               	iorwf	(_address+1)^(0+128),w
 18923  1079  1D03               	btfss	3,2
 18924  107A  2880               	goto	l6135
 18925                           
 18926                           ;dmx.c: 46:         address = 512;
 18927  107B  3000               	movlw	0
 18928  107C  00EA               	movwf	_address^(0+128)
 18929  107D  3002               	movlw	2
 18930  107E  00EB               	movwf	(_address^(0+128)+1)
 18931  107F  2884               	goto	l6137
 18932  1080                     l6135:	
 18933                           
 18934                           ;dmx.c: 48:         address--;
 18935  1080  3001               	movlw	1
 18936  1081  02EA               	subwf	_address^(0+128),f
 18937  1082  3000               	movlw	0
 18938  1083  3BEB               	subwfb	(_address+1)^(0+128),f
 18939  1084                     l6137:	
 18940                           
 18941                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 18942  1084  086B               	movf	(_address+1)^(0+128),w
 18943  1085  0140               	movlb	0	; select bank0
 18944  1086  00B5               	movwf	TM1650_fastPrintNum@num+1
 18945  1087  0141               	movlb	1	; select bank1
 18946  1088  086A               	movf	_address^(0+128),w
 18947  1089  0140               	movlb	0	; select bank0
 18948  108A  00B4               	movwf	TM1650_fastPrintNum@num
 18949  108B  3188  207A         	fcall	_TM1650_fastPrintNum
 18950  108D  0008               	return
 18951  108E                     __end_of_address_dec:	
 18952                           
 18953                           	psect	text53
 18954  087A                     __ptext53:	
 18955 ;; *************** function _TM1650_fastPrintNum *****************
 18956 ;; Defined at:
 18957 ;;		line 101 in file "tm1650.c"
 18958 ;; Parameters:    Size  Location     Type
 18959 ;;  num             2   20[BANK0 ] unsigned short 
 18960 ;; Auto vars:     Size  Location     Type
 18961 ;;		None
 18962 ;; Return value:  Size  Location     Type
 18963 ;;                  1    wreg      void 
 18964 ;; Registers used:
 18965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18966 ;; Tracked objects:
 18967 ;;		On entry : 0/0
 18968 ;;		On exit  : 0/0
 18969 ;;		Unchanged: 0/0
 18970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18974 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18975 ;;Total ram usage:        3 bytes
 18976 ;; Hardware stack levels used:    1
 18977 ;; Hardware stack levels required when called:    8
 18978 ;; This function calls:
 18979 ;;		___lwdiv
 18980 ;;		___lwmod
 18981 ;;		_writeData
 18982 ;; This function is called by:
 18983 ;;		_CONTROLLER_task
 18984 ;;		_DMX_init
 18985 ;;		_address_inc
 18986 ;;		_address_dec
 18987 ;; This function uses a non-reentrant model
 18988 ;;
 18989                           
 18990                           
 18991                           ;psect for function _TM1650_fastPrintNum
 18992  087A                     _TM1650_fastPrintNum:	
 18993                           
 18994                           ;tm1650.c: 103:     if(num > 9999){
 18995                           
 18996                           ;incstack = 0
 18997                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18998  087A  3027               	movlw	39
 18999  087B  0140               	movlb	0	; select bank0
 19000  087C  0235               	subwf	TM1650_fastPrintNum@num+1,w
 19001  087D  3010               	movlw	16
 19002  087E  1903               	skipnz
 19003  087F  0234               	subwf	TM1650_fastPrintNum@num,w
 19004  0880  1C03               	skipc
 19005  0881  28A5               	goto	l6077
 19006                           
 19007                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 19008  0882  3079               	movlw	121
 19009  0883  00B6               	movwf	??_TM1650_fastPrintNum
 19010  0884  0836               	movf	??_TM1650_fastPrintNum,w
 19011  0885  00AE               	movwf	writeData@data
 19012  0886  3034               	movlw	52
 19013  0887  3190  20DB  3188   	fcall	_writeData
 19014                           
 19015                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 19016  088A  3079               	movlw	121
 19017  088B  0140               	movlb	0	; select bank0
 19018  088C  00B6               	movwf	??_TM1650_fastPrintNum
 19019  088D  0836               	movf	??_TM1650_fastPrintNum,w
 19020  088E  00AE               	movwf	writeData@data
 19021  088F  3035               	movlw	53
 19022  0890  3190  20DB  3188   	fcall	_writeData
 19023                           
 19024                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 19025  0893  3079               	movlw	121
 19026  0894  0140               	movlb	0	; select bank0
 19027  0895  00B6               	movwf	??_TM1650_fastPrintNum
 19028  0896  0836               	movf	??_TM1650_fastPrintNum,w
 19029  0897  00AE               	movwf	writeData@data
 19030  0898  3036               	movlw	54
 19031  0899  3190  20DB  3188   	fcall	_writeData
 19032                           
 19033                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 19034  089C  3079               	movlw	121
 19035  089D  0140               	movlb	0	; select bank0
 19036  089E  00B6               	movwf	??_TM1650_fastPrintNum
 19037  089F  0836               	movf	??_TM1650_fastPrintNum,w
 19038  08A0  00AE               	movwf	writeData@data
 19039  08A1  3037               	movlw	55
 19040  08A2  3190  20DB         	fcall	_writeData
 19041  08A4  0008               	return
 19042  08A5                     l6077:	
 19043                           
 19044                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 19045  08A5  300A               	movlw	10
 19046  08A6  00A8               	movwf	___lwmod@divisor
 19047  08A7  3000               	movlw	0
 19048  08A8  00A9               	movwf	___lwmod@divisor+1
 19049  08A9  0835               	movf	TM1650_fastPrintNum@num+1,w
 19050  08AA  00AB               	movwf	___lwmod@dividend+1
 19051  08AB  0834               	movf	TM1650_fastPrintNum@num,w
 19052  08AC  00AA               	movwf	___lwmod@dividend
 19053  08AD  3192  22D4  3188   	fcall	___lwmod
 19054  08B0  0140               	movlb	0	; select bank0
 19055  08B1  0829               	movf	?___lwmod+1,w
 19056  08B2  0085               	movwf	5
 19057  08B3  0828               	movf	?___lwmod,w
 19058  08B4  0084               	movwf	4
 19059  08B5  3010               	movlw	low ((_charTable+16)| (0+32768))
 19060  08B6  0784               	addwf	4,f
 19061  08B7  3098               	movlw	high ((_charTable+16)| (0+32768))
 19062  08B8  3D85               	addwfc	5,f
 19063  08B9  0800               	movf	0,w	;code access
 19064  08BA  00B6               	movwf	??_TM1650_fastPrintNum
 19065  08BB  0836               	movf	??_TM1650_fastPrintNum,w
 19066  08BC  00AE               	movwf	writeData@data
 19067  08BD  3037               	movlw	55
 19068  08BE  3190  20DB  3188   	fcall	_writeData
 19069                           
 19070                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 19071  08C1  300A               	movlw	10
 19072  08C2  0140               	movlb	0	; select bank0
 19073  08C3  00A8               	movwf	___lwmod@divisor
 19074  08C4  3000               	movlw	0
 19075  08C5  00A9               	movwf	___lwmod@divisor+1
 19076  08C6  300A               	movlw	10
 19077  08C7  00A0               	movwf	___lwdiv@divisor
 19078  08C8  3000               	movlw	0
 19079  08C9  00A1               	movwf	___lwdiv@divisor+1
 19080  08CA  0835               	movf	TM1650_fastPrintNum@num+1,w
 19081  08CB  00A3               	movwf	___lwdiv@dividend+1
 19082  08CC  0834               	movf	TM1650_fastPrintNum@num,w
 19083  08CD  00A2               	movwf	___lwdiv@dividend
 19084  08CE  3193  23F8  3188   	fcall	___lwdiv
 19085  08D1  0140               	movlb	0	; select bank0
 19086  08D2  0821               	movf	?___lwdiv+1,w
 19087  08D3  00AB               	movwf	___lwmod@dividend+1
 19088  08D4  0820               	movf	?___lwdiv,w
 19089  08D5  00AA               	movwf	___lwmod@dividend
 19090  08D6  3192  22D4  3188   	fcall	___lwmod
 19091  08D9  0140               	movlb	0	; select bank0
 19092  08DA  0829               	movf	?___lwmod+1,w
 19093  08DB  0085               	movwf	5
 19094  08DC  0828               	movf	?___lwmod,w
 19095  08DD  0084               	movwf	4
 19096  08DE  3010               	movlw	low ((_charTable+16)| (0+32768))
 19097  08DF  0784               	addwf	4,f
 19098  08E0  3098               	movlw	high ((_charTable+16)| (0+32768))
 19099  08E1  3D85               	addwfc	5,f
 19100  08E2  0800               	movf	0,w	;code access
 19101  08E3  00B6               	movwf	??_TM1650_fastPrintNum
 19102  08E4  0836               	movf	??_TM1650_fastPrintNum,w
 19103  08E5  00AE               	movwf	writeData@data
 19104  08E6  3036               	movlw	54
 19105  08E7  3190  20DB  3188   	fcall	_writeData
 19106                           
 19107                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 19108  08EA  300A               	movlw	10
 19109  08EB  0140               	movlb	0	; select bank0
 19110  08EC  00A8               	movwf	___lwmod@divisor
 19111  08ED  3000               	movlw	0
 19112  08EE  00A9               	movwf	___lwmod@divisor+1
 19113  08EF  3064               	movlw	100
 19114  08F0  00A0               	movwf	___lwdiv@divisor
 19115  08F1  3000               	movlw	0
 19116  08F2  00A1               	movwf	___lwdiv@divisor+1
 19117  08F3  0835               	movf	TM1650_fastPrintNum@num+1,w
 19118  08F4  00A3               	movwf	___lwdiv@dividend+1
 19119  08F5  0834               	movf	TM1650_fastPrintNum@num,w
 19120  08F6  00A2               	movwf	___lwdiv@dividend
 19121  08F7  3193  23F8  3188   	fcall	___lwdiv
 19122  08FA  0140               	movlb	0	; select bank0
 19123  08FB  0821               	movf	?___lwdiv+1,w
 19124  08FC  00AB               	movwf	___lwmod@dividend+1
 19125  08FD  0820               	movf	?___lwdiv,w
 19126  08FE  00AA               	movwf	___lwmod@dividend
 19127  08FF  3192  22D4  3188   	fcall	___lwmod
 19128  0902  0140               	movlb	0	; select bank0
 19129  0903  0829               	movf	?___lwmod+1,w
 19130  0904  0085               	movwf	5
 19131  0905  0828               	movf	?___lwmod,w
 19132  0906  0084               	movwf	4
 19133  0907  3010               	movlw	low ((_charTable+16)| (0+32768))
 19134  0908  0784               	addwf	4,f
 19135  0909  3098               	movlw	high ((_charTable+16)| (0+32768))
 19136  090A  3D85               	addwfc	5,f
 19137  090B  0800               	movf	0,w	;code access
 19138  090C  00B6               	movwf	??_TM1650_fastPrintNum
 19139  090D  0836               	movf	??_TM1650_fastPrintNum,w
 19140  090E  00AE               	movwf	writeData@data
 19141  090F  3035               	movlw	53
 19142  0910  3190  20DB  3188   	fcall	_writeData
 19143                           
 19144                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 19145  0913  300A               	movlw	10
 19146  0914  0140               	movlb	0	; select bank0
 19147  0915  00A8               	movwf	___lwmod@divisor
 19148  0916  3000               	movlw	0
 19149  0917  00A9               	movwf	___lwmod@divisor+1
 19150  0918  30E8               	movlw	232
 19151  0919  00A0               	movwf	___lwdiv@divisor
 19152  091A  3003               	movlw	3
 19153  091B  00A1               	movwf	___lwdiv@divisor+1
 19154  091C  0835               	movf	TM1650_fastPrintNum@num+1,w
 19155  091D  00A3               	movwf	___lwdiv@dividend+1
 19156  091E  0834               	movf	TM1650_fastPrintNum@num,w
 19157  091F  00A2               	movwf	___lwdiv@dividend
 19158  0920  3193  23F8  3188   	fcall	___lwdiv
 19159  0923  0140               	movlb	0	; select bank0
 19160  0924  0821               	movf	?___lwdiv+1,w
 19161  0925  00AB               	movwf	___lwmod@dividend+1
 19162  0926  0820               	movf	?___lwdiv,w
 19163  0927  00AA               	movwf	___lwmod@dividend
 19164  0928  3192  22D4  3188   	fcall	___lwmod
 19165  092B  0140               	movlb	0	; select bank0
 19166  092C  0829               	movf	?___lwmod+1,w
 19167  092D  0085               	movwf	5
 19168  092E  0828               	movf	?___lwmod,w
 19169  092F  0084               	movwf	4
 19170  0930  3010               	movlw	low ((_charTable+16)| (0+32768))
 19171  0931  0784               	addwf	4,f
 19172  0932  3098               	movlw	high ((_charTable+16)| (0+32768))
 19173  0933  3D85               	addwfc	5,f
 19174  0934  0800               	movf	0,w	;code access
 19175  0935  00B6               	movwf	??_TM1650_fastPrintNum
 19176  0936  0836               	movf	??_TM1650_fastPrintNum,w
 19177  0937  00AE               	movwf	writeData@data
 19178  0938  3034               	movlw	52
 19179  0939  3190  20DB         	fcall	_writeData
 19180  093B  0008               	return
 19181  093C                     __end_of_TM1650_fastPrintNum:	
 19182                           
 19183                           	psect	text54
 19184  10DB                     __ptext54:	
 19185 ;; *************** function _writeData *****************
 19186 ;; Defined at:
 19187 ;;		line 31 in file "tm1650.c"
 19188 ;; Parameters:    Size  Location     Type
 19189 ;;  address         1    wreg     unsigned char 
 19190 ;;  data            1   14[BANK0 ] unsigned char 
 19191 ;; Auto vars:     Size  Location     Type
 19192 ;;  address         1   18[BANK0 ] unsigned char 
 19193 ;;  status          1   19[BANK0 ] enum E11370
 19194 ;; Return value:  Size  Location     Type
 19195 ;;                  1    wreg      void 
 19196 ;; Registers used:
 19197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19198 ;; Tracked objects:
 19199 ;;		On entry : 0/0
 19200 ;;		On exit  : 0/0
 19201 ;;		Unchanged: 0/0
 19202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19203 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19205 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19206 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19207 ;;Total ram usage:        6 bytes
 19208 ;; Hardware stack levels used:    1
 19209 ;; Hardware stack levels required when called:    7
 19210 ;; This function calls:
 19211 ;;		_I2C1_MasterWrite
 19212 ;; This function is called by:
 19213 ;;		_TM1650_enable
 19214 ;;		_TM1650_setDigit
 19215 ;;		_TM1650_fastPrintNum
 19216 ;;		_TM1650_brightness
 19217 ;; This function uses a non-reentrant model
 19218 ;;
 19219                           
 19220                           
 19221                           ;psect for function _writeData
 19222  10DB                     _writeData:	
 19223                           
 19224                           ;incstack = 0
 19225                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19226                           ;writeData@address stored from wreg
 19227  10DB  0140               	movlb	0	; select bank0
 19228  10DC  00B2               	movwf	writeData@address
 19229                           
 19230                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 19231  10DD  3002               	movlw	2
 19232  10DE  00AF               	movwf	??_writeData
 19233  10DF  082F               	movf	??_writeData,w
 19234  10E0  00B3               	movwf	writeData@status
 19235                           
 19236                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 19237  10E1  01A7               	clrf	I2C1_MasterWrite@length
 19238  10E2  0AA7               	incf	I2C1_MasterWrite@length,f
 19239  10E3  0832               	movf	writeData@address,w
 19240  10E4  00AF               	movwf	??_writeData
 19241  10E5  01B0               	clrf	??_writeData+1
 19242  10E6  082F               	movf	??_writeData,w
 19243  10E7  00A8               	movwf	I2C1_MasterWrite@address
 19244  10E8  0830               	movf	??_writeData+1,w
 19245  10E9  00A9               	movwf	I2C1_MasterWrite@address+1
 19246  10EA  3033               	movlw	(low (writeData@status| 0))& (0+255)
 19247  10EB  00B1               	movwf	??_writeData+2
 19248  10EC  0831               	movf	??_writeData+2,w
 19249  10ED  00AA               	movwf	I2C1_MasterWrite@pflag
 19250  10EE  302E               	movlw	(low (writeData@data| 0))& (0+255)
 19251  10EF  3192  22AA  3190   	fcall	_I2C1_MasterWrite
 19252  10F2                     l5889:	
 19253                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 19254                           
 19255  10F2  3002               	movlw	2
 19256  10F3  0140               	movlb	0	; select bank0
 19257  10F4  0633               	xorwf	writeData@status,w
 19258  10F5  1D03               	btfss	3,2
 19259  10F6  0008               	return
 19260  10F7  28F2               	goto	l5889
 19261  10F8                     __end_of_writeData:	
 19262                           
 19263                           	psect	text55
 19264  12AA                     __ptext55:	
 19265 ;; *************** function _I2C1_MasterWrite *****************
 19266 ;; Defined at:
 19267 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 19268 ;; Parameters:    Size  Location     Type
 19269 ;;  pdata           1    wreg     PTR unsigned char 
 19270 ;;		 -> writeData@data(1), 
 19271 ;;  length          1    7[BANK0 ] unsigned char 
 19272 ;;  address         2    8[BANK0 ] unsigned short 
 19273 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 19274 ;;		 -> writeData@status(1), 
 19275 ;; Auto vars:     Size  Location     Type
 19276 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 19277 ;;		 -> writeData@data(1), 
 19278 ;; Return value:  Size  Location     Type
 19279 ;;                  1    wreg      void 
 19280 ;; Registers used:
 19281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19282 ;; Tracked objects:
 19283 ;;		On entry : 0/0
 19284 ;;		On exit  : 0/0
 19285 ;;		Unchanged: 0/0
 19286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19287 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19290 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;Total ram usage:        7 bytes
 19292 ;; Hardware stack levels used:    1
 19293 ;; Hardware stack levels required when called:    6
 19294 ;; This function calls:
 19295 ;;		_I2C1_MasterTRBInsert
 19296 ;;		_I2C1_MasterWriteTRBBuild
 19297 ;; This function is called by:
 19298 ;;		_writeData
 19299 ;; This function uses a non-reentrant model
 19300 ;;
 19301                           
 19302                           
 19303                           ;psect for function _I2C1_MasterWrite
 19304  12AA                     _I2C1_MasterWrite:	
 19305                           
 19306                           ;incstack = 0
 19307                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19308                           ;I2C1_MasterWrite@pdata stored from wreg
 19309  12AA  0140               	movlb	0	; select bank0
 19310  12AB  00AD               	movwf	I2C1_MasterWrite@pdata
 19311                           
 19312                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 19313  12AC  0141               	movlb	1	; select bank1
 19314  12AD  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 19315  12AE  2ACD               	goto	l5883
 19316                           
 19317                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 19318  12AF  0140               	movlb	0	; select bank0
 19319  12B0  082D               	movf	I2C1_MasterWrite@pdata,w
 19320  12B1  00AB               	movwf	??_I2C1_MasterWrite
 19321  12B2  082B               	movf	??_I2C1_MasterWrite,w
 19322  12B3  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 19323  12B4  0827               	movf	I2C1_MasterWrite@length,w
 19324  12B5  00AC               	movwf	??_I2C1_MasterWrite+1
 19325  12B6  082C               	movf	??_I2C1_MasterWrite+1,w
 19326  12B7  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 19327  12B8  0829               	movf	I2C1_MasterWrite@address+1,w
 19328  12B9  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 19329  12BA  0828               	movf	I2C1_MasterWrite@address,w
 19330  12BB  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 19331  12BC  3040               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 19332  12BD  3191  21F3  3192   	fcall	_I2C1_MasterWriteTRBBuild
 19333                           
 19334                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 19335  12C0  3040               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 19336  12C1  0140               	movlb	0	; select bank0
 19337  12C2  00AB               	movwf	??_I2C1_MasterWrite
 19338  12C3  082B               	movf	??_I2C1_MasterWrite,w
 19339  12C4  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 19340  12C5  082A               	movf	I2C1_MasterWrite@pflag,w
 19341  12C6  00AC               	movwf	??_I2C1_MasterWrite+1
 19342  12C7  082C               	movf	??_I2C1_MasterWrite+1,w
 19343  12C8  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 19344  12C9  3001               	movlw	1
 19345  12CA  3195  2520         	fcall	_I2C1_MasterTRBInsert
 19346                           
 19347                           ;mcc_generated_files/i2c1.c: 613:     }
 19348  12CC  0008               	return
 19349  12CD                     l5883:	
 19350                           
 19351                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19352  12CD  0140               	movlb	0	; select bank0
 19353  12CE  082A               	movf	I2C1_MasterWrite@pflag,w
 19354  12CF  0086               	movwf	6
 19355  12D0  0187               	clrf	7
 19356  12D1  0181               	clrf	1
 19357  12D2  0A81               	incf	1,f
 19358  12D3  0008               	return
 19359  12D4                     __end_of_I2C1_MasterWrite:	
 19360                           
 19361                           	psect	text56
 19362  11F3                     __ptext56:	
 19363 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 19364 ;; Defined at:
 19365 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 19366 ;; Parameters:    Size  Location     Type
 19367 ;;  ptrb            1    wreg     PTR struct .
 19368 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19369 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 19370 ;;		 -> writeData@data(1), 
 19371 ;;  length          1    1[BANK0 ] unsigned char 
 19372 ;;  address         2    2[BANK0 ] unsigned short 
 19373 ;; Auto vars:     Size  Location     Type
 19374 ;;  ptrb            1    6[BANK0 ] PTR struct .
 19375 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19376 ;; Return value:  Size  Location     Type
 19377 ;;                  1    wreg      void 
 19378 ;; Registers used:
 19379 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19380 ;; Tracked objects:
 19381 ;;		On entry : 0/0
 19382 ;;		On exit  : 0/0
 19383 ;;		Unchanged: 0/0
 19384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19388 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19389 ;;Total ram usage:        7 bytes
 19390 ;; Hardware stack levels used:    1
 19391 ;; Hardware stack levels required when called:    4
 19392 ;; This function calls:
 19393 ;;		Nothing
 19394 ;; This function is called by:
 19395 ;;		_I2C1_MasterWrite
 19396 ;; This function uses a non-reentrant model
 19397 ;;
 19398                           
 19399                           
 19400                           ;psect for function _I2C1_MasterWriteTRBBuild
 19401  11F3                     _I2C1_MasterWriteTRBBuild:	
 19402                           
 19403                           ;incstack = 0
 19404                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 19405                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 19406  11F3  0140               	movlb	0	; select bank0
 19407  11F4  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 19408                           
 19409                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 19410  11F5  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 19411  11F6  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 19412  11F7  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 19413  11F8  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19414  11F9  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 19415  11FA  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 19416  11FB  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19417  11FC  0086               	movwf	6
 19418  11FD  3001               	movlw	1	; select bank2/3
 19419  11FE  0087               	movwf	7
 19420  11FF  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19421  1200  3FC0               	movwi [0]fsr1
 19422  1201  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 19423  1202  3FC1               	movwi [1]fsr1
 19424                           
 19425                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 19426  1203  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 19427  1204  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19428  1205  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19429  1206  3E02               	addlw	2
 19430  1207  0086               	movwf	6
 19431  1208  3001               	movlw	1	; select bank2/3
 19432  1209  0087               	movwf	7
 19433  120A  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19434  120B  0081               	movwf	1
 19435                           
 19436                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 19437  120C  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 19438  120D  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19439  120E  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19440  120F  3E03               	addlw	3
 19441  1210  0086               	movwf	6
 19442  1211  3001               	movlw	1	; select bank2/3
 19443  1212  0087               	movwf	7
 19444  1213  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19445  1214  0081               	movwf	1
 19446  1215  0008               	return
 19447  1216                     __end_of_I2C1_MasterWriteTRBBuild:	
 19448                           
 19449                           	psect	text57
 19450  1520                     __ptext57:	
 19451 ;; *************** function _I2C1_MasterTRBInsert *****************
 19452 ;; Defined at:
 19453 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 19454 ;; Parameters:    Size  Location     Type
 19455 ;;  count           1    wreg     unsigned char 
 19456 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 19457 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 19458 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 19459 ;;		 -> writeData@status(1), 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;  count           1    3[BANK0 ] unsigned char 
 19462 ;; Return value:  Size  Location     Type
 19463 ;;                  1    wreg      void 
 19464 ;; Registers used:
 19465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19466 ;; Tracked objects:
 19467 ;;		On entry : 0/0
 19468 ;;		On exit  : 0/0
 19469 ;;		Unchanged: 0/0
 19470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19475 ;;Total ram usage:        4 bytes
 19476 ;; Hardware stack levels used:    1
 19477 ;; Hardware stack levels required when called:    5
 19478 ;; This function calls:
 19479 ;;		_I2C1_WaitForLastPacketToComplete
 19480 ;; This function is called by:
 19481 ;;		_I2C1_MasterWrite
 19482 ;;		_I2C1_MasterRead
 19483 ;; This function uses a non-reentrant model
 19484 ;;
 19485                           
 19486                           
 19487                           ;psect for function _I2C1_MasterTRBInsert
 19488  1520                     _I2C1_MasterTRBInsert:	
 19489                           
 19490                           ;incstack = 0
 19491                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19492                           ;I2C1_MasterTRBInsert@count stored from wreg
 19493  1520  0140               	movlb	0	; select bank0
 19494  1521  00A3               	movwf	I2C1_MasterTRBInsert@count
 19495                           
 19496                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 19497  1522  0141               	movlb	1	; select bank1
 19498  1523  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 19499  1524  2D5F               	goto	l5871
 19500                           
 19501                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 19502  1525  3002               	movlw	2
 19503  1526  0140               	movlb	0	; select bank0
 19504  1527  00A2               	movwf	??_I2C1_MasterTRBInsert
 19505  1528  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19506  1529  0086               	movwf	6
 19507  152A  0187               	clrf	7
 19508  152B  0822               	movf	??_I2C1_MasterTRBInsert,w
 19509  152C  0081               	movwf	1
 19510                           
 19511                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 19512  152D  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 19513  152E  00A2               	movwf	??_I2C1_MasterTRBInsert
 19514  152F  0141               	movlb	1	; select bank1
 19515  1530  0A20               	incf	_i2c1_object^(0+128),w
 19516  1531  0086               	movwf	6
 19517  1532  0187               	clrf	7
 19518  1533  0140               	movlb	0	; select bank0
 19519  1534  0822               	movf	??_I2C1_MasterTRBInsert,w
 19520  1535  0081               	movwf	1
 19521                           
 19522                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 19523  1536  0823               	movf	I2C1_MasterTRBInsert@count,w
 19524  1537  00A2               	movwf	??_I2C1_MasterTRBInsert
 19525  1538  0141               	movlb	1	; select bank1
 19526  1539  0820               	movf	_i2c1_object^(0+128),w
 19527  153A  0086               	movwf	6
 19528  153B  0187               	clrf	7
 19529  153C  0140               	movlb	0	; select bank0
 19530  153D  0822               	movf	??_I2C1_MasterTRBInsert,w
 19531  153E  0081               	movwf	1
 19532                           
 19533                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 19534  153F  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19535  1540  00A2               	movwf	??_I2C1_MasterTRBInsert
 19536  1541  0141               	movlb	1	; select bank1
 19537  1542  0820               	movf	_i2c1_object^(0+128),w
 19538  1543  3E02               	addlw	2
 19539  1544  0086               	movwf	6
 19540  1545  0187               	clrf	7
 19541  1546  0140               	movlb	0	; select bank0
 19542  1547  0822               	movf	??_I2C1_MasterTRBInsert,w
 19543  1548  0081               	movwf	1
 19544                           
 19545                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 19546  1549  3003               	movlw	3
 19547  154A  00A2               	movwf	??_I2C1_MasterTRBInsert
 19548  154B  0822               	movf	??_I2C1_MasterTRBInsert,w
 19549  154C  0141               	movlb	1	; select bank1
 19550  154D  07A0               	addwf	_i2c1_object^(0+128),f
 19551                           
 19552                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 19553  154E  0820               	movf	_i2c1_object^(0+128),w
 19554  154F  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 19555  1550  1D03               	skipz
 19556  1551  2D58               	goto	l5867
 19557                           
 19558                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 19559  1552  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 19560  1553  0140               	movlb	0	; select bank0
 19561  1554  00A2               	movwf	??_I2C1_MasterTRBInsert
 19562  1555  0822               	movf	??_I2C1_MasterTRBInsert,w
 19563  1556  0141               	movlb	1	; select bank1
 19564  1557  00A0               	movwf	_i2c1_object^(0+128)
 19565  1558                     l5867:	
 19566                           
 19567                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 19568  1558  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 19569                           
 19570                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 19571  1559  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 19572  155A  0620               	xorwf	_i2c1_object^(0+128),w
 19573  155B  1D03               	skipz
 19574  155C  2D65               	goto	l5873
 19575                           
 19576                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 19577  155D  1422               	bsf	(_i2c1_object^(0+128)+2),0
 19578  155E  2D65               	goto	l5873
 19579  155F                     l5871:	
 19580                           
 19581                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19582  155F  0140               	movlb	0	; select bank0
 19583  1560  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19584  1561  0086               	movwf	6
 19585  1562  0187               	clrf	7
 19586  1563  0181               	clrf	1
 19587  1564  0A81               	incf	1,f
 19588  1565                     l5873:	
 19589                           
 19590                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 19591  1565  0140               	movlb	0	; select bank0
 19592  1566  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19593  1567  0086               	movwf	6
 19594  1568  0187               	clrf	7
 19595  1569  3002               	movlw	2
 19596  156A  0601               	xorwf	1,w
 19597  156B  1D03               	btfss	3,2
 19598  156C  0008               	return
 19599                           
 19600                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 19601  156D  319E  2694         	fcall	_I2C1_WaitForLastPacketToComplete
 19602                           
 19603                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 19604  156F  014E               	movlb	14	; select bank14
 19605  1570  140F               	bsf	15,0	;volatile
 19606  1571  0008               	return
 19607  1572                     __end_of_I2C1_MasterTRBInsert:	
 19608                           
 19609                           	psect	text58
 19610  1E94                     __ptext58:	
 19611 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 19612 ;; Defined at:
 19613 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 19614 ;; Parameters:    Size  Location     Type
 19615 ;;		None
 19616 ;; Auto vars:     Size  Location     Type
 19617 ;;		None
 19618 ;; Return value:  Size  Location     Type
 19619 ;;                  1    wreg      void 
 19620 ;; Registers used:
 19621 ;;		wreg, status,2, status,0
 19622 ;; Tracked objects:
 19623 ;;		On entry : 0/0
 19624 ;;		On exit  : 0/0
 19625 ;;		Unchanged: 0/0
 19626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19631 ;;Total ram usage:        0 bytes
 19632 ;; Hardware stack levels used:    1
 19633 ;; Hardware stack levels required when called:    4
 19634 ;; This function calls:
 19635 ;;		Nothing
 19636 ;; This function is called by:
 19637 ;;		_I2C1_MasterTRBInsert
 19638 ;; This function uses a non-reentrant model
 19639 ;;
 19640                           
 19641                           
 19642                           ;psect for function _I2C1_WaitForLastPacketToComplete
 19643  1E94                     _I2C1_WaitForLastPacketToComplete:	
 19644  1E94                     l5855:	
 19645                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 19646                           
 19647                           ;incstack = 0
 19648                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 19649                           
 19650                           
 19651                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 19652  1E94  0141               	movlb	1	; select bank1
 19653  1E95  084B               	movf	_i2c1_state^(0+128),w
 19654  1E96  1903               	btfsc	3,2
 19655  1E97  0008               	return
 19656  1E98  2E94               	goto	l5855
 19657  1E99                     __end_of_I2C1_WaitForLastPacketToComplete:	
 19658                           
 19659                           	psect	text59
 19660  12D4                     __ptext59:	
 19661 ;; *************** function ___lwmod *****************
 19662 ;; Defined at:
 19663 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 19664 ;; Parameters:    Size  Location     Type
 19665 ;;  divisor         2    8[BANK0 ] unsigned int 
 19666 ;;  dividend        2   10[BANK0 ] unsigned int 
 19667 ;; Auto vars:     Size  Location     Type
 19668 ;;  counter         1   13[BANK0 ] unsigned char 
 19669 ;; Return value:  Size  Location     Type
 19670 ;;                  2    8[BANK0 ] unsigned int 
 19671 ;; Registers used:
 19672 ;;		wreg, status,2, status,0
 19673 ;; Tracked objects:
 19674 ;;		On entry : 0/0
 19675 ;;		On exit  : 0/0
 19676 ;;		Unchanged: 0/0
 19677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19679 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19682 ;;Total ram usage:        6 bytes
 19683 ;; Hardware stack levels used:    1
 19684 ;; Hardware stack levels required when called:    4
 19685 ;; This function calls:
 19686 ;;		Nothing
 19687 ;; This function is called by:
 19688 ;;		_TM1650_fastPrintNum
 19689 ;; This function uses a non-reentrant model
 19690 ;;
 19691                           
 19692                           
 19693                           ;psect for function ___lwmod
 19694  12D4                     ___lwmod:	
 19695                           
 19696                           ;incstack = 0
 19697                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19698  12D4  0140               	movlb	0	; select bank0
 19699  12D5  0828               	movf	___lwmod@divisor,w
 19700  12D6  0429               	iorwf	___lwmod@divisor+1,w
 19701  12D7  1903               	btfsc	3,2
 19702  12D8  2AFC               	goto	l4211
 19703  12D9  01AD               	clrf	___lwmod@counter
 19704  12DA  0AAD               	incf	___lwmod@counter,f
 19705  12DB                     l4201:	
 19706  12DB  1BA9               	btfsc	___lwmod@divisor+1,7
 19707  12DC  2AE7               	goto	l4203
 19708  12DD  3001               	movlw	1
 19709  12DE                     u2865:	
 19710  12DE  35A8               	lslf	___lwmod@divisor,f
 19711  12DF  0DA9               	rlf	___lwmod@divisor+1,f
 19712  12E0  0B89               	decfsz	9,f
 19713  12E1  2ADE               	goto	u2865
 19714  12E2  3001               	movlw	1
 19715  12E3  00AC               	movwf	??___lwmod
 19716  12E4  082C               	movf	??___lwmod,w
 19717  12E5  07AD               	addwf	___lwmod@counter,f
 19718  12E6  2ADB               	goto	l4201
 19719  12E7                     l4203:	
 19720  12E7  0829               	movf	___lwmod@divisor+1,w
 19721  12E8  022B               	subwf	___lwmod@dividend+1,w
 19722  12E9  1D03               	skipz
 19723  12EA  2AED               	goto	u2885
 19724  12EB  0828               	movf	___lwmod@divisor,w
 19725  12EC  022A               	subwf	___lwmod@dividend,w
 19726  12ED                     u2885:	
 19727  12ED  1C03               	skipc
 19728  12EE  2AF3               	goto	l4207
 19729  12EF  0828               	movf	___lwmod@divisor,w
 19730  12F0  02AA               	subwf	___lwmod@dividend,f
 19731  12F1  0829               	movf	___lwmod@divisor+1,w
 19732  12F2  3BAB               	subwfb	___lwmod@dividend+1,f
 19733  12F3                     l4207:	
 19734  12F3  3001               	movlw	1
 19735  12F4                     u2895:	
 19736  12F4  36A9               	lsrf	___lwmod@divisor+1,f
 19737  12F5  0CA8               	rrf	___lwmod@divisor,f
 19738  12F6  0B89               	decfsz	9,f
 19739  12F7  2AF4               	goto	u2895
 19740  12F8  3001               	movlw	1
 19741  12F9  02AD               	subwf	___lwmod@counter,f
 19742  12FA  1D03               	btfss	3,2
 19743  12FB  2AE7               	goto	l4203
 19744  12FC                     l4211:	
 19745  12FC  082B               	movf	___lwmod@dividend+1,w
 19746  12FD  00A9               	movwf	?___lwmod+1
 19747  12FE  082A               	movf	___lwmod@dividend,w
 19748  12FF  00A8               	movwf	?___lwmod
 19749  1300  0008               	return
 19750  1301                     __end_of___lwmod:	
 19751                           
 19752                           	psect	text60
 19753  1F82                     __ptext60:	
 19754 ;; *************** function _BUTTONS_isHeld *****************
 19755 ;; Defined at:
 19756 ;;		line 106 in file "buttons.c"
 19757 ;; Parameters:    Size  Location     Type
 19758 ;;  button          1    wreg     PTR struct .
 19759 ;;		 -> buttons(32), NULL(0), 
 19760 ;; Auto vars:     Size  Location     Type
 19761 ;;  button          1    0[BANK0 ] PTR struct .
 19762 ;;		 -> buttons(32), NULL(0), 
 19763 ;; Return value:  Size  Location     Type
 19764 ;;                  1    wreg      _Bool 
 19765 ;; Registers used:
 19766 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19767 ;; Tracked objects:
 19768 ;;		On entry : 0/0
 19769 ;;		On exit  : 0/0
 19770 ;;		Unchanged: 0/0
 19771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19776 ;;Total ram usage:        1 bytes
 19777 ;; Hardware stack levels used:    1
 19778 ;; Hardware stack levels required when called:    4
 19779 ;; This function calls:
 19780 ;;		Nothing
 19781 ;; This function is called by:
 19782 ;;		_CONTROL_DMX
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786                           
 19787                           ;psect for function _BUTTONS_isHeld
 19788  1F82                     _BUTTONS_isHeld:	
 19789                           
 19790                           ;incstack = 0
 19791                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 19792                           ;BUTTONS_isHeld@button stored from wreg
 19793  1F82  0140               	movlb	0	; select bank0
 19794  1F83  00A0               	movwf	BUTTONS_isHeld@button
 19795                           
 19796                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 19797  1F84  0820               	movf	BUTTONS_isHeld@button,w
 19798  1F85  3E07               	addlw	7
 19799  1F86  0086               	movwf	6
 19800  1F87  3001               	movlw	1	; select bank2/3
 19801  1F88  0087               	movwf	7
 19802  1F89  3003               	movlw	3
 19803  1F8A  0601               	xorwf	1,w
 19804  1F8B  1D03               	btfss	3,2
 19805  1F8C  2F8F               	goto	l6113
 19806                           
 19807                           ;buttons.c: 108:         return 1;
 19808  1F8D  3001               	movlw	1
 19809  1F8E  0008               	return
 19810  1F8F                     l6113:	
 19811                           
 19812                           ;buttons.c: 111:     return 0;
 19813  1F8F  3000               	movlw	0
 19814  1F90  0008               	return
 19815  1F91                     __end_of_BUTTONS_isHeld:	
 19816                           
 19817                           	psect	text61
 19818  11D1                     __ptext61:	
 19819 ;; *************** function _CONTROL_BEAT *****************
 19820 ;; Defined at:
 19821 ;;		line 160 in file "controller.c"
 19822 ;; Parameters:    Size  Location     Type
 19823 ;;		None
 19824 ;; Auto vars:     Size  Location     Type
 19825 ;;		None
 19826 ;; Return value:  Size  Location     Type
 19827 ;;                  1    wreg      _Bool 
 19828 ;; Registers used:
 19829 ;;		wreg, status,2, status,0
 19830 ;; Tracked objects:
 19831 ;;		On entry : 0/0
 19832 ;;		On exit  : 0/0
 19833 ;;		Unchanged: 0/0
 19834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19839 ;;Total ram usage:        1 bytes
 19840 ;; Hardware stack levels used:    1
 19841 ;; Hardware stack levels required when called:    4
 19842 ;; This function calls:
 19843 ;;		Nothing
 19844 ;; This function is called by:
 19845 ;;		_CONTROLLER_task
 19846 ;; This function uses a non-reentrant model
 19847 ;;
 19848                           
 19849                           
 19850                           ;psect for function _CONTROL_BEAT
 19851  11D1                     _CONTROL_BEAT:	
 19852                           
 19853                           ;controller.c: 161:     if (upState) {
 19854                           
 19855                           ;incstack = 0
 19856                           ; Regs used in _CONTROL_BEAT: [wreg+status,2+status,0]
 19857  11D1  0141               	movlb	1	; select bank1
 19858  11D2  083F               	movf	_upState^(0+128),w
 19859  11D3  1903               	btfsc	3,2
 19860  11D4  29EB               	goto	l6463
 19861                           
 19862                           ;controller.c: 162:         if(beatBrightness < 9){
 19863  11D5  3009               	movlw	9
 19864  11D6  026F               	subwf	_beatBrightness^(0+128),w
 19865  11D7  1803               	skipnc
 19866  11D8  29E0               	goto	l6457
 19867                           
 19868                           ;controller.c: 163:             beatBrightness++;
 19869  11D9  3001               	movlw	1
 19870  11DA  0140               	movlb	0	; select bank0
 19871  11DB  00A0               	movwf	??_CONTROL_BEAT
 19872  11DC  0820               	movf	??_CONTROL_BEAT,w
 19873  11DD  0141               	movlb	1	; select bank1
 19874  11DE  07EF               	addwf	_beatBrightness^(0+128),f
 19875                           
 19876                           ;controller.c: 164:         } else {
 19877  11DF  29E9               	goto	l1071
 19878  11E0                     l6457:	
 19879                           
 19880                           ;controller.c: 165:             beatBrightness = 9;
 19881  11E0  3009               	movlw	9
 19882  11E1  0140               	movlb	0	; select bank0
 19883  11E2  00A0               	movwf	??_CONTROL_BEAT
 19884  11E3  0820               	movf	??_CONTROL_BEAT,w
 19885  11E4  0141               	movlb	1	; select bank1
 19886  11E5  00EF               	movwf	_beatBrightness^(0+128)
 19887  11E6  29E9               	goto	l1071
 19888  11E7                     l6467:	
 19889                           
 19890                           ;controller.c: 170:             beatBrightness--;
 19891  11E7  3001               	movlw	1
 19892  11E8  02EF               	subwf	_beatBrightness^(0+128),f
 19893  11E9                     l1071:	
 19894                           ;controller.c: 166:         }
 19895                           
 19896                           ;controller.c: 171:         } else {
 19897                           
 19898                           
 19899                           ;controller.c: 167:         return 1;
 19900  11E9  3001               	movlw	1
 19901  11EA  0008               	return
 19902  11EB                     l6463:	
 19903  11EB  083E               	movf	_downState^(0+128),w
 19904  11EC  1903               	btfsc	3,2
 19905  11ED  0008               	return
 19906                           
 19907                           ;controller.c: 169:         if(beatBrightness > 0){
 19908  11EE  086F               	movf	_beatBrightness^(0+128),w
 19909  11EF  1D03               	btfss	3,2
 19910  11F0  29E7               	goto	l6467
 19911                           
 19912                           ;controller.c: 172:             beatBrightness = 0;
 19913  11F1  01EF               	clrf	_beatBrightness^(0+128)
 19914  11F2  29E9               	goto	l1071
 19915  11F3                     __end_of_CONTROL_BEAT:	
 19916                           
 19917                           	psect	text62
 19918  1FD8                     __ptext62:	
 19919 ;; *************** function _BUTTONS_isClicked *****************
 19920 ;; Defined at:
 19921 ;;		line 97 in file "buttons.c"
 19922 ;; Parameters:    Size  Location     Type
 19923 ;;  button          1    wreg     PTR struct .
 19924 ;;		 -> buttons(32), NULL(0), 
 19925 ;; Auto vars:     Size  Location     Type
 19926 ;;  button          1    0[BANK0 ] PTR struct .
 19927 ;;		 -> buttons(32), NULL(0), 
 19928 ;; Return value:  Size  Location     Type
 19929 ;;                  1    wreg      _Bool 
 19930 ;; Registers used:
 19931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19932 ;; Tracked objects:
 19933 ;;		On entry : 0/0
 19934 ;;		On exit  : 0/0
 19935 ;;		Unchanged: 0/0
 19936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19941 ;;Total ram usage:        1 bytes
 19942 ;; Hardware stack levels used:    1
 19943 ;; Hardware stack levels required when called:    4
 19944 ;; This function calls:
 19945 ;;		Nothing
 19946 ;; This function is called by:
 19947 ;;		_CONTROLLER_task
 19948 ;; This function uses a non-reentrant model
 19949 ;;
 19950                           
 19951                           
 19952                           ;psect for function _BUTTONS_isClicked
 19953  1FD8                     _BUTTONS_isClicked:	
 19954                           
 19955                           ;incstack = 0
 19956                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 19957                           ;BUTTONS_isClicked@button stored from wreg
 19958  1FD8  0140               	movlb	0	; select bank0
 19959  1FD9  00A0               	movwf	BUTTONS_isClicked@button
 19960                           
 19961                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 19962  1FDA  0820               	movf	BUTTONS_isClicked@button,w
 19963  1FDB  3E07               	addlw	7
 19964  1FDC  0086               	movwf	6
 19965  1FDD  3001               	movlw	1	; select bank2/3
 19966  1FDE  0087               	movwf	7
 19967  1FDF  0301               	decf	1,w
 19968  1FE0  1D03               	btfss	3,2
 19969  1FE1  2FEA               	goto	l6321
 19970                           
 19971                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 19972  1FE2  0820               	movf	BUTTONS_isClicked@button,w
 19973  1FE3  3E07               	addlw	7
 19974  1FE4  0086               	movwf	6
 19975  1FE5  3001               	movlw	1	; select bank2/3
 19976  1FE6  0087               	movwf	7
 19977  1FE7  0181               	clrf	1
 19978                           
 19979                           ;buttons.c: 100:         return 1;
 19980  1FE8  3001               	movlw	1
 19981  1FE9  0008               	return
 19982  1FEA                     l6321:	
 19983                           
 19984                           ;buttons.c: 103:     return 0;
 19985  1FEA  3000               	movlw	0
 19986  1FEB  0008               	return
 19987  1FEC                     __end_of_BUTTONS_isClicked:	
 19988                           
 19989                           	psect	text63
 19990  1000                     __ptext63:	
 19991 ;; *************** function _CLOCK_init *****************
 19992 ;; Defined at:
 19993 ;;		line 8 in file "clock.c"
 19994 ;; Parameters:    Size  Location     Type
 19995 ;;		None
 19996 ;; Auto vars:     Size  Location     Type
 19997 ;;		None
 19998 ;; Return value:  Size  Location     Type
 19999 ;;                  1    wreg      void 
 20000 ;; Registers used:
 20001 ;;		wreg, status,2, status,0, pclath, cstack
 20002 ;; Tracked objects:
 20003 ;;		On entry : 0/0
 20004 ;;		On exit  : 0/0
 20005 ;;		Unchanged: 0/0
 20006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20011 ;;Total ram usage:        0 bytes
 20012 ;; Hardware stack levels used:    1
 20013 ;; Hardware stack levels required when called:    5
 20014 ;; This function calls:
 20015 ;;		_TMR0_SetInterruptHandler
 20016 ;; This function is called by:
 20017 ;;		_main
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           
 20022                           ;psect for function _CLOCK_init
 20023  1000                     _CLOCK_init:	
 20024                           
 20025                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 20026                           
 20027                           ;incstack = 0
 20028                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 20029  1000  3099               	movlw	low _CLOCK_timerCallback
 20030  1001  0140               	movlb	0	; select bank0
 20031  1002  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 20032  1003  301E               	movlw	high _CLOCK_timerCallback
 20033  1004  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 20034  1005  319E  26C3         	fcall	_TMR0_SetInterruptHandler
 20035  1007  0008               	return
 20036  1008                     __end_of_CLOCK_init:	
 20037                           
 20038                           	psect	text64
 20039  1EC3                     __ptext64:	
 20040 ;; *************** function _TMR0_SetInterruptHandler *****************
 20041 ;; Defined at:
 20042 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 20043 ;; Parameters:    Size  Location     Type
 20044 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20045 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;		None
 20048 ;; Return value:  Size  Location     Type
 20049 ;;                  1    wreg      void 
 20050 ;; Registers used:
 20051 ;;		wreg
 20052 ;; Tracked objects:
 20053 ;;		On entry : 0/0
 20054 ;;		On exit  : 0/0
 20055 ;;		Unchanged: 0/0
 20056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20061 ;;Total ram usage:        2 bytes
 20062 ;; Hardware stack levels used:    1
 20063 ;; Hardware stack levels required when called:    4
 20064 ;; This function calls:
 20065 ;;		Nothing
 20066 ;; This function is called by:
 20067 ;;		_TMR0_Initialize
 20068 ;;		_CLOCK_init
 20069 ;; This function uses a non-reentrant model
 20070 ;;
 20071                           
 20072                           
 20073                           ;psect for function _TMR0_SetInterruptHandler
 20074  1EC3                     _TMR0_SetInterruptHandler:	
 20075                           
 20076                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 20077                           
 20078                           ;incstack = 0
 20079                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 20080  1EC3  0140               	movlb	0	; select bank0
 20081  1EC4  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 20082  1EC5  0142               	movlb	2	; select bank2
 20083  1EC6  00C7               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 20084  1EC7  0140               	movlb	0	; select bank0
 20085  1EC8  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 20086  1EC9  0142               	movlb	2	; select bank2
 20087  1ECA  00C6               	movwf	_TMR0_InterruptHandler^(0+256)
 20088  1ECB  0008               	return
 20089  1ECC                     __end_of_TMR0_SetInterruptHandler:	
 20090                           
 20091                           	psect	text65
 20092  0A0D                     __ptext65:	
 20093 ;; *************** function _BUTTONS_task *****************
 20094 ;; Defined at:
 20095 ;;		line 56 in file "buttons.c"
 20096 ;; Parameters:    Size  Location     Type
 20097 ;;		None
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;  btn             1    8[BANK0 ] PTR struct .
 20100 ;;		 -> buttons(32), 
 20101 ;;  i               1    5[BANK0 ] unsigned char 
 20102 ;;  time            2    6[BANK0 ] unsigned short 
 20103 ;; Return value:  Size  Location     Type
 20104 ;;                  1    wreg      void 
 20105 ;; Registers used:
 20106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20107 ;; Tracked objects:
 20108 ;;		On entry : 0/0
 20109 ;;		On exit  : 0/0
 20110 ;;		Unchanged: 0/0
 20111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20113 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20114 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20115 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20116 ;;Total ram usage:        7 bytes
 20117 ;; Hardware stack levels used:    1
 20118 ;; Hardware stack levels required when called:    5
 20119 ;; This function calls:
 20120 ;;		_CLOCK_getTime
 20121 ;; This function is called by:
 20122 ;;		_main
 20123 ;; This function uses a non-reentrant model
 20124 ;;
 20125                           
 20126                           
 20127                           ;psect for function _BUTTONS_task
 20128  0A0D                     _BUTTONS_task:	
 20129                           
 20130                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 20131                           
 20132                           ;incstack = 0
 20133                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20134  0A0D  319E  26BA  318A   	fcall	_CLOCK_getTime
 20135  0A10  0140               	movlb	0	; select bank0
 20136  0A11  0821               	movf	?_CLOCK_getTime+1,w
 20137  0A12  00A7               	movwf	BUTTONS_task@time+1
 20138  0A13  0820               	movf	?_CLOCK_getTime,w
 20139  0A14  00A6               	movwf	BUTTONS_task@time
 20140                           
 20141                           ;buttons.c: 61:     if (time - lastTime < 10)
 20142  0A15  0141               	movlb	1	; select bank1
 20143  0A16  0833               	movf	_lastTime^(0+128),w
 20144  0A17  0140               	movlb	0	; select bank0
 20145  0A18  0226               	subwf	BUTTONS_task@time,w
 20146  0A19  00A2               	movwf	??_BUTTONS_task
 20147  0A1A  0141               	movlb	1	; select bank1
 20148  0A1B  0834               	movf	(_lastTime+1)^(0+128),w
 20149  0A1C  0140               	movlb	0	; select bank0
 20150  0A1D  3B27               	subwfb	BUTTONS_task@time+1,w
 20151  0A1E  00A3               	movwf	??_BUTTONS_task+1
 20152  0A1F  3000               	movlw	0
 20153  0A20  0223               	subwf	??_BUTTONS_task+1,w
 20154  0A21  300A               	movlw	10
 20155  0A22  1903               	skipnz
 20156  0A23  0222               	subwf	??_BUTTONS_task,w
 20157  0A24  1C03               	btfss	3,0
 20158  0A25  0008               	return
 20159                           
 20160                           ;buttons.c: 64:     lastTime = time;
 20161  0A26  0827               	movf	BUTTONS_task@time+1,w
 20162  0A27  0141               	movlb	1	; select bank1
 20163  0A28  00B4               	movwf	(_lastTime+1)^(0+128)
 20164  0A29  0140               	movlb	0	; select bank0
 20165  0A2A  0826               	movf	BUTTONS_task@time,w
 20166  0A2B  0141               	movlb	1	; select bank1
 20167  0A2C  00B3               	movwf	_lastTime^(0+128)
 20168                           
 20169                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 20170  0A2D  0140               	movlb	0	; select bank0
 20171  0A2E  01A5               	clrf	BUTTONS_task@i
 20172  0A2F                     l6613:	
 20173                           
 20174                           ;buttons.c: 68:         button_t* btn = buttons + i;
 20175  0A2F  0825               	movf	BUTTONS_task@i,w
 20176  0A30  00A2               	movwf	??_BUTTONS_task
 20177  0A31  3002               	movlw	2
 20178  0A32                     u5875:	
 20179  0A32  35A2               	lslf	??_BUTTONS_task,f
 20180  0A33  3EFF               	addlw	-1
 20181  0A34  1D03               	skipz
 20182  0A35  2A32               	goto	u5875
 20183  0A36  3522               	lslf	??_BUTTONS_task,w
 20184  0A37  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 20185  0A38  00A3               	movwf	??_BUTTONS_task+1
 20186  0A39  0823               	movf	??_BUTTONS_task+1,w
 20187  0A3A  00A8               	movwf	BUTTONS_task@btn
 20188                           
 20189                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 20190  0A3B  0828               	movf	BUTTONS_task@btn,w
 20191  0A3C  0086               	movwf	6
 20192  0A3D  3001               	movlw	1	; select bank2/3
 20193  0A3E  0087               	movwf	7
 20194  0A3F  3F40               	moviw [0]fsr1
 20195  0A40  00A2               	movwf	??_BUTTONS_task
 20196  0A41  3F41               	moviw [1]fsr1
 20197  0A42  00A3               	movwf	??_BUTTONS_task+1
 20198  0A43  0822               	movf	??_BUTTONS_task,w
 20199  0A44  0086               	movwf	6
 20200  0A45  0823               	movf	??_BUTTONS_task+1,w
 20201  0A46  0087               	movwf	7
 20202  0A47  3001               	movlw	1
 20203  0A48  00A4               	movwf	??_BUTTONS_task+2
 20204  0A49  0828               	movf	BUTTONS_task@btn,w
 20205  0A4A  3E02               	addlw	2
 20206  0A4B  0084               	movwf	4
 20207  0A4C  3001               	movlw	1	; select bank2/3
 20208  0A4D  0085               	movwf	5
 20209  0A4E  0A00               	incf	0,w
 20210  0A4F  2A51               	goto	u5884
 20211  0A50                     u5885:	
 20212  0A50  35A4               	lslf	??_BUTTONS_task+2,f
 20213  0A51                     u5884:	
 20214  0A51  0B89               	decfsz	9,f
 20215  0A52  2A50               	goto	u5885
 20216  0A53  0824               	movf	??_BUTTONS_task+2,w
 20217  0A54  0501               	andwf	1,w
 20218  0A55  1D03               	btfss	3,2
 20219  0A56  2A70               	goto	l6621
 20220                           
 20221                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 20222  0A57  0828               	movf	BUTTONS_task@btn,w
 20223  0A58  3E03               	addlw	3
 20224  0A59  0086               	movwf	6
 20225  0A5A  3001               	movlw	1	; select bank2/3
 20226  0A5B  0087               	movwf	7
 20227  0A5C  0181               	clrf	1
 20228  0A5D  0A81               	incf	1,f
 20229                           
 20230                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 20231  0A5E  0828               	movf	BUTTONS_task@btn,w
 20232  0A5F  3E07               	addlw	7
 20233  0A60  0086               	movwf	6
 20234  0A61  3001               	movlw	1	; select bank2/3
 20235  0A62  0087               	movwf	7
 20236  0A63  0801               	movf	1,w
 20237  0A64  1D03               	btfss	3,2
 20238  0A65  2A76               	goto	l909
 20239                           
 20240                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 20241  0A66  0828               	movf	BUTTONS_task@btn,w
 20242  0A67  3E05               	addlw	5
 20243  0A68  0086               	movwf	6
 20244  0A69  3001               	movlw	1	; select bank2/3
 20245  0A6A  0087               	movwf	7
 20246  0A6B  0826               	movf	BUTTONS_task@time,w
 20247  0A6C  3FC0               	movwi [0]fsr1
 20248  0A6D  0827               	movf	BUTTONS_task@time+1,w
 20249  0A6E  3FC1               	movwi [1]fsr1
 20250  0A6F  2A76               	goto	l909
 20251  0A70                     l6621:	
 20252                           
 20253                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 20254  0A70  0828               	movf	BUTTONS_task@btn,w
 20255  0A71  3E03               	addlw	3
 20256  0A72  0086               	movwf	6
 20257  0A73  3001               	movlw	1	; select bank2/3
 20258  0A74  0087               	movwf	7
 20259  0A75  0181               	clrf	1
 20260  0A76                     l909:	
 20261                           ;buttons.c: 78:         }
 20262                           
 20263                           
 20264                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 20265  0A76  0828               	movf	BUTTONS_task@btn,w
 20266  0A77  3E03               	addlw	3
 20267  0A78  0086               	movwf	6
 20268  0A79  3001               	movlw	1	; select bank2/3
 20269  0A7A  0087               	movwf	7
 20270  0A7B  0801               	movf	1,w
 20271  0A7C  1D03               	btfss	3,2
 20272  0A7D  2A8E               	goto	l6627
 20273  0A7E  0828               	movf	BUTTONS_task@btn,w
 20274  0A7F  3E04               	addlw	4
 20275  0A80  0086               	movwf	6
 20276  0A81  3001               	movlw	1	; select bank2/3
 20277  0A82  0087               	movwf	7
 20278  0A83  0301               	decf	1,w
 20279  0A84  1D03               	btfss	3,2
 20280  0A85  2A8E               	goto	l6627
 20281                           
 20282                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 20283  0A86  0828               	movf	BUTTONS_task@btn,w
 20284  0A87  3E07               	addlw	7
 20285  0A88  0086               	movwf	6
 20286  0A89  3001               	movlw	1	; select bank2/3
 20287  0A8A  0087               	movwf	7
 20288  0A8B  0181               	clrf	1
 20289  0A8C  0A81               	incf	1,f
 20290                           
 20291                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 20292  0A8D  2ADB               	goto	l911
 20293  0A8E                     l6627:	
 20294  0A8E  0828               	movf	BUTTONS_task@btn,w
 20295  0A8F  3E03               	addlw	3
 20296  0A90  0086               	movwf	6
 20297  0A91  3001               	movlw	1	; select bank2/3
 20298  0A92  0087               	movwf	7
 20299  0A93  0301               	decf	1,w
 20300  0A94  1D03               	btfss	3,2
 20301  0A95  2ABC               	goto	l6637
 20302  0A96  0828               	movf	BUTTONS_task@btn,w
 20303  0A97  3E04               	addlw	4
 20304  0A98  0086               	movwf	6
 20305  0A99  3001               	movlw	1	; select bank2/3
 20306  0A9A  0087               	movwf	7
 20307  0A9B  0301               	decf	1,w
 20308  0A9C  1D03               	btfss	3,2
 20309  0A9D  2ABC               	goto	l6637
 20310                           
 20311                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 20312  0A9E  0828               	movf	BUTTONS_task@btn,w
 20313  0A9F  3E05               	addlw	5
 20314  0AA0  0086               	movwf	6
 20315  0AA1  3001               	movlw	1	; select bank2/3
 20316  0AA2  0087               	movwf	7
 20317  0AA3  3F40               	moviw [0]fsr1
 20318  0AA4  0226               	subwf	BUTTONS_task@time,w
 20319  0AA5  00A2               	movwf	??_BUTTONS_task
 20320  0AA6  3F41               	moviw [1]fsr1
 20321  0AA7  3B27               	subwfb	BUTTONS_task@time+1,w
 20322  0AA8  00A3               	movwf	??_BUTTONS_task+1
 20323  0AA9  3000               	movlw	0
 20324  0AAA  0223               	subwf	??_BUTTONS_task+1,w
 20325  0AAB  30C9               	movlw	201
 20326  0AAC  1903               	skipnz
 20327  0AAD  0222               	subwf	??_BUTTONS_task,w
 20328  0AAE  1C03               	skipc
 20329  0AAF  2AB2               	goto	l6635
 20330                           
 20331                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 20332  0AB0  3003               	movlw	3
 20333  0AB1  2AB3               	goto	L15
 20334  0AB2                     l6635:	
 20335                           ;buttons.c: 86:             } else {
 20336                           
 20337                           
 20338                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 20339  0AB2  3002               	movlw	2
 20340  0AB3                     L15:	
 20341  0AB3  00A2               	movwf	??_BUTTONS_task
 20342  0AB4  0828               	movf	BUTTONS_task@btn,w
 20343  0AB5  3E07               	addlw	7
 20344  0AB6  0086               	movwf	6
 20345  0AB7  3001               	movlw	1	; select bank2/3
 20346  0AB8  0087               	movwf	7
 20347  0AB9  0822               	movf	??_BUTTONS_task,w
 20348  0ABA  0081               	movwf	1
 20349  0ABB  2ADB               	goto	l911
 20350  0ABC                     l6637:	
 20351  0ABC  0828               	movf	BUTTONS_task@btn,w
 20352  0ABD  3E03               	addlw	3
 20353  0ABE  0086               	movwf	6
 20354  0ABF  3001               	movlw	1	; select bank2/3
 20355  0AC0  0087               	movwf	7
 20356  0AC1  0801               	movf	1,w
 20357  0AC2  1D03               	btfss	3,2
 20358  0AC3  2ADB               	goto	l911
 20359  0AC4  0828               	movf	BUTTONS_task@btn,w
 20360  0AC5  3E04               	addlw	4
 20361  0AC6  0086               	movwf	6
 20362  0AC7  3001               	movlw	1	; select bank2/3
 20363  0AC8  0087               	movwf	7
 20364  0AC9  0301               	decf	1,w
 20365  0ACA  1D03               	btfss	3,2
 20366  0ACB  2ADB               	goto	l911
 20367  0ACC  0828               	movf	BUTTONS_task@btn,w
 20368  0ACD  3E07               	addlw	7
 20369  0ACE  0086               	movwf	6
 20370  0ACF  3001               	movlw	1	; select bank2/3
 20371  0AD0  0087               	movwf	7
 20372  0AD1  3003               	movlw	3
 20373  0AD2  0601               	xorwf	1,w
 20374  0AD3  1D03               	btfss	3,2
 20375  0AD4  2ADB               	goto	l911
 20376                           
 20377                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 20378  0AD5  0828               	movf	BUTTONS_task@btn,w
 20379  0AD6  3E07               	addlw	7
 20380  0AD7  0086               	movwf	6
 20381  0AD8  3001               	movlw	1	; select bank2/3
 20382  0AD9  0087               	movwf	7
 20383  0ADA  0181               	clrf	1
 20384  0ADB                     l911:	
 20385                           
 20386                           ;buttons.c: 93:         btn->lastState = btn->state;
 20387  0ADB  0828               	movf	BUTTONS_task@btn,w
 20388  0ADC  3E03               	addlw	3
 20389  0ADD  0086               	movwf	6
 20390  0ADE  3001               	movlw	1	; select bank2/3
 20391  0ADF  0087               	movwf	7
 20392  0AE0  0801               	movf	1,w
 20393  0AE1  00A2               	movwf	??_BUTTONS_task
 20394  0AE2  0828               	movf	BUTTONS_task@btn,w
 20395  0AE3  3E04               	addlw	4
 20396  0AE4  0086               	movwf	6
 20397  0AE5  3001               	movlw	1	; select bank2/3
 20398  0AE6  0087               	movwf	7
 20399  0AE7  0822               	movf	??_BUTTONS_task,w
 20400  0AE8  0081               	movwf	1
 20401                           
 20402                           ;buttons.c: 94:     }
 20403  0AE9  3001               	movlw	1
 20404  0AEA  00A2               	movwf	??_BUTTONS_task
 20405  0AEB  0822               	movf	??_BUTTONS_task,w
 20406  0AEC  07A5               	addwf	BUTTONS_task@i,f
 20407  0AED  3004               	movlw	4
 20408  0AEE  0225               	subwf	BUTTONS_task@i,w
 20409  0AEF  1803               	btfsc	3,0
 20410  0AF0  0008               	return
 20411  0AF1  2A2F               	goto	l6613
 20412  0AF2                     __end_of_BUTTONS_task:	
 20413                           
 20414                           	psect	text66
 20415  14D2                     __ptext66:	
 20416 ;; *************** function _BUTTONS_init *****************
 20417 ;; Defined at:
 20418 ;;		line 23 in file "buttons.c"
 20419 ;; Parameters:    Size  Location     Type
 20420 ;;		None
 20421 ;; Auto vars:     Size  Location     Type
 20422 ;;		None
 20423 ;; Return value:  Size  Location     Type
 20424 ;;                  1    wreg      void 
 20425 ;; Registers used:
 20426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20427 ;; Tracked objects:
 20428 ;;		On entry : 0/0
 20429 ;;		On exit  : 0/0
 20430 ;;		Unchanged: 0/0
 20431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20434 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20435 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20436 ;;Total ram usage:        1 bytes
 20437 ;; Hardware stack levels used:    1
 20438 ;; Hardware stack levels required when called:    5
 20439 ;; This function calls:
 20440 ;;		_GPIO_init
 20441 ;;		_init
 20442 ;; This function is called by:
 20443 ;;		_main
 20444 ;; This function uses a non-reentrant model
 20445 ;;
 20446                           
 20447                           
 20448                           ;psect for function _BUTTONS_init
 20449  14D2                     _BUTTONS_init:	
 20450                           
 20451                           ;buttons.c: 24:     menu = &buttons[0];
 20452                           
 20453                           ;incstack = 0
 20454                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20455  14D2  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 20456  14D3  0140               	movlb	0	; select bank0
 20457  14D4  00A5               	movwf	??_BUTTONS_init
 20458  14D5  0825               	movf	??_BUTTONS_init,w
 20459  14D6  0141               	movlb	1	; select bank1
 20460  14D7  00C5               	movwf	_menu^(0+128)
 20461                           
 20462                           ;buttons.c: 25:     up = &buttons[1];
 20463  14D8  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 20464  14D9  0140               	movlb	0	; select bank0
 20465  14DA  00A5               	movwf	??_BUTTONS_init
 20466  14DB  0825               	movf	??_BUTTONS_init,w
 20467  14DC  0141               	movlb	1	; select bank1
 20468  14DD  00C4               	movwf	_up^(0+128)
 20469                           
 20470                           ;buttons.c: 26:     down = &buttons[2];
 20471  14DE  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 20472  14DF  0140               	movlb	0	; select bank0
 20473  14E0  00A5               	movwf	??_BUTTONS_init
 20474  14E1  0825               	movf	??_BUTTONS_init,w
 20475  14E2  0141               	movlb	1	; select bank1
 20476  14E3  00C3               	movwf	_down^(0+128)
 20477                           
 20478                           ;buttons.c: 27:     enter = &buttons[3];
 20479  14E4  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 20480  14E5  0140               	movlb	0	; select bank0
 20481  14E6  00A5               	movwf	??_BUTTONS_init
 20482  14E7  0825               	movf	??_BUTTONS_init,w
 20483  14E8  0141               	movlb	1	; select bank1
 20484  14E9  00C2               	movwf	_enter^(0+128)
 20485                           
 20486                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 20487  14EA  300E               	movlw	14
 20488  14EB  0140               	movlb	0	; select bank0
 20489  14EC  00A0               	movwf	init@port
 20490  14ED  3000               	movlw	0
 20491  14EE  00A1               	movwf	init@port+1
 20492  14EF  3002               	movlw	2
 20493  14F0  00A5               	movwf	??_BUTTONS_init
 20494  14F1  0825               	movf	??_BUTTONS_init,w
 20495  14F2  00A2               	movwf	init@pin
 20496  14F3  0141               	movlb	1	; select bank1
 20497  14F4  0845               	movf	_menu^(0+128),w
 20498  14F5  3191  2170  3194   	fcall	_init
 20499                           
 20500                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 20501  14F8  300C               	movlw	12
 20502  14F9  0140               	movlb	0	; select bank0
 20503  14FA  00A0               	movwf	init@port
 20504  14FB  3000               	movlw	0
 20505  14FC  00A1               	movwf	init@port+1
 20506  14FD  3002               	movlw	2
 20507  14FE  00A5               	movwf	??_BUTTONS_init
 20508  14FF  0825               	movf	??_BUTTONS_init,w
 20509  1500  00A2               	movwf	init@pin
 20510  1501  0141               	movlb	1	; select bank1
 20511  1502  0842               	movf	_enter^(0+128),w
 20512  1503  3191  2170  3194   	fcall	_init
 20513                           
 20514                           ;buttons.c: 31:     init(down, &PORTC, 0);
 20515  1506  300E               	movlw	14
 20516  1507  0140               	movlb	0	; select bank0
 20517  1508  00A0               	movwf	init@port
 20518  1509  3000               	movlw	0
 20519  150A  00A1               	movwf	init@port+1
 20520  150B  01A2               	clrf	init@pin
 20521  150C  0141               	movlb	1	; select bank1
 20522  150D  0843               	movf	_down^(0+128),w
 20523  150E  3191  2170  3194   	fcall	_init
 20524                           
 20525                           ;buttons.c: 32:     init(up, &PORTC, 1);
 20526  1511  300E               	movlw	14
 20527  1512  0140               	movlb	0	; select bank0
 20528  1513  00A0               	movwf	init@port
 20529  1514  3000               	movlw	0
 20530  1515  00A1               	movwf	init@port+1
 20531  1516  01A2               	clrf	init@pin
 20532  1517  0AA2               	incf	init@pin,f
 20533  1518  0141               	movlb	1	; select bank1
 20534  1519  0844               	movf	_up^(0+128),w
 20535  151A  3191  2170  3194   	fcall	_init
 20536                           
 20537                           ;buttons.c: 34:     GPIO_init();
 20538  151D  319F  27A2         	fcall	_GPIO_init
 20539  151F  0008               	return
 20540  1520                     __end_of_BUTTONS_init:	
 20541                           
 20542                           	psect	text67
 20543  1170                     __ptext67:	
 20544 ;; *************** function _init *****************
 20545 ;; Defined at:
 20546 ;;		line 16 in file "buttons.c"
 20547 ;; Parameters:    Size  Location     Type
 20548 ;;  btn             1    wreg     PTR struct .
 20549 ;;		 -> buttons(32), NULL(0), 
 20550 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 20551 ;;		 -> PORTA(1), PORTC(1), 
 20552 ;;  pin             1    2[BANK0 ] unsigned char 
 20553 ;; Auto vars:     Size  Location     Type
 20554 ;;  btn             1    4[BANK0 ] PTR struct .
 20555 ;;		 -> buttons(32), NULL(0), 
 20556 ;; Return value:  Size  Location     Type
 20557 ;;                  1    wreg      void 
 20558 ;; Registers used:
 20559 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20560 ;; Tracked objects:
 20561 ;;		On entry : 0/0
 20562 ;;		On exit  : 0/0
 20563 ;;		Unchanged: 0/0
 20564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20565 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20568 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20569 ;;Total ram usage:        5 bytes
 20570 ;; Hardware stack levels used:    1
 20571 ;; Hardware stack levels required when called:    4
 20572 ;; This function calls:
 20573 ;;		Nothing
 20574 ;; This function is called by:
 20575 ;;		_BUTTONS_init
 20576 ;; This function uses a non-reentrant model
 20577 ;;
 20578                           
 20579                           
 20580                           ;psect for function _init
 20581  1170                     _init:	
 20582                           
 20583                           ;incstack = 0
 20584                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 20585                           ;init@btn stored from wreg
 20586  1170  0140               	movlb	0	; select bank0
 20587  1171  00A4               	movwf	init@btn
 20588                           
 20589                           ;buttons.c: 17:     btn->port = port;
 20590  1172  0824               	movf	init@btn,w
 20591  1173  0086               	movwf	6
 20592  1174  3001               	movlw	1	; select bank2/3
 20593  1175  0087               	movwf	7
 20594  1176  0820               	movf	init@port,w
 20595  1177  3FC0               	movwi [0]fsr1
 20596  1178  0821               	movf	init@port+1,w
 20597  1179  3FC1               	movwi [1]fsr1
 20598                           
 20599                           ;buttons.c: 18:     btn->pin = pin;
 20600  117A  0822               	movf	init@pin,w
 20601  117B  00A3               	movwf	??_init
 20602  117C  0824               	movf	init@btn,w
 20603  117D  3E02               	addlw	2
 20604  117E  0086               	movwf	6
 20605  117F  3001               	movlw	1	; select bank2/3
 20606  1180  0087               	movwf	7
 20607  1181  0823               	movf	??_init,w
 20608  1182  0081               	movwf	1
 20609                           
 20610                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 20611  1183  0824               	movf	init@btn,w
 20612  1184  3E03               	addlw	3
 20613  1185  0086               	movwf	6
 20614  1186  3001               	movlw	1	; select bank2/3
 20615  1187  0087               	movwf	7
 20616  1188  0181               	clrf	1
 20617                           
 20618                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 20619  1189  0824               	movf	init@btn,w
 20620  118A  3E07               	addlw	7
 20621  118B  0086               	movwf	6
 20622  118C  3001               	movlw	1	; select bank2/3
 20623  118D  0087               	movwf	7
 20624  118E  0181               	clrf	1
 20625  118F  0008               	return
 20626  1190                     __end_of_init:	
 20627                           
 20628                           	psect	text68
 20629  1FA2                     __ptext68:	
 20630 ;; *************** function _GPIO_init *****************
 20631 ;; Defined at:
 20632 ;;		line 38 in file "buttons.c"
 20633 ;; Parameters:    Size  Location     Type
 20634 ;;		None
 20635 ;; Auto vars:     Size  Location     Type
 20636 ;;		None
 20637 ;; Return value:  Size  Location     Type
 20638 ;;                  1    wreg      void 
 20639 ;; Registers used:
 20640 ;;		None
 20641 ;; Tracked objects:
 20642 ;;		On entry : 0/0
 20643 ;;		On exit  : 0/0
 20644 ;;		Unchanged: 0/0
 20645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20650 ;;Total ram usage:        0 bytes
 20651 ;; Hardware stack levels used:    1
 20652 ;; Hardware stack levels required when called:    4
 20653 ;; This function calls:
 20654 ;;		Nothing
 20655 ;; This function is called by:
 20656 ;;		_BUTTONS_init
 20657 ;; This function uses a non-reentrant model
 20658 ;;
 20659                           
 20660                           
 20661                           ;psect for function _GPIO_init
 20662  1FA2                     _GPIO_init:	
 20663                           
 20664                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 20665                           
 20666                           ;incstack = 0
 20667                           ; Regs used in _GPIO_init: []
 20668  1FA2  0140               	movlb	0	; select bank0
 20669  1FA3  1512               	bsf	18,2	;volatile
 20670                           
 20671                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 20672  1FA4  017E               	movlb	62	; select bank62
 20673  1FA5  1138               	bcf	56,2	;volatile
 20674                           
 20675                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 20676  1FA6  1539               	bsf	57,2	;volatile
 20677                           
 20678                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 20679  1FA7  0140               	movlb	0	; select bank0
 20680  1FA8  1414               	bsf	20,0	;volatile
 20681                           
 20682                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 20683  1FA9  1494               	bsf	20,1	;volatile
 20684                           
 20685                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 20686  1FAA  1514               	bsf	20,2	;volatile
 20687                           
 20688                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 20689  1FAB  017E               	movlb	62	; select bank62
 20690  1FAC  104E               	bcf	78,0	;volatile
 20691                           
 20692                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 20693  1FAD  10CE               	bcf	78,1	;volatile
 20694                           
 20695                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 20696  1FAE  114E               	bcf	78,2	;volatile
 20697                           
 20698                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 20699  1FAF  144F               	bsf	79,0	;volatile
 20700                           
 20701                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 20702  1FB0  14CF               	bsf	79,1	;volatile
 20703                           
 20704                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 20705  1FB1  154F               	bsf	79,2	;volatile
 20706  1FB2  0008               	return
 20707  1FB3                     __end_of_GPIO_init:	
 20708                           
 20709                           	psect	text69
 20710  093C                     __ptext69:	
 20711 ;; *************** function _BEAT_task *****************
 20712 ;; Defined at:
 20713 ;;		line 65 in file "beat.c"
 20714 ;; Parameters:    Size  Location     Type
 20715 ;;		None
 20716 ;; Auto vars:     Size  Location     Type
 20717 ;;  offset          2   10[BANK0 ] unsigned short 
 20718 ;; Return value:  Size  Location     Type
 20719 ;;                  1    wreg      void 
 20720 ;; Registers used:
 20721 ;;		wreg, status,2, status,0, pclath, cstack
 20722 ;; Tracked objects:
 20723 ;;		On entry : 0/0
 20724 ;;		On exit  : 0/0
 20725 ;;		Unchanged: 0/0
 20726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20731 ;;Total ram usage:        4 bytes
 20732 ;; Hardware stack levels used:    1
 20733 ;; Hardware stack levels required when called:    5
 20734 ;; This function calls:
 20735 ;;		_ADCC_SetUpperThreshold
 20736 ;;		_CLOCK_getTime
 20737 ;;		___lwdiv
 20738 ;; This function is called by:
 20739 ;;		_main
 20740 ;; This function uses a non-reentrant model
 20741 ;;
 20742                           
 20743                           
 20744                           ;psect for function _BEAT_task
 20745  093C                     _BEAT_task:	
 20746                           
 20747                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 20748                           
 20749                           ;incstack = 0
 20750                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 20751  093C  319E  26BA  3189   	fcall	_CLOCK_getTime
 20752  093F  0141               	movlb	1	; select bank1
 20753  0940  0829               	movf	_lastRun^(0+128),w
 20754  0941  0140               	movlb	0	; select bank0
 20755  0942  0220               	subwf	?_CLOCK_getTime,w
 20756  0943  00A8               	movwf	??_BEAT_task
 20757  0944  0141               	movlb	1	; select bank1
 20758  0945  082A               	movf	(_lastRun+1)^(0+128),w
 20759  0946  0140               	movlb	0	; select bank0
 20760  0947  3B21               	subwfb	?_CLOCK_getTime+1,w
 20761  0948  00A9               	movwf	??_BEAT_task+1
 20762  0949  0142               	movlb	2	; select bank2
 20763  094A  0853               	movf	(_delay+1)^(0+256),w
 20764  094B  0140               	movlb	0	; select bank0
 20765  094C  0229               	subwf	??_BEAT_task+1,w
 20766  094D  1D03               	skipz
 20767  094E  2953               	goto	u6215
 20768  094F  0142               	movlb	2	; select bank2
 20769  0950  0852               	movf	_delay^(0+256),w
 20770  0951  0140               	movlb	0	; select bank0
 20771  0952  0228               	subwf	??_BEAT_task,w
 20772  0953                     u6215:	
 20773  0953  1C03               	btfss	3,0
 20774  0954  0008               	return
 20775                           
 20776                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 20777  0955  319E  26BA  3189   	fcall	_CLOCK_getTime
 20778  0958  0140               	movlb	0	; select bank0
 20779  0959  0821               	movf	?_CLOCK_getTime+1,w
 20780  095A  0141               	movlb	1	; select bank1
 20781  095B  00AA               	movwf	(_lastRun+1)^(0+128)
 20782  095C  0140               	movlb	0	; select bank0
 20783  095D  0820               	movf	?_CLOCK_getTime,w
 20784  095E  0141               	movlb	1	; select bank1
 20785  095F  00A9               	movwf	_lastRun^(0+128)
 20786                           
 20787                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 20788  0960  0338               	decf	_thresholdExceeded^(0+128),w
 20789  0961  1D03               	btfss	3,2
 20790  0962  2969               	goto	l6745
 20791                           
 20792                           ;beat.c: 77:         thresholdCount++;
 20793  0963  3001               	movlw	1
 20794  0964  0142               	movlb	2	; select bank2
 20795  0965  07B8               	addwf	_thresholdCount^(0+256),f
 20796  0966  3000               	movlw	0
 20797  0967  3DB9               	addwfc	(_thresholdCount+1)^(0+256),f
 20798                           
 20799                           ;beat.c: 78:     } else {
 20800  0968  2970               	goto	l6749
 20801  0969                     l6745:	
 20802                           
 20803                           ;beat.c: 80:         thresholdCount = 0;
 20804  0969  0142               	movlb	2	; select bank2
 20805  096A  01B8               	clrf	_thresholdCount^(0+256)
 20806  096B  01B9               	clrf	(_thresholdCount+1)^(0+256)
 20807                           
 20808                           ;beat.c: 81:         delay = 20;
 20809  096C  3014               	movlw	20
 20810  096D  00D2               	movwf	_delay^(0+256)
 20811  096E  3000               	movlw	0
 20812  096F  00D3               	movwf	(_delay^(0+256)+1)
 20813  0970                     l6749:	
 20814                           
 20815                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 20816  0970  0141               	movlb	1	; select bank1
 20817  0971  0338               	decf	_thresholdExceeded^(0+128),w
 20818  0972  1D03               	btfss	3,2
 20819  0973  29B7               	goto	l6767
 20820  0974  0837               	movf	_lastDetected^(0+128),w
 20821  0975  1D03               	btfss	3,2
 20822  0976  29B7               	goto	l6767
 20823                           
 20824                           ;beat.c: 89:         detected = 1;
 20825  0977  01B9               	clrf	_detected^(0+128)
 20826  0978  0AB9               	incf	_detected^(0+128),f
 20827                           
 20828                           ;beat.c: 92:         delay = 100;
 20829  0979  3064               	movlw	100
 20830  097A  0142               	movlb	2	; select bank2
 20831  097B  00D2               	movwf	_delay^(0+256)
 20832  097C  3000               	movlw	0
 20833  097D  00D3               	movwf	(_delay^(0+256)+1)
 20834                           
 20835                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 20836  097E  319E  26BA  3189   	fcall	_CLOCK_getTime
 20837  0981  0141               	movlb	1	; select bank1
 20838  0982  082B               	movf	_lastBeat^(0+128),w
 20839  0983  0140               	movlb	0	; select bank0
 20840  0984  0220               	subwf	?_CLOCK_getTime,w
 20841  0985  00AA               	movwf	BEAT_task@offset
 20842  0986  0141               	movlb	1	; select bank1
 20843  0987  082C               	movf	(_lastBeat+1)^(0+128),w
 20844  0988  0140               	movlb	0	; select bank0
 20845  0989  3B21               	subwfb	?_CLOCK_getTime+1,w
 20846  098A  00AB               	movwf	BEAT_task@offset+1
 20847                           
 20848                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 20849  098B  319E  26BA  3189   	fcall	_CLOCK_getTime
 20850  098E  0140               	movlb	0	; select bank0
 20851  098F  0821               	movf	?_CLOCK_getTime+1,w
 20852  0990  0141               	movlb	1	; select bank1
 20853  0991  00AC               	movwf	(_lastBeat+1)^(0+128)
 20854  0992  0140               	movlb	0	; select bank0
 20855  0993  0820               	movf	?_CLOCK_getTime,w
 20856  0994  0141               	movlb	1	; select bank1
 20857  0995  00AB               	movwf	_lastBeat^(0+128)
 20858                           
 20859                           ;beat.c: 99:         if (offset < 150)
 20860  0996  3000               	movlw	0
 20861  0997  0140               	movlb	0	; select bank0
 20862  0998  022B               	subwf	BEAT_task@offset+1,w
 20863  0999  3096               	movlw	150
 20864  099A  1903               	skipnz
 20865  099B  022A               	subwf	BEAT_task@offset,w
 20866  099C  1803               	skipnc
 20867  099D  29A4               	goto	l6765
 20868                           
 20869                           ;beat.c: 100:             bpm = 400;
 20870  099E  3090               	movlw	144
 20871  099F  0142               	movlb	2	; select bank2
 20872  09A0  00BA               	movwf	_bpm^(0+256)
 20873  09A1  3001               	movlw	1
 20874  09A2  00BB               	movwf	(_bpm^(0+256)+1)
 20875  09A3  29B7               	goto	l6767
 20876  09A4                     l6765:	
 20877                           
 20878                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 20879  09A4  082B               	movf	BEAT_task@offset+1,w
 20880  09A5  00A1               	movwf	___lwdiv@divisor+1
 20881  09A6  082A               	movf	BEAT_task@offset,w
 20882  09A7  00A0               	movwf	___lwdiv@divisor
 20883  09A8  3060               	movlw	96
 20884  09A9  00A2               	movwf	___lwdiv@dividend
 20885  09AA  30EA               	movlw	234
 20886  09AB  00A3               	movwf	___lwdiv@dividend+1
 20887  09AC  3193  23F8  3189   	fcall	___lwdiv
 20888  09AF  0140               	movlb	0	; select bank0
 20889  09B0  0821               	movf	?___lwdiv+1,w
 20890  09B1  0142               	movlb	2	; select bank2
 20891  09B2  00BB               	movwf	(_bpm+1)^(0+256)
 20892  09B3  0140               	movlb	0	; select bank0
 20893  09B4  0820               	movf	?___lwdiv,w
 20894  09B5  0142               	movlb	2	; select bank2
 20895  09B6  00BA               	movwf	_bpm^(0+256)
 20896  09B7                     l6767:	
 20897                           
 20898                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 20899  09B7  0141               	movlb	1	; select bank1
 20900  09B8  0838               	movf	_thresholdExceeded^(0+128),w
 20901  09B9  0140               	movlb	0	; select bank0
 20902  09BA  00A8               	movwf	??_BEAT_task
 20903  09BB  0828               	movf	??_BEAT_task,w
 20904  09BC  0141               	movlb	1	; select bank1
 20905  09BD  00B7               	movwf	_lastDetected^(0+128)
 20906                           
 20907                           ;beat.c: 109:     thresholdExceeded = 0;
 20908  09BE  01B8               	clrf	_thresholdExceeded^(0+128)
 20909                           
 20910                           ;beat.c: 111:     if (thresholdCount > 3) {
 20911  09BF  0142               	movlb	2	; select bank2
 20912  09C0  0839               	movf	(_thresholdCount+1)^(0+256),w
 20913  09C1  3A80               	xorlw	128
 20914  09C2  0140               	movlb	0	; select bank0
 20915  09C3  00A8               	movwf	??_BEAT_task
 20916  09C4  3080               	movlw	128
 20917  09C5  0228               	subwf	??_BEAT_task,w
 20918  09C6  1D03               	skipz
 20919  09C7  29CB               	goto	u6265
 20920  09C8  3004               	movlw	4
 20921  09C9  0142               	movlb	2	; select bank2
 20922  09CA  0238               	subwf	_thresholdCount^(0+256),w
 20923  09CB                     u6265:	
 20924  09CB  1C03               	skipc
 20925  09CC  29EA               	goto	l6781
 20926                           
 20927                           ;beat.c: 112:         threshold += 1;
 20928  09CD  3001               	movlw	1
 20929  09CE  0141               	movlb	1	; select bank1
 20930  09CF  07E6               	addwf	_threshold^(0+128),f
 20931  09D0  3000               	movlw	0
 20932  09D1  3DE7               	addwfc	(_threshold+1)^(0+128),f
 20933                           
 20934                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 20935  09D2  0867               	movf	(_threshold+1)^(0+128),w
 20936  09D3  0140               	movlb	0	; select bank0
 20937  09D4  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20938  09D5  0141               	movlb	1	; select bank1
 20939  09D6  0866               	movf	_threshold^(0+128),w
 20940  09D7  0140               	movlb	0	; select bank0
 20941  09D8  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20942  09D9  319E  26A8  3189   	fcall	_ADCC_SetUpperThreshold
 20943                           
 20944                           ;beat.c: 114:         thresholdCount = 0;
 20945  09DC  0142               	movlb	2	; select bank2
 20946  09DD  01B8               	clrf	_thresholdCount^(0+256)
 20947  09DE  01B9               	clrf	(_thresholdCount+1)^(0+256)
 20948                           
 20949                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 20950  09DF  319E  26BA         	fcall	_CLOCK_getTime
 20951  09E1  0140               	movlb	0	; select bank0
 20952  09E2  0821               	movf	?_CLOCK_getTime+1,w
 20953  09E3  0141               	movlb	1	; select bank1
 20954  09E4  00AC               	movwf	(_lastBeat+1)^(0+128)
 20955  09E5  0140               	movlb	0	; select bank0
 20956  09E6  0820               	movf	?_CLOCK_getTime,w
 20957  09E7  0141               	movlb	1	; select bank1
 20958  09E8  00AB               	movwf	_lastBeat^(0+128)
 20959                           
 20960                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 20961  09E9  0008               	return
 20962  09EA                     l6781:	
 20963  09EA  319E  26BA  3189   	fcall	_CLOCK_getTime
 20964  09ED  0141               	movlb	1	; select bank1
 20965  09EE  082B               	movf	_lastBeat^(0+128),w
 20966  09EF  0140               	movlb	0	; select bank0
 20967  09F0  0220               	subwf	?_CLOCK_getTime,w
 20968  09F1  00A8               	movwf	??_BEAT_task
 20969  09F2  0141               	movlb	1	; select bank1
 20970  09F3  082C               	movf	(_lastBeat+1)^(0+128),w
 20971  09F4  0140               	movlb	0	; select bank0
 20972  09F5  3B21               	subwfb	?_CLOCK_getTime+1,w
 20973  09F6  00A9               	movwf	??_BEAT_task+1
 20974  09F7  3003               	movlw	3
 20975  09F8  0229               	subwf	??_BEAT_task+1,w
 20976  09F9  30E9               	movlw	233
 20977  09FA  1903               	skipnz
 20978  09FB  0228               	subwf	??_BEAT_task,w
 20979  09FC  1C03               	skipc
 20980  09FD  0008               	return
 20981                           
 20982                           ;beat.c: 119:         threshold -= 1;
 20983  09FE  3001               	movlw	1
 20984  09FF  0141               	movlb	1	; select bank1
 20985  0A00  02E6               	subwf	_threshold^(0+128),f
 20986  0A01  3000               	movlw	0
 20987  0A02  3BE7               	subwfb	(_threshold+1)^(0+128),f
 20988                           
 20989                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 20990  0A03  0867               	movf	(_threshold+1)^(0+128),w
 20991  0A04  0140               	movlb	0	; select bank0
 20992  0A05  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20993  0A06  0141               	movlb	1	; select bank1
 20994  0A07  0866               	movf	_threshold^(0+128),w
 20995  0A08  0140               	movlb	0	; select bank0
 20996  0A09  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20997  0A0A  319E  26A8         	fcall	_ADCC_SetUpperThreshold
 20998  0A0C  0008               	return
 20999  0A0D                     __end_of_BEAT_task:	
 21000                           
 21001                           	psect	text70
 21002  13F8                     __ptext70:	
 21003 ;; *************** function ___lwdiv *****************
 21004 ;; Defined at:
 21005 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 21006 ;; Parameters:    Size  Location     Type
 21007 ;;  divisor         2    0[BANK0 ] unsigned int 
 21008 ;;  dividend        2    2[BANK0 ] unsigned int 
 21009 ;; Auto vars:     Size  Location     Type
 21010 ;;  quotient        2    5[BANK0 ] unsigned int 
 21011 ;;  counter         1    7[BANK0 ] unsigned char 
 21012 ;; Return value:  Size  Location     Type
 21013 ;;                  2    0[BANK0 ] unsigned int 
 21014 ;; Registers used:
 21015 ;;		wreg, status,2, status,0
 21016 ;; Tracked objects:
 21017 ;;		On entry : 0/0
 21018 ;;		On exit  : 0/0
 21019 ;;		Unchanged: 0/0
 21020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21025 ;;Total ram usage:        8 bytes
 21026 ;; Hardware stack levels used:    1
 21027 ;; Hardware stack levels required when called:    4
 21028 ;; This function calls:
 21029 ;;		Nothing
 21030 ;; This function is called by:
 21031 ;;		_TM1650_fastPrintNum
 21032 ;;		_BEAT_task
 21033 ;; This function uses a non-reentrant model
 21034 ;;
 21035                           
 21036                           
 21037                           ;psect for function ___lwdiv
 21038  13F8                     ___lwdiv:	
 21039                           
 21040                           ;incstack = 0
 21041                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 21042  13F8  0140               	movlb	0	; select bank0
 21043  13F9  01A5               	clrf	___lwdiv@quotient
 21044  13FA  01A6               	clrf	___lwdiv@quotient+1
 21045  13FB  0820               	movf	___lwdiv@divisor,w
 21046  13FC  0421               	iorwf	___lwdiv@divisor+1,w
 21047  13FD  1903               	btfsc	3,2
 21048  13FE  2C28               	goto	l4189
 21049  13FF  01A7               	clrf	___lwdiv@counter
 21050  1400  0AA7               	incf	___lwdiv@counter,f
 21051  1401                     l4177:	
 21052  1401  1BA1               	btfsc	___lwdiv@divisor+1,7
 21053  1402  2C0D               	goto	l4179
 21054  1403  3001               	movlw	1
 21055  1404                     u2795:	
 21056  1404  35A0               	lslf	___lwdiv@divisor,f
 21057  1405  0DA1               	rlf	___lwdiv@divisor+1,f
 21058  1406  0B89               	decfsz	9,f
 21059  1407  2C04               	goto	u2795
 21060  1408  3001               	movlw	1
 21061  1409  00A4               	movwf	??___lwdiv
 21062  140A  0824               	movf	??___lwdiv,w
 21063  140B  07A7               	addwf	___lwdiv@counter,f
 21064  140C  2C01               	goto	l4177
 21065  140D                     l4179:	
 21066  140D  3001               	movlw	1
 21067  140E                     u2815:	
 21068  140E  35A5               	lslf	___lwdiv@quotient,f
 21069  140F  0DA6               	rlf	___lwdiv@quotient+1,f
 21070  1410  0B89               	decfsz	9,f
 21071  1411  2C0E               	goto	u2815
 21072  1412  0821               	movf	___lwdiv@divisor+1,w
 21073  1413  0223               	subwf	___lwdiv@dividend+1,w
 21074  1414  1D03               	skipz
 21075  1415  2C18               	goto	u2825
 21076  1416  0820               	movf	___lwdiv@divisor,w
 21077  1417  0222               	subwf	___lwdiv@dividend,w
 21078  1418                     u2825:	
 21079  1418  1C03               	skipc
 21080  1419  2C1F               	goto	l4185
 21081  141A  0820               	movf	___lwdiv@divisor,w
 21082  141B  02A2               	subwf	___lwdiv@dividend,f
 21083  141C  0821               	movf	___lwdiv@divisor+1,w
 21084  141D  3BA3               	subwfb	___lwdiv@dividend+1,f
 21085  141E  1425               	bsf	___lwdiv@quotient,0
 21086  141F                     l4185:	
 21087  141F  3001               	movlw	1
 21088  1420                     u2835:	
 21089  1420  36A1               	lsrf	___lwdiv@divisor+1,f
 21090  1421  0CA0               	rrf	___lwdiv@divisor,f
 21091  1422  0B89               	decfsz	9,f
 21092  1423  2C20               	goto	u2835
 21093  1424  3001               	movlw	1
 21094  1425  02A7               	subwf	___lwdiv@counter,f
 21095  1426  1D03               	btfss	3,2
 21096  1427  2C0D               	goto	l4179
 21097  1428                     l4189:	
 21098  1428  0826               	movf	___lwdiv@quotient+1,w
 21099  1429  00A1               	movwf	?___lwdiv+1
 21100  142A  0825               	movf	___lwdiv@quotient,w
 21101  142B  00A0               	movwf	?___lwdiv
 21102  142C  0008               	return
 21103  142D                     __end_of___lwdiv:	
 21104                           
 21105                           	psect	text71
 21106  1EBA                     __ptext71:	
 21107 ;; *************** function _CLOCK_getTime *****************
 21108 ;; Defined at:
 21109 ;;		line 16 in file "clock.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;		None
 21112 ;; Auto vars:     Size  Location     Type
 21113 ;;		None
 21114 ;; Return value:  Size  Location     Type
 21115 ;;                  2    0[BANK0 ] unsigned short 
 21116 ;; Registers used:
 21117 ;;		wreg
 21118 ;; Tracked objects:
 21119 ;;		On entry : 0/0
 21120 ;;		On exit  : 0/0
 21121 ;;		Unchanged: 0/0
 21122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21127 ;;Total ram usage:        2 bytes
 21128 ;; Hardware stack levels used:    1
 21129 ;; Hardware stack levels required when called:    4
 21130 ;; This function calls:
 21131 ;;		Nothing
 21132 ;; This function is called by:
 21133 ;;		_main
 21134 ;;		_BUTTONS_task
 21135 ;;		_CONTROLLER_task
 21136 ;;		_CONTROL_DMX
 21137 ;;		_BEAT_task
 21138 ;;		_LED_task_BEAT
 21139 ;; This function uses a non-reentrant model
 21140 ;;
 21141                           
 21142                           
 21143                           ;psect for function _CLOCK_getTime
 21144  1EBA                     _CLOCK_getTime:	
 21145                           
 21146                           ;clock.c: 17:     return currentTime;
 21147                           
 21148                           ;incstack = 0
 21149                           ; Regs used in _CLOCK_getTime: [wreg]
 21150  1EBA  0141               	movlb	1	; select bank1
 21151  1EBB  0832               	movf	(_currentTime+1)^(0+128),w
 21152  1EBC  0140               	movlb	0	; select bank0
 21153  1EBD  00A1               	movwf	?_CLOCK_getTime+1
 21154  1EBE  0141               	movlb	1	; select bank1
 21155  1EBF  0831               	movf	_currentTime^(0+128),w
 21156  1EC0  0140               	movlb	0	; select bank0
 21157  1EC1  00A0               	movwf	?_CLOCK_getTime
 21158  1EC2  0008               	return
 21159  1EC3                     __end_of_CLOCK_getTime:	
 21160                           
 21161                           	psect	text72
 21162  0800                     __ptext72:	
 21163 ;; *************** function _BEAT_init *****************
 21164 ;; Defined at:
 21165 ;;		line 39 in file "beat.c"
 21166 ;; Parameters:    Size  Location     Type
 21167 ;;		None
 21168 ;; Auto vars:     Size  Location     Type
 21169 ;;		None
 21170 ;; Return value:  Size  Location     Type
 21171 ;;                  1    wreg      void 
 21172 ;; Registers used:
 21173 ;;		wreg, status,2, status,0, pclath, cstack
 21174 ;; Tracked objects:
 21175 ;;		On entry : 0/0
 21176 ;;		On exit  : 0/0
 21177 ;;		Unchanged: 0/0
 21178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21183 ;;Total ram usage:        0 bytes
 21184 ;; Hardware stack levels used:    1
 21185 ;; Hardware stack levels required when called:    5
 21186 ;; This function calls:
 21187 ;;		_ADCC_SetADTIInterruptHandler
 21188 ;;		_ADCC_SetUpperThreshold
 21189 ;;		_ADCC_StartConversion
 21190 ;; This function is called by:
 21191 ;;		_main
 21192 ;; This function uses a non-reentrant model
 21193 ;;
 21194                           
 21195                           
 21196                           ;psect for function _BEAT_init
 21197  0800                     _BEAT_init:	
 21198                           
 21199                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 21200                           
 21201                           ;incstack = 0
 21202                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 21203  0800  0141               	movlb	1	; select bank1
 21204  0801  0867               	movf	(_threshold+1)^(0+128),w
 21205  0802  0140               	movlb	0	; select bank0
 21206  0803  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 21207  0804  0141               	movlb	1	; select bank1
 21208  0805  0866               	movf	_threshold^(0+128),w
 21209  0806  0140               	movlb	0	; select bank0
 21210  0807  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 21211  0808  319E  26A8  3188   	fcall	_ADCC_SetUpperThreshold
 21212                           
 21213                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 21214  080B  3088               	movlw	low _adcThresholdHandler
 21215  080C  0140               	movlb	0	; select bank0
 21216  080D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 21217  080E  301E               	movlw	high _adcThresholdHandler
 21218  080F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 21219  0810  319E  269F  3188   	fcall	_ADCC_SetADTIInterruptHandler
 21220                           
 21221                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 21222  0813  300F               	movlw	15
 21223  0814  319E  26B1         	fcall	_ADCC_StartConversion
 21224  0816  0008               	return
 21225  0817                     __end_of_BEAT_init:	
 21226                           
 21227                           	psect	text73
 21228  1EB1                     __ptext73:	
 21229 ;; *************** function _ADCC_StartConversion *****************
 21230 ;; Defined at:
 21231 ;;		line 121 in file "mcc_generated_files/adcc.c"
 21232 ;; Parameters:    Size  Location     Type
 21233 ;;  channel         1    wreg     enum E10867
 21234 ;; Auto vars:     Size  Location     Type
 21235 ;;  channel         1    0[BANK0 ] enum E10867
 21236 ;; Return value:  Size  Location     Type
 21237 ;;                  1    wreg      void 
 21238 ;; Registers used:
 21239 ;;		wreg
 21240 ;; Tracked objects:
 21241 ;;		On entry : 0/0
 21242 ;;		On exit  : 0/0
 21243 ;;		Unchanged: 0/0
 21244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21248 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21249 ;;Total ram usage:        1 bytes
 21250 ;; Hardware stack levels used:    1
 21251 ;; Hardware stack levels required when called:    4
 21252 ;; This function calls:
 21253 ;;		Nothing
 21254 ;; This function is called by:
 21255 ;;		_BEAT_init
 21256 ;; This function uses a non-reentrant model
 21257 ;;
 21258                           
 21259                           
 21260                           ;psect for function _ADCC_StartConversion
 21261  1EB1                     _ADCC_StartConversion:	
 21262                           
 21263                           ;incstack = 0
 21264                           ; Regs used in _ADCC_StartConversion: [wreg]
 21265                           ;ADCC_StartConversion@channel stored from wreg
 21266  1EB1  0140               	movlb	0	; select bank0
 21267  1EB2  00A0               	movwf	ADCC_StartConversion@channel
 21268                           
 21269                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 21270  1EB3  0820               	movf	ADCC_StartConversion@channel,w
 21271  1EB4  0141               	movlb	1	; select bank1
 21272  1EB5  009F               	movwf	31	;volatile
 21273                           
 21274                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 21275  1EB6  0142               	movlb	2	; select bank2
 21276  1EB7  1791               	bsf	17,7	;volatile
 21277                           
 21278                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 21279  1EB8  1411               	bsf	17,0	;volatile
 21280  1EB9  0008               	return
 21281  1EBA                     __end_of_ADCC_StartConversion:	
 21282                           
 21283                           	psect	text74
 21284  1EA8                     __ptext74:	
 21285 ;; *************** function _ADCC_SetUpperThreshold *****************
 21286 ;; Defined at:
 21287 ;;		line 251 in file "mcc_generated_files/adcc.c"
 21288 ;; Parameters:    Size  Location     Type
 21289 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 21290 ;; Auto vars:     Size  Location     Type
 21291 ;;		None
 21292 ;; Return value:  Size  Location     Type
 21293 ;;                  1    wreg      void 
 21294 ;; Registers used:
 21295 ;;		wreg, status,2
 21296 ;; Tracked objects:
 21297 ;;		On entry : 0/0
 21298 ;;		On exit  : 0/0
 21299 ;;		Unchanged: 0/0
 21300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21304 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21305 ;;Total ram usage:        2 bytes
 21306 ;; Hardware stack levels used:    1
 21307 ;; Hardware stack levels required when called:    4
 21308 ;; This function calls:
 21309 ;;		Nothing
 21310 ;; This function is called by:
 21311 ;;		_BEAT_init
 21312 ;;		_BEAT_task
 21313 ;; This function uses a non-reentrant model
 21314 ;;
 21315                           
 21316                           
 21317                           ;psect for function _ADCC_SetUpperThreshold
 21318  1EA8                     _ADCC_SetUpperThreshold:	
 21319                           
 21320                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 21321                           
 21322                           ;incstack = 0
 21323                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 21324  1EA8  0140               	movlb	0	; select bank0
 21325  1EA9  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 21326  1EAA  0141               	movlb	1	; select bank1
 21327  1EAB  008F               	movwf	15	;volatile
 21328                           
 21329                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 21330  1EAC  0140               	movlb	0	; select bank0
 21331  1EAD  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 21332  1EAE  0141               	movlb	1	; select bank1
 21333  1EAF  008E               	movwf	14	;volatile
 21334  1EB0  0008               	return
 21335  1EB1                     __end_of_ADCC_SetUpperThreshold:	
 21336                           
 21337                           	psect	text75
 21338  1E9F                     __ptext75:	
 21339 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 21340 ;; Defined at:
 21341 ;;		line 317 in file "mcc_generated_files/adcc.c"
 21342 ;; Parameters:    Size  Location     Type
 21343 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21344 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 21345 ;; Auto vars:     Size  Location     Type
 21346 ;;		None
 21347 ;; Return value:  Size  Location     Type
 21348 ;;                  1    wreg      void 
 21349 ;; Registers used:
 21350 ;;		wreg
 21351 ;; Tracked objects:
 21352 ;;		On entry : 0/0
 21353 ;;		On exit  : 0/0
 21354 ;;		Unchanged: 0/0
 21355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21360 ;;Total ram usage:        2 bytes
 21361 ;; Hardware stack levels used:    1
 21362 ;; Hardware stack levels required when called:    4
 21363 ;; This function calls:
 21364 ;;		Nothing
 21365 ;; This function is called by:
 21366 ;;		_ADCC_Initialize
 21367 ;;		_BEAT_init
 21368 ;; This function uses a non-reentrant model
 21369 ;;
 21370                           
 21371                           
 21372                           ;psect for function _ADCC_SetADTIInterruptHandler
 21373  1E9F                     _ADCC_SetADTIInterruptHandler:	
 21374                           
 21375                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 21376                           
 21377                           ;incstack = 0
 21378                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 21379  1E9F  0140               	movlb	0	; select bank0
 21380  1EA0  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 21381  1EA1  0142               	movlb	2	; select bank2
 21382  1EA2  00C5               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 21383  1EA3  0140               	movlb	0	; select bank0
 21384  1EA4  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 21385  1EA5  0142               	movlb	2	; select bank2
 21386  1EA6  00C4               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 21387  1EA7  0008               	return
 21388  1EA8                     __end_of_ADCC_SetADTIInterruptHandler:	
 21389                           
 21390                           	psect	intentry
 21391  0004                     __pintentry:	
 21392 ;; *************** function _INTERRUPT_InterruptManager *****************
 21393 ;; Defined at:
 21394 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21395 ;; Parameters:    Size  Location     Type
 21396 ;;		None
 21397 ;; Auto vars:     Size  Location     Type
 21398 ;;		None
 21399 ;; Return value:  Size  Location     Type
 21400 ;;                  1    wreg      void 
 21401 ;; Registers used:
 21402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21403 ;; Tracked objects:
 21404 ;;		On entry : 0/0
 21405 ;;		On exit  : 0/0
 21406 ;;		Unchanged: 0/0
 21407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21412 ;;Total ram usage:        0 bytes
 21413 ;; Hardware stack levels used:    1
 21414 ;; Hardware stack levels required when called:    3
 21415 ;; This function calls:
 21416 ;;		Absolute function
 21417 ;;		_ADCC_ThresholdISR
 21418 ;;		_DMX_interrupt
 21419 ;;		_EUSART1_Receive_ISR
 21420 ;;		_I2C1_BusCollisionISR
 21421 ;;		_I2C1_ISR
 21422 ;;		_TMR0_ISR
 21423 ;; This function is called by:
 21424 ;;		Interrupt level 1
 21425 ;; This function uses a non-reentrant model
 21426 ;;
 21427                           
 21428  0004                     _INTERRUPT_InterruptManager:	
 21429                           
 21430                           ;incstack = 0
 21431 ;; hardware stack exceeded
 21432  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21433                           
 21434                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21435  0005  3180               	pagesel	$
 21436                           
 21437                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 21438  0006  014E               	movlb	14	; select bank14
 21439  0007  1A96               	btfsc	22,5	;volatile
 21440  0008  1E8C               	btfss	12,5	;volatile
 21441  0009  280E               	goto	i1l429
 21442                           
 21443                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 21444  000A  319F  2767  3180   	fcall	_TMR0_ISR
 21445                           
 21446                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 21447  000D  282E               	goto	i1l441
 21448  000E                     i1l429:	
 21449                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 21450                           
 21451  000E  1F0B               	btfss	11,6	;volatile
 21452  000F  282E               	goto	i1l441
 21453                           
 21454                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 21455  0010  1899               	btfsc	25,1	;volatile
 21456  0011  1C8F               	btfss	15,1	;volatile
 21457  0012  2817               	goto	i1l432
 21458                           
 21459                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 21460  0013  319E  267F  3180   	fcall	_I2C1_BusCollisionISR
 21461                           
 21462                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 21463  0016  282E               	goto	i1l441
 21464  0017                     i1l432:	
 21465                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 21466                           
 21467  0017  1819               	btfsc	25,0	;volatile
 21468  0018  1C0F               	btfss	15,0	;volatile
 21469  0019  281E               	goto	i1l434
 21470                           
 21471                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 21472  001A  318B  23E1  3180   	fcall	_I2C1_ISR
 21473                           
 21474                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 21475  001D  282E               	goto	i1l441
 21476  001E                     i1l434:	
 21477                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 21478                           
 21479  001E  1897               	btfsc	23,1	;volatile
 21480  001F  1C8D               	btfss	13,1	;volatile
 21481  0020  2825               	goto	i1l436
 21482                           
 21483                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 21484  0021  319F  275A  3180   	fcall	_ADCC_ThresholdISR
 21485                           
 21486                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 21487  0024  282E               	goto	i1l441
 21488  0025                     i1l436:	
 21489                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 21490                           
 21491  0025  1A99               	btfsc	25,5	;volatile
 21492  0026  1E8F               	btfss	15,5	;volatile
 21493  0027  282E               	goto	i1l441
 21494                           
 21495                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 21496  0028  0142               	movlb	2	; select bank2
 21497  0029  084F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 21498  002A  008A               	movwf	10
 21499  002B  084E               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 21500  002C  000A               	callw
 21501  002D  3180               	pagesel	$
 21502  002E                     i1l441:	
 21503                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 21504                           
 21505  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21506  002F  0009               	retfie
 21507  0030                     __end_of_INTERRUPT_InterruptManager:	
 21508                           
 21509                           	psect	text77
 21510  1F67                     __ptext77:	
 21511 ;; *************** function _TMR0_ISR *****************
 21512 ;; Defined at:
 21513 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 21514 ;; Parameters:    Size  Location     Type
 21515 ;;		None
 21516 ;; Auto vars:     Size  Location     Type
 21517 ;;		None
 21518 ;; Return value:  Size  Location     Type
 21519 ;;                  1    wreg      void 
 21520 ;; Registers used:
 21521 ;;		wreg, status,2, status,0, pclath, cstack
 21522 ;; Tracked objects:
 21523 ;;		On entry : 0/0
 21524 ;;		On exit  : 0/0
 21525 ;;		Unchanged: 0/0
 21526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21531 ;;Total ram usage:        0 bytes
 21532 ;; Hardware stack levels used:    1
 21533 ;; Hardware stack levels required when called:    1
 21534 ;; This function calls:
 21535 ;;		Absolute function
 21536 ;;		_CLOCK_timerCallback
 21537 ;;		_TMR0_DefaultInterruptHandler
 21538 ;; This function is called by:
 21539 ;;		_INTERRUPT_InterruptManager
 21540 ;; This function uses a non-reentrant model
 21541 ;;
 21542                           
 21543                           
 21544                           ;psect for function _TMR0_ISR
 21545  1F67                     _TMR0_ISR:	
 21546                           
 21547                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 21548                           
 21549                           ;incstack = 0
 21550 ;; hardware stack exceeded
 21551                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 21552  1F67  014E               	movlb	14	; select bank14
 21553  1F68  128C               	bcf	12,5	;volatile
 21554                           
 21555                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 21556  1F69  0142               	movlb	2	; select bank2
 21557  1F6A  0846               	movf	_TMR0_InterruptHandler^(0+256),w
 21558  1F6B  0447               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 21559  1F6C  1903               	btfsc	3,2
 21560  1F6D  0008               	return
 21561                           
 21562                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 21563  1F6E  0847               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 21564  1F6F  008A               	movwf	10
 21565  1F70  0846               	movf	_TMR0_InterruptHandler^(0+256),w
 21566  1F71  000A               	callw
 21567  1F72  319F               	pagesel	$
 21568  1F73  0008               	return
 21569  1F74                     __end_of_TMR0_ISR:	
 21570                           
 21571                           	psect	text78
 21572  1E99                     __ptext78:	
 21573 ;; *************** function _CLOCK_timerCallback *****************
 21574 ;; Defined at:
 21575 ;;		line 20 in file "clock.c"
 21576 ;; Parameters:    Size  Location     Type
 21577 ;;		None
 21578 ;; Auto vars:     Size  Location     Type
 21579 ;;		None
 21580 ;; Return value:  Size  Location     Type
 21581 ;;                  1    wreg      void 
 21582 ;; Registers used:
 21583 ;;		wreg
 21584 ;; Tracked objects:
 21585 ;;		On entry : 0/0
 21586 ;;		On exit  : 0/0
 21587 ;;		Unchanged: 0/0
 21588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21593 ;;Total ram usage:        0 bytes
 21594 ;; Hardware stack levels used:    1
 21595 ;; This function calls:
 21596 ;;		Nothing
 21597 ;; This function is called by:
 21598 ;;		_CLOCK_init
 21599 ;;		_TMR0_ISR
 21600 ;; This function uses a non-reentrant model
 21601 ;;
 21602                           
 21603                           
 21604                           ;psect for function _CLOCK_timerCallback
 21605  1E99                     _CLOCK_timerCallback:	
 21606                           
 21607                           ;clock.c: 21:     currentTime++;
 21608                           
 21609                           ;incstack = 0
 21610 ;; hardware stack exceeded
 21611                           ; Regs used in _CLOCK_timerCallback: [wreg]
 21612  1E99  3001               	movlw	1
 21613  1E9A  0141               	movlb	1	; select bank1
 21614  1E9B  07B1               	addwf	_currentTime^(0+128),f
 21615  1E9C  3000               	movlw	0
 21616  1E9D  3DB2               	addwfc	(_currentTime+1)^(0+128),f
 21617  1E9E  0008               	return
 21618  1E9F                     __end_of_CLOCK_timerCallback:	
 21619                           
 21620                           	psect	text79
 21621  0002                     __ptext79:	
 21622 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 21623 ;; Defined at:
 21624 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 21625 ;; Parameters:    Size  Location     Type
 21626 ;;		None
 21627 ;; Auto vars:     Size  Location     Type
 21628 ;;		None
 21629 ;; Return value:  Size  Location     Type
 21630 ;;                  1    wreg      void 
 21631 ;; Registers used:
 21632 ;;		None
 21633 ;; Tracked objects:
 21634 ;;		On entry : 0/0
 21635 ;;		On exit  : 0/0
 21636 ;;		Unchanged: 0/0
 21637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21642 ;;Total ram usage:        0 bytes
 21643 ;; Hardware stack levels used:    1
 21644 ;; This function calls:
 21645 ;;		Nothing
 21646 ;; This function is called by:
 21647 ;;		_TMR0_Initialize
 21648 ;;		_TMR0_ISR
 21649 ;; This function uses a non-reentrant model
 21650 ;;
 21651                           
 21652                           
 21653                           ;psect for function _TMR0_DefaultInterruptHandler
 21654  0002                     _TMR0_DefaultInterruptHandler:	
 21655                           
 21656                           ;incstack = 0
 21657 ;; hardware stack exceeded
 21658                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 21659  0002  0008               	return
 21660  0003                     __end_of_TMR0_DefaultInterruptHandler:	
 21661                           
 21662                           	psect	text80
 21663  0BE1                     __ptext80:	
 21664 ;; *************** function _I2C1_ISR *****************
 21665 ;; Defined at:
 21666 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 21667 ;; Parameters:    Size  Location     Type
 21668 ;;		None
 21669 ;; Auto vars:     Size  Location     Type
 21670 ;;		None
 21671 ;; Return value:  Size  Location     Type
 21672 ;;                  1    wreg      void 
 21673 ;; Registers used:
 21674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21675 ;; Tracked objects:
 21676 ;;		On entry : 0/0
 21677 ;;		On exit  : 0/0
 21678 ;;		Unchanged: 0/0
 21679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21684 ;;Total ram usage:        4 bytes
 21685 ;; Hardware stack levels used:    1
 21686 ;; Hardware stack levels required when called:    1
 21687 ;; This function calls:
 21688 ;;		_I2C1_FunctionComplete
 21689 ;;		_I2C1_Stop
 21690 ;; This function is called by:
 21691 ;;		_INTERRUPT_InterruptManager
 21692 ;; This function uses a non-reentrant model
 21693 ;;
 21694                           
 21695                           
 21696                           ;psect for function _I2C1_ISR
 21697  0BE1                     _I2C1_ISR:	
 21698                           
 21699                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 21700                           
 21701                           ;incstack = 0
 21702 ;; hardware stack exceeded
 21703                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21704  0BE1  014E               	movlb	14	; select bank14
 21705  0BE2  100F               	bcf	15,0	;volatile
 21706                           
 21707                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 21708  0BE3  0143               	movlb	3	; select bank3
 21709  0BE4  1F90               	btfss	16,7	;volatile
 21710  0BE5  2D02               	goto	i1l5379
 21711                           
 21712                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 21713  0BE6  1390               	bcf	16,7	;volatile
 21714                           
 21715                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 21716  0BE7  0141               	movlb	1	; select bank1
 21717  0BE8  01CB               	clrf	_i2c1_state^(0+128)
 21718                           
 21719                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 21720  0BE9  0849               	movf	_p_i2c1_current^(0+128),w
 21721  0BEA  3E02               	addlw	2
 21722  0BEB  0086               	movwf	6
 21723  0BEC  0187               	clrf	7
 21724  0BED  0801               	movf	1,w
 21725  0BEE  0086               	movwf	6
 21726  0BEF  0187               	clrf	7
 21727  0BF0  0181               	clrf	1
 21728  0BF1  0A81               	incf	1,f
 21729                           
 21730                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 21731  0BF2  01C9               	clrf	_p_i2c1_current^(0+128)
 21732  0BF3  0008               	return
 21733  0BF4                     i1l549:	
 21734                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 21735                           
 21736                           
 21737                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 21738  0BF4  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 21739  0BF5  0008               	return
 21740                           
 21741                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 21742  0BF6  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21743  0BF7  00F9               	movwf	??_I2C1_ISR
 21744  0BF8  0879               	movf	??_I2C1_ISR,w
 21745  0BF9  00C9               	movwf	_p_i2c1_current^(0+128)
 21746                           
 21747                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 21748  0BFA  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21749  0BFB  0086               	movwf	6
 21750  0BFC  0187               	clrf	7
 21751  0BFD  0801               	movf	1,w
 21752  0BFE  00F9               	movwf	??_I2C1_ISR
 21753  0BFF  0879               	movf	??_I2C1_ISR,w
 21754  0C00  00CA               	movwf	_i2c1_trb_count^(0+128)
 21755                           
 21756                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 21757  0C01  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21758  0C02  0086               	movwf	6
 21759  0C03  0187               	clrf	7
 21760  0C04  3F41               	moviw [1]fsr1
 21761  0C05  00F2               	movwf	_p_i2c1_trb_current
 21762                           
 21763                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 21764  0C06  3003               	movlw	3
 21765  0C07  00F9               	movwf	??_I2C1_ISR
 21766  0C08  0879               	movf	??_I2C1_ISR,w
 21767  0C09  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 21768                           
 21769                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 21770  0C0A  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21771  0C0B  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 21772  0C0C  1D03               	skipz
 21773  0C0D  2C12               	goto	i1l5267
 21774                           
 21775                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 21776  0C0E  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 21777  0C0F  00F9               	movwf	??_I2C1_ISR
 21778  0C10  0879               	movf	??_I2C1_ISR,w
 21779  0C11  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 21780  0C12                     i1l5267:	
 21781                           
 21782                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 21783  0C12  1022               	bcf	(_i2c1_object^(0+128)+2),0
 21784                           
 21785                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 21786  0C13  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21787  0C14  0620               	xorwf	_i2c1_object^(0+128),w
 21788  0C15  1903               	btfsc	3,2
 21789                           
 21790                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 21791  0C16  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 21792                           
 21793                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 21794                           
 21795                           ;mcc_generated_files/i2c1.c: 290:                 }
 21796  0C17  0143               	movlb	3	; select bank3
 21797  0C18  1411               	bsf	17,0	;volatile
 21798  0C19                     i1l5271:	
 21799                           
 21800                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 21801  0C19  3002               	movlw	2
 21802  0C1A  00F9               	movwf	??_I2C1_ISR
 21803  0C1B  0879               	movf	??_I2C1_ISR,w
 21804  0C1C  0141               	movlb	1	; select bank1
 21805  0C1D  00CB               	movwf	_i2c1_state^(0+128)
 21806  0C1E  0008               	return
 21807  0C1F                     i1l554:	
 21808                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 21809                           
 21810  0C1F  2CAB               	goto	i1l575
 21811  0C20                     i1l555:	
 21812                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 21813                           
 21814                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 21815                           
 21816                           
 21817                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 21818  0C20  0143               	movlb	3	; select bank3
 21819  0C21  1F11               	btfss	17,6	;volatile
 21820  0C22  2C2C               	goto	i1l5279
 21821                           
 21822                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 21823  0C23  3001               	movlw	1
 21824  0C24  00F9               	movwf	??_I2C1_ISR
 21825  0C25  0879               	movf	??_I2C1_ISR,w
 21826  0C26  0141               	movlb	1	; select bank1
 21827  0C27  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 21828                           
 21829                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21830  0C28  3004               	movlw	4
 21831  0C29  3190  205E         	fcall	_I2C1_Stop
 21832                           
 21833                           ;mcc_generated_files/i2c1.c: 319:             }
 21834  0C2B  0008               	return
 21835  0C2C                     i1l5279:	
 21836                           
 21837                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 21838  0C2C  0876               	movf	I2C1_ISR@i2c_address+1,w
 21839  0C2D  00FA               	movwf	??_I2C1_ISR+1
 21840  0C2E  0875               	movf	I2C1_ISR@i2c_address,w
 21841  0C2F  00F9               	movwf	??_I2C1_ISR
 21842  0C30  36FA               	lsrf	??_I2C1_ISR+1,f
 21843  0C31  0CF9               	rrf	??_I2C1_ISR,f
 21844  0C32  0879               	movf	??_I2C1_ISR,w
 21845  0C33  008C               	movwf	12	;volatile
 21846                           
 21847                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 21848  0C34  1C75               	btfss	I2C1_ISR@i2c_address,0
 21849  0C35  2C3C               	goto	i1l5285
 21850                           
 21851                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 21852  0C36  300B               	movlw	11
 21853  0C37  00F9               	movwf	??_I2C1_ISR
 21854  0C38  0879               	movf	??_I2C1_ISR,w
 21855  0C39  0141               	movlb	1	; select bank1
 21856  0C3A  00CB               	movwf	_i2c1_state^(0+128)
 21857                           
 21858                           ;mcc_generated_files/i2c1.c: 331:                 }
 21859  0C3B  0008               	return
 21860  0C3C                     i1l5285:	
 21861                           
 21862                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 21863  0C3C  3003               	movlw	3
 21864  0C3D  00F9               	movwf	??_I2C1_ISR
 21865  0C3E  0879               	movf	??_I2C1_ISR,w
 21866  0C3F  0141               	movlb	1	; select bank1
 21867  0C40  00CB               	movwf	_i2c1_state^(0+128)
 21868  0C41  0008               	return
 21869  0C42                     i1l560:	
 21870                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 21871                           
 21872                           
 21873                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 21874  0C42  0143               	movlb	3	; select bank3
 21875  0C43  1F11               	btfss	17,6	;volatile
 21876  0C44  2C4E               	goto	i1l561
 21877                           
 21878                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 21879  0C45  3001               	movlw	1
 21880  0C46  00F9               	movwf	??_I2C1_ISR
 21881  0C47  0879               	movf	??_I2C1_ISR,w
 21882  0C48  0141               	movlb	1	; select bank1
 21883  0C49  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 21884                           
 21885                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21886  0C4A  3004               	movlw	4
 21887  0C4B  3190  205E         	fcall	_I2C1_Stop
 21888                           
 21889                           ;mcc_generated_files/i2c1.c: 347:             }
 21890  0C4D  0008               	return
 21891  0C4E                     i1l561:	
 21892                           ;mcc_generated_files/i2c1.c: 348:             else
 21893                           
 21894                           
 21895                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 21896  0C4E  1491               	bsf	17,1	;volatile
 21897                           
 21898                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 21899  0C4F  0876               	movf	I2C1_ISR@i2c_address+1,w
 21900  0C50  00FA               	movwf	??_I2C1_ISR+1
 21901  0C51  0875               	movf	I2C1_ISR@i2c_address,w
 21902  0C52  00F9               	movwf	??_I2C1_ISR
 21903  0C53  087A               	movf	??_I2C1_ISR+1,w
 21904  0C54  00F9               	movwf	??_I2C1_ISR
 21905  0C55  01FA               	clrf	??_I2C1_ISR+1
 21906  0C56  3006               	movlw	6
 21907  0C57  0579               	andwf	??_I2C1_ISR,w
 21908  0C58  00FB               	movwf	??_I2C1_ISR+2
 21909  0C59  3000               	movlw	0
 21910  0C5A  057A               	andwf	??_I2C1_ISR+1,w
 21911  0C5B  00FC               	movwf	??_I2C1_ISR+3
 21912  0C5C  30F0               	movlw	240
 21913  0C5D  047B               	iorwf	??_I2C1_ISR+2,w
 21914  0C5E  00F5               	movwf	I2C1_ISR@i2c_address
 21915  0C5F  3000               	movlw	0
 21916  0C60  047C               	iorwf	??_I2C1_ISR+3,w
 21917  0C61  00F6               	movwf	I2C1_ISR@i2c_address+1
 21918                           
 21919                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 21920  0C62  1475               	bsf	I2C1_ISR@i2c_address,0
 21921                           
 21922                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 21923  0C63  0141               	movlb	1	; select bank1
 21924  0C64  01C6               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 21925  0C65  0AC6               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 21926  0C66  2C19               	goto	i1l5271
 21927  0C67                     i1l5299:	
 21928                           
 21929                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 21930  0C67  0346               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 21931  0C68  1903               	btfsc	3,2
 21932  0C69  2C80               	goto	i1l5319
 21933                           
 21934                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 21935  0C6A  0872               	movf	_p_i2c1_trb_current,w
 21936  0C6B  0086               	movwf	6
 21937  0C6C  3001               	movlw	1	; select bank2/3
 21938  0C6D  0087               	movwf	7
 21939  0C6E  3F40               	moviw [0]fsr1
 21940  0C6F  00F5               	movwf	I2C1_ISR@i2c_address
 21941  0C70  3F41               	moviw [1]fsr1
 21942  0C71  00F6               	movwf	I2C1_ISR@i2c_address+1
 21943                           
 21944                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 21945  0C72  0872               	movf	_p_i2c1_trb_current,w
 21946  0C73  0086               	movwf	6
 21947  0C74  3001               	movlw	1	; select bank2/3
 21948  0C75  0087               	movwf	7
 21949  0C76  3001               	movlw	1	; select bank2/3
 21950  0C77  3F43               	moviw [3]fsr1
 21951  0C78  00C8               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 21952                           
 21953                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 21954  0C79  0872               	movf	_p_i2c1_trb_current,w
 21955  0C7A  0086               	movwf	6
 21956  0C7B  3001               	movlw	1	; select bank2/3
 21957  0C7C  0087               	movwf	7
 21958  0C7D  3001               	movlw	1	; select bank2/3
 21959  0C7E  3F42               	moviw [2]fsr1
 21960  0C7F  00C7               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 21961  0C80                     i1l5319:	
 21962                           
 21963                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 21964  0C80  0875               	movf	I2C1_ISR@i2c_address,w
 21965  0C81  0143               	movlb	3	; select bank3
 21966  0C82  008C               	movwf	12	;volatile
 21967                           
 21968                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 21969  0C83  1C75               	btfss	I2C1_ISR@i2c_address,0
 21970  0C84  2C3C               	goto	i1l5285
 21971                           
 21972                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 21973  0C85  3005               	movlw	5
 21974  0C86  00F9               	movwf	??_I2C1_ISR
 21975  0C87  0879               	movf	??_I2C1_ISR,w
 21976  0C88  0141               	movlb	1	; select bank1
 21977  0C89  00CB               	movwf	_i2c1_state^(0+128)
 21978                           
 21979                           ;mcc_generated_files/i2c1.c: 419:                 }
 21980  0C8A  0008               	return
 21981  0C8B                     i1l571:	
 21982                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 21983                           
 21984                           
 21985                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 21986  0C8B  0143               	movlb	3	; select bank3
 21987  0C8C  1F11               	btfss	17,6	;volatile
 21988  0C8D  2C99               	goto	i1l5333
 21989                           
 21990                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 21991  0C8E  3001               	movlw	1
 21992  0C8F  00F9               	movwf	??_I2C1_ISR
 21993  0C90  0879               	movf	??_I2C1_ISR,w
 21994  0C91  0141               	movlb	1	; select bank1
 21995  0C92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 21996                           
 21997                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 21998  0C93  0143               	movlb	3	; select bank3
 21999  0C94  1311               	bcf	17,6	;volatile
 22000                           
 22001                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 22002  0C95  3005               	movlw	5
 22003  0C96  3190  205E         	fcall	_I2C1_Stop
 22004                           
 22005                           ;mcc_generated_files/i2c1.c: 442:             }
 22006  0C98  0008               	return
 22007  0C99                     i1l5333:	
 22008                           
 22009                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 22010  0C99  3001               	movlw	1
 22011  0C9A  0141               	movlb	1	; select bank1
 22012  0C9B  02C7               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 22013  0C9C  0A47               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 22014  0C9D  1D03               	btfss	3,2
 22015  0C9E  2CAE               	goto	i1l5341
 22016                           
 22017                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 22018  0C9F  3004               	movlw	4
 22019  0CA0  00F9               	movwf	??_I2C1_ISR
 22020  0CA1  0879               	movf	??_I2C1_ISR,w
 22021  0CA2  07F2               	addwf	_p_i2c1_trb_current,f
 22022                           
 22023                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 22024  0CA3  3001               	movlw	1
 22025  0CA4  02CA               	subwf	_i2c1_trb_count^(0+128),f
 22026  0CA5  1D03               	btfss	3,2
 22027  0CA6  2CAB               	goto	i1l575
 22028                           
 22029                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 22030  0CA7  3000               	movlw	0
 22031  0CA8  3190  205E         	fcall	_I2C1_Stop
 22032                           
 22033                           ;mcc_generated_files/i2c1.c: 457:                     }
 22034  0CAA  0008               	return
 22035  0CAB                     i1l575:	
 22036                           ;mcc_generated_files/i2c1.c: 458:                     else
 22037                           
 22038                           
 22039                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 22040  0CAB  0143               	movlb	3	; select bank3
 22041  0CAC  1491               	bsf	17,1	;volatile
 22042  0CAD  2C19               	goto	i1l5271
 22043  0CAE                     i1l5341:	
 22044                           
 22045                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 22046  0CAE  0848               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 22047  0CAF  0086               	movwf	6
 22048  0CB0  0187               	clrf	7
 22049  0CB1  0801               	movf	1,w
 22050  0CB2  0143               	movlb	3	; select bank3
 22051  0CB3  008C               	movwf	12	;volatile
 22052  0CB4  3001               	movlw	1
 22053  0CB5  00F9               	movwf	??_I2C1_ISR
 22054  0CB6  0879               	movf	??_I2C1_ISR,w
 22055  0CB7  0141               	movlb	1	; select bank1
 22056  0CB8  07C8               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 22057  0CB9  0008               	return
 22058  0CBA                     i1l578:	
 22059                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 22060                           
 22061                           
 22062                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 22063  0CBA  0143               	movlb	3	; select bank3
 22064  0CBB  1F11               	btfss	17,6	;volatile
 22065  0CBC  2CC8               	goto	i1l579
 22066                           
 22067                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 22068  0CBD  3001               	movlw	1
 22069  0CBE  00F9               	movwf	??_I2C1_ISR
 22070  0CBF  0879               	movf	??_I2C1_ISR,w
 22071  0CC0  0141               	movlb	1	; select bank1
 22072  0CC1  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22073                           
 22074                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22075  0CC2  3004               	movlw	4
 22076  0CC3  3190  205E         	fcall	_I2C1_Stop
 22077                           
 22078                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 22079  0CC5  0143               	movlb	3	; select bank3
 22080  0CC6  1311               	bcf	17,6	;volatile
 22081                           
 22082                           ;mcc_generated_files/i2c1.c: 495:             }
 22083  0CC7  0008               	return
 22084  0CC8                     i1l579:	
 22085                           ;mcc_generated_files/i2c1.c: 496:             else
 22086                           
 22087                           
 22088                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 22089  0CC8  1591               	bsf	17,3	;volatile
 22090                           
 22091                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 22092  0CC9  3008               	movlw	8
 22093  0CCA  00F9               	movwf	??_I2C1_ISR
 22094  0CCB  0879               	movf	??_I2C1_ISR,w
 22095  0CCC  0141               	movlb	1	; select bank1
 22096  0CCD  00CB               	movwf	_i2c1_state^(0+128)
 22097  0CCE  0008               	return
 22098  0CCF                     i1l5353:	
 22099                           
 22100                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 22101  0CCF  3008               	movlw	8
 22102  0CD0  00F9               	movwf	??_I2C1_ISR
 22103  0CD1  0879               	movf	??_I2C1_ISR,w
 22104  0CD2  00CB               	movwf	_i2c1_state^(0+128)
 22105                           
 22106                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 22107  0CD3  0143               	movlb	3	; select bank3
 22108  0CD4  1591               	bsf	17,3	;volatile
 22109                           
 22110                           ;mcc_generated_files/i2c1.c: 513:             break;
 22111  0CD5  0008               	return
 22112  0CD6                     i1l5357:	
 22113                           
 22114                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 22115  0CD6  0143               	movlb	3	; select bank3
 22116  0CD7  080C               	movf	12,w	;volatile
 22117  0CD8  00F9               	movwf	??_I2C1_ISR
 22118  0CD9  0141               	movlb	1	; select bank1
 22119  0CDA  0848               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 22120  0CDB  0086               	movwf	6
 22121  0CDC  0187               	clrf	7
 22122  0CDD  0879               	movf	??_I2C1_ISR,w
 22123  0CDE  0081               	movwf	1
 22124  0CDF  3001               	movlw	1
 22125  0CE0  00F9               	movwf	??_I2C1_ISR
 22126  0CE1  0879               	movf	??_I2C1_ISR,w
 22127  0CE2  07C8               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 22128                           
 22129                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 22130  0CE3  3001               	movlw	1
 22131  0CE4  02C7               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 22132  0CE5  1903               	btfsc	3,2
 22133  0CE6  2CEF               	goto	i1l583
 22134                           
 22135                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 22136  0CE7  0143               	movlb	3	; select bank3
 22137  0CE8  1291               	bcf	17,5	;volatile
 22138                           
 22139                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 22140  0CE9  3006               	movlw	6
 22141  0CEA  00F9               	movwf	??_I2C1_ISR
 22142  0CEB  0879               	movf	??_I2C1_ISR,w
 22143  0CEC  0141               	movlb	1	; select bank1
 22144  0CED  00CB               	movwf	_i2c1_state^(0+128)
 22145                           
 22146                           ;mcc_generated_files/i2c1.c: 532:             }
 22147  0CEE  2CF3               	goto	i1l5369
 22148  0CEF                     i1l583:	
 22149                           ;mcc_generated_files/i2c1.c: 533:             else
 22150                           
 22151                           
 22152                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 22153  0CEF  0143               	movlb	3	; select bank3
 22154  0CF0  1691               	bsf	17,5	;volatile
 22155                           
 22156                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 22157  0CF1  319F  2791         	fcall	_I2C1_FunctionComplete
 22158  0CF3                     i1l5369:	
 22159                           
 22160                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 22161  0CF3  0143               	movlb	3	; select bank3
 22162  0CF4  1611               	bsf	17,4	;volatile
 22163                           
 22164                           ;mcc_generated_files/i2c1.c: 545:             break;
 22165  0CF5  0008               	return
 22166  0CF6                     i1l5371:	
 22167                           
 22168                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 22169  0CF6  3000               	movlw	0
 22170  0CF7  3190  205E         	fcall	_I2C1_Stop
 22171                           
 22172                           ;mcc_generated_files/i2c1.c: 552:             break;
 22173  0CF9  0008               	return
 22174  0CFA                     i1l5373:	
 22175                           
 22176                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 22177  0CFA  3001               	movlw	1
 22178  0CFB  00F9               	movwf	??_I2C1_ISR
 22179  0CFC  0879               	movf	??_I2C1_ISR,w
 22180  0CFD  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22181                           
 22182                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 22183  0CFE  3006               	movlw	6
 22184  0CFF  3190  205E         	fcall	_I2C1_Stop
 22185                           
 22186                           ;mcc_generated_files/i2c1.c: 560:             break;
 22187  0D01  0008               	return
 22188  0D02                     i1l5379:	
 22189  0D02  0141               	movlb	1	; select bank1
 22190  0D03  084B               	movf	_i2c1_state^(0+128),w
 22191  0D04  00F9               	movwf	??_I2C1_ISR
 22192  0D05  01FA               	clrf	??_I2C1_ISR+1
 22193                           
 22194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22195                           ; Switch size 1, requested type "simple"
 22196                           ; Number of cases is 1, Range of values is 0 to 0
 22197                           ; switch strategies available:
 22198                           ; Name         Instructions Cycles
 22199                           ; simple_byte            4     3 (average)
 22200                           ; direct_byte            8     6 (fixed)
 22201                           ; jumptable            260     6 (fixed)
 22202                           ;	Chosen strategy is simple_byte
 22203  0D06  087A               	movf	??_I2C1_ISR+1,w
 22204  0D07  3A00               	xorlw	0	; case 0
 22205  0D08  1903               	skipnz
 22206  0D09  2D0B               	goto	i1l6969
 22207  0D0A  2CFA               	goto	i1l5373
 22208  0D0B                     i1l6969:	
 22209                           
 22210                           ; Switch size 1, requested type "simple"
 22211                           ; Number of cases is 11, Range of values is 0 to 11
 22212                           ; switch strategies available:
 22213                           ; Name         Instructions Cycles
 22214                           ; direct_byte           30     6 (fixed)
 22215                           ; simple_byte           34    18 (average)
 22216                           ; jumptable            260     6 (fixed)
 22217                           ;	Chosen strategy is simple_byte
 22218  0D0B  0879               	movf	??_I2C1_ISR,w
 22219  0D0C  3A00               	xorlw	0	; case 0
 22220  0D0D  1903               	skipnz
 22221  0D0E  2BF4               	goto	i1l549
 22222  0D0F  3A01               	xorlw	1	; case 1
 22223  0D10  1903               	skipnz
 22224  0D11  2C1F               	goto	i1l554
 22225  0D12  3A03               	xorlw	3	; case 2
 22226  0D13  1903               	skipnz
 22227  0D14  2C67               	goto	i1l5299
 22228  0D15  3A01               	xorlw	1	; case 3
 22229  0D16  1903               	skipnz
 22230  0D17  2C8B               	goto	i1l571
 22231  0D18  3A07               	xorlw	7	; case 4
 22232  0D19  1903               	skipnz
 22233  0D1A  2CF6               	goto	i1l5371
 22234  0D1B  3A01               	xorlw	1	; case 5
 22235  0D1C  1903               	skipnz
 22236  0D1D  2CBA               	goto	i1l578
 22237  0D1E  3A03               	xorlw	3	; case 6
 22238  0D1F  1903               	skipnz
 22239  0D20  2CCF               	goto	i1l5353
 22240  0D21  3A01               	xorlw	1	; case 7
 22241  0D22  1903               	skipnz
 22242  0D23  2CF6               	goto	i1l5371
 22243  0D24  3A0F               	xorlw	15	; case 8
 22244  0D25  1903               	skipnz
 22245  0D26  2CD6               	goto	i1l5357
 22246  0D27  3A02               	xorlw	2	; case 10
 22247  0D28  1903               	skipnz
 22248  0D29  2C20               	goto	i1l555
 22249  0D2A  3A01               	xorlw	1	; case 11
 22250  0D2B  1903               	skipnz
 22251  0D2C  2C42               	goto	i1l560
 22252  0D2D  2CFA               	goto	i1l5373
 22253  0D2E  0008               	return
 22254  0D2F                     __end_of_I2C1_ISR:	
 22255                           
 22256                           	psect	text81
 22257  105E                     __ptext81:	
 22258 ;; *************** function _I2C1_Stop *****************
 22259 ;; Defined at:
 22260 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 22261 ;; Parameters:    Size  Location     Type
 22262 ;;  completion_c    1    wreg     enum E10866
 22263 ;; Auto vars:     Size  Location     Type
 22264 ;;  completion_c    1    1[COMMON] enum E10866
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  1    wreg      void 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/0
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22278 ;;Total ram usage:        2 bytes
 22279 ;; Hardware stack levels used:    1
 22280 ;; This function calls:
 22281 ;;		Nothing
 22282 ;; This function is called by:
 22283 ;;		_I2C1_ISR
 22284 ;; This function uses a non-reentrant model
 22285 ;;
 22286                           
 22287                           
 22288                           ;psect for function _I2C1_Stop
 22289  105E                     _I2C1_Stop:	
 22290                           
 22291                           ;incstack = 0
 22292 ;; hardware stack exceeded
 22293                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 22294                           ;I2C1_Stop@completion_code stored from wreg
 22295  105E  00F8               	movwf	I2C1_Stop@completion_code
 22296                           
 22297                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 22298  105F  0143               	movlb	3	; select bank3
 22299  1060  1511               	bsf	17,2	;volatile
 22300                           
 22301                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 22302  1061  0141               	movlb	1	; select bank1
 22303  1062  0849               	movf	_p_i2c1_current^(0+128),w
 22304  1063  3E02               	addlw	2
 22305  1064  0086               	movwf	6
 22306  1065  0187               	clrf	7
 22307  1066  0801               	movf	1,w
 22308  1067  1903               	btfsc	3,2
 22309  1068  2874               	goto	i1l4925
 22310                           
 22311                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 22312  1069  0878               	movf	I2C1_Stop@completion_code,w
 22313  106A  00F7               	movwf	??_I2C1_Stop
 22314  106B  0849               	movf	_p_i2c1_current^(0+128),w
 22315  106C  3E02               	addlw	2
 22316  106D  0086               	movwf	6
 22317  106E  0187               	clrf	7
 22318  106F  0801               	movf	1,w
 22319  1070  0086               	movwf	6
 22320  1071  0187               	clrf	7
 22321  1072  0877               	movf	??_I2C1_Stop,w
 22322  1073  0081               	movwf	1
 22323  1074                     i1l4925:	
 22324                           
 22325                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 22326  1074  01CB               	clrf	_i2c1_state^(0+128)
 22327  1075  0008               	return
 22328  1076                     __end_of_I2C1_Stop:	
 22329                           
 22330                           	psect	text82
 22331  1F91                     __ptext82:	
 22332 ;; *************** function _I2C1_FunctionComplete *****************
 22333 ;; Defined at:
 22334 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;		None
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;		None
 22339 ;; Return value:  Size  Location     Type
 22340 ;;                  1    wreg      void 
 22341 ;; Registers used:
 22342 ;;		wreg, status,2, status,0
 22343 ;; Tracked objects:
 22344 ;;		On entry : 0/0
 22345 ;;		On exit  : 0/0
 22346 ;;		Unchanged: 0/0
 22347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22352 ;;Total ram usage:        1 bytes
 22353 ;; Hardware stack levels used:    1
 22354 ;; This function calls:
 22355 ;;		Nothing
 22356 ;; This function is called by:
 22357 ;;		_I2C1_ISR
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361                           
 22362                           ;psect for function _I2C1_FunctionComplete
 22363  1F91                     _I2C1_FunctionComplete:	
 22364                           
 22365                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 22366                           
 22367                           ;incstack = 0
 22368 ;; hardware stack exceeded
 22369                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 22370  1F91  3004               	movlw	4
 22371  1F92  00F7               	movwf	??_I2C1_FunctionComplete
 22372  1F93  0877               	movf	??_I2C1_FunctionComplete,w
 22373  1F94  07F2               	addwf	_p_i2c1_trb_current,f
 22374                           
 22375                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 22376  1F95  3001               	movlw	1
 22377  1F96  0141               	movlb	1	; select bank1
 22378  1F97  02CA               	subwf	_i2c1_trb_count^(0+128),f
 22379  1F98  1D03               	btfss	3,2
 22380  1F99  2F9F               	goto	i1l590
 22381                           
 22382                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 22383  1F9A  3004               	movlw	4
 22384  1F9B  00F7               	movwf	??_I2C1_FunctionComplete
 22385  1F9C  0877               	movf	??_I2C1_FunctionComplete,w
 22386  1F9D  00CB               	movwf	_i2c1_state^(0+128)
 22387                           
 22388                           ;mcc_generated_files/i2c1.c: 575:     }
 22389  1F9E  0008               	return
 22390  1F9F                     i1l590:	
 22391                           ;mcc_generated_files/i2c1.c: 576:     else
 22392                           
 22393                           
 22394                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 22395  1F9F  01CB               	clrf	_i2c1_state^(0+128)
 22396  1FA0  0ACB               	incf	_i2c1_state^(0+128),f
 22397  1FA1  0008               	return
 22398  1FA2                     __end_of_I2C1_FunctionComplete:	
 22399                           
 22400                           	psect	text83
 22401  1E7F                     __ptext83:	
 22402 ;; *************** function _I2C1_BusCollisionISR *****************
 22403 ;; Defined at:
 22404 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 22405 ;; Parameters:    Size  Location     Type
 22406 ;;		None
 22407 ;; Auto vars:     Size  Location     Type
 22408 ;;		None
 22409 ;; Return value:  Size  Location     Type
 22410 ;;                  1    wreg      void 
 22411 ;; Registers used:
 22412 ;;		None
 22413 ;; Tracked objects:
 22414 ;;		On entry : 0/0
 22415 ;;		On exit  : 0/0
 22416 ;;		Unchanged: 0/0
 22417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22422 ;;Total ram usage:        0 bytes
 22423 ;; Hardware stack levels used:    1
 22424 ;; This function calls:
 22425 ;;		Nothing
 22426 ;; This function is called by:
 22427 ;;		_INTERRUPT_InterruptManager
 22428 ;; This function uses a non-reentrant model
 22429 ;;
 22430                           
 22431                           
 22432                           ;psect for function _I2C1_BusCollisionISR
 22433  1E7F                     _I2C1_BusCollisionISR:	
 22434                           
 22435                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 22436                           
 22437                           ;incstack = 0
 22438 ;; hardware stack exceeded
 22439                           ; Regs used in _I2C1_BusCollisionISR: []
 22440  1E7F  014E               	movlb	14	; select bank14
 22441  1E80  108F               	bcf	15,1	;volatile
 22442  1E81  0008               	return
 22443  1E82                     __end_of_I2C1_BusCollisionISR:	
 22444                           
 22445                           	psect	text84
 22446  1360                     __ptext84:	
 22447 ;; *************** function _DMX_interrupt *****************
 22448 ;; Defined at:
 22449 ;;		line 54 in file "dmx.c"
 22450 ;; Parameters:    Size  Location     Type
 22451 ;;		None
 22452 ;; Auto vars:     Size  Location     Type
 22453 ;;  dummy           1    6[COMMON] volatile unsigned char 
 22454 ;; Return value:  Size  Location     Type
 22455 ;;                  1    wreg      void 
 22456 ;; Registers used:
 22457 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22458 ;; Tracked objects:
 22459 ;;		On entry : 0/0
 22460 ;;		On exit  : 0/0
 22461 ;;		Unchanged: 0/0
 22462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22465 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22466 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22467 ;;Total ram usage:        7 bytes
 22468 ;; Hardware stack levels used:    1
 22469 ;; This function calls:
 22470 ;;		Nothing
 22471 ;; This function is called by:
 22472 ;;		_DMX_init
 22473 ;;		_INTERRUPT_InterruptManager
 22474 ;; This function uses a non-reentrant model
 22475 ;;
 22476                           
 22477                           
 22478                           ;psect for function _DMX_interrupt
 22479  1360                     _DMX_interrupt:	
 22480                           
 22481                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 22482                           
 22483                           ;incstack = 0
 22484 ;; hardware stack exceeded
 22485                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 22486  1360  0142               	movlb	2	; select bank2
 22487  1361  1C9D               	btfss	29,1	;volatile
 22488  1362  2B65               	goto	i1l5629
 22489                           
 22490                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 22491  1363  121D               	bcf	29,4	;volatile
 22492                           
 22493                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 22494  1364  161D               	bsf	29,4	;volatile
 22495  1365                     i1l5629:	
 22496                           
 22497                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 22498  1365  0850               	movf	_initial^(0+256),w
 22499  1366  0451               	iorwf	(_initial+1)^(0+256),w
 22500  1367  1903               	btfsc	3,2
 22501  1368  191D               	btfsc	29,2	;volatile
 22502  1369  2B86               	goto	i1l5637
 22503                           
 22504                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 22505  136A  0819               	movf	25,w	;volatile
 22506  136B  00F7               	movwf	??_DMX_interrupt
 22507  136C  01F8               	clrf	??_DMX_interrupt+1
 22508  136D  0837               	movf	(_arrayIndex+1)^(0+256),w
 22509  136E  00FA               	movwf	??_DMX_interrupt+3
 22510  136F  0836               	movf	_arrayIndex^(0+256),w
 22511  1370  00F9               	movwf	??_DMX_interrupt+2
 22512  1371  35F9               	lslf	??_DMX_interrupt+2,f
 22513  1372  0DFA               	rlf	??_DMX_interrupt+3,f
 22514  1373  30EE               	movlw	238
 22515  1374  00FB               	movwf	??_DMX_interrupt+4
 22516  1375  3023               	movlw	35
 22517  1376  00FC               	movwf	??_DMX_interrupt+5
 22518  1377  0879               	movf	??_DMX_interrupt+2,w
 22519  1378  077B               	addwf	??_DMX_interrupt+4,w
 22520  1379  0086               	movwf	6
 22521  137A  087A               	movf	??_DMX_interrupt+3,w
 22522  137B  3D7C               	addwfc	??_DMX_interrupt+5,w
 22523  137C  0087               	movwf	7
 22524  137D  0877               	movf	??_DMX_interrupt,w
 22525  137E  3FC0               	movwi [0]fsr1
 22526  137F  0878               	movf	??_DMX_interrupt+1,w
 22527  1380  3FC1               	movwi [1]fsr1
 22528                           
 22529                           ;dmx.c: 63:         arrayIndex += 1;
 22530  1381  3001               	movlw	1
 22531  1382  07B6               	addwf	_arrayIndex^(0+256),f
 22532  1383  3000               	movlw	0
 22533  1384  3DB7               	addwfc	(_arrayIndex+1)^(0+256),f
 22534                           
 22535                           ;dmx.c: 64:     } else {
 22536  1385  2B8E               	goto	i1l5641
 22537  1386                     i1l5637:	
 22538                           
 22539                           ;dmx.c: 65:         arrayIndex = 0;
 22540  1386  01B6               	clrf	_arrayIndex^(0+256)
 22541  1387  01B7               	clrf	(_arrayIndex+1)^(0+256)
 22542                           
 22543                           ;dmx.c: 66:         initial = 0;
 22544  1388  01D0               	clrf	_initial^(0+256)
 22545  1389  01D1               	clrf	(_initial+1)^(0+256)
 22546                           
 22547                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 22548  138A  0819               	movf	25,w	;volatile
 22549  138B  00F7               	movwf	??_DMX_interrupt
 22550  138C  0877               	movf	??_DMX_interrupt,w
 22551  138D  00FD               	movwf	DMX_interrupt@dummy	;volatile
 22552  138E                     i1l5641:	
 22553                           
 22554                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 22555  138E  014E               	movlb	14	; select bank14
 22556  138F  128F               	bcf	15,5	;volatile
 22557  1390  0008               	return
 22558  1391                     __end_of_DMX_interrupt:	
 22559                           
 22560                           	psect	text85
 22561  13C4                     __ptext85:	
 22562 ;; *************** function _EUSART1_Receive_ISR *****************
 22563 ;; Defined at:
 22564 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 22565 ;; Parameters:    Size  Location     Type
 22566 ;;		None
 22567 ;; Auto vars:     Size  Location     Type
 22568 ;;		None
 22569 ;; Return value:  Size  Location     Type
 22570 ;;                  1    wreg      void 
 22571 ;; Registers used:
 22572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22573 ;; Tracked objects:
 22574 ;;		On entry : 0/0
 22575 ;;		On exit  : 0/0
 22576 ;;		Unchanged: 0/0
 22577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22582 ;;Total ram usage:        0 bytes
 22583 ;; Hardware stack levels used:    1
 22584 ;; Hardware stack levels required when called:    2
 22585 ;; This function calls:
 22586 ;;		Absolute function
 22587 ;;		_EUSART1_DefaultErrorHandler
 22588 ;;		_EUSART1_DefaultFramingErrorHandler
 22589 ;;		_EUSART1_DefaultOverrunErrorHandler
 22590 ;;		_EUSART1_RxDataHandler
 22591 ;; This function is called by:
 22592 ;;		_EUSART1_Initialize
 22593 ;;		_INTERRUPT_InterruptManager
 22594 ;; This function uses a non-reentrant model
 22595 ;;
 22596                           
 22597                           
 22598                           ;psect for function _EUSART1_Receive_ISR
 22599  13C4                     _EUSART1_Receive_ISR:	
 22600                           
 22601                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 22602                           
 22603                           ;incstack = 0
 22604 ;; hardware stack exceeded
 22605                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22606  13C4  0874               	movf	_eusart1RxHead,w	;volatile
 22607  13C5  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22608  13C6  0086               	movwf	6
 22609  13C7  3001               	movlw	1	; select bank2/3
 22610  13C8  0087               	movwf	7
 22611  13C9  0181               	clrf	1
 22612                           
 22613                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 22614  13CA  0142               	movlb	2	; select bank2
 22615  13CB  1D1D               	btfss	29,2	;volatile
 22616  13CC  2BD8               	goto	i1l5223
 22617                           
 22618                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 22619  13CD  0874               	movf	_eusart1RxHead,w	;volatile
 22620  13CE  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22621  13CF  0086               	movwf	6
 22622  13D0  3001               	movlw	1	; select bank2/3
 22623  13D1  0087               	movwf	7
 22624  13D2  1481               	bsf	1,1
 22625                           
 22626                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 22627  13D3  084D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 22628  13D4  008A               	movwf	10
 22629  13D5  084C               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 22630  13D6  000A               	callw
 22631  13D7  3193               	pagesel	$
 22632  13D8                     i1l5223:	
 22633                           
 22634                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 22635  13D8  0142               	movlb	2	; select bank2
 22636  13D9  1C9D               	btfss	29,1	;volatile
 22637  13DA  2BE6               	goto	i1l5229
 22638                           
 22639                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 22640  13DB  0874               	movf	_eusart1RxHead,w	;volatile
 22641  13DC  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22642  13DD  0086               	movwf	6
 22643  13DE  3001               	movlw	1	; select bank2/3
 22644  13DF  0087               	movwf	7
 22645  13E0  1501               	bsf	1,2
 22646                           
 22647                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 22648  13E1  084B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 22649  13E2  008A               	movwf	10
 22650  13E3  084A               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 22651  13E4  000A               	callw
 22652  13E5  3193               	pagesel	$
 22653  13E6                     i1l5229:	
 22654                           
 22655                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 22656  13E6  0874               	movf	_eusart1RxHead,w	;volatile
 22657  13E7  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22658  13E8  0086               	movwf	6
 22659  13E9  3001               	movlw	1	; select bank2/3
 22660  13EA  0087               	movwf	7
 22661  13EB  0801               	movf	1,w
 22662  13EC  1903               	btfsc	3,2
 22663  13ED  2BF5               	goto	i1l5233
 22664                           
 22665                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 22666  13EE  0142               	movlb	2	; select bank2
 22667  13EF  0849               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 22668  13F0  008A               	movwf	10
 22669  13F1  0848               	movf	_EUSART1_ErrorHandler^(0+256),w
 22670  13F2  000A               	callw
 22671  13F3  3193               	pagesel	$
 22672                           
 22673                           ;mcc_generated_files/eusart1.c: 188:     } else {
 22674  13F4  0008               	return
 22675  13F5                     i1l5233:	
 22676                           
 22677                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 22678  13F5  3190  2046         	fcall	_EUSART1_RxDataHandler
 22679  13F7  0008               	return
 22680  13F8                     __end_of_EUSART1_Receive_ISR:	
 22681                           
 22682                           	psect	text86
 22683  1E8C                     __ptext86:	
 22684 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 22685 ;; Defined at:
 22686 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 22687 ;; Parameters:    Size  Location     Type
 22688 ;;		None
 22689 ;; Auto vars:     Size  Location     Type
 22690 ;;		None
 22691 ;; Return value:  Size  Location     Type
 22692 ;;                  1    wreg      void 
 22693 ;; Registers used:
 22694 ;;		None
 22695 ;; Tracked objects:
 22696 ;;		On entry : 0/0
 22697 ;;		On exit  : 0/0
 22698 ;;		Unchanged: 0/0
 22699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22704 ;;Total ram usage:        0 bytes
 22705 ;; Hardware stack levels used:    1
 22706 ;; This function calls:
 22707 ;;		Nothing
 22708 ;; This function is called by:
 22709 ;;		_EUSART1_Initialize
 22710 ;;		_EUSART1_Receive_ISR
 22711 ;; This function uses a non-reentrant model
 22712 ;;
 22713                           
 22714                           
 22715                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 22716  1E8C                     _EUSART1_DefaultOverrunErrorHandler:	
 22717                           
 22718                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 22719                           
 22720                           ;incstack = 0
 22721 ;; hardware stack exceeded
 22722                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 22723  1E8C  0142               	movlb	2	; select bank2
 22724  1E8D  121D               	bcf	29,4	;volatile
 22725                           
 22726                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 22727  1E8E  161D               	bsf	29,4	;volatile
 22728  1E8F  0008               	return
 22729  1E90                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 22730                           
 22731                           	psect	text87
 22732  1E7B                     __ptext87:	
 22733 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 22734 ;; Defined at:
 22735 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 22736 ;; Parameters:    Size  Location     Type
 22737 ;;		None
 22738 ;; Auto vars:     Size  Location     Type
 22739 ;;		None
 22740 ;; Return value:  Size  Location     Type
 22741 ;;                  1    wreg      void 
 22742 ;; Registers used:
 22743 ;;		None
 22744 ;; Tracked objects:
 22745 ;;		On entry : 0/0
 22746 ;;		On exit  : 0/0
 22747 ;;		Unchanged: 0/0
 22748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22753 ;;Total ram usage:        0 bytes
 22754 ;; Hardware stack levels used:    1
 22755 ;; This function calls:
 22756 ;;		Nothing
 22757 ;; This function is called by:
 22758 ;;		_EUSART1_Initialize
 22759 ;;		_EUSART1_Receive_ISR
 22760 ;; This function uses a non-reentrant model
 22761 ;;
 22762                           
 22763                           
 22764                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 22765  1E7B                     _EUSART1_DefaultFramingErrorHandler:	
 22766                           
 22767                           ;incstack = 0
 22768 ;; hardware stack exceeded
 22769                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 22770  1E7B  0008               	return
 22771  1E7C                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 22772                           
 22773                           	psect	text88
 22774  1E7C                     __ptext88:	
 22775 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 22776 ;; Defined at:
 22777 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 22778 ;; Parameters:    Size  Location     Type
 22779 ;;		None
 22780 ;; Auto vars:     Size  Location     Type
 22781 ;;		None
 22782 ;; Return value:  Size  Location     Type
 22783 ;;                  1    wreg      void 
 22784 ;; Registers used:
 22785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22786 ;; Tracked objects:
 22787 ;;		On entry : 0/0
 22788 ;;		On exit  : 0/0
 22789 ;;		Unchanged: 0/0
 22790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22795 ;;Total ram usage:        0 bytes
 22796 ;; Hardware stack levels used:    1
 22797 ;; Hardware stack levels required when called:    1
 22798 ;; This function calls:
 22799 ;;		_EUSART1_RxDataHandler
 22800 ;; This function is called by:
 22801 ;;		_EUSART1_Initialize
 22802 ;;		_EUSART1_Receive_ISR
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           
 22807                           ;psect for function _EUSART1_DefaultErrorHandler
 22808  1E7C                     _EUSART1_DefaultErrorHandler:	
 22809                           
 22810                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 22811                           
 22812                           ;incstack = 0
 22813 ;; hardware stack exceeded
 22814                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 22815  1E7C  3190  2046         	fcall	_EUSART1_RxDataHandler
 22816  1E7E  0008               	return
 22817  1E7F                     __end_of_EUSART1_DefaultErrorHandler:	
 22818                           
 22819                           	psect	text89
 22820  1046                     __ptext89:	
 22821 ;; *************** function _EUSART1_RxDataHandler *****************
 22822 ;; Defined at:
 22823 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 22824 ;; Parameters:    Size  Location     Type
 22825 ;;		None
 22826 ;; Auto vars:     Size  Location     Type
 22827 ;;		None
 22828 ;; Return value:  Size  Location     Type
 22829 ;;                  1    wreg      void 
 22830 ;; Registers used:
 22831 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22832 ;; Tracked objects:
 22833 ;;		On entry : 0/0
 22834 ;;		On exit  : 0/0
 22835 ;;		Unchanged: 0/0
 22836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22841 ;;Total ram usage:        1 bytes
 22842 ;; Hardware stack levels used:    1
 22843 ;; This function calls:
 22844 ;;		Nothing
 22845 ;; This function is called by:
 22846 ;;		_EUSART1_Receive_ISR
 22847 ;;		_EUSART1_DefaultErrorHandler
 22848 ;; This function uses a non-reentrant model
 22849 ;;
 22850                           
 22851                           
 22852                           ;psect for function _EUSART1_RxDataHandler
 22853  1046                     _EUSART1_RxDataHandler:	
 22854                           
 22855                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 22856                           
 22857                           ;incstack = 0
 22858 ;; hardware stack exceeded
 22859                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 22860  1046  0142               	movlb	2	; select bank2
 22861  1047  0819               	movf	25,w	;volatile
 22862  1048  00F7               	movwf	??_EUSART1_RxDataHandler
 22863  1049  0874               	movf	_eusart1RxHead,w
 22864  104A  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22865  104B  0086               	movwf	6
 22866  104C  3001               	movlw	1	; select bank2/3
 22867  104D  0087               	movwf	7
 22868  104E  0877               	movf	??_EUSART1_RxDataHandler,w
 22869  104F  0081               	movwf	1
 22870  1050  3001               	movlw	1
 22871  1051  00F7               	movwf	??_EUSART1_RxDataHandler
 22872  1052  0877               	movf	??_EUSART1_RxDataHandler,w
 22873  1053  07F4               	addwf	_eusart1RxHead,f	;volatile
 22874                           
 22875                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 22876  1054  3008               	movlw	8
 22877  1055  0274               	subwf	_eusart1RxHead,w	;volatile
 22878  1056  1803               	btfsc	3,0
 22879                           
 22880                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 22881  1057  01F4               	clrf	_eusart1RxHead	;volatile
 22882                           
 22883                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 22884  1058  3001               	movlw	1
 22885  1059  00F7               	movwf	??_EUSART1_RxDataHandler
 22886  105A  0877               	movf	??_EUSART1_RxDataHandler,w
 22887  105B  0141               	movlb	1	; select bank1
 22888  105C  07CD               	addwf	_eusart1RxCount^(0+128),f	;volatile
 22889  105D  0008               	return
 22890  105E                     __end_of_EUSART1_RxDataHandler:	
 22891                           
 22892                           	psect	text90
 22893  1F5A                     __ptext90:	
 22894 ;; *************** function _ADCC_ThresholdISR *****************
 22895 ;; Defined at:
 22896 ;;		line 308 in file "mcc_generated_files/adcc.c"
 22897 ;; Parameters:    Size  Location     Type
 22898 ;;		None
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;		None
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1    wreg      void 
 22903 ;; Registers used:
 22904 ;;		wreg, status,2, status,0, pclath, cstack
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/0
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22914 ;;Total ram usage:        0 bytes
 22915 ;; Hardware stack levels used:    1
 22916 ;; Hardware stack levels required when called:    1
 22917 ;; This function calls:
 22918 ;;		Absolute function
 22919 ;;		_ADCC_DefaultInterruptHandler
 22920 ;;		_adcThresholdHandler
 22921 ;; This function is called by:
 22922 ;;		_INTERRUPT_InterruptManager
 22923 ;; This function uses a non-reentrant model
 22924 ;;
 22925                           
 22926                           
 22927                           ;psect for function _ADCC_ThresholdISR
 22928  1F5A                     _ADCC_ThresholdISR:	
 22929                           
 22930                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 22931                           
 22932                           ;incstack = 0
 22933 ;; hardware stack exceeded
 22934                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 22935  1F5A  014E               	movlb	14	; select bank14
 22936  1F5B  108D               	bcf	13,1	;volatile
 22937                           
 22938                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 22939  1F5C  0142               	movlb	2	; select bank2
 22940  1F5D  0844               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 22941  1F5E  0445               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 22942  1F5F  1903               	btfsc	3,2
 22943  1F60  0008               	return
 22944                           
 22945                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 22946  1F61  0845               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 22947  1F62  008A               	movwf	10
 22948  1F63  0844               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 22949  1F64  000A               	callw
 22950  1F65  319F               	pagesel	$
 22951  1F66  0008               	return
 22952  1F67                     __end_of_ADCC_ThresholdISR:	
 22953                           
 22954                           	psect	text91
 22955  1E7A                     __ptext91:	
 22956 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 22957 ;; Defined at:
 22958 ;;		line 320 in file "mcc_generated_files/adcc.c"
 22959 ;; Parameters:    Size  Location     Type
 22960 ;;		None
 22961 ;; Auto vars:     Size  Location     Type
 22962 ;;		None
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1    wreg      void 
 22965 ;; Registers used:
 22966 ;;		None
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22976 ;;Total ram usage:        0 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; This function calls:
 22979 ;;		Nothing
 22980 ;; This function is called by:
 22981 ;;		_ADCC_Initialize
 22982 ;;		_ADCC_ThresholdISR
 22983 ;; This function uses a non-reentrant model
 22984 ;;
 22985                           
 22986                           
 22987                           ;psect for function _ADCC_DefaultInterruptHandler
 22988  1E7A                     _ADCC_DefaultInterruptHandler:	
 22989                           
 22990                           ;incstack = 0
 22991 ;; hardware stack exceeded
 22992                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 22993  1E7A  0008               	return
 22994  1E7B                     __end_of_ADCC_DefaultInterruptHandler:	
 22995                           
 22996                           	psect	text92
 22997  1E88                     __ptext92:	
 22998 ;; *************** function _adcThresholdHandler *****************
 22999 ;; Defined at:
 23000 ;;		line 35 in file "beat.c"
 23001 ;; Parameters:    Size  Location     Type
 23002 ;;		None
 23003 ;; Auto vars:     Size  Location     Type
 23004 ;;		None
 23005 ;; Return value:  Size  Location     Type
 23006 ;;                  1    wreg      void 
 23007 ;; Registers used:
 23008 ;;		None
 23009 ;; Tracked objects:
 23010 ;;		On entry : 0/0
 23011 ;;		On exit  : 0/0
 23012 ;;		Unchanged: 0/0
 23013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23018 ;;Total ram usage:        0 bytes
 23019 ;; Hardware stack levels used:    1
 23020 ;; This function calls:
 23021 ;;		Nothing
 23022 ;; This function is called by:
 23023 ;;		_BEAT_init
 23024 ;;		_ADCC_ThresholdISR
 23025 ;; This function uses a non-reentrant model
 23026 ;;
 23027                           
 23028                           
 23029                           ;psect for function _adcThresholdHandler
 23030  1E88                     _adcThresholdHandler:	
 23031                           
 23032                           ;beat.c: 36:     thresholdExceeded = 1;
 23033                           
 23034                           ;incstack = 0
 23035 ;; hardware stack exceeded
 23036                           ; Regs used in _adcThresholdHandler: []
 23037  1E88  0141               	movlb	1	; select bank1
 23038  1E89  01B8               	clrf	_thresholdExceeded^(0+128)
 23039  1E8A  0AB8               	incf	_thresholdExceeded^(0+128),f
 23040  1E8B  0008               	return
 23041  1E8C                     __end_of_adcThresholdHandler:	
 23042  007E                     btemp	set	126	;btemp
 23043  007E                     int$flags	set	126
 23044  007E                     wtemp0	set	126


Data Sizes:
    Strings     110
    Constant    96
    Data        14
    BSS         156
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     21      80
    BANK2            80      0      52
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2974_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1990$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_setColor->_PWM1_LoadDutyValue
    _LED_setColor->_PWM2_LoadDutyValue
    _LED_setColor->_PWM3_LoadDutyValue
    _LED_setColor->_PWM4_LoadDutyValue
    _LED_task_BEAT->_PWM1_LoadDutyValue
    _LED_task_BEAT->_PWM2_LoadDutyValue
    _LED_task_BEAT->_PWM3_LoadDutyValue
    _LED_task_BEAT->_PWM4_LoadDutyValue
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  104869
                                             19 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   18907
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   26618
                                             17 BANK1      2     2      0
                 _LED_task_ANIMATION
                      _LED_task_BEAT
                       _LED_task_DMX
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   13493
                                              8 BANK1      9     9      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   13348
                                              0 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT                                        4     4      0   13125
                                              0 BANK1      4     4      0
                      _BEAT_detected
                      _CLOCK_getTime
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     646
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     553
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5913
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1769
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2    1061
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2    1061
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2    1061
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2    1061
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    4933
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   49742
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                       _CONTROL_BEAT
                        _CONTROL_DMX
                      _TM1650_enable
                _TM1650_fastPrintNum
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16206
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16206
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0    9655
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    4722
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     211
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_BEAT
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_task
     _LED_task_ANIMATION
     _LED_task_BEAT
       _BEAT_detected
       _CLOCK_getTime
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     122       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     15      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      34      10       65.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     122      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 28 00:14:24 2019

                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0077  
                                            _up 00C4                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D1                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1E88  
                                           l911 0ADB                                             l909 0A76  
                                           _PR2 028D                                             _bpm 013A  
                                           _pad 1572                         __size_of_PMD_Initialize 000A  
                               _TMR2_Initialize 1F74                                 _PWM4_Initialize 1F37  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 005A                                    ___flmul@bexp 005B  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                   __CFG_BBEN$OFF 0000  
                              __end_of_I2C1_ISR 0D2F                                    ___fltol@exp1 006C  
                                          l1005 0B3A                                            l1037 161E  
                                          l1071 11E9                                            l1049 1711  
                                          l1274 11D0                                            l1470 158A  
                                          l4201 12DB                                            l1473 15AA  
                                          l4203 12E7                                            l4211 12FC  
                                          l4207 12F3                                            l4075 1093  
                                          l4403 0EFA                                            l4219 119B  
                                          l1907 078D                                            l4315 07A4  
                                          l4077 109F                                            l1933 163D  
                          _ADCC_StartConversion 1EB1                                            l6015 1149  
                                          l6031 1167                                            l4423 0F41  
                                          l4431 0F23                                            l1855 0ECF  
                                          l4503 0588                                            l4335 07D2  
                                          l4319 07AD                                            l4185 141F  
                                          l4177 1401                                            l6113 1F8F  
                                          l4433 0F5F                                            l4521 05AB  
                                          l4505 058A                                            l4345 07F1  
                                          l4337 07E0                                            l1946 1687  
                                          l4179 140D                                            l4363 0EA0  
                                          l4611 0763                                            l4523 05AD  
                                          l4507 0592                                            l1699 07E4  
                                          l1947 1691                                            l1939 1673  
                                          l1876 0FD6                                            l4189 1428  
                                          l1877 0FEE                                            l4429 0F5A  
                                          l4533 05C3                                            l4525 05B5  
                                          ?_pad 0049                                            l6135 1080  
                                          l6127 10B1                                            l6047 110D  
                                          l6063 112B                                            l1879 0FFB  
                                          l4455 0F93                                            l4447 0F65  
                                          l4383 0EC4                                            l4367 0EA3  
                                          l4607 074E                                            l6321 1FEA  
                                          l6137 1084                                            l6129 10B5  
                                          l4449 0F7C                                            l4369 0EAB  
                                          l1985 11A1                                            l4617 077A  
                                          l4641 164C                                            l6331 15D4  
                                          l6147 1EDC                                            l4483 0FF7  
                                          l4459 0F95                                            l4387 0EC7  
                                          l4635 1635                                            l6077 08A5  
                                          l6405 172A                                            l6085 130A  
                                          l6341 15E5                                            l6333 15DB  
                                          l4469 0FBE                                            l4397 0EEE  
                                          l4645 1650                                            l6415 1732  
                                          l6087 1327                                            l6351 15F2  
                                          l4655 1685                                            l4647 1660  
                                          l6511 012C                                            l6503 00C7  
                                          l6425 1739                                            l6353 15FA  
                                          l4593 0723                                            l4585 06F5  
                                          l4657 1678                                            l6443 1755  
                                          l6355 1602                                            l6339 15E4  
                                          l4587 070C                                            l6523 018B  
                                          l6621 0A70                                            l6613 0A2F  
                                          l6381 1713                                            l5901 1226  
                                          l4597 0725                                            l4669 16AC  
                                          l6541 02EE                                            l6517 0131  
                                          l6509 03F8                                            l6463 11EB  
                                          l6383 16D9                                            l6359 160A  
                                          l6711 0BAD                                            l6703 0B82  
                                          l6535 0294                                            l6457 11E0  
                                          l6481 102A                                            l5913 146C  
                                          l6721 0BC0                                            l6529 0190  
                                          l6635 0AB2                                            l6627 0A8E  
                                          l6467 11E7                                            l6637 0ABC  
                                          l6397 171B                                            l5917 148F  
                                          l5933 1580                                            l6717 0BC9  
                                          l6709 0BA9                                            l5855 1E94  
                                          l5871 155F                                            l5927 1262  
                                          l5943 158C                                            l6727 0BCF  
                                          l6719 0BCC                                            l6745 0969  
                                          l5873 1565                                            l5937 1588  
                                          l6673 0B47                                            l5867 1558  
                                          l5883 12CD                                            l5947 15B6  
                                          l5955 133F                                            l6667 0B3D  
                                          l6781 09EA                                            l6765 09A4  
                                          l6749 0970                                            l5957 1348  
                                          l6693 0B65                                            l6685 0B56  
                                          l6829 14C5                                            l6767 09B7  
                                          l5983 17AB                                            l6791 11B4  
                                          l5889 10F2                                            l5993 17D2  
                                          l6697 0B71                                            l6689 0B5E  
                                          l6793 11B7                                            l5899 1224  
                                          l6699 0B73                                            l5989 17CC  
                                          l6965 11C5                                            l6789 11B1  
                                          l6797 11BA                                            l5999 17DD  
                                          l6967 1613                                  ?_TM1650_enable 0077  
                                          STR_1 205D                                            STR_2 2035  
                                          STR_3 2057                                            STR_4 2063  
                                          STR_5 2051                                            STR_6 2069  
                                          STR_7 204F                                            STR_8 201C  
                                          STR_9 2044                         __end_of_PWM1_Initialize 1F21  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u3125 07D3  
                                          u3305 0F3B                                            _T2PR 028D  
                                          u3315 0F4F                                            u3155 07E8  
                                          u3095 07B6                                            u3345 0F68  
                                          u3435 0FAC                                            u3275 0F2B  
                                          u3445 0FC7                                            u3365 0F71  
                                          u3285 0F32                                            u3605 06F8  
                                          u2815 140E                                            u3455 0FE0  
                                          u2825 1418                                            u3705 0757  
                                          u3625 0701                                            u2835 1420  
                                          u5235 148D                                            u3715 076D  
                                          u3555 0639                                            _PMD0 0796  
                                          u2925 11A2                                            u3565 0668  
                                          u3805 167F                                            _PMD1 0797  
                                          _PMD2 0798                                            u6215 0953  
                                          u5415 1109                                            u3575 06BE  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u2865 12DE                                            u3585 06D5  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u2795 1404                                            u5275 1596  
                                          u5355 1145                                            u3595 06E4  
                                          _PMD7 079D                                            u2885 12ED  
                                          u5445 1127                                            u3845 1699  
                                          u3765 1659                                            u6317 14A2  
                                          u2895 12F4                                            u3695 073C  
                                          u6265 09CB                                            u5625 16EF  
                                          u5385 1163                                            u3785 166D  
                                          u5635 170A                                            u5595 16D3  
                                          u5875 0A32                                            u5884 0A51  
                                          u5885 0A50                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 0003  
                                 __CFG_FCMEN$ON 0000                                   ?_BUTTONS_init 0077  
                                 ?_BUTTONS_task 0077                                            _dbuf 01A0  
                          ?_adcThresholdHandler 0077                                            _ctoa 1330  
                                          _main 1499                                            _down 00C3  
                                          _init 1170                                            _menu 00C5  
                                          _prec 0132                                            _nout 0130  
                                          pad@i 004D                                            pad@p 004A  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 004F                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0030                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1FC5                             ?_LED_task_ANIMATION 0077  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0018                            __size_of_address_inc 0019  
                I2C1_MasterWriteTRBBuild@length 0021                                  _BUTTONS_isHeld 1F82  
                                         ??_pad 004C                         __end_of_PWM2_Initialize 1F2C  
                       __end_of_TMR0_Initialize 2000                                      _i2c1_state 00CB  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1F02  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                                 ___fltol@sign1 006B                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0052  
                              __end_of_LED_task 11D1                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 1000                                           _ADREF 0116  
                             __end_of_I2C1_Stop 1076                                           STR_10 202D  
                                         STR_11 2013                                           STR_12 2000  
                                         STR_13 200A                                           STR_14 2025  
                                         STR_15 203D                                           STR_16 204B  
                                 __CFG_WDTE$OFF 0000                                __end_of_DMX_init 1FD8  
                                         _ADRPT 009A                                 __end_of___flmul 079A  
                               __end_of___fltol 0800                                           _T2CON 028E  
                                         _T2HLT 028F                                 __end_of___lwdiv 142D  
                    _ADCC_ADTI_InterruptHandler 0144                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l432 0017  
                                         i1l441 002E                                 __end_of___lwmod 1301  
                                         i1l434 001E                                           i1l436 0025  
                                         i1l429 000E                                           i1l560 0C42  
                                         i1l561 0C4E                                           i1l554 0C1F  
                                         i1l571 0C8B                                           i1l555 0C20  
                                         i1l549 0BF4                                           i1l590 1F9F  
                                         i1l583 0CEF                                           i1l575 0CAB  
                                         i1l578 0CBA                                           i1l579 0CC8  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 0058  
                            _PWM4_LoadDutyValue 1152                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1E82  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                               __end_of_getMode 1E88                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 1F74                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 0152                                           _flags 00A7  
                                         _enter 00C2                           ?_ADCC_StartConversion 0077  
                                         _fputc 1462                                           _fputs 125E  
                           ?_PWM4_LoadDutyValue 006D                                           pad@fp 0051  
                                         _width 00A5                                           ctoa@c 0052  
                                         _putch 1216                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 1F37                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 0817  
                             __end_of_BEAT_task 0A0D                                           status 0003  
                                         wtemp0 007E                          __size_of_LED_task_BEAT 04EA  
    __end_of_EUSART1_DefaultFramingErrorHandler 1E7C     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0077             ?_EUSART1_DefaultFramingErrorHandler 0077  
            _EUSART1_DefaultFramingErrorHandler 1E7B                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 1F91                                 __initialization 0032  
                          TM1650_setDigit@digit 0036                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                    __end_of_ctoa 1360  
                    __end_of_EUSART1_Initialize 13C4                                    __end_of_main 14D2  
                                  __end_of_init 1190                                 _CONTROLLER_task 0AF2  
                          ??_PWM4_LoadDutyValue 006F                                   ?_LED_setColor 00D1  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
                                 ?_LED_task_DMX 0077                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 1EC3                         __end_of_PWM4_Initialize 1F42  
                       __end_of_TMR2_Initialize 1F82                     ?_INTERRUPT_InterruptManager 0077  
                                   _i2c1_object 00A0                                          ??_ctoa 0054  
                                        ??_main 00E4                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 11F3                               __end_of_GPIO_init 1FB3  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 00A2                                          ?_fputc 0039  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0041                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0077  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0077  
                                        _RC5PPS 1F25                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5223 13D8                                          i1l5233 13F5  
                                        i1l5229 13E6                                          i1l5341 0CAE  
                                        i1l5333 0C99                                          i1l5319 0C80  
                                        i1l5271 0C19                                          i1l5353 0CCF  
                                __CFG_WDTCCS$SC 0000                                          i1l5371 0CF6  
                                        i1l5267 0C12                                          i1l5373 0CFA  
                                        i1l5357 0CD6                                          i1l5285 0C3C  
                                        i1l5279 0C2C                                          i1l5641 138E  
                                        i1l5369 0CF3                                          i1l5299 0C67  
                                        i1l5379 0D02                                          i1l5637 1386  
                                        i1l5629 1365                                          i1l4925 1074  
                                        i1l6969 0D0B                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 16B5  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                                 ?_BUTTONS_isHeld 0077  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0067                                  _p_i2c1_current 00C9  
                                ??_LED_setColor 00D5                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00D9                     __end_of_TM1650_fastPrintNum 093C  
                             _ADCC_ThresholdISR 1F5A                                       ??___fldiv 0036  
                        __size_of_menuSelection 005A                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                                       ?_I2C1_ISR 0077  
                                     ??_getMode 0020                                          _printf 1031  
                        __size_of_BEAT_detected 0009                                          pad@buf 0049  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0057                                  _lastActiveTime 00AD  
                                 _LED_task_BEAT 0084                                          _strlen 108E  
                          __size_of_TM1650_init 0014                                 _ADCC_Initialize 1284  
                                        fputc@c 0039                                  _PMD_Initialize 1F02  
                                        fputs@c 0045                                    ??_CLOCK_init 0022  
                                        fputs@i 0046                                          fputs@s 0048  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0077  
                        ??_ADCC_StartConversion 0020                                          putch@n 0038  
                              __end_of_vfprintf 1330            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1EA8                   I2C1_MasterWriteTRBBuild@pdata 0020  
                                 _tm1650_status 00BB                                 _eusart1RxBuffer 0128  
                              ?_PWM3_Initialize 0077                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 123A  
                                  ___xxtofl@val 0020                         __end_of__initialization 0080  
                       __end_of_CONTROLLER_task 0BE1                              ?_SYSTEM_Initialize 0077  
                    __end_of_PWM2_LoadDutyValue 1134                                       ?_LED_task 0077  
                                    ___fltol@f1 0062                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00CA                     PWM1_LoadDutyValue@dutyValue 006D  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1F67  
                       __size_of_DMX_getAddress 0003                   __end_of_EUSART1_RxDataHandler 105E  
                         _I2C1_FunctionComplete 1F91                            _I2C1_BusCollisionISR 1E7F  
                                __pcstackCOMMON 0077                              __end_of_CLOCK_init 1008  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 1F0C  
                                  __pidataBANK2 1E90                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 1499  
                                 __end_of_fputs 1284                                   __end_of_putch 123A  
                            _PWM1_LoadDutyValue 10F8                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                ?_LED_task_BEAT 0077                                   _DMX_interrupt 1360  
                          __end_of_BUTTONS_init 1520                          __end_of_PMD_Initialize 1F0C  
                          __end_of_BUTTONS_task 0AF2                     PWM4_LoadDutyValue@dutyValue 006D  
                           ?_PWM1_LoadDutyValue 006D                     __end_of_EUSART1_Receive_ISR 13F8  
                             _thresholdExceeded 00B8                     ADCC_StartConversion@channel 0020  
                             LED_setColor@input 00D1                                   _menuSelection 15C5  
                                       ??_fputc 003C                       __end_of_SYSTEM_Initialize 125E  
                                       ??_fputs 0042                                         ??_putch 0037  
                                 _eusart1RxHead 0074                                   _eusart1RxTail 0073  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 1ED5                                      ??_LED_task 00E2  
                                    ??_DMX_init 0037                            ??_PWM1_LoadDutyValue 006F  
                             __end_of__Umul8_16 11B0                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 1EE7                                      __pmaintext 1499  
              __end_of_TMR0_SetInterruptHandler 1ECC                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 12AA                                      __pintentry 0004  
                               _I2C1_Initialize 10BF                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                         __size_of_CONTROL_BEAT 0022                                         _CCP4CON 031A  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                ?_DMX_interrupt 0077                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1EA8           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1E9F                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00D1                                 ?_PMD_Initialize 0077  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 1EF0  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1EE7  
                                     ?___xxtofl 0020                    ?_EUSART1_DefaultErrorHandler 0077  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 00A9                                       _I2C1_Stop 105E  
                                    _arrayIndex 0136                                  ?_menuSelection 0077  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 0E86                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 1E99                            __end_of_LED_task_DMX 087A  
                                ?_BEAT_detected 0077                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0037  
                                 ??_address_inc 0037                                ?_CONTROLLER_task 0077  
                                    _enterState 00BC                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 11D1                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 0800                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 093C                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0072                                         ___fldiv 0E86  
                          ?_CLOCK_timerCallback 0077                                         ___flmul 056E  
                                       ___fltol 079A                                 ??_LED_task_BEAT 00D1  
                                       ___lwdiv 13F8                                         ___lwmod 12D4  
                                     ?_vfprintf 0061                                         _address 00EA  
                                       _getMode 1E85                                         __ptext1 1008  
                                       __ptext2 123A                                         __ptext3 1F74  
                                       __ptext4 1FEC                                         __ptext5 1F37  
                                       __ptext6 1F2C                                         __ptext7 1F21  
                                       __ptext8 1F16                                         __ptext9 1F02  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 00A9                           _OSCILLATOR_Initialize 1EF9  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0150                                         _buttons 01C0  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 1391  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                     __size_of_LED_task_ANIMATION 0001  
                                    ?_I2C1_Stop 0077                     __end_of_adcThresholdHandler 1E8C  
                                       _upState 00BF                   ??_EUSART1_DefaultErrorHandler 0078  
                                       _startup 00EE                      __size_of_SYSTEM_Initialize 0024  
                          I2C1_ISR@pi2c_buf_ptr 00C8                                         clrloop0 1F43  
                              _currentSelection 00EC                            end_of_initialization 0080  
                                     _T2RSTbits 0291                                       _GPIO_init 1FA2  
                           ?_EUSART1_Initialize 0077                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003B                                         init_ram 1F4E  
                   _EUSART1_OverrunErrorHandler 014A                                         fputs@fp 0041  
                                       initloop 1F4F                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 10DB                                  _DMX_getAddress 1E82  
         __end_of_EUSART1_SetRxInterruptHandler 1ED5          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1ECC                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                               __end_of_vfpfcnvrt 1800  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 108E                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 10BF                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0064                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1EC3  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 014E  
                             __end_of_writeData 10F8                                 ??_menuSelection 006D  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0037  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1031               I2C1_ISR@i2c_10bit_address_restart 00C6  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0056                                    _BUTTONS_init 14D2  
                                  _BUTTONS_task 0A0D                          __end_of_DMX_getAddress 1E85  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 1152  
          __size_of_EUSART1_DefaultErrorHandler 0003                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_task 0021                               __size_of_DMX_init 0013  
                ??_ADCC_DefaultInterruptHandler 0077                                   ??_TM1650_init 006D  
                                   vfpfcnvrt@ap 0059                                     vfpfcnvrt@fp 0060  
                       I2C1_MasterWrite@trBlock 0140                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0078                              _PWM2_LoadDutyValue 1116  
                      __size_of_TM1650_setDigit 0012                          ?_OSCILLATOR_Initialize 0077  
                __end_of_ADCC_SetUpperThreshold 1EB1                    __size_of_TM1650_fastPrintNum 00C2  
                                __end_of_printf 1046                           __size_of_LED_setColor 0157  
                                __end_of_strlen 10A6                                    _lastDetected 00B7  
                         __size_of_LED_task_DMX 0063                             start_initialization 0032  
                                  _enterPressed 00C0                                     ??_I2C1_Stop 0077  
                      __size_of_PWM2_Initialize 000B                        __size_of_TMR0_Initialize 0014  
                           ?_PWM2_LoadDutyValue 006D                 __size_of_PIN_MANAGER_Initialize 0035  
                           TM1650_setDigit@data 0034                                     __end_of_pad 15C5  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                  _beatBrightness 00EF  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1FD8  
                           __end_of_CONTROL_DMX 1757                                 ?_DMX_getAddress 0077  
                            ?_BUTTONS_isClicked 0077                                     _address_dec 1076  
                                   _address_inc 10A6                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 006F  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0061  
                   PWM2_LoadDutyValue@dutyValue 006D                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1046  
                                  _LED_setColor 0D2F                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1190                                     __pdataBANK1 00E6  
                                   __pdataBANK2 0150                                    _LED_task_DMX 0817  
                                 _CLOCK_getTime 1EBA                                        ??_printf 0069  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00CD                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 101C                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 014E                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00D1  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 00CE                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1FEC                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 0034  
                                  _menuSelected 00ED                                    _currentState 0070  
                                     _charTable 1800                           _TMR0_InterruptHandler 0146  
                                     __pnvBANK2 0144                     __size_of_PWM1_LoadDutyValue 001E  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 142D  
                                      ?___fldiv 002E                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0BE1  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 007E  
                               writeData@status 0033                                        ?_getMode 0077  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 12AA  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 1572  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1E90     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 1E8C                            _EUSART1_ErrorHandler 0148  
                                     _downState 00BE                                     _CONTROL_DMX 16B5  
                       _EUSART1_SetErrorHandler 1EDE                               ??_TM1650_setDigit 0035  
                              ___lwdiv@quotient 0025                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                       _menuState 00BD  
                                __size_of_fputs 0026                                  __size_of_putch 0024  
      __end_of_I2C1_WaitForLastPacketToComplete 1E99       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0077  
              _I2C1_WaitForLastPacketToComplete 1E94                          I2C1_MasterRead@trBlock 013C  
                             ??_TMR0_Initialize 0022                               ??_PWM2_Initialize 0020  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 1F42                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 11B0                                        _DMX_init 1FC5  
           __size_of_INTERRUPT_InterruptManager 002C                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                     _incInterval 00E8  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0077                         CONTROLLER_task@isActive 006F  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 1F67  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_task 00EF  
                                   _TM1650_init 1008                                       _threshold 00E6  
                                     _vfpfcnvrt 1757                           __end_of_LED_task_BEAT 056E  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 00B5  
                    __end_of_LED_task_ANIMATION 0004                              DMX_interrupt@dummy 007D  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 10DB                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 005F                                     _lastIncTime 00AF  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1E9F  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 087A  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 1170  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0063  
                                    vfprintf@fp 0066                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00C7                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                         __end_of_DMX_interrupt 1391                     __size_of_EUSART1_Initialize 0033  
                                    ?_vfpfcnvrt 0058                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                __end_of_I2C1_MasterWriteTRBBuild 1216  
                            _PWM3_LoadDutyValue 1134                                      _ANSELAbits 1F38  
                                    _ANSELCbits 1F4E                                __size_of_getMode 0003  
                          ?_TM1650_fastPrintNum 0034                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0034  
           __end_of_EUSART1_DefaultErrorHandler 1E7F                     _EUSART1_DefaultErrorHandler 1E7C  
                                   _currentTime 00B1                                      _CLOCK_init 1000  
                                      ___xxtofl 161F                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                     _menuPressed 00C1  
                               ___lwdiv@divisor 0020                           __end_of_menuSelection 161F  
                           I2C1_ISR@i2c_address 0075                                 ___lwdiv@counter 0027  
                                      _detected 00B9                                      ?_writeData 002E  
                                      __ptext10 142D                                        __ptext11 1EF9  
                                      __ptext20 0817                                        __ptext12 10BF  
                                      __ptext21 0D2F                                        __ptext13 1391  
                                      __ptext30 1134                                        __ptext22 1E82  
                                      __ptext14 1EF0                                        __ptext31 1116  
                                      __ptext23 0084                                        __ptext15 1EE7  
                                      __ptext40 1301                                        __ptext32 10F8  
                                      __ptext24 161F                                        __ptext16 1EDE  
                                      __ptext41 1757                                        __ptext33 1ED5  
                                      __ptext25 079A                                        __ptext17 1284  
                                      __ptext50 16B5                                        __ptext42 1330  
                                      __ptext34 0003                                        __ptext26 056E  
                                      __ptext18 11B0                                        __ptext51 10A6  
                                      __ptext43 1572                                        __ptext35 1FC5  
                                      __ptext27 1190                                        __ptext19 1E85  
                                      __ptext60 1F82                                        __ptext52 1076  
                                      __ptext44 108E                                        __ptext36 1ECC  
                                      __ptext28 0E86                                        __ptext61 11D1  
                                      __ptext53 087A                                        __ptext45 125E  
                                      __ptext37 0AF2                                        __ptext29 1152  
                                      __ptext70 13F8                                        __ptext62 1FD8  
                                      __ptext54 10DB                                        __ptext46 1462  
                                      __ptext38 15C5                                        __ptext71 1EBA  
                                      __ptext63 1000                                        __ptext55 12AA  
                                      __ptext47 1216                                        __ptext39 1031  
                                      __ptext80 0BE1                                        __ptext72 0800  
                                      __ptext64 1EC3                                        __ptext56 11F3  
                                      __ptext48 1FB3                                        __ptext81 105E  
                                      __ptext73 1EB1                                        __ptext65 0A0D  
                                      __ptext57 1520                                        __ptext49 101C  
                                      __ptext90 1F5A                                        __ptext82 1F91  
                                      __ptext74 1EA8                                        __ptext66 14D2  
                                      __ptext58 1E94                             ?_PWM3_LoadDutyValue 006D  
                                      __ptext91 1E7A                                        __ptext83 1E7F  
                                      __ptext75 1E9F                                        __ptext67 1170  
                                      __ptext59 12D4                                        __ptext92 1E88  
                                      __ptext84 1360                                        __ptext68 1FA2  
                                      __ptext85 13C4                                        __ptext77 1F67  
                                      __ptext69 093C                                        __ptext86 1E8C  
                                      __ptext78 1E99                                        __ptext87 1E7B  
                                      __ptext79 0002                                        __ptext88 1E7C  
                                      __ptext89 1046                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 1EDE                                        _lastBeat 00AB  
                                      _lastTime 00B3                                 LED_task_DMX@dmx 00DE  
                                 __size_of_ctoa 0030                                   __size_of_main 0039  
                                 __size_of_init 0020                                    ?_address_dec 0077  
          __end_of_TMR0_DefaultInterruptHandler 0003           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0002                                    ?_address_inc 0077  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 1520  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                          ??_PWM3_LoadDutyValue 006F                    __end_of_ADCC_StartConversion 1EBA  
                                      int$flags 007E                                        _position 00BA  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 1301  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00D1                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 014C                             _EUSART1_Receive_ISR 13C4  
                         ??_TM1650_fastPrintNum 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_task 00DB                                        init@port 0020  
                                __pstringtext10 2044                                  __pstringtext11 204B  
                                __pstringtext12 2051                                  __pstringtext13 2057  
                                __pstringtext14 205D                                  __pstringtext15 2063  
                                __pstringtext16 2069                                  __pstringtext17 0000  
          __end_of_ADCC_DefaultInterruptHandler 1E7B           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1E7A                                        intlevel1 0000  
                                _thresholdCount 0138                            ?_EUSART1_Receive_ISR 0077  
                                 writeData@data 002E                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0077                        __end_of_I2C1_MasterWrite 12D4  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1EF9         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1EF0                   __end_of_I2C1_FunctionComplete 1FA2  
                                 ?_CONTROL_BEAT 0077                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 1F16                   ?_TMR0_DefaultInterruptHandler 0077  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0034  
                             _lastLedActiveTime 0134                                        printf@ap 006C  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 006D  
                               _TM1650_setDigit 1FB3                                     ??_vfpfcnvrt 005A  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00CC  
                                 __pstringtext1 1800                                   __pstringtext2 2000  
                                 __pstringtext3 200A                                   __pstringtext4 2013  
                                 __pstringtext5 201C                                   __pstringtext6 2025  
                                 __pstringtext7 202D                                   __pstringtext8 2035  
                                 __pstringtext9 203D                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0077  
                               _TMR0_Initialize 1FEC                                 _PWM2_Initialize 1F21  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0077  
                      _I2C1_MasterWriteTRBBuild 11F3                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 1462  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 101C  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0077  
                    __end_of_PWM1_LoadDutyValue 1116                            __Umul8_16@multiplier 0028  
                                ??_CONTROL_BEAT 0020                         ??_EUSART1_RxDataHandler 0077  
                               _PWM3_Initialize 1F2C                               __Umul8_16@product 0024  
