

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 12:24:33 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	cinit,global,class=CODE,merge=1,delta=2
    31                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	clrtext,global,class=CODE,delta=2
    39                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    41                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    43                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    44                           	psect	text1,local,class=CODE,merge=1,delta=2
    45                           	psect	text2,local,class=CODE,merge=1,delta=2
    46                           	psect	text3,local,class=CODE,merge=1,delta=2
    47                           	psect	text4,local,class=CODE,merge=1,delta=2
    48                           	psect	text5,local,class=CODE,merge=1,delta=2
    49                           	psect	text6,local,class=CODE,merge=1,delta=2
    50                           	psect	text7,local,class=CODE,merge=1,delta=2
    51                           	psect	text8,local,class=CODE,merge=1,delta=2
    52                           	psect	text9,local,class=CODE,merge=1,delta=2
    53                           	psect	text10,local,class=CODE,merge=1,delta=2
    54                           	psect	text11,local,class=CODE,merge=1,delta=2
    55                           	psect	text12,local,class=CODE,merge=1,delta=2
    56                           	psect	text13,local,class=CODE,merge=1,delta=2
    57                           	psect	text14,local,class=CODE,merge=1,delta=2
    58                           	psect	text15,local,class=CODE,merge=1,delta=2
    59                           	psect	text16,local,class=CODE,merge=1,delta=2
    60                           	psect	text17,local,class=CODE,merge=1,delta=2
    61                           	psect	text18,local,class=CODE,merge=1,delta=2
    62                           	psect	text19,local,class=CODE,merge=1,delta=2
    63                           	psect	text20,local,class=CODE,merge=1,delta=2
    64                           	psect	text21,local,class=CODE,merge=1,delta=2
    65                           	psect	text22,local,class=CODE,merge=1,delta=2
    66                           	psect	text23,local,class=CODE,merge=1,delta=2
    67                           	psect	text24,local,class=CODE,merge=1,delta=2
    68                           	psect	text25,local,class=CODE,merge=1,delta=2
    69                           	psect	text26,local,class=CODE,merge=1,delta=2
    70                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text32,local,class=CODE,merge=1,delta=2
    76                           	psect	text33,local,class=CODE,merge=1,delta=2
    77                           	psect	text34,local,class=CODE,merge=1,delta=2
    78                           	psect	text35,local,class=CODE,merge=1,delta=2
    79                           	psect	text36,local,class=CODE,merge=1,delta=2
    80                           	psect	text37,local,class=CODE,merge=1,delta=2
    81                           	psect	text38,local,class=CODE,merge=1,delta=2
    82                           	psect	text39,local,class=CODE,merge=1,delta=2
    83                           	psect	text40,local,class=CODE,merge=1,delta=2
    84                           	psect	text41,local,class=CODE,merge=1,delta=2
    85                           	psect	text42,local,class=CODE,merge=1,delta=2
    86                           	psect	text43,local,class=CODE,merge=1,delta=2
    87                           	psect	text44,local,class=CODE,merge=1,delta=2
    88                           	psect	text45,local,class=CODE,merge=1,delta=2
    89                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text47,local,class=CODE,merge=1,delta=2
    91                           	psect	text48,local,class=CODE,merge=1,delta=2
    92                           	psect	text49,local,class=CODE,merge=1,delta=2
    93                           	psect	text50,local,class=CODE,merge=1,delta=2
    94                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text54,local,class=CODE,merge=1,delta=2
    98                           	psect	text55,local,class=CODE,merge=1,delta=2
    99                           	psect	text56,local,class=CODE,merge=1,delta=2
   100                           	psect	text57,local,class=CODE,merge=1,delta=2
   101                           	psect	text58,local,class=CODE,merge=1,delta=2
   102                           	psect	text59,local,class=CODE,merge=1,delta=2
   103                           	psect	text60,local,class=CODE,merge=1,delta=2
   104                           	psect	text61,local,class=CODE,merge=1,delta=2
   105                           	psect	text62,local,class=CODE,merge=1,delta=2
   106                           	psect	text63,local,class=CODE,merge=1,delta=2
   107                           	psect	text64,local,class=CODE,merge=1,delta=2
   108                           	psect	text65,local,class=CODE,merge=1,delta=2
   109                           	psect	text66,local,class=CODE,merge=1,delta=2
   110                           	psect	text67,local,class=CODE,merge=1,delta=2
   111                           	psect	text68,local,class=CODE,merge=1,delta=2
   112                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text71,local,class=CODE,merge=1,delta=2
   115                           	psect	text72,local,class=CODE,merge=1,delta=2
   116                           	psect	text73,local,class=CODE,merge=1,delta=2
   117                           	psect	text74,local,class=CODE,merge=1,delta=2
   118                           	psect	text75,local,class=CODE,merge=1,delta=2
   119                           	psect	text76,local,class=CODE,merge=1,delta=2
   120                           	psect	text77,local,class=CODE,merge=1,delta=2
   121                           	psect	text78,local,class=CODE,merge=1,delta=2
   122                           	psect	text79,local,class=CODE,merge=1,delta=2
   123                           	psect	text80,local,class=CODE,merge=1,delta=2
   124                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text82,local,class=CODE,merge=1,delta=2
   126                           	psect	text83,local,class=CODE,merge=1,delta=2
   127                           	psect	text84,local,class=CODE,merge=1,delta=2
   128                           	psect	text85,local,class=CODE,merge=1,delta=2
   129                           	psect	text86,local,class=CODE,merge=1,delta=2
   130                           	psect	intentry,global,class=CODE,delta=2
   131                           	psect	text88,local,class=CODE,merge=1,delta=2
   132                           	psect	text89,local,class=CODE,merge=1,delta=2
   133                           	psect	text90,local,class=CODE,merge=1,delta=2
   134                           	psect	text91,local,class=CODE,merge=1,delta=2
   135                           	psect	text92,local,class=CODE,merge=1,delta=2
   136                           	psect	text93,local,class=CODE,merge=1,delta=2
   137                           	psect	text94,local,class=CODE,merge=1,delta=2
   138                           	psect	text95,local,class=CODE,merge=1,delta=2
   139                           	psect	text96,local,class=CODE,merge=1,delta=2
   140                           	psect	text97,local,class=CODE,merge=1,delta=2
   141                           	psect	text98,local,class=CODE,merge=1,delta=2
   142                           	psect	text99,local,class=CODE,merge=1,delta=2
   143                           	psect	text100,local,class=CODE,merge=1,delta=2
   144                           	psect	text101,local,class=CODE,merge=1,delta=2
   145                           	psect	text102,local,class=CODE,merge=1,delta=2
   146                           	psect	text103,local,class=CODE,merge=1,delta=2
   147                           	dabs	1,0xCA0,32
   148                           	dabs	1,0xC20,80
   149                           	dabs	1,0xBA0,80
   150                           	dabs	1,0xB20,80
   151                           	dabs	1,0xAA0,80
   152                           	dabs	1,0xA20,80
   153                           	dabs	1,0x9A0,80
   154                           	dabs	1,0x920,80
   155                           	dabs	1,0x8A0,80
   156                           	dabs	1,0x820,80
   157                           	dabs	1,0x7A0,80
   158                           	dabs	1,0x720,80
   159                           	dabs	1,0x6A0,80
   160                           	dabs	1,0x64E,34
   161                           	dabs	1,0x23EE,0,_dmxArray
   162                           	dabs	1,0x7E,2
   163  0000                     
   164                           ; Version 2.05
   165                           ; Generated 20/12/2018 GMT
   166                           ; 
   167                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   168                           ; All rights reserved.
   169                           ; 
   170                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   171                           ; 
   172                           ; Redistribution and use in source and binary forms, with or without modification, are
   173                           ; permitted provided that the following conditions are met:
   174                           ; 
   175                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   176                           ;        conditions and the following disclaimer.
   177                           ; 
   178                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   179                           ;        of conditions and the following disclaimer in the documentation and/or other
   180                           ;        materials provided with the distribution.
   181                           ; 
   182                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   183                           ;        software without specific prior written permission.
   184                           ; 
   185                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   186                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   187                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   188                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   189                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   190                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   191                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   192                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   193                           ; 
   194                           ; 
   195                           ; Code-generator required, PIC16F18446 Definitions
   196                           ; 
   197                           ; SFR Addresses
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  008C                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  008E                     	;# 
   224  008F                     	;# 
   225  0090                     	;# 
   226  0090                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0094                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  010F                     	;# 
   253  0110                     	;# 
   254  0111                     	;# 
   255  0112                     	;# 
   256  0113                     	;# 
   257  0114                     	;# 
   258  0115                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  0118                     	;# 
   262  0119                     	;# 
   263  0119                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011A                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011B                     	;# 
   270  011B                     	;# 
   271  011B                     	;# 
   272  011B                     	;# 
   273  011C                     	;# 
   274  011C                     	;# 
   275  011C                     	;# 
   276  011D                     	;# 
   277  011D                     	;# 
   278  011D                     	;# 
   279  011E                     	;# 
   280  011E                     	;# 
   281  011E                     	;# 
   282  011F                     	;# 
   283  011F                     	;# 
   284  011F                     	;# 
   285  011F                     	;# 
   286  011F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  018E                     	;# 
   290  018F                     	;# 
   291  0190                     	;# 
   292  0191                     	;# 
   293  0192                     	;# 
   294  0196                     	;# 
   295  0197                     	;# 
   296  0198                     	;# 
   297  0199                     	;# 
   298  019A                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  020C                     	;# 
   302  020D                     	;# 
   303  020E                     	;# 
   304  020E                     	;# 
   305  020F                     	;# 
   306  020F                     	;# 
   307  0210                     	;# 
   308  0210                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0218                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021A                     	;# 
   325  021B                     	;# 
   326  021B                     	;# 
   327  021C                     	;# 
   328  021C                     	;# 
   329  021D                     	;# 
   330  021D                     	;# 
   331  021E                     	;# 
   332  021F                     	;# 
   333  028C                     	;# 
   334  028C                     	;# 
   335  028D                     	;# 
   336  028D                     	;# 
   337  028E                     	;# 
   338  028F                     	;# 
   339  0290                     	;# 
   340  0291                     	;# 
   341  0292                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0297                     	;# 
   349  0298                     	;# 
   350  0298                     	;# 
   351  0299                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029F                     	;# 
   358  030C                     	;# 
   359  030C                     	;# 
   360  030D                     	;# 
   361  030E                     	;# 
   362  030F                     	;# 
   363  0310                     	;# 
   364  0310                     	;# 
   365  0311                     	;# 
   366  0312                     	;# 
   367  0313                     	;# 
   368  0314                     	;# 
   369  0314                     	;# 
   370  0315                     	;# 
   371  0316                     	;# 
   372  0317                     	;# 
   373  0318                     	;# 
   374  0318                     	;# 
   375  0319                     	;# 
   376  031A                     	;# 
   377  031B                     	;# 
   378  038C                     	;# 
   379  038C                     	;# 
   380  038D                     	;# 
   381  038E                     	;# 
   382  0390                     	;# 
   383  0390                     	;# 
   384  0391                     	;# 
   385  0392                     	;# 
   386  048C                     	;# 
   387  048C                     	;# 
   388  048D                     	;# 
   389  048E                     	;# 
   390  048F                     	;# 
   391  048F                     	;# 
   392  0490                     	;# 
   393  0491                     	;# 
   394  0492                     	;# 
   395  0492                     	;# 
   396  0493                     	;# 
   397  0494                     	;# 
   398  0495                     	;# 
   399  0495                     	;# 
   400  0496                     	;# 
   401  0497                     	;# 
   402  0498                     	;# 
   403  0499                     	;# 
   404  049A                     	;# 
   405  049B                     	;# 
   406  049C                     	;# 
   407  049D                     	;# 
   408  058C                     	;# 
   409  058C                     	;# 
   410  058D                     	;# 
   411  058E                     	;# 
   412  058F                     	;# 
   413  058F                     	;# 
   414  0590                     	;# 
   415  0591                     	;# 
   416  0592                     	;# 
   417  0593                     	;# 
   418  059C                     	;# 
   419  059C                     	;# 
   420  059D                     	;# 
   421  059D                     	;# 
   422  059E                     	;# 
   423  059F                     	;# 
   424  060C                     	;# 
   425  060C                     	;# 
   426  060D                     	;# 
   427  060D                     	;# 
   428  060E                     	;# 
   429  060F                     	;# 
   430  0610                     	;# 
   431  0611                     	;# 
   432  0612                     	;# 
   433  0613                     	;# 
   434  0614                     	;# 
   435  0616                     	;# 
   436  0616                     	;# 
   437  0617                     	;# 
   438  0617                     	;# 
   439  0618                     	;# 
   440  0619                     	;# 
   441  061A                     	;# 
   442  061B                     	;# 
   443  061C                     	;# 
   444  061D                     	;# 
   445  061E                     	;# 
   446  070C                     	;# 
   447  070D                     	;# 
   448  070E                     	;# 
   449  070F                     	;# 
   450  0710                     	;# 
   451  0711                     	;# 
   452  0712                     	;# 
   453  0713                     	;# 
   454  0714                     	;# 
   455  0716                     	;# 
   456  0717                     	;# 
   457  0718                     	;# 
   458  0719                     	;# 
   459  071A                     	;# 
   460  071B                     	;# 
   461  071C                     	;# 
   462  071D                     	;# 
   463  071E                     	;# 
   464  0796                     	;# 
   465  0797                     	;# 
   466  0798                     	;# 
   467  0799                     	;# 
   468  079A                     	;# 
   469  079B                     	;# 
   470  079C                     	;# 
   471  079D                     	;# 
   472  080C                     	;# 
   473  080D                     	;# 
   474  080E                     	;# 
   475  080F                     	;# 
   476  0810                     	;# 
   477  0811                     	;# 
   478  0812                     	;# 
   479  0813                     	;# 
   480  0814                     	;# 
   481  081A                     	;# 
   482  081A                     	;# 
   483  081B                     	;# 
   484  081C                     	;# 
   485  081C                     	;# 
   486  081D                     	;# 
   487  081E                     	;# 
   488  081F                     	;# 
   489  088C                     	;# 
   490  088D                     	;# 
   491  088E                     	;# 
   492  088F                     	;# 
   493  0890                     	;# 
   494  0891                     	;# 
   495  0892                     	;# 
   496  0893                     	;# 
   497  0895                     	;# 
   498  0896                     	;# 
   499  0897                     	;# 
   500  0898                     	;# 
   501  0899                     	;# 
   502  089A                     	;# 
   503  089B                     	;# 
   504  090C                     	;# 
   505  090E                     	;# 
   506  090F                     	;# 
   507  091F                     	;# 
   508  098F                     	;# 
   509  098F                     	;# 
   510  0990                     	;# 
   511  0991                     	;# 
   512  0992                     	;# 
   513  0993                     	;# 
   514  0994                     	;# 
   515  0995                     	;# 
   516  0996                     	;# 
   517  0997                     	;# 
   518  1E0F                     	;# 
   519  1E10                     	;# 
   520  1E11                     	;# 
   521  1E12                     	;# 
   522  1E13                     	;# 
   523  1E14                     	;# 
   524  1E15                     	;# 
   525  1E16                     	;# 
   526  1E17                     	;# 
   527  1E18                     	;# 
   528  1E19                     	;# 
   529  1E1A                     	;# 
   530  1E1B                     	;# 
   531  1E1C                     	;# 
   532  1E1D                     	;# 
   533  1E1E                     	;# 
   534  1E1F                     	;# 
   535  1E20                     	;# 
   536  1E21                     	;# 
   537  1E22                     	;# 
   538  1E23                     	;# 
   539  1E24                     	;# 
   540  1E25                     	;# 
   541  1E26                     	;# 
   542  1E27                     	;# 
   543  1E28                     	;# 
   544  1E29                     	;# 
   545  1E2A                     	;# 
   546  1E2B                     	;# 
   547  1E2C                     	;# 
   548  1E2D                     	;# 
   549  1E2E                     	;# 
   550  1E2F                     	;# 
   551  1E30                     	;# 
   552  1E31                     	;# 
   553  1E32                     	;# 
   554  1E33                     	;# 
   555  1E34                     	;# 
   556  1E35                     	;# 
   557  1E36                     	;# 
   558  1E37                     	;# 
   559  1E8F                     	;# 
   560  1E90                     	;# 
   561  1E91                     	;# 
   562  1E92                     	;# 
   563  1E93                     	;# 
   564  1E94                     	;# 
   565  1E95                     	;# 
   566  1E96                     	;# 
   567  1E97                     	;# 
   568  1E9C                     	;# 
   569  1E9D                     	;# 
   570  1E9E                     	;# 
   571  1EA1                     	;# 
   572  1EA2                     	;# 
   573  1EA3                     	;# 
   574  1EA4                     	;# 
   575  1EA9                     	;# 
   576  1EAA                     	;# 
   577  1EB1                     	;# 
   578  1EB2                     	;# 
   579  1EB8                     	;# 
   580  1EB9                     	;# 
   581  1EBA                     	;# 
   582  1EBB                     	;# 
   583  1EBC                     	;# 
   584  1EBD                     	;# 
   585  1EBE                     	;# 
   586  1EC3                     	;# 
   587  1EC5                     	;# 
   588  1EC6                     	;# 
   589  1EC7                     	;# 
   590  1EC8                     	;# 
   591  1EC9                     	;# 
   592  1ECA                     	;# 
   593  1ECB                     	;# 
   594  1ECB                     	;# 
   595  1ECB                     	;# 
   596  1ECC                     	;# 
   597  1ECC                     	;# 
   598  1ECC                     	;# 
   599  1F10                     	;# 
   600  1F11                     	;# 
   601  1F12                     	;# 
   602  1F14                     	;# 
   603  1F15                     	;# 
   604  1F1C                     	;# 
   605  1F1D                     	;# 
   606  1F1E                     	;# 
   607  1F1F                     	;# 
   608  1F20                     	;# 
   609  1F21                     	;# 
   610  1F22                     	;# 
   611  1F23                     	;# 
   612  1F24                     	;# 
   613  1F25                     	;# 
   614  1F26                     	;# 
   615  1F27                     	;# 
   616  1F38                     	;# 
   617  1F39                     	;# 
   618  1F3A                     	;# 
   619  1F3B                     	;# 
   620  1F3C                     	;# 
   621  1F3D                     	;# 
   622  1F3E                     	;# 
   623  1F3F                     	;# 
   624  1F43                     	;# 
   625  1F44                     	;# 
   626  1F45                     	;# 
   627  1F46                     	;# 
   628  1F47                     	;# 
   629  1F48                     	;# 
   630  1F49                     	;# 
   631  1F4A                     	;# 
   632  1F4E                     	;# 
   633  1F4F                     	;# 
   634  1F50                     	;# 
   635  1F51                     	;# 
   636  1F52                     	;# 
   637  1F53                     	;# 
   638  1F54                     	;# 
   639  1F55                     	;# 
   640  1FE4                     	;# 
   641  1FE5                     	;# 
   642  1FE6                     	;# 
   643  1FE7                     	;# 
   644  1FE8                     	;# 
   645  1FE8                     	;# 
   646  1FE9                     	;# 
   647  1FEA                     	;# 
   648  1FEB                     	;# 
   649  1FED                     	;# 
   650  1FEE                     	;# 
   651  1FEF                     	;# 
   652  0000                     	;# 
   653  0001                     	;# 
   654  0002                     	;# 
   655  0003                     	;# 
   656  0004                     	;# 
   657  0005                     	;# 
   658  0006                     	;# 
   659  0007                     	;# 
   660  0008                     	;# 
   661  0009                     	;# 
   662  000A                     	;# 
   663  000B                     	;# 
   664  000C                     	;# 
   665  000D                     	;# 
   666  000E                     	;# 
   667  0012                     	;# 
   668  0013                     	;# 
   669  0014                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  008C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008E                     	;# 
   678  008F                     	;# 
   679  0090                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0094                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0096                     	;# 
   690  0097                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009A                     	;# 
   694  009B                     	;# 
   695  009B                     	;# 
   696  009C                     	;# 
   697  009D                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  010C                     	;# 
   702  010C                     	;# 
   703  010D                     	;# 
   704  010E                     	;# 
   705  010F                     	;# 
   706  010F                     	;# 
   707  0110                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  011A                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011C                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011D                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011E                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  018F                     	;# 
   745  0190                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0196                     	;# 
   749  0197                     	;# 
   750  0198                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019C                     	;# 
   755  020C                     	;# 
   756  020D                     	;# 
   757  020E                     	;# 
   758  020E                     	;# 
   759  020F                     	;# 
   760  020F                     	;# 
   761  0210                     	;# 
   762  0210                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  0212                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0216                     	;# 
   772  0216                     	;# 
   773  0217                     	;# 
   774  0217                     	;# 
   775  0218                     	;# 
   776  0219                     	;# 
   777  021A                     	;# 
   778  021A                     	;# 
   779  021B                     	;# 
   780  021B                     	;# 
   781  021C                     	;# 
   782  021C                     	;# 
   783  021D                     	;# 
   784  021D                     	;# 
   785  021E                     	;# 
   786  021F                     	;# 
   787  028C                     	;# 
   788  028C                     	;# 
   789  028D                     	;# 
   790  028D                     	;# 
   791  028E                     	;# 
   792  028F                     	;# 
   793  0290                     	;# 
   794  0291                     	;# 
   795  0292                     	;# 
   796  0292                     	;# 
   797  0293                     	;# 
   798  0293                     	;# 
   799  0294                     	;# 
   800  0295                     	;# 
   801  0296                     	;# 
   802  0297                     	;# 
   803  0298                     	;# 
   804  0298                     	;# 
   805  0299                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  029B                     	;# 
   809  029C                     	;# 
   810  029D                     	;# 
   811  029F                     	;# 
   812  030C                     	;# 
   813  030C                     	;# 
   814  030D                     	;# 
   815  030E                     	;# 
   816  030F                     	;# 
   817  0310                     	;# 
   818  0310                     	;# 
   819  0311                     	;# 
   820  0312                     	;# 
   821  0313                     	;# 
   822  0314                     	;# 
   823  0314                     	;# 
   824  0315                     	;# 
   825  0316                     	;# 
   826  0317                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  031B                     	;# 
   832  038C                     	;# 
   833  038C                     	;# 
   834  038D                     	;# 
   835  038E                     	;# 
   836  0390                     	;# 
   837  0390                     	;# 
   838  0391                     	;# 
   839  0392                     	;# 
   840  048C                     	;# 
   841  048C                     	;# 
   842  048D                     	;# 
   843  048E                     	;# 
   844  048F                     	;# 
   845  048F                     	;# 
   846  0490                     	;# 
   847  0491                     	;# 
   848  0492                     	;# 
   849  0492                     	;# 
   850  0493                     	;# 
   851  0494                     	;# 
   852  0495                     	;# 
   853  0495                     	;# 
   854  0496                     	;# 
   855  0497                     	;# 
   856  0498                     	;# 
   857  0499                     	;# 
   858  049A                     	;# 
   859  049B                     	;# 
   860  049C                     	;# 
   861  049D                     	;# 
   862  058C                     	;# 
   863  058C                     	;# 
   864  058D                     	;# 
   865  058E                     	;# 
   866  058F                     	;# 
   867  058F                     	;# 
   868  0590                     	;# 
   869  0591                     	;# 
   870  0592                     	;# 
   871  0593                     	;# 
   872  059C                     	;# 
   873  059C                     	;# 
   874  059D                     	;# 
   875  059D                     	;# 
   876  059E                     	;# 
   877  059F                     	;# 
   878  060C                     	;# 
   879  060C                     	;# 
   880  060D                     	;# 
   881  060D                     	;# 
   882  060E                     	;# 
   883  060F                     	;# 
   884  0610                     	;# 
   885  0611                     	;# 
   886  0612                     	;# 
   887  0613                     	;# 
   888  0614                     	;# 
   889  0616                     	;# 
   890  0616                     	;# 
   891  0617                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  061A                     	;# 
   896  061B                     	;# 
   897  061C                     	;# 
   898  061D                     	;# 
   899  061E                     	;# 
   900  070C                     	;# 
   901  070D                     	;# 
   902  070E                     	;# 
   903  070F                     	;# 
   904  0710                     	;# 
   905  0711                     	;# 
   906  0712                     	;# 
   907  0713                     	;# 
   908  0714                     	;# 
   909  0716                     	;# 
   910  0717                     	;# 
   911  0718                     	;# 
   912  0719                     	;# 
   913  071A                     	;# 
   914  071B                     	;# 
   915  071C                     	;# 
   916  071D                     	;# 
   917  071E                     	;# 
   918  0796                     	;# 
   919  0797                     	;# 
   920  0798                     	;# 
   921  0799                     	;# 
   922  079A                     	;# 
   923  079B                     	;# 
   924  079C                     	;# 
   925  079D                     	;# 
   926  080C                     	;# 
   927  080D                     	;# 
   928  080E                     	;# 
   929  080F                     	;# 
   930  0810                     	;# 
   931  0811                     	;# 
   932  0812                     	;# 
   933  0813                     	;# 
   934  0814                     	;# 
   935  081A                     	;# 
   936  081A                     	;# 
   937  081B                     	;# 
   938  081C                     	;# 
   939  081C                     	;# 
   940  081D                     	;# 
   941  081E                     	;# 
   942  081F                     	;# 
   943  088C                     	;# 
   944  088D                     	;# 
   945  088E                     	;# 
   946  088F                     	;# 
   947  0890                     	;# 
   948  0891                     	;# 
   949  0892                     	;# 
   950  0893                     	;# 
   951  0895                     	;# 
   952  0896                     	;# 
   953  0897                     	;# 
   954  0898                     	;# 
   955  0899                     	;# 
   956  089A                     	;# 
   957  089B                     	;# 
   958  090C                     	;# 
   959  090E                     	;# 
   960  090F                     	;# 
   961  091F                     	;# 
   962  098F                     	;# 
   963  098F                     	;# 
   964  0990                     	;# 
   965  0991                     	;# 
   966  0992                     	;# 
   967  0993                     	;# 
   968  0994                     	;# 
   969  0995                     	;# 
   970  0996                     	;# 
   971  0997                     	;# 
   972  1E0F                     	;# 
   973  1E10                     	;# 
   974  1E11                     	;# 
   975  1E12                     	;# 
   976  1E13                     	;# 
   977  1E14                     	;# 
   978  1E15                     	;# 
   979  1E16                     	;# 
   980  1E17                     	;# 
   981  1E18                     	;# 
   982  1E19                     	;# 
   983  1E1A                     	;# 
   984  1E1B                     	;# 
   985  1E1C                     	;# 
   986  1E1D                     	;# 
   987  1E1E                     	;# 
   988  1E1F                     	;# 
   989  1E20                     	;# 
   990  1E21                     	;# 
   991  1E22                     	;# 
   992  1E23                     	;# 
   993  1E24                     	;# 
   994  1E25                     	;# 
   995  1E26                     	;# 
   996  1E27                     	;# 
   997  1E28                     	;# 
   998  1E29                     	;# 
   999  1E2A                     	;# 
  1000  1E2B                     	;# 
  1001  1E2C                     	;# 
  1002  1E2D                     	;# 
  1003  1E2E                     	;# 
  1004  1E2F                     	;# 
  1005  1E30                     	;# 
  1006  1E31                     	;# 
  1007  1E32                     	;# 
  1008  1E33                     	;# 
  1009  1E34                     	;# 
  1010  1E35                     	;# 
  1011  1E36                     	;# 
  1012  1E37                     	;# 
  1013  1E8F                     	;# 
  1014  1E90                     	;# 
  1015  1E91                     	;# 
  1016  1E92                     	;# 
  1017  1E93                     	;# 
  1018  1E94                     	;# 
  1019  1E95                     	;# 
  1020  1E96                     	;# 
  1021  1E97                     	;# 
  1022  1E9C                     	;# 
  1023  1E9D                     	;# 
  1024  1E9E                     	;# 
  1025  1EA1                     	;# 
  1026  1EA2                     	;# 
  1027  1EA3                     	;# 
  1028  1EA4                     	;# 
  1029  1EA9                     	;# 
  1030  1EAA                     	;# 
  1031  1EB1                     	;# 
  1032  1EB2                     	;# 
  1033  1EB8                     	;# 
  1034  1EB9                     	;# 
  1035  1EBA                     	;# 
  1036  1EBB                     	;# 
  1037  1EBC                     	;# 
  1038  1EBD                     	;# 
  1039  1EBE                     	;# 
  1040  1EC3                     	;# 
  1041  1EC5                     	;# 
  1042  1EC6                     	;# 
  1043  1EC7                     	;# 
  1044  1EC8                     	;# 
  1045  1EC9                     	;# 
  1046  1ECA                     	;# 
  1047  1ECB                     	;# 
  1048  1ECB                     	;# 
  1049  1ECB                     	;# 
  1050  1ECC                     	;# 
  1051  1ECC                     	;# 
  1052  1ECC                     	;# 
  1053  1F10                     	;# 
  1054  1F11                     	;# 
  1055  1F12                     	;# 
  1056  1F14                     	;# 
  1057  1F15                     	;# 
  1058  1F1C                     	;# 
  1059  1F1D                     	;# 
  1060  1F1E                     	;# 
  1061  1F1F                     	;# 
  1062  1F20                     	;# 
  1063  1F21                     	;# 
  1064  1F22                     	;# 
  1065  1F23                     	;# 
  1066  1F24                     	;# 
  1067  1F25                     	;# 
  1068  1F26                     	;# 
  1069  1F27                     	;# 
  1070  1F38                     	;# 
  1071  1F39                     	;# 
  1072  1F3A                     	;# 
  1073  1F3B                     	;# 
  1074  1F3C                     	;# 
  1075  1F3D                     	;# 
  1076  1F3E                     	;# 
  1077  1F3F                     	;# 
  1078  1F43                     	;# 
  1079  1F44                     	;# 
  1080  1F45                     	;# 
  1081  1F46                     	;# 
  1082  1F47                     	;# 
  1083  1F48                     	;# 
  1084  1F49                     	;# 
  1085  1F4A                     	;# 
  1086  1F4E                     	;# 
  1087  1F4F                     	;# 
  1088  1F50                     	;# 
  1089  1F51                     	;# 
  1090  1F52                     	;# 
  1091  1F53                     	;# 
  1092  1F54                     	;# 
  1093  1F55                     	;# 
  1094  1FE4                     	;# 
  1095  1FE5                     	;# 
  1096  1FE6                     	;# 
  1097  1FE7                     	;# 
  1098  1FE8                     	;# 
  1099  1FE8                     	;# 
  1100  1FE9                     	;# 
  1101  1FEA                     	;# 
  1102  1FEB                     	;# 
  1103  1FED                     	;# 
  1104  1FEE                     	;# 
  1105  1FEF                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000D                     	;# 
  1120  000E                     	;# 
  1121  0012                     	;# 
  1122  0013                     	;# 
  1123  0014                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  008C                     	;# 
  1128  008C                     	;# 
  1129  008D                     	;# 
  1130  008E                     	;# 
  1131  008E                     	;# 
  1132  008F                     	;# 
  1133  0090                     	;# 
  1134  0090                     	;# 
  1135  0091                     	;# 
  1136  0092                     	;# 
  1137  0092                     	;# 
  1138  0093                     	;# 
  1139  0094                     	;# 
  1140  0094                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0096                     	;# 
  1144  0097                     	;# 
  1145  0098                     	;# 
  1146  0099                     	;# 
  1147  009A                     	;# 
  1148  009B                     	;# 
  1149  009B                     	;# 
  1150  009C                     	;# 
  1151  009D                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  009F                     	;# 
  1155  010C                     	;# 
  1156  010C                     	;# 
  1157  010D                     	;# 
  1158  010E                     	;# 
  1159  010F                     	;# 
  1160  010F                     	;# 
  1161  0110                     	;# 
  1162  0111                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0115                     	;# 
  1167  0116                     	;# 
  1168  0117                     	;# 
  1169  0118                     	;# 
  1170  0119                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  011A                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011B                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011C                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011D                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011E                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011F                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  018C                     	;# 
  1196  018D                     	;# 
  1197  018E                     	;# 
  1198  018F                     	;# 
  1199  0190                     	;# 
  1200  0191                     	;# 
  1201  0192                     	;# 
  1202  0196                     	;# 
  1203  0197                     	;# 
  1204  0198                     	;# 
  1205  0199                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019C                     	;# 
  1209  020C                     	;# 
  1210  020D                     	;# 
  1211  020E                     	;# 
  1212  020E                     	;# 
  1213  020F                     	;# 
  1214  020F                     	;# 
  1215  0210                     	;# 
  1216  0210                     	;# 
  1217  0211                     	;# 
  1218  0211                     	;# 
  1219  0212                     	;# 
  1220  0213                     	;# 
  1221  0214                     	;# 
  1222  0214                     	;# 
  1223  0215                     	;# 
  1224  0215                     	;# 
  1225  0216                     	;# 
  1226  0216                     	;# 
  1227  0217                     	;# 
  1228  0217                     	;# 
  1229  0218                     	;# 
  1230  0219                     	;# 
  1231  021A                     	;# 
  1232  021A                     	;# 
  1233  021B                     	;# 
  1234  021B                     	;# 
  1235  021C                     	;# 
  1236  021C                     	;# 
  1237  021D                     	;# 
  1238  021D                     	;# 
  1239  021E                     	;# 
  1240  021F                     	;# 
  1241  028C                     	;# 
  1242  028C                     	;# 
  1243  028D                     	;# 
  1244  028D                     	;# 
  1245  028E                     	;# 
  1246  028F                     	;# 
  1247  0290                     	;# 
  1248  0291                     	;# 
  1249  0292                     	;# 
  1250  0292                     	;# 
  1251  0293                     	;# 
  1252  0293                     	;# 
  1253  0294                     	;# 
  1254  0295                     	;# 
  1255  0296                     	;# 
  1256  0297                     	;# 
  1257  0298                     	;# 
  1258  0298                     	;# 
  1259  0299                     	;# 
  1260  0299                     	;# 
  1261  029A                     	;# 
  1262  029B                     	;# 
  1263  029C                     	;# 
  1264  029D                     	;# 
  1265  029F                     	;# 
  1266  030C                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  030F                     	;# 
  1271  0310                     	;# 
  1272  0310                     	;# 
  1273  0311                     	;# 
  1274  0312                     	;# 
  1275  0313                     	;# 
  1276  0314                     	;# 
  1277  0314                     	;# 
  1278  0315                     	;# 
  1279  0316                     	;# 
  1280  0317                     	;# 
  1281  0318                     	;# 
  1282  0318                     	;# 
  1283  0319                     	;# 
  1284  031A                     	;# 
  1285  031B                     	;# 
  1286  038C                     	;# 
  1287  038C                     	;# 
  1288  038D                     	;# 
  1289  038E                     	;# 
  1290  0390                     	;# 
  1291  0390                     	;# 
  1292  0391                     	;# 
  1293  0392                     	;# 
  1294  048C                     	;# 
  1295  048C                     	;# 
  1296  048D                     	;# 
  1297  048E                     	;# 
  1298  048F                     	;# 
  1299  048F                     	;# 
  1300  0490                     	;# 
  1301  0491                     	;# 
  1302  0492                     	;# 
  1303  0492                     	;# 
  1304  0493                     	;# 
  1305  0494                     	;# 
  1306  0495                     	;# 
  1307  0495                     	;# 
  1308  0496                     	;# 
  1309  0497                     	;# 
  1310  0498                     	;# 
  1311  0499                     	;# 
  1312  049A                     	;# 
  1313  049B                     	;# 
  1314  049C                     	;# 
  1315  049D                     	;# 
  1316  058C                     	;# 
  1317  058C                     	;# 
  1318  058D                     	;# 
  1319  058E                     	;# 
  1320  058F                     	;# 
  1321  058F                     	;# 
  1322  0590                     	;# 
  1323  0591                     	;# 
  1324  0592                     	;# 
  1325  0593                     	;# 
  1326  059C                     	;# 
  1327  059C                     	;# 
  1328  059D                     	;# 
  1329  059D                     	;# 
  1330  059E                     	;# 
  1331  059F                     	;# 
  1332  060C                     	;# 
  1333  060C                     	;# 
  1334  060D                     	;# 
  1335  060D                     	;# 
  1336  060E                     	;# 
  1337  060F                     	;# 
  1338  0610                     	;# 
  1339  0611                     	;# 
  1340  0612                     	;# 
  1341  0613                     	;# 
  1342  0614                     	;# 
  1343  0616                     	;# 
  1344  0616                     	;# 
  1345  0617                     	;# 
  1346  0617                     	;# 
  1347  0618                     	;# 
  1348  0619                     	;# 
  1349  061A                     	;# 
  1350  061B                     	;# 
  1351  061C                     	;# 
  1352  061D                     	;# 
  1353  061E                     	;# 
  1354  070C                     	;# 
  1355  070D                     	;# 
  1356  070E                     	;# 
  1357  070F                     	;# 
  1358  0710                     	;# 
  1359  0711                     	;# 
  1360  0712                     	;# 
  1361  0713                     	;# 
  1362  0714                     	;# 
  1363  0716                     	;# 
  1364  0717                     	;# 
  1365  0718                     	;# 
  1366  0719                     	;# 
  1367  071A                     	;# 
  1368  071B                     	;# 
  1369  071C                     	;# 
  1370  071D                     	;# 
  1371  071E                     	;# 
  1372  0796                     	;# 
  1373  0797                     	;# 
  1374  0798                     	;# 
  1375  0799                     	;# 
  1376  079A                     	;# 
  1377  079B                     	;# 
  1378  079C                     	;# 
  1379  079D                     	;# 
  1380  080C                     	;# 
  1381  080D                     	;# 
  1382  080E                     	;# 
  1383  080F                     	;# 
  1384  0810                     	;# 
  1385  0811                     	;# 
  1386  0812                     	;# 
  1387  0813                     	;# 
  1388  0814                     	;# 
  1389  081A                     	;# 
  1390  081A                     	;# 
  1391  081B                     	;# 
  1392  081C                     	;# 
  1393  081C                     	;# 
  1394  081D                     	;# 
  1395  081E                     	;# 
  1396  081F                     	;# 
  1397  088C                     	;# 
  1398  088D                     	;# 
  1399  088E                     	;# 
  1400  088F                     	;# 
  1401  0890                     	;# 
  1402  0891                     	;# 
  1403  0892                     	;# 
  1404  0893                     	;# 
  1405  0895                     	;# 
  1406  0896                     	;# 
  1407  0897                     	;# 
  1408  0898                     	;# 
  1409  0899                     	;# 
  1410  089A                     	;# 
  1411  089B                     	;# 
  1412  090C                     	;# 
  1413  090E                     	;# 
  1414  090F                     	;# 
  1415  091F                     	;# 
  1416  098F                     	;# 
  1417  098F                     	;# 
  1418  0990                     	;# 
  1419  0991                     	;# 
  1420  0992                     	;# 
  1421  0993                     	;# 
  1422  0994                     	;# 
  1423  0995                     	;# 
  1424  0996                     	;# 
  1425  0997                     	;# 
  1426  1E0F                     	;# 
  1427  1E10                     	;# 
  1428  1E11                     	;# 
  1429  1E12                     	;# 
  1430  1E13                     	;# 
  1431  1E14                     	;# 
  1432  1E15                     	;# 
  1433  1E16                     	;# 
  1434  1E17                     	;# 
  1435  1E18                     	;# 
  1436  1E19                     	;# 
  1437  1E1A                     	;# 
  1438  1E1B                     	;# 
  1439  1E1C                     	;# 
  1440  1E1D                     	;# 
  1441  1E1E                     	;# 
  1442  1E1F                     	;# 
  1443  1E20                     	;# 
  1444  1E21                     	;# 
  1445  1E22                     	;# 
  1446  1E23                     	;# 
  1447  1E24                     	;# 
  1448  1E25                     	;# 
  1449  1E26                     	;# 
  1450  1E27                     	;# 
  1451  1E28                     	;# 
  1452  1E29                     	;# 
  1453  1E2A                     	;# 
  1454  1E2B                     	;# 
  1455  1E2C                     	;# 
  1456  1E2D                     	;# 
  1457  1E2E                     	;# 
  1458  1E2F                     	;# 
  1459  1E30                     	;# 
  1460  1E31                     	;# 
  1461  1E32                     	;# 
  1462  1E33                     	;# 
  1463  1E34                     	;# 
  1464  1E35                     	;# 
  1465  1E36                     	;# 
  1466  1E37                     	;# 
  1467  1E8F                     	;# 
  1468  1E90                     	;# 
  1469  1E91                     	;# 
  1470  1E92                     	;# 
  1471  1E93                     	;# 
  1472  1E94                     	;# 
  1473  1E95                     	;# 
  1474  1E96                     	;# 
  1475  1E97                     	;# 
  1476  1E9C                     	;# 
  1477  1E9D                     	;# 
  1478  1E9E                     	;# 
  1479  1EA1                     	;# 
  1480  1EA2                     	;# 
  1481  1EA3                     	;# 
  1482  1EA4                     	;# 
  1483  1EA9                     	;# 
  1484  1EAA                     	;# 
  1485  1EB1                     	;# 
  1486  1EB2                     	;# 
  1487  1EB8                     	;# 
  1488  1EB9                     	;# 
  1489  1EBA                     	;# 
  1490  1EBB                     	;# 
  1491  1EBC                     	;# 
  1492  1EBD                     	;# 
  1493  1EBE                     	;# 
  1494  1EC3                     	;# 
  1495  1EC5                     	;# 
  1496  1EC6                     	;# 
  1497  1EC7                     	;# 
  1498  1EC8                     	;# 
  1499  1EC9                     	;# 
  1500  1ECA                     	;# 
  1501  1ECB                     	;# 
  1502  1ECB                     	;# 
  1503  1ECB                     	;# 
  1504  1ECC                     	;# 
  1505  1ECC                     	;# 
  1506  1ECC                     	;# 
  1507  1F10                     	;# 
  1508  1F11                     	;# 
  1509  1F12                     	;# 
  1510  1F14                     	;# 
  1511  1F15                     	;# 
  1512  1F1C                     	;# 
  1513  1F1D                     	;# 
  1514  1F1E                     	;# 
  1515  1F1F                     	;# 
  1516  1F20                     	;# 
  1517  1F21                     	;# 
  1518  1F22                     	;# 
  1519  1F23                     	;# 
  1520  1F24                     	;# 
  1521  1F25                     	;# 
  1522  1F26                     	;# 
  1523  1F27                     	;# 
  1524  1F38                     	;# 
  1525  1F39                     	;# 
  1526  1F3A                     	;# 
  1527  1F3B                     	;# 
  1528  1F3C                     	;# 
  1529  1F3D                     	;# 
  1530  1F3E                     	;# 
  1531  1F3F                     	;# 
  1532  1F43                     	;# 
  1533  1F44                     	;# 
  1534  1F45                     	;# 
  1535  1F46                     	;# 
  1536  1F47                     	;# 
  1537  1F48                     	;# 
  1538  1F49                     	;# 
  1539  1F4A                     	;# 
  1540  1F4E                     	;# 
  1541  1F4F                     	;# 
  1542  1F50                     	;# 
  1543  1F51                     	;# 
  1544  1F52                     	;# 
  1545  1F53                     	;# 
  1546  1F54                     	;# 
  1547  1F55                     	;# 
  1548  1FE4                     	;# 
  1549  1FE5                     	;# 
  1550  1FE6                     	;# 
  1551  1FE7                     	;# 
  1552  1FE8                     	;# 
  1553  1FE8                     	;# 
  1554  1FE9                     	;# 
  1555  1FEA                     	;# 
  1556  1FEB                     	;# 
  1557  1FED                     	;# 
  1558  1FEE                     	;# 
  1559  1FEF                     	;# 
  1560  0000                     	;# 
  1561  0001                     	;# 
  1562  0002                     	;# 
  1563  0003                     	;# 
  1564  0004                     	;# 
  1565  0005                     	;# 
  1566  0006                     	;# 
  1567  0007                     	;# 
  1568  0008                     	;# 
  1569  0009                     	;# 
  1570  000A                     	;# 
  1571  000B                     	;# 
  1572  000C                     	;# 
  1573  000D                     	;# 
  1574  000E                     	;# 
  1575  0012                     	;# 
  1576  0013                     	;# 
  1577  0014                     	;# 
  1578  0018                     	;# 
  1579  0019                     	;# 
  1580  001A                     	;# 
  1581  008C                     	;# 
  1582  008C                     	;# 
  1583  008D                     	;# 
  1584  008E                     	;# 
  1585  008E                     	;# 
  1586  008F                     	;# 
  1587  0090                     	;# 
  1588  0090                     	;# 
  1589  0091                     	;# 
  1590  0092                     	;# 
  1591  0092                     	;# 
  1592  0093                     	;# 
  1593  0094                     	;# 
  1594  0094                     	;# 
  1595  0095                     	;# 
  1596  0096                     	;# 
  1597  0096                     	;# 
  1598  0097                     	;# 
  1599  0098                     	;# 
  1600  0099                     	;# 
  1601  009A                     	;# 
  1602  009B                     	;# 
  1603  009B                     	;# 
  1604  009C                     	;# 
  1605  009D                     	;# 
  1606  009D                     	;# 
  1607  009E                     	;# 
  1608  009F                     	;# 
  1609  010C                     	;# 
  1610  010C                     	;# 
  1611  010D                     	;# 
  1612  010E                     	;# 
  1613  010F                     	;# 
  1614  010F                     	;# 
  1615  0110                     	;# 
  1616  0111                     	;# 
  1617  0112                     	;# 
  1618  0113                     	;# 
  1619  0114                     	;# 
  1620  0115                     	;# 
  1621  0116                     	;# 
  1622  0117                     	;# 
  1623  0118                     	;# 
  1624  0119                     	;# 
  1625  0119                     	;# 
  1626  0119                     	;# 
  1627  011A                     	;# 
  1628  011A                     	;# 
  1629  011A                     	;# 
  1630  011B                     	;# 
  1631  011B                     	;# 
  1632  011B                     	;# 
  1633  011B                     	;# 
  1634  011B                     	;# 
  1635  011C                     	;# 
  1636  011C                     	;# 
  1637  011C                     	;# 
  1638  011D                     	;# 
  1639  011D                     	;# 
  1640  011D                     	;# 
  1641  011E                     	;# 
  1642  011E                     	;# 
  1643  011E                     	;# 
  1644  011F                     	;# 
  1645  011F                     	;# 
  1646  011F                     	;# 
  1647  011F                     	;# 
  1648  011F                     	;# 
  1649  018C                     	;# 
  1650  018D                     	;# 
  1651  018E                     	;# 
  1652  018F                     	;# 
  1653  0190                     	;# 
  1654  0191                     	;# 
  1655  0192                     	;# 
  1656  0196                     	;# 
  1657  0197                     	;# 
  1658  0198                     	;# 
  1659  0199                     	;# 
  1660  019A                     	;# 
  1661  019B                     	;# 
  1662  019C                     	;# 
  1663  020C                     	;# 
  1664  020D                     	;# 
  1665  020E                     	;# 
  1666  020E                     	;# 
  1667  020F                     	;# 
  1668  020F                     	;# 
  1669  0210                     	;# 
  1670  0210                     	;# 
  1671  0211                     	;# 
  1672  0211                     	;# 
  1673  0212                     	;# 
  1674  0213                     	;# 
  1675  0214                     	;# 
  1676  0214                     	;# 
  1677  0215                     	;# 
  1678  0215                     	;# 
  1679  0216                     	;# 
  1680  0216                     	;# 
  1681  0217                     	;# 
  1682  0217                     	;# 
  1683  0218                     	;# 
  1684  0219                     	;# 
  1685  021A                     	;# 
  1686  021A                     	;# 
  1687  021B                     	;# 
  1688  021B                     	;# 
  1689  021C                     	;# 
  1690  021C                     	;# 
  1691  021D                     	;# 
  1692  021D                     	;# 
  1693  021E                     	;# 
  1694  021F                     	;# 
  1695  028C                     	;# 
  1696  028C                     	;# 
  1697  028D                     	;# 
  1698  028D                     	;# 
  1699  028E                     	;# 
  1700  028F                     	;# 
  1701  0290                     	;# 
  1702  0291                     	;# 
  1703  0292                     	;# 
  1704  0292                     	;# 
  1705  0293                     	;# 
  1706  0293                     	;# 
  1707  0294                     	;# 
  1708  0295                     	;# 
  1709  0296                     	;# 
  1710  0297                     	;# 
  1711  0298                     	;# 
  1712  0298                     	;# 
  1713  0299                     	;# 
  1714  0299                     	;# 
  1715  029A                     	;# 
  1716  029B                     	;# 
  1717  029C                     	;# 
  1718  029D                     	;# 
  1719  029F                     	;# 
  1720  030C                     	;# 
  1721  030C                     	;# 
  1722  030D                     	;# 
  1723  030E                     	;# 
  1724  030F                     	;# 
  1725  0310                     	;# 
  1726  0310                     	;# 
  1727  0311                     	;# 
  1728  0312                     	;# 
  1729  0313                     	;# 
  1730  0314                     	;# 
  1731  0314                     	;# 
  1732  0315                     	;# 
  1733  0316                     	;# 
  1734  0317                     	;# 
  1735  0318                     	;# 
  1736  0318                     	;# 
  1737  0319                     	;# 
  1738  031A                     	;# 
  1739  031B                     	;# 
  1740  038C                     	;# 
  1741  038C                     	;# 
  1742  038D                     	;# 
  1743  038E                     	;# 
  1744  0390                     	;# 
  1745  0390                     	;# 
  1746  0391                     	;# 
  1747  0392                     	;# 
  1748  048C                     	;# 
  1749  048C                     	;# 
  1750  048D                     	;# 
  1751  048E                     	;# 
  1752  048F                     	;# 
  1753  048F                     	;# 
  1754  0490                     	;# 
  1755  0491                     	;# 
  1756  0492                     	;# 
  1757  0492                     	;# 
  1758  0493                     	;# 
  1759  0494                     	;# 
  1760  0495                     	;# 
  1761  0495                     	;# 
  1762  0496                     	;# 
  1763  0497                     	;# 
  1764  0498                     	;# 
  1765  0499                     	;# 
  1766  049A                     	;# 
  1767  049B                     	;# 
  1768  049C                     	;# 
  1769  049D                     	;# 
  1770  058C                     	;# 
  1771  058C                     	;# 
  1772  058D                     	;# 
  1773  058E                     	;# 
  1774  058F                     	;# 
  1775  058F                     	;# 
  1776  0590                     	;# 
  1777  0591                     	;# 
  1778  0592                     	;# 
  1779  0593                     	;# 
  1780  059C                     	;# 
  1781  059C                     	;# 
  1782  059D                     	;# 
  1783  059D                     	;# 
  1784  059E                     	;# 
  1785  059F                     	;# 
  1786  060C                     	;# 
  1787  060C                     	;# 
  1788  060D                     	;# 
  1789  060D                     	;# 
  1790  060E                     	;# 
  1791  060F                     	;# 
  1792  0610                     	;# 
  1793  0611                     	;# 
  1794  0612                     	;# 
  1795  0613                     	;# 
  1796  0614                     	;# 
  1797  0616                     	;# 
  1798  0616                     	;# 
  1799  0617                     	;# 
  1800  0617                     	;# 
  1801  0618                     	;# 
  1802  0619                     	;# 
  1803  061A                     	;# 
  1804  061B                     	;# 
  1805  061C                     	;# 
  1806  061D                     	;# 
  1807  061E                     	;# 
  1808  070C                     	;# 
  1809  070D                     	;# 
  1810  070E                     	;# 
  1811  070F                     	;# 
  1812  0710                     	;# 
  1813  0711                     	;# 
  1814  0712                     	;# 
  1815  0713                     	;# 
  1816  0714                     	;# 
  1817  0716                     	;# 
  1818  0717                     	;# 
  1819  0718                     	;# 
  1820  0719                     	;# 
  1821  071A                     	;# 
  1822  071B                     	;# 
  1823  071C                     	;# 
  1824  071D                     	;# 
  1825  071E                     	;# 
  1826  0796                     	;# 
  1827  0797                     	;# 
  1828  0798                     	;# 
  1829  0799                     	;# 
  1830  079A                     	;# 
  1831  079B                     	;# 
  1832  079C                     	;# 
  1833  079D                     	;# 
  1834  080C                     	;# 
  1835  080D                     	;# 
  1836  080E                     	;# 
  1837  080F                     	;# 
  1838  0810                     	;# 
  1839  0811                     	;# 
  1840  0812                     	;# 
  1841  0813                     	;# 
  1842  0814                     	;# 
  1843  081A                     	;# 
  1844  081A                     	;# 
  1845  081B                     	;# 
  1846  081C                     	;# 
  1847  081C                     	;# 
  1848  081D                     	;# 
  1849  081E                     	;# 
  1850  081F                     	;# 
  1851  088C                     	;# 
  1852  088D                     	;# 
  1853  088E                     	;# 
  1854  088F                     	;# 
  1855  0890                     	;# 
  1856  0891                     	;# 
  1857  0892                     	;# 
  1858  0893                     	;# 
  1859  0895                     	;# 
  1860  0896                     	;# 
  1861  0897                     	;# 
  1862  0898                     	;# 
  1863  0899                     	;# 
  1864  089A                     	;# 
  1865  089B                     	;# 
  1866  090C                     	;# 
  1867  090E                     	;# 
  1868  090F                     	;# 
  1869  091F                     	;# 
  1870  098F                     	;# 
  1871  098F                     	;# 
  1872  0990                     	;# 
  1873  0991                     	;# 
  1874  0992                     	;# 
  1875  0993                     	;# 
  1876  0994                     	;# 
  1877  0995                     	;# 
  1878  0996                     	;# 
  1879  0997                     	;# 
  1880  1E0F                     	;# 
  1881  1E10                     	;# 
  1882  1E11                     	;# 
  1883  1E12                     	;# 
  1884  1E13                     	;# 
  1885  1E14                     	;# 
  1886  1E15                     	;# 
  1887  1E16                     	;# 
  1888  1E17                     	;# 
  1889  1E18                     	;# 
  1890  1E19                     	;# 
  1891  1E1A                     	;# 
  1892  1E1B                     	;# 
  1893  1E1C                     	;# 
  1894  1E1D                     	;# 
  1895  1E1E                     	;# 
  1896  1E1F                     	;# 
  1897  1E20                     	;# 
  1898  1E21                     	;# 
  1899  1E22                     	;# 
  1900  1E23                     	;# 
  1901  1E24                     	;# 
  1902  1E25                     	;# 
  1903  1E26                     	;# 
  1904  1E27                     	;# 
  1905  1E28                     	;# 
  1906  1E29                     	;# 
  1907  1E2A                     	;# 
  1908  1E2B                     	;# 
  1909  1E2C                     	;# 
  1910  1E2D                     	;# 
  1911  1E2E                     	;# 
  1912  1E2F                     	;# 
  1913  1E30                     	;# 
  1914  1E31                     	;# 
  1915  1E32                     	;# 
  1916  1E33                     	;# 
  1917  1E34                     	;# 
  1918  1E35                     	;# 
  1919  1E36                     	;# 
  1920  1E37                     	;# 
  1921  1E8F                     	;# 
  1922  1E90                     	;# 
  1923  1E91                     	;# 
  1924  1E92                     	;# 
  1925  1E93                     	;# 
  1926  1E94                     	;# 
  1927  1E95                     	;# 
  1928  1E96                     	;# 
  1929  1E97                     	;# 
  1930  1E9C                     	;# 
  1931  1E9D                     	;# 
  1932  1E9E                     	;# 
  1933  1EA1                     	;# 
  1934  1EA2                     	;# 
  1935  1EA3                     	;# 
  1936  1EA4                     	;# 
  1937  1EA9                     	;# 
  1938  1EAA                     	;# 
  1939  1EB1                     	;# 
  1940  1EB2                     	;# 
  1941  1EB8                     	;# 
  1942  1EB9                     	;# 
  1943  1EBA                     	;# 
  1944  1EBB                     	;# 
  1945  1EBC                     	;# 
  1946  1EBD                     	;# 
  1947  1EBE                     	;# 
  1948  1EC3                     	;# 
  1949  1EC5                     	;# 
  1950  1EC6                     	;# 
  1951  1EC7                     	;# 
  1952  1EC8                     	;# 
  1953  1EC9                     	;# 
  1954  1ECA                     	;# 
  1955  1ECB                     	;# 
  1956  1ECB                     	;# 
  1957  1ECB                     	;# 
  1958  1ECC                     	;# 
  1959  1ECC                     	;# 
  1960  1ECC                     	;# 
  1961  1F10                     	;# 
  1962  1F11                     	;# 
  1963  1F12                     	;# 
  1964  1F14                     	;# 
  1965  1F15                     	;# 
  1966  1F1C                     	;# 
  1967  1F1D                     	;# 
  1968  1F1E                     	;# 
  1969  1F1F                     	;# 
  1970  1F20                     	;# 
  1971  1F21                     	;# 
  1972  1F22                     	;# 
  1973  1F23                     	;# 
  1974  1F24                     	;# 
  1975  1F25                     	;# 
  1976  1F26                     	;# 
  1977  1F27                     	;# 
  1978  1F38                     	;# 
  1979  1F39                     	;# 
  1980  1F3A                     	;# 
  1981  1F3B                     	;# 
  1982  1F3C                     	;# 
  1983  1F3D                     	;# 
  1984  1F3E                     	;# 
  1985  1F3F                     	;# 
  1986  1F43                     	;# 
  1987  1F44                     	;# 
  1988  1F45                     	;# 
  1989  1F46                     	;# 
  1990  1F47                     	;# 
  1991  1F48                     	;# 
  1992  1F49                     	;# 
  1993  1F4A                     	;# 
  1994  1F4E                     	;# 
  1995  1F4F                     	;# 
  1996  1F50                     	;# 
  1997  1F51                     	;# 
  1998  1F52                     	;# 
  1999  1F53                     	;# 
  2000  1F54                     	;# 
  2001  1F55                     	;# 
  2002  1FE4                     	;# 
  2003  1FE5                     	;# 
  2004  1FE6                     	;# 
  2005  1FE7                     	;# 
  2006  1FE8                     	;# 
  2007  1FE8                     	;# 
  2008  1FE9                     	;# 
  2009  1FEA                     	;# 
  2010  1FEB                     	;# 
  2011  1FED                     	;# 
  2012  1FEE                     	;# 
  2013  1FEF                     	;# 
  2014  0000                     	;# 
  2015  0001                     	;# 
  2016  0002                     	;# 
  2017  0003                     	;# 
  2018  0004                     	;# 
  2019  0005                     	;# 
  2020  0006                     	;# 
  2021  0007                     	;# 
  2022  0008                     	;# 
  2023  0009                     	;# 
  2024  000A                     	;# 
  2025  000B                     	;# 
  2026  000C                     	;# 
  2027  000D                     	;# 
  2028  000E                     	;# 
  2029  0012                     	;# 
  2030  0013                     	;# 
  2031  0014                     	;# 
  2032  0018                     	;# 
  2033  0019                     	;# 
  2034  001A                     	;# 
  2035  008C                     	;# 
  2036  008C                     	;# 
  2037  008D                     	;# 
  2038  008E                     	;# 
  2039  008E                     	;# 
  2040  008F                     	;# 
  2041  0090                     	;# 
  2042  0090                     	;# 
  2043  0091                     	;# 
  2044  0092                     	;# 
  2045  0092                     	;# 
  2046  0093                     	;# 
  2047  0094                     	;# 
  2048  0094                     	;# 
  2049  0095                     	;# 
  2050  0096                     	;# 
  2051  0096                     	;# 
  2052  0097                     	;# 
  2053  0098                     	;# 
  2054  0099                     	;# 
  2055  009A                     	;# 
  2056  009B                     	;# 
  2057  009B                     	;# 
  2058  009C                     	;# 
  2059  009D                     	;# 
  2060  009D                     	;# 
  2061  009E                     	;# 
  2062  009F                     	;# 
  2063  010C                     	;# 
  2064  010C                     	;# 
  2065  010D                     	;# 
  2066  010E                     	;# 
  2067  010F                     	;# 
  2068  010F                     	;# 
  2069  0110                     	;# 
  2070  0111                     	;# 
  2071  0112                     	;# 
  2072  0113                     	;# 
  2073  0114                     	;# 
  2074  0115                     	;# 
  2075  0116                     	;# 
  2076  0117                     	;# 
  2077  0118                     	;# 
  2078  0119                     	;# 
  2079  0119                     	;# 
  2080  0119                     	;# 
  2081  011A                     	;# 
  2082  011A                     	;# 
  2083  011A                     	;# 
  2084  011B                     	;# 
  2085  011B                     	;# 
  2086  011B                     	;# 
  2087  011B                     	;# 
  2088  011B                     	;# 
  2089  011C                     	;# 
  2090  011C                     	;# 
  2091  011C                     	;# 
  2092  011D                     	;# 
  2093  011D                     	;# 
  2094  011D                     	;# 
  2095  011E                     	;# 
  2096  011E                     	;# 
  2097  011E                     	;# 
  2098  011F                     	;# 
  2099  011F                     	;# 
  2100  011F                     	;# 
  2101  011F                     	;# 
  2102  011F                     	;# 
  2103  018C                     	;# 
  2104  018D                     	;# 
  2105  018E                     	;# 
  2106  018F                     	;# 
  2107  0190                     	;# 
  2108  0191                     	;# 
  2109  0192                     	;# 
  2110  0196                     	;# 
  2111  0197                     	;# 
  2112  0198                     	;# 
  2113  0199                     	;# 
  2114  019A                     	;# 
  2115  019B                     	;# 
  2116  019C                     	;# 
  2117  020C                     	;# 
  2118  020D                     	;# 
  2119  020E                     	;# 
  2120  020E                     	;# 
  2121  020F                     	;# 
  2122  020F                     	;# 
  2123  0210                     	;# 
  2124  0210                     	;# 
  2125  0211                     	;# 
  2126  0211                     	;# 
  2127  0212                     	;# 
  2128  0213                     	;# 
  2129  0214                     	;# 
  2130  0214                     	;# 
  2131  0215                     	;# 
  2132  0215                     	;# 
  2133  0216                     	;# 
  2134  0216                     	;# 
  2135  0217                     	;# 
  2136  0217                     	;# 
  2137  0218                     	;# 
  2138  0219                     	;# 
  2139  021A                     	;# 
  2140  021A                     	;# 
  2141  021B                     	;# 
  2142  021B                     	;# 
  2143  021C                     	;# 
  2144  021C                     	;# 
  2145  021D                     	;# 
  2146  021D                     	;# 
  2147  021E                     	;# 
  2148  021F                     	;# 
  2149  028C                     	;# 
  2150  028C                     	;# 
  2151  028D                     	;# 
  2152  028D                     	;# 
  2153  028E                     	;# 
  2154  028F                     	;# 
  2155  0290                     	;# 
  2156  0291                     	;# 
  2157  0292                     	;# 
  2158  0292                     	;# 
  2159  0293                     	;# 
  2160  0293                     	;# 
  2161  0294                     	;# 
  2162  0295                     	;# 
  2163  0296                     	;# 
  2164  0297                     	;# 
  2165  0298                     	;# 
  2166  0298                     	;# 
  2167  0299                     	;# 
  2168  0299                     	;# 
  2169  029A                     	;# 
  2170  029B                     	;# 
  2171  029C                     	;# 
  2172  029D                     	;# 
  2173  029F                     	;# 
  2174  030C                     	;# 
  2175  030C                     	;# 
  2176  030D                     	;# 
  2177  030E                     	;# 
  2178  030F                     	;# 
  2179  0310                     	;# 
  2180  0310                     	;# 
  2181  0311                     	;# 
  2182  0312                     	;# 
  2183  0313                     	;# 
  2184  0314                     	;# 
  2185  0314                     	;# 
  2186  0315                     	;# 
  2187  0316                     	;# 
  2188  0317                     	;# 
  2189  0318                     	;# 
  2190  0318                     	;# 
  2191  0319                     	;# 
  2192  031A                     	;# 
  2193  031B                     	;# 
  2194  038C                     	;# 
  2195  038C                     	;# 
  2196  038D                     	;# 
  2197  038E                     	;# 
  2198  0390                     	;# 
  2199  0390                     	;# 
  2200  0391                     	;# 
  2201  0392                     	;# 
  2202  048C                     	;# 
  2203  048C                     	;# 
  2204  048D                     	;# 
  2205  048E                     	;# 
  2206  048F                     	;# 
  2207  048F                     	;# 
  2208  0490                     	;# 
  2209  0491                     	;# 
  2210  0492                     	;# 
  2211  0492                     	;# 
  2212  0493                     	;# 
  2213  0494                     	;# 
  2214  0495                     	;# 
  2215  0495                     	;# 
  2216  0496                     	;# 
  2217  0497                     	;# 
  2218  0498                     	;# 
  2219  0499                     	;# 
  2220  049A                     	;# 
  2221  049B                     	;# 
  2222  049C                     	;# 
  2223  049D                     	;# 
  2224  058C                     	;# 
  2225  058C                     	;# 
  2226  058D                     	;# 
  2227  058E                     	;# 
  2228  058F                     	;# 
  2229  058F                     	;# 
  2230  0590                     	;# 
  2231  0591                     	;# 
  2232  0592                     	;# 
  2233  0593                     	;# 
  2234  059C                     	;# 
  2235  059C                     	;# 
  2236  059D                     	;# 
  2237  059D                     	;# 
  2238  059E                     	;# 
  2239  059F                     	;# 
  2240  060C                     	;# 
  2241  060C                     	;# 
  2242  060D                     	;# 
  2243  060D                     	;# 
  2244  060E                     	;# 
  2245  060F                     	;# 
  2246  0610                     	;# 
  2247  0611                     	;# 
  2248  0612                     	;# 
  2249  0613                     	;# 
  2250  0614                     	;# 
  2251  0616                     	;# 
  2252  0616                     	;# 
  2253  0617                     	;# 
  2254  0617                     	;# 
  2255  0618                     	;# 
  2256  0619                     	;# 
  2257  061A                     	;# 
  2258  061B                     	;# 
  2259  061C                     	;# 
  2260  061D                     	;# 
  2261  061E                     	;# 
  2262  070C                     	;# 
  2263  070D                     	;# 
  2264  070E                     	;# 
  2265  070F                     	;# 
  2266  0710                     	;# 
  2267  0711                     	;# 
  2268  0712                     	;# 
  2269  0713                     	;# 
  2270  0714                     	;# 
  2271  0716                     	;# 
  2272  0717                     	;# 
  2273  0718                     	;# 
  2274  0719                     	;# 
  2275  071A                     	;# 
  2276  071B                     	;# 
  2277  071C                     	;# 
  2278  071D                     	;# 
  2279  071E                     	;# 
  2280  0796                     	;# 
  2281  0797                     	;# 
  2282  0798                     	;# 
  2283  0799                     	;# 
  2284  079A                     	;# 
  2285  079B                     	;# 
  2286  079C                     	;# 
  2287  079D                     	;# 
  2288  080C                     	;# 
  2289  080D                     	;# 
  2290  080E                     	;# 
  2291  080F                     	;# 
  2292  0810                     	;# 
  2293  0811                     	;# 
  2294  0812                     	;# 
  2295  0813                     	;# 
  2296  0814                     	;# 
  2297  081A                     	;# 
  2298  081A                     	;# 
  2299  081B                     	;# 
  2300  081C                     	;# 
  2301  081C                     	;# 
  2302  081D                     	;# 
  2303  081E                     	;# 
  2304  081F                     	;# 
  2305  088C                     	;# 
  2306  088D                     	;# 
  2307  088E                     	;# 
  2308  088F                     	;# 
  2309  0890                     	;# 
  2310  0891                     	;# 
  2311  0892                     	;# 
  2312  0893                     	;# 
  2313  0895                     	;# 
  2314  0896                     	;# 
  2315  0897                     	;# 
  2316  0898                     	;# 
  2317  0899                     	;# 
  2318  089A                     	;# 
  2319  089B                     	;# 
  2320  090C                     	;# 
  2321  090E                     	;# 
  2322  090F                     	;# 
  2323  091F                     	;# 
  2324  098F                     	;# 
  2325  098F                     	;# 
  2326  0990                     	;# 
  2327  0991                     	;# 
  2328  0992                     	;# 
  2329  0993                     	;# 
  2330  0994                     	;# 
  2331  0995                     	;# 
  2332  0996                     	;# 
  2333  0997                     	;# 
  2334  1E0F                     	;# 
  2335  1E10                     	;# 
  2336  1E11                     	;# 
  2337  1E12                     	;# 
  2338  1E13                     	;# 
  2339  1E14                     	;# 
  2340  1E15                     	;# 
  2341  1E16                     	;# 
  2342  1E17                     	;# 
  2343  1E18                     	;# 
  2344  1E19                     	;# 
  2345  1E1A                     	;# 
  2346  1E1B                     	;# 
  2347  1E1C                     	;# 
  2348  1E1D                     	;# 
  2349  1E1E                     	;# 
  2350  1E1F                     	;# 
  2351  1E20                     	;# 
  2352  1E21                     	;# 
  2353  1E22                     	;# 
  2354  1E23                     	;# 
  2355  1E24                     	;# 
  2356  1E25                     	;# 
  2357  1E26                     	;# 
  2358  1E27                     	;# 
  2359  1E28                     	;# 
  2360  1E29                     	;# 
  2361  1E2A                     	;# 
  2362  1E2B                     	;# 
  2363  1E2C                     	;# 
  2364  1E2D                     	;# 
  2365  1E2E                     	;# 
  2366  1E2F                     	;# 
  2367  1E30                     	;# 
  2368  1E31                     	;# 
  2369  1E32                     	;# 
  2370  1E33                     	;# 
  2371  1E34                     	;# 
  2372  1E35                     	;# 
  2373  1E36                     	;# 
  2374  1E37                     	;# 
  2375  1E8F                     	;# 
  2376  1E90                     	;# 
  2377  1E91                     	;# 
  2378  1E92                     	;# 
  2379  1E93                     	;# 
  2380  1E94                     	;# 
  2381  1E95                     	;# 
  2382  1E96                     	;# 
  2383  1E97                     	;# 
  2384  1E9C                     	;# 
  2385  1E9D                     	;# 
  2386  1E9E                     	;# 
  2387  1EA1                     	;# 
  2388  1EA2                     	;# 
  2389  1EA3                     	;# 
  2390  1EA4                     	;# 
  2391  1EA9                     	;# 
  2392  1EAA                     	;# 
  2393  1EB1                     	;# 
  2394  1EB2                     	;# 
  2395  1EB8                     	;# 
  2396  1EB9                     	;# 
  2397  1EBA                     	;# 
  2398  1EBB                     	;# 
  2399  1EBC                     	;# 
  2400  1EBD                     	;# 
  2401  1EBE                     	;# 
  2402  1EC3                     	;# 
  2403  1EC5                     	;# 
  2404  1EC6                     	;# 
  2405  1EC7                     	;# 
  2406  1EC8                     	;# 
  2407  1EC9                     	;# 
  2408  1ECA                     	;# 
  2409  1ECB                     	;# 
  2410  1ECB                     	;# 
  2411  1ECB                     	;# 
  2412  1ECC                     	;# 
  2413  1ECC                     	;# 
  2414  1ECC                     	;# 
  2415  1F10                     	;# 
  2416  1F11                     	;# 
  2417  1F12                     	;# 
  2418  1F14                     	;# 
  2419  1F15                     	;# 
  2420  1F1C                     	;# 
  2421  1F1D                     	;# 
  2422  1F1E                     	;# 
  2423  1F1F                     	;# 
  2424  1F20                     	;# 
  2425  1F21                     	;# 
  2426  1F22                     	;# 
  2427  1F23                     	;# 
  2428  1F24                     	;# 
  2429  1F25                     	;# 
  2430  1F26                     	;# 
  2431  1F27                     	;# 
  2432  1F38                     	;# 
  2433  1F39                     	;# 
  2434  1F3A                     	;# 
  2435  1F3B                     	;# 
  2436  1F3C                     	;# 
  2437  1F3D                     	;# 
  2438  1F3E                     	;# 
  2439  1F3F                     	;# 
  2440  1F43                     	;# 
  2441  1F44                     	;# 
  2442  1F45                     	;# 
  2443  1F46                     	;# 
  2444  1F47                     	;# 
  2445  1F48                     	;# 
  2446  1F49                     	;# 
  2447  1F4A                     	;# 
  2448  1F4E                     	;# 
  2449  1F4F                     	;# 
  2450  1F50                     	;# 
  2451  1F51                     	;# 
  2452  1F52                     	;# 
  2453  1F53                     	;# 
  2454  1F54                     	;# 
  2455  1F55                     	;# 
  2456  1FE4                     	;# 
  2457  1FE5                     	;# 
  2458  1FE6                     	;# 
  2459  1FE7                     	;# 
  2460  1FE8                     	;# 
  2461  1FE8                     	;# 
  2462  1FE9                     	;# 
  2463  1FEA                     	;# 
  2464  1FEB                     	;# 
  2465  1FED                     	;# 
  2466  1FEE                     	;# 
  2467  1FEF                     	;# 
  2468  0000                     	;# 
  2469  0001                     	;# 
  2470  0002                     	;# 
  2471  0003                     	;# 
  2472  0004                     	;# 
  2473  0005                     	;# 
  2474  0006                     	;# 
  2475  0007                     	;# 
  2476  0008                     	;# 
  2477  0009                     	;# 
  2478  000A                     	;# 
  2479  000B                     	;# 
  2480  000C                     	;# 
  2481  000D                     	;# 
  2482  000E                     	;# 
  2483  0012                     	;# 
  2484  0013                     	;# 
  2485  0014                     	;# 
  2486  0018                     	;# 
  2487  0019                     	;# 
  2488  001A                     	;# 
  2489  008C                     	;# 
  2490  008C                     	;# 
  2491  008D                     	;# 
  2492  008E                     	;# 
  2493  008E                     	;# 
  2494  008F                     	;# 
  2495  0090                     	;# 
  2496  0090                     	;# 
  2497  0091                     	;# 
  2498  0092                     	;# 
  2499  0092                     	;# 
  2500  0093                     	;# 
  2501  0094                     	;# 
  2502  0094                     	;# 
  2503  0095                     	;# 
  2504  0096                     	;# 
  2505  0096                     	;# 
  2506  0097                     	;# 
  2507  0098                     	;# 
  2508  0099                     	;# 
  2509  009A                     	;# 
  2510  009B                     	;# 
  2511  009B                     	;# 
  2512  009C                     	;# 
  2513  009D                     	;# 
  2514  009D                     	;# 
  2515  009E                     	;# 
  2516  009F                     	;# 
  2517  010C                     	;# 
  2518  010C                     	;# 
  2519  010D                     	;# 
  2520  010E                     	;# 
  2521  010F                     	;# 
  2522  010F                     	;# 
  2523  0110                     	;# 
  2524  0111                     	;# 
  2525  0112                     	;# 
  2526  0113                     	;# 
  2527  0114                     	;# 
  2528  0115                     	;# 
  2529  0116                     	;# 
  2530  0117                     	;# 
  2531  0118                     	;# 
  2532  0119                     	;# 
  2533  0119                     	;# 
  2534  0119                     	;# 
  2535  011A                     	;# 
  2536  011A                     	;# 
  2537  011A                     	;# 
  2538  011B                     	;# 
  2539  011B                     	;# 
  2540  011B                     	;# 
  2541  011B                     	;# 
  2542  011B                     	;# 
  2543  011C                     	;# 
  2544  011C                     	;# 
  2545  011C                     	;# 
  2546  011D                     	;# 
  2547  011D                     	;# 
  2548  011D                     	;# 
  2549  011E                     	;# 
  2550  011E                     	;# 
  2551  011E                     	;# 
  2552  011F                     	;# 
  2553  011F                     	;# 
  2554  011F                     	;# 
  2555  011F                     	;# 
  2556  011F                     	;# 
  2557  018C                     	;# 
  2558  018D                     	;# 
  2559  018E                     	;# 
  2560  018F                     	;# 
  2561  0190                     	;# 
  2562  0191                     	;# 
  2563  0192                     	;# 
  2564  0196                     	;# 
  2565  0197                     	;# 
  2566  0198                     	;# 
  2567  0199                     	;# 
  2568  019A                     	;# 
  2569  019B                     	;# 
  2570  019C                     	;# 
  2571  020C                     	;# 
  2572  020D                     	;# 
  2573  020E                     	;# 
  2574  020E                     	;# 
  2575  020F                     	;# 
  2576  020F                     	;# 
  2577  0210                     	;# 
  2578  0210                     	;# 
  2579  0211                     	;# 
  2580  0211                     	;# 
  2581  0212                     	;# 
  2582  0213                     	;# 
  2583  0214                     	;# 
  2584  0214                     	;# 
  2585  0215                     	;# 
  2586  0215                     	;# 
  2587  0216                     	;# 
  2588  0216                     	;# 
  2589  0217                     	;# 
  2590  0217                     	;# 
  2591  0218                     	;# 
  2592  0219                     	;# 
  2593  021A                     	;# 
  2594  021A                     	;# 
  2595  021B                     	;# 
  2596  021B                     	;# 
  2597  021C                     	;# 
  2598  021C                     	;# 
  2599  021D                     	;# 
  2600  021D                     	;# 
  2601  021E                     	;# 
  2602  021F                     	;# 
  2603  028C                     	;# 
  2604  028C                     	;# 
  2605  028D                     	;# 
  2606  028D                     	;# 
  2607  028E                     	;# 
  2608  028F                     	;# 
  2609  0290                     	;# 
  2610  0291                     	;# 
  2611  0292                     	;# 
  2612  0292                     	;# 
  2613  0293                     	;# 
  2614  0293                     	;# 
  2615  0294                     	;# 
  2616  0295                     	;# 
  2617  0296                     	;# 
  2618  0297                     	;# 
  2619  0298                     	;# 
  2620  0298                     	;# 
  2621  0299                     	;# 
  2622  0299                     	;# 
  2623  029A                     	;# 
  2624  029B                     	;# 
  2625  029C                     	;# 
  2626  029D                     	;# 
  2627  029F                     	;# 
  2628  030C                     	;# 
  2629  030C                     	;# 
  2630  030D                     	;# 
  2631  030E                     	;# 
  2632  030F                     	;# 
  2633  0310                     	;# 
  2634  0310                     	;# 
  2635  0311                     	;# 
  2636  0312                     	;# 
  2637  0313                     	;# 
  2638  0314                     	;# 
  2639  0314                     	;# 
  2640  0315                     	;# 
  2641  0316                     	;# 
  2642  0317                     	;# 
  2643  0318                     	;# 
  2644  0318                     	;# 
  2645  0319                     	;# 
  2646  031A                     	;# 
  2647  031B                     	;# 
  2648  038C                     	;# 
  2649  038C                     	;# 
  2650  038D                     	;# 
  2651  038E                     	;# 
  2652  0390                     	;# 
  2653  0390                     	;# 
  2654  0391                     	;# 
  2655  0392                     	;# 
  2656  048C                     	;# 
  2657  048C                     	;# 
  2658  048D                     	;# 
  2659  048E                     	;# 
  2660  048F                     	;# 
  2661  048F                     	;# 
  2662  0490                     	;# 
  2663  0491                     	;# 
  2664  0492                     	;# 
  2665  0492                     	;# 
  2666  0493                     	;# 
  2667  0494                     	;# 
  2668  0495                     	;# 
  2669  0495                     	;# 
  2670  0496                     	;# 
  2671  0497                     	;# 
  2672  0498                     	;# 
  2673  0499                     	;# 
  2674  049A                     	;# 
  2675  049B                     	;# 
  2676  049C                     	;# 
  2677  049D                     	;# 
  2678  058C                     	;# 
  2679  058C                     	;# 
  2680  058D                     	;# 
  2681  058E                     	;# 
  2682  058F                     	;# 
  2683  058F                     	;# 
  2684  0590                     	;# 
  2685  0591                     	;# 
  2686  0592                     	;# 
  2687  0593                     	;# 
  2688  059C                     	;# 
  2689  059C                     	;# 
  2690  059D                     	;# 
  2691  059D                     	;# 
  2692  059E                     	;# 
  2693  059F                     	;# 
  2694  060C                     	;# 
  2695  060C                     	;# 
  2696  060D                     	;# 
  2697  060D                     	;# 
  2698  060E                     	;# 
  2699  060F                     	;# 
  2700  0610                     	;# 
  2701  0611                     	;# 
  2702  0612                     	;# 
  2703  0613                     	;# 
  2704  0614                     	;# 
  2705  0616                     	;# 
  2706  0616                     	;# 
  2707  0617                     	;# 
  2708  0617                     	;# 
  2709  0618                     	;# 
  2710  0619                     	;# 
  2711  061A                     	;# 
  2712  061B                     	;# 
  2713  061C                     	;# 
  2714  061D                     	;# 
  2715  061E                     	;# 
  2716  070C                     	;# 
  2717  070D                     	;# 
  2718  070E                     	;# 
  2719  070F                     	;# 
  2720  0710                     	;# 
  2721  0711                     	;# 
  2722  0712                     	;# 
  2723  0713                     	;# 
  2724  0714                     	;# 
  2725  0716                     	;# 
  2726  0717                     	;# 
  2727  0718                     	;# 
  2728  0719                     	;# 
  2729  071A                     	;# 
  2730  071B                     	;# 
  2731  071C                     	;# 
  2732  071D                     	;# 
  2733  071E                     	;# 
  2734  0796                     	;# 
  2735  0797                     	;# 
  2736  0798                     	;# 
  2737  0799                     	;# 
  2738  079A                     	;# 
  2739  079B                     	;# 
  2740  079C                     	;# 
  2741  079D                     	;# 
  2742  080C                     	;# 
  2743  080D                     	;# 
  2744  080E                     	;# 
  2745  080F                     	;# 
  2746  0810                     	;# 
  2747  0811                     	;# 
  2748  0812                     	;# 
  2749  0813                     	;# 
  2750  0814                     	;# 
  2751  081A                     	;# 
  2752  081A                     	;# 
  2753  081B                     	;# 
  2754  081C                     	;# 
  2755  081C                     	;# 
  2756  081D                     	;# 
  2757  081E                     	;# 
  2758  081F                     	;# 
  2759  088C                     	;# 
  2760  088D                     	;# 
  2761  088E                     	;# 
  2762  088F                     	;# 
  2763  0890                     	;# 
  2764  0891                     	;# 
  2765  0892                     	;# 
  2766  0893                     	;# 
  2767  0895                     	;# 
  2768  0896                     	;# 
  2769  0897                     	;# 
  2770  0898                     	;# 
  2771  0899                     	;# 
  2772  089A                     	;# 
  2773  089B                     	;# 
  2774  090C                     	;# 
  2775  090E                     	;# 
  2776  090F                     	;# 
  2777  091F                     	;# 
  2778  098F                     	;# 
  2779  098F                     	;# 
  2780  0990                     	;# 
  2781  0991                     	;# 
  2782  0992                     	;# 
  2783  0993                     	;# 
  2784  0994                     	;# 
  2785  0995                     	;# 
  2786  0996                     	;# 
  2787  0997                     	;# 
  2788  1E0F                     	;# 
  2789  1E10                     	;# 
  2790  1E11                     	;# 
  2791  1E12                     	;# 
  2792  1E13                     	;# 
  2793  1E14                     	;# 
  2794  1E15                     	;# 
  2795  1E16                     	;# 
  2796  1E17                     	;# 
  2797  1E18                     	;# 
  2798  1E19                     	;# 
  2799  1E1A                     	;# 
  2800  1E1B                     	;# 
  2801  1E1C                     	;# 
  2802  1E1D                     	;# 
  2803  1E1E                     	;# 
  2804  1E1F                     	;# 
  2805  1E20                     	;# 
  2806  1E21                     	;# 
  2807  1E22                     	;# 
  2808  1E23                     	;# 
  2809  1E24                     	;# 
  2810  1E25                     	;# 
  2811  1E26                     	;# 
  2812  1E27                     	;# 
  2813  1E28                     	;# 
  2814  1E29                     	;# 
  2815  1E2A                     	;# 
  2816  1E2B                     	;# 
  2817  1E2C                     	;# 
  2818  1E2D                     	;# 
  2819  1E2E                     	;# 
  2820  1E2F                     	;# 
  2821  1E30                     	;# 
  2822  1E31                     	;# 
  2823  1E32                     	;# 
  2824  1E33                     	;# 
  2825  1E34                     	;# 
  2826  1E35                     	;# 
  2827  1E36                     	;# 
  2828  1E37                     	;# 
  2829  1E8F                     	;# 
  2830  1E90                     	;# 
  2831  1E91                     	;# 
  2832  1E92                     	;# 
  2833  1E93                     	;# 
  2834  1E94                     	;# 
  2835  1E95                     	;# 
  2836  1E96                     	;# 
  2837  1E97                     	;# 
  2838  1E9C                     	;# 
  2839  1E9D                     	;# 
  2840  1E9E                     	;# 
  2841  1EA1                     	;# 
  2842  1EA2                     	;# 
  2843  1EA3                     	;# 
  2844  1EA4                     	;# 
  2845  1EA9                     	;# 
  2846  1EAA                     	;# 
  2847  1EB1                     	;# 
  2848  1EB2                     	;# 
  2849  1EB8                     	;# 
  2850  1EB9                     	;# 
  2851  1EBA                     	;# 
  2852  1EBB                     	;# 
  2853  1EBC                     	;# 
  2854  1EBD                     	;# 
  2855  1EBE                     	;# 
  2856  1EC3                     	;# 
  2857  1EC5                     	;# 
  2858  1EC6                     	;# 
  2859  1EC7                     	;# 
  2860  1EC8                     	;# 
  2861  1EC9                     	;# 
  2862  1ECA                     	;# 
  2863  1ECB                     	;# 
  2864  1ECB                     	;# 
  2865  1ECB                     	;# 
  2866  1ECC                     	;# 
  2867  1ECC                     	;# 
  2868  1ECC                     	;# 
  2869  1F10                     	;# 
  2870  1F11                     	;# 
  2871  1F12                     	;# 
  2872  1F14                     	;# 
  2873  1F15                     	;# 
  2874  1F1C                     	;# 
  2875  1F1D                     	;# 
  2876  1F1E                     	;# 
  2877  1F1F                     	;# 
  2878  1F20                     	;# 
  2879  1F21                     	;# 
  2880  1F22                     	;# 
  2881  1F23                     	;# 
  2882  1F24                     	;# 
  2883  1F25                     	;# 
  2884  1F26                     	;# 
  2885  1F27                     	;# 
  2886  1F38                     	;# 
  2887  1F39                     	;# 
  2888  1F3A                     	;# 
  2889  1F3B                     	;# 
  2890  1F3C                     	;# 
  2891  1F3D                     	;# 
  2892  1F3E                     	;# 
  2893  1F3F                     	;# 
  2894  1F43                     	;# 
  2895  1F44                     	;# 
  2896  1F45                     	;# 
  2897  1F46                     	;# 
  2898  1F47                     	;# 
  2899  1F48                     	;# 
  2900  1F49                     	;# 
  2901  1F4A                     	;# 
  2902  1F4E                     	;# 
  2903  1F4F                     	;# 
  2904  1F50                     	;# 
  2905  1F51                     	;# 
  2906  1F52                     	;# 
  2907  1F53                     	;# 
  2908  1F54                     	;# 
  2909  1F55                     	;# 
  2910  1FE4                     	;# 
  2911  1FE5                     	;# 
  2912  1FE6                     	;# 
  2913  1FE7                     	;# 
  2914  1FE8                     	;# 
  2915  1FE8                     	;# 
  2916  1FE9                     	;# 
  2917  1FEA                     	;# 
  2918  1FEB                     	;# 
  2919  1FED                     	;# 
  2920  1FEE                     	;# 
  2921  1FEF                     	;# 
  2922  0000                     	;# 
  2923  0001                     	;# 
  2924  0002                     	;# 
  2925  0003                     	;# 
  2926  0004                     	;# 
  2927  0005                     	;# 
  2928  0006                     	;# 
  2929  0007                     	;# 
  2930  0008                     	;# 
  2931  0009                     	;# 
  2932  000A                     	;# 
  2933  000B                     	;# 
  2934  000C                     	;# 
  2935  000D                     	;# 
  2936  000E                     	;# 
  2937  0012                     	;# 
  2938  0013                     	;# 
  2939  0014                     	;# 
  2940  0018                     	;# 
  2941  0019                     	;# 
  2942  001A                     	;# 
  2943  008C                     	;# 
  2944  008C                     	;# 
  2945  008D                     	;# 
  2946  008E                     	;# 
  2947  008E                     	;# 
  2948  008F                     	;# 
  2949  0090                     	;# 
  2950  0090                     	;# 
  2951  0091                     	;# 
  2952  0092                     	;# 
  2953  0092                     	;# 
  2954  0093                     	;# 
  2955  0094                     	;# 
  2956  0094                     	;# 
  2957  0095                     	;# 
  2958  0096                     	;# 
  2959  0096                     	;# 
  2960  0097                     	;# 
  2961  0098                     	;# 
  2962  0099                     	;# 
  2963  009A                     	;# 
  2964  009B                     	;# 
  2965  009B                     	;# 
  2966  009C                     	;# 
  2967  009D                     	;# 
  2968  009D                     	;# 
  2969  009E                     	;# 
  2970  009F                     	;# 
  2971  010C                     	;# 
  2972  010C                     	;# 
  2973  010D                     	;# 
  2974  010E                     	;# 
  2975  010F                     	;# 
  2976  010F                     	;# 
  2977  0110                     	;# 
  2978  0111                     	;# 
  2979  0112                     	;# 
  2980  0113                     	;# 
  2981  0114                     	;# 
  2982  0115                     	;# 
  2983  0116                     	;# 
  2984  0117                     	;# 
  2985  0118                     	;# 
  2986  0119                     	;# 
  2987  0119                     	;# 
  2988  0119                     	;# 
  2989  011A                     	;# 
  2990  011A                     	;# 
  2991  011A                     	;# 
  2992  011B                     	;# 
  2993  011B                     	;# 
  2994  011B                     	;# 
  2995  011B                     	;# 
  2996  011B                     	;# 
  2997  011C                     	;# 
  2998  011C                     	;# 
  2999  011C                     	;# 
  3000  011D                     	;# 
  3001  011D                     	;# 
  3002  011D                     	;# 
  3003  011E                     	;# 
  3004  011E                     	;# 
  3005  011E                     	;# 
  3006  011F                     	;# 
  3007  011F                     	;# 
  3008  011F                     	;# 
  3009  011F                     	;# 
  3010  011F                     	;# 
  3011  018C                     	;# 
  3012  018D                     	;# 
  3013  018E                     	;# 
  3014  018F                     	;# 
  3015  0190                     	;# 
  3016  0191                     	;# 
  3017  0192                     	;# 
  3018  0196                     	;# 
  3019  0197                     	;# 
  3020  0198                     	;# 
  3021  0199                     	;# 
  3022  019A                     	;# 
  3023  019B                     	;# 
  3024  019C                     	;# 
  3025  020C                     	;# 
  3026  020D                     	;# 
  3027  020E                     	;# 
  3028  020E                     	;# 
  3029  020F                     	;# 
  3030  020F                     	;# 
  3031  0210                     	;# 
  3032  0210                     	;# 
  3033  0211                     	;# 
  3034  0211                     	;# 
  3035  0212                     	;# 
  3036  0213                     	;# 
  3037  0214                     	;# 
  3038  0214                     	;# 
  3039  0215                     	;# 
  3040  0215                     	;# 
  3041  0216                     	;# 
  3042  0216                     	;# 
  3043  0217                     	;# 
  3044  0217                     	;# 
  3045  0218                     	;# 
  3046  0219                     	;# 
  3047  021A                     	;# 
  3048  021A                     	;# 
  3049  021B                     	;# 
  3050  021B                     	;# 
  3051  021C                     	;# 
  3052  021C                     	;# 
  3053  021D                     	;# 
  3054  021D                     	;# 
  3055  021E                     	;# 
  3056  021F                     	;# 
  3057  028C                     	;# 
  3058  028C                     	;# 
  3059  028D                     	;# 
  3060  028D                     	;# 
  3061  028E                     	;# 
  3062  028F                     	;# 
  3063  0290                     	;# 
  3064  0291                     	;# 
  3065  0292                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0293                     	;# 
  3069  0294                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  0298                     	;# 
  3075  0299                     	;# 
  3076  0299                     	;# 
  3077  029A                     	;# 
  3078  029B                     	;# 
  3079  029C                     	;# 
  3080  029D                     	;# 
  3081  029F                     	;# 
  3082  030C                     	;# 
  3083  030C                     	;# 
  3084  030D                     	;# 
  3085  030E                     	;# 
  3086  030F                     	;# 
  3087  0310                     	;# 
  3088  0310                     	;# 
  3089  0311                     	;# 
  3090  0312                     	;# 
  3091  0313                     	;# 
  3092  0314                     	;# 
  3093  0314                     	;# 
  3094  0315                     	;# 
  3095  0316                     	;# 
  3096  0317                     	;# 
  3097  0318                     	;# 
  3098  0318                     	;# 
  3099  0319                     	;# 
  3100  031A                     	;# 
  3101  031B                     	;# 
  3102  038C                     	;# 
  3103  038C                     	;# 
  3104  038D                     	;# 
  3105  038E                     	;# 
  3106  0390                     	;# 
  3107  0390                     	;# 
  3108  0391                     	;# 
  3109  0392                     	;# 
  3110  048C                     	;# 
  3111  048C                     	;# 
  3112  048D                     	;# 
  3113  048E                     	;# 
  3114  048F                     	;# 
  3115  048F                     	;# 
  3116  0490                     	;# 
  3117  0491                     	;# 
  3118  0492                     	;# 
  3119  0492                     	;# 
  3120  0493                     	;# 
  3121  0494                     	;# 
  3122  0495                     	;# 
  3123  0495                     	;# 
  3124  0496                     	;# 
  3125  0497                     	;# 
  3126  0498                     	;# 
  3127  0499                     	;# 
  3128  049A                     	;# 
  3129  049B                     	;# 
  3130  049C                     	;# 
  3131  049D                     	;# 
  3132  058C                     	;# 
  3133  058C                     	;# 
  3134  058D                     	;# 
  3135  058E                     	;# 
  3136  058F                     	;# 
  3137  058F                     	;# 
  3138  0590                     	;# 
  3139  0591                     	;# 
  3140  0592                     	;# 
  3141  0593                     	;# 
  3142  059C                     	;# 
  3143  059C                     	;# 
  3144  059D                     	;# 
  3145  059D                     	;# 
  3146  059E                     	;# 
  3147  059F                     	;# 
  3148  060C                     	;# 
  3149  060C                     	;# 
  3150  060D                     	;# 
  3151  060D                     	;# 
  3152  060E                     	;# 
  3153  060F                     	;# 
  3154  0610                     	;# 
  3155  0611                     	;# 
  3156  0612                     	;# 
  3157  0613                     	;# 
  3158  0614                     	;# 
  3159  0616                     	;# 
  3160  0616                     	;# 
  3161  0617                     	;# 
  3162  0617                     	;# 
  3163  0618                     	;# 
  3164  0619                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  061D                     	;# 
  3169  061E                     	;# 
  3170  070C                     	;# 
  3171  070D                     	;# 
  3172  070E                     	;# 
  3173  070F                     	;# 
  3174  0710                     	;# 
  3175  0711                     	;# 
  3176  0712                     	;# 
  3177  0713                     	;# 
  3178  0714                     	;# 
  3179  0716                     	;# 
  3180  0717                     	;# 
  3181  0718                     	;# 
  3182  0719                     	;# 
  3183  071A                     	;# 
  3184  071B                     	;# 
  3185  071C                     	;# 
  3186  071D                     	;# 
  3187  071E                     	;# 
  3188  0796                     	;# 
  3189  0797                     	;# 
  3190  0798                     	;# 
  3191  0799                     	;# 
  3192  079A                     	;# 
  3193  079B                     	;# 
  3194  079C                     	;# 
  3195  079D                     	;# 
  3196  080C                     	;# 
  3197  080D                     	;# 
  3198  080E                     	;# 
  3199  080F                     	;# 
  3200  0810                     	;# 
  3201  0811                     	;# 
  3202  0812                     	;# 
  3203  0813                     	;# 
  3204  0814                     	;# 
  3205  081A                     	;# 
  3206  081A                     	;# 
  3207  081B                     	;# 
  3208  081C                     	;# 
  3209  081C                     	;# 
  3210  081D                     	;# 
  3211  081E                     	;# 
  3212  081F                     	;# 
  3213  088C                     	;# 
  3214  088D                     	;# 
  3215  088E                     	;# 
  3216  088F                     	;# 
  3217  0890                     	;# 
  3218  0891                     	;# 
  3219  0892                     	;# 
  3220  0893                     	;# 
  3221  0895                     	;# 
  3222  0896                     	;# 
  3223  0897                     	;# 
  3224  0898                     	;# 
  3225  0899                     	;# 
  3226  089A                     	;# 
  3227  089B                     	;# 
  3228  090C                     	;# 
  3229  090E                     	;# 
  3230  090F                     	;# 
  3231  091F                     	;# 
  3232  098F                     	;# 
  3233  098F                     	;# 
  3234  0990                     	;# 
  3235  0991                     	;# 
  3236  0992                     	;# 
  3237  0993                     	;# 
  3238  0994                     	;# 
  3239  0995                     	;# 
  3240  0996                     	;# 
  3241  0997                     	;# 
  3242  1E0F                     	;# 
  3243  1E10                     	;# 
  3244  1E11                     	;# 
  3245  1E12                     	;# 
  3246  1E13                     	;# 
  3247  1E14                     	;# 
  3248  1E15                     	;# 
  3249  1E16                     	;# 
  3250  1E17                     	;# 
  3251  1E18                     	;# 
  3252  1E19                     	;# 
  3253  1E1A                     	;# 
  3254  1E1B                     	;# 
  3255  1E1C                     	;# 
  3256  1E1D                     	;# 
  3257  1E1E                     	;# 
  3258  1E1F                     	;# 
  3259  1E20                     	;# 
  3260  1E21                     	;# 
  3261  1E22                     	;# 
  3262  1E23                     	;# 
  3263  1E24                     	;# 
  3264  1E25                     	;# 
  3265  1E26                     	;# 
  3266  1E27                     	;# 
  3267  1E28                     	;# 
  3268  1E29                     	;# 
  3269  1E2A                     	;# 
  3270  1E2B                     	;# 
  3271  1E2C                     	;# 
  3272  1E2D                     	;# 
  3273  1E2E                     	;# 
  3274  1E2F                     	;# 
  3275  1E30                     	;# 
  3276  1E31                     	;# 
  3277  1E32                     	;# 
  3278  1E33                     	;# 
  3279  1E34                     	;# 
  3280  1E35                     	;# 
  3281  1E36                     	;# 
  3282  1E37                     	;# 
  3283  1E8F                     	;# 
  3284  1E90                     	;# 
  3285  1E91                     	;# 
  3286  1E92                     	;# 
  3287  1E93                     	;# 
  3288  1E94                     	;# 
  3289  1E95                     	;# 
  3290  1E96                     	;# 
  3291  1E97                     	;# 
  3292  1E9C                     	;# 
  3293  1E9D                     	;# 
  3294  1E9E                     	;# 
  3295  1EA1                     	;# 
  3296  1EA2                     	;# 
  3297  1EA3                     	;# 
  3298  1EA4                     	;# 
  3299  1EA9                     	;# 
  3300  1EAA                     	;# 
  3301  1EB1                     	;# 
  3302  1EB2                     	;# 
  3303  1EB8                     	;# 
  3304  1EB9                     	;# 
  3305  1EBA                     	;# 
  3306  1EBB                     	;# 
  3307  1EBC                     	;# 
  3308  1EBD                     	;# 
  3309  1EBE                     	;# 
  3310  1EC3                     	;# 
  3311  1EC5                     	;# 
  3312  1EC6                     	;# 
  3313  1EC7                     	;# 
  3314  1EC8                     	;# 
  3315  1EC9                     	;# 
  3316  1ECA                     	;# 
  3317  1ECB                     	;# 
  3318  1ECB                     	;# 
  3319  1ECB                     	;# 
  3320  1ECC                     	;# 
  3321  1ECC                     	;# 
  3322  1ECC                     	;# 
  3323  1F10                     	;# 
  3324  1F11                     	;# 
  3325  1F12                     	;# 
  3326  1F14                     	;# 
  3327  1F15                     	;# 
  3328  1F1C                     	;# 
  3329  1F1D                     	;# 
  3330  1F1E                     	;# 
  3331  1F1F                     	;# 
  3332  1F20                     	;# 
  3333  1F21                     	;# 
  3334  1F22                     	;# 
  3335  1F23                     	;# 
  3336  1F24                     	;# 
  3337  1F25                     	;# 
  3338  1F26                     	;# 
  3339  1F27                     	;# 
  3340  1F38                     	;# 
  3341  1F39                     	;# 
  3342  1F3A                     	;# 
  3343  1F3B                     	;# 
  3344  1F3C                     	;# 
  3345  1F3D                     	;# 
  3346  1F3E                     	;# 
  3347  1F3F                     	;# 
  3348  1F43                     	;# 
  3349  1F44                     	;# 
  3350  1F45                     	;# 
  3351  1F46                     	;# 
  3352  1F47                     	;# 
  3353  1F48                     	;# 
  3354  1F49                     	;# 
  3355  1F4A                     	;# 
  3356  1F4E                     	;# 
  3357  1F4F                     	;# 
  3358  1F50                     	;# 
  3359  1F51                     	;# 
  3360  1F52                     	;# 
  3361  1F53                     	;# 
  3362  1F54                     	;# 
  3363  1F55                     	;# 
  3364  1FE4                     	;# 
  3365  1FE5                     	;# 
  3366  1FE6                     	;# 
  3367  1FE7                     	;# 
  3368  1FE8                     	;# 
  3369  1FE8                     	;# 
  3370  1FE9                     	;# 
  3371  1FEA                     	;# 
  3372  1FEB                     	;# 
  3373  1FED                     	;# 
  3374  1FEE                     	;# 
  3375  1FEF                     	;# 
  3376  0000                     	;# 
  3377  0001                     	;# 
  3378  0002                     	;# 
  3379  0003                     	;# 
  3380  0004                     	;# 
  3381  0005                     	;# 
  3382  0006                     	;# 
  3383  0007                     	;# 
  3384  0008                     	;# 
  3385  0009                     	;# 
  3386  000A                     	;# 
  3387  000B                     	;# 
  3388  000C                     	;# 
  3389  000D                     	;# 
  3390  000E                     	;# 
  3391  0012                     	;# 
  3392  0013                     	;# 
  3393  0014                     	;# 
  3394  0018                     	;# 
  3395  0019                     	;# 
  3396  001A                     	;# 
  3397  008C                     	;# 
  3398  008C                     	;# 
  3399  008D                     	;# 
  3400  008E                     	;# 
  3401  008E                     	;# 
  3402  008F                     	;# 
  3403  0090                     	;# 
  3404  0090                     	;# 
  3405  0091                     	;# 
  3406  0092                     	;# 
  3407  0092                     	;# 
  3408  0093                     	;# 
  3409  0094                     	;# 
  3410  0094                     	;# 
  3411  0095                     	;# 
  3412  0096                     	;# 
  3413  0096                     	;# 
  3414  0097                     	;# 
  3415  0098                     	;# 
  3416  0099                     	;# 
  3417  009A                     	;# 
  3418  009B                     	;# 
  3419  009B                     	;# 
  3420  009C                     	;# 
  3421  009D                     	;# 
  3422  009D                     	;# 
  3423  009E                     	;# 
  3424  009F                     	;# 
  3425  010C                     	;# 
  3426  010C                     	;# 
  3427  010D                     	;# 
  3428  010E                     	;# 
  3429  010F                     	;# 
  3430  010F                     	;# 
  3431  0110                     	;# 
  3432  0111                     	;# 
  3433  0112                     	;# 
  3434  0113                     	;# 
  3435  0114                     	;# 
  3436  0115                     	;# 
  3437  0116                     	;# 
  3438  0117                     	;# 
  3439  0118                     	;# 
  3440  0119                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  011A                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011B                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011C                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011D                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011E                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011F                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  018C                     	;# 
  3466  018D                     	;# 
  3467  018E                     	;# 
  3468  018F                     	;# 
  3469  0190                     	;# 
  3470  0191                     	;# 
  3471  0192                     	;# 
  3472  0196                     	;# 
  3473  0197                     	;# 
  3474  0198                     	;# 
  3475  0199                     	;# 
  3476  019A                     	;# 
  3477  019B                     	;# 
  3478  019C                     	;# 
  3479  020C                     	;# 
  3480  020D                     	;# 
  3481  020E                     	;# 
  3482  020E                     	;# 
  3483  020F                     	;# 
  3484  020F                     	;# 
  3485  0210                     	;# 
  3486  0210                     	;# 
  3487  0211                     	;# 
  3488  0211                     	;# 
  3489  0212                     	;# 
  3490  0213                     	;# 
  3491  0214                     	;# 
  3492  0214                     	;# 
  3493  0215                     	;# 
  3494  0215                     	;# 
  3495  0216                     	;# 
  3496  0216                     	;# 
  3497  0217                     	;# 
  3498  0217                     	;# 
  3499  0218                     	;# 
  3500  0219                     	;# 
  3501  021A                     	;# 
  3502  021A                     	;# 
  3503  021B                     	;# 
  3504  021B                     	;# 
  3505  021C                     	;# 
  3506  021C                     	;# 
  3507  021D                     	;# 
  3508  021D                     	;# 
  3509  021E                     	;# 
  3510  021F                     	;# 
  3511  028C                     	;# 
  3512  028C                     	;# 
  3513  028D                     	;# 
  3514  028D                     	;# 
  3515  028E                     	;# 
  3516  028F                     	;# 
  3517  0290                     	;# 
  3518  0291                     	;# 
  3519  0292                     	;# 
  3520  0292                     	;# 
  3521  0293                     	;# 
  3522  0293                     	;# 
  3523  0294                     	;# 
  3524  0295                     	;# 
  3525  0296                     	;# 
  3526  0297                     	;# 
  3527  0298                     	;# 
  3528  0298                     	;# 
  3529  0299                     	;# 
  3530  0299                     	;# 
  3531  029A                     	;# 
  3532  029B                     	;# 
  3533  029C                     	;# 
  3534  029D                     	;# 
  3535  029F                     	;# 
  3536  030C                     	;# 
  3537  030C                     	;# 
  3538  030D                     	;# 
  3539  030E                     	;# 
  3540  030F                     	;# 
  3541  0310                     	;# 
  3542  0310                     	;# 
  3543  0311                     	;# 
  3544  0312                     	;# 
  3545  0313                     	;# 
  3546  0314                     	;# 
  3547  0314                     	;# 
  3548  0315                     	;# 
  3549  0316                     	;# 
  3550  0317                     	;# 
  3551  0318                     	;# 
  3552  0318                     	;# 
  3553  0319                     	;# 
  3554  031A                     	;# 
  3555  031B                     	;# 
  3556  038C                     	;# 
  3557  038C                     	;# 
  3558  038D                     	;# 
  3559  038E                     	;# 
  3560  0390                     	;# 
  3561  0390                     	;# 
  3562  0391                     	;# 
  3563  0392                     	;# 
  3564  048C                     	;# 
  3565  048C                     	;# 
  3566  048D                     	;# 
  3567  048E                     	;# 
  3568  048F                     	;# 
  3569  048F                     	;# 
  3570  0490                     	;# 
  3571  0491                     	;# 
  3572  0492                     	;# 
  3573  0492                     	;# 
  3574  0493                     	;# 
  3575  0494                     	;# 
  3576  0495                     	;# 
  3577  0495                     	;# 
  3578  0496                     	;# 
  3579  0497                     	;# 
  3580  0498                     	;# 
  3581  0499                     	;# 
  3582  049A                     	;# 
  3583  049B                     	;# 
  3584  049C                     	;# 
  3585  049D                     	;# 
  3586  058C                     	;# 
  3587  058C                     	;# 
  3588  058D                     	;# 
  3589  058E                     	;# 
  3590  058F                     	;# 
  3591  058F                     	;# 
  3592  0590                     	;# 
  3593  0591                     	;# 
  3594  0592                     	;# 
  3595  0593                     	;# 
  3596  059C                     	;# 
  3597  059C                     	;# 
  3598  059D                     	;# 
  3599  059D                     	;# 
  3600  059E                     	;# 
  3601  059F                     	;# 
  3602  060C                     	;# 
  3603  060C                     	;# 
  3604  060D                     	;# 
  3605  060D                     	;# 
  3606  060E                     	;# 
  3607  060F                     	;# 
  3608  0610                     	;# 
  3609  0611                     	;# 
  3610  0612                     	;# 
  3611  0613                     	;# 
  3612  0614                     	;# 
  3613  0616                     	;# 
  3614  0616                     	;# 
  3615  0617                     	;# 
  3616  0617                     	;# 
  3617  0618                     	;# 
  3618  0619                     	;# 
  3619  061A                     	;# 
  3620  061B                     	;# 
  3621  061C                     	;# 
  3622  061D                     	;# 
  3623  061E                     	;# 
  3624  070C                     	;# 
  3625  070D                     	;# 
  3626  070E                     	;# 
  3627  070F                     	;# 
  3628  0710                     	;# 
  3629  0711                     	;# 
  3630  0712                     	;# 
  3631  0713                     	;# 
  3632  0714                     	;# 
  3633  0716                     	;# 
  3634  0717                     	;# 
  3635  0718                     	;# 
  3636  0719                     	;# 
  3637  071A                     	;# 
  3638  071B                     	;# 
  3639  071C                     	;# 
  3640  071D                     	;# 
  3641  071E                     	;# 
  3642  0796                     	;# 
  3643  0797                     	;# 
  3644  0798                     	;# 
  3645  0799                     	;# 
  3646  079A                     	;# 
  3647  079B                     	;# 
  3648  079C                     	;# 
  3649  079D                     	;# 
  3650  080C                     	;# 
  3651  080D                     	;# 
  3652  080E                     	;# 
  3653  080F                     	;# 
  3654  0810                     	;# 
  3655  0811                     	;# 
  3656  0812                     	;# 
  3657  0813                     	;# 
  3658  0814                     	;# 
  3659  081A                     	;# 
  3660  081A                     	;# 
  3661  081B                     	;# 
  3662  081C                     	;# 
  3663  081C                     	;# 
  3664  081D                     	;# 
  3665  081E                     	;# 
  3666  081F                     	;# 
  3667  088C                     	;# 
  3668  088D                     	;# 
  3669  088E                     	;# 
  3670  088F                     	;# 
  3671  0890                     	;# 
  3672  0891                     	;# 
  3673  0892                     	;# 
  3674  0893                     	;# 
  3675  0895                     	;# 
  3676  0896                     	;# 
  3677  0897                     	;# 
  3678  0898                     	;# 
  3679  0899                     	;# 
  3680  089A                     	;# 
  3681  089B                     	;# 
  3682  090C                     	;# 
  3683  090E                     	;# 
  3684  090F                     	;# 
  3685  091F                     	;# 
  3686  098F                     	;# 
  3687  098F                     	;# 
  3688  0990                     	;# 
  3689  0991                     	;# 
  3690  0992                     	;# 
  3691  0993                     	;# 
  3692  0994                     	;# 
  3693  0995                     	;# 
  3694  0996                     	;# 
  3695  0997                     	;# 
  3696  1E0F                     	;# 
  3697  1E10                     	;# 
  3698  1E11                     	;# 
  3699  1E12                     	;# 
  3700  1E13                     	;# 
  3701  1E14                     	;# 
  3702  1E15                     	;# 
  3703  1E16                     	;# 
  3704  1E17                     	;# 
  3705  1E18                     	;# 
  3706  1E19                     	;# 
  3707  1E1A                     	;# 
  3708  1E1B                     	;# 
  3709  1E1C                     	;# 
  3710  1E1D                     	;# 
  3711  1E1E                     	;# 
  3712  1E1F                     	;# 
  3713  1E20                     	;# 
  3714  1E21                     	;# 
  3715  1E22                     	;# 
  3716  1E23                     	;# 
  3717  1E24                     	;# 
  3718  1E25                     	;# 
  3719  1E26                     	;# 
  3720  1E27                     	;# 
  3721  1E28                     	;# 
  3722  1E29                     	;# 
  3723  1E2A                     	;# 
  3724  1E2B                     	;# 
  3725  1E2C                     	;# 
  3726  1E2D                     	;# 
  3727  1E2E                     	;# 
  3728  1E2F                     	;# 
  3729  1E30                     	;# 
  3730  1E31                     	;# 
  3731  1E32                     	;# 
  3732  1E33                     	;# 
  3733  1E34                     	;# 
  3734  1E35                     	;# 
  3735  1E36                     	;# 
  3736  1E37                     	;# 
  3737  1E8F                     	;# 
  3738  1E90                     	;# 
  3739  1E91                     	;# 
  3740  1E92                     	;# 
  3741  1E93                     	;# 
  3742  1E94                     	;# 
  3743  1E95                     	;# 
  3744  1E96                     	;# 
  3745  1E97                     	;# 
  3746  1E9C                     	;# 
  3747  1E9D                     	;# 
  3748  1E9E                     	;# 
  3749  1EA1                     	;# 
  3750  1EA2                     	;# 
  3751  1EA3                     	;# 
  3752  1EA4                     	;# 
  3753  1EA9                     	;# 
  3754  1EAA                     	;# 
  3755  1EB1                     	;# 
  3756  1EB2                     	;# 
  3757  1EB8                     	;# 
  3758  1EB9                     	;# 
  3759  1EBA                     	;# 
  3760  1EBB                     	;# 
  3761  1EBC                     	;# 
  3762  1EBD                     	;# 
  3763  1EBE                     	;# 
  3764  1EC3                     	;# 
  3765  1EC5                     	;# 
  3766  1EC6                     	;# 
  3767  1EC7                     	;# 
  3768  1EC8                     	;# 
  3769  1EC9                     	;# 
  3770  1ECA                     	;# 
  3771  1ECB                     	;# 
  3772  1ECB                     	;# 
  3773  1ECB                     	;# 
  3774  1ECC                     	;# 
  3775  1ECC                     	;# 
  3776  1ECC                     	;# 
  3777  1F10                     	;# 
  3778  1F11                     	;# 
  3779  1F12                     	;# 
  3780  1F14                     	;# 
  3781  1F15                     	;# 
  3782  1F1C                     	;# 
  3783  1F1D                     	;# 
  3784  1F1E                     	;# 
  3785  1F1F                     	;# 
  3786  1F20                     	;# 
  3787  1F21                     	;# 
  3788  1F22                     	;# 
  3789  1F23                     	;# 
  3790  1F24                     	;# 
  3791  1F25                     	;# 
  3792  1F26                     	;# 
  3793  1F27                     	;# 
  3794  1F38                     	;# 
  3795  1F39                     	;# 
  3796  1F3A                     	;# 
  3797  1F3B                     	;# 
  3798  1F3C                     	;# 
  3799  1F3D                     	;# 
  3800  1F3E                     	;# 
  3801  1F3F                     	;# 
  3802  1F43                     	;# 
  3803  1F44                     	;# 
  3804  1F45                     	;# 
  3805  1F46                     	;# 
  3806  1F47                     	;# 
  3807  1F48                     	;# 
  3808  1F49                     	;# 
  3809  1F4A                     	;# 
  3810  1F4E                     	;# 
  3811  1F4F                     	;# 
  3812  1F50                     	;# 
  3813  1F51                     	;# 
  3814  1F52                     	;# 
  3815  1F53                     	;# 
  3816  1F54                     	;# 
  3817  1F55                     	;# 
  3818  1FE4                     	;# 
  3819  1FE5                     	;# 
  3820  1FE6                     	;# 
  3821  1FE7                     	;# 
  3822  1FE8                     	;# 
  3823  1FE8                     	;# 
  3824  1FE9                     	;# 
  3825  1FEA                     	;# 
  3826  1FEB                     	;# 
  3827  1FED                     	;# 
  3828  1FEE                     	;# 
  3829  1FEF                     	;# 
  3830  0000                     	;# 
  3831  0001                     	;# 
  3832  0002                     	;# 
  3833  0003                     	;# 
  3834  0004                     	;# 
  3835  0005                     	;# 
  3836  0006                     	;# 
  3837  0007                     	;# 
  3838  0008                     	;# 
  3839  0009                     	;# 
  3840  000A                     	;# 
  3841  000B                     	;# 
  3842  000C                     	;# 
  3843  000D                     	;# 
  3844  000E                     	;# 
  3845  0012                     	;# 
  3846  0013                     	;# 
  3847  0014                     	;# 
  3848  0018                     	;# 
  3849  0019                     	;# 
  3850  001A                     	;# 
  3851  008C                     	;# 
  3852  008C                     	;# 
  3853  008D                     	;# 
  3854  008E                     	;# 
  3855  008E                     	;# 
  3856  008F                     	;# 
  3857  0090                     	;# 
  3858  0090                     	;# 
  3859  0091                     	;# 
  3860  0092                     	;# 
  3861  0092                     	;# 
  3862  0093                     	;# 
  3863  0094                     	;# 
  3864  0094                     	;# 
  3865  0095                     	;# 
  3866  0096                     	;# 
  3867  0096                     	;# 
  3868  0097                     	;# 
  3869  0098                     	;# 
  3870  0099                     	;# 
  3871  009A                     	;# 
  3872  009B                     	;# 
  3873  009B                     	;# 
  3874  009C                     	;# 
  3875  009D                     	;# 
  3876  009D                     	;# 
  3877  009E                     	;# 
  3878  009F                     	;# 
  3879  010C                     	;# 
  3880  010C                     	;# 
  3881  010D                     	;# 
  3882  010E                     	;# 
  3883  010F                     	;# 
  3884  010F                     	;# 
  3885  0110                     	;# 
  3886  0111                     	;# 
  3887  0112                     	;# 
  3888  0113                     	;# 
  3889  0114                     	;# 
  3890  0115                     	;# 
  3891  0116                     	;# 
  3892  0117                     	;# 
  3893  0118                     	;# 
  3894  0119                     	;# 
  3895  0119                     	;# 
  3896  0119                     	;# 
  3897  011A                     	;# 
  3898  011A                     	;# 
  3899  011A                     	;# 
  3900  011B                     	;# 
  3901  011B                     	;# 
  3902  011B                     	;# 
  3903  011B                     	;# 
  3904  011B                     	;# 
  3905  011C                     	;# 
  3906  011C                     	;# 
  3907  011C                     	;# 
  3908  011D                     	;# 
  3909  011D                     	;# 
  3910  011D                     	;# 
  3911  011E                     	;# 
  3912  011E                     	;# 
  3913  011E                     	;# 
  3914  011F                     	;# 
  3915  011F                     	;# 
  3916  011F                     	;# 
  3917  011F                     	;# 
  3918  011F                     	;# 
  3919  018C                     	;# 
  3920  018D                     	;# 
  3921  018E                     	;# 
  3922  018F                     	;# 
  3923  0190                     	;# 
  3924  0191                     	;# 
  3925  0192                     	;# 
  3926  0196                     	;# 
  3927  0197                     	;# 
  3928  0198                     	;# 
  3929  0199                     	;# 
  3930  019A                     	;# 
  3931  019B                     	;# 
  3932  019C                     	;# 
  3933  020C                     	;# 
  3934  020D                     	;# 
  3935  020E                     	;# 
  3936  020E                     	;# 
  3937  020F                     	;# 
  3938  020F                     	;# 
  3939  0210                     	;# 
  3940  0210                     	;# 
  3941  0211                     	;# 
  3942  0211                     	;# 
  3943  0212                     	;# 
  3944  0213                     	;# 
  3945  0214                     	;# 
  3946  0214                     	;# 
  3947  0215                     	;# 
  3948  0215                     	;# 
  3949  0216                     	;# 
  3950  0216                     	;# 
  3951  0217                     	;# 
  3952  0217                     	;# 
  3953  0218                     	;# 
  3954  0219                     	;# 
  3955  021A                     	;# 
  3956  021A                     	;# 
  3957  021B                     	;# 
  3958  021B                     	;# 
  3959  021C                     	;# 
  3960  021C                     	;# 
  3961  021D                     	;# 
  3962  021D                     	;# 
  3963  021E                     	;# 
  3964  021F                     	;# 
  3965  028C                     	;# 
  3966  028C                     	;# 
  3967  028D                     	;# 
  3968  028D                     	;# 
  3969  028E                     	;# 
  3970  028F                     	;# 
  3971  0290                     	;# 
  3972  0291                     	;# 
  3973  0292                     	;# 
  3974  0292                     	;# 
  3975  0293                     	;# 
  3976  0293                     	;# 
  3977  0294                     	;# 
  3978  0295                     	;# 
  3979  0296                     	;# 
  3980  0297                     	;# 
  3981  0298                     	;# 
  3982  0298                     	;# 
  3983  0299                     	;# 
  3984  0299                     	;# 
  3985  029A                     	;# 
  3986  029B                     	;# 
  3987  029C                     	;# 
  3988  029D                     	;# 
  3989  029F                     	;# 
  3990  030C                     	;# 
  3991  030C                     	;# 
  3992  030D                     	;# 
  3993  030E                     	;# 
  3994  030F                     	;# 
  3995  0310                     	;# 
  3996  0310                     	;# 
  3997  0311                     	;# 
  3998  0312                     	;# 
  3999  0313                     	;# 
  4000  0314                     	;# 
  4001  0314                     	;# 
  4002  0315                     	;# 
  4003  0316                     	;# 
  4004  0317                     	;# 
  4005  0318                     	;# 
  4006  0318                     	;# 
  4007  0319                     	;# 
  4008  031A                     	;# 
  4009  031B                     	;# 
  4010  038C                     	;# 
  4011  038C                     	;# 
  4012  038D                     	;# 
  4013  038E                     	;# 
  4014  0390                     	;# 
  4015  0390                     	;# 
  4016  0391                     	;# 
  4017  0392                     	;# 
  4018  048C                     	;# 
  4019  048C                     	;# 
  4020  048D                     	;# 
  4021  048E                     	;# 
  4022  048F                     	;# 
  4023  048F                     	;# 
  4024  0490                     	;# 
  4025  0491                     	;# 
  4026  0492                     	;# 
  4027  0492                     	;# 
  4028  0493                     	;# 
  4029  0494                     	;# 
  4030  0495                     	;# 
  4031  0495                     	;# 
  4032  0496                     	;# 
  4033  0497                     	;# 
  4034  0498                     	;# 
  4035  0499                     	;# 
  4036  049A                     	;# 
  4037  049B                     	;# 
  4038  049C                     	;# 
  4039  049D                     	;# 
  4040  058C                     	;# 
  4041  058C                     	;# 
  4042  058D                     	;# 
  4043  058E                     	;# 
  4044  058F                     	;# 
  4045  058F                     	;# 
  4046  0590                     	;# 
  4047  0591                     	;# 
  4048  0592                     	;# 
  4049  0593                     	;# 
  4050  059C                     	;# 
  4051  059C                     	;# 
  4052  059D                     	;# 
  4053  059D                     	;# 
  4054  059E                     	;# 
  4055  059F                     	;# 
  4056  060C                     	;# 
  4057  060C                     	;# 
  4058  060D                     	;# 
  4059  060D                     	;# 
  4060  060E                     	;# 
  4061  060F                     	;# 
  4062  0610                     	;# 
  4063  0611                     	;# 
  4064  0612                     	;# 
  4065  0613                     	;# 
  4066  0614                     	;# 
  4067  0616                     	;# 
  4068  0616                     	;# 
  4069  0617                     	;# 
  4070  0617                     	;# 
  4071  0618                     	;# 
  4072  0619                     	;# 
  4073  061A                     	;# 
  4074  061B                     	;# 
  4075  061C                     	;# 
  4076  061D                     	;# 
  4077  061E                     	;# 
  4078  070C                     	;# 
  4079  070D                     	;# 
  4080  070E                     	;# 
  4081  070F                     	;# 
  4082  0710                     	;# 
  4083  0711                     	;# 
  4084  0712                     	;# 
  4085  0713                     	;# 
  4086  0714                     	;# 
  4087  0716                     	;# 
  4088  0717                     	;# 
  4089  0718                     	;# 
  4090  0719                     	;# 
  4091  071A                     	;# 
  4092  071B                     	;# 
  4093  071C                     	;# 
  4094  071D                     	;# 
  4095  071E                     	;# 
  4096  0796                     	;# 
  4097  0797                     	;# 
  4098  0798                     	;# 
  4099  0799                     	;# 
  4100  079A                     	;# 
  4101  079B                     	;# 
  4102  079C                     	;# 
  4103  079D                     	;# 
  4104  080C                     	;# 
  4105  080D                     	;# 
  4106  080E                     	;# 
  4107  080F                     	;# 
  4108  0810                     	;# 
  4109  0811                     	;# 
  4110  0812                     	;# 
  4111  0813                     	;# 
  4112  0814                     	;# 
  4113  081A                     	;# 
  4114  081A                     	;# 
  4115  081B                     	;# 
  4116  081C                     	;# 
  4117  081C                     	;# 
  4118  081D                     	;# 
  4119  081E                     	;# 
  4120  081F                     	;# 
  4121  088C                     	;# 
  4122  088D                     	;# 
  4123  088E                     	;# 
  4124  088F                     	;# 
  4125  0890                     	;# 
  4126  0891                     	;# 
  4127  0892                     	;# 
  4128  0893                     	;# 
  4129  0895                     	;# 
  4130  0896                     	;# 
  4131  0897                     	;# 
  4132  0898                     	;# 
  4133  0899                     	;# 
  4134  089A                     	;# 
  4135  089B                     	;# 
  4136  090C                     	;# 
  4137  090E                     	;# 
  4138  090F                     	;# 
  4139  091F                     	;# 
  4140  098F                     	;# 
  4141  098F                     	;# 
  4142  0990                     	;# 
  4143  0991                     	;# 
  4144  0992                     	;# 
  4145  0993                     	;# 
  4146  0994                     	;# 
  4147  0995                     	;# 
  4148  0996                     	;# 
  4149  0997                     	;# 
  4150  1E0F                     	;# 
  4151  1E10                     	;# 
  4152  1E11                     	;# 
  4153  1E12                     	;# 
  4154  1E13                     	;# 
  4155  1E14                     	;# 
  4156  1E15                     	;# 
  4157  1E16                     	;# 
  4158  1E17                     	;# 
  4159  1E18                     	;# 
  4160  1E19                     	;# 
  4161  1E1A                     	;# 
  4162  1E1B                     	;# 
  4163  1E1C                     	;# 
  4164  1E1D                     	;# 
  4165  1E1E                     	;# 
  4166  1E1F                     	;# 
  4167  1E20                     	;# 
  4168  1E21                     	;# 
  4169  1E22                     	;# 
  4170  1E23                     	;# 
  4171  1E24                     	;# 
  4172  1E25                     	;# 
  4173  1E26                     	;# 
  4174  1E27                     	;# 
  4175  1E28                     	;# 
  4176  1E29                     	;# 
  4177  1E2A                     	;# 
  4178  1E2B                     	;# 
  4179  1E2C                     	;# 
  4180  1E2D                     	;# 
  4181  1E2E                     	;# 
  4182  1E2F                     	;# 
  4183  1E30                     	;# 
  4184  1E31                     	;# 
  4185  1E32                     	;# 
  4186  1E33                     	;# 
  4187  1E34                     	;# 
  4188  1E35                     	;# 
  4189  1E36                     	;# 
  4190  1E37                     	;# 
  4191  1E8F                     	;# 
  4192  1E90                     	;# 
  4193  1E91                     	;# 
  4194  1E92                     	;# 
  4195  1E93                     	;# 
  4196  1E94                     	;# 
  4197  1E95                     	;# 
  4198  1E96                     	;# 
  4199  1E97                     	;# 
  4200  1E9C                     	;# 
  4201  1E9D                     	;# 
  4202  1E9E                     	;# 
  4203  1EA1                     	;# 
  4204  1EA2                     	;# 
  4205  1EA3                     	;# 
  4206  1EA4                     	;# 
  4207  1EA9                     	;# 
  4208  1EAA                     	;# 
  4209  1EB1                     	;# 
  4210  1EB2                     	;# 
  4211  1EB8                     	;# 
  4212  1EB9                     	;# 
  4213  1EBA                     	;# 
  4214  1EBB                     	;# 
  4215  1EBC                     	;# 
  4216  1EBD                     	;# 
  4217  1EBE                     	;# 
  4218  1EC3                     	;# 
  4219  1EC5                     	;# 
  4220  1EC6                     	;# 
  4221  1EC7                     	;# 
  4222  1EC8                     	;# 
  4223  1EC9                     	;# 
  4224  1ECA                     	;# 
  4225  1ECB                     	;# 
  4226  1ECB                     	;# 
  4227  1ECB                     	;# 
  4228  1ECC                     	;# 
  4229  1ECC                     	;# 
  4230  1ECC                     	;# 
  4231  1F10                     	;# 
  4232  1F11                     	;# 
  4233  1F12                     	;# 
  4234  1F14                     	;# 
  4235  1F15                     	;# 
  4236  1F1C                     	;# 
  4237  1F1D                     	;# 
  4238  1F1E                     	;# 
  4239  1F1F                     	;# 
  4240  1F20                     	;# 
  4241  1F21                     	;# 
  4242  1F22                     	;# 
  4243  1F23                     	;# 
  4244  1F24                     	;# 
  4245  1F25                     	;# 
  4246  1F26                     	;# 
  4247  1F27                     	;# 
  4248  1F38                     	;# 
  4249  1F39                     	;# 
  4250  1F3A                     	;# 
  4251  1F3B                     	;# 
  4252  1F3C                     	;# 
  4253  1F3D                     	;# 
  4254  1F3E                     	;# 
  4255  1F3F                     	;# 
  4256  1F43                     	;# 
  4257  1F44                     	;# 
  4258  1F45                     	;# 
  4259  1F46                     	;# 
  4260  1F47                     	;# 
  4261  1F48                     	;# 
  4262  1F49                     	;# 
  4263  1F4A                     	;# 
  4264  1F4E                     	;# 
  4265  1F4F                     	;# 
  4266  1F50                     	;# 
  4267  1F51                     	;# 
  4268  1F52                     	;# 
  4269  1F53                     	;# 
  4270  1F54                     	;# 
  4271  1F55                     	;# 
  4272  1FE4                     	;# 
  4273  1FE5                     	;# 
  4274  1FE6                     	;# 
  4275  1FE7                     	;# 
  4276  1FE8                     	;# 
  4277  1FE8                     	;# 
  4278  1FE9                     	;# 
  4279  1FEA                     	;# 
  4280  1FEB                     	;# 
  4281  1FED                     	;# 
  4282  1FEE                     	;# 
  4283  1FEF                     	;# 
  4284  0000                     	;# 
  4285  0001                     	;# 
  4286  0002                     	;# 
  4287  0003                     	;# 
  4288  0004                     	;# 
  4289  0005                     	;# 
  4290  0006                     	;# 
  4291  0007                     	;# 
  4292  0008                     	;# 
  4293  0009                     	;# 
  4294  000A                     	;# 
  4295  000B                     	;# 
  4296  000C                     	;# 
  4297  000D                     	;# 
  4298  000E                     	;# 
  4299  0012                     	;# 
  4300  0013                     	;# 
  4301  0014                     	;# 
  4302  0018                     	;# 
  4303  0019                     	;# 
  4304  001A                     	;# 
  4305  008C                     	;# 
  4306  008C                     	;# 
  4307  008D                     	;# 
  4308  008E                     	;# 
  4309  008E                     	;# 
  4310  008F                     	;# 
  4311  0090                     	;# 
  4312  0090                     	;# 
  4313  0091                     	;# 
  4314  0092                     	;# 
  4315  0092                     	;# 
  4316  0093                     	;# 
  4317  0094                     	;# 
  4318  0094                     	;# 
  4319  0095                     	;# 
  4320  0096                     	;# 
  4321  0096                     	;# 
  4322  0097                     	;# 
  4323  0098                     	;# 
  4324  0099                     	;# 
  4325  009A                     	;# 
  4326  009B                     	;# 
  4327  009B                     	;# 
  4328  009C                     	;# 
  4329  009D                     	;# 
  4330  009D                     	;# 
  4331  009E                     	;# 
  4332  009F                     	;# 
  4333  010C                     	;# 
  4334  010C                     	;# 
  4335  010D                     	;# 
  4336  010E                     	;# 
  4337  010F                     	;# 
  4338  010F                     	;# 
  4339  0110                     	;# 
  4340  0111                     	;# 
  4341  0112                     	;# 
  4342  0113                     	;# 
  4343  0114                     	;# 
  4344  0115                     	;# 
  4345  0116                     	;# 
  4346  0117                     	;# 
  4347  0118                     	;# 
  4348  0119                     	;# 
  4349  0119                     	;# 
  4350  0119                     	;# 
  4351  011A                     	;# 
  4352  011A                     	;# 
  4353  011A                     	;# 
  4354  011B                     	;# 
  4355  011B                     	;# 
  4356  011B                     	;# 
  4357  011B                     	;# 
  4358  011B                     	;# 
  4359  011C                     	;# 
  4360  011C                     	;# 
  4361  011C                     	;# 
  4362  011D                     	;# 
  4363  011D                     	;# 
  4364  011D                     	;# 
  4365  011E                     	;# 
  4366  011E                     	;# 
  4367  011E                     	;# 
  4368  011F                     	;# 
  4369  011F                     	;# 
  4370  011F                     	;# 
  4371  011F                     	;# 
  4372  011F                     	;# 
  4373  018C                     	;# 
  4374  018D                     	;# 
  4375  018E                     	;# 
  4376  018F                     	;# 
  4377  0190                     	;# 
  4378  0191                     	;# 
  4379  0192                     	;# 
  4380  0196                     	;# 
  4381  0197                     	;# 
  4382  0198                     	;# 
  4383  0199                     	;# 
  4384  019A                     	;# 
  4385  019B                     	;# 
  4386  019C                     	;# 
  4387  020C                     	;# 
  4388  020D                     	;# 
  4389  020E                     	;# 
  4390  020E                     	;# 
  4391  020F                     	;# 
  4392  020F                     	;# 
  4393  0210                     	;# 
  4394  0210                     	;# 
  4395  0211                     	;# 
  4396  0211                     	;# 
  4397  0212                     	;# 
  4398  0213                     	;# 
  4399  0214                     	;# 
  4400  0214                     	;# 
  4401  0215                     	;# 
  4402  0215                     	;# 
  4403  0216                     	;# 
  4404  0216                     	;# 
  4405  0217                     	;# 
  4406  0217                     	;# 
  4407  0218                     	;# 
  4408  0219                     	;# 
  4409  021A                     	;# 
  4410  021A                     	;# 
  4411  021B                     	;# 
  4412  021B                     	;# 
  4413  021C                     	;# 
  4414  021C                     	;# 
  4415  021D                     	;# 
  4416  021D                     	;# 
  4417  021E                     	;# 
  4418  021F                     	;# 
  4419  028C                     	;# 
  4420  028C                     	;# 
  4421  028D                     	;# 
  4422  028D                     	;# 
  4423  028E                     	;# 
  4424  028F                     	;# 
  4425  0290                     	;# 
  4426  0291                     	;# 
  4427  0292                     	;# 
  4428  0292                     	;# 
  4429  0293                     	;# 
  4430  0293                     	;# 
  4431  0294                     	;# 
  4432  0295                     	;# 
  4433  0296                     	;# 
  4434  0297                     	;# 
  4435  0298                     	;# 
  4436  0298                     	;# 
  4437  0299                     	;# 
  4438  0299                     	;# 
  4439  029A                     	;# 
  4440  029B                     	;# 
  4441  029C                     	;# 
  4442  029D                     	;# 
  4443  029F                     	;# 
  4444  030C                     	;# 
  4445  030C                     	;# 
  4446  030D                     	;# 
  4447  030E                     	;# 
  4448  030F                     	;# 
  4449  0310                     	;# 
  4450  0310                     	;# 
  4451  0311                     	;# 
  4452  0312                     	;# 
  4453  0313                     	;# 
  4454  0314                     	;# 
  4455  0314                     	;# 
  4456  0315                     	;# 
  4457  0316                     	;# 
  4458  0317                     	;# 
  4459  0318                     	;# 
  4460  0318                     	;# 
  4461  0319                     	;# 
  4462  031A                     	;# 
  4463  031B                     	;# 
  4464  038C                     	;# 
  4465  038C                     	;# 
  4466  038D                     	;# 
  4467  038E                     	;# 
  4468  0390                     	;# 
  4469  0390                     	;# 
  4470  0391                     	;# 
  4471  0392                     	;# 
  4472  048C                     	;# 
  4473  048C                     	;# 
  4474  048D                     	;# 
  4475  048E                     	;# 
  4476  048F                     	;# 
  4477  048F                     	;# 
  4478  0490                     	;# 
  4479  0491                     	;# 
  4480  0492                     	;# 
  4481  0492                     	;# 
  4482  0493                     	;# 
  4483  0494                     	;# 
  4484  0495                     	;# 
  4485  0495                     	;# 
  4486  0496                     	;# 
  4487  0497                     	;# 
  4488  0498                     	;# 
  4489  0499                     	;# 
  4490  049A                     	;# 
  4491  049B                     	;# 
  4492  049C                     	;# 
  4493  049D                     	;# 
  4494  058C                     	;# 
  4495  058C                     	;# 
  4496  058D                     	;# 
  4497  058E                     	;# 
  4498  058F                     	;# 
  4499  058F                     	;# 
  4500  0590                     	;# 
  4501  0591                     	;# 
  4502  0592                     	;# 
  4503  0593                     	;# 
  4504  059C                     	;# 
  4505  059C                     	;# 
  4506  059D                     	;# 
  4507  059D                     	;# 
  4508  059E                     	;# 
  4509  059F                     	;# 
  4510  060C                     	;# 
  4511  060C                     	;# 
  4512  060D                     	;# 
  4513  060D                     	;# 
  4514  060E                     	;# 
  4515  060F                     	;# 
  4516  0610                     	;# 
  4517  0611                     	;# 
  4518  0612                     	;# 
  4519  0613                     	;# 
  4520  0614                     	;# 
  4521  0616                     	;# 
  4522  0616                     	;# 
  4523  0617                     	;# 
  4524  0617                     	;# 
  4525  0618                     	;# 
  4526  0619                     	;# 
  4527  061A                     	;# 
  4528  061B                     	;# 
  4529  061C                     	;# 
  4530  061D                     	;# 
  4531  061E                     	;# 
  4532  070C                     	;# 
  4533  070D                     	;# 
  4534  070E                     	;# 
  4535  070F                     	;# 
  4536  0710                     	;# 
  4537  0711                     	;# 
  4538  0712                     	;# 
  4539  0713                     	;# 
  4540  0714                     	;# 
  4541  0716                     	;# 
  4542  0717                     	;# 
  4543  0718                     	;# 
  4544  0719                     	;# 
  4545  071A                     	;# 
  4546  071B                     	;# 
  4547  071C                     	;# 
  4548  071D                     	;# 
  4549  071E                     	;# 
  4550  0796                     	;# 
  4551  0797                     	;# 
  4552  0798                     	;# 
  4553  0799                     	;# 
  4554  079A                     	;# 
  4555  079B                     	;# 
  4556  079C                     	;# 
  4557  079D                     	;# 
  4558  080C                     	;# 
  4559  080D                     	;# 
  4560  080E                     	;# 
  4561  080F                     	;# 
  4562  0810                     	;# 
  4563  0811                     	;# 
  4564  0812                     	;# 
  4565  0813                     	;# 
  4566  0814                     	;# 
  4567  081A                     	;# 
  4568  081A                     	;# 
  4569  081B                     	;# 
  4570  081C                     	;# 
  4571  081C                     	;# 
  4572  081D                     	;# 
  4573  081E                     	;# 
  4574  081F                     	;# 
  4575  088C                     	;# 
  4576  088D                     	;# 
  4577  088E                     	;# 
  4578  088F                     	;# 
  4579  0890                     	;# 
  4580  0891                     	;# 
  4581  0892                     	;# 
  4582  0893                     	;# 
  4583  0895                     	;# 
  4584  0896                     	;# 
  4585  0897                     	;# 
  4586  0898                     	;# 
  4587  0899                     	;# 
  4588  089A                     	;# 
  4589  089B                     	;# 
  4590  090C                     	;# 
  4591  090E                     	;# 
  4592  090F                     	;# 
  4593  091F                     	;# 
  4594  098F                     	;# 
  4595  098F                     	;# 
  4596  0990                     	;# 
  4597  0991                     	;# 
  4598  0992                     	;# 
  4599  0993                     	;# 
  4600  0994                     	;# 
  4601  0995                     	;# 
  4602  0996                     	;# 
  4603  0997                     	;# 
  4604  1E0F                     	;# 
  4605  1E10                     	;# 
  4606  1E11                     	;# 
  4607  1E12                     	;# 
  4608  1E13                     	;# 
  4609  1E14                     	;# 
  4610  1E15                     	;# 
  4611  1E16                     	;# 
  4612  1E17                     	;# 
  4613  1E18                     	;# 
  4614  1E19                     	;# 
  4615  1E1A                     	;# 
  4616  1E1B                     	;# 
  4617  1E1C                     	;# 
  4618  1E1D                     	;# 
  4619  1E1E                     	;# 
  4620  1E1F                     	;# 
  4621  1E20                     	;# 
  4622  1E21                     	;# 
  4623  1E22                     	;# 
  4624  1E23                     	;# 
  4625  1E24                     	;# 
  4626  1E25                     	;# 
  4627  1E26                     	;# 
  4628  1E27                     	;# 
  4629  1E28                     	;# 
  4630  1E29                     	;# 
  4631  1E2A                     	;# 
  4632  1E2B                     	;# 
  4633  1E2C                     	;# 
  4634  1E2D                     	;# 
  4635  1E2E                     	;# 
  4636  1E2F                     	;# 
  4637  1E30                     	;# 
  4638  1E31                     	;# 
  4639  1E32                     	;# 
  4640  1E33                     	;# 
  4641  1E34                     	;# 
  4642  1E35                     	;# 
  4643  1E36                     	;# 
  4644  1E37                     	;# 
  4645  1E8F                     	;# 
  4646  1E90                     	;# 
  4647  1E91                     	;# 
  4648  1E92                     	;# 
  4649  1E93                     	;# 
  4650  1E94                     	;# 
  4651  1E95                     	;# 
  4652  1E96                     	;# 
  4653  1E97                     	;# 
  4654  1E9C                     	;# 
  4655  1E9D                     	;# 
  4656  1E9E                     	;# 
  4657  1EA1                     	;# 
  4658  1EA2                     	;# 
  4659  1EA3                     	;# 
  4660  1EA4                     	;# 
  4661  1EA9                     	;# 
  4662  1EAA                     	;# 
  4663  1EB1                     	;# 
  4664  1EB2                     	;# 
  4665  1EB8                     	;# 
  4666  1EB9                     	;# 
  4667  1EBA                     	;# 
  4668  1EBB                     	;# 
  4669  1EBC                     	;# 
  4670  1EBD                     	;# 
  4671  1EBE                     	;# 
  4672  1EC3                     	;# 
  4673  1EC5                     	;# 
  4674  1EC6                     	;# 
  4675  1EC7                     	;# 
  4676  1EC8                     	;# 
  4677  1EC9                     	;# 
  4678  1ECA                     	;# 
  4679  1ECB                     	;# 
  4680  1ECB                     	;# 
  4681  1ECB                     	;# 
  4682  1ECC                     	;# 
  4683  1ECC                     	;# 
  4684  1ECC                     	;# 
  4685  1F10                     	;# 
  4686  1F11                     	;# 
  4687  1F12                     	;# 
  4688  1F14                     	;# 
  4689  1F15                     	;# 
  4690  1F1C                     	;# 
  4691  1F1D                     	;# 
  4692  1F1E                     	;# 
  4693  1F1F                     	;# 
  4694  1F20                     	;# 
  4695  1F21                     	;# 
  4696  1F22                     	;# 
  4697  1F23                     	;# 
  4698  1F24                     	;# 
  4699  1F25                     	;# 
  4700  1F26                     	;# 
  4701  1F27                     	;# 
  4702  1F38                     	;# 
  4703  1F39                     	;# 
  4704  1F3A                     	;# 
  4705  1F3B                     	;# 
  4706  1F3C                     	;# 
  4707  1F3D                     	;# 
  4708  1F3E                     	;# 
  4709  1F3F                     	;# 
  4710  1F43                     	;# 
  4711  1F44                     	;# 
  4712  1F45                     	;# 
  4713  1F46                     	;# 
  4714  1F47                     	;# 
  4715  1F48                     	;# 
  4716  1F49                     	;# 
  4717  1F4A                     	;# 
  4718  1F4E                     	;# 
  4719  1F4F                     	;# 
  4720  1F50                     	;# 
  4721  1F51                     	;# 
  4722  1F52                     	;# 
  4723  1F53                     	;# 
  4724  1F54                     	;# 
  4725  1F55                     	;# 
  4726  1FE4                     	;# 
  4727  1FE5                     	;# 
  4728  1FE6                     	;# 
  4729  1FE7                     	;# 
  4730  1FE8                     	;# 
  4731  1FE8                     	;# 
  4732  1FE9                     	;# 
  4733  1FEA                     	;# 
  4734  1FEB                     	;# 
  4735  1FED                     	;# 
  4736  1FEE                     	;# 
  4737  1FEF                     	;# 
  4738  0000                     	;# 
  4739  0001                     	;# 
  4740  0002                     	;# 
  4741  0003                     	;# 
  4742  0004                     	;# 
  4743  0005                     	;# 
  4744  0006                     	;# 
  4745  0007                     	;# 
  4746  0008                     	;# 
  4747  0009                     	;# 
  4748  000A                     	;# 
  4749  000B                     	;# 
  4750  000C                     	;# 
  4751  000D                     	;# 
  4752  000E                     	;# 
  4753  0012                     	;# 
  4754  0013                     	;# 
  4755  0014                     	;# 
  4756  0018                     	;# 
  4757  0019                     	;# 
  4758  001A                     	;# 
  4759  008C                     	;# 
  4760  008C                     	;# 
  4761  008D                     	;# 
  4762  008E                     	;# 
  4763  008E                     	;# 
  4764  008F                     	;# 
  4765  0090                     	;# 
  4766  0090                     	;# 
  4767  0091                     	;# 
  4768  0092                     	;# 
  4769  0092                     	;# 
  4770  0093                     	;# 
  4771  0094                     	;# 
  4772  0094                     	;# 
  4773  0095                     	;# 
  4774  0096                     	;# 
  4775  0096                     	;# 
  4776  0097                     	;# 
  4777  0098                     	;# 
  4778  0099                     	;# 
  4779  009A                     	;# 
  4780  009B                     	;# 
  4781  009B                     	;# 
  4782  009C                     	;# 
  4783  009D                     	;# 
  4784  009D                     	;# 
  4785  009E                     	;# 
  4786  009F                     	;# 
  4787  010C                     	;# 
  4788  010C                     	;# 
  4789  010D                     	;# 
  4790  010E                     	;# 
  4791  010F                     	;# 
  4792  010F                     	;# 
  4793  0110                     	;# 
  4794  0111                     	;# 
  4795  0112                     	;# 
  4796  0113                     	;# 
  4797  0114                     	;# 
  4798  0115                     	;# 
  4799  0116                     	;# 
  4800  0117                     	;# 
  4801  0118                     	;# 
  4802  0119                     	;# 
  4803  0119                     	;# 
  4804  0119                     	;# 
  4805  011A                     	;# 
  4806  011A                     	;# 
  4807  011A                     	;# 
  4808  011B                     	;# 
  4809  011B                     	;# 
  4810  011B                     	;# 
  4811  011B                     	;# 
  4812  011B                     	;# 
  4813  011C                     	;# 
  4814  011C                     	;# 
  4815  011C                     	;# 
  4816  011D                     	;# 
  4817  011D                     	;# 
  4818  011D                     	;# 
  4819  011E                     	;# 
  4820  011E                     	;# 
  4821  011E                     	;# 
  4822  011F                     	;# 
  4823  011F                     	;# 
  4824  011F                     	;# 
  4825  011F                     	;# 
  4826  011F                     	;# 
  4827  018C                     	;# 
  4828  018D                     	;# 
  4829  018E                     	;# 
  4830  018F                     	;# 
  4831  0190                     	;# 
  4832  0191                     	;# 
  4833  0192                     	;# 
  4834  0196                     	;# 
  4835  0197                     	;# 
  4836  0198                     	;# 
  4837  0199                     	;# 
  4838  019A                     	;# 
  4839  019B                     	;# 
  4840  019C                     	;# 
  4841  020C                     	;# 
  4842  020D                     	;# 
  4843  020E                     	;# 
  4844  020E                     	;# 
  4845  020F                     	;# 
  4846  020F                     	;# 
  4847  0210                     	;# 
  4848  0210                     	;# 
  4849  0211                     	;# 
  4850  0211                     	;# 
  4851  0212                     	;# 
  4852  0213                     	;# 
  4853  0214                     	;# 
  4854  0214                     	;# 
  4855  0215                     	;# 
  4856  0215                     	;# 
  4857  0216                     	;# 
  4858  0216                     	;# 
  4859  0217                     	;# 
  4860  0217                     	;# 
  4861  0218                     	;# 
  4862  0219                     	;# 
  4863  021A                     	;# 
  4864  021A                     	;# 
  4865  021B                     	;# 
  4866  021B                     	;# 
  4867  021C                     	;# 
  4868  021C                     	;# 
  4869  021D                     	;# 
  4870  021D                     	;# 
  4871  021E                     	;# 
  4872  021F                     	;# 
  4873  028C                     	;# 
  4874  028C                     	;# 
  4875  028D                     	;# 
  4876  028D                     	;# 
  4877  028E                     	;# 
  4878  028F                     	;# 
  4879  0290                     	;# 
  4880  0291                     	;# 
  4881  0292                     	;# 
  4882  0292                     	;# 
  4883  0293                     	;# 
  4884  0293                     	;# 
  4885  0294                     	;# 
  4886  0295                     	;# 
  4887  0296                     	;# 
  4888  0297                     	;# 
  4889  0298                     	;# 
  4890  0298                     	;# 
  4891  0299                     	;# 
  4892  0299                     	;# 
  4893  029A                     	;# 
  4894  029B                     	;# 
  4895  029C                     	;# 
  4896  029D                     	;# 
  4897  029F                     	;# 
  4898  030C                     	;# 
  4899  030C                     	;# 
  4900  030D                     	;# 
  4901  030E                     	;# 
  4902  030F                     	;# 
  4903  0310                     	;# 
  4904  0310                     	;# 
  4905  0311                     	;# 
  4906  0312                     	;# 
  4907  0313                     	;# 
  4908  0314                     	;# 
  4909  0314                     	;# 
  4910  0315                     	;# 
  4911  0316                     	;# 
  4912  0317                     	;# 
  4913  0318                     	;# 
  4914  0318                     	;# 
  4915  0319                     	;# 
  4916  031A                     	;# 
  4917  031B                     	;# 
  4918  038C                     	;# 
  4919  038C                     	;# 
  4920  038D                     	;# 
  4921  038E                     	;# 
  4922  0390                     	;# 
  4923  0390                     	;# 
  4924  0391                     	;# 
  4925  0392                     	;# 
  4926  048C                     	;# 
  4927  048C                     	;# 
  4928  048D                     	;# 
  4929  048E                     	;# 
  4930  048F                     	;# 
  4931  048F                     	;# 
  4932  0490                     	;# 
  4933  0491                     	;# 
  4934  0492                     	;# 
  4935  0492                     	;# 
  4936  0493                     	;# 
  4937  0494                     	;# 
  4938  0495                     	;# 
  4939  0495                     	;# 
  4940  0496                     	;# 
  4941  0497                     	;# 
  4942  0498                     	;# 
  4943  0499                     	;# 
  4944  049A                     	;# 
  4945  049B                     	;# 
  4946  049C                     	;# 
  4947  049D                     	;# 
  4948  058C                     	;# 
  4949  058C                     	;# 
  4950  058D                     	;# 
  4951  058E                     	;# 
  4952  058F                     	;# 
  4953  058F                     	;# 
  4954  0590                     	;# 
  4955  0591                     	;# 
  4956  0592                     	;# 
  4957  0593                     	;# 
  4958  059C                     	;# 
  4959  059C                     	;# 
  4960  059D                     	;# 
  4961  059D                     	;# 
  4962  059E                     	;# 
  4963  059F                     	;# 
  4964  060C                     	;# 
  4965  060C                     	;# 
  4966  060D                     	;# 
  4967  060D                     	;# 
  4968  060E                     	;# 
  4969  060F                     	;# 
  4970  0610                     	;# 
  4971  0611                     	;# 
  4972  0612                     	;# 
  4973  0613                     	;# 
  4974  0614                     	;# 
  4975  0616                     	;# 
  4976  0616                     	;# 
  4977  0617                     	;# 
  4978  0617                     	;# 
  4979  0618                     	;# 
  4980  0619                     	;# 
  4981  061A                     	;# 
  4982  061B                     	;# 
  4983  061C                     	;# 
  4984  061D                     	;# 
  4985  061E                     	;# 
  4986  070C                     	;# 
  4987  070D                     	;# 
  4988  070E                     	;# 
  4989  070F                     	;# 
  4990  0710                     	;# 
  4991  0711                     	;# 
  4992  0712                     	;# 
  4993  0713                     	;# 
  4994  0714                     	;# 
  4995  0716                     	;# 
  4996  0717                     	;# 
  4997  0718                     	;# 
  4998  0719                     	;# 
  4999  071A                     	;# 
  5000  071B                     	;# 
  5001  071C                     	;# 
  5002  071D                     	;# 
  5003  071E                     	;# 
  5004  0796                     	;# 
  5005  0797                     	;# 
  5006  0798                     	;# 
  5007  0799                     	;# 
  5008  079A                     	;# 
  5009  079B                     	;# 
  5010  079C                     	;# 
  5011  079D                     	;# 
  5012  080C                     	;# 
  5013  080D                     	;# 
  5014  080E                     	;# 
  5015  080F                     	;# 
  5016  0810                     	;# 
  5017  0811                     	;# 
  5018  0812                     	;# 
  5019  0813                     	;# 
  5020  0814                     	;# 
  5021  081A                     	;# 
  5022  081A                     	;# 
  5023  081B                     	;# 
  5024  081C                     	;# 
  5025  081C                     	;# 
  5026  081D                     	;# 
  5027  081E                     	;# 
  5028  081F                     	;# 
  5029  088C                     	;# 
  5030  088D                     	;# 
  5031  088E                     	;# 
  5032  088F                     	;# 
  5033  0890                     	;# 
  5034  0891                     	;# 
  5035  0892                     	;# 
  5036  0893                     	;# 
  5037  0895                     	;# 
  5038  0896                     	;# 
  5039  0897                     	;# 
  5040  0898                     	;# 
  5041  0899                     	;# 
  5042  089A                     	;# 
  5043  089B                     	;# 
  5044  090C                     	;# 
  5045  090E                     	;# 
  5046  090F                     	;# 
  5047  091F                     	;# 
  5048  098F                     	;# 
  5049  098F                     	;# 
  5050  0990                     	;# 
  5051  0991                     	;# 
  5052  0992                     	;# 
  5053  0993                     	;# 
  5054  0994                     	;# 
  5055  0995                     	;# 
  5056  0996                     	;# 
  5057  0997                     	;# 
  5058  1E0F                     	;# 
  5059  1E10                     	;# 
  5060  1E11                     	;# 
  5061  1E12                     	;# 
  5062  1E13                     	;# 
  5063  1E14                     	;# 
  5064  1E15                     	;# 
  5065  1E16                     	;# 
  5066  1E17                     	;# 
  5067  1E18                     	;# 
  5068  1E19                     	;# 
  5069  1E1A                     	;# 
  5070  1E1B                     	;# 
  5071  1E1C                     	;# 
  5072  1E1D                     	;# 
  5073  1E1E                     	;# 
  5074  1E1F                     	;# 
  5075  1E20                     	;# 
  5076  1E21                     	;# 
  5077  1E22                     	;# 
  5078  1E23                     	;# 
  5079  1E24                     	;# 
  5080  1E25                     	;# 
  5081  1E26                     	;# 
  5082  1E27                     	;# 
  5083  1E28                     	;# 
  5084  1E29                     	;# 
  5085  1E2A                     	;# 
  5086  1E2B                     	;# 
  5087  1E2C                     	;# 
  5088  1E2D                     	;# 
  5089  1E2E                     	;# 
  5090  1E2F                     	;# 
  5091  1E30                     	;# 
  5092  1E31                     	;# 
  5093  1E32                     	;# 
  5094  1E33                     	;# 
  5095  1E34                     	;# 
  5096  1E35                     	;# 
  5097  1E36                     	;# 
  5098  1E37                     	;# 
  5099  1E8F                     	;# 
  5100  1E90                     	;# 
  5101  1E91                     	;# 
  5102  1E92                     	;# 
  5103  1E93                     	;# 
  5104  1E94                     	;# 
  5105  1E95                     	;# 
  5106  1E96                     	;# 
  5107  1E97                     	;# 
  5108  1E9C                     	;# 
  5109  1E9D                     	;# 
  5110  1E9E                     	;# 
  5111  1EA1                     	;# 
  5112  1EA2                     	;# 
  5113  1EA3                     	;# 
  5114  1EA4                     	;# 
  5115  1EA9                     	;# 
  5116  1EAA                     	;# 
  5117  1EB1                     	;# 
  5118  1EB2                     	;# 
  5119  1EB8                     	;# 
  5120  1EB9                     	;# 
  5121  1EBA                     	;# 
  5122  1EBB                     	;# 
  5123  1EBC                     	;# 
  5124  1EBD                     	;# 
  5125  1EBE                     	;# 
  5126  1EC3                     	;# 
  5127  1EC5                     	;# 
  5128  1EC6                     	;# 
  5129  1EC7                     	;# 
  5130  1EC8                     	;# 
  5131  1EC9                     	;# 
  5132  1ECA                     	;# 
  5133  1ECB                     	;# 
  5134  1ECB                     	;# 
  5135  1ECB                     	;# 
  5136  1ECC                     	;# 
  5137  1ECC                     	;# 
  5138  1ECC                     	;# 
  5139  1F10                     	;# 
  5140  1F11                     	;# 
  5141  1F12                     	;# 
  5142  1F14                     	;# 
  5143  1F15                     	;# 
  5144  1F1C                     	;# 
  5145  1F1D                     	;# 
  5146  1F1E                     	;# 
  5147  1F1F                     	;# 
  5148  1F20                     	;# 
  5149  1F21                     	;# 
  5150  1F22                     	;# 
  5151  1F23                     	;# 
  5152  1F24                     	;# 
  5153  1F25                     	;# 
  5154  1F26                     	;# 
  5155  1F27                     	;# 
  5156  1F38                     	;# 
  5157  1F39                     	;# 
  5158  1F3A                     	;# 
  5159  1F3B                     	;# 
  5160  1F3C                     	;# 
  5161  1F3D                     	;# 
  5162  1F3E                     	;# 
  5163  1F3F                     	;# 
  5164  1F43                     	;# 
  5165  1F44                     	;# 
  5166  1F45                     	;# 
  5167  1F46                     	;# 
  5168  1F47                     	;# 
  5169  1F48                     	;# 
  5170  1F49                     	;# 
  5171  1F4A                     	;# 
  5172  1F4E                     	;# 
  5173  1F4F                     	;# 
  5174  1F50                     	;# 
  5175  1F51                     	;# 
  5176  1F52                     	;# 
  5177  1F53                     	;# 
  5178  1F54                     	;# 
  5179  1F55                     	;# 
  5180  1FE4                     	;# 
  5181  1FE5                     	;# 
  5182  1FE6                     	;# 
  5183  1FE7                     	;# 
  5184  1FE8                     	;# 
  5185  1FE8                     	;# 
  5186  1FE9                     	;# 
  5187  1FEA                     	;# 
  5188  1FEB                     	;# 
  5189  1FED                     	;# 
  5190  1FEE                     	;# 
  5191  1FEF                     	;# 
  5192  0000                     	;# 
  5193  0001                     	;# 
  5194  0002                     	;# 
  5195  0003                     	;# 
  5196  0004                     	;# 
  5197  0005                     	;# 
  5198  0006                     	;# 
  5199  0007                     	;# 
  5200  0008                     	;# 
  5201  0009                     	;# 
  5202  000A                     	;# 
  5203  000B                     	;# 
  5204  000C                     	;# 
  5205  000D                     	;# 
  5206  000E                     	;# 
  5207  0012                     	;# 
  5208  0013                     	;# 
  5209  0014                     	;# 
  5210  0018                     	;# 
  5211  0019                     	;# 
  5212  001A                     	;# 
  5213  008C                     	;# 
  5214  008C                     	;# 
  5215  008D                     	;# 
  5216  008E                     	;# 
  5217  008E                     	;# 
  5218  008F                     	;# 
  5219  0090                     	;# 
  5220  0090                     	;# 
  5221  0091                     	;# 
  5222  0092                     	;# 
  5223  0092                     	;# 
  5224  0093                     	;# 
  5225  0094                     	;# 
  5226  0094                     	;# 
  5227  0095                     	;# 
  5228  0096                     	;# 
  5229  0096                     	;# 
  5230  0097                     	;# 
  5231  0098                     	;# 
  5232  0099                     	;# 
  5233  009A                     	;# 
  5234  009B                     	;# 
  5235  009B                     	;# 
  5236  009C                     	;# 
  5237  009D                     	;# 
  5238  009D                     	;# 
  5239  009E                     	;# 
  5240  009F                     	;# 
  5241  010C                     	;# 
  5242  010C                     	;# 
  5243  010D                     	;# 
  5244  010E                     	;# 
  5245  010F                     	;# 
  5246  010F                     	;# 
  5247  0110                     	;# 
  5248  0111                     	;# 
  5249  0112                     	;# 
  5250  0113                     	;# 
  5251  0114                     	;# 
  5252  0115                     	;# 
  5253  0116                     	;# 
  5254  0117                     	;# 
  5255  0118                     	;# 
  5256  0119                     	;# 
  5257  0119                     	;# 
  5258  0119                     	;# 
  5259  011A                     	;# 
  5260  011A                     	;# 
  5261  011A                     	;# 
  5262  011B                     	;# 
  5263  011B                     	;# 
  5264  011B                     	;# 
  5265  011B                     	;# 
  5266  011B                     	;# 
  5267  011C                     	;# 
  5268  011C                     	;# 
  5269  011C                     	;# 
  5270  011D                     	;# 
  5271  011D                     	;# 
  5272  011D                     	;# 
  5273  011E                     	;# 
  5274  011E                     	;# 
  5275  011E                     	;# 
  5276  011F                     	;# 
  5277  011F                     	;# 
  5278  011F                     	;# 
  5279  011F                     	;# 
  5280  011F                     	;# 
  5281  018C                     	;# 
  5282  018D                     	;# 
  5283  018E                     	;# 
  5284  018F                     	;# 
  5285  0190                     	;# 
  5286  0191                     	;# 
  5287  0192                     	;# 
  5288  0196                     	;# 
  5289  0197                     	;# 
  5290  0198                     	;# 
  5291  0199                     	;# 
  5292  019A                     	;# 
  5293  019B                     	;# 
  5294  019C                     	;# 
  5295  020C                     	;# 
  5296  020D                     	;# 
  5297  020E                     	;# 
  5298  020E                     	;# 
  5299  020F                     	;# 
  5300  020F                     	;# 
  5301  0210                     	;# 
  5302  0210                     	;# 
  5303  0211                     	;# 
  5304  0211                     	;# 
  5305  0212                     	;# 
  5306  0213                     	;# 
  5307  0214                     	;# 
  5308  0214                     	;# 
  5309  0215                     	;# 
  5310  0215                     	;# 
  5311  0216                     	;# 
  5312  0216                     	;# 
  5313  0217                     	;# 
  5314  0217                     	;# 
  5315  0218                     	;# 
  5316  0219                     	;# 
  5317  021A                     	;# 
  5318  021A                     	;# 
  5319  021B                     	;# 
  5320  021B                     	;# 
  5321  021C                     	;# 
  5322  021C                     	;# 
  5323  021D                     	;# 
  5324  021D                     	;# 
  5325  021E                     	;# 
  5326  021F                     	;# 
  5327  028C                     	;# 
  5328  028C                     	;# 
  5329  028D                     	;# 
  5330  028D                     	;# 
  5331  028E                     	;# 
  5332  028F                     	;# 
  5333  0290                     	;# 
  5334  0291                     	;# 
  5335  0292                     	;# 
  5336  0292                     	;# 
  5337  0293                     	;# 
  5338  0293                     	;# 
  5339  0294                     	;# 
  5340  0295                     	;# 
  5341  0296                     	;# 
  5342  0297                     	;# 
  5343  0298                     	;# 
  5344  0298                     	;# 
  5345  0299                     	;# 
  5346  0299                     	;# 
  5347  029A                     	;# 
  5348  029B                     	;# 
  5349  029C                     	;# 
  5350  029D                     	;# 
  5351  029F                     	;# 
  5352  030C                     	;# 
  5353  030C                     	;# 
  5354  030D                     	;# 
  5355  030E                     	;# 
  5356  030F                     	;# 
  5357  0310                     	;# 
  5358  0310                     	;# 
  5359  0311                     	;# 
  5360  0312                     	;# 
  5361  0313                     	;# 
  5362  0314                     	;# 
  5363  0314                     	;# 
  5364  0315                     	;# 
  5365  0316                     	;# 
  5366  0317                     	;# 
  5367  0318                     	;# 
  5368  0318                     	;# 
  5369  0319                     	;# 
  5370  031A                     	;# 
  5371  031B                     	;# 
  5372  038C                     	;# 
  5373  038C                     	;# 
  5374  038D                     	;# 
  5375  038E                     	;# 
  5376  0390                     	;# 
  5377  0390                     	;# 
  5378  0391                     	;# 
  5379  0392                     	;# 
  5380  048C                     	;# 
  5381  048C                     	;# 
  5382  048D                     	;# 
  5383  048E                     	;# 
  5384  048F                     	;# 
  5385  048F                     	;# 
  5386  0490                     	;# 
  5387  0491                     	;# 
  5388  0492                     	;# 
  5389  0492                     	;# 
  5390  0493                     	;# 
  5391  0494                     	;# 
  5392  0495                     	;# 
  5393  0495                     	;# 
  5394  0496                     	;# 
  5395  0497                     	;# 
  5396  0498                     	;# 
  5397  0499                     	;# 
  5398  049A                     	;# 
  5399  049B                     	;# 
  5400  049C                     	;# 
  5401  049D                     	;# 
  5402  058C                     	;# 
  5403  058C                     	;# 
  5404  058D                     	;# 
  5405  058E                     	;# 
  5406  058F                     	;# 
  5407  058F                     	;# 
  5408  0590                     	;# 
  5409  0591                     	;# 
  5410  0592                     	;# 
  5411  0593                     	;# 
  5412  059C                     	;# 
  5413  059C                     	;# 
  5414  059D                     	;# 
  5415  059D                     	;# 
  5416  059E                     	;# 
  5417  059F                     	;# 
  5418  060C                     	;# 
  5419  060C                     	;# 
  5420  060D                     	;# 
  5421  060D                     	;# 
  5422  060E                     	;# 
  5423  060F                     	;# 
  5424  0610                     	;# 
  5425  0611                     	;# 
  5426  0612                     	;# 
  5427  0613                     	;# 
  5428  0614                     	;# 
  5429  0616                     	;# 
  5430  0616                     	;# 
  5431  0617                     	;# 
  5432  0617                     	;# 
  5433  0618                     	;# 
  5434  0619                     	;# 
  5435  061A                     	;# 
  5436  061B                     	;# 
  5437  061C                     	;# 
  5438  061D                     	;# 
  5439  061E                     	;# 
  5440  070C                     	;# 
  5441  070D                     	;# 
  5442  070E                     	;# 
  5443  070F                     	;# 
  5444  0710                     	;# 
  5445  0711                     	;# 
  5446  0712                     	;# 
  5447  0713                     	;# 
  5448  0714                     	;# 
  5449  0716                     	;# 
  5450  0717                     	;# 
  5451  0718                     	;# 
  5452  0719                     	;# 
  5453  071A                     	;# 
  5454  071B                     	;# 
  5455  071C                     	;# 
  5456  071D                     	;# 
  5457  071E                     	;# 
  5458  0796                     	;# 
  5459  0797                     	;# 
  5460  0798                     	;# 
  5461  0799                     	;# 
  5462  079A                     	;# 
  5463  079B                     	;# 
  5464  079C                     	;# 
  5465  079D                     	;# 
  5466  080C                     	;# 
  5467  080D                     	;# 
  5468  080E                     	;# 
  5469  080F                     	;# 
  5470  0810                     	;# 
  5471  0811                     	;# 
  5472  0812                     	;# 
  5473  0813                     	;# 
  5474  0814                     	;# 
  5475  081A                     	;# 
  5476  081A                     	;# 
  5477  081B                     	;# 
  5478  081C                     	;# 
  5479  081C                     	;# 
  5480  081D                     	;# 
  5481  081E                     	;# 
  5482  081F                     	;# 
  5483  088C                     	;# 
  5484  088D                     	;# 
  5485  088E                     	;# 
  5486  088F                     	;# 
  5487  0890                     	;# 
  5488  0891                     	;# 
  5489  0892                     	;# 
  5490  0893                     	;# 
  5491  0895                     	;# 
  5492  0896                     	;# 
  5493  0897                     	;# 
  5494  0898                     	;# 
  5495  0899                     	;# 
  5496  089A                     	;# 
  5497  089B                     	;# 
  5498  090C                     	;# 
  5499  090E                     	;# 
  5500  090F                     	;# 
  5501  091F                     	;# 
  5502  098F                     	;# 
  5503  098F                     	;# 
  5504  0990                     	;# 
  5505  0991                     	;# 
  5506  0992                     	;# 
  5507  0993                     	;# 
  5508  0994                     	;# 
  5509  0995                     	;# 
  5510  0996                     	;# 
  5511  0997                     	;# 
  5512  1E0F                     	;# 
  5513  1E10                     	;# 
  5514  1E11                     	;# 
  5515  1E12                     	;# 
  5516  1E13                     	;# 
  5517  1E14                     	;# 
  5518  1E15                     	;# 
  5519  1E16                     	;# 
  5520  1E17                     	;# 
  5521  1E18                     	;# 
  5522  1E19                     	;# 
  5523  1E1A                     	;# 
  5524  1E1B                     	;# 
  5525  1E1C                     	;# 
  5526  1E1D                     	;# 
  5527  1E1E                     	;# 
  5528  1E1F                     	;# 
  5529  1E20                     	;# 
  5530  1E21                     	;# 
  5531  1E22                     	;# 
  5532  1E23                     	;# 
  5533  1E24                     	;# 
  5534  1E25                     	;# 
  5535  1E26                     	;# 
  5536  1E27                     	;# 
  5537  1E28                     	;# 
  5538  1E29                     	;# 
  5539  1E2A                     	;# 
  5540  1E2B                     	;# 
  5541  1E2C                     	;# 
  5542  1E2D                     	;# 
  5543  1E2E                     	;# 
  5544  1E2F                     	;# 
  5545  1E30                     	;# 
  5546  1E31                     	;# 
  5547  1E32                     	;# 
  5548  1E33                     	;# 
  5549  1E34                     	;# 
  5550  1E35                     	;# 
  5551  1E36                     	;# 
  5552  1E37                     	;# 
  5553  1E8F                     	;# 
  5554  1E90                     	;# 
  5555  1E91                     	;# 
  5556  1E92                     	;# 
  5557  1E93                     	;# 
  5558  1E94                     	;# 
  5559  1E95                     	;# 
  5560  1E96                     	;# 
  5561  1E97                     	;# 
  5562  1E9C                     	;# 
  5563  1E9D                     	;# 
  5564  1E9E                     	;# 
  5565  1EA1                     	;# 
  5566  1EA2                     	;# 
  5567  1EA3                     	;# 
  5568  1EA4                     	;# 
  5569  1EA9                     	;# 
  5570  1EAA                     	;# 
  5571  1EB1                     	;# 
  5572  1EB2                     	;# 
  5573  1EB8                     	;# 
  5574  1EB9                     	;# 
  5575  1EBA                     	;# 
  5576  1EBB                     	;# 
  5577  1EBC                     	;# 
  5578  1EBD                     	;# 
  5579  1EBE                     	;# 
  5580  1EC3                     	;# 
  5581  1EC5                     	;# 
  5582  1EC6                     	;# 
  5583  1EC7                     	;# 
  5584  1EC8                     	;# 
  5585  1EC9                     	;# 
  5586  1ECA                     	;# 
  5587  1ECB                     	;# 
  5588  1ECB                     	;# 
  5589  1ECB                     	;# 
  5590  1ECC                     	;# 
  5591  1ECC                     	;# 
  5592  1ECC                     	;# 
  5593  1F10                     	;# 
  5594  1F11                     	;# 
  5595  1F12                     	;# 
  5596  1F14                     	;# 
  5597  1F15                     	;# 
  5598  1F1C                     	;# 
  5599  1F1D                     	;# 
  5600  1F1E                     	;# 
  5601  1F1F                     	;# 
  5602  1F20                     	;# 
  5603  1F21                     	;# 
  5604  1F22                     	;# 
  5605  1F23                     	;# 
  5606  1F24                     	;# 
  5607  1F25                     	;# 
  5608  1F26                     	;# 
  5609  1F27                     	;# 
  5610  1F38                     	;# 
  5611  1F39                     	;# 
  5612  1F3A                     	;# 
  5613  1F3B                     	;# 
  5614  1F3C                     	;# 
  5615  1F3D                     	;# 
  5616  1F3E                     	;# 
  5617  1F3F                     	;# 
  5618  1F43                     	;# 
  5619  1F44                     	;# 
  5620  1F45                     	;# 
  5621  1F46                     	;# 
  5622  1F47                     	;# 
  5623  1F48                     	;# 
  5624  1F49                     	;# 
  5625  1F4A                     	;# 
  5626  1F4E                     	;# 
  5627  1F4F                     	;# 
  5628  1F50                     	;# 
  5629  1F51                     	;# 
  5630  1F52                     	;# 
  5631  1F53                     	;# 
  5632  1F54                     	;# 
  5633  1F55                     	;# 
  5634  1FE4                     	;# 
  5635  1FE5                     	;# 
  5636  1FE6                     	;# 
  5637  1FE7                     	;# 
  5638  1FE8                     	;# 
  5639  1FE8                     	;# 
  5640  1FE9                     	;# 
  5641  1FEA                     	;# 
  5642  1FEB                     	;# 
  5643  1FED                     	;# 
  5644  1FEE                     	;# 
  5645  1FEF                     	;# 
  5646  0000                     	;# 
  5647  0001                     	;# 
  5648  0002                     	;# 
  5649  0003                     	;# 
  5650  0004                     	;# 
  5651  0005                     	;# 
  5652  0006                     	;# 
  5653  0007                     	;# 
  5654  0008                     	;# 
  5655  0009                     	;# 
  5656  000A                     	;# 
  5657  000B                     	;# 
  5658  000C                     	;# 
  5659  000D                     	;# 
  5660  000E                     	;# 
  5661  0012                     	;# 
  5662  0013                     	;# 
  5663  0014                     	;# 
  5664  0018                     	;# 
  5665  0019                     	;# 
  5666  001A                     	;# 
  5667  008C                     	;# 
  5668  008C                     	;# 
  5669  008D                     	;# 
  5670  008E                     	;# 
  5671  008E                     	;# 
  5672  008F                     	;# 
  5673  0090                     	;# 
  5674  0090                     	;# 
  5675  0091                     	;# 
  5676  0092                     	;# 
  5677  0092                     	;# 
  5678  0093                     	;# 
  5679  0094                     	;# 
  5680  0094                     	;# 
  5681  0095                     	;# 
  5682  0096                     	;# 
  5683  0096                     	;# 
  5684  0097                     	;# 
  5685  0098                     	;# 
  5686  0099                     	;# 
  5687  009A                     	;# 
  5688  009B                     	;# 
  5689  009B                     	;# 
  5690  009C                     	;# 
  5691  009D                     	;# 
  5692  009D                     	;# 
  5693  009E                     	;# 
  5694  009F                     	;# 
  5695  010C                     	;# 
  5696  010C                     	;# 
  5697  010D                     	;# 
  5698  010E                     	;# 
  5699  010F                     	;# 
  5700  010F                     	;# 
  5701  0110                     	;# 
  5702  0111                     	;# 
  5703  0112                     	;# 
  5704  0113                     	;# 
  5705  0114                     	;# 
  5706  0115                     	;# 
  5707  0116                     	;# 
  5708  0117                     	;# 
  5709  0118                     	;# 
  5710  0119                     	;# 
  5711  0119                     	;# 
  5712  0119                     	;# 
  5713  011A                     	;# 
  5714  011A                     	;# 
  5715  011A                     	;# 
  5716  011B                     	;# 
  5717  011B                     	;# 
  5718  011B                     	;# 
  5719  011B                     	;# 
  5720  011B                     	;# 
  5721  011C                     	;# 
  5722  011C                     	;# 
  5723  011C                     	;# 
  5724  011D                     	;# 
  5725  011D                     	;# 
  5726  011D                     	;# 
  5727  011E                     	;# 
  5728  011E                     	;# 
  5729  011E                     	;# 
  5730  011F                     	;# 
  5731  011F                     	;# 
  5732  011F                     	;# 
  5733  011F                     	;# 
  5734  011F                     	;# 
  5735  018C                     	;# 
  5736  018D                     	;# 
  5737  018E                     	;# 
  5738  018F                     	;# 
  5739  0190                     	;# 
  5740  0191                     	;# 
  5741  0192                     	;# 
  5742  0196                     	;# 
  5743  0197                     	;# 
  5744  0198                     	;# 
  5745  0199                     	;# 
  5746  019A                     	;# 
  5747  019B                     	;# 
  5748  019C                     	;# 
  5749  020C                     	;# 
  5750  020D                     	;# 
  5751  020E                     	;# 
  5752  020E                     	;# 
  5753  020F                     	;# 
  5754  020F                     	;# 
  5755  0210                     	;# 
  5756  0210                     	;# 
  5757  0211                     	;# 
  5758  0211                     	;# 
  5759  0212                     	;# 
  5760  0213                     	;# 
  5761  0214                     	;# 
  5762  0214                     	;# 
  5763  0215                     	;# 
  5764  0215                     	;# 
  5765  0216                     	;# 
  5766  0216                     	;# 
  5767  0217                     	;# 
  5768  0217                     	;# 
  5769  0218                     	;# 
  5770  0219                     	;# 
  5771  021A                     	;# 
  5772  021A                     	;# 
  5773  021B                     	;# 
  5774  021B                     	;# 
  5775  021C                     	;# 
  5776  021C                     	;# 
  5777  021D                     	;# 
  5778  021D                     	;# 
  5779  021E                     	;# 
  5780  021F                     	;# 
  5781  028C                     	;# 
  5782  028C                     	;# 
  5783  028D                     	;# 
  5784  028D                     	;# 
  5785  028E                     	;# 
  5786  028F                     	;# 
  5787  0290                     	;# 
  5788  0291                     	;# 
  5789  0292                     	;# 
  5790  0292                     	;# 
  5791  0293                     	;# 
  5792  0293                     	;# 
  5793  0294                     	;# 
  5794  0295                     	;# 
  5795  0296                     	;# 
  5796  0297                     	;# 
  5797  0298                     	;# 
  5798  0298                     	;# 
  5799  0299                     	;# 
  5800  0299                     	;# 
  5801  029A                     	;# 
  5802  029B                     	;# 
  5803  029C                     	;# 
  5804  029D                     	;# 
  5805  029F                     	;# 
  5806  030C                     	;# 
  5807  030C                     	;# 
  5808  030D                     	;# 
  5809  030E                     	;# 
  5810  030F                     	;# 
  5811  0310                     	;# 
  5812  0310                     	;# 
  5813  0311                     	;# 
  5814  0312                     	;# 
  5815  0313                     	;# 
  5816  0314                     	;# 
  5817  0314                     	;# 
  5818  0315                     	;# 
  5819  0316                     	;# 
  5820  0317                     	;# 
  5821  0318                     	;# 
  5822  0318                     	;# 
  5823  0319                     	;# 
  5824  031A                     	;# 
  5825  031B                     	;# 
  5826  038C                     	;# 
  5827  038C                     	;# 
  5828  038D                     	;# 
  5829  038E                     	;# 
  5830  0390                     	;# 
  5831  0390                     	;# 
  5832  0391                     	;# 
  5833  0392                     	;# 
  5834  048C                     	;# 
  5835  048C                     	;# 
  5836  048D                     	;# 
  5837  048E                     	;# 
  5838  048F                     	;# 
  5839  048F                     	;# 
  5840  0490                     	;# 
  5841  0491                     	;# 
  5842  0492                     	;# 
  5843  0492                     	;# 
  5844  0493                     	;# 
  5845  0494                     	;# 
  5846  0495                     	;# 
  5847  0495                     	;# 
  5848  0496                     	;# 
  5849  0497                     	;# 
  5850  0498                     	;# 
  5851  0499                     	;# 
  5852  049A                     	;# 
  5853  049B                     	;# 
  5854  049C                     	;# 
  5855  049D                     	;# 
  5856  058C                     	;# 
  5857  058C                     	;# 
  5858  058D                     	;# 
  5859  058E                     	;# 
  5860  058F                     	;# 
  5861  058F                     	;# 
  5862  0590                     	;# 
  5863  0591                     	;# 
  5864  0592                     	;# 
  5865  0593                     	;# 
  5866  059C                     	;# 
  5867  059C                     	;# 
  5868  059D                     	;# 
  5869  059D                     	;# 
  5870  059E                     	;# 
  5871  059F                     	;# 
  5872  060C                     	;# 
  5873  060C                     	;# 
  5874  060D                     	;# 
  5875  060D                     	;# 
  5876  060E                     	;# 
  5877  060F                     	;# 
  5878  0610                     	;# 
  5879  0611                     	;# 
  5880  0612                     	;# 
  5881  0613                     	;# 
  5882  0614                     	;# 
  5883  0616                     	;# 
  5884  0616                     	;# 
  5885  0617                     	;# 
  5886  0617                     	;# 
  5887  0618                     	;# 
  5888  0619                     	;# 
  5889  061A                     	;# 
  5890  061B                     	;# 
  5891  061C                     	;# 
  5892  061D                     	;# 
  5893  061E                     	;# 
  5894  070C                     	;# 
  5895  070D                     	;# 
  5896  070E                     	;# 
  5897  070F                     	;# 
  5898  0710                     	;# 
  5899  0711                     	;# 
  5900  0712                     	;# 
  5901  0713                     	;# 
  5902  0714                     	;# 
  5903  0716                     	;# 
  5904  0717                     	;# 
  5905  0718                     	;# 
  5906  0719                     	;# 
  5907  071A                     	;# 
  5908  071B                     	;# 
  5909  071C                     	;# 
  5910  071D                     	;# 
  5911  071E                     	;# 
  5912  0796                     	;# 
  5913  0797                     	;# 
  5914  0798                     	;# 
  5915  0799                     	;# 
  5916  079A                     	;# 
  5917  079B                     	;# 
  5918  079C                     	;# 
  5919  079D                     	;# 
  5920  080C                     	;# 
  5921  080D                     	;# 
  5922  080E                     	;# 
  5923  080F                     	;# 
  5924  0810                     	;# 
  5925  0811                     	;# 
  5926  0812                     	;# 
  5927  0813                     	;# 
  5928  0814                     	;# 
  5929  081A                     	;# 
  5930  081A                     	;# 
  5931  081B                     	;# 
  5932  081C                     	;# 
  5933  081C                     	;# 
  5934  081D                     	;# 
  5935  081E                     	;# 
  5936  081F                     	;# 
  5937  088C                     	;# 
  5938  088D                     	;# 
  5939  088E                     	;# 
  5940  088F                     	;# 
  5941  0890                     	;# 
  5942  0891                     	;# 
  5943  0892                     	;# 
  5944  0893                     	;# 
  5945  0895                     	;# 
  5946  0896                     	;# 
  5947  0897                     	;# 
  5948  0898                     	;# 
  5949  0899                     	;# 
  5950  089A                     	;# 
  5951  089B                     	;# 
  5952  090C                     	;# 
  5953  090E                     	;# 
  5954  090F                     	;# 
  5955  091F                     	;# 
  5956  098F                     	;# 
  5957  098F                     	;# 
  5958  0990                     	;# 
  5959  0991                     	;# 
  5960  0992                     	;# 
  5961  0993                     	;# 
  5962  0994                     	;# 
  5963  0995                     	;# 
  5964  0996                     	;# 
  5965  0997                     	;# 
  5966  1E0F                     	;# 
  5967  1E10                     	;# 
  5968  1E11                     	;# 
  5969  1E12                     	;# 
  5970  1E13                     	;# 
  5971  1E14                     	;# 
  5972  1E15                     	;# 
  5973  1E16                     	;# 
  5974  1E17                     	;# 
  5975  1E18                     	;# 
  5976  1E19                     	;# 
  5977  1E1A                     	;# 
  5978  1E1B                     	;# 
  5979  1E1C                     	;# 
  5980  1E1D                     	;# 
  5981  1E1E                     	;# 
  5982  1E1F                     	;# 
  5983  1E20                     	;# 
  5984  1E21                     	;# 
  5985  1E22                     	;# 
  5986  1E23                     	;# 
  5987  1E24                     	;# 
  5988  1E25                     	;# 
  5989  1E26                     	;# 
  5990  1E27                     	;# 
  5991  1E28                     	;# 
  5992  1E29                     	;# 
  5993  1E2A                     	;# 
  5994  1E2B                     	;# 
  5995  1E2C                     	;# 
  5996  1E2D                     	;# 
  5997  1E2E                     	;# 
  5998  1E2F                     	;# 
  5999  1E30                     	;# 
  6000  1E31                     	;# 
  6001  1E32                     	;# 
  6002  1E33                     	;# 
  6003  1E34                     	;# 
  6004  1E35                     	;# 
  6005  1E36                     	;# 
  6006  1E37                     	;# 
  6007  1E8F                     	;# 
  6008  1E90                     	;# 
  6009  1E91                     	;# 
  6010  1E92                     	;# 
  6011  1E93                     	;# 
  6012  1E94                     	;# 
  6013  1E95                     	;# 
  6014  1E96                     	;# 
  6015  1E97                     	;# 
  6016  1E9C                     	;# 
  6017  1E9D                     	;# 
  6018  1E9E                     	;# 
  6019  1EA1                     	;# 
  6020  1EA2                     	;# 
  6021  1EA3                     	;# 
  6022  1EA4                     	;# 
  6023  1EA9                     	;# 
  6024  1EAA                     	;# 
  6025  1EB1                     	;# 
  6026  1EB2                     	;# 
  6027  1EB8                     	;# 
  6028  1EB9                     	;# 
  6029  1EBA                     	;# 
  6030  1EBB                     	;# 
  6031  1EBC                     	;# 
  6032  1EBD                     	;# 
  6033  1EBE                     	;# 
  6034  1EC3                     	;# 
  6035  1EC5                     	;# 
  6036  1EC6                     	;# 
  6037  1EC7                     	;# 
  6038  1EC8                     	;# 
  6039  1EC9                     	;# 
  6040  1ECA                     	;# 
  6041  1ECB                     	;# 
  6042  1ECB                     	;# 
  6043  1ECB                     	;# 
  6044  1ECC                     	;# 
  6045  1ECC                     	;# 
  6046  1ECC                     	;# 
  6047  1F10                     	;# 
  6048  1F11                     	;# 
  6049  1F12                     	;# 
  6050  1F14                     	;# 
  6051  1F15                     	;# 
  6052  1F1C                     	;# 
  6053  1F1D                     	;# 
  6054  1F1E                     	;# 
  6055  1F1F                     	;# 
  6056  1F20                     	;# 
  6057  1F21                     	;# 
  6058  1F22                     	;# 
  6059  1F23                     	;# 
  6060  1F24                     	;# 
  6061  1F25                     	;# 
  6062  1F26                     	;# 
  6063  1F27                     	;# 
  6064  1F38                     	;# 
  6065  1F39                     	;# 
  6066  1F3A                     	;# 
  6067  1F3B                     	;# 
  6068  1F3C                     	;# 
  6069  1F3D                     	;# 
  6070  1F3E                     	;# 
  6071  1F3F                     	;# 
  6072  1F43                     	;# 
  6073  1F44                     	;# 
  6074  1F45                     	;# 
  6075  1F46                     	;# 
  6076  1F47                     	;# 
  6077  1F48                     	;# 
  6078  1F49                     	;# 
  6079  1F4A                     	;# 
  6080  1F4E                     	;# 
  6081  1F4F                     	;# 
  6082  1F50                     	;# 
  6083  1F51                     	;# 
  6084  1F52                     	;# 
  6085  1F53                     	;# 
  6086  1F54                     	;# 
  6087  1F55                     	;# 
  6088  1FE4                     	;# 
  6089  1FE5                     	;# 
  6090  1FE6                     	;# 
  6091  1FE7                     	;# 
  6092  1FE8                     	;# 
  6093  1FE8                     	;# 
  6094  1FE9                     	;# 
  6095  1FEA                     	;# 
  6096  1FEB                     	;# 
  6097  1FED                     	;# 
  6098  1FEE                     	;# 
  6099  1FEF                     	;# 
  6100  0000                     	;# 
  6101  0001                     	;# 
  6102  0002                     	;# 
  6103  0003                     	;# 
  6104  0004                     	;# 
  6105  0005                     	;# 
  6106  0006                     	;# 
  6107  0007                     	;# 
  6108  0008                     	;# 
  6109  0009                     	;# 
  6110  000A                     	;# 
  6111  000B                     	;# 
  6112  000C                     	;# 
  6113  000D                     	;# 
  6114  000E                     	;# 
  6115  0012                     	;# 
  6116  0013                     	;# 
  6117  0014                     	;# 
  6118  0018                     	;# 
  6119  0019                     	;# 
  6120  001A                     	;# 
  6121  008C                     	;# 
  6122  008C                     	;# 
  6123  008D                     	;# 
  6124  008E                     	;# 
  6125  008E                     	;# 
  6126  008F                     	;# 
  6127  0090                     	;# 
  6128  0090                     	;# 
  6129  0091                     	;# 
  6130  0092                     	;# 
  6131  0092                     	;# 
  6132  0093                     	;# 
  6133  0094                     	;# 
  6134  0094                     	;# 
  6135  0095                     	;# 
  6136  0096                     	;# 
  6137  0096                     	;# 
  6138  0097                     	;# 
  6139  0098                     	;# 
  6140  0099                     	;# 
  6141  009A                     	;# 
  6142  009B                     	;# 
  6143  009B                     	;# 
  6144  009C                     	;# 
  6145  009D                     	;# 
  6146  009D                     	;# 
  6147  009E                     	;# 
  6148  009F                     	;# 
  6149  010C                     	;# 
  6150  010C                     	;# 
  6151  010D                     	;# 
  6152  010E                     	;# 
  6153  010F                     	;# 
  6154  010F                     	;# 
  6155  0110                     	;# 
  6156  0111                     	;# 
  6157  0112                     	;# 
  6158  0113                     	;# 
  6159  0114                     	;# 
  6160  0115                     	;# 
  6161  0116                     	;# 
  6162  0117                     	;# 
  6163  0118                     	;# 
  6164  0119                     	;# 
  6165  0119                     	;# 
  6166  0119                     	;# 
  6167  011A                     	;# 
  6168  011A                     	;# 
  6169  011A                     	;# 
  6170  011B                     	;# 
  6171  011B                     	;# 
  6172  011B                     	;# 
  6173  011B                     	;# 
  6174  011B                     	;# 
  6175  011C                     	;# 
  6176  011C                     	;# 
  6177  011C                     	;# 
  6178  011D                     	;# 
  6179  011D                     	;# 
  6180  011D                     	;# 
  6181  011E                     	;# 
  6182  011E                     	;# 
  6183  011E                     	;# 
  6184  011F                     	;# 
  6185  011F                     	;# 
  6186  011F                     	;# 
  6187  011F                     	;# 
  6188  011F                     	;# 
  6189  018C                     	;# 
  6190  018D                     	;# 
  6191  018E                     	;# 
  6192  018F                     	;# 
  6193  0190                     	;# 
  6194  0191                     	;# 
  6195  0192                     	;# 
  6196  0196                     	;# 
  6197  0197                     	;# 
  6198  0198                     	;# 
  6199  0199                     	;# 
  6200  019A                     	;# 
  6201  019B                     	;# 
  6202  019C                     	;# 
  6203  020C                     	;# 
  6204  020D                     	;# 
  6205  020E                     	;# 
  6206  020E                     	;# 
  6207  020F                     	;# 
  6208  020F                     	;# 
  6209  0210                     	;# 
  6210  0210                     	;# 
  6211  0211                     	;# 
  6212  0211                     	;# 
  6213  0212                     	;# 
  6214  0213                     	;# 
  6215  0214                     	;# 
  6216  0214                     	;# 
  6217  0215                     	;# 
  6218  0215                     	;# 
  6219  0216                     	;# 
  6220  0216                     	;# 
  6221  0217                     	;# 
  6222  0217                     	;# 
  6223  0218                     	;# 
  6224  0219                     	;# 
  6225  021A                     	;# 
  6226  021A                     	;# 
  6227  021B                     	;# 
  6228  021B                     	;# 
  6229  021C                     	;# 
  6230  021C                     	;# 
  6231  021D                     	;# 
  6232  021D                     	;# 
  6233  021E                     	;# 
  6234  021F                     	;# 
  6235  028C                     	;# 
  6236  028C                     	;# 
  6237  028D                     	;# 
  6238  028D                     	;# 
  6239  028E                     	;# 
  6240  028F                     	;# 
  6241  0290                     	;# 
  6242  0291                     	;# 
  6243  0292                     	;# 
  6244  0292                     	;# 
  6245  0293                     	;# 
  6246  0293                     	;# 
  6247  0294                     	;# 
  6248  0295                     	;# 
  6249  0296                     	;# 
  6250  0297                     	;# 
  6251  0298                     	;# 
  6252  0298                     	;# 
  6253  0299                     	;# 
  6254  0299                     	;# 
  6255  029A                     	;# 
  6256  029B                     	;# 
  6257  029C                     	;# 
  6258  029D                     	;# 
  6259  029F                     	;# 
  6260  030C                     	;# 
  6261  030C                     	;# 
  6262  030D                     	;# 
  6263  030E                     	;# 
  6264  030F                     	;# 
  6265  0310                     	;# 
  6266  0310                     	;# 
  6267  0311                     	;# 
  6268  0312                     	;# 
  6269  0313                     	;# 
  6270  0314                     	;# 
  6271  0314                     	;# 
  6272  0315                     	;# 
  6273  0316                     	;# 
  6274  0317                     	;# 
  6275  0318                     	;# 
  6276  0318                     	;# 
  6277  0319                     	;# 
  6278  031A                     	;# 
  6279  031B                     	;# 
  6280  038C                     	;# 
  6281  038C                     	;# 
  6282  038D                     	;# 
  6283  038E                     	;# 
  6284  0390                     	;# 
  6285  0390                     	;# 
  6286  0391                     	;# 
  6287  0392                     	;# 
  6288  048C                     	;# 
  6289  048C                     	;# 
  6290  048D                     	;# 
  6291  048E                     	;# 
  6292  048F                     	;# 
  6293  048F                     	;# 
  6294  0490                     	;# 
  6295  0491                     	;# 
  6296  0492                     	;# 
  6297  0492                     	;# 
  6298  0493                     	;# 
  6299  0494                     	;# 
  6300  0495                     	;# 
  6301  0495                     	;# 
  6302  0496                     	;# 
  6303  0497                     	;# 
  6304  0498                     	;# 
  6305  0499                     	;# 
  6306  049A                     	;# 
  6307  049B                     	;# 
  6308  049C                     	;# 
  6309  049D                     	;# 
  6310  058C                     	;# 
  6311  058C                     	;# 
  6312  058D                     	;# 
  6313  058E                     	;# 
  6314  058F                     	;# 
  6315  058F                     	;# 
  6316  0590                     	;# 
  6317  0591                     	;# 
  6318  0592                     	;# 
  6319  0593                     	;# 
  6320  059C                     	;# 
  6321  059C                     	;# 
  6322  059D                     	;# 
  6323  059D                     	;# 
  6324  059E                     	;# 
  6325  059F                     	;# 
  6326  060C                     	;# 
  6327  060C                     	;# 
  6328  060D                     	;# 
  6329  060D                     	;# 
  6330  060E                     	;# 
  6331  060F                     	;# 
  6332  0610                     	;# 
  6333  0611                     	;# 
  6334  0612                     	;# 
  6335  0613                     	;# 
  6336  0614                     	;# 
  6337  0616                     	;# 
  6338  0616                     	;# 
  6339  0617                     	;# 
  6340  0617                     	;# 
  6341  0618                     	;# 
  6342  0619                     	;# 
  6343  061A                     	;# 
  6344  061B                     	;# 
  6345  061C                     	;# 
  6346  061D                     	;# 
  6347  061E                     	;# 
  6348  070C                     	;# 
  6349  070D                     	;# 
  6350  070E                     	;# 
  6351  070F                     	;# 
  6352  0710                     	;# 
  6353  0711                     	;# 
  6354  0712                     	;# 
  6355  0713                     	;# 
  6356  0714                     	;# 
  6357  0716                     	;# 
  6358  0717                     	;# 
  6359  0718                     	;# 
  6360  0719                     	;# 
  6361  071A                     	;# 
  6362  071B                     	;# 
  6363  071C                     	;# 
  6364  071D                     	;# 
  6365  071E                     	;# 
  6366  0796                     	;# 
  6367  0797                     	;# 
  6368  0798                     	;# 
  6369  0799                     	;# 
  6370  079A                     	;# 
  6371  079B                     	;# 
  6372  079C                     	;# 
  6373  079D                     	;# 
  6374  080C                     	;# 
  6375  080D                     	;# 
  6376  080E                     	;# 
  6377  080F                     	;# 
  6378  0810                     	;# 
  6379  0811                     	;# 
  6380  0812                     	;# 
  6381  0813                     	;# 
  6382  0814                     	;# 
  6383  081A                     	;# 
  6384  081A                     	;# 
  6385  081B                     	;# 
  6386  081C                     	;# 
  6387  081C                     	;# 
  6388  081D                     	;# 
  6389  081E                     	;# 
  6390  081F                     	;# 
  6391  088C                     	;# 
  6392  088D                     	;# 
  6393  088E                     	;# 
  6394  088F                     	;# 
  6395  0890                     	;# 
  6396  0891                     	;# 
  6397  0892                     	;# 
  6398  0893                     	;# 
  6399  0895                     	;# 
  6400  0896                     	;# 
  6401  0897                     	;# 
  6402  0898                     	;# 
  6403  0899                     	;# 
  6404  089A                     	;# 
  6405  089B                     	;# 
  6406  090C                     	;# 
  6407  090E                     	;# 
  6408  090F                     	;# 
  6409  091F                     	;# 
  6410  098F                     	;# 
  6411  098F                     	;# 
  6412  0990                     	;# 
  6413  0991                     	;# 
  6414  0992                     	;# 
  6415  0993                     	;# 
  6416  0994                     	;# 
  6417  0995                     	;# 
  6418  0996                     	;# 
  6419  0997                     	;# 
  6420  1E0F                     	;# 
  6421  1E10                     	;# 
  6422  1E11                     	;# 
  6423  1E12                     	;# 
  6424  1E13                     	;# 
  6425  1E14                     	;# 
  6426  1E15                     	;# 
  6427  1E16                     	;# 
  6428  1E17                     	;# 
  6429  1E18                     	;# 
  6430  1E19                     	;# 
  6431  1E1A                     	;# 
  6432  1E1B                     	;# 
  6433  1E1C                     	;# 
  6434  1E1D                     	;# 
  6435  1E1E                     	;# 
  6436  1E1F                     	;# 
  6437  1E20                     	;# 
  6438  1E21                     	;# 
  6439  1E22                     	;# 
  6440  1E23                     	;# 
  6441  1E24                     	;# 
  6442  1E25                     	;# 
  6443  1E26                     	;# 
  6444  1E27                     	;# 
  6445  1E28                     	;# 
  6446  1E29                     	;# 
  6447  1E2A                     	;# 
  6448  1E2B                     	;# 
  6449  1E2C                     	;# 
  6450  1E2D                     	;# 
  6451  1E2E                     	;# 
  6452  1E2F                     	;# 
  6453  1E30                     	;# 
  6454  1E31                     	;# 
  6455  1E32                     	;# 
  6456  1E33                     	;# 
  6457  1E34                     	;# 
  6458  1E35                     	;# 
  6459  1E36                     	;# 
  6460  1E37                     	;# 
  6461  1E8F                     	;# 
  6462  1E90                     	;# 
  6463  1E91                     	;# 
  6464  1E92                     	;# 
  6465  1E93                     	;# 
  6466  1E94                     	;# 
  6467  1E95                     	;# 
  6468  1E96                     	;# 
  6469  1E97                     	;# 
  6470  1E9C                     	;# 
  6471  1E9D                     	;# 
  6472  1E9E                     	;# 
  6473  1EA1                     	;# 
  6474  1EA2                     	;# 
  6475  1EA3                     	;# 
  6476  1EA4                     	;# 
  6477  1EA9                     	;# 
  6478  1EAA                     	;# 
  6479  1EB1                     	;# 
  6480  1EB2                     	;# 
  6481  1EB8                     	;# 
  6482  1EB9                     	;# 
  6483  1EBA                     	;# 
  6484  1EBB                     	;# 
  6485  1EBC                     	;# 
  6486  1EBD                     	;# 
  6487  1EBE                     	;# 
  6488  1EC3                     	;# 
  6489  1EC5                     	;# 
  6490  1EC6                     	;# 
  6491  1EC7                     	;# 
  6492  1EC8                     	;# 
  6493  1EC9                     	;# 
  6494  1ECA                     	;# 
  6495  1ECB                     	;# 
  6496  1ECB                     	;# 
  6497  1ECB                     	;# 
  6498  1ECC                     	;# 
  6499  1ECC                     	;# 
  6500  1ECC                     	;# 
  6501  1F10                     	;# 
  6502  1F11                     	;# 
  6503  1F12                     	;# 
  6504  1F14                     	;# 
  6505  1F15                     	;# 
  6506  1F1C                     	;# 
  6507  1F1D                     	;# 
  6508  1F1E                     	;# 
  6509  1F1F                     	;# 
  6510  1F20                     	;# 
  6511  1F21                     	;# 
  6512  1F22                     	;# 
  6513  1F23                     	;# 
  6514  1F24                     	;# 
  6515  1F25                     	;# 
  6516  1F26                     	;# 
  6517  1F27                     	;# 
  6518  1F38                     	;# 
  6519  1F39                     	;# 
  6520  1F3A                     	;# 
  6521  1F3B                     	;# 
  6522  1F3C                     	;# 
  6523  1F3D                     	;# 
  6524  1F3E                     	;# 
  6525  1F3F                     	;# 
  6526  1F43                     	;# 
  6527  1F44                     	;# 
  6528  1F45                     	;# 
  6529  1F46                     	;# 
  6530  1F47                     	;# 
  6531  1F48                     	;# 
  6532  1F49                     	;# 
  6533  1F4A                     	;# 
  6534  1F4E                     	;# 
  6535  1F4F                     	;# 
  6536  1F50                     	;# 
  6537  1F51                     	;# 
  6538  1F52                     	;# 
  6539  1F53                     	;# 
  6540  1F54                     	;# 
  6541  1F55                     	;# 
  6542  1FE4                     	;# 
  6543  1FE5                     	;# 
  6544  1FE6                     	;# 
  6545  1FE7                     	;# 
  6546  1FE8                     	;# 
  6547  1FE8                     	;# 
  6548  1FE9                     	;# 
  6549  1FEA                     	;# 
  6550  1FEB                     	;# 
  6551  1FED                     	;# 
  6552  1FEE                     	;# 
  6553  1FEF                     	;# 
  6554  0000                     	;# 
  6555  0001                     	;# 
  6556  0002                     	;# 
  6557  0003                     	;# 
  6558  0004                     	;# 
  6559  0005                     	;# 
  6560  0006                     	;# 
  6561  0007                     	;# 
  6562  0008                     	;# 
  6563  0009                     	;# 
  6564  000A                     	;# 
  6565  000B                     	;# 
  6566  000C                     	;# 
  6567  000D                     	;# 
  6568  000E                     	;# 
  6569  0012                     	;# 
  6570  0013                     	;# 
  6571  0014                     	;# 
  6572  0018                     	;# 
  6573  0019                     	;# 
  6574  001A                     	;# 
  6575  008C                     	;# 
  6576  008C                     	;# 
  6577  008D                     	;# 
  6578  008E                     	;# 
  6579  008E                     	;# 
  6580  008F                     	;# 
  6581  0090                     	;# 
  6582  0090                     	;# 
  6583  0091                     	;# 
  6584  0092                     	;# 
  6585  0092                     	;# 
  6586  0093                     	;# 
  6587  0094                     	;# 
  6588  0094                     	;# 
  6589  0095                     	;# 
  6590  0096                     	;# 
  6591  0096                     	;# 
  6592  0097                     	;# 
  6593  0098                     	;# 
  6594  0099                     	;# 
  6595  009A                     	;# 
  6596  009B                     	;# 
  6597  009B                     	;# 
  6598  009C                     	;# 
  6599  009D                     	;# 
  6600  009D                     	;# 
  6601  009E                     	;# 
  6602  009F                     	;# 
  6603  010C                     	;# 
  6604  010C                     	;# 
  6605  010D                     	;# 
  6606  010E                     	;# 
  6607  010F                     	;# 
  6608  010F                     	;# 
  6609  0110                     	;# 
  6610  0111                     	;# 
  6611  0112                     	;# 
  6612  0113                     	;# 
  6613  0114                     	;# 
  6614  0115                     	;# 
  6615  0116                     	;# 
  6616  0117                     	;# 
  6617  0118                     	;# 
  6618  0119                     	;# 
  6619  0119                     	;# 
  6620  0119                     	;# 
  6621  011A                     	;# 
  6622  011A                     	;# 
  6623  011A                     	;# 
  6624  011B                     	;# 
  6625  011B                     	;# 
  6626  011B                     	;# 
  6627  011B                     	;# 
  6628  011B                     	;# 
  6629  011C                     	;# 
  6630  011C                     	;# 
  6631  011C                     	;# 
  6632  011D                     	;# 
  6633  011D                     	;# 
  6634  011D                     	;# 
  6635  011E                     	;# 
  6636  011E                     	;# 
  6637  011E                     	;# 
  6638  011F                     	;# 
  6639  011F                     	;# 
  6640  011F                     	;# 
  6641  011F                     	;# 
  6642  011F                     	;# 
  6643  018C                     	;# 
  6644  018D                     	;# 
  6645  018E                     	;# 
  6646  018F                     	;# 
  6647  0190                     	;# 
  6648  0191                     	;# 
  6649  0192                     	;# 
  6650  0196                     	;# 
  6651  0197                     	;# 
  6652  0198                     	;# 
  6653  0199                     	;# 
  6654  019A                     	;# 
  6655  019B                     	;# 
  6656  019C                     	;# 
  6657  020C                     	;# 
  6658  020D                     	;# 
  6659  020E                     	;# 
  6660  020E                     	;# 
  6661  020F                     	;# 
  6662  020F                     	;# 
  6663  0210                     	;# 
  6664  0210                     	;# 
  6665  0211                     	;# 
  6666  0211                     	;# 
  6667  0212                     	;# 
  6668  0213                     	;# 
  6669  0214                     	;# 
  6670  0214                     	;# 
  6671  0215                     	;# 
  6672  0215                     	;# 
  6673  0216                     	;# 
  6674  0216                     	;# 
  6675  0217                     	;# 
  6676  0217                     	;# 
  6677  0218                     	;# 
  6678  0219                     	;# 
  6679  021A                     	;# 
  6680  021A                     	;# 
  6681  021B                     	;# 
  6682  021B                     	;# 
  6683  021C                     	;# 
  6684  021C                     	;# 
  6685  021D                     	;# 
  6686  021D                     	;# 
  6687  021E                     	;# 
  6688  021F                     	;# 
  6689  028C                     	;# 
  6690  028C                     	;# 
  6691  028D                     	;# 
  6692  028D                     	;# 
  6693  028E                     	;# 
  6694  028F                     	;# 
  6695  0290                     	;# 
  6696  0291                     	;# 
  6697  0292                     	;# 
  6698  0292                     	;# 
  6699  0293                     	;# 
  6700  0293                     	;# 
  6701  0294                     	;# 
  6702  0295                     	;# 
  6703  0296                     	;# 
  6704  0297                     	;# 
  6705  0298                     	;# 
  6706  0298                     	;# 
  6707  0299                     	;# 
  6708  0299                     	;# 
  6709  029A                     	;# 
  6710  029B                     	;# 
  6711  029C                     	;# 
  6712  029D                     	;# 
  6713  029F                     	;# 
  6714  030C                     	;# 
  6715  030C                     	;# 
  6716  030D                     	;# 
  6717  030E                     	;# 
  6718  030F                     	;# 
  6719  0310                     	;# 
  6720  0310                     	;# 
  6721  0311                     	;# 
  6722  0312                     	;# 
  6723  0313                     	;# 
  6724  0314                     	;# 
  6725  0314                     	;# 
  6726  0315                     	;# 
  6727  0316                     	;# 
  6728  0317                     	;# 
  6729  0318                     	;# 
  6730  0318                     	;# 
  6731  0319                     	;# 
  6732  031A                     	;# 
  6733  031B                     	;# 
  6734  038C                     	;# 
  6735  038C                     	;# 
  6736  038D                     	;# 
  6737  038E                     	;# 
  6738  0390                     	;# 
  6739  0390                     	;# 
  6740  0391                     	;# 
  6741  0392                     	;# 
  6742  048C                     	;# 
  6743  048C                     	;# 
  6744  048D                     	;# 
  6745  048E                     	;# 
  6746  048F                     	;# 
  6747  048F                     	;# 
  6748  0490                     	;# 
  6749  0491                     	;# 
  6750  0492                     	;# 
  6751  0492                     	;# 
  6752  0493                     	;# 
  6753  0494                     	;# 
  6754  0495                     	;# 
  6755  0495                     	;# 
  6756  0496                     	;# 
  6757  0497                     	;# 
  6758  0498                     	;# 
  6759  0499                     	;# 
  6760  049A                     	;# 
  6761  049B                     	;# 
  6762  049C                     	;# 
  6763  049D                     	;# 
  6764  058C                     	;# 
  6765  058C                     	;# 
  6766  058D                     	;# 
  6767  058E                     	;# 
  6768  058F                     	;# 
  6769  058F                     	;# 
  6770  0590                     	;# 
  6771  0591                     	;# 
  6772  0592                     	;# 
  6773  0593                     	;# 
  6774  059C                     	;# 
  6775  059C                     	;# 
  6776  059D                     	;# 
  6777  059D                     	;# 
  6778  059E                     	;# 
  6779  059F                     	;# 
  6780  060C                     	;# 
  6781  060C                     	;# 
  6782  060D                     	;# 
  6783  060D                     	;# 
  6784  060E                     	;# 
  6785  060F                     	;# 
  6786  0610                     	;# 
  6787  0611                     	;# 
  6788  0612                     	;# 
  6789  0613                     	;# 
  6790  0614                     	;# 
  6791  0616                     	;# 
  6792  0616                     	;# 
  6793  0617                     	;# 
  6794  0617                     	;# 
  6795  0618                     	;# 
  6796  0619                     	;# 
  6797  061A                     	;# 
  6798  061B                     	;# 
  6799  061C                     	;# 
  6800  061D                     	;# 
  6801  061E                     	;# 
  6802  070C                     	;# 
  6803  070D                     	;# 
  6804  070E                     	;# 
  6805  070F                     	;# 
  6806  0710                     	;# 
  6807  0711                     	;# 
  6808  0712                     	;# 
  6809  0713                     	;# 
  6810  0714                     	;# 
  6811  0716                     	;# 
  6812  0717                     	;# 
  6813  0718                     	;# 
  6814  0719                     	;# 
  6815  071A                     	;# 
  6816  071B                     	;# 
  6817  071C                     	;# 
  6818  071D                     	;# 
  6819  071E                     	;# 
  6820  0796                     	;# 
  6821  0797                     	;# 
  6822  0798                     	;# 
  6823  0799                     	;# 
  6824  079A                     	;# 
  6825  079B                     	;# 
  6826  079C                     	;# 
  6827  079D                     	;# 
  6828  080C                     	;# 
  6829  080D                     	;# 
  6830  080E                     	;# 
  6831  080F                     	;# 
  6832  0810                     	;# 
  6833  0811                     	;# 
  6834  0812                     	;# 
  6835  0813                     	;# 
  6836  0814                     	;# 
  6837  081A                     	;# 
  6838  081A                     	;# 
  6839  081B                     	;# 
  6840  081C                     	;# 
  6841  081C                     	;# 
  6842  081D                     	;# 
  6843  081E                     	;# 
  6844  081F                     	;# 
  6845  088C                     	;# 
  6846  088D                     	;# 
  6847  088E                     	;# 
  6848  088F                     	;# 
  6849  0890                     	;# 
  6850  0891                     	;# 
  6851  0892                     	;# 
  6852  0893                     	;# 
  6853  0895                     	;# 
  6854  0896                     	;# 
  6855  0897                     	;# 
  6856  0898                     	;# 
  6857  0899                     	;# 
  6858  089A                     	;# 
  6859  089B                     	;# 
  6860  090C                     	;# 
  6861  090E                     	;# 
  6862  090F                     	;# 
  6863  091F                     	;# 
  6864  098F                     	;# 
  6865  098F                     	;# 
  6866  0990                     	;# 
  6867  0991                     	;# 
  6868  0992                     	;# 
  6869  0993                     	;# 
  6870  0994                     	;# 
  6871  0995                     	;# 
  6872  0996                     	;# 
  6873  0997                     	;# 
  6874  1E0F                     	;# 
  6875  1E10                     	;# 
  6876  1E11                     	;# 
  6877  1E12                     	;# 
  6878  1E13                     	;# 
  6879  1E14                     	;# 
  6880  1E15                     	;# 
  6881  1E16                     	;# 
  6882  1E17                     	;# 
  6883  1E18                     	;# 
  6884  1E19                     	;# 
  6885  1E1A                     	;# 
  6886  1E1B                     	;# 
  6887  1E1C                     	;# 
  6888  1E1D                     	;# 
  6889  1E1E                     	;# 
  6890  1E1F                     	;# 
  6891  1E20                     	;# 
  6892  1E21                     	;# 
  6893  1E22                     	;# 
  6894  1E23                     	;# 
  6895  1E24                     	;# 
  6896  1E25                     	;# 
  6897  1E26                     	;# 
  6898  1E27                     	;# 
  6899  1E28                     	;# 
  6900  1E29                     	;# 
  6901  1E2A                     	;# 
  6902  1E2B                     	;# 
  6903  1E2C                     	;# 
  6904  1E2D                     	;# 
  6905  1E2E                     	;# 
  6906  1E2F                     	;# 
  6907  1E30                     	;# 
  6908  1E31                     	;# 
  6909  1E32                     	;# 
  6910  1E33                     	;# 
  6911  1E34                     	;# 
  6912  1E35                     	;# 
  6913  1E36                     	;# 
  6914  1E37                     	;# 
  6915  1E8F                     	;# 
  6916  1E90                     	;# 
  6917  1E91                     	;# 
  6918  1E92                     	;# 
  6919  1E93                     	;# 
  6920  1E94                     	;# 
  6921  1E95                     	;# 
  6922  1E96                     	;# 
  6923  1E97                     	;# 
  6924  1E9C                     	;# 
  6925  1E9D                     	;# 
  6926  1E9E                     	;# 
  6927  1EA1                     	;# 
  6928  1EA2                     	;# 
  6929  1EA3                     	;# 
  6930  1EA4                     	;# 
  6931  1EA9                     	;# 
  6932  1EAA                     	;# 
  6933  1EB1                     	;# 
  6934  1EB2                     	;# 
  6935  1EB8                     	;# 
  6936  1EB9                     	;# 
  6937  1EBA                     	;# 
  6938  1EBB                     	;# 
  6939  1EBC                     	;# 
  6940  1EBD                     	;# 
  6941  1EBE                     	;# 
  6942  1EC3                     	;# 
  6943  1EC5                     	;# 
  6944  1EC6                     	;# 
  6945  1EC7                     	;# 
  6946  1EC8                     	;# 
  6947  1EC9                     	;# 
  6948  1ECA                     	;# 
  6949  1ECB                     	;# 
  6950  1ECB                     	;# 
  6951  1ECB                     	;# 
  6952  1ECC                     	;# 
  6953  1ECC                     	;# 
  6954  1ECC                     	;# 
  6955  1F10                     	;# 
  6956  1F11                     	;# 
  6957  1F12                     	;# 
  6958  1F14                     	;# 
  6959  1F15                     	;# 
  6960  1F1C                     	;# 
  6961  1F1D                     	;# 
  6962  1F1E                     	;# 
  6963  1F1F                     	;# 
  6964  1F20                     	;# 
  6965  1F21                     	;# 
  6966  1F22                     	;# 
  6967  1F23                     	;# 
  6968  1F24                     	;# 
  6969  1F25                     	;# 
  6970  1F26                     	;# 
  6971  1F27                     	;# 
  6972  1F38                     	;# 
  6973  1F39                     	;# 
  6974  1F3A                     	;# 
  6975  1F3B                     	;# 
  6976  1F3C                     	;# 
  6977  1F3D                     	;# 
  6978  1F3E                     	;# 
  6979  1F3F                     	;# 
  6980  1F43                     	;# 
  6981  1F44                     	;# 
  6982  1F45                     	;# 
  6983  1F46                     	;# 
  6984  1F47                     	;# 
  6985  1F48                     	;# 
  6986  1F49                     	;# 
  6987  1F4A                     	;# 
  6988  1F4E                     	;# 
  6989  1F4F                     	;# 
  6990  1F50                     	;# 
  6991  1F51                     	;# 
  6992  1F52                     	;# 
  6993  1F53                     	;# 
  6994  1F54                     	;# 
  6995  1F55                     	;# 
  6996  1FE4                     	;# 
  6997  1FE5                     	;# 
  6998  1FE6                     	;# 
  6999  1FE7                     	;# 
  7000  1FE8                     	;# 
  7001  1FE8                     	;# 
  7002  1FE9                     	;# 
  7003  1FEA                     	;# 
  7004  1FEB                     	;# 
  7005  1FED                     	;# 
  7006  1FEE                     	;# 
  7007  1FEF                     	;# 
  7008  0000                     	;# 
  7009  0001                     	;# 
  7010  0002                     	;# 
  7011  0003                     	;# 
  7012  0004                     	;# 
  7013  0005                     	;# 
  7014  0006                     	;# 
  7015  0007                     	;# 
  7016  0008                     	;# 
  7017  0009                     	;# 
  7018  000A                     	;# 
  7019  000B                     	;# 
  7020  000C                     	;# 
  7021  000D                     	;# 
  7022  000E                     	;# 
  7023  0012                     	;# 
  7024  0013                     	;# 
  7025  0014                     	;# 
  7026  0018                     	;# 
  7027  0019                     	;# 
  7028  001A                     	;# 
  7029  008C                     	;# 
  7030  008C                     	;# 
  7031  008D                     	;# 
  7032  008E                     	;# 
  7033  008E                     	;# 
  7034  008F                     	;# 
  7035  0090                     	;# 
  7036  0090                     	;# 
  7037  0091                     	;# 
  7038  0092                     	;# 
  7039  0092                     	;# 
  7040  0093                     	;# 
  7041  0094                     	;# 
  7042  0094                     	;# 
  7043  0095                     	;# 
  7044  0096                     	;# 
  7045  0096                     	;# 
  7046  0097                     	;# 
  7047  0098                     	;# 
  7048  0099                     	;# 
  7049  009A                     	;# 
  7050  009B                     	;# 
  7051  009B                     	;# 
  7052  009C                     	;# 
  7053  009D                     	;# 
  7054  009D                     	;# 
  7055  009E                     	;# 
  7056  009F                     	;# 
  7057  010C                     	;# 
  7058  010C                     	;# 
  7059  010D                     	;# 
  7060  010E                     	;# 
  7061  010F                     	;# 
  7062  010F                     	;# 
  7063  0110                     	;# 
  7064  0111                     	;# 
  7065  0112                     	;# 
  7066  0113                     	;# 
  7067  0114                     	;# 
  7068  0115                     	;# 
  7069  0116                     	;# 
  7070  0117                     	;# 
  7071  0118                     	;# 
  7072  0119                     	;# 
  7073  0119                     	;# 
  7074  0119                     	;# 
  7075  011A                     	;# 
  7076  011A                     	;# 
  7077  011A                     	;# 
  7078  011B                     	;# 
  7079  011B                     	;# 
  7080  011B                     	;# 
  7081  011B                     	;# 
  7082  011B                     	;# 
  7083  011C                     	;# 
  7084  011C                     	;# 
  7085  011C                     	;# 
  7086  011D                     	;# 
  7087  011D                     	;# 
  7088  011D                     	;# 
  7089  011E                     	;# 
  7090  011E                     	;# 
  7091  011E                     	;# 
  7092  011F                     	;# 
  7093  011F                     	;# 
  7094  011F                     	;# 
  7095  011F                     	;# 
  7096  011F                     	;# 
  7097  018C                     	;# 
  7098  018D                     	;# 
  7099  018E                     	;# 
  7100  018F                     	;# 
  7101  0190                     	;# 
  7102  0191                     	;# 
  7103  0192                     	;# 
  7104  0196                     	;# 
  7105  0197                     	;# 
  7106  0198                     	;# 
  7107  0199                     	;# 
  7108  019A                     	;# 
  7109  019B                     	;# 
  7110  019C                     	;# 
  7111  020C                     	;# 
  7112  020D                     	;# 
  7113  020E                     	;# 
  7114  020E                     	;# 
  7115  020F                     	;# 
  7116  020F                     	;# 
  7117  0210                     	;# 
  7118  0210                     	;# 
  7119  0211                     	;# 
  7120  0211                     	;# 
  7121  0212                     	;# 
  7122  0213                     	;# 
  7123  0214                     	;# 
  7124  0214                     	;# 
  7125  0215                     	;# 
  7126  0215                     	;# 
  7127  0216                     	;# 
  7128  0216                     	;# 
  7129  0217                     	;# 
  7130  0217                     	;# 
  7131  0218                     	;# 
  7132  0219                     	;# 
  7133  021A                     	;# 
  7134  021A                     	;# 
  7135  021B                     	;# 
  7136  021B                     	;# 
  7137  021C                     	;# 
  7138  021C                     	;# 
  7139  021D                     	;# 
  7140  021D                     	;# 
  7141  021E                     	;# 
  7142  021F                     	;# 
  7143  028C                     	;# 
  7144  028C                     	;# 
  7145  028D                     	;# 
  7146  028D                     	;# 
  7147  028E                     	;# 
  7148  028F                     	;# 
  7149  0290                     	;# 
  7150  0291                     	;# 
  7151  0292                     	;# 
  7152  0292                     	;# 
  7153  0293                     	;# 
  7154  0293                     	;# 
  7155  0294                     	;# 
  7156  0295                     	;# 
  7157  0296                     	;# 
  7158  0297                     	;# 
  7159  0298                     	;# 
  7160  0298                     	;# 
  7161  0299                     	;# 
  7162  0299                     	;# 
  7163  029A                     	;# 
  7164  029B                     	;# 
  7165  029C                     	;# 
  7166  029D                     	;# 
  7167  029F                     	;# 
  7168  030C                     	;# 
  7169  030C                     	;# 
  7170  030D                     	;# 
  7171  030E                     	;# 
  7172  030F                     	;# 
  7173  0310                     	;# 
  7174  0310                     	;# 
  7175  0311                     	;# 
  7176  0312                     	;# 
  7177  0313                     	;# 
  7178  0314                     	;# 
  7179  0314                     	;# 
  7180  0315                     	;# 
  7181  0316                     	;# 
  7182  0317                     	;# 
  7183  0318                     	;# 
  7184  0318                     	;# 
  7185  0319                     	;# 
  7186  031A                     	;# 
  7187  031B                     	;# 
  7188  038C                     	;# 
  7189  038C                     	;# 
  7190  038D                     	;# 
  7191  038E                     	;# 
  7192  0390                     	;# 
  7193  0390                     	;# 
  7194  0391                     	;# 
  7195  0392                     	;# 
  7196  048C                     	;# 
  7197  048C                     	;# 
  7198  048D                     	;# 
  7199  048E                     	;# 
  7200  048F                     	;# 
  7201  048F                     	;# 
  7202  0490                     	;# 
  7203  0491                     	;# 
  7204  0492                     	;# 
  7205  0492                     	;# 
  7206  0493                     	;# 
  7207  0494                     	;# 
  7208  0495                     	;# 
  7209  0495                     	;# 
  7210  0496                     	;# 
  7211  0497                     	;# 
  7212  0498                     	;# 
  7213  0499                     	;# 
  7214  049A                     	;# 
  7215  049B                     	;# 
  7216  049C                     	;# 
  7217  049D                     	;# 
  7218  058C                     	;# 
  7219  058C                     	;# 
  7220  058D                     	;# 
  7221  058E                     	;# 
  7222  058F                     	;# 
  7223  058F                     	;# 
  7224  0590                     	;# 
  7225  0591                     	;# 
  7226  0592                     	;# 
  7227  0593                     	;# 
  7228  059C                     	;# 
  7229  059C                     	;# 
  7230  059D                     	;# 
  7231  059D                     	;# 
  7232  059E                     	;# 
  7233  059F                     	;# 
  7234  060C                     	;# 
  7235  060C                     	;# 
  7236  060D                     	;# 
  7237  060D                     	;# 
  7238  060E                     	;# 
  7239  060F                     	;# 
  7240  0610                     	;# 
  7241  0611                     	;# 
  7242  0612                     	;# 
  7243  0613                     	;# 
  7244  0614                     	;# 
  7245  0616                     	;# 
  7246  0616                     	;# 
  7247  0617                     	;# 
  7248  0617                     	;# 
  7249  0618                     	;# 
  7250  0619                     	;# 
  7251  061A                     	;# 
  7252  061B                     	;# 
  7253  061C                     	;# 
  7254  061D                     	;# 
  7255  061E                     	;# 
  7256  070C                     	;# 
  7257  070D                     	;# 
  7258  070E                     	;# 
  7259  070F                     	;# 
  7260  0710                     	;# 
  7261  0711                     	;# 
  7262  0712                     	;# 
  7263  0713                     	;# 
  7264  0714                     	;# 
  7265  0716                     	;# 
  7266  0717                     	;# 
  7267  0718                     	;# 
  7268  0719                     	;# 
  7269  071A                     	;# 
  7270  071B                     	;# 
  7271  071C                     	;# 
  7272  071D                     	;# 
  7273  071E                     	;# 
  7274  0796                     	;# 
  7275  0797                     	;# 
  7276  0798                     	;# 
  7277  0799                     	;# 
  7278  079A                     	;# 
  7279  079B                     	;# 
  7280  079C                     	;# 
  7281  079D                     	;# 
  7282  080C                     	;# 
  7283  080D                     	;# 
  7284  080E                     	;# 
  7285  080F                     	;# 
  7286  0810                     	;# 
  7287  0811                     	;# 
  7288  0812                     	;# 
  7289  0813                     	;# 
  7290  0814                     	;# 
  7291  081A                     	;# 
  7292  081A                     	;# 
  7293  081B                     	;# 
  7294  081C                     	;# 
  7295  081C                     	;# 
  7296  081D                     	;# 
  7297  081E                     	;# 
  7298  081F                     	;# 
  7299  088C                     	;# 
  7300  088D                     	;# 
  7301  088E                     	;# 
  7302  088F                     	;# 
  7303  0890                     	;# 
  7304  0891                     	;# 
  7305  0892                     	;# 
  7306  0893                     	;# 
  7307  0895                     	;# 
  7308  0896                     	;# 
  7309  0897                     	;# 
  7310  0898                     	;# 
  7311  0899                     	;# 
  7312  089A                     	;# 
  7313  089B                     	;# 
  7314  090C                     	;# 
  7315  090E                     	;# 
  7316  090F                     	;# 
  7317  091F                     	;# 
  7318  098F                     	;# 
  7319  098F                     	;# 
  7320  0990                     	;# 
  7321  0991                     	;# 
  7322  0992                     	;# 
  7323  0993                     	;# 
  7324  0994                     	;# 
  7325  0995                     	;# 
  7326  0996                     	;# 
  7327  0997                     	;# 
  7328  1E0F                     	;# 
  7329  1E10                     	;# 
  7330  1E11                     	;# 
  7331  1E12                     	;# 
  7332  1E13                     	;# 
  7333  1E14                     	;# 
  7334  1E15                     	;# 
  7335  1E16                     	;# 
  7336  1E17                     	;# 
  7337  1E18                     	;# 
  7338  1E19                     	;# 
  7339  1E1A                     	;# 
  7340  1E1B                     	;# 
  7341  1E1C                     	;# 
  7342  1E1D                     	;# 
  7343  1E1E                     	;# 
  7344  1E1F                     	;# 
  7345  1E20                     	;# 
  7346  1E21                     	;# 
  7347  1E22                     	;# 
  7348  1E23                     	;# 
  7349  1E24                     	;# 
  7350  1E25                     	;# 
  7351  1E26                     	;# 
  7352  1E27                     	;# 
  7353  1E28                     	;# 
  7354  1E29                     	;# 
  7355  1E2A                     	;# 
  7356  1E2B                     	;# 
  7357  1E2C                     	;# 
  7358  1E2D                     	;# 
  7359  1E2E                     	;# 
  7360  1E2F                     	;# 
  7361  1E30                     	;# 
  7362  1E31                     	;# 
  7363  1E32                     	;# 
  7364  1E33                     	;# 
  7365  1E34                     	;# 
  7366  1E35                     	;# 
  7367  1E36                     	;# 
  7368  1E37                     	;# 
  7369  1E8F                     	;# 
  7370  1E90                     	;# 
  7371  1E91                     	;# 
  7372  1E92                     	;# 
  7373  1E93                     	;# 
  7374  1E94                     	;# 
  7375  1E95                     	;# 
  7376  1E96                     	;# 
  7377  1E97                     	;# 
  7378  1E9C                     	;# 
  7379  1E9D                     	;# 
  7380  1E9E                     	;# 
  7381  1EA1                     	;# 
  7382  1EA2                     	;# 
  7383  1EA3                     	;# 
  7384  1EA4                     	;# 
  7385  1EA9                     	;# 
  7386  1EAA                     	;# 
  7387  1EB1                     	;# 
  7388  1EB2                     	;# 
  7389  1EB8                     	;# 
  7390  1EB9                     	;# 
  7391  1EBA                     	;# 
  7392  1EBB                     	;# 
  7393  1EBC                     	;# 
  7394  1EBD                     	;# 
  7395  1EBE                     	;# 
  7396  1EC3                     	;# 
  7397  1EC5                     	;# 
  7398  1EC6                     	;# 
  7399  1EC7                     	;# 
  7400  1EC8                     	;# 
  7401  1EC9                     	;# 
  7402  1ECA                     	;# 
  7403  1ECB                     	;# 
  7404  1ECB                     	;# 
  7405  1ECB                     	;# 
  7406  1ECC                     	;# 
  7407  1ECC                     	;# 
  7408  1ECC                     	;# 
  7409  1F10                     	;# 
  7410  1F11                     	;# 
  7411  1F12                     	;# 
  7412  1F14                     	;# 
  7413  1F15                     	;# 
  7414  1F1C                     	;# 
  7415  1F1D                     	;# 
  7416  1F1E                     	;# 
  7417  1F1F                     	;# 
  7418  1F20                     	;# 
  7419  1F21                     	;# 
  7420  1F22                     	;# 
  7421  1F23                     	;# 
  7422  1F24                     	;# 
  7423  1F25                     	;# 
  7424  1F26                     	;# 
  7425  1F27                     	;# 
  7426  1F38                     	;# 
  7427  1F39                     	;# 
  7428  1F3A                     	;# 
  7429  1F3B                     	;# 
  7430  1F3C                     	;# 
  7431  1F3D                     	;# 
  7432  1F3E                     	;# 
  7433  1F3F                     	;# 
  7434  1F43                     	;# 
  7435  1F44                     	;# 
  7436  1F45                     	;# 
  7437  1F46                     	;# 
  7438  1F47                     	;# 
  7439  1F48                     	;# 
  7440  1F49                     	;# 
  7441  1F4A                     	;# 
  7442  1F4E                     	;# 
  7443  1F4F                     	;# 
  7444  1F50                     	;# 
  7445  1F51                     	;# 
  7446  1F52                     	;# 
  7447  1F53                     	;# 
  7448  1F54                     	;# 
  7449  1F55                     	;# 
  7450  1FE4                     	;# 
  7451  1FE5                     	;# 
  7452  1FE6                     	;# 
  7453  1FE7                     	;# 
  7454  1FE8                     	;# 
  7455  1FE8                     	;# 
  7456  1FE9                     	;# 
  7457  1FEA                     	;# 
  7458  1FEB                     	;# 
  7459  1FED                     	;# 
  7460  1FEE                     	;# 
  7461  1FEF                     	;# 
  7462  0000                     	;# 
  7463  0001                     	;# 
  7464  0002                     	;# 
  7465  0003                     	;# 
  7466  0004                     	;# 
  7467  0005                     	;# 
  7468  0006                     	;# 
  7469  0007                     	;# 
  7470  0008                     	;# 
  7471  0009                     	;# 
  7472  000A                     	;# 
  7473  000B                     	;# 
  7474  000C                     	;# 
  7475  000D                     	;# 
  7476  000E                     	;# 
  7477  0012                     	;# 
  7478  0013                     	;# 
  7479  0014                     	;# 
  7480  0018                     	;# 
  7481  0019                     	;# 
  7482  001A                     	;# 
  7483  008C                     	;# 
  7484  008C                     	;# 
  7485  008D                     	;# 
  7486  008E                     	;# 
  7487  008E                     	;# 
  7488  008F                     	;# 
  7489  0090                     	;# 
  7490  0090                     	;# 
  7491  0091                     	;# 
  7492  0092                     	;# 
  7493  0092                     	;# 
  7494  0093                     	;# 
  7495  0094                     	;# 
  7496  0094                     	;# 
  7497  0095                     	;# 
  7498  0096                     	;# 
  7499  0096                     	;# 
  7500  0097                     	;# 
  7501  0098                     	;# 
  7502  0099                     	;# 
  7503  009A                     	;# 
  7504  009B                     	;# 
  7505  009B                     	;# 
  7506  009C                     	;# 
  7507  009D                     	;# 
  7508  009D                     	;# 
  7509  009E                     	;# 
  7510  009F                     	;# 
  7511  010C                     	;# 
  7512  010C                     	;# 
  7513  010D                     	;# 
  7514  010E                     	;# 
  7515  010F                     	;# 
  7516  010F                     	;# 
  7517  0110                     	;# 
  7518  0111                     	;# 
  7519  0112                     	;# 
  7520  0113                     	;# 
  7521  0114                     	;# 
  7522  0115                     	;# 
  7523  0116                     	;# 
  7524  0117                     	;# 
  7525  0118                     	;# 
  7526  0119                     	;# 
  7527  0119                     	;# 
  7528  0119                     	;# 
  7529  011A                     	;# 
  7530  011A                     	;# 
  7531  011A                     	;# 
  7532  011B                     	;# 
  7533  011B                     	;# 
  7534  011B                     	;# 
  7535  011B                     	;# 
  7536  011B                     	;# 
  7537  011C                     	;# 
  7538  011C                     	;# 
  7539  011C                     	;# 
  7540  011D                     	;# 
  7541  011D                     	;# 
  7542  011D                     	;# 
  7543  011E                     	;# 
  7544  011E                     	;# 
  7545  011E                     	;# 
  7546  011F                     	;# 
  7547  011F                     	;# 
  7548  011F                     	;# 
  7549  011F                     	;# 
  7550  011F                     	;# 
  7551  018C                     	;# 
  7552  018D                     	;# 
  7553  018E                     	;# 
  7554  018F                     	;# 
  7555  0190                     	;# 
  7556  0191                     	;# 
  7557  0192                     	;# 
  7558  0196                     	;# 
  7559  0197                     	;# 
  7560  0198                     	;# 
  7561  0199                     	;# 
  7562  019A                     	;# 
  7563  019B                     	;# 
  7564  019C                     	;# 
  7565  020C                     	;# 
  7566  020D                     	;# 
  7567  020E                     	;# 
  7568  020E                     	;# 
  7569  020F                     	;# 
  7570  020F                     	;# 
  7571  0210                     	;# 
  7572  0210                     	;# 
  7573  0211                     	;# 
  7574  0211                     	;# 
  7575  0212                     	;# 
  7576  0213                     	;# 
  7577  0214                     	;# 
  7578  0214                     	;# 
  7579  0215                     	;# 
  7580  0215                     	;# 
  7581  0216                     	;# 
  7582  0216                     	;# 
  7583  0217                     	;# 
  7584  0217                     	;# 
  7585  0218                     	;# 
  7586  0219                     	;# 
  7587  021A                     	;# 
  7588  021A                     	;# 
  7589  021B                     	;# 
  7590  021B                     	;# 
  7591  021C                     	;# 
  7592  021C                     	;# 
  7593  021D                     	;# 
  7594  021D                     	;# 
  7595  021E                     	;# 
  7596  021F                     	;# 
  7597  028C                     	;# 
  7598  028C                     	;# 
  7599  028D                     	;# 
  7600  028D                     	;# 
  7601  028E                     	;# 
  7602  028F                     	;# 
  7603  0290                     	;# 
  7604  0291                     	;# 
  7605  0292                     	;# 
  7606  0292                     	;# 
  7607  0293                     	;# 
  7608  0293                     	;# 
  7609  0294                     	;# 
  7610  0295                     	;# 
  7611  0296                     	;# 
  7612  0297                     	;# 
  7613  0298                     	;# 
  7614  0298                     	;# 
  7615  0299                     	;# 
  7616  0299                     	;# 
  7617  029A                     	;# 
  7618  029B                     	;# 
  7619  029C                     	;# 
  7620  029D                     	;# 
  7621  029F                     	;# 
  7622  030C                     	;# 
  7623  030C                     	;# 
  7624  030D                     	;# 
  7625  030E                     	;# 
  7626  030F                     	;# 
  7627  0310                     	;# 
  7628  0310                     	;# 
  7629  0311                     	;# 
  7630  0312                     	;# 
  7631  0313                     	;# 
  7632  0314                     	;# 
  7633  0314                     	;# 
  7634  0315                     	;# 
  7635  0316                     	;# 
  7636  0317                     	;# 
  7637  0318                     	;# 
  7638  0318                     	;# 
  7639  0319                     	;# 
  7640  031A                     	;# 
  7641  031B                     	;# 
  7642  038C                     	;# 
  7643  038C                     	;# 
  7644  038D                     	;# 
  7645  038E                     	;# 
  7646  0390                     	;# 
  7647  0390                     	;# 
  7648  0391                     	;# 
  7649  0392                     	;# 
  7650  048C                     	;# 
  7651  048C                     	;# 
  7652  048D                     	;# 
  7653  048E                     	;# 
  7654  048F                     	;# 
  7655  048F                     	;# 
  7656  0490                     	;# 
  7657  0491                     	;# 
  7658  0492                     	;# 
  7659  0492                     	;# 
  7660  0493                     	;# 
  7661  0494                     	;# 
  7662  0495                     	;# 
  7663  0495                     	;# 
  7664  0496                     	;# 
  7665  0497                     	;# 
  7666  0498                     	;# 
  7667  0499                     	;# 
  7668  049A                     	;# 
  7669  049B                     	;# 
  7670  049C                     	;# 
  7671  049D                     	;# 
  7672  058C                     	;# 
  7673  058C                     	;# 
  7674  058D                     	;# 
  7675  058E                     	;# 
  7676  058F                     	;# 
  7677  058F                     	;# 
  7678  0590                     	;# 
  7679  0591                     	;# 
  7680  0592                     	;# 
  7681  0593                     	;# 
  7682  059C                     	;# 
  7683  059C                     	;# 
  7684  059D                     	;# 
  7685  059D                     	;# 
  7686  059E                     	;# 
  7687  059F                     	;# 
  7688  060C                     	;# 
  7689  060C                     	;# 
  7690  060D                     	;# 
  7691  060D                     	;# 
  7692  060E                     	;# 
  7693  060F                     	;# 
  7694  0610                     	;# 
  7695  0611                     	;# 
  7696  0612                     	;# 
  7697  0613                     	;# 
  7698  0614                     	;# 
  7699  0616                     	;# 
  7700  0616                     	;# 
  7701  0617                     	;# 
  7702  0617                     	;# 
  7703  0618                     	;# 
  7704  0619                     	;# 
  7705  061A                     	;# 
  7706  061B                     	;# 
  7707  061C                     	;# 
  7708  061D                     	;# 
  7709  061E                     	;# 
  7710  070C                     	;# 
  7711  070D                     	;# 
  7712  070E                     	;# 
  7713  070F                     	;# 
  7714  0710                     	;# 
  7715  0711                     	;# 
  7716  0712                     	;# 
  7717  0713                     	;# 
  7718  0714                     	;# 
  7719  0716                     	;# 
  7720  0717                     	;# 
  7721  0718                     	;# 
  7722  0719                     	;# 
  7723  071A                     	;# 
  7724  071B                     	;# 
  7725  071C                     	;# 
  7726  071D                     	;# 
  7727  071E                     	;# 
  7728  0796                     	;# 
  7729  0797                     	;# 
  7730  0798                     	;# 
  7731  0799                     	;# 
  7732  079A                     	;# 
  7733  079B                     	;# 
  7734  079C                     	;# 
  7735  079D                     	;# 
  7736  080C                     	;# 
  7737  080D                     	;# 
  7738  080E                     	;# 
  7739  080F                     	;# 
  7740  0810                     	;# 
  7741  0811                     	;# 
  7742  0812                     	;# 
  7743  0813                     	;# 
  7744  0814                     	;# 
  7745  081A                     	;# 
  7746  081A                     	;# 
  7747  081B                     	;# 
  7748  081C                     	;# 
  7749  081C                     	;# 
  7750  081D                     	;# 
  7751  081E                     	;# 
  7752  081F                     	;# 
  7753  088C                     	;# 
  7754  088D                     	;# 
  7755  088E                     	;# 
  7756  088F                     	;# 
  7757  0890                     	;# 
  7758  0891                     	;# 
  7759  0892                     	;# 
  7760  0893                     	;# 
  7761  0895                     	;# 
  7762  0896                     	;# 
  7763  0897                     	;# 
  7764  0898                     	;# 
  7765  0899                     	;# 
  7766  089A                     	;# 
  7767  089B                     	;# 
  7768  090C                     	;# 
  7769  090E                     	;# 
  7770  090F                     	;# 
  7771  091F                     	;# 
  7772  098F                     	;# 
  7773  098F                     	;# 
  7774  0990                     	;# 
  7775  0991                     	;# 
  7776  0992                     	;# 
  7777  0993                     	;# 
  7778  0994                     	;# 
  7779  0995                     	;# 
  7780  0996                     	;# 
  7781  0997                     	;# 
  7782  1E0F                     	;# 
  7783  1E10                     	;# 
  7784  1E11                     	;# 
  7785  1E12                     	;# 
  7786  1E13                     	;# 
  7787  1E14                     	;# 
  7788  1E15                     	;# 
  7789  1E16                     	;# 
  7790  1E17                     	;# 
  7791  1E18                     	;# 
  7792  1E19                     	;# 
  7793  1E1A                     	;# 
  7794  1E1B                     	;# 
  7795  1E1C                     	;# 
  7796  1E1D                     	;# 
  7797  1E1E                     	;# 
  7798  1E1F                     	;# 
  7799  1E20                     	;# 
  7800  1E21                     	;# 
  7801  1E22                     	;# 
  7802  1E23                     	;# 
  7803  1E24                     	;# 
  7804  1E25                     	;# 
  7805  1E26                     	;# 
  7806  1E27                     	;# 
  7807  1E28                     	;# 
  7808  1E29                     	;# 
  7809  1E2A                     	;# 
  7810  1E2B                     	;# 
  7811  1E2C                     	;# 
  7812  1E2D                     	;# 
  7813  1E2E                     	;# 
  7814  1E2F                     	;# 
  7815  1E30                     	;# 
  7816  1E31                     	;# 
  7817  1E32                     	;# 
  7818  1E33                     	;# 
  7819  1E34                     	;# 
  7820  1E35                     	;# 
  7821  1E36                     	;# 
  7822  1E37                     	;# 
  7823  1E8F                     	;# 
  7824  1E90                     	;# 
  7825  1E91                     	;# 
  7826  1E92                     	;# 
  7827  1E93                     	;# 
  7828  1E94                     	;# 
  7829  1E95                     	;# 
  7830  1E96                     	;# 
  7831  1E97                     	;# 
  7832  1E9C                     	;# 
  7833  1E9D                     	;# 
  7834  1E9E                     	;# 
  7835  1EA1                     	;# 
  7836  1EA2                     	;# 
  7837  1EA3                     	;# 
  7838  1EA4                     	;# 
  7839  1EA9                     	;# 
  7840  1EAA                     	;# 
  7841  1EB1                     	;# 
  7842  1EB2                     	;# 
  7843  1EB8                     	;# 
  7844  1EB9                     	;# 
  7845  1EBA                     	;# 
  7846  1EBB                     	;# 
  7847  1EBC                     	;# 
  7848  1EBD                     	;# 
  7849  1EBE                     	;# 
  7850  1EC3                     	;# 
  7851  1EC5                     	;# 
  7852  1EC6                     	;# 
  7853  1EC7                     	;# 
  7854  1EC8                     	;# 
  7855  1EC9                     	;# 
  7856  1ECA                     	;# 
  7857  1ECB                     	;# 
  7858  1ECB                     	;# 
  7859  1ECB                     	;# 
  7860  1ECC                     	;# 
  7861  1ECC                     	;# 
  7862  1ECC                     	;# 
  7863  1F10                     	;# 
  7864  1F11                     	;# 
  7865  1F12                     	;# 
  7866  1F14                     	;# 
  7867  1F15                     	;# 
  7868  1F1C                     	;# 
  7869  1F1D                     	;# 
  7870  1F1E                     	;# 
  7871  1F1F                     	;# 
  7872  1F20                     	;# 
  7873  1F21                     	;# 
  7874  1F22                     	;# 
  7875  1F23                     	;# 
  7876  1F24                     	;# 
  7877  1F25                     	;# 
  7878  1F26                     	;# 
  7879  1F27                     	;# 
  7880  1F38                     	;# 
  7881  1F39                     	;# 
  7882  1F3A                     	;# 
  7883  1F3B                     	;# 
  7884  1F3C                     	;# 
  7885  1F3D                     	;# 
  7886  1F3E                     	;# 
  7887  1F3F                     	;# 
  7888  1F43                     	;# 
  7889  1F44                     	;# 
  7890  1F45                     	;# 
  7891  1F46                     	;# 
  7892  1F47                     	;# 
  7893  1F48                     	;# 
  7894  1F49                     	;# 
  7895  1F4A                     	;# 
  7896  1F4E                     	;# 
  7897  1F4F                     	;# 
  7898  1F50                     	;# 
  7899  1F51                     	;# 
  7900  1F52                     	;# 
  7901  1F53                     	;# 
  7902  1F54                     	;# 
  7903  1F55                     	;# 
  7904  1FE4                     	;# 
  7905  1FE5                     	;# 
  7906  1FE6                     	;# 
  7907  1FE7                     	;# 
  7908  1FE8                     	;# 
  7909  1FE8                     	;# 
  7910  1FE9                     	;# 
  7911  1FEA                     	;# 
  7912  1FEB                     	;# 
  7913  1FED                     	;# 
  7914  1FEE                     	;# 
  7915  1FEF                     	;# 
  7916  0000                     	;# 
  7917  0001                     	;# 
  7918  0002                     	;# 
  7919  0003                     	;# 
  7920  0004                     	;# 
  7921  0005                     	;# 
  7922  0006                     	;# 
  7923  0007                     	;# 
  7924  0008                     	;# 
  7925  0009                     	;# 
  7926  000A                     	;# 
  7927  000B                     	;# 
  7928  000C                     	;# 
  7929  000D                     	;# 
  7930  000E                     	;# 
  7931  0012                     	;# 
  7932  0013                     	;# 
  7933  0014                     	;# 
  7934  0018                     	;# 
  7935  0019                     	;# 
  7936  001A                     	;# 
  7937  008C                     	;# 
  7938  008C                     	;# 
  7939  008D                     	;# 
  7940  008E                     	;# 
  7941  008E                     	;# 
  7942  008F                     	;# 
  7943  0090                     	;# 
  7944  0090                     	;# 
  7945  0091                     	;# 
  7946  0092                     	;# 
  7947  0092                     	;# 
  7948  0093                     	;# 
  7949  0094                     	;# 
  7950  0094                     	;# 
  7951  0095                     	;# 
  7952  0096                     	;# 
  7953  0096                     	;# 
  7954  0097                     	;# 
  7955  0098                     	;# 
  7956  0099                     	;# 
  7957  009A                     	;# 
  7958  009B                     	;# 
  7959  009B                     	;# 
  7960  009C                     	;# 
  7961  009D                     	;# 
  7962  009D                     	;# 
  7963  009E                     	;# 
  7964  009F                     	;# 
  7965  010C                     	;# 
  7966  010C                     	;# 
  7967  010D                     	;# 
  7968  010E                     	;# 
  7969  010F                     	;# 
  7970  010F                     	;# 
  7971  0110                     	;# 
  7972  0111                     	;# 
  7973  0112                     	;# 
  7974  0113                     	;# 
  7975  0114                     	;# 
  7976  0115                     	;# 
  7977  0116                     	;# 
  7978  0117                     	;# 
  7979  0118                     	;# 
  7980  0119                     	;# 
  7981  0119                     	;# 
  7982  0119                     	;# 
  7983  011A                     	;# 
  7984  011A                     	;# 
  7985  011A                     	;# 
  7986  011B                     	;# 
  7987  011B                     	;# 
  7988  011B                     	;# 
  7989  011B                     	;# 
  7990  011B                     	;# 
  7991  011C                     	;# 
  7992  011C                     	;# 
  7993  011C                     	;# 
  7994  011D                     	;# 
  7995  011D                     	;# 
  7996  011D                     	;# 
  7997  011E                     	;# 
  7998  011E                     	;# 
  7999  011E                     	;# 
  8000  011F                     	;# 
  8001  011F                     	;# 
  8002  011F                     	;# 
  8003  011F                     	;# 
  8004  011F                     	;# 
  8005  018C                     	;# 
  8006  018D                     	;# 
  8007  018E                     	;# 
  8008  018F                     	;# 
  8009  0190                     	;# 
  8010  0191                     	;# 
  8011  0192                     	;# 
  8012  0196                     	;# 
  8013  0197                     	;# 
  8014  0198                     	;# 
  8015  0199                     	;# 
  8016  019A                     	;# 
  8017  019B                     	;# 
  8018  019C                     	;# 
  8019  020C                     	;# 
  8020  020D                     	;# 
  8021  020E                     	;# 
  8022  020E                     	;# 
  8023  020F                     	;# 
  8024  020F                     	;# 
  8025  0210                     	;# 
  8026  0210                     	;# 
  8027  0211                     	;# 
  8028  0211                     	;# 
  8029  0212                     	;# 
  8030  0213                     	;# 
  8031  0214                     	;# 
  8032  0214                     	;# 
  8033  0215                     	;# 
  8034  0215                     	;# 
  8035  0216                     	;# 
  8036  0216                     	;# 
  8037  0217                     	;# 
  8038  0217                     	;# 
  8039  0218                     	;# 
  8040  0219                     	;# 
  8041  021A                     	;# 
  8042  021A                     	;# 
  8043  021B                     	;# 
  8044  021B                     	;# 
  8045  021C                     	;# 
  8046  021C                     	;# 
  8047  021D                     	;# 
  8048  021D                     	;# 
  8049  021E                     	;# 
  8050  021F                     	;# 
  8051  028C                     	;# 
  8052  028C                     	;# 
  8053  028D                     	;# 
  8054  028D                     	;# 
  8055  028E                     	;# 
  8056  028F                     	;# 
  8057  0290                     	;# 
  8058  0291                     	;# 
  8059  0292                     	;# 
  8060  0292                     	;# 
  8061  0293                     	;# 
  8062  0293                     	;# 
  8063  0294                     	;# 
  8064  0295                     	;# 
  8065  0296                     	;# 
  8066  0297                     	;# 
  8067  0298                     	;# 
  8068  0298                     	;# 
  8069  0299                     	;# 
  8070  0299                     	;# 
  8071  029A                     	;# 
  8072  029B                     	;# 
  8073  029C                     	;# 
  8074  029D                     	;# 
  8075  029F                     	;# 
  8076  030C                     	;# 
  8077  030C                     	;# 
  8078  030D                     	;# 
  8079  030E                     	;# 
  8080  030F                     	;# 
  8081  0310                     	;# 
  8082  0310                     	;# 
  8083  0311                     	;# 
  8084  0312                     	;# 
  8085  0313                     	;# 
  8086  0314                     	;# 
  8087  0314                     	;# 
  8088  0315                     	;# 
  8089  0316                     	;# 
  8090  0317                     	;# 
  8091  0318                     	;# 
  8092  0318                     	;# 
  8093  0319                     	;# 
  8094  031A                     	;# 
  8095  031B                     	;# 
  8096  038C                     	;# 
  8097  038C                     	;# 
  8098  038D                     	;# 
  8099  038E                     	;# 
  8100  0390                     	;# 
  8101  0390                     	;# 
  8102  0391                     	;# 
  8103  0392                     	;# 
  8104  048C                     	;# 
  8105  048C                     	;# 
  8106  048D                     	;# 
  8107  048E                     	;# 
  8108  048F                     	;# 
  8109  048F                     	;# 
  8110  0490                     	;# 
  8111  0491                     	;# 
  8112  0492                     	;# 
  8113  0492                     	;# 
  8114  0493                     	;# 
  8115  0494                     	;# 
  8116  0495                     	;# 
  8117  0495                     	;# 
  8118  0496                     	;# 
  8119  0497                     	;# 
  8120  0498                     	;# 
  8121  0499                     	;# 
  8122  049A                     	;# 
  8123  049B                     	;# 
  8124  049C                     	;# 
  8125  049D                     	;# 
  8126  058C                     	;# 
  8127  058C                     	;# 
  8128  058D                     	;# 
  8129  058E                     	;# 
  8130  058F                     	;# 
  8131  058F                     	;# 
  8132  0590                     	;# 
  8133  0591                     	;# 
  8134  0592                     	;# 
  8135  0593                     	;# 
  8136  059C                     	;# 
  8137  059C                     	;# 
  8138  059D                     	;# 
  8139  059D                     	;# 
  8140  059E                     	;# 
  8141  059F                     	;# 
  8142  060C                     	;# 
  8143  060C                     	;# 
  8144  060D                     	;# 
  8145  060D                     	;# 
  8146  060E                     	;# 
  8147  060F                     	;# 
  8148  0610                     	;# 
  8149  0611                     	;# 
  8150  0612                     	;# 
  8151  0613                     	;# 
  8152  0614                     	;# 
  8153  0616                     	;# 
  8154  0616                     	;# 
  8155  0617                     	;# 
  8156  0617                     	;# 
  8157  0618                     	;# 
  8158  0619                     	;# 
  8159  061A                     	;# 
  8160  061B                     	;# 
  8161  061C                     	;# 
  8162  061D                     	;# 
  8163  061E                     	;# 
  8164  070C                     	;# 
  8165  070D                     	;# 
  8166  070E                     	;# 
  8167  070F                     	;# 
  8168  0710                     	;# 
  8169  0711                     	;# 
  8170  0712                     	;# 
  8171  0713                     	;# 
  8172  0714                     	;# 
  8173  0716                     	;# 
  8174  0717                     	;# 
  8175  0718                     	;# 
  8176  0719                     	;# 
  8177  071A                     	;# 
  8178  071B                     	;# 
  8179  071C                     	;# 
  8180  071D                     	;# 
  8181  071E                     	;# 
  8182  0796                     	;# 
  8183  0797                     	;# 
  8184  0798                     	;# 
  8185  0799                     	;# 
  8186  079A                     	;# 
  8187  079B                     	;# 
  8188  079C                     	;# 
  8189  079D                     	;# 
  8190  080C                     	;# 
  8191  080D                     	;# 
  8192  080E                     	;# 
  8193  080F                     	;# 
  8194  0810                     	;# 
  8195  0811                     	;# 
  8196  0812                     	;# 
  8197  0813                     	;# 
  8198  0814                     	;# 
  8199  081A                     	;# 
  8200  081A                     	;# 
  8201  081B                     	;# 
  8202  081C                     	;# 
  8203  081C                     	;# 
  8204  081D                     	;# 
  8205  081E                     	;# 
  8206  081F                     	;# 
  8207  088C                     	;# 
  8208  088D                     	;# 
  8209  088E                     	;# 
  8210  088F                     	;# 
  8211  0890                     	;# 
  8212  0891                     	;# 
  8213  0892                     	;# 
  8214  0893                     	;# 
  8215  0895                     	;# 
  8216  0896                     	;# 
  8217  0897                     	;# 
  8218  0898                     	;# 
  8219  0899                     	;# 
  8220  089A                     	;# 
  8221  089B                     	;# 
  8222  090C                     	;# 
  8223  090E                     	;# 
  8224  090F                     	;# 
  8225  091F                     	;# 
  8226  098F                     	;# 
  8227  098F                     	;# 
  8228  0990                     	;# 
  8229  0991                     	;# 
  8230  0992                     	;# 
  8231  0993                     	;# 
  8232  0994                     	;# 
  8233  0995                     	;# 
  8234  0996                     	;# 
  8235  0997                     	;# 
  8236  1E0F                     	;# 
  8237  1E10                     	;# 
  8238  1E11                     	;# 
  8239  1E12                     	;# 
  8240  1E13                     	;# 
  8241  1E14                     	;# 
  8242  1E15                     	;# 
  8243  1E16                     	;# 
  8244  1E17                     	;# 
  8245  1E18                     	;# 
  8246  1E19                     	;# 
  8247  1E1A                     	;# 
  8248  1E1B                     	;# 
  8249  1E1C                     	;# 
  8250  1E1D                     	;# 
  8251  1E1E                     	;# 
  8252  1E1F                     	;# 
  8253  1E20                     	;# 
  8254  1E21                     	;# 
  8255  1E22                     	;# 
  8256  1E23                     	;# 
  8257  1E24                     	;# 
  8258  1E25                     	;# 
  8259  1E26                     	;# 
  8260  1E27                     	;# 
  8261  1E28                     	;# 
  8262  1E29                     	;# 
  8263  1E2A                     	;# 
  8264  1E2B                     	;# 
  8265  1E2C                     	;# 
  8266  1E2D                     	;# 
  8267  1E2E                     	;# 
  8268  1E2F                     	;# 
  8269  1E30                     	;# 
  8270  1E31                     	;# 
  8271  1E32                     	;# 
  8272  1E33                     	;# 
  8273  1E34                     	;# 
  8274  1E35                     	;# 
  8275  1E36                     	;# 
  8276  1E37                     	;# 
  8277  1E8F                     	;# 
  8278  1E90                     	;# 
  8279  1E91                     	;# 
  8280  1E92                     	;# 
  8281  1E93                     	;# 
  8282  1E94                     	;# 
  8283  1E95                     	;# 
  8284  1E96                     	;# 
  8285  1E97                     	;# 
  8286  1E9C                     	;# 
  8287  1E9D                     	;# 
  8288  1E9E                     	;# 
  8289  1EA1                     	;# 
  8290  1EA2                     	;# 
  8291  1EA3                     	;# 
  8292  1EA4                     	;# 
  8293  1EA9                     	;# 
  8294  1EAA                     	;# 
  8295  1EB1                     	;# 
  8296  1EB2                     	;# 
  8297  1EB8                     	;# 
  8298  1EB9                     	;# 
  8299  1EBA                     	;# 
  8300  1EBB                     	;# 
  8301  1EBC                     	;# 
  8302  1EBD                     	;# 
  8303  1EBE                     	;# 
  8304  1EC3                     	;# 
  8305  1EC5                     	;# 
  8306  1EC6                     	;# 
  8307  1EC7                     	;# 
  8308  1EC8                     	;# 
  8309  1EC9                     	;# 
  8310  1ECA                     	;# 
  8311  1ECB                     	;# 
  8312  1ECB                     	;# 
  8313  1ECB                     	;# 
  8314  1ECC                     	;# 
  8315  1ECC                     	;# 
  8316  1ECC                     	;# 
  8317  1F10                     	;# 
  8318  1F11                     	;# 
  8319  1F12                     	;# 
  8320  1F14                     	;# 
  8321  1F15                     	;# 
  8322  1F1C                     	;# 
  8323  1F1D                     	;# 
  8324  1F1E                     	;# 
  8325  1F1F                     	;# 
  8326  1F20                     	;# 
  8327  1F21                     	;# 
  8328  1F22                     	;# 
  8329  1F23                     	;# 
  8330  1F24                     	;# 
  8331  1F25                     	;# 
  8332  1F26                     	;# 
  8333  1F27                     	;# 
  8334  1F38                     	;# 
  8335  1F39                     	;# 
  8336  1F3A                     	;# 
  8337  1F3B                     	;# 
  8338  1F3C                     	;# 
  8339  1F3D                     	;# 
  8340  1F3E                     	;# 
  8341  1F3F                     	;# 
  8342  1F43                     	;# 
  8343  1F44                     	;# 
  8344  1F45                     	;# 
  8345  1F46                     	;# 
  8346  1F47                     	;# 
  8347  1F48                     	;# 
  8348  1F49                     	;# 
  8349  1F4A                     	;# 
  8350  1F4E                     	;# 
  8351  1F4F                     	;# 
  8352  1F50                     	;# 
  8353  1F51                     	;# 
  8354  1F52                     	;# 
  8355  1F53                     	;# 
  8356  1F54                     	;# 
  8357  1F55                     	;# 
  8358  1FE4                     	;# 
  8359  1FE5                     	;# 
  8360  1FE6                     	;# 
  8361  1FE7                     	;# 
  8362  1FE8                     	;# 
  8363  1FE8                     	;# 
  8364  1FE9                     	;# 
  8365  1FEA                     	;# 
  8366  1FEB                     	;# 
  8367  1FED                     	;# 
  8368  1FEE                     	;# 
  8369  1FEF                     	;# 
  8370  0000                     	;# 
  8371  0001                     	;# 
  8372  0002                     	;# 
  8373  0003                     	;# 
  8374  0004                     	;# 
  8375  0005                     	;# 
  8376  0006                     	;# 
  8377  0007                     	;# 
  8378  0008                     	;# 
  8379  0009                     	;# 
  8380  000A                     	;# 
  8381  000B                     	;# 
  8382  000C                     	;# 
  8383  000D                     	;# 
  8384  000E                     	;# 
  8385  0012                     	;# 
  8386  0013                     	;# 
  8387  0014                     	;# 
  8388  0018                     	;# 
  8389  0019                     	;# 
  8390  001A                     	;# 
  8391  008C                     	;# 
  8392  008C                     	;# 
  8393  008D                     	;# 
  8394  008E                     	;# 
  8395  008E                     	;# 
  8396  008F                     	;# 
  8397  0090                     	;# 
  8398  0090                     	;# 
  8399  0091                     	;# 
  8400  0092                     	;# 
  8401  0092                     	;# 
  8402  0093                     	;# 
  8403  0094                     	;# 
  8404  0094                     	;# 
  8405  0095                     	;# 
  8406  0096                     	;# 
  8407  0096                     	;# 
  8408  0097                     	;# 
  8409  0098                     	;# 
  8410  0099                     	;# 
  8411  009A                     	;# 
  8412  009B                     	;# 
  8413  009B                     	;# 
  8414  009C                     	;# 
  8415  009D                     	;# 
  8416  009D                     	;# 
  8417  009E                     	;# 
  8418  009F                     	;# 
  8419  010C                     	;# 
  8420  010C                     	;# 
  8421  010D                     	;# 
  8422  010E                     	;# 
  8423  010F                     	;# 
  8424  010F                     	;# 
  8425  0110                     	;# 
  8426  0111                     	;# 
  8427  0112                     	;# 
  8428  0113                     	;# 
  8429  0114                     	;# 
  8430  0115                     	;# 
  8431  0116                     	;# 
  8432  0117                     	;# 
  8433  0118                     	;# 
  8434  0119                     	;# 
  8435  0119                     	;# 
  8436  0119                     	;# 
  8437  011A                     	;# 
  8438  011A                     	;# 
  8439  011A                     	;# 
  8440  011B                     	;# 
  8441  011B                     	;# 
  8442  011B                     	;# 
  8443  011B                     	;# 
  8444  011B                     	;# 
  8445  011C                     	;# 
  8446  011C                     	;# 
  8447  011C                     	;# 
  8448  011D                     	;# 
  8449  011D                     	;# 
  8450  011D                     	;# 
  8451  011E                     	;# 
  8452  011E                     	;# 
  8453  011E                     	;# 
  8454  011F                     	;# 
  8455  011F                     	;# 
  8456  011F                     	;# 
  8457  011F                     	;# 
  8458  011F                     	;# 
  8459  018C                     	;# 
  8460  018D                     	;# 
  8461  018E                     	;# 
  8462  018F                     	;# 
  8463  0190                     	;# 
  8464  0191                     	;# 
  8465  0192                     	;# 
  8466  0196                     	;# 
  8467  0197                     	;# 
  8468  0198                     	;# 
  8469  0199                     	;# 
  8470  019A                     	;# 
  8471  019B                     	;# 
  8472  019C                     	;# 
  8473  020C                     	;# 
  8474  020D                     	;# 
  8475  020E                     	;# 
  8476  020E                     	;# 
  8477  020F                     	;# 
  8478  020F                     	;# 
  8479  0210                     	;# 
  8480  0210                     	;# 
  8481  0211                     	;# 
  8482  0211                     	;# 
  8483  0212                     	;# 
  8484  0213                     	;# 
  8485  0214                     	;# 
  8486  0214                     	;# 
  8487  0215                     	;# 
  8488  0215                     	;# 
  8489  0216                     	;# 
  8490  0216                     	;# 
  8491  0217                     	;# 
  8492  0217                     	;# 
  8493  0218                     	;# 
  8494  0219                     	;# 
  8495  021A                     	;# 
  8496  021A                     	;# 
  8497  021B                     	;# 
  8498  021B                     	;# 
  8499  021C                     	;# 
  8500  021C                     	;# 
  8501  021D                     	;# 
  8502  021D                     	;# 
  8503  021E                     	;# 
  8504  021F                     	;# 
  8505  028C                     	;# 
  8506  028C                     	;# 
  8507  028D                     	;# 
  8508  028D                     	;# 
  8509  028E                     	;# 
  8510  028F                     	;# 
  8511  0290                     	;# 
  8512  0291                     	;# 
  8513  0292                     	;# 
  8514  0292                     	;# 
  8515  0293                     	;# 
  8516  0293                     	;# 
  8517  0294                     	;# 
  8518  0295                     	;# 
  8519  0296                     	;# 
  8520  0297                     	;# 
  8521  0298                     	;# 
  8522  0298                     	;# 
  8523  0299                     	;# 
  8524  0299                     	;# 
  8525  029A                     	;# 
  8526  029B                     	;# 
  8527  029C                     	;# 
  8528  029D                     	;# 
  8529  029F                     	;# 
  8530  030C                     	;# 
  8531  030C                     	;# 
  8532  030D                     	;# 
  8533  030E                     	;# 
  8534  030F                     	;# 
  8535  0310                     	;# 
  8536  0310                     	;# 
  8537  0311                     	;# 
  8538  0312                     	;# 
  8539  0313                     	;# 
  8540  0314                     	;# 
  8541  0314                     	;# 
  8542  0315                     	;# 
  8543  0316                     	;# 
  8544  0317                     	;# 
  8545  0318                     	;# 
  8546  0318                     	;# 
  8547  0319                     	;# 
  8548  031A                     	;# 
  8549  031B                     	;# 
  8550  038C                     	;# 
  8551  038C                     	;# 
  8552  038D                     	;# 
  8553  038E                     	;# 
  8554  0390                     	;# 
  8555  0390                     	;# 
  8556  0391                     	;# 
  8557  0392                     	;# 
  8558  048C                     	;# 
  8559  048C                     	;# 
  8560  048D                     	;# 
  8561  048E                     	;# 
  8562  048F                     	;# 
  8563  048F                     	;# 
  8564  0490                     	;# 
  8565  0491                     	;# 
  8566  0492                     	;# 
  8567  0492                     	;# 
  8568  0493                     	;# 
  8569  0494                     	;# 
  8570  0495                     	;# 
  8571  0495                     	;# 
  8572  0496                     	;# 
  8573  0497                     	;# 
  8574  0498                     	;# 
  8575  0499                     	;# 
  8576  049A                     	;# 
  8577  049B                     	;# 
  8578  049C                     	;# 
  8579  049D                     	;# 
  8580  058C                     	;# 
  8581  058C                     	;# 
  8582  058D                     	;# 
  8583  058E                     	;# 
  8584  058F                     	;# 
  8585  058F                     	;# 
  8586  0590                     	;# 
  8587  0591                     	;# 
  8588  0592                     	;# 
  8589  0593                     	;# 
  8590  059C                     	;# 
  8591  059C                     	;# 
  8592  059D                     	;# 
  8593  059D                     	;# 
  8594  059E                     	;# 
  8595  059F                     	;# 
  8596  060C                     	;# 
  8597  060C                     	;# 
  8598  060D                     	;# 
  8599  060D                     	;# 
  8600  060E                     	;# 
  8601  060F                     	;# 
  8602  0610                     	;# 
  8603  0611                     	;# 
  8604  0612                     	;# 
  8605  0613                     	;# 
  8606  0614                     	;# 
  8607  0616                     	;# 
  8608  0616                     	;# 
  8609  0617                     	;# 
  8610  0617                     	;# 
  8611  0618                     	;# 
  8612  0619                     	;# 
  8613  061A                     	;# 
  8614  061B                     	;# 
  8615  061C                     	;# 
  8616  061D                     	;# 
  8617  061E                     	;# 
  8618  070C                     	;# 
  8619  070D                     	;# 
  8620  070E                     	;# 
  8621  070F                     	;# 
  8622  0710                     	;# 
  8623  0711                     	;# 
  8624  0712                     	;# 
  8625  0713                     	;# 
  8626  0714                     	;# 
  8627  0716                     	;# 
  8628  0717                     	;# 
  8629  0718                     	;# 
  8630  0719                     	;# 
  8631  071A                     	;# 
  8632  071B                     	;# 
  8633  071C                     	;# 
  8634  071D                     	;# 
  8635  071E                     	;# 
  8636  0796                     	;# 
  8637  0797                     	;# 
  8638  0798                     	;# 
  8639  0799                     	;# 
  8640  079A                     	;# 
  8641  079B                     	;# 
  8642  079C                     	;# 
  8643  079D                     	;# 
  8644  080C                     	;# 
  8645  080D                     	;# 
  8646  080E                     	;# 
  8647  080F                     	;# 
  8648  0810                     	;# 
  8649  0811                     	;# 
  8650  0812                     	;# 
  8651  0813                     	;# 
  8652  0814                     	;# 
  8653  081A                     	;# 
  8654  081A                     	;# 
  8655  081B                     	;# 
  8656  081C                     	;# 
  8657  081C                     	;# 
  8658  081D                     	;# 
  8659  081E                     	;# 
  8660  081F                     	;# 
  8661  088C                     	;# 
  8662  088D                     	;# 
  8663  088E                     	;# 
  8664  088F                     	;# 
  8665  0890                     	;# 
  8666  0891                     	;# 
  8667  0892                     	;# 
  8668  0893                     	;# 
  8669  0895                     	;# 
  8670  0896                     	;# 
  8671  0897                     	;# 
  8672  0898                     	;# 
  8673  0899                     	;# 
  8674  089A                     	;# 
  8675  089B                     	;# 
  8676  090C                     	;# 
  8677  090E                     	;# 
  8678  090F                     	;# 
  8679  091F                     	;# 
  8680  098F                     	;# 
  8681  098F                     	;# 
  8682  0990                     	;# 
  8683  0991                     	;# 
  8684  0992                     	;# 
  8685  0993                     	;# 
  8686  0994                     	;# 
  8687  0995                     	;# 
  8688  0996                     	;# 
  8689  0997                     	;# 
  8690  1E0F                     	;# 
  8691  1E10                     	;# 
  8692  1E11                     	;# 
  8693  1E12                     	;# 
  8694  1E13                     	;# 
  8695  1E14                     	;# 
  8696  1E15                     	;# 
  8697  1E16                     	;# 
  8698  1E17                     	;# 
  8699  1E18                     	;# 
  8700  1E19                     	;# 
  8701  1E1A                     	;# 
  8702  1E1B                     	;# 
  8703  1E1C                     	;# 
  8704  1E1D                     	;# 
  8705  1E1E                     	;# 
  8706  1E1F                     	;# 
  8707  1E20                     	;# 
  8708  1E21                     	;# 
  8709  1E22                     	;# 
  8710  1E23                     	;# 
  8711  1E24                     	;# 
  8712  1E25                     	;# 
  8713  1E26                     	;# 
  8714  1E27                     	;# 
  8715  1E28                     	;# 
  8716  1E29                     	;# 
  8717  1E2A                     	;# 
  8718  1E2B                     	;# 
  8719  1E2C                     	;# 
  8720  1E2D                     	;# 
  8721  1E2E                     	;# 
  8722  1E2F                     	;# 
  8723  1E30                     	;# 
  8724  1E31                     	;# 
  8725  1E32                     	;# 
  8726  1E33                     	;# 
  8727  1E34                     	;# 
  8728  1E35                     	;# 
  8729  1E36                     	;# 
  8730  1E37                     	;# 
  8731  1E8F                     	;# 
  8732  1E90                     	;# 
  8733  1E91                     	;# 
  8734  1E92                     	;# 
  8735  1E93                     	;# 
  8736  1E94                     	;# 
  8737  1E95                     	;# 
  8738  1E96                     	;# 
  8739  1E97                     	;# 
  8740  1E9C                     	;# 
  8741  1E9D                     	;# 
  8742  1E9E                     	;# 
  8743  1EA1                     	;# 
  8744  1EA2                     	;# 
  8745  1EA3                     	;# 
  8746  1EA4                     	;# 
  8747  1EA9                     	;# 
  8748  1EAA                     	;# 
  8749  1EB1                     	;# 
  8750  1EB2                     	;# 
  8751  1EB8                     	;# 
  8752  1EB9                     	;# 
  8753  1EBA                     	;# 
  8754  1EBB                     	;# 
  8755  1EBC                     	;# 
  8756  1EBD                     	;# 
  8757  1EBE                     	;# 
  8758  1EC3                     	;# 
  8759  1EC5                     	;# 
  8760  1EC6                     	;# 
  8761  1EC7                     	;# 
  8762  1EC8                     	;# 
  8763  1EC9                     	;# 
  8764  1ECA                     	;# 
  8765  1ECB                     	;# 
  8766  1ECB                     	;# 
  8767  1ECB                     	;# 
  8768  1ECC                     	;# 
  8769  1ECC                     	;# 
  8770  1ECC                     	;# 
  8771  1F10                     	;# 
  8772  1F11                     	;# 
  8773  1F12                     	;# 
  8774  1F14                     	;# 
  8775  1F15                     	;# 
  8776  1F1C                     	;# 
  8777  1F1D                     	;# 
  8778  1F1E                     	;# 
  8779  1F1F                     	;# 
  8780  1F20                     	;# 
  8781  1F21                     	;# 
  8782  1F22                     	;# 
  8783  1F23                     	;# 
  8784  1F24                     	;# 
  8785  1F25                     	;# 
  8786  1F26                     	;# 
  8787  1F27                     	;# 
  8788  1F38                     	;# 
  8789  1F39                     	;# 
  8790  1F3A                     	;# 
  8791  1F3B                     	;# 
  8792  1F3C                     	;# 
  8793  1F3D                     	;# 
  8794  1F3E                     	;# 
  8795  1F3F                     	;# 
  8796  1F43                     	;# 
  8797  1F44                     	;# 
  8798  1F45                     	;# 
  8799  1F46                     	;# 
  8800  1F47                     	;# 
  8801  1F48                     	;# 
  8802  1F49                     	;# 
  8803  1F4A                     	;# 
  8804  1F4E                     	;# 
  8805  1F4F                     	;# 
  8806  1F50                     	;# 
  8807  1F51                     	;# 
  8808  1F52                     	;# 
  8809  1F53                     	;# 
  8810  1F54                     	;# 
  8811  1F55                     	;# 
  8812  1FE4                     	;# 
  8813  1FE5                     	;# 
  8814  1FE6                     	;# 
  8815  1FE7                     	;# 
  8816  1FE8                     	;# 
  8817  1FE8                     	;# 
  8818  1FE9                     	;# 
  8819  1FEA                     	;# 
  8820  1FEB                     	;# 
  8821  1FED                     	;# 
  8822  1FEE                     	;# 
  8823  1FEF                     	;# 
  8824  0000                     	;# 
  8825  0001                     	;# 
  8826  0002                     	;# 
  8827  0003                     	;# 
  8828  0004                     	;# 
  8829  0005                     	;# 
  8830  0006                     	;# 
  8831  0007                     	;# 
  8832  0008                     	;# 
  8833  0009                     	;# 
  8834  000A                     	;# 
  8835  000B                     	;# 
  8836  000C                     	;# 
  8837  000D                     	;# 
  8838  000E                     	;# 
  8839  0012                     	;# 
  8840  0013                     	;# 
  8841  0014                     	;# 
  8842  0018                     	;# 
  8843  0019                     	;# 
  8844  001A                     	;# 
  8845  008C                     	;# 
  8846  008C                     	;# 
  8847  008D                     	;# 
  8848  008E                     	;# 
  8849  008E                     	;# 
  8850  008F                     	;# 
  8851  0090                     	;# 
  8852  0090                     	;# 
  8853  0091                     	;# 
  8854  0092                     	;# 
  8855  0092                     	;# 
  8856  0093                     	;# 
  8857  0094                     	;# 
  8858  0094                     	;# 
  8859  0095                     	;# 
  8860  0096                     	;# 
  8861  0096                     	;# 
  8862  0097                     	;# 
  8863  0098                     	;# 
  8864  0099                     	;# 
  8865  009A                     	;# 
  8866  009B                     	;# 
  8867  009B                     	;# 
  8868  009C                     	;# 
  8869  009D                     	;# 
  8870  009D                     	;# 
  8871  009E                     	;# 
  8872  009F                     	;# 
  8873  010C                     	;# 
  8874  010C                     	;# 
  8875  010D                     	;# 
  8876  010E                     	;# 
  8877  010F                     	;# 
  8878  010F                     	;# 
  8879  0110                     	;# 
  8880  0111                     	;# 
  8881  0112                     	;# 
  8882  0113                     	;# 
  8883  0114                     	;# 
  8884  0115                     	;# 
  8885  0116                     	;# 
  8886  0117                     	;# 
  8887  0118                     	;# 
  8888  0119                     	;# 
  8889  0119                     	;# 
  8890  0119                     	;# 
  8891  011A                     	;# 
  8892  011A                     	;# 
  8893  011A                     	;# 
  8894  011B                     	;# 
  8895  011B                     	;# 
  8896  011B                     	;# 
  8897  011B                     	;# 
  8898  011B                     	;# 
  8899  011C                     	;# 
  8900  011C                     	;# 
  8901  011C                     	;# 
  8902  011D                     	;# 
  8903  011D                     	;# 
  8904  011D                     	;# 
  8905  011E                     	;# 
  8906  011E                     	;# 
  8907  011E                     	;# 
  8908  011F                     	;# 
  8909  011F                     	;# 
  8910  011F                     	;# 
  8911  011F                     	;# 
  8912  011F                     	;# 
  8913  018C                     	;# 
  8914  018D                     	;# 
  8915  018E                     	;# 
  8916  018F                     	;# 
  8917  0190                     	;# 
  8918  0191                     	;# 
  8919  0192                     	;# 
  8920  0196                     	;# 
  8921  0197                     	;# 
  8922  0198                     	;# 
  8923  0199                     	;# 
  8924  019A                     	;# 
  8925  019B                     	;# 
  8926  019C                     	;# 
  8927  020C                     	;# 
  8928  020D                     	;# 
  8929  020E                     	;# 
  8930  020E                     	;# 
  8931  020F                     	;# 
  8932  020F                     	;# 
  8933  0210                     	;# 
  8934  0210                     	;# 
  8935  0211                     	;# 
  8936  0211                     	;# 
  8937  0212                     	;# 
  8938  0213                     	;# 
  8939  0214                     	;# 
  8940  0214                     	;# 
  8941  0215                     	;# 
  8942  0215                     	;# 
  8943  0216                     	;# 
  8944  0216                     	;# 
  8945  0217                     	;# 
  8946  0217                     	;# 
  8947  0218                     	;# 
  8948  0219                     	;# 
  8949  021A                     	;# 
  8950  021A                     	;# 
  8951  021B                     	;# 
  8952  021B                     	;# 
  8953  021C                     	;# 
  8954  021C                     	;# 
  8955  021D                     	;# 
  8956  021D                     	;# 
  8957  021E                     	;# 
  8958  021F                     	;# 
  8959  028C                     	;# 
  8960  028C                     	;# 
  8961  028D                     	;# 
  8962  028D                     	;# 
  8963  028E                     	;# 
  8964  028F                     	;# 
  8965  0290                     	;# 
  8966  0291                     	;# 
  8967  0292                     	;# 
  8968  0292                     	;# 
  8969  0293                     	;# 
  8970  0293                     	;# 
  8971  0294                     	;# 
  8972  0295                     	;# 
  8973  0296                     	;# 
  8974  0297                     	;# 
  8975  0298                     	;# 
  8976  0298                     	;# 
  8977  0299                     	;# 
  8978  0299                     	;# 
  8979  029A                     	;# 
  8980  029B                     	;# 
  8981  029C                     	;# 
  8982  029D                     	;# 
  8983  029F                     	;# 
  8984  030C                     	;# 
  8985  030C                     	;# 
  8986  030D                     	;# 
  8987  030E                     	;# 
  8988  030F                     	;# 
  8989  0310                     	;# 
  8990  0310                     	;# 
  8991  0311                     	;# 
  8992  0312                     	;# 
  8993  0313                     	;# 
  8994  0314                     	;# 
  8995  0314                     	;# 
  8996  0315                     	;# 
  8997  0316                     	;# 
  8998  0317                     	;# 
  8999  0318                     	;# 
  9000  0318                     	;# 
  9001  0319                     	;# 
  9002  031A                     	;# 
  9003  031B                     	;# 
  9004  038C                     	;# 
  9005  038C                     	;# 
  9006  038D                     	;# 
  9007  038E                     	;# 
  9008  0390                     	;# 
  9009  0390                     	;# 
  9010  0391                     	;# 
  9011  0392                     	;# 
  9012  048C                     	;# 
  9013  048C                     	;# 
  9014  048D                     	;# 
  9015  048E                     	;# 
  9016  048F                     	;# 
  9017  048F                     	;# 
  9018  0490                     	;# 
  9019  0491                     	;# 
  9020  0492                     	;# 
  9021  0492                     	;# 
  9022  0493                     	;# 
  9023  0494                     	;# 
  9024  0495                     	;# 
  9025  0495                     	;# 
  9026  0496                     	;# 
  9027  0497                     	;# 
  9028  0498                     	;# 
  9029  0499                     	;# 
  9030  049A                     	;# 
  9031  049B                     	;# 
  9032  049C                     	;# 
  9033  049D                     	;# 
  9034  058C                     	;# 
  9035  058C                     	;# 
  9036  058D                     	;# 
  9037  058E                     	;# 
  9038  058F                     	;# 
  9039  058F                     	;# 
  9040  0590                     	;# 
  9041  0591                     	;# 
  9042  0592                     	;# 
  9043  0593                     	;# 
  9044  059C                     	;# 
  9045  059C                     	;# 
  9046  059D                     	;# 
  9047  059D                     	;# 
  9048  059E                     	;# 
  9049  059F                     	;# 
  9050  060C                     	;# 
  9051  060C                     	;# 
  9052  060D                     	;# 
  9053  060D                     	;# 
  9054  060E                     	;# 
  9055  060F                     	;# 
  9056  0610                     	;# 
  9057  0611                     	;# 
  9058  0612                     	;# 
  9059  0613                     	;# 
  9060  0614                     	;# 
  9061  0616                     	;# 
  9062  0616                     	;# 
  9063  0617                     	;# 
  9064  0617                     	;# 
  9065  0618                     	;# 
  9066  0619                     	;# 
  9067  061A                     	;# 
  9068  061B                     	;# 
  9069  061C                     	;# 
  9070  061D                     	;# 
  9071  061E                     	;# 
  9072  070C                     	;# 
  9073  070D                     	;# 
  9074  070E                     	;# 
  9075  070F                     	;# 
  9076  0710                     	;# 
  9077  0711                     	;# 
  9078  0712                     	;# 
  9079  0713                     	;# 
  9080  0714                     	;# 
  9081  0716                     	;# 
  9082  0717                     	;# 
  9083  0718                     	;# 
  9084  0719                     	;# 
  9085  071A                     	;# 
  9086  071B                     	;# 
  9087  071C                     	;# 
  9088  071D                     	;# 
  9089  071E                     	;# 
  9090  0796                     	;# 
  9091  0797                     	;# 
  9092  0798                     	;# 
  9093  0799                     	;# 
  9094  079A                     	;# 
  9095  079B                     	;# 
  9096  079C                     	;# 
  9097  079D                     	;# 
  9098  080C                     	;# 
  9099  080D                     	;# 
  9100  080E                     	;# 
  9101  080F                     	;# 
  9102  0810                     	;# 
  9103  0811                     	;# 
  9104  0812                     	;# 
  9105  0813                     	;# 
  9106  0814                     	;# 
  9107  081A                     	;# 
  9108  081A                     	;# 
  9109  081B                     	;# 
  9110  081C                     	;# 
  9111  081C                     	;# 
  9112  081D                     	;# 
  9113  081E                     	;# 
  9114  081F                     	;# 
  9115  088C                     	;# 
  9116  088D                     	;# 
  9117  088E                     	;# 
  9118  088F                     	;# 
  9119  0890                     	;# 
  9120  0891                     	;# 
  9121  0892                     	;# 
  9122  0893                     	;# 
  9123  0895                     	;# 
  9124  0896                     	;# 
  9125  0897                     	;# 
  9126  0898                     	;# 
  9127  0899                     	;# 
  9128  089A                     	;# 
  9129  089B                     	;# 
  9130  090C                     	;# 
  9131  090E                     	;# 
  9132  090F                     	;# 
  9133  091F                     	;# 
  9134  098F                     	;# 
  9135  098F                     	;# 
  9136  0990                     	;# 
  9137  0991                     	;# 
  9138  0992                     	;# 
  9139  0993                     	;# 
  9140  0994                     	;# 
  9141  0995                     	;# 
  9142  0996                     	;# 
  9143  0997                     	;# 
  9144  1E0F                     	;# 
  9145  1E10                     	;# 
  9146  1E11                     	;# 
  9147  1E12                     	;# 
  9148  1E13                     	;# 
  9149  1E14                     	;# 
  9150  1E15                     	;# 
  9151  1E16                     	;# 
  9152  1E17                     	;# 
  9153  1E18                     	;# 
  9154  1E19                     	;# 
  9155  1E1A                     	;# 
  9156  1E1B                     	;# 
  9157  1E1C                     	;# 
  9158  1E1D                     	;# 
  9159  1E1E                     	;# 
  9160  1E1F                     	;# 
  9161  1E20                     	;# 
  9162  1E21                     	;# 
  9163  1E22                     	;# 
  9164  1E23                     	;# 
  9165  1E24                     	;# 
  9166  1E25                     	;# 
  9167  1E26                     	;# 
  9168  1E27                     	;# 
  9169  1E28                     	;# 
  9170  1E29                     	;# 
  9171  1E2A                     	;# 
  9172  1E2B                     	;# 
  9173  1E2C                     	;# 
  9174  1E2D                     	;# 
  9175  1E2E                     	;# 
  9176  1E2F                     	;# 
  9177  1E30                     	;# 
  9178  1E31                     	;# 
  9179  1E32                     	;# 
  9180  1E33                     	;# 
  9181  1E34                     	;# 
  9182  1E35                     	;# 
  9183  1E36                     	;# 
  9184  1E37                     	;# 
  9185  1E8F                     	;# 
  9186  1E90                     	;# 
  9187  1E91                     	;# 
  9188  1E92                     	;# 
  9189  1E93                     	;# 
  9190  1E94                     	;# 
  9191  1E95                     	;# 
  9192  1E96                     	;# 
  9193  1E97                     	;# 
  9194  1E9C                     	;# 
  9195  1E9D                     	;# 
  9196  1E9E                     	;# 
  9197  1EA1                     	;# 
  9198  1EA2                     	;# 
  9199  1EA3                     	;# 
  9200  1EA4                     	;# 
  9201  1EA9                     	;# 
  9202  1EAA                     	;# 
  9203  1EB1                     	;# 
  9204  1EB2                     	;# 
  9205  1EB8                     	;# 
  9206  1EB9                     	;# 
  9207  1EBA                     	;# 
  9208  1EBB                     	;# 
  9209  1EBC                     	;# 
  9210  1EBD                     	;# 
  9211  1EBE                     	;# 
  9212  1EC3                     	;# 
  9213  1EC5                     	;# 
  9214  1EC6                     	;# 
  9215  1EC7                     	;# 
  9216  1EC8                     	;# 
  9217  1EC9                     	;# 
  9218  1ECA                     	;# 
  9219  1ECB                     	;# 
  9220  1ECB                     	;# 
  9221  1ECB                     	;# 
  9222  1ECC                     	;# 
  9223  1ECC                     	;# 
  9224  1ECC                     	;# 
  9225  1F10                     	;# 
  9226  1F11                     	;# 
  9227  1F12                     	;# 
  9228  1F14                     	;# 
  9229  1F15                     	;# 
  9230  1F1C                     	;# 
  9231  1F1D                     	;# 
  9232  1F1E                     	;# 
  9233  1F1F                     	;# 
  9234  1F20                     	;# 
  9235  1F21                     	;# 
  9236  1F22                     	;# 
  9237  1F23                     	;# 
  9238  1F24                     	;# 
  9239  1F25                     	;# 
  9240  1F26                     	;# 
  9241  1F27                     	;# 
  9242  1F38                     	;# 
  9243  1F39                     	;# 
  9244  1F3A                     	;# 
  9245  1F3B                     	;# 
  9246  1F3C                     	;# 
  9247  1F3D                     	;# 
  9248  1F3E                     	;# 
  9249  1F3F                     	;# 
  9250  1F43                     	;# 
  9251  1F44                     	;# 
  9252  1F45                     	;# 
  9253  1F46                     	;# 
  9254  1F47                     	;# 
  9255  1F48                     	;# 
  9256  1F49                     	;# 
  9257  1F4A                     	;# 
  9258  1F4E                     	;# 
  9259  1F4F                     	;# 
  9260  1F50                     	;# 
  9261  1F51                     	;# 
  9262  1F52                     	;# 
  9263  1F53                     	;# 
  9264  1F54                     	;# 
  9265  1F55                     	;# 
  9266  1FE4                     	;# 
  9267  1FE5                     	;# 
  9268  1FE6                     	;# 
  9269  1FE7                     	;# 
  9270  1FE8                     	;# 
  9271  1FE8                     	;# 
  9272  1FE9                     	;# 
  9273  1FEA                     	;# 
  9274  1FEB                     	;# 
  9275  1FED                     	;# 
  9276  1FEE                     	;# 
  9277  1FEF                     	;# 
  9278  0000                     	;# 
  9279  0001                     	;# 
  9280  0002                     	;# 
  9281  0003                     	;# 
  9282  0004                     	;# 
  9283  0005                     	;# 
  9284  0006                     	;# 
  9285  0007                     	;# 
  9286  0008                     	;# 
  9287  0009                     	;# 
  9288  000A                     	;# 
  9289  000B                     	;# 
  9290  000C                     	;# 
  9291  000D                     	;# 
  9292  000E                     	;# 
  9293  0012                     	;# 
  9294  0013                     	;# 
  9295  0014                     	;# 
  9296  0018                     	;# 
  9297  0019                     	;# 
  9298  001A                     	;# 
  9299  008C                     	;# 
  9300  008C                     	;# 
  9301  008D                     	;# 
  9302  008E                     	;# 
  9303  008E                     	;# 
  9304  008F                     	;# 
  9305  0090                     	;# 
  9306  0090                     	;# 
  9307  0091                     	;# 
  9308  0092                     	;# 
  9309  0092                     	;# 
  9310  0093                     	;# 
  9311  0094                     	;# 
  9312  0094                     	;# 
  9313  0095                     	;# 
  9314  0096                     	;# 
  9315  0096                     	;# 
  9316  0097                     	;# 
  9317  0098                     	;# 
  9318  0099                     	;# 
  9319  009A                     	;# 
  9320  009B                     	;# 
  9321  009B                     	;# 
  9322  009C                     	;# 
  9323  009D                     	;# 
  9324  009D                     	;# 
  9325  009E                     	;# 
  9326  009F                     	;# 
  9327  010C                     	;# 
  9328  010C                     	;# 
  9329  010D                     	;# 
  9330  010E                     	;# 
  9331  010F                     	;# 
  9332  010F                     	;# 
  9333  0110                     	;# 
  9334  0111                     	;# 
  9335  0112                     	;# 
  9336  0113                     	;# 
  9337  0114                     	;# 
  9338  0115                     	;# 
  9339  0116                     	;# 
  9340  0117                     	;# 
  9341  0118                     	;# 
  9342  0119                     	;# 
  9343  0119                     	;# 
  9344  0119                     	;# 
  9345  011A                     	;# 
  9346  011A                     	;# 
  9347  011A                     	;# 
  9348  011B                     	;# 
  9349  011B                     	;# 
  9350  011B                     	;# 
  9351  011B                     	;# 
  9352  011B                     	;# 
  9353  011C                     	;# 
  9354  011C                     	;# 
  9355  011C                     	;# 
  9356  011D                     	;# 
  9357  011D                     	;# 
  9358  011D                     	;# 
  9359  011E                     	;# 
  9360  011E                     	;# 
  9361  011E                     	;# 
  9362  011F                     	;# 
  9363  011F                     	;# 
  9364  011F                     	;# 
  9365  011F                     	;# 
  9366  011F                     	;# 
  9367  018C                     	;# 
  9368  018D                     	;# 
  9369  018E                     	;# 
  9370  018F                     	;# 
  9371  0190                     	;# 
  9372  0191                     	;# 
  9373  0192                     	;# 
  9374  0196                     	;# 
  9375  0197                     	;# 
  9376  0198                     	;# 
  9377  0199                     	;# 
  9378  019A                     	;# 
  9379  019B                     	;# 
  9380  019C                     	;# 
  9381  020C                     	;# 
  9382  020D                     	;# 
  9383  020E                     	;# 
  9384  020E                     	;# 
  9385  020F                     	;# 
  9386  020F                     	;# 
  9387  0210                     	;# 
  9388  0210                     	;# 
  9389  0211                     	;# 
  9390  0211                     	;# 
  9391  0212                     	;# 
  9392  0213                     	;# 
  9393  0214                     	;# 
  9394  0214                     	;# 
  9395  0215                     	;# 
  9396  0215                     	;# 
  9397  0216                     	;# 
  9398  0216                     	;# 
  9399  0217                     	;# 
  9400  0217                     	;# 
  9401  0218                     	;# 
  9402  0219                     	;# 
  9403  021A                     	;# 
  9404  021A                     	;# 
  9405  021B                     	;# 
  9406  021B                     	;# 
  9407  021C                     	;# 
  9408  021C                     	;# 
  9409  021D                     	;# 
  9410  021D                     	;# 
  9411  021E                     	;# 
  9412  021F                     	;# 
  9413  028C                     	;# 
  9414  028C                     	;# 
  9415  028D                     	;# 
  9416  028D                     	;# 
  9417  028E                     	;# 
  9418  028F                     	;# 
  9419  0290                     	;# 
  9420  0291                     	;# 
  9421  0292                     	;# 
  9422  0292                     	;# 
  9423  0293                     	;# 
  9424  0293                     	;# 
  9425  0294                     	;# 
  9426  0295                     	;# 
  9427  0296                     	;# 
  9428  0297                     	;# 
  9429  0298                     	;# 
  9430  0298                     	;# 
  9431  0299                     	;# 
  9432  0299                     	;# 
  9433  029A                     	;# 
  9434  029B                     	;# 
  9435  029C                     	;# 
  9436  029D                     	;# 
  9437  029F                     	;# 
  9438  030C                     	;# 
  9439  030C                     	;# 
  9440  030D                     	;# 
  9441  030E                     	;# 
  9442  030F                     	;# 
  9443  0310                     	;# 
  9444  0310                     	;# 
  9445  0311                     	;# 
  9446  0312                     	;# 
  9447  0313                     	;# 
  9448  0314                     	;# 
  9449  0314                     	;# 
  9450  0315                     	;# 
  9451  0316                     	;# 
  9452  0317                     	;# 
  9453  0318                     	;# 
  9454  0318                     	;# 
  9455  0319                     	;# 
  9456  031A                     	;# 
  9457  031B                     	;# 
  9458  038C                     	;# 
  9459  038C                     	;# 
  9460  038D                     	;# 
  9461  038E                     	;# 
  9462  0390                     	;# 
  9463  0390                     	;# 
  9464  0391                     	;# 
  9465  0392                     	;# 
  9466  048C                     	;# 
  9467  048C                     	;# 
  9468  048D                     	;# 
  9469  048E                     	;# 
  9470  048F                     	;# 
  9471  048F                     	;# 
  9472  0490                     	;# 
  9473  0491                     	;# 
  9474  0492                     	;# 
  9475  0492                     	;# 
  9476  0493                     	;# 
  9477  0494                     	;# 
  9478  0495                     	;# 
  9479  0495                     	;# 
  9480  0496                     	;# 
  9481  0497                     	;# 
  9482  0498                     	;# 
  9483  0499                     	;# 
  9484  049A                     	;# 
  9485  049B                     	;# 
  9486  049C                     	;# 
  9487  049D                     	;# 
  9488  058C                     	;# 
  9489  058C                     	;# 
  9490  058D                     	;# 
  9491  058E                     	;# 
  9492  058F                     	;# 
  9493  058F                     	;# 
  9494  0590                     	;# 
  9495  0591                     	;# 
  9496  0592                     	;# 
  9497  0593                     	;# 
  9498  059C                     	;# 
  9499  059C                     	;# 
  9500  059D                     	;# 
  9501  059D                     	;# 
  9502  059E                     	;# 
  9503  059F                     	;# 
  9504  060C                     	;# 
  9505  060C                     	;# 
  9506  060D                     	;# 
  9507  060D                     	;# 
  9508  060E                     	;# 
  9509  060F                     	;# 
  9510  0610                     	;# 
  9511  0611                     	;# 
  9512  0612                     	;# 
  9513  0613                     	;# 
  9514  0614                     	;# 
  9515  0616                     	;# 
  9516  0616                     	;# 
  9517  0617                     	;# 
  9518  0617                     	;# 
  9519  0618                     	;# 
  9520  0619                     	;# 
  9521  061A                     	;# 
  9522  061B                     	;# 
  9523  061C                     	;# 
  9524  061D                     	;# 
  9525  061E                     	;# 
  9526  070C                     	;# 
  9527  070D                     	;# 
  9528  070E                     	;# 
  9529  070F                     	;# 
  9530  0710                     	;# 
  9531  0711                     	;# 
  9532  0712                     	;# 
  9533  0713                     	;# 
  9534  0714                     	;# 
  9535  0716                     	;# 
  9536  0717                     	;# 
  9537  0718                     	;# 
  9538  0719                     	;# 
  9539  071A                     	;# 
  9540  071B                     	;# 
  9541  071C                     	;# 
  9542  071D                     	;# 
  9543  071E                     	;# 
  9544  0796                     	;# 
  9545  0797                     	;# 
  9546  0798                     	;# 
  9547  0799                     	;# 
  9548  079A                     	;# 
  9549  079B                     	;# 
  9550  079C                     	;# 
  9551  079D                     	;# 
  9552  080C                     	;# 
  9553  080D                     	;# 
  9554  080E                     	;# 
  9555  080F                     	;# 
  9556  0810                     	;# 
  9557  0811                     	;# 
  9558  0812                     	;# 
  9559  0813                     	;# 
  9560  0814                     	;# 
  9561  081A                     	;# 
  9562  081A                     	;# 
  9563  081B                     	;# 
  9564  081C                     	;# 
  9565  081C                     	;# 
  9566  081D                     	;# 
  9567  081E                     	;# 
  9568  081F                     	;# 
  9569  088C                     	;# 
  9570  088D                     	;# 
  9571  088E                     	;# 
  9572  088F                     	;# 
  9573  0890                     	;# 
  9574  0891                     	;# 
  9575  0892                     	;# 
  9576  0893                     	;# 
  9577  0895                     	;# 
  9578  0896                     	;# 
  9579  0897                     	;# 
  9580  0898                     	;# 
  9581  0899                     	;# 
  9582  089A                     	;# 
  9583  089B                     	;# 
  9584  090C                     	;# 
  9585  090E                     	;# 
  9586  090F                     	;# 
  9587  091F                     	;# 
  9588  098F                     	;# 
  9589  098F                     	;# 
  9590  0990                     	;# 
  9591  0991                     	;# 
  9592  0992                     	;# 
  9593  0993                     	;# 
  9594  0994                     	;# 
  9595  0995                     	;# 
  9596  0996                     	;# 
  9597  0997                     	;# 
  9598  1E0F                     	;# 
  9599  1E10                     	;# 
  9600  1E11                     	;# 
  9601  1E12                     	;# 
  9602  1E13                     	;# 
  9603  1E14                     	;# 
  9604  1E15                     	;# 
  9605  1E16                     	;# 
  9606  1E17                     	;# 
  9607  1E18                     	;# 
  9608  1E19                     	;# 
  9609  1E1A                     	;# 
  9610  1E1B                     	;# 
  9611  1E1C                     	;# 
  9612  1E1D                     	;# 
  9613  1E1E                     	;# 
  9614  1E1F                     	;# 
  9615  1E20                     	;# 
  9616  1E21                     	;# 
  9617  1E22                     	;# 
  9618  1E23                     	;# 
  9619  1E24                     	;# 
  9620  1E25                     	;# 
  9621  1E26                     	;# 
  9622  1E27                     	;# 
  9623  1E28                     	;# 
  9624  1E29                     	;# 
  9625  1E2A                     	;# 
  9626  1E2B                     	;# 
  9627  1E2C                     	;# 
  9628  1E2D                     	;# 
  9629  1E2E                     	;# 
  9630  1E2F                     	;# 
  9631  1E30                     	;# 
  9632  1E31                     	;# 
  9633  1E32                     	;# 
  9634  1E33                     	;# 
  9635  1E34                     	;# 
  9636  1E35                     	;# 
  9637  1E36                     	;# 
  9638  1E37                     	;# 
  9639  1E8F                     	;# 
  9640  1E90                     	;# 
  9641  1E91                     	;# 
  9642  1E92                     	;# 
  9643  1E93                     	;# 
  9644  1E94                     	;# 
  9645  1E95                     	;# 
  9646  1E96                     	;# 
  9647  1E97                     	;# 
  9648  1E9C                     	;# 
  9649  1E9D                     	;# 
  9650  1E9E                     	;# 
  9651  1EA1                     	;# 
  9652  1EA2                     	;# 
  9653  1EA3                     	;# 
  9654  1EA4                     	;# 
  9655  1EA9                     	;# 
  9656  1EAA                     	;# 
  9657  1EB1                     	;# 
  9658  1EB2                     	;# 
  9659  1EB8                     	;# 
  9660  1EB9                     	;# 
  9661  1EBA                     	;# 
  9662  1EBB                     	;# 
  9663  1EBC                     	;# 
  9664  1EBD                     	;# 
  9665  1EBE                     	;# 
  9666  1EC3                     	;# 
  9667  1EC5                     	;# 
  9668  1EC6                     	;# 
  9669  1EC7                     	;# 
  9670  1EC8                     	;# 
  9671  1EC9                     	;# 
  9672  1ECA                     	;# 
  9673  1ECB                     	;# 
  9674  1ECB                     	;# 
  9675  1ECB                     	;# 
  9676  1ECC                     	;# 
  9677  1ECC                     	;# 
  9678  1ECC                     	;# 
  9679  1F10                     	;# 
  9680  1F11                     	;# 
  9681  1F12                     	;# 
  9682  1F14                     	;# 
  9683  1F15                     	;# 
  9684  1F1C                     	;# 
  9685  1F1D                     	;# 
  9686  1F1E                     	;# 
  9687  1F1F                     	;# 
  9688  1F20                     	;# 
  9689  1F21                     	;# 
  9690  1F22                     	;# 
  9691  1F23                     	;# 
  9692  1F24                     	;# 
  9693  1F25                     	;# 
  9694  1F26                     	;# 
  9695  1F27                     	;# 
  9696  1F38                     	;# 
  9697  1F39                     	;# 
  9698  1F3A                     	;# 
  9699  1F3B                     	;# 
  9700  1F3C                     	;# 
  9701  1F3D                     	;# 
  9702  1F3E                     	;# 
  9703  1F3F                     	;# 
  9704  1F43                     	;# 
  9705  1F44                     	;# 
  9706  1F45                     	;# 
  9707  1F46                     	;# 
  9708  1F47                     	;# 
  9709  1F48                     	;# 
  9710  1F49                     	;# 
  9711  1F4A                     	;# 
  9712  1F4E                     	;# 
  9713  1F4F                     	;# 
  9714  1F50                     	;# 
  9715  1F51                     	;# 
  9716  1F52                     	;# 
  9717  1F53                     	;# 
  9718  1F54                     	;# 
  9719  1F55                     	;# 
  9720  1FE4                     	;# 
  9721  1FE5                     	;# 
  9722  1FE6                     	;# 
  9723  1FE7                     	;# 
  9724  1FE8                     	;# 
  9725  1FE8                     	;# 
  9726  1FE9                     	;# 
  9727  1FEA                     	;# 
  9728  1FEB                     	;# 
  9729  1FED                     	;# 
  9730  1FEE                     	;# 
  9731  1FEF                     	;_dmxArray
  9732                           
  9733                           	psect	idataCOMMON
  9734  0002                     __pidataCOMMON:	
  9735                           
  9736                           ;initializer for _incInterval
  9737  0002  3464               	retlw	100
  9738  0003  3400               	retlw	0
  9739                           
  9740                           	psect	idataBANK1
  9741  1EB4                     __pidataBANK1:	
  9742                           
  9743                           ;initializer for _address
  9744  1EB4  3401               	retlw	1
  9745  1EB5  3400               	retlw	0
  9746                           
  9747                           ;initializer for _startup
  9748  1EB6  3401               	retlw	1
  9749                           
  9750                           ;initializer for _beatBrightness
  9751  1EB7  3401               	retlw	1
  9752                           
  9753                           	psect	idataBANK2
  9754  0801                     __pidataBANK2:	
  9755                           
  9756                           ;initializer for _initial
  9757  0801  3401               	retlw	1
  9758  0802  3400               	retlw	0
  9759                           
  9760                           ;initializer for _delay
  9761  0803  340A               	retlw	10
  9762  0804  3400               	retlw	0
  9763                           
  9764                           ;initializer for _threshold
  9765  0805  3490               	retlw	144
  9766  0806  3406               	retlw	6
  9767                           
  9768                           	psect	stringtext1
  9769  1800                     __pstringtext1:	
  9770  1800                     _charTable:	
  9771  1800  3400               	retlw	0
  9772  1801  3482               	retlw	130
  9773  1802  3421               	retlw	33
  9774  1803  3400               	retlw	0
  9775  1804  3400               	retlw	0
  9776  1805  3400               	retlw	0
  9777  1806  3400               	retlw	0
  9778  1807  3402               	retlw	2
  9779  1808  3439               	retlw	57
  9780  1809  340F               	retlw	15
  9781  180A  3400               	retlw	0
  9782  180B  3400               	retlw	0
  9783  180C  3400               	retlw	0
  9784  180D  3440               	retlw	64
  9785  180E  3480               	retlw	128
  9786  180F  3400               	retlw	0
  9787  1810  343F               	retlw	63
  9788  1811  3406               	retlw	6
  9789  1812  345B               	retlw	91
  9790  1813  344F               	retlw	79
  9791  1814  3466               	retlw	102
  9792  1815  346D               	retlw	109
  9793  1816  347D               	retlw	125
  9794  1817  3407               	retlw	7
  9795  1818  347F               	retlw	127
  9796  1819  346F               	retlw	111
  9797  181A  3400               	retlw	0
  9798  181B  3400               	retlw	0
  9799  181C  3400               	retlw	0
  9800  181D  3448               	retlw	72
  9801  181E  3400               	retlw	0
  9802  181F  3453               	retlw	83
  9803  1820  3400               	retlw	0
  9804  1821  3477               	retlw	119
  9805  1822  347C               	retlw	124
  9806  1823  3439               	retlw	57
  9807  1824  345E               	retlw	94
  9808  1825  3479               	retlw	121
  9809  1826  3471               	retlw	113
  9810  1827  346F               	retlw	111
  9811  1828  3476               	retlw	118
  9812  1829  3406               	retlw	6
  9813  182A  341E               	retlw	30
  9814  182B  3400               	retlw	0
  9815  182C  3438               	retlw	56
  9816  182D  3400               	retlw	0
  9817  182E  3454               	retlw	84
  9818  182F  343F               	retlw	63
  9819  1830  3473               	retlw	115
  9820  1831  3467               	retlw	103
  9821  1832  3450               	retlw	80
  9822  1833  346D               	retlw	109
  9823  1834  3478               	retlw	120
  9824  1835  343E               	retlw	62
  9825  1836  3400               	retlw	0
  9826  1837  3400               	retlw	0
  9827  1838  3400               	retlw	0
  9828  1839  346E               	retlw	110
  9829  183A  3400               	retlw	0
  9830  183B  3439               	retlw	57
  9831  183C  3400               	retlw	0
  9832  183D  340F               	retlw	15
  9833  183E  3400               	retlw	0
  9834  183F  3408               	retlw	8
  9835  1840  3463               	retlw	99
  9836  1841  345F               	retlw	95
  9837  1842  347C               	retlw	124
  9838  1843  3458               	retlw	88
  9839  1844  345E               	retlw	94
  9840  1845  347B               	retlw	123
  9841  1846  3471               	retlw	113
  9842  1847  346F               	retlw	111
  9843  1848  3474               	retlw	116
  9844  1849  3402               	retlw	2
  9845  184A  341E               	retlw	30
  9846  184B  3400               	retlw	0
  9847  184C  3406               	retlw	6
  9848  184D  3400               	retlw	0
  9849  184E  3454               	retlw	84
  9850  184F  345C               	retlw	92
  9851  1850  3473               	retlw	115
  9852  1851  3467               	retlw	103
  9853  1852  3450               	retlw	80
  9854  1853  346D               	retlw	109
  9855  1854  3478               	retlw	120
  9856  1855  341C               	retlw	28
  9857  1856  3400               	retlw	0
  9858  1857  3400               	retlw	0
  9859  1858  3400               	retlw	0
  9860  1859  346E               	retlw	110
  9861  185A  3400               	retlw	0
  9862  185B  3439               	retlw	57
  9863  185C  3430               	retlw	48
  9864  185D  340F               	retlw	15
  9865  185E  3400               	retlw	0
  9866  185F  3400               	retlw	0
  9867  1860                     __end_of_charTable:	
  9868                           
  9869                           	psect	nvBANK2
  9870  0158                     __pnvBANK2:	
  9871  0158                     _ADCC_ADTI_InterruptHandler:	
  9872  0158                     	ds	2
  9873  015A                     _TMR0_InterruptHandler:	
  9874  015A                     	ds	2
  9875  015C                     _EUSART1_ErrorHandler:	
  9876  015C                     	ds	2
  9877  015E                     _EUSART1_OverrunErrorHandler:	
  9878  015E                     	ds	2
  9879  0160                     _EUSART1_FramingErrorHandler:	
  9880  0160                     	ds	2
  9881  0162                     _EUSART1_RxDefaultInterruptHandler:	
  9882  0162                     	ds	2
  9883  0014                     _TRISCbits	set	20
  9884  0012                     _TRISAbits	set	18
  9885  000B                     _INTCONbits	set	11
  9886  0014                     _TRISC	set	20
  9887  0013                     _TRISB	set	19
  9888  0012                     _TRISA	set	18
  9889  001A                     _LATC	set	26
  9890  0019                     _LATB	set	25
  9891  0018                     _LATA	set	24
  9892  000C                     _PORTA	set	12
  9893  000E                     _PORTC	set	14
  9894  00D5                     _LATC5	set	213
  9895  0090                     _ADERRL	set	144
  9896  0091                     _ADERRH	set	145
  9897  009B                     _ADPREVL	set	155
  9898  009C                     _ADPREVH	set	156
  9899  0094                     _ADFLTRL	set	148
  9900  0095                     _ADFLTRH	set	149
  9901  0096                     _ADACCL	set	150
  9902  0097                     _ADACCH	set	151
  9903  0099                     _ADCNT	set	153
  9904  009D                     _ADRESL	set	157
  9905  009E                     _ADRESH	set	158
  9906  009F                     _ADPCH	set	159
  9907  009A                     _ADRPT	set	154
  9908  0098                     _ADACCU	set	152
  9909  0093                     _ADSTPTH	set	147
  9910  0092                     _ADSTPTL	set	146
  9911  008F                     _ADUTHH	set	143
  9912  008E                     _ADUTHL	set	142
  9913  008D                     _ADLTHH	set	141
  9914  008C                     _ADLTHL	set	140
  9915  0112                     _ADCON1bits	set	274
  9916  0115                     _ADSTATbits	set	277
  9917  0113                     _ADCON2bits	set	275
  9918  0114                     _ADCON3bits	set	276
  9919  0111                     _ADCON0bits	set	273
  9920  0111                     _ADCON0	set	273
  9921  0118                     _ADCLK	set	280
  9922  0117                     _ADACT	set	279
  9923  0116                     _ADREF	set	278
  9924  0115                     _ADSTAT	set	277
  9925  0114                     _ADCON3	set	276
  9926  0113                     _ADCON2	set	275
  9927  0112                     _ADCON1	set	274
  9928  0110                     _ADPREH	set	272
  9929  010F                     _ADPREL	set	271
  9930  010E                     _ADCAP	set	270
  9931  010D                     _ADACQH	set	269
  9932  010C                     _ADACQL	set	268
  9933  0119                     _RC1REG	set	281
  9934  011D                     _RC1STAbits	set	285
  9935  011A                     _TX1REG	set	282
  9936  011E                     _TX1STAbits	set	286
  9937  011C                     _SP1BRGH	set	284
  9938  011B                     _SP1BRGL	set	283
  9939  011E                     _TX1STA	set	286
  9940  011D                     _RC1STA	set	285
  9941  011F                     _BAUD1CON	set	287
  9942  018C                     _SSP1BUF	set	396
  9943  0191                     _SSP1CON2bits	set	401
  9944  0190                     _SSP1CON1bits	set	400
  9945  018D                     _SSP1ADD	set	397
  9946  0192                     _SSP1CON3	set	402
  9947  0190                     _SSP1CON1	set	400
  9948  018F                     _SSP1STAT	set	399
  9949  021E                     _CCPTMRS0bits	set	542
  9950  028D                     _PR2	set	653
  9951  028C                     _TMR2	set	652
  9952  028E                     _T2CONbits	set	654
  9953  0291                     _T2RSTbits	set	657
  9954  028F                     _T2HLTbits	set	655
  9955  028E                     _T2CON	set	654
  9956  028C                     _T2TMR	set	652
  9957  028D                     _T2PR	set	653
  9958  0291                     _T2RST	set	657
  9959  028F                     _T2HLT	set	655
  9960  0290                     _T2CLKCON	set	656
  9961  0312                     _CCP2CONbits	set	786
  9962  0310                     _CCPR2L	set	784
  9963  0311                     _CCPR2H	set	785
  9964  0312                     _CCP2CON	set	786
  9965  030E                     _CCP1CONbits	set	782
  9966  030C                     _CCPR1L	set	780
  9967  030D                     _CCPR1H	set	781
  9968  030E                     _CCP1CON	set	782
  9969  031A                     _CCP4CONbits	set	794
  9970  0318                     _CCPR4L	set	792
  9971  0319                     _CCPR4H	set	793
  9972  031A                     _CCP4CON	set	794
  9973  0316                     _CCP3CONbits	set	790
  9974  0314                     _CCPR3L	set	788
  9975  0315                     _CCPR3H	set	789
  9976  0316                     _CCP3CON	set	790
  9977  059E                     _T0CON0bits	set	1438
  9978  059E                     _T0CON0	set	1438
  9979  059C                     _TMR0L	set	1436
  9980  059D                     _TMR0H	set	1437
  9981  059F                     _T0CON1	set	1439
  9982  070D                     _PIR1bits	set	1805
  9983  0717                     _PIE1bits	set	1815
  9984  070C                     _PIR0bits	set	1804
  9985  0716                     _PIE0bits	set	1814
  9986  070F                     _PIR3bits	set	1807
  9987  0719                     _PIE3bits	set	1817
  9988  0710                     _PIR4bits	set	1808
  9989  079D                     _PMD7	set	1949
  9990  079C                     _PMD6	set	1948
  9991  079B                     _PMD5	set	1947
  9992  079A                     _PMD4	set	1946
  9993  0799                     _PMD3	set	1945
  9994  0798                     _PMD2	set	1944
  9995  0797                     _PMD1	set	1943
  9996  0796                     _PMD0	set	1942
  9997  0892                     _OSCTUNE	set	2194
  9998  0893                     _OSCFRQ	set	2195
  9999  0891                     _OSCEN	set	2193
 10000  088F                     _OSCCON3	set	2191
 10001  088D                     _OSCCON1	set	2189
 10002  1ECB                     _RX1DTPPS	set	7883
 10003  1EC6                     _SSP1DATPPS	set	7878
 10004  1EC5                     _SSP1CLKPPS	set	7877
 10005  1F4F                     _WPUCbits	set	8015
 10006  1F4E                     _ANSELCbits	set	8014
 10007  1F39                     _WPUAbits	set	7993
 10008  1F38                     _ANSELAbits	set	7992
 10009  1F27                     _RC7PPS	set	7975
 10010  1F26                     _RC6PPS	set	7974
 10011  1F15                     _RA5PPS	set	7957
 10012  1F24                     _RC4PPS	set	7972
 10013  1F23                     _RC3PPS	set	7971
 10014  1F14                     _RA4PPS	set	7956
 10015  1F51                     _SLRCONC	set	8017
 10016  1F46                     _SLRCONB	set	8006
 10017  1F3B                     _SLRCONA	set	7995
 10018  1F50                     _ODCONC	set	8016
 10019  1F45                     _ODCONB	set	8005
 10020  1F3A                     _ODCONA	set	7994
 10021  1F4F                     _WPUC	set	8015
 10022  1F39                     _WPUA	set	7993
 10023  1F44                     _WPUB	set	8004
 10024  1F38                     _ANSELA	set	7992
 10025  1F43                     _ANSELB	set	8003
 10026  1F4E                     _ANSELC	set	8014
 10027                           
 10028                           	psect	stringtext2
 10029  2000                     __pstringtext2:	
 10030  2000                     STR_18:	
 10031  2000  3425               	retlw	37	;'%'
 10032  2001  3463               	retlw	99	;'c'
 10033  2002  3425               	retlw	37	;'%'
 10034  2003  3463               	retlw	99	;'c'
 10035  2004  3425               	retlw	37	;'%'
 10036  2005  3463               	retlw	99	;'c'
 10037  2006  3425               	retlw	37	;'%'
 10038  2007  3463               	retlw	99	;'c'
 10039  2008  340D               	retlw	13
 10040  2009  3400               	retlw	0
 10041                           
 10042                           	psect	stringtext3
 10043  200A                     __pstringtext3:	
 10044  200A                     STR_19:	
 10045  200A  3425               	retlw	37	;'%'
 10046  200B  3463               	retlw	99	;'c'
 10047  200C  3425               	retlw	37	;'%'
 10048  200D  3463               	retlw	99	;'c'
 10049  200E  3425               	retlw	37	;'%'
 10050  200F  3463               	retlw	99	;'c'
 10051  2010  3420               	retlw	32	;' '
 10052  2011  340D               	retlw	13
 10053  2012  3400               	retlw	0
 10054                           
 10055                           	psect	stringtext4
 10056  2013                     __pstringtext4:	
 10057  2013                     STR_17:	
 10058  2013  3420               	retlw	32	;' '
 10059  2014  3425               	retlw	37	;'%'
 10060  2015  3463               	retlw	99	;'c'
 10061  2016  3425               	retlw	37	;'%'
 10062  2017  3463               	retlw	99	;'c'
 10063  2018  3425               	retlw	37	;'%'
 10064  2019  3463               	retlw	99	;'c'
 10065  201A  340D               	retlw	13
 10066  201B  3400               	retlw	0
 10067                           
 10068                           	psect	stringtext5
 10069  201C                     __pstringtext5:	
 10070  201C                     STR_14:	
 10071  201C  3448               	retlw	72	;'H'
 10072  201D  3445               	retlw	69	;'E'
 10073  201E  3459               	retlw	89	;'Y'
 10074  201F  3459               	retlw	89	;'Y'
 10075  2020  3459               	retlw	89	;'Y'
 10076  2021  3459               	retlw	89	;'Y'
 10077  2022  3459               	retlw	89	;'Y'
 10078  2023  3459               	retlw	89	;'Y'
 10079  2024  3400               	retlw	0
 10080                           
 10081                           	psect	stringtext6
 10082  2025                     __pstringtext6:	
 10083  2025                     STR_20:	
 10084  2025  3425               	retlw	37	;'%'
 10085  2026  3463               	retlw	99	;'c'
 10086  2027  3425               	retlw	37	;'%'
 10087  2028  3463               	retlw	99	;'c'
 10088  2029  3420               	retlw	32	;' '
 10089  202A  3420               	retlw	32	;' '
 10090  202B  340D               	retlw	13
 10091  202C  3400               	retlw	0
 10092                           
 10093                           	psect	stringtext7
 10094  202D                     __pstringtext7:	
 10095  202D                     STR_16:	
 10096  202D  3420               	retlw	32	;' '
 10097  202E  3420               	retlw	32	;' '
 10098  202F  3425               	retlw	37	;'%'
 10099  2030  3463               	retlw	99	;'c'
 10100  2031  3425               	retlw	37	;'%'
 10101  2032  3463               	retlw	99	;'c'
 10102  2033  340D               	retlw	13
 10103  2034  3400               	retlw	0
 10104                           
 10105                           	psect	stringtext8
 10106  2035                     __pstringtext8:	
 10107  2035                     STR_6:	
 10108  2035  3441               	retlw	65	;'A'
 10109  2036  342D               	retlw	45	;'-'
 10110  2037  3425               	retlw	37	;'%'
 10111  2038  3464               	retlw	100	;'d'
 10112  2039  3420               	retlw	32	;' '
 10113  203A  3420               	retlw	32	;' '
 10114  203B  340D               	retlw	13
 10115  203C  3400               	retlw	0
 10116                           
 10117                           	psect	stringtext9
 10118  203D                     __pstringtext9:	
 10119  203D                     STR_5:	
 10120  203D  3443               	retlw	67	;'C'
 10121  203E  342D               	retlw	45	;'-'
 10122  203F  3425               	retlw	37	;'%'
 10123  2040  3464               	retlw	100	;'d'
 10124  2041  3420               	retlw	32	;' '
 10125  2042  3420               	retlw	32	;' '
 10126  2043  340D               	retlw	13
 10127  2044  3400               	retlw	0
 10128                           
 10129                           	psect	stringtext10
 10130  2045                     __pstringtext10:	
 10131  2045                     STR_4:	
 10132  2045  3446               	retlw	70	;'F'
 10133  2046  342D               	retlw	45	;'-'
 10134  2047  3425               	retlw	37	;'%'
 10135  2048  3464               	retlw	100	;'d'
 10136  2049  3420               	retlw	32	;' '
 10137  204A  3420               	retlw	32	;' '
 10138  204B  340D               	retlw	13
 10139  204C  3400               	retlw	0
 10140                           
 10141                           	psect	stringtext11
 10142  204D                     __pstringtext11:	
 10143  204D                     STR_3:	
 10144  204D  3442               	retlw	66	;'B'
 10145  204E  342D               	retlw	45	;'-'
 10146  204F  3425               	retlw	37	;'%'
 10147  2050  3475               	retlw	117	;'u'
 10148  2051  3420               	retlw	32	;' '
 10149  2052  3420               	retlw	32	;' '
 10150  2053  340D               	retlw	13
 10151  2054  3400               	retlw	0
 10152                           
 10153                           	psect	stringtext12
 10154  2055                     __pstringtext12:	
 10155  2055                     STR_21:	
 10156  2055  3425               	retlw	37	;'%'
 10157  2056  3463               	retlw	99	;'c'
 10158  2057  3420               	retlw	32	;' '
 10159  2058  3420               	retlw	32	;' '
 10160  2059  3420               	retlw	32	;' '
 10161  205A  340D               	retlw	13
 10162  205B  3400               	retlw	0
 10163                           
 10164                           	psect	stringtext13
 10165  205C                     __pstringtext13:	
 10166  205C                     STR_15:	
 10167  205C  3420               	retlw	32	;' '
 10168  205D  3420               	retlw	32	;' '
 10169  205E  3420               	retlw	32	;' '
 10170  205F  3425               	retlw	37	;'%'
 10171  2060  3463               	retlw	99	;'c'
 10172  2061  340D               	retlw	13
 10173  2062  3400               	retlw	0
 10174                           
 10175                           	psect	stringtext14
 10176  2063                     __pstringtext14:	
 10177  2063                     STR_22:	
 10178  2063  3420               	retlw	32	;' '
 10179  2064  3420               	retlw	32	;' '
 10180  2065  3420               	retlw	32	;' '
 10181  2066  3420               	retlw	32	;' '
 10182  2067  340D               	retlw	13
 10183  2068  3400               	retlw	0
 10184                           
 10185                           	psect	stringtext15
 10186  2069                     __pstringtext15:	
 10187  2069                     STR_10:	
 10188  2069  3450               	retlw	80	;'P'
 10189  206A  3443               	retlw	67	;'C'
 10190  206B  3420               	retlw	32	;' '
 10191  206C  3420               	retlw	32	;' '
 10192  206D  340D               	retlw	13
 10193  206E  3400               	retlw	0
 10194                           
 10195                           	psect	stringtext16
 10196  206F                     __pstringtext16:	
 10197  206F                     STR_11:	
 10198  206F  344C               	retlw	76	;'L'
 10199  2070  3445               	retlw	69	;'E'
 10200  2071  3444               	retlw	68	;'D'
 10201  2072  3420               	retlw	32	;' '
 10202  2073  340D               	retlw	13
 10203  2074  3400               	retlw	0
 10204                           
 10205                           	psect	stringtext17
 10206  2075                     __pstringtext17:	
 10207  2075                     STR_7:	
 10208  2075  3441               	retlw	65	;'A'
 10209  2076  344E               	retlw	78	;'N'
 10210  2077  3449               	retlw	73	;'I'
 10211  2078  3420               	retlw	32	;' '
 10212  2079  340D               	retlw	13
 10213  207A  3400               	retlw	0
 10214                           
 10215                           	psect	stringtext18
 10216  207B                     __pstringtext18:	
 10217  207B                     STR_2:	
 10218  207B  3453               	retlw	83	;'S'
 10219  207C  3445               	retlw	69	;'E'
 10220  207D  344C               	retlw	76	;'L'
 10221  207E  3431               	retlw	49	;'1'
 10222  207F  340D               	retlw	13
 10223  2080  3400               	retlw	0
 10224                           
 10225                           	psect	stringtext19
 10226  2081                     __pstringtext19:	
 10227  2081                     STR_1:	
 10228  2081  3448               	retlw	72	;'H'
 10229  2082  344F               	retlw	79	;'O'
 10230  2083  344C               	retlw	76	;'L'
 10231  2084  3444               	retlw	68	;'D'
 10232  2085  340D               	retlw	13
 10233  2086  3400               	retlw	0
 10234                           
 10235                           	psect	stringtext20
 10236  2087                     __pstringtext20:	
 10237  2087                     STR_8:	
 10238  2087  3442               	retlw	66	;'B'
 10239  2088  3445               	retlw	69	;'E'
 10240  2089  3441               	retlw	65	;'A'
 10241  208A  3454               	retlw	84	;'T'
 10242  208B  340D               	retlw	13
 10243  208C  3400               	retlw	0
 10244                           
 10245                           	psect	stringtext21
 10246  208D                     __pstringtext21:	
 10247  208D                     STR_12:	
 10248  208D  3420               	retlw	32	;' '
 10249  208E  3420               	retlw	32	;' '
 10250  208F  3420               	retlw	32	;' '
 10251  2090  3420               	retlw	32	;' '
 10252  2091  3400               	retlw	0
 10253                           
 10254                           	psect	stringtext22
 10255  0000                     __pstringtext22:	
 10256  2067                     
 10257                           ; #config settings
 10258  0000                     
 10259                           	psect	cinit
 10260  0032                     start_initialization:	
 10261  0032                     __initialization:		;BIGRAM
 10262                           
 10263                           ; Initialize objects allocated to COMMON
 10264  0032  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
 10265  0035  00FC               	movwf	__pdataCOMMON& (0+127)
 10266  0036  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
 10267  0039  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
 10268                           
 10269                           ; Initialize objects allocated to BANK1
 10270  003A  0141               	movlb	1	; select bank1
 10271  003B  319E  26B4  3180   	fcall	__pidataBANK1	;fetch initializer
 10272  003E  00EC               	movwf	__pdataBANK1& (0+127)
 10273  003F  319E  26B5  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10274  0042  00ED               	movwf	(__pdataBANK1+1)& (0+127)
 10275  0043  319E  26B6  3180   	fcall	__pidataBANK1+2	;fetch initializer
 10276  0046  00EE               	movwf	(__pdataBANK1+2)& (0+127)
 10277  0047  319E  26B7  3180   	fcall	__pidataBANK1+3	;fetch initializer
 10278  004A  00EF               	movwf	(__pdataBANK1+3)& (0+127)
 10279                           
 10280                           ; Initialize objects allocated to BANK2
 10281  004B  3001               	movlw	low __pidataBANK2
 10282  004C  0084               	movwf	4
 10283  004D  3088               	movlw	(high __pidataBANK2)| (0+128)
 10284  004E  0085               	movwf	5
 10285  004F  0142               	movlb	2	; select bank2
 10286  0050  0012               	moviw fsr0++
 10287  0051  00E4               	movwf	__pdataBANK2& (0+127)
 10288  0052  0012               	moviw fsr0++
 10289  0053  00E5               	movwf	(__pdataBANK2+1)& (0+127)
 10290  0054  0012               	moviw fsr0++
 10291  0055  00E6               	movwf	(__pdataBANK2+2)& (0+127)
 10292  0056  0012               	moviw fsr0++
 10293  0057  00E7               	movwf	(__pdataBANK2+3)& (0+127)
 10294  0058  0012               	moviw fsr0++
 10295  0059  00E8               	movwf	(__pdataBANK2+4)& (0+127)
 10296  005A  0012               	moviw fsr0++
 10297  005B  00E9               	movwf	(__pdataBANK2+5)& (0+127)
 10298                           
 10299                           ; Clear objects allocated to BIGRAM
 10300  005C  30EE               	movlw	low (0+9198)
 10301  005D  0084               	movwf	4
 10302  005E  3023               	movlw	high (0+9198)
 10303  005F  0085               	movwf	5
 10304  0060  3002               	movlw	2
 10305  0061  00FE               	movwf	btemp
 10306  0062  3004               	movlw	4
 10307  0063  00FF               	movwf	btemp+1
 10308  0064  319F  2762  3180   	fcall	clear_ram0
 10309                           
 10310                           ; Clear objects allocated to COMMON
 10311  0067  01F7               	clrf	__pbssCOMMON& (0+127)
 10312  0068  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
 10313  0069  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
 10314  006A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
 10315  006B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
 10316                           
 10317                           ; Clear objects allocated to BANK1
 10318  006C  30A0               	movlw	low __pbssBANK1
 10319  006D  0084               	movwf	4
 10320  006E  3000               	movlw	high __pbssBANK1
 10321  006F  0085               	movwf	5
 10322  0070  3027               	movlw	39
 10323  0071  00FE               	movwf	btemp
 10324  0072  3000               	movlw	0
 10325  0073  00FF               	movwf	btemp+1
 10326  0074  319F  2762  3180   	fcall	clear_ram0
 10327                           
 10328                           ; Clear objects allocated to BANK2
 10329  0077  3020               	movlw	low __pbssBANK2
 10330  0078  0084               	movwf	4
 10331  0079  3001               	movlw	high __pbssBANK2
 10332  007A  0085               	movwf	5
 10333  007B  3038               	movlw	56
 10334  007C  00FE               	movwf	btemp
 10335  007D  3000               	movlw	0
 10336  007E  00FF               	movwf	btemp+1
 10337  007F  319F  2762  3180   	fcall	clear_ram0
 10338                           
 10339                           ; Clear objects allocated to BANK3
 10340  0082  30A0               	movlw	low __pbssBANK3
 10341  0083  0084               	movwf	4
 10342  0084  3001               	movlw	high __pbssBANK3
 10343  0085  0085               	movwf	5
 10344  0086  3040               	movlw	64
 10345  0087  00FE               	movwf	btemp
 10346  0088  3000               	movlw	0
 10347  0089  00FF               	movwf	btemp+1
 10348  008A  319F  2762         	fcall	clear_ram0
 10349  008C                     end_of_initialization:	
 10350                           ;End of C runtime variable initialization code
 10351                           
 10352  008C                     __end_of__initialization:	
 10353  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10354  008D  0140               	movlb	0
 10355  008E  3194  2CD8         	ljmp	_main	;jump to C main() function
 10356                           
 10357                           	psect	bssCOMMON
 10358  0077                     __pbssCOMMON:	
 10359  0077                     _p_i2c1_trb_current:	
 10360  0077                     	ds	1
 10361  0078                     _eusart1RxTail:	
 10362  0078                     	ds	1
 10363  0079                     _eusart1RxHead:	
 10364  0079                     	ds	1
 10365  007A                     I2C1_ISR@i2c_address:	
 10366  007A                     	ds	2
 10367                           
 10368                           	psect	dataCOMMON
 10369  007C                     __pdataCOMMON:	
 10370  007C                     _incInterval:	
 10371  007C                     	ds	2
 10372                           
 10373                           	psect	bssBANK1
 10374  00A0                     __pbssBANK1:	
 10375  00A0                     _i2c1_object:	
 10376  00A0                     	ds	5
 10377  00A5                     _manual:	
 10378  00A5                     	ds	4
 10379  00A9                     _currentState:	
 10380  00A9                     	ds	2
 10381  00AB                     _lastIncTime:	
 10382  00AB                     	ds	2
 10383  00AD                     _lastDetected:	
 10384  00AD                     	ds	1
 10385  00AE                     _thresholdExceeded:	
 10386  00AE                     	ds	1
 10387  00AF                     _detected:	
 10388  00AF                     	ds	1
 10389  00B0                     _position:	
 10390  00B0                     	ds	1
 10391  00B1                     _colorModeSelected:	
 10392  00B1                     	ds	1
 10393  00B2                     _beatHold:	
 10394  00B2                     	ds	1
 10395  00B3                     _enterState:	
 10396  00B3                     	ds	1
 10397  00B4                     _menuState:	
 10398  00B4                     	ds	1
 10399  00B5                     _downState:	
 10400  00B5                     	ds	1
 10401  00B6                     _upState:	
 10402  00B6                     	ds	1
 10403  00B7                     _enterPressed:	
 10404  00B7                     	ds	1
 10405  00B8                     _menuPressed:	
 10406  00B8                     	ds	1
 10407  00B9                     _currentSelection:	
 10408  00B9                     	ds	1
 10409  00BA                     _menuSelected:	
 10410  00BA                     	ds	1
 10411  00BB                     _enter:	
 10412  00BB                     	ds	1
 10413  00BC                     _down:	
 10414  00BC                     	ds	1
 10415  00BD                     _up:	
 10416  00BD                     	ds	1
 10417  00BE                     _menu:	
 10418  00BE                     	ds	1
 10419  00BF                     I2C1_ISR@i2c_10bit_address_restart:	
 10420  00BF                     	ds	1
 10421  00C0                     I2C1_ISR@i2c_bytes_left:	
 10422  00C0                     	ds	1
 10423  00C1                     I2C1_ISR@pi2c_buf_ptr:	
 10424  00C1                     	ds	1
 10425  00C2                     _p_i2c1_current:	
 10426  00C2                     	ds	1
 10427  00C3                     _i2c1_trb_count:	
 10428  00C3                     	ds	1
 10429  00C4                     _i2c1_state:	
 10430  00C4                     	ds	1
 10431  00C5                     _eusart1RxLastError:	
 10432  00C5                     	ds	1
 10433  00C6                     _eusart1RxCount:	
 10434  00C6                     	ds	1
 10435                           
 10436                           	psect	dataBANK1
 10437  00EC                     __pdataBANK1:	
 10438  00EC                     _address:	
 10439  00EC                     	ds	2
 10440  00EE                     _startup:	
 10441  00EE                     	ds	1
 10442  00EF                     _beatBrightness:	
 10443  00EF                     	ds	1
 10444                           
 10445                           	psect	bssBANK2
 10446  0120                     __pbssBANK2:	
 10447  0120                     _eusart1RxStatusBuffer:	
 10448  0120                     	ds	8
 10449  0128                     _eusart1RxBuffer:	
 10450  0128                     	ds	8
 10451  0130                     _nout:	
 10452  0130                     	ds	2
 10453  0132                     _width:	
 10454  0132                     	ds	2
 10455  0134                     _prec:	
 10456  0134                     	ds	2
 10457  0136                     _flags:	
 10458  0136                     	ds	2
 10459  0138                     _lastLedActiveTime:	
 10460  0138                     	ds	2
 10461  013A                     _arrayIndex:	
 10462  013A                     	ds	2
 10463  013C                     _thresholdCount:	
 10464  013C                     	ds	2
 10465  013E                     _lastRun:	
 10466  013E                     	ds	2
 10467  0140                     _bpm:	
 10468  0140                     	ds	2
 10469  0142                     _lastBeat:	
 10470  0142                     	ds	2
 10471  0144                     _lastActiveTime:	
 10472  0144                     	ds	2
 10473  0146                     _currentTime:	
 10474  0146                     	ds	2
 10475  0148                     _lastTime:	
 10476  0148                     	ds	2
 10477  014A                     _startTime:	
 10478  014A                     	ds	2
 10479  014C                     _tm1650_status:	
 10480  014C                     	ds	1
 10481  014D                     I2C1_MasterRead@trBlock:	
 10482  014D                     	ds	4
 10483  0151                     I2C1_MasterWrite@trBlock:	
 10484  0151                     	ds	4
 10485  0155                     _i2c1_tr_queue:	
 10486  0155                     	ds	3
 10487                           
 10488                           	psect	dataBANK2
 10489  0164                     __pdataBANK2:	
 10490  0164                     _initial:	
 10491  0164                     	ds	2
 10492  0166                     _delay:	
 10493  0166                     	ds	2
 10494  0168                     _threshold:	
 10495  0168                     	ds	2
 10496                           
 10497                           	psect	bssBANK3
 10498  01A0                     __pbssBANK3:	
 10499  01A0                     _dbuf:	
 10500  01A0                     	ds	32
 10501  01C0                     _buttons:	
 10502  01C0                     	ds	32
 10503                           
 10504                           	psect	clrtext
 10505  1F62                     clear_ram0:	
 10506                           ;	Called with FSR0 containing the base address, and
 10507                           ;	btemp/btemp+1 has the size to clear
 10508                           
 10509  1F62  0064               	clrwdt	;clear the watchdog before getting into this loop
 10510  1F63                     clrloop0:	
 10511  1F63  0180               	clrf	0	;clear RAM location pointed to by FSR
 10512  1F64  3101               	addfsr 0,1
 10513  1F65  3001               	movlw	1
 10514  1F66  02FE               	subwf	126,f
 10515  1F67  3000               	movlw	0
 10516  1F68  3BFF               	subwfb	127,f
 10517  1F69  087F               	movf	127,w
 10518  1F6A  047E               	iorwf	126,w
 10519  1F6B  1903               	btfsc	3,2
 10520  1F6C  3400               	retlw	0	;all done for this memory range, return
 10521  1F6D  2F63               	goto	clrloop0	;have we reached the end yet?
 10522                           
 10523                           	psect	cstackBANK2
 10524  016A                     __pcstackBANK2:	
 10525  016A                     LED_task_DMX@dmx:	
 10526                           
 10527                           ; 4 bytes @ 0x0
 10528  016A                     	ds	4
 10529  016E                     ??_main:	
 10530                           
 10531                           ; 1 bytes @ 0x4
 10532  016E                     	ds	2
 10533                           
 10534                           	psect	cstackBANK1
 10535  00C7                     __pcstackBANK1:	
 10536  00C7                     ?_PWM3_LoadDutyValue:	
 10537  00C7                     ?_PWM4_LoadDutyValue:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540  00C7                     ?_PWM1_LoadDutyValue:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543  00C7                     ?_PWM2_LoadDutyValue:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546  00C7                     ?_printf:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549  00C7                     ?_beatBrightnessCalculation:	
 10550                           ; 2 bytes @ 0x0
 10551                           
 10552  00C7                     PWM3_LoadDutyValue@dutyValue:	
 10553                           ; 4 bytes @ 0x0
 10554                           
 10555  00C7                     PWM4_LoadDutyValue@dutyValue:	
 10556                           ; 2 bytes @ 0x0
 10557                           
 10558  00C7                     PWM1_LoadDutyValue@dutyValue:	
 10559                           ; 2 bytes @ 0x0
 10560                           
 10561  00C7                     PWM2_LoadDutyValue@dutyValue:	
 10562                           ; 2 bytes @ 0x0
 10563                           
 10564  00C7                     printf@fmt:	
 10565                           ; 2 bytes @ 0x0
 10566                           
 10567                           
 10568                           ; 2 bytes @ 0x0
 10569  00C7                     	ds	4
 10570  00CB                     ??_beatBrightnessCalculation:	
 10571                           
 10572                           ; 1 bytes @ 0x4
 10573  00CB                     	ds	5
 10574  00D0                     ?_beatColorCreator:	
 10575  00D0                     beatColorCreator@inGreen:	
 10576                           ; 4 bytes @ 0x9
 10577                           
 10578                           
 10579                           ; 1 bytes @ 0x9
 10580  00D0                     	ds	1
 10581  00D1                     ??_CONTROLLER_task:	
 10582  00D1                     beatColorCreator@inBlue:	
 10583                           ; 1 bytes @ 0xA
 10584                           
 10585                           
 10586                           ; 1 bytes @ 0xA
 10587  00D1                     	ds	1
 10588  00D2                     beatColorCreator@inWhite:	
 10589                           
 10590                           ; 1 bytes @ 0xB
 10591  00D2                     	ds	2
 10592  00D4                     beatColorCreator@inRed:	
 10593                           
 10594                           ; 1 bytes @ 0xD
 10595  00D4                     	ds	1
 10596  00D5                     _beatColorCreator$3567:	
 10597                           
 10598                           ; 4 bytes @ 0xE
 10599  00D5                     	ds	4
 10600  00D9                     beatColorCreator@tempColor:	
 10601                           
 10602                           ; 4 bytes @ 0x12
 10603  00D9                     	ds	4
 10604  00DD                     ?_LED_setColor:	
 10605  00DD                     LED_setColor@input:	
 10606                           ; 1 bytes @ 0x16
 10607                           
 10608                           
 10609                           ; 4 bytes @ 0x16
 10610  00DD                     	ds	4
 10611  00E1                     ??_LED_setColor:	
 10612                           
 10613                           ; 1 bytes @ 0x1A
 10614  00E1                     	ds	4
 10615  00E5                     ??_LED_task_BEAT_STROBE:	
 10616  00E5                     ??_LED_task_DMX:	
 10617                           ; 1 bytes @ 0x1E
 10618                           
 10619                           
 10620                           ; 1 bytes @ 0x1E
 10621  00E5                     	ds	5
 10622  00EA                     ??_LED_task:	
 10623                           
 10624                           ; 1 bytes @ 0x23
 10625  00EA                     	ds	2
 10626                           
 10627                           	psect	cstackCOMMON
 10628  0070                     __pcstackCOMMON:	
 10629  0070                     ?_PMD_Initialize:	
 10630  0070                     ?_PIN_MANAGER_Initialize:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633  0070                     ?_OSCILLATOR_Initialize:	
 10634                           ; 1 bytes @ 0x0
 10635                           
 10636  0070                     ?_I2C1_Initialize:	
 10637                           ; 1 bytes @ 0x0
 10638                           
 10639  0070                     ?_PWM1_Initialize:	
 10640                           ; 1 bytes @ 0x0
 10641                           
 10642  0070                     ?_PWM2_Initialize:	
 10643                           ; 1 bytes @ 0x0
 10644                           
 10645  0070                     ?_ADCC_Initialize:	
 10646                           ; 1 bytes @ 0x0
 10647                           
 10648  0070                     ?_PWM4_Initialize:	
 10649                           ; 1 bytes @ 0x0
 10650                           
 10651  0070                     ?_PWM3_Initialize:	
 10652                           ; 1 bytes @ 0x0
 10653                           
 10654  0070                     ?_TMR2_Initialize:	
 10655                           ; 1 bytes @ 0x0
 10656                           
 10657  0070                     ?_TMR0_Initialize:	
 10658                           ; 1 bytes @ 0x0
 10659                           
 10660  0070                     ?_EUSART1_Initialize:	
 10661                           ; 1 bytes @ 0x0
 10662                           
 10663  0070                     ?_EUSART1_Receive_ISR:	
 10664                           ; 1 bytes @ 0x0
 10665                           
 10666  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10667                           ; 1 bytes @ 0x0
 10668                           
 10669  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 10670                           ; 1 bytes @ 0x0
 10671                           
 10672  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10673                           ; 1 bytes @ 0x0
 10674                           
 10675  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10676                           ; 1 bytes @ 0x0
 10677                           
 10678  0070                     ?_EUSART1_DefaultErrorHandler:	
 10679                           ; 1 bytes @ 0x0
 10680                           
 10681  0070                     ?_EUSART1_RxDataHandler:	
 10682                           ; 1 bytes @ 0x0
 10683                           
 10684  0070                     ??_EUSART1_RxDataHandler:	
 10685                           ; 1 bytes @ 0x0
 10686                           
 10687  0070                     ?_TMR0_ISR:	
 10688                           ; 1 bytes @ 0x0
 10689                           
 10690  0070                     ??_TMR0_ISR:	
 10691                           ; 1 bytes @ 0x0
 10692                           
 10693  0070                     ?_I2C1_BusCollisionISR:	
 10694                           ; 1 bytes @ 0x0
 10695                           
 10696  0070                     ??_I2C1_BusCollisionISR:	
 10697                           ; 1 bytes @ 0x0
 10698                           
 10699  0070                     ?_I2C1_ISR:	
 10700                           ; 1 bytes @ 0x0
 10701                           
 10702  0070                     ?_ADCC_ThresholdISR:	
 10703                           ; 1 bytes @ 0x0
 10704                           
 10705  0070                     ??_ADCC_ThresholdISR:	
 10706                           ; 1 bytes @ 0x0
 10707                           
 10708  0070                     ?_TMR0_DefaultInterruptHandler:	
 10709                           ; 1 bytes @ 0x0
 10710                           
 10711  0070                     ??_TMR0_DefaultInterruptHandler:	
 10712                           ; 1 bytes @ 0x0
 10713                           
 10714  0070                     ?_I2C1_Stop:	
 10715                           ; 1 bytes @ 0x0
 10716                           
 10717  0070                     ??_I2C1_Stop:	
 10718                           ; 1 bytes @ 0x0
 10719                           
 10720  0070                     ?_I2C1_FunctionComplete:	
 10721                           ; 1 bytes @ 0x0
 10722                           
 10723  0070                     ??_I2C1_FunctionComplete:	
 10724                           ; 1 bytes @ 0x0
 10725                           
 10726  0070                     ?_ADCC_DefaultInterruptHandler:	
 10727                           ; 1 bytes @ 0x0
 10728                           
 10729  0070                     ??_ADCC_DefaultInterruptHandler:	
 10730                           ; 1 bytes @ 0x0
 10731                           
 10732  0070                     ?_CLOCK_init:	
 10733                           ; 1 bytes @ 0x0
 10734                           
 10735  0070                     ?_BUTTONS_init:	
 10736                           ; 1 bytes @ 0x0
 10737                           
 10738  0070                     ?_BEAT_init:	
 10739                           ; 1 bytes @ 0x0
 10740                           
 10741  0070                     ?_LED_init:	
 10742                           ; 1 bytes @ 0x0
 10743                           
 10744  0070                     ?_TM1650_init:	
 10745                           ; 1 bytes @ 0x0
 10746                           
 10747  0070                     ?_DMX_init:	
 10748                           ; 1 bytes @ 0x0
 10749                           
 10750  0070                     ?_BUTTONS_task:	
 10751                           ; 1 bytes @ 0x0
 10752                           
 10753  0070                     ?_CONTROLLER_task:	
 10754                           ; 1 bytes @ 0x0
 10755                           
 10756  0070                     ?_BEAT_task:	
 10757                           ; 1 bytes @ 0x0
 10758                           
 10759  0070                     ?_LED_task:	
 10760                           ; 1 bytes @ 0x0
 10761                           
 10762  0070                     ?_GPIO_init:	
 10763                           ; 1 bytes @ 0x0
 10764                           
 10765  0070                     ?_CLOCK_timerCallback:	
 10766                           ; 1 bytes @ 0x0
 10767                           
 10768  0070                     ??_CLOCK_timerCallback:	
 10769                           ; 1 bytes @ 0x0
 10770                           
 10771  0070                     ?_menuSelection:	
 10772                           ; 1 bytes @ 0x0
 10773                           
 10774  0070                     ?_CONTROL_DMX:	
 10775                           ; 1 bytes @ 0x0
 10776                           
 10777  0070                     ?_CONTROL_BEAT:	
 10778                           ; 1 bytes @ 0x0
 10779                           
 10780  0070                     ?_CONTROL_MANUAL:	
 10781                           ; 1 bytes @ 0x0
 10782                           
 10783  0070                     ?_TM1650_enable:	
 10784                           ; 1 bytes @ 0x0
 10785                           
 10786  0070                     ?_getManualColor:	
 10787                           ; 1 bytes @ 0x0
 10788                           
 10789  0070                     ?_address_inc:	
 10790                           ; 1 bytes @ 0x0
 10791                           
 10792  0070                     ?_address_dec:	
 10793                           ; 1 bytes @ 0x0
 10794                           
 10795  0070                     ?_colorInc:	
 10796                           ; 1 bytes @ 0x0
 10797                           
 10798  0070                     ?_colorDec:	
 10799                           ; 1 bytes @ 0x0
 10800                           
 10801  0070                     ?_DMX_interrupt:	
 10802                           ; 1 bytes @ 0x0
 10803                           
 10804  0070                     ??_DMX_interrupt:	
 10805                           ; 1 bytes @ 0x0
 10806                           
 10807  0070                     ?_LED_task_BEAT_STROBE:	
 10808                           ; 1 bytes @ 0x0
 10809                           
 10810  0070                     ?_LED_task_BEAT_FADE:	
 10811                           ; 1 bytes @ 0x0
 10812                           
 10813  0070                     ?_LED_task_BEAT_CONTINUOUS:	
 10814                           ; 1 bytes @ 0x0
 10815                           
 10816  0070                     ?_LED_task_BEAT_MIXED:	
 10817                           ; 1 bytes @ 0x0
 10818                           
 10819  0070                     ?_LED_task_ANIMATION:	
 10820                           ; 1 bytes @ 0x0
 10821                           
 10822  0070                     ?_LED_task_MANUAL:	
 10823                           ; 1 bytes @ 0x0
 10824                           
 10825  0070                     ?_SYSTEM_Initialize:	
 10826                           ; 1 bytes @ 0x0
 10827                           
 10828  0070                     ?_INTERRUPT_InterruptManager:	
 10829                           ; 1 bytes @ 0x0
 10830                           
 10831  0070                     ?_I2C1_WaitForLastPacketToComplete:	
 10832                           ; 1 bytes @ 0x0
 10833                           
 10834  0070                     ?_ADCC_StartConversion:	
 10835                           ; 1 bytes @ 0x0
 10836                           
 10837  0070                     ?_main:	
 10838                           ; 1 bytes @ 0x0
 10839                           
 10840  0070                     ?_BUTTONS_isClicked:	
 10841                           ; 1 bytes @ 0x0
 10842                           
 10843  0070                     ?_BUTTONS_isHeld:	
 10844                           ; 1 bytes @ 0x0
 10845                           
 10846  0070                     ?_getMode:	
 10847                           ; 1 bytes @ 0x0
 10848                           
 10849  0070                     ?_putch:	
 10850                           ; 1 bytes @ 0x0
 10851                           
 10852  0070                     ?_adcThresholdHandler:	
 10853                           ; 1 bytes @ 0x0
 10854                           
 10855  0070                     ??_adcThresholdHandler:	
 10856                           ; 1 bytes @ 0x0
 10857                           
 10858  0070                     ?_BEAT_detected:	
 10859                           ; 1 bytes @ 0x0
 10860                           
 10861  0070                     ?_DMX_getAddress:	
 10862                           ; 1 bytes @ 0x0
 10863                           
 10864  0070                     ?_LED_task_DMX:	
 10865                           ; 1 bytes @ 0x0
 10866                           
 10867                           
 10868                           ; 1 bytes @ 0x0
 10869  0070                     	ds	1
 10870  0071                     ??_EUSART1_Receive_ISR:	
 10871  0071                     ??_EUSART1_DefaultErrorHandler:	
 10872                           ; 1 bytes @ 0x1
 10873                           
 10874  0071                     I2C1_Stop@completion_code:	
 10875                           ; 1 bytes @ 0x1
 10876                           
 10877                           
 10878                           ; 1 bytes @ 0x1
 10879  0071                     	ds	1
 10880  0072                     ??_I2C1_ISR:	
 10881                           
 10882                           ; 1 bytes @ 0x2
 10883  0072                     	ds	4
 10884  0076                     DMX_interrupt@dummy:	
 10885                           
 10886                           ; 1 bytes @ 0x6
 10887  0076                     	ds	1
 10888  0077                     ??_INTERRUPT_InterruptManager:	
 10889                           
 10890                           	psect	cstackBANK0
 10891  0020                     __pcstackBANK0:	
 10892                           ; 1 bytes @ 0x7
 10893                           
 10894  0020                     ??_PMD_Initialize:	
 10895  0020                     ??_PIN_MANAGER_Initialize:	
 10896                           ; 1 bytes @ 0x0
 10897                           
 10898  0020                     ??_OSCILLATOR_Initialize:	
 10899                           ; 1 bytes @ 0x0
 10900                           
 10901  0020                     ??_I2C1_Initialize:	
 10902                           ; 1 bytes @ 0x0
 10903                           
 10904  0020                     ??_PWM1_Initialize:	
 10905                           ; 1 bytes @ 0x0
 10906                           
 10907  0020                     ??_PWM2_Initialize:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910  0020                     ??_PWM4_Initialize:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913  0020                     ??_PWM3_Initialize:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916  0020                     ??_TMR2_Initialize:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928  0020                     ?_EUSART1_SetErrorHandler:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931  0020                     ?_TMR0_SetInterruptHandler:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10935                           ; 1 bytes @ 0x0
 10936                           
 10937  0020                     ?_I2C1_MasterTRBInsert:	
 10938                           ; 1 bytes @ 0x0
 10939                           
 10940  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943  0020                     ??_LED_init:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946  0020                     ??_GPIO_init:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949  0020                     ??_getManualColor:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952  0020                     ??_colorInc:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955  0020                     ??_colorDec:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958  0020                     ??_LED_task_BEAT_FADE:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964  0020                     ??_LED_task_BEAT_MIXED:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967  0020                     ??_LED_task_ANIMATION:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970  0020                     ??_LED_task_MANUAL:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976  0020                     ??_ADCC_StartConversion:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979  0020                     ?_ADCC_SetUpperThreshold:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982  0020                     ?_init:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985  0020                     ??_BUTTONS_isClicked:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988  0020                     ??_BUTTONS_isHeld:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991  0020                     ??_getMode:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994  0020                     ??_BEAT_detected:	
 10995                           ; 1 bytes @ 0x0
 10996                           
 10997  0020                     ??_DMX_getAddress:	
 10998                           ; 1 bytes @ 0x0
 10999                           
 11000  0020                     ?_CLOCK_getTime:	
 11001                           ; 1 bytes @ 0x0
 11002                           
 11003  0020                     ?_strlen:	
 11004                           ; 2 bytes @ 0x0
 11005                           
 11006  0020                     ?__Umul8_16:	
 11007                           ; 2 bytes @ 0x0
 11008                           
 11009  0020                     ?___lwdiv:	
 11010                           ; 2 bytes @ 0x0
 11011                           
 11012  0020                     ?___xxtofl:	
 11013                           ; 2 bytes @ 0x0
 11014                           
 11015  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11016                           ; 4 bytes @ 0x0
 11017                           
 11018  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11019                           ; 1 bytes @ 0x0
 11020                           
 11021  0020                     ADCC_StartConversion@channel:	
 11022                           ; 1 bytes @ 0x0
 11023                           
 11024  0020                     BUTTONS_isClicked@button:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027  0020                     BUTTONS_isHeld@button:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030  0020                     __Umul8_16@multiplicand:	
 11031                           ; 1 bytes @ 0x0
 11032                           
 11033  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11034                           ; 1 bytes @ 0x0
 11035                           
 11036  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11037                           ; 2 bytes @ 0x0
 11038                           
 11039  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11040                           ; 2 bytes @ 0x0
 11041                           
 11042  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11043                           ; 2 bytes @ 0x0
 11044                           
 11045  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11046                           ; 2 bytes @ 0x0
 11047                           
 11048  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11049                           ; 2 bytes @ 0x0
 11050                           
 11051  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11052                           ; 2 bytes @ 0x0
 11053                           
 11054  0020                     init@port:	
 11055                           ; 2 bytes @ 0x0
 11056                           
 11057  0020                     ___lwdiv@divisor:	
 11058                           ; 2 bytes @ 0x0
 11059                           
 11060  0020                     strlen@s:	
 11061                           ; 2 bytes @ 0x0
 11062                           
 11063  0020                     ___xxtofl@val:	
 11064                           ; 2 bytes @ 0x0
 11065                           
 11066                           
 11067                           ; 4 bytes @ 0x0
 11068  0020                     	ds	1
 11069  0021                     ??_CONTROL_BEAT:	
 11070  0021                     I2C1_MasterTRBInsert@pflag:	
 11071                           ; 1 bytes @ 0x1
 11072                           
 11073  0021                     I2C1_MasterWriteTRBBuild@length:	
 11074                           ; 1 bytes @ 0x1
 11075                           
 11076                           
 11077                           ; 1 bytes @ 0x1
 11078  0021                     	ds	1
 11079  0022                     ??_ADCC_Initialize:	
 11080  0022                     ??_TMR0_Initialize:	
 11081                           ; 1 bytes @ 0x2
 11082                           
 11083  0022                     ??_EUSART1_Initialize:	
 11084                           ; 1 bytes @ 0x2
 11085                           
 11086  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11087                           ; 1 bytes @ 0x2
 11088                           
 11089  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11090                           ; 1 bytes @ 0x2
 11091                           
 11092  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11093                           ; 1 bytes @ 0x2
 11094                           
 11095  0022                     ??_EUSART1_SetErrorHandler:	
 11096                           ; 1 bytes @ 0x2
 11097                           
 11098  0022                     ??_TMR0_SetInterruptHandler:	
 11099                           ; 1 bytes @ 0x2
 11100                           
 11101  0022                     ??_I2C1_MasterTRBInsert:	
 11102                           ; 1 bytes @ 0x2
 11103                           
 11104  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11105                           ; 1 bytes @ 0x2
 11106                           
 11107  0022                     ??_CLOCK_init:	
 11108                           ; 1 bytes @ 0x2
 11109                           
 11110  0022                     ??_BEAT_init:	
 11111                           ; 1 bytes @ 0x2
 11112                           
 11113  0022                     ??_CLOCK_getTime:	
 11114                           ; 1 bytes @ 0x2
 11115                           
 11116  0022                     ??_BUTTONS_task:	
 11117                           ; 1 bytes @ 0x2
 11118                           
 11119  0022                     ??_strlen:	
 11120                           ; 1 bytes @ 0x2
 11121                           
 11122  0022                     ??__Umul8_16:	
 11123                           ; 1 bytes @ 0x2
 11124                           
 11125  0022                     ??_SYSTEM_Initialize:	
 11126                           ; 1 bytes @ 0x2
 11127                           
 11128  0022                     ??_ADCC_SetUpperThreshold:	
 11129                           ; 1 bytes @ 0x2
 11130                           
 11131  0022                     init@pin:	
 11132                           ; 1 bytes @ 0x2
 11133                           
 11134  0022                     colorInc@input:	
 11135                           ; 1 bytes @ 0x2
 11136                           
 11137  0022                     colorDec@input:	
 11138                           ; 1 bytes @ 0x2
 11139                           
 11140  0022                     getManualColor@input:	
 11141                           ; 1 bytes @ 0x2
 11142                           
 11143  0022                     I2C1_MasterWriteTRBBuild@address:	
 11144                           ; 1 bytes @ 0x2
 11145                           
 11146  0022                     ___lwdiv@dividend:	
 11147                           ; 2 bytes @ 0x2
 11148                           
 11149                           
 11150                           ; 2 bytes @ 0x2
 11151  0022                     	ds	1
 11152  0023                     ??_CONTROL_MANUAL:	
 11153  0023                     ??_init:	
 11154                           ; 1 bytes @ 0x3
 11155                           
 11156  0023                     I2C1_MasterTRBInsert@count:	
 11157                           ; 1 bytes @ 0x3
 11158                           
 11159  0023                     strlen@a:	
 11160                           ; 1 bytes @ 0x3
 11161                           
 11162                           
 11163                           ; 2 bytes @ 0x3
 11164  0023                     	ds	1
 11165  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11166  0024                     ??___lwdiv:	
 11167                           ; 1 bytes @ 0x4
 11168                           
 11169  0024                     ??___xxtofl:	
 11170                           ; 1 bytes @ 0x4
 11171                           
 11172  0024                     init@btn:	
 11173                           ; 1 bytes @ 0x4
 11174                           
 11175  0024                     __Umul8_16@product:	
 11176                           ; 1 bytes @ 0x4
 11177                           
 11178                           
 11179                           ; 2 bytes @ 0x4
 11180  0024                     	ds	1
 11181  0025                     ??_BUTTONS_init:	
 11182  0025                     BUTTONS_task@i:	
 11183                           ; 1 bytes @ 0x5
 11184                           
 11185  0025                     CONTROL_MANUAL@input:	
 11186                           ; 1 bytes @ 0x5
 11187                           
 11188  0025                     ___lwdiv@quotient:	
 11189                           ; 1 bytes @ 0x5
 11190                           
 11191                           
 11192                           ; 2 bytes @ 0x5
 11193  0025                     	ds	1
 11194  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11195  0026                     BUTTONS_task@time:	
 11196                           ; 1 bytes @ 0x6
 11197                           
 11198  0026                     __Umul8_16@word_mpld:	
 11199                           ; 2 bytes @ 0x6
 11200                           
 11201                           
 11202                           ; 2 bytes @ 0x6
 11203  0026                     	ds	1
 11204  0027                     ?_I2C1_MasterWrite:	
 11205  0027                     I2C1_MasterWrite@length:	
 11206                           ; 1 bytes @ 0x7
 11207                           
 11208  0027                     ___lwdiv@counter:	
 11209                           ; 1 bytes @ 0x7
 11210                           
 11211                           
 11212                           ; 1 bytes @ 0x7
 11213  0027                     	ds	1
 11214  0028                     ??_BEAT_task:	
 11215  0028                     ?___lwmod:	
 11216                           ; 1 bytes @ 0x8
 11217                           
 11218  0028                     BUTTONS_task@btn:	
 11219                           ; 2 bytes @ 0x8
 11220                           
 11221  0028                     ___xxtofl@sign:	
 11222                           ; 1 bytes @ 0x8
 11223                           
 11224  0028                     __Umul8_16@multiplier:	
 11225                           ; 1 bytes @ 0x8
 11226                           
 11227  0028                     I2C1_MasterWrite@address:	
 11228                           ; 1 bytes @ 0x8
 11229                           
 11230  0028                     ___lwmod@divisor:	
 11231                           ; 2 bytes @ 0x8
 11232                           
 11233                           
 11234                           ; 2 bytes @ 0x8
 11235  0028                     	ds	1
 11236  0029                     ___xxtofl@exp:	
 11237                           
 11238                           ; 1 bytes @ 0x9
 11239  0029                     	ds	1
 11240  002A                     I2C1_MasterWrite@pflag:	
 11241  002A                     BEAT_task@offset:	
 11242                           ; 1 bytes @ 0xA
 11243                           
 11244  002A                     ___lwmod@dividend:	
 11245                           ; 2 bytes @ 0xA
 11246                           
 11247  002A                     ___xxtofl@arg:	
 11248                           ; 2 bytes @ 0xA
 11249                           
 11250                           
 11251                           ; 4 bytes @ 0xA
 11252  002A                     	ds	1
 11253  002B                     ??_I2C1_MasterWrite:	
 11254                           
 11255                           ; 1 bytes @ 0xB
 11256  002B                     	ds	1
 11257  002C                     ??___lwmod:	
 11258                           
 11259                           ; 1 bytes @ 0xC
 11260  002C                     	ds	1
 11261  002D                     I2C1_MasterWrite@pdata:	
 11262  002D                     ___lwmod@counter:	
 11263                           ; 1 bytes @ 0xD
 11264                           
 11265                           
 11266                           ; 1 bytes @ 0xD
 11267  002D                     	ds	1
 11268  002E                     ?_writeData:	
 11269  002E                     ?___fldiv:	
 11270                           ; 1 bytes @ 0xE
 11271                           
 11272  002E                     writeData@data:	
 11273                           ; 4 bytes @ 0xE
 11274                           
 11275  002E                     ___fldiv@a:	
 11276                           ; 1 bytes @ 0xE
 11277                           
 11278                           
 11279                           ; 4 bytes @ 0xE
 11280  002E                     	ds	1
 11281  002F                     ??_writeData:	
 11282                           
 11283                           ; 1 bytes @ 0xF
 11284  002F                     	ds	3
 11285  0032                     writeData@address:	
 11286  0032                     ___fldiv@b:	
 11287                           ; 1 bytes @ 0x12
 11288                           
 11289                           
 11290                           ; 4 bytes @ 0x12
 11291  0032                     	ds	1
 11292  0033                     writeData@status:	
 11293                           
 11294                           ; 1 bytes @ 0x13
 11295  0033                     	ds	1
 11296  0034                     ??_TM1650_enable:	
 11297  0034                     ?_TM1650_fastPrintNum:	
 11298                           ; 1 bytes @ 0x14
 11299                           
 11300  0034                     ?_TM1650_setDigit:	
 11301                           ; 1 bytes @ 0x14
 11302                           
 11303  0034                     TM1650_enable@enable:	
 11304                           ; 1 bytes @ 0x14
 11305                           
 11306  0034                     TM1650_setDigit@data:	
 11307                           ; 1 bytes @ 0x14
 11308                           
 11309  0034                     TM1650_fastPrintNum@num:	
 11310                           ; 1 bytes @ 0x14
 11311                           
 11312                           
 11313                           ; 2 bytes @ 0x14
 11314  0034                     	ds	1
 11315  0035                     ??_TM1650_setDigit:	
 11316                           
 11317                           ; 1 bytes @ 0x15
 11318  0035                     	ds	1
 11319  0036                     ??_TM1650_fastPrintNum:	
 11320  0036                     ??___fldiv:	
 11321                           ; 1 bytes @ 0x16
 11322                           
 11323  0036                     TM1650_setDigit@digit:	
 11324                           ; 1 bytes @ 0x16
 11325                           
 11326                           
 11327                           ; 1 bytes @ 0x16
 11328  0036                     	ds	1
 11329  0037                     ??_DMX_init:	
 11330  0037                     ??_CONTROL_DMX:	
 11331                           ; 1 bytes @ 0x17
 11332                           
 11333  0037                     ??_address_inc:	
 11334                           ; 1 bytes @ 0x17
 11335                           
 11336  0037                     ??_address_dec:	
 11337                           ; 1 bytes @ 0x17
 11338                           
 11339  0037                     ??_putch:	
 11340                           ; 1 bytes @ 0x17
 11341                           
 11342                           
 11343                           ; 1 bytes @ 0x17
 11344  0037                     	ds	1
 11345  0038                     putch@n:	
 11346                           
 11347                           ; 1 bytes @ 0x18
 11348  0038                     	ds	1
 11349  0039                     ?_fputc:	
 11350  0039                     fputc@c:	
 11351                           ; 2 bytes @ 0x19
 11352                           
 11353                           
 11354                           ; 2 bytes @ 0x19
 11355  0039                     	ds	2
 11356  003B                     fputc@fp:	
 11357  003B                     ___fldiv@rem:	
 11358                           ; 1 bytes @ 0x1B
 11359                           
 11360                           
 11361                           ; 4 bytes @ 0x1B
 11362  003B                     	ds	1
 11363  003C                     ??_fputc:	
 11364                           
 11365                           ; 1 bytes @ 0x1C
 11366  003C                     	ds	3
 11367  003F                     ___fldiv@sign:	
 11368                           
 11369                           ; 1 bytes @ 0x1F
 11370  003F                     	ds	1
 11371  0040                     ___fldiv@new_exp:	
 11372                           
 11373                           ; 2 bytes @ 0x20
 11374  0040                     	ds	1
 11375  0041                     ?_fputs:	
 11376  0041                     fputs@fp:	
 11377                           ; 2 bytes @ 0x21
 11378                           
 11379                           
 11380                           ; 1 bytes @ 0x21
 11381  0041                     	ds	1
 11382  0042                     ??_fputs:	
 11383  0042                     ___fldiv@grs:	
 11384                           ; 1 bytes @ 0x22
 11385                           
 11386                           
 11387                           ; 4 bytes @ 0x22
 11388  0042                     	ds	3
 11389  0045                     fputs@c:	
 11390                           
 11391                           ; 1 bytes @ 0x25
 11392  0045                     	ds	1
 11393  0046                     ___fldiv@bexp:	
 11394  0046                     fputs@i:	
 11395                           ; 1 bytes @ 0x26
 11396                           
 11397                           
 11398                           ; 2 bytes @ 0x26
 11399  0046                     	ds	1
 11400  0047                     ___fldiv@aexp:	
 11401                           
 11402                           ; 1 bytes @ 0x27
 11403  0047                     	ds	1
 11404  0048                     ?___flmul:	
 11405  0048                     fputs@s:	
 11406                           ; 4 bytes @ 0x28
 11407                           
 11408  0048                     ___flmul@b:	
 11409                           ; 1 bytes @ 0x28
 11410                           
 11411                           
 11412                           ; 4 bytes @ 0x28
 11413  0048                     	ds	1
 11414  0049                     ?_pad:	
 11415  0049                     pad@buf:	
 11416                           ; 2 bytes @ 0x29
 11417                           
 11418                           
 11419                           ; 1 bytes @ 0x29
 11420  0049                     	ds	1
 11421  004A                     pad@p:	
 11422                           
 11423                           ; 2 bytes @ 0x2A
 11424  004A                     	ds	2
 11425  004C                     ??_pad:	
 11426  004C                     ___flmul@a:	
 11427                           ; 1 bytes @ 0x2C
 11428                           
 11429                           
 11430                           ; 4 bytes @ 0x2C
 11431  004C                     	ds	1
 11432  004D                     pad@i:	
 11433                           
 11434                           ; 2 bytes @ 0x2D
 11435  004D                     	ds	2
 11436  004F                     pad@w:	
 11437                           
 11438                           ; 2 bytes @ 0x2F
 11439  004F                     	ds	1
 11440  0050                     ??___flmul:	
 11441                           
 11442                           ; 1 bytes @ 0x30
 11443  0050                     	ds	1
 11444  0051                     pad@fp:	
 11445                           
 11446                           ; 1 bytes @ 0x31
 11447  0051                     	ds	1
 11448  0052                     ?_ctoa:	
 11449  0052                     ctoa@c:	
 11450                           ; 2 bytes @ 0x32
 11451                           
 11452                           
 11453                           ; 1 bytes @ 0x32
 11454  0052                     	ds	2
 11455  0054                     ??_ctoa:	
 11456                           
 11457                           ; 1 bytes @ 0x34
 11458  0054                     	ds	1
 11459  0055                     ___flmul@sign:	
 11460  0055                     ctoa@w:	
 11461                           ; 1 bytes @ 0x35
 11462                           
 11463                           
 11464                           ; 2 bytes @ 0x35
 11465  0055                     	ds	1
 11466  0056                     ___flmul@aexp:	
 11467                           
 11468                           ; 1 bytes @ 0x36
 11469  0056                     	ds	1
 11470  0057                     ctoa@fp:	
 11471  0057                     ___flmul@grs:	
 11472                           ; 1 bytes @ 0x37
 11473                           
 11474                           
 11475                           ; 4 bytes @ 0x37
 11476  0057                     	ds	1
 11477  0058                     ?_vfpfcnvrt:	
 11478  0058                     vfpfcnvrt@fmt:	
 11479                           ; 2 bytes @ 0x38
 11480                           
 11481                           
 11482                           ; 1 bytes @ 0x38
 11483  0058                     	ds	1
 11484  0059                     vfpfcnvrt@ap:	
 11485                           
 11486                           ; 1 bytes @ 0x39
 11487  0059                     	ds	1
 11488  005A                     ??_vfpfcnvrt:	
 11489                           
 11490                           ; 1 bytes @ 0x3A
 11491  005A                     	ds	1
 11492  005B                     ___flmul@bexp:	
 11493                           
 11494                           ; 1 bytes @ 0x3B
 11495  005B                     	ds	1
 11496  005C                     ___flmul@prod:	
 11497                           
 11498                           ; 4 bytes @ 0x3C
 11499  005C                     	ds	3
 11500  005F                     vfpfcnvrt@c:	
 11501                           
 11502                           ; 1 bytes @ 0x3F
 11503  005F                     	ds	1
 11504  0060                     vfpfcnvrt@fp:	
 11505  0060                     ___flmul@temp:	
 11506                           ; 1 bytes @ 0x40
 11507                           
 11508                           
 11509                           ; 2 bytes @ 0x40
 11510  0060                     	ds	1
 11511  0061                     ?_vfprintf:	
 11512  0061                     vfprintf@fmt:	
 11513                           ; 2 bytes @ 0x41
 11514                           
 11515                           
 11516                           ; 2 bytes @ 0x41
 11517  0061                     	ds	1
 11518  0062                     ?___fltol:	
 11519  0062                     ___fltol@f1:	
 11520                           ; 4 bytes @ 0x42
 11521                           
 11522                           
 11523                           ; 4 bytes @ 0x42
 11524  0062                     	ds	1
 11525  0063                     vfprintf@ap:	
 11526                           
 11527                           ; 1 bytes @ 0x43
 11528  0063                     	ds	1
 11529  0064                     ??_vfprintf:	
 11530                           
 11531                           ; 1 bytes @ 0x44
 11532  0064                     	ds	2
 11533  0066                     ??___fltol:	
 11534  0066                     vfprintf@fp:	
 11535                           ; 1 bytes @ 0x46
 11536                           
 11537                           
 11538                           ; 1 bytes @ 0x46
 11539  0066                     	ds	1
 11540  0067                     vfprintf@cfmt:	
 11541                           
 11542                           ; 2 bytes @ 0x47
 11543  0067                     	ds	2
 11544  0069                     ??_printf:	
 11545                           
 11546                           ; 1 bytes @ 0x49
 11547  0069                     	ds	2
 11548  006B                     ___fltol@sign1:	
 11549                           
 11550                           ; 1 bytes @ 0x4B
 11551  006B                     	ds	1
 11552  006C                     ___fltol@exp1:	
 11553  006C                     printf@ap:	
 11554                           ; 1 bytes @ 0x4C
 11555                           
 11556                           
 11557                           ; 1 bytes @ 0x4C
 11558  006C                     	ds	1
 11559  006D                     ??_TM1650_init:	
 11560  006D                     ??_menuSelection:	
 11561                           ; 1 bytes @ 0x4D
 11562                           
 11563  006D                     ??_PWM3_LoadDutyValue:	
 11564                           ; 1 bytes @ 0x4D
 11565                           
 11566  006D                     ??_PWM4_LoadDutyValue:	
 11567                           ; 1 bytes @ 0x4D
 11568                           
 11569  006D                     ??_PWM1_LoadDutyValue:	
 11570                           ; 1 bytes @ 0x4D
 11571                           
 11572  006D                     ??_PWM2_LoadDutyValue:	
 11573                           ; 1 bytes @ 0x4D
 11574                           
 11575  006D                     beatBrightnessCalculation@temp:	
 11576                           ; 1 bytes @ 0x4D
 11577                           
 11578                           
 11579                           ; 1 bytes @ 0x4D
 11580  006D                     	ds	1
 11581  006E                     ??_beatColorCreator:	
 11582                           
 11583                           ; 1 bytes @ 0x4E
 11584  006E                     	ds	1
 11585  006F                     CONTROLLER_task@isActive:	
 11586  006F                     LED_task_BEAT_STROBE@beatState:	
 11587                           ; 1 bytes @ 0x4F
 11588                           
 11589                           
 11590                           ; 1 bytes @ 0x4F
 11591  006F                     	ds	1
 11592                           
 11593                           	psect	maintext
 11594  14D8                     __pmaintext:	
 11595 ;;
 11596 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11597 ;;
 11598 ;; *************** function _main *****************
 11599 ;; Defined at:
 11600 ;;		line 58 in file "main.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;		None
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1    wreg      void 
 11607 ;; Registers used:
 11608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11609 ;; Tracked objects:
 11610 ;;		On entry : B3F/0
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11616 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11617 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11618 ;;Total ram usage:        2 bytes
 11619 ;; Hardware stack levels required when called:   19
 11620 ;; This function calls:
 11621 ;;		_BEAT_init
 11622 ;;		_BEAT_task
 11623 ;;		_BUTTONS_init
 11624 ;;		_BUTTONS_task
 11625 ;;		_CLOCK_getTime
 11626 ;;		_CLOCK_init
 11627 ;;		_CONTROLLER_task
 11628 ;;		_DMX_init
 11629 ;;		_LED_init
 11630 ;;		_LED_task
 11631 ;;		_SYSTEM_Initialize
 11632 ;;		_TM1650_init
 11633 ;; This function is called by:
 11634 ;;		Startup code after reset
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _main
 11640  14D8                     _main:	
 11641                           
 11642                           ;main.c: 61:     SYSTEM_Initialize();
 11643                           
 11644                           ;incstack = 0
 11645 ;; hardware stack exceeded
 11646                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11647  14D8  3192  221F  3194   	fcall	_SYSTEM_Initialize
 11648                           
 11649                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11650  14DB  3015               	movlw	21
 11651  14DC  0142               	movlb	2	; select bank2
 11652  14DD  00EF               	movwf	(??_main^(0+256)+1)
 11653  14DE  304B               	movlw	75
 11654  14DF  00EE               	movwf	??_main^(0+256)
 11655  14E0  30BE               	movlw	190
 11656  14E1                     u9017:	
 11657  14E1  0B89               	decfsz	9,f
 11658  14E2  2CE1               	goto	u9017
 11659  14E3  0BEE               	decfsz	??_main^(0+256),f
 11660  14E4  2CE1               	goto	u9017
 11661  14E5  0BEF               	decfsz	(??_main^(0+256)+1),f
 11662  14E6  2CE1               	goto	u9017
 11663  14E7  0000               	nop
 11664                           
 11665                           ;main.c: 63:     CLOCK_init();
 11666  14E8  319E  26C3  3194   	fcall	_CLOCK_init
 11667                           
 11668                           ;main.c: 64:     BUTTONS_init();
 11669  14EB  3195  259F  3194   	fcall	_BUTTONS_init
 11670                           
 11671                           ;main.c: 65:     BEAT_init();
 11672  14EE  3190  2055  3194   	fcall	_BEAT_init
 11673                           
 11674                           ;main.c: 66:     LED_init();
 11675  14F1  319E  26CB  3194   	fcall	_LED_init
 11676                           
 11677                           ;main.c: 68:     (INTCONbits.GIE = 1);
 11678  14F4  178B               	bsf	11,7	;volatile
 11679                           
 11680                           ;main.c: 69:     (INTCONbits.PEIE = 1);
 11681  14F5  170B               	bsf	11,6	;volatile
 11682                           
 11683                           ;main.c: 71:     TM1650_init();
 11684  14F6  3190  2017  3194   	fcall	_TM1650_init
 11685                           
 11686                           ;main.c: 72:     DMX_init();
 11687  14F9  319F  27D9  3194   	fcall	_DMX_init
 11688                           
 11689                           ;main.c: 73:     startTime = CLOCK_getTime();
 11690  14FC  319E  26EE  3194   	fcall	_CLOCK_getTime
 11691  14FF  0140               	movlb	0	; select bank0
 11692  1500  0821               	movf	?_CLOCK_getTime+1,w
 11693  1501  0142               	movlb	2	; select bank2
 11694  1502  00CB               	movwf	(_startTime+1)^(0+256)
 11695  1503  0140               	movlb	0	; select bank0
 11696  1504  0820               	movf	?_CLOCK_getTime,w
 11697  1505  0142               	movlb	2	; select bank2
 11698  1506  00CA               	movwf	_startTime^(0+256)
 11699  1507                     l8694:	
 11700                           
 11701                           ;main.c: 78:     {;main.c: 79:         BUTTONS_task();
 11702  1507  318D  25C9  3194   	fcall	_BUTTONS_task
 11703                           
 11704                           ;main.c: 80:         CONTROLLER_task();
 11705  150A  3182  22BC  3194   	fcall	_CONTROLLER_task
 11706                           
 11707                           ;main.c: 81:         BEAT_task();
 11708  150D  318C  2418  3194   	fcall	_BEAT_task
 11709                           
 11710                           ;main.c: 82:         LED_task();
 11711  1510  3195  2514  3194   	fcall	_LED_task
 11712  1513  2D07               	goto	l8694
 11713  1514                     __end_of_main:	
 11714                           
 11715                           	psect	text1
 11716  1017                     __ptext1:	
 11717 ;; *************** function _TM1650_init *****************
 11718 ;; Defined at:
 11719 ;;		line 51 in file "tm1650.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;		None
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  1    wreg      void 
 11726 ;; Registers used:
 11727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11737 ;;Total ram usage:        0 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:   17
 11740 ;; This function calls:
 11741 ;;		_TM1650_enable
 11742 ;;		_printf
 11743 ;; This function is called by:
 11744 ;;		_main
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           
 11749                           ;psect for function _TM1650_init
 11750  1017                     _TM1650_init:	
 11751                           
 11752                           ;tm1650.c: 53:     TM1650_enable(1);
 11753                           
 11754                           ;incstack = 0
 11755 ;; hardware stack exceeded
 11756                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11757  1017  3001               	movlw	1
 11758  1018  3190  202B  3190   	fcall	_TM1650_enable
 11759                           
 11760                           ;tm1650.c: 54:     printf("    ");
 11761  101B  308D               	movlw	low (STR_12| (0+32768))
 11762  101C  0141               	movlb	1	; select bank1
 11763  101D  00C7               	movwf	printf@fmt^(0+128)
 11764  101E  30A0               	movlw	high (STR_12| (0+32768))
 11765  101F  00C8               	movwf	(printf@fmt^(0+128)+1)
 11766  1020  3190  2040  3190   	fcall	_printf
 11767                           
 11768                           ;tm1650.c: 55:     printf("\r");
 11769  1023  3067               	movlw	low ((STR_22+4)| (0+32768))
 11770  1024  0141               	movlb	1	; select bank1
 11771  1025  00C7               	movwf	printf@fmt^(0+128)
 11772  1026  30A0               	movlw	high ((STR_22+4)| (0+32768))
 11773  1027  00C8               	movwf	(printf@fmt^(0+128)+1)
 11774  1028  3190  2040         	fcall	_printf
 11775  102A  0008               	return
 11776  102B                     __end_of_TM1650_init:	
 11777                           
 11778                           	psect	text2
 11779  121F                     __ptext2:	
 11780 ;; *************** function _SYSTEM_Initialize *****************
 11781 ;; Defined at:
 11782 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;		None
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;		None
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      void 
 11789 ;; Registers used:
 11790 ;;		wreg, status,2, status,0, pclath, cstack
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11800 ;;Total ram usage:        0 bytes
 11801 ;; Hardware stack levels used:    1
 11802 ;; Hardware stack levels required when called:    6
 11803 ;; This function calls:
 11804 ;;		_ADCC_Initialize
 11805 ;;		_EUSART1_Initialize
 11806 ;;		_I2C1_Initialize
 11807 ;;		_OSCILLATOR_Initialize
 11808 ;;		_PIN_MANAGER_Initialize
 11809 ;;		_PMD_Initialize
 11810 ;;		_PWM1_Initialize
 11811 ;;		_PWM2_Initialize
 11812 ;;		_PWM3_Initialize
 11813 ;;		_PWM4_Initialize
 11814 ;;		_TMR0_Initialize
 11815 ;;		_TMR2_Initialize
 11816 ;; This function is called by:
 11817 ;;		_main
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           
 11822                           ;psect for function _SYSTEM_Initialize
 11823  121F                     _SYSTEM_Initialize:	
 11824                           
 11825                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11826                           
 11827                           ;incstack = 0
 11828                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11829  121F  3187  27F6  3192   	fcall	_PMD_Initialize
 11830                           
 11831                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11832  1222  3193  23CF  3192   	fcall	_PIN_MANAGER_Initialize
 11833                           
 11834                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11835  1225  319F  272D  3192   	fcall	_OSCILLATOR_Initialize
 11836                           
 11837                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11838  1228  3190  20E7  3192   	fcall	_I2C1_Initialize
 11839                           
 11840                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11841  122B  319F  2736  3192   	fcall	_PWM1_Initialize
 11842                           
 11843                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11844  122E  319F  2741  3192   	fcall	_PWM2_Initialize
 11845                           
 11846                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11847  1231  3192  228F  3192   	fcall	_ADCC_Initialize
 11848                           
 11849                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11850  1234  319F  2757  3192   	fcall	_PWM4_Initialize
 11851                           
 11852                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11853  1237  319F  274C  3192   	fcall	_PWM3_Initialize
 11854                           
 11855                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11856  123A  319F  2788  3192   	fcall	_TMR2_Initialize
 11857                           
 11858                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11859  123D  3190  2003  3192   	fcall	_TMR0_Initialize
 11860                           
 11861                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11862  1240  3193  239C         	fcall	_EUSART1_Initialize
 11863  1242  0008               	return
 11864  1243                     __end_of_SYSTEM_Initialize:	
 11865                           
 11866                           	psect	text3
 11867  1F88                     __ptext3:	
 11868 ;; *************** function _TMR2_Initialize *****************
 11869 ;; Defined at:
 11870 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;		None
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;		None
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11888 ;;Total ram usage:        0 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    4
 11891 ;; This function calls:
 11892 ;;		Nothing
 11893 ;; This function is called by:
 11894 ;;		_SYSTEM_Initialize
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           
 11899                           ;psect for function _TMR2_Initialize
 11900  1F88                     _TMR2_Initialize:	
 11901                           
 11902                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11903                           
 11904                           ;incstack = 0
 11905                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11906  1F88  3001               	movlw	1
 11907  1F89  0145               	movlb	5	; select bank5
 11908  1F8A  0090               	movwf	16	;volatile
 11909                           
 11910                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11911  1F8B  018F               	clrf	15	;volatile
 11912                           
 11913                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11914  1F8C  0191               	clrf	17	;volatile
 11915                           
 11916                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11917  1F8D  30FF               	movlw	255
 11918  1F8E  008D               	movwf	13	;volatile
 11919                           
 11920                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11921  1F8F  018C               	clrf	12	;volatile
 11922                           
 11923                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11924  1F90  014E               	movlb	14	; select bank14
 11925  1F91  1090               	bcf	16,1	;volatile
 11926                           
 11927                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 11928  1F92  30F0               	movlw	240
 11929  1F93  0145               	movlb	5	; select bank5
 11930  1F94  008E               	movwf	14	;volatile
 11931  1F95  0008               	return
 11932  1F96                     __end_of_TMR2_Initialize:	
 11933                           
 11934                           	psect	text4
 11935  1003                     __ptext4:	
 11936 ;; *************** function _TMR0_Initialize *****************
 11937 ;; Defined at:
 11938 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;		None
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;		None
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0, pclath, cstack
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;Total ram usage:        0 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    5
 11959 ;; This function calls:
 11960 ;;		_TMR0_SetInterruptHandler
 11961 ;; This function is called by:
 11962 ;;		_SYSTEM_Initialize
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _TMR0_Initialize
 11968  1003                     _TMR0_Initialize:	
 11969                           
 11970                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11971                           
 11972                           ;incstack = 0
 11973                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11974  1003  3045               	movlw	69
 11975  1004  014B               	movlb	11	; select bank11
 11976  1005  009F               	movwf	31	;volatile
 11977                           
 11978                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11979  1006  30F9               	movlw	249
 11980  1007  009D               	movwf	29	;volatile
 11981                           
 11982                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11983  1008  019C               	clrf	28	;volatile
 11984                           
 11985                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11986  1009  014E               	movlb	14	; select bank14
 11987  100A  128C               	bcf	12,5	;volatile
 11988                           
 11989                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11990  100B  1696               	bsf	22,5	;volatile
 11991                           
 11992                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11993  100C  309E               	movlw	low _TMR0_DefaultInterruptHandler
 11994  100D  0140               	movlb	0	; select bank0
 11995  100E  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11996  100F  301E               	movlw	high _TMR0_DefaultInterruptHandler
 11997  1010  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11998  1011  319E  26F7         	fcall	_TMR0_SetInterruptHandler
 11999                           
 12000                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12001  1013  3080               	movlw	128
 12002  1014  014B               	movlb	11	; select bank11
 12003  1015  009E               	movwf	30	;volatile
 12004  1016  0008               	return
 12005  1017                     __end_of_TMR0_Initialize:	
 12006                           
 12007                           	psect	text5
 12008  1F57                     __ptext5:	
 12009 ;; *************** function _PWM4_Initialize *****************
 12010 ;; Defined at:
 12011 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;		None
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;		None
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      void 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2, status,0
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12029 ;;Total ram usage:        0 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:    4
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_SYSTEM_Initialize
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           
 12040                           ;psect for function _PWM4_Initialize
 12041  1F57                     _PWM4_Initialize:	
 12042                           
 12043                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12044                           
 12045                           ;incstack = 0
 12046                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12047  1F57  308C               	movlw	140
 12048  1F58  0146               	movlb	6	; select bank6
 12049  1F59  009A               	movwf	26	;volatile
 12050                           
 12051                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12052  1F5A  0199               	clrf	25	;volatile
 12053                           
 12054                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12055  1F5B  0198               	clrf	24	;volatile
 12056                           
 12057                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12058  1F5C  0144               	movlb	4	; select bank4
 12059  1F5D  081E               	movf	30,w	;volatile
 12060  1F5E  393F               	andlw	-193
 12061  1F5F  3840               	iorlw	64
 12062  1F60  009E               	movwf	30	;volatile
 12063  1F61  0008               	return
 12064  1F62                     __end_of_PWM4_Initialize:	
 12065                           
 12066                           	psect	text6
 12067  1F4C                     __ptext6:	
 12068 ;; *************** function _PWM3_Initialize *****************
 12069 ;; Defined at:
 12070 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12088 ;;Total ram usage:        0 bytes
 12089 ;; Hardware stack levels used:    1
 12090 ;; Hardware stack levels required when called:    4
 12091 ;; This function calls:
 12092 ;;		Nothing
 12093 ;; This function is called by:
 12094 ;;		_SYSTEM_Initialize
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           
 12099                           ;psect for function _PWM3_Initialize
 12100  1F4C                     _PWM3_Initialize:	
 12101                           
 12102                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12103                           
 12104                           ;incstack = 0
 12105                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12106  1F4C  308C               	movlw	140
 12107  1F4D  0146               	movlb	6	; select bank6
 12108  1F4E  0096               	movwf	22	;volatile
 12109                           
 12110                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12111  1F4F  0195               	clrf	21	;volatile
 12112                           
 12113                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12114  1F50  0194               	clrf	20	;volatile
 12115                           
 12116                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12117  1F51  0144               	movlb	4	; select bank4
 12118  1F52  081E               	movf	30,w	;volatile
 12119  1F53  39CF               	andlw	-49
 12120  1F54  3810               	iorlw	16
 12121  1F55  009E               	movwf	30	;volatile
 12122  1F56  0008               	return
 12123  1F57                     __end_of_PWM3_Initialize:	
 12124                           
 12125                           	psect	text7
 12126  1F41                     __ptext7:	
 12127 ;; *************** function _PWM2_Initialize *****************
 12128 ;; Defined at:
 12129 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;		None
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;		None
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  1    wreg      void 
 12136 ;; Registers used:
 12137 ;;		wreg, status,2, status,0
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12147 ;;Total ram usage:        0 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:    4
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_SYSTEM_Initialize
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           
 12158                           ;psect for function _PWM2_Initialize
 12159  1F41                     _PWM2_Initialize:	
 12160                           
 12161                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12162                           
 12163                           ;incstack = 0
 12164                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12165  1F41  308C               	movlw	140
 12166  1F42  0146               	movlb	6	; select bank6
 12167  1F43  0092               	movwf	18	;volatile
 12168                           
 12169                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12170  1F44  0191               	clrf	17	;volatile
 12171                           
 12172                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12173  1F45  0190               	clrf	16	;volatile
 12174                           
 12175                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12176  1F46  0144               	movlb	4	; select bank4
 12177  1F47  081E               	movf	30,w	;volatile
 12178  1F48  39F3               	andlw	-13
 12179  1F49  3804               	iorlw	4
 12180  1F4A  009E               	movwf	30	;volatile
 12181  1F4B  0008               	return
 12182  1F4C                     __end_of_PWM2_Initialize:	
 12183                           
 12184                           	psect	text8
 12185  1F36                     __ptext8:	
 12186 ;; *************** function _PWM1_Initialize *****************
 12187 ;; Defined at:
 12188 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;		None
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;		None
 12193 ;; Return value:  Size  Location     Type
 12194 ;;                  1    wreg      void 
 12195 ;; Registers used:
 12196 ;;		wreg, status,2, status,0
 12197 ;; Tracked objects:
 12198 ;;		On entry : 0/0
 12199 ;;		On exit  : 0/0
 12200 ;;		Unchanged: 0/0
 12201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12206 ;;Total ram usage:        0 bytes
 12207 ;; Hardware stack levels used:    1
 12208 ;; Hardware stack levels required when called:    4
 12209 ;; This function calls:
 12210 ;;		Nothing
 12211 ;; This function is called by:
 12212 ;;		_SYSTEM_Initialize
 12213 ;; This function uses a non-reentrant model
 12214 ;;
 12215                           
 12216                           
 12217                           ;psect for function _PWM1_Initialize
 12218  1F36                     _PWM1_Initialize:	
 12219                           
 12220                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12221                           
 12222                           ;incstack = 0
 12223                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12224  1F36  308C               	movlw	140
 12225  1F37  0146               	movlb	6	; select bank6
 12226  1F38  008E               	movwf	14	;volatile
 12227                           
 12228                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12229  1F39  018D               	clrf	13	;volatile
 12230                           
 12231                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12232  1F3A  018C               	clrf	12	;volatile
 12233                           
 12234                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12235  1F3B  0144               	movlb	4	; select bank4
 12236  1F3C  081E               	movf	30,w	;volatile
 12237  1F3D  39FC               	andlw	-4
 12238  1F3E  3801               	iorlw	1
 12239  1F3F  009E               	movwf	30	;volatile
 12240  1F40  0008               	return
 12241  1F41                     __end_of_PWM1_Initialize:	
 12242                           
 12243                           	psect	text9
 12244  07F6                     __ptext9:	
 12245 ;; *************** function _PMD_Initialize *****************
 12246 ;; Defined at:
 12247 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;		None
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;		None
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  1    wreg      void 
 12254 ;; Registers used:
 12255 ;;		status,2
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12265 ;;Total ram usage:        0 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    4
 12268 ;; This function calls:
 12269 ;;		Nothing
 12270 ;; This function is called by:
 12271 ;;		_SYSTEM_Initialize
 12272 ;; This function uses a non-reentrant model
 12273 ;;
 12274                           
 12275                           
 12276                           ;psect for function _PMD_Initialize
 12277  07F6                     _PMD_Initialize:	
 12278                           
 12279                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12280                           
 12281                           ;incstack = 0
 12282                           ; Regs used in _PMD_Initialize: [status,2]
 12283  07F6  014F               	movlb	15	; select bank15
 12284  07F7  0196               	clrf	22	;volatile
 12285                           
 12286                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12287  07F8  0197               	clrf	23	;volatile
 12288                           
 12289                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12290  07F9  0198               	clrf	24	;volatile
 12291                           
 12292                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12293  07FA  0199               	clrf	25	;volatile
 12294                           
 12295                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12296  07FB  019A               	clrf	26	;volatile
 12297                           
 12298                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12299  07FC  019B               	clrf	27	;volatile
 12300                           
 12301                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12302  07FD  019C               	clrf	28	;volatile
 12303                           
 12304                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12305  07FE  019D               	clrf	29	;volatile
 12306  07FF  0008               	return
 12307  0800                     __end_of_PMD_Initialize:	
 12308                           
 12309                           	psect	text10
 12310  13CF                     __ptext10:	
 12311 ;; *************** function _PIN_MANAGER_Initialize *****************
 12312 ;; Defined at:
 12313 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;		None
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      void 
 12320 ;; Registers used:
 12321 ;;		wreg, status,2
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12331 ;;Total ram usage:        0 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    4
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_SYSTEM_Initialize
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           
 12342                           ;psect for function _PIN_MANAGER_Initialize
 12343  13CF                     _PIN_MANAGER_Initialize:	
 12344                           
 12345                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12346                           
 12347                           ;incstack = 0
 12348                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12349  13CF  0140               	movlb	0	; select bank0
 12350  13D0  0198               	clrf	24	;volatile
 12351                           
 12352                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12353  13D1  0199               	clrf	25	;volatile
 12354                           
 12355                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12356  13D2  019A               	clrf	26	;volatile
 12357                           
 12358                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12359  13D3  303F               	movlw	63
 12360  13D4  0092               	movwf	18	;volatile
 12361                           
 12362                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12363  13D5  30F0               	movlw	240
 12364  13D6  0093               	movwf	19	;volatile
 12365                           
 12366                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12367  13D7  3026               	movlw	38
 12368  13D8  0094               	movwf	20	;volatile
 12369                           
 12370                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12371  13D9  30FF               	movlw	255
 12372  13DA  017E               	movlb	62	; select bank62
 12373  13DB  00CE               	movwf	78	;volatile
 12374                           
 12375                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12376  13DC  30E0               	movlw	224
 12377  13DD  00C3               	movwf	67	;volatile
 12378                           
 12379                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12380  13DE  3007               	movlw	7
 12381  13DF  00B8               	movwf	56	;volatile
 12382                           
 12383                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12384  13E0  01C4               	clrf	68	;volatile
 12385                           
 12386                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12387  13E1  01B9               	clrf	57	;volatile
 12388                           
 12389                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12390  13E2  01CF               	clrf	79	;volatile
 12391                           
 12392                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12393  13E3  01BA               	clrf	58	;volatile
 12394                           
 12395                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12396  13E4  01C5               	clrf	69	;volatile
 12397                           
 12398                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12399  13E5  01D0               	clrf	80	;volatile
 12400                           
 12401                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12402  13E6  3037               	movlw	55
 12403  13E7  00BB               	movwf	59	;volatile
 12404                           
 12405                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12406  13E8  30F0               	movlw	240
 12407  13E9  00C6               	movwf	70	;volatile
 12408                           
 12409                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12410  13EA  30FF               	movlw	255
 12411  13EB  00D1               	movwf	81	;volatile
 12412                           
 12413                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12414  13EC  3005               	movlw	5
 12415  13ED  017D               	movlb	61	; select bank61
 12416  13EE  00C5               	movwf	69	;volatile
 12417                           
 12418                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12419  13EF  3014               	movlw	20
 12420  13F0  017E               	movlb	62	; select bank62
 12421  13F1  0094               	movwf	20	;volatile
 12422                           
 12423                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12424  13F2  300B               	movlw	11
 12425  13F3  00A3               	movwf	35	;volatile
 12426                           
 12427                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12428  13F4  300C               	movlw	12
 12429  13F5  00A4               	movwf	36	;volatile
 12430                           
 12431                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12432  13F6  3013               	movlw	19
 12433  13F7  0095               	movwf	21	;volatile
 12434                           
 12435                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12436  13F8  300A               	movlw	10
 12437  13F9  00A6               	movwf	38	;volatile
 12438                           
 12439                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12440  13FA  3009               	movlw	9
 12441  13FB  00A7               	movwf	39	;volatile
 12442                           
 12443                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12444  13FC  3004               	movlw	4
 12445  13FD  017D               	movlb	61	; select bank61
 12446  13FE  00C6               	movwf	70	;volatile
 12447                           
 12448                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12449  13FF  300C               	movlw	12
 12450  1400  00CB               	movwf	75	;volatile
 12451  1401  0008               	return
 12452  1402                     __end_of_PIN_MANAGER_Initialize:	
 12453                           
 12454                           	psect	text11
 12455  1F2D                     __ptext11:	
 12456 ;; *************** function _OSCILLATOR_Initialize *****************
 12457 ;; Defined at:
 12458 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;		None
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;		None
 12463 ;; Return value:  Size  Location     Type
 12464 ;;                  1    wreg      void 
 12465 ;; Registers used:
 12466 ;;		wreg, status,2
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12476 ;;Total ram usage:        0 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:    4
 12479 ;; This function calls:
 12480 ;;		Nothing
 12481 ;; This function is called by:
 12482 ;;		_SYSTEM_Initialize
 12483 ;; This function uses a non-reentrant model
 12484 ;;
 12485                           
 12486                           
 12487                           ;psect for function _OSCILLATOR_Initialize
 12488  1F2D                     _OSCILLATOR_Initialize:	
 12489                           
 12490                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12491                           
 12492                           ;incstack = 0
 12493                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12494  1F2D  3060               	movlw	96
 12495  1F2E  0151               	movlb	17	; select bank17
 12496  1F2F  008D               	movwf	13	;volatile
 12497                           
 12498                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12499  1F30  018F               	clrf	15	;volatile
 12500                           
 12501                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12502  1F31  0191               	clrf	17	;volatile
 12503                           
 12504                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12505  1F32  3006               	movlw	6
 12506  1F33  0093               	movwf	19	;volatile
 12507                           
 12508                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12509  1F34  0192               	clrf	18	;volatile
 12510  1F35  0008               	return
 12511  1F36                     __end_of_OSCILLATOR_Initialize:	
 12512                           
 12513                           	psect	text12
 12514  10E7                     __ptext12:	
 12515 ;; *************** function _I2C1_Initialize *****************
 12516 ;; Defined at:
 12517 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;		None
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;		None
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      void 
 12524 ;; Registers used:
 12525 ;;		wreg, status,2
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12534 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12535 ;;Total ram usage:        1 bytes
 12536 ;; Hardware stack levels used:    1
 12537 ;; Hardware stack levels required when called:    4
 12538 ;; This function calls:
 12539 ;;		Nothing
 12540 ;; This function is called by:
 12541 ;;		_SYSTEM_Initialize
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           
 12546                           ;psect for function _I2C1_Initialize
 12547  10E7                     _I2C1_Initialize:	
 12548                           
 12549                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12550                           
 12551                           ;incstack = 0
 12552                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12553  10E7  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12554  10E8  0140               	movlb	0	; select bank0
 12555  10E9  00A0               	movwf	??_I2C1_Initialize
 12556  10EA  0820               	movf	??_I2C1_Initialize,w
 12557  10EB  0141               	movlb	1	; select bank1
 12558  10EC  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12559                           
 12560                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12561  10ED  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12562  10EE  0140               	movlb	0	; select bank0
 12563  10EF  00A0               	movwf	??_I2C1_Initialize
 12564  10F0  0820               	movf	??_I2C1_Initialize,w
 12565  10F1  0141               	movlb	1	; select bank1
 12566  10F2  00A0               	movwf	_i2c1_object^(0+128)
 12567                           
 12568                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12569  10F3  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12570                           
 12571                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12572  10F4  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12573                           
 12574                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12575  10F5  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12576                           
 12577                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12578  10F6  0143               	movlb	3	; select bank3
 12579  10F7  018F               	clrf	15	;volatile
 12580                           
 12581                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12582  10F8  3028               	movlw	40
 12583  10F9  0090               	movwf	16	;volatile
 12584                           
 12585                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12586  10FA  0192               	clrf	18	;volatile
 12587                           
 12588                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12589  10FB  304F               	movlw	79
 12590  10FC  008D               	movwf	13	;volatile
 12591                           
 12592                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12593  10FD  014E               	movlb	14	; select bank14
 12594  10FE  100F               	bcf	15,0	;volatile
 12595                           
 12596                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12597  10FF  108F               	bcf	15,1	;volatile
 12598                           
 12599                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12600  1100  1419               	bsf	25,0	;volatile
 12601                           
 12602                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12603  1101  1499               	bsf	25,1	;volatile
 12604  1102  0008               	return
 12605  1103                     __end_of_I2C1_Initialize:	
 12606                           
 12607                           	psect	text13
 12608  139C                     __ptext13:	
 12609 ;; *************** function _EUSART1_Initialize *****************
 12610 ;; Defined at:
 12611 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12612 ;; Parameters:    Size  Location     Type
 12613 ;;		None
 12614 ;; Auto vars:     Size  Location     Type
 12615 ;;		None
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  1    wreg      void 
 12618 ;; Registers used:
 12619 ;;		wreg, status,2, status,0, pclath, cstack
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12629 ;;Total ram usage:        0 bytes
 12630 ;; Hardware stack levels used:    1
 12631 ;; Hardware stack levels required when called:    5
 12632 ;; This function calls:
 12633 ;;		_EUSART1_SetErrorHandler
 12634 ;;		_EUSART1_SetFramingErrorHandler
 12635 ;;		_EUSART1_SetOverrunErrorHandler
 12636 ;;		_EUSART1_SetRxInterruptHandler
 12637 ;; This function is called by:
 12638 ;;		_SYSTEM_Initialize
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           
 12643                           ;psect for function _EUSART1_Initialize
 12644  139C                     _EUSART1_Initialize:	
 12645                           
 12646                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12647                           
 12648                           ;incstack = 0
 12649                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12650  139C  014E               	movlb	14	; select bank14
 12651  139D  1299               	bcf	25,5	;volatile
 12652                           
 12653                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12654  139E  3002               	movlw	low _EUSART1_Receive_ISR
 12655  139F  0140               	movlb	0	; select bank0
 12656  13A0  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12657  13A1  3014               	movlw	high _EUSART1_Receive_ISR
 12658  13A2  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12659  13A3  319F  2700  3193   	fcall	_EUSART1_SetRxInterruptHandler
 12660                           
 12661                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12662  13A6  3008               	movlw	8
 12663  13A7  0142               	movlb	2	; select bank2
 12664  13A8  009F               	movwf	31	;volatile
 12665                           
 12666                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12667  13A9  3090               	movlw	144
 12668  13AA  009D               	movwf	29	;volatile
 12669                           
 12670                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12671  13AB  3004               	movlw	4
 12672  13AC  009E               	movwf	30	;volatile
 12673                           
 12674                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12675  13AD  301F               	movlw	31
 12676  13AE  009B               	movwf	27	;volatile
 12677                           
 12678                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12679  13AF  019C               	clrf	28	;volatile
 12680                           
 12681                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12682  13B0  309D               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12683  13B1  0140               	movlb	0	; select bank0
 12684  13B2  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12685  13B3  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12686  13B4  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12687  13B5  319F  271B  3193   	fcall	_EUSART1_SetFramingErrorHandler
 12688                           
 12689                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12690  13B8  30B0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12691  13B9  0140               	movlb	0	; select bank0
 12692  13BA  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12693  13BB  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12694  13BC  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12695  13BD  319F  2724  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 12696                           
 12697                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12698  13C0  30A3               	movlw	low _EUSART1_DefaultErrorHandler
 12699  13C1  0140               	movlb	0	; select bank0
 12700  13C2  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12701  13C3  301E               	movlw	high _EUSART1_DefaultErrorHandler
 12702  13C4  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12703  13C5  319F  2712         	fcall	_EUSART1_SetErrorHandler
 12704                           
 12705                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12706  13C7  0141               	movlb	1	; select bank1
 12707  13C8  01C5               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12708                           
 12709                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12710  13C9  01F9               	clrf	_eusart1RxHead	;volatile
 12711                           
 12712                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12713  13CA  01F8               	clrf	_eusart1RxTail	;volatile
 12714                           
 12715                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12716  13CB  01C6               	clrf	_eusart1RxCount^(0+128)	;volatile
 12717                           
 12718                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12719  13CC  014E               	movlb	14	; select bank14
 12720  13CD  1699               	bsf	25,5	;volatile
 12721  13CE  0008               	return
 12722  13CF                     __end_of_EUSART1_Initialize:	
 12723                           
 12724                           	psect	text14
 12725  1F24                     __ptext14:	
 12726 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12727 ;; Defined at:
 12728 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12729 ;; Parameters:    Size  Location     Type
 12730 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12731 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1    wreg      void 
 12736 ;; Registers used:
 12737 ;;		wreg
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12747 ;;Total ram usage:        2 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:    4
 12750 ;; This function calls:
 12751 ;;		Nothing
 12752 ;; This function is called by:
 12753 ;;		_EUSART1_Initialize
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757                           
 12758                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12759  1F24                     _EUSART1_SetOverrunErrorHandler:	
 12760                           
 12761                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12762                           
 12763                           ;incstack = 0
 12764                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12765  1F24  0140               	movlb	0	; select bank0
 12766  1F25  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12767  1F26  0142               	movlb	2	; select bank2
 12768  1F27  00DF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12769  1F28  0140               	movlb	0	; select bank0
 12770  1F29  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12771  1F2A  0142               	movlb	2	; select bank2
 12772  1F2B  00DE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12773  1F2C  0008               	return
 12774  1F2D                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12775                           
 12776                           	psect	text15
 12777  1F1B                     __ptext15:	
 12778 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12779 ;; Defined at:
 12780 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12783 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;		None
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  1    wreg      void 
 12788 ;; Registers used:
 12789 ;;		wreg
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12799 ;;Total ram usage:        2 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:    4
 12802 ;; This function calls:
 12803 ;;		Nothing
 12804 ;; This function is called by:
 12805 ;;		_EUSART1_Initialize
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           
 12810                           ;psect for function _EUSART1_SetFramingErrorHandler
 12811  1F1B                     _EUSART1_SetFramingErrorHandler:	
 12812                           
 12813                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12814                           
 12815                           ;incstack = 0
 12816                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12817  1F1B  0140               	movlb	0	; select bank0
 12818  1F1C  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12819  1F1D  0142               	movlb	2	; select bank2
 12820  1F1E  00E1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12821  1F1F  0140               	movlb	0	; select bank0
 12822  1F20  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12823  1F21  0142               	movlb	2	; select bank2
 12824  1F22  00E0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12825  1F23  0008               	return
 12826  1F24                     __end_of_EUSART1_SetFramingErrorHandler:	
 12827                           
 12828                           	psect	text16
 12829  1F12                     __ptext16:	
 12830 ;; *************** function _EUSART1_SetErrorHandler *****************
 12831 ;; Defined at:
 12832 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12835 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12851 ;;Total ram usage:        2 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:    4
 12854 ;; This function calls:
 12855 ;;		Nothing
 12856 ;; This function is called by:
 12857 ;;		_EUSART1_Initialize
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           
 12862                           ;psect for function _EUSART1_SetErrorHandler
 12863  1F12                     _EUSART1_SetErrorHandler:	
 12864                           
 12865                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12866                           
 12867                           ;incstack = 0
 12868                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12869  1F12  0140               	movlb	0	; select bank0
 12870  1F13  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12871  1F14  0142               	movlb	2	; select bank2
 12872  1F15  00DD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12873  1F16  0140               	movlb	0	; select bank0
 12874  1F17  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12875  1F18  0142               	movlb	2	; select bank2
 12876  1F19  00DC               	movwf	_EUSART1_ErrorHandler^(0+256)
 12877  1F1A  0008               	return
 12878  1F1B                     __end_of_EUSART1_SetErrorHandler:	
 12879                           
 12880                           	psect	text17
 12881  128F                     __ptext17:	
 12882 ;; *************** function _ADCC_Initialize *****************
 12883 ;; Defined at:
 12884 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;		None
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;		None
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg, status,2, status,0, pclath, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;Total ram usage:        0 bytes
 12903 ;; Hardware stack levels used:    1
 12904 ;; Hardware stack levels required when called:    5
 12905 ;; This function calls:
 12906 ;;		_ADCC_SetADTIInterruptHandler
 12907 ;; This function is called by:
 12908 ;;		_SYSTEM_Initialize
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           
 12913                           ;psect for function _ADCC_Initialize
 12914  128F                     _ADCC_Initialize:	
 12915                           
 12916                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12917                           
 12918                           ;incstack = 0
 12919                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12920  128F  0141               	movlb	1	; select bank1
 12921  1290  018C               	clrf	12	;volatile
 12922                           
 12923                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12924  1291  018D               	clrf	13	;volatile
 12925                           
 12926                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12927  1292  018E               	clrf	14	;volatile
 12928                           
 12929                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12930  1293  018F               	clrf	15	;volatile
 12931                           
 12932                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12933  1294  0192               	clrf	18	;volatile
 12934                           
 12935                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12936  1295  0193               	clrf	19	;volatile
 12937                           
 12938                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12939  1296  0198               	clrf	24	;volatile
 12940                           
 12941                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12942  1297  019A               	clrf	26	;volatile
 12943                           
 12944                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12945  1298  019F               	clrf	31	;volatile
 12946                           
 12947                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12948  1299  0142               	movlb	2	; select bank2
 12949  129A  018C               	clrf	12	;volatile
 12950                           
 12951                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12952  129B  018D               	clrf	13	;volatile
 12953                           
 12954                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12955  129C  018E               	clrf	14	;volatile
 12956                           
 12957                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12958  129D  018F               	clrf	15	;volatile
 12959                           
 12960                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12961  129E  0190               	clrf	16	;volatile
 12962                           
 12963                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12964  129F  0192               	clrf	18	;volatile
 12965                           
 12966                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12967  12A0  3054               	movlw	84
 12968  12A1  0093               	movwf	19	;volatile
 12969                           
 12970                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12971  12A2  3056               	movlw	86
 12972  12A3  0094               	movwf	20	;volatile
 12973                           
 12974                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12975  12A4  0195               	clrf	21	;volatile
 12976                           
 12977                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12978  12A5  0196               	clrf	22	;volatile
 12979                           
 12980                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12981  12A6  0197               	clrf	23	;volatile
 12982                           
 12983                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12984  12A7  0198               	clrf	24	;volatile
 12985                           
 12986                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12987  12A8  30D4               	movlw	212
 12988  12A9  0091               	movwf	17	;volatile
 12989                           
 12990                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12991  12AA  014E               	movlb	14	; select bank14
 12992  12AB  108D               	bcf	13,1	;volatile
 12993                           
 12994                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12995  12AC  1497               	bsf	23,1	;volatile
 12996                           
 12997                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12998  12AD  309C               	movlw	low _ADCC_DefaultInterruptHandler
 12999  12AE  0140               	movlb	0	; select bank0
 13000  12AF  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13001  12B0  301E               	movlw	high _ADCC_DefaultInterruptHandler
 13002  12B1  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13003  12B2  319E  26D3         	fcall	_ADCC_SetADTIInterruptHandler
 13004  12B4  0008               	return
 13005  12B5                     __end_of_ADCC_Initialize:	
 13006                           
 13007                           	psect	text18
 13008  1514                     __ptext18:	
 13009 ;; *************** function _LED_task *****************
 13010 ;; Defined at:
 13011 ;;		line 54 in file "led.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;		None
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;		None
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13020 ;; Tracked objects:
 13021 ;;		On entry : 0/0
 13022 ;;		On exit  : 0/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13028 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13029 ;;Total ram usage:        2 bytes
 13030 ;; Hardware stack levels used:    1
 13031 ;; Hardware stack levels required when called:    9
 13032 ;; This function calls:
 13033 ;;		_LED_setColor
 13034 ;;		_LED_task_ANIMATION
 13035 ;;		_LED_task_BEAT_CONTINUOUS
 13036 ;;		_LED_task_BEAT_FADE
 13037 ;;		_LED_task_BEAT_MIXED
 13038 ;;		_LED_task_BEAT_STROBE
 13039 ;;		_LED_task_DMX
 13040 ;;		_LED_task_MANUAL
 13041 ;;		_getMode
 13042 ;; This function is called by:
 13043 ;;		_main
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047                           
 13048                           ;psect for function _LED_task
 13049  1514                     _LED_task:	
 13050                           
 13051                           ;led.c: 56:     switch(getMode()) {
 13052                           
 13053                           ;incstack = 0
 13054                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13055  1514  2D36               	goto	l8660
 13056  1515                     l8642:	
 13057                           
 13058                           ;led.c: 58:             LED_task_DMX();
 13059  1515  3196  26A6         	fcall	_LED_task_DMX
 13060                           
 13061                           ;led.c: 59:             break;
 13062  1517  0008               	return
 13063  1518                     l8644:	
 13064                           
 13065                           ;led.c: 62:             LED_task_BEAT_STROBE();
 13066  1518  318C  24EA         	fcall	_LED_task_BEAT_STROBE
 13067                           
 13068                           ;led.c: 63:             break;
 13069  151A  0008               	return
 13070  151B                     l8646:	
 13071                           
 13072                           ;led.c: 66:             LED_task_BEAT_FADE();
 13073  151B  319E  26A1         	fcall	_LED_task_BEAT_FADE
 13074                           
 13075                           ;led.c: 67:             break;
 13076  151D  0008               	return
 13077  151E                     l8648:	
 13078                           
 13079                           ;led.c: 70:             LED_task_BEAT_CONTINUOUS();
 13080  151E  319E  26A0         	fcall	_LED_task_BEAT_CONTINUOUS
 13081                           
 13082                           ;led.c: 71:             break;
 13083  1520  0008               	return
 13084  1521                     l8650:	
 13085                           
 13086                           ;led.c: 74:             LED_task_BEAT_MIXED();
 13087  1521  319E  26A2         	fcall	_LED_task_BEAT_MIXED
 13088                           
 13089                           ;led.c: 75:             break;
 13090  1523  0008               	return
 13091  1524                     l8652:	
 13092                           
 13093                           ;led.c: 79:             LED_task_ANIMATION();
 13094  1524  319E  269F         	fcall	_LED_task_ANIMATION
 13095                           
 13096                           ;led.c: 80:             break;
 13097  1526  0008               	return
 13098  1527                     l8654:	
 13099                           
 13100                           ;led.c: 83:             LED_task_MANUAL();
 13101  1527  3188  2000  3195   	fcall	_LED_task_MANUAL
 13102                           
 13103                           ;led.c: 84:             LED_setColor(manual);
 13104  152A  0141               	movlb	1	; select bank1
 13105  152B  0828               	movf	(_manual+3)^(0+128),w
 13106  152C  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13107  152D  0827               	movf	(_manual+2)^(0+128),w
 13108  152E  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13109  152F  0826               	movf	(_manual+1)^(0+128),w
 13110  1530  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13111  1531  0825               	movf	_manual^(0+128),w
 13112  1532  00DD               	movwf	LED_setColor@input^(0+128)
 13113  1533  3185  25D1         	fcall	_LED_setColor
 13114                           
 13115                           ;led.c: 85:             break;
 13116  1535  0008               	return
 13117  1536                     l8660:	
 13118  1536  3190  2000  3195   	fcall	_getMode
 13119  1539  0141               	movlb	1	; select bank1
 13120  153A  00EA               	movwf	??_LED_task^(0+128)
 13121  153B  01EB               	clrf	(??_LED_task^(0+128)+1)
 13122                           
 13123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13124                           ; Switch size 1, requested type "simple"
 13125                           ; Number of cases is 1, Range of values is 0 to 0
 13126                           ; switch strategies available:
 13127                           ; Name         Instructions Cycles
 13128                           ; simple_byte            4     3 (average)
 13129                           ; direct_byte            8     6 (fixed)
 13130                           ; jumptable            260     6 (fixed)
 13131                           ;	Chosen strategy is simple_byte
 13132  153C  086B               	movf	(??_LED_task+1)^(0+128),w
 13133  153D  3A00               	xorlw	0	; case 0
 13134  153E  1903               	skipnz
 13135  153F  2D41               	goto	l8970
 13136  1540  2D58               	goto	l1370
 13137  1541                     l8970:	
 13138                           
 13139                           ; Switch size 1, requested type "simple"
 13140                           ; Number of cases is 7, Range of values is 0 to 6
 13141                           ; switch strategies available:
 13142                           ; Name         Instructions Cycles
 13143                           ; direct_byte           20     6 (fixed)
 13144                           ; simple_byte           22    12 (average)
 13145                           ; jumptable            260     6 (fixed)
 13146                           ;	Chosen strategy is simple_byte
 13147  1541  086A               	movf	??_LED_task^(0+128),w
 13148  1542  3A00               	xorlw	0	; case 0
 13149  1543  1903               	skipnz
 13150  1544  2D15               	goto	l8642
 13151  1545  3A01               	xorlw	1	; case 1
 13152  1546  1903               	skipnz
 13153  1547  2D18               	goto	l8644
 13154  1548  3A03               	xorlw	3	; case 2
 13155  1549  1903               	skipnz
 13156  154A  2D24               	goto	l8652
 13157  154B  3A01               	xorlw	1	; case 3
 13158  154C  1903               	skipnz
 13159  154D  2D27               	goto	l8654
 13160  154E  3A07               	xorlw	7	; case 4
 13161  154F  1903               	skipnz
 13162  1550  2D1B               	goto	l8646
 13163  1551  3A01               	xorlw	1	; case 5
 13164  1552  1903               	skipnz
 13165  1553  2D1E               	goto	l8648
 13166  1554  3A03               	xorlw	3	; case 6
 13167  1555  1903               	skipnz
 13168  1556  2D21               	goto	l8650
 13169  1557  2D58               	goto	l1370
 13170  1558                     l1370:	
 13171  1558  0008               	return
 13172  1559                     __end_of_LED_task:	
 13173                           
 13174                           	psect	text19
 13175  1000                     __ptext19:	
 13176 ;; *************** function _getMode *****************
 13177 ;; Defined at:
 13178 ;;		line 170 in file "controller.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      enum E10869
 13185 ;; Registers used:
 13186 ;;		wreg
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;Total ram usage:        0 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    4
 13199 ;; This function calls:
 13200 ;;		Nothing
 13201 ;; This function is called by:
 13202 ;;		_LED_task
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _getMode
 13208  1000                     _getMode:	
 13209                           
 13210                           ;controller.c: 171:     return currentSelection;
 13211                           
 13212                           ;incstack = 0
 13213                           ; Regs used in _getMode: [wreg]
 13214  1000  0141               	movlb	1	; select bank1
 13215  1001  0839               	movf	_currentSelection^(0+128),w
 13216  1002  0008               	return
 13217  1003                     __end_of_getMode:	
 13218                           
 13219                           	psect	text20
 13220  0800                     __ptext20:	
 13221 ;; *************** function _LED_task_MANUAL *****************
 13222 ;; Defined at:
 13223 ;;		line 213 in file "led.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;		None
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;		None
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  1    wreg      void 
 13230 ;; Registers used:
 13231 ;;		None
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;Total ram usage:        0 bytes
 13242 ;; Hardware stack levels used:    1
 13243 ;; Hardware stack levels required when called:    4
 13244 ;; This function calls:
 13245 ;;		Nothing
 13246 ;; This function is called by:
 13247 ;;		_LED_task
 13248 ;; This function uses a non-reentrant model
 13249 ;;
 13250                           
 13251                           
 13252                           ;psect for function _LED_task_MANUAL
 13253  0800                     _LED_task_MANUAL:	
 13254                           
 13255                           ;incstack = 0
 13256                           ; Regs used in _LED_task_MANUAL: []
 13257  0800  0008               	return
 13258  0801                     __end_of_LED_task_MANUAL:	
 13259                           
 13260                           	psect	text21
 13261  16A6                     __ptext21:	
 13262 ;; *************** function _LED_task_DMX *****************
 13263 ;; Defined at:
 13264 ;;		line 33 in file "led.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;  dmx             4    0[BANK2 ] struct .
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13279 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13280 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13281 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13282 ;;Total ram usage:        9 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    7
 13285 ;; This function calls:
 13286 ;;		_DMX_getAddress
 13287 ;;		_LED_setColor
 13288 ;; This function is called by:
 13289 ;;		_LED_task
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           
 13294                           ;psect for function _LED_task_DMX
 13295  16A6                     _LED_task_DMX:	
 13296                           
 13297                           ;led.c: 35:     color_t dmx;;led.c: 37:     dmx.red = dmxArray[DMX_getAddress()];
 13298                           
 13299                           ;incstack = 0
 13300                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13301  16A6  319E  26A9  3196   	fcall	_DMX_getAddress
 13302  16A9  0141               	movlb	1	; select bank1
 13303  16AA  00E5               	movwf	??_LED_task_DMX^(0+128)
 13304  16AB  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13305  16AC  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13306  16AD  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13307  16AE  30EE               	movlw	238
 13308  16AF  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13309  16B0  3023               	movlw	35
 13310  16B1  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13311  16B2  0865               	movf	??_LED_task_DMX^(0+128),w
 13312  16B3  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13313  16B4  0086               	movwf	6
 13314  16B5  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13315  16B6  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13316  16B7  0087               	movwf	7
 13317  16B8  0801               	movf	1,w
 13318  16B9  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13319  16BA  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13320  16BB  0142               	movlb	2	; select bank2
 13321  16BC  00EB               	movwf	(LED_task_DMX@dmx^(0+256)+1)
 13322                           
 13323                           ;led.c: 38:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13324  16BD  319E  26A9  3196   	fcall	_DMX_getAddress
 13325  16C0  0141               	movlb	1	; select bank1
 13326  16C1  00E5               	movwf	??_LED_task_DMX^(0+128)
 13327  16C2  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13328  16C3  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13329  16C4  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13330  16C5  30F0               	movlw	240
 13331  16C6  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13332  16C7  3023               	movlw	35
 13333  16C8  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13334  16C9  0865               	movf	??_LED_task_DMX^(0+128),w
 13335  16CA  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13336  16CB  0086               	movwf	6
 13337  16CC  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13338  16CD  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13339  16CE  0087               	movwf	7
 13340  16CF  0801               	movf	1,w
 13341  16D0  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13342  16D1  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13343  16D2  0142               	movlb	2	; select bank2
 13344  16D3  00EC               	movwf	(LED_task_DMX@dmx^(0+256)+2)
 13345                           
 13346                           ;led.c: 39:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13347  16D4  319E  26A9  3196   	fcall	_DMX_getAddress
 13348  16D7  0141               	movlb	1	; select bank1
 13349  16D8  00E5               	movwf	??_LED_task_DMX^(0+128)
 13350  16D9  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13351  16DA  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13352  16DB  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13353  16DC  30F2               	movlw	242
 13354  16DD  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13355  16DE  3023               	movlw	35
 13356  16DF  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13357  16E0  0865               	movf	??_LED_task_DMX^(0+128),w
 13358  16E1  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13359  16E2  0086               	movwf	6
 13360  16E3  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13361  16E4  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13362  16E5  0087               	movwf	7
 13363  16E6  0801               	movf	1,w
 13364  16E7  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13365  16E8  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13366  16E9  0142               	movlb	2	; select bank2
 13367  16EA  00ED               	movwf	(LED_task_DMX@dmx^(0+256)+3)
 13368                           
 13369                           ;led.c: 40:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13370  16EB  319E  26A9  3196   	fcall	_DMX_getAddress
 13371  16EE  0141               	movlb	1	; select bank1
 13372  16EF  00E5               	movwf	??_LED_task_DMX^(0+128)
 13373  16F0  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13374  16F1  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13375  16F2  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13376  16F3  30F4               	movlw	244
 13377  16F4  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13378  16F5  3023               	movlw	35
 13379  16F6  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13380  16F7  0865               	movf	??_LED_task_DMX^(0+128),w
 13381  16F8  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13382  16F9  0086               	movwf	6
 13383  16FA  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13384  16FB  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13385  16FC  0087               	movwf	7
 13386  16FD  0801               	movf	1,w
 13387  16FE  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13388  16FF  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13389  1700  0142               	movlb	2	; select bank2
 13390  1701  00EA               	movwf	LED_task_DMX@dmx^(0+256)
 13391                           
 13392                           ;led.c: 42:     LED_setColor(dmx);
 13393  1702  086D               	movf	(LED_task_DMX@dmx+3)^(0+256),w
 13394  1703  0141               	movlb	1	; select bank1
 13395  1704  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13396  1705  0142               	movlb	2	; select bank2
 13397  1706  086C               	movf	(LED_task_DMX@dmx+2)^(0+256),w
 13398  1707  0141               	movlb	1	; select bank1
 13399  1708  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13400  1709  0142               	movlb	2	; select bank2
 13401  170A  086B               	movf	(LED_task_DMX@dmx+1)^(0+256),w
 13402  170B  0141               	movlb	1	; select bank1
 13403  170C  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13404  170D  0142               	movlb	2	; select bank2
 13405  170E  086A               	movf	LED_task_DMX@dmx^(0+256),w
 13406  170F  0141               	movlb	1	; select bank1
 13407  1710  00DD               	movwf	LED_setColor@input^(0+128)
 13408  1711  3185  25D1         	fcall	_LED_setColor
 13409  1713  0008               	return
 13410  1714                     __end_of_LED_task_DMX:	
 13411                           
 13412                           	psect	text22
 13413  1EA9                     __ptext22:	
 13414 ;; *************** function _DMX_getAddress *****************
 13415 ;; Defined at:
 13416 ;;		line 73 in file "dmx.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      unsigned char 
 13423 ;; Registers used:
 13424 ;;		wreg
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    4
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_LED_task_DMX
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function _DMX_getAddress
 13446  1EA9                     _DMX_getAddress:	
 13447                           
 13448                           ;dmx.c: 74:     return address;
 13449                           
 13450                           ;incstack = 0
 13451                           ; Regs used in _DMX_getAddress: [wreg]
 13452  1EA9  0141               	movlb	1	; select bank1
 13453  1EAA  086C               	movf	_address^(0+128),w
 13454  1EAB  0008               	return
 13455  1EAC                     __end_of_DMX_getAddress:	
 13456                           
 13457                           	psect	text23
 13458  0CEA                     __ptext23:	
 13459 ;; *************** function _LED_task_BEAT_STROBE *****************
 13460 ;; Defined at:
 13461 ;;		line 90 in file "led.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;		None
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;  beatState       1   79[BANK0 ] _Bool 
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  1    wreg      void 
 13468 ;; Registers used:
 13469 ;;		wreg, status,2, status,0, pclath, cstack
 13470 ;; Tracked objects:
 13471 ;;		On entry : 0/0
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13477 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13478 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13479 ;;Total ram usage:        3 bytes
 13480 ;; Hardware stack levels used:    1
 13481 ;; Hardware stack levels required when called:    8
 13482 ;; This function calls:
 13483 ;;		_BEAT_detected
 13484 ;;		_CLOCK_getTime
 13485 ;;		_LED_setColor
 13486 ;;		_beatColorCreator
 13487 ;; This function is called by:
 13488 ;;		_LED_task
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           
 13493                           ;psect for function _LED_task_BEAT_STROBE
 13494  0CEA                     _LED_task_BEAT_STROBE:	
 13495                           
 13496                           ;led.c: 92:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 13497                           
 13498                           ;incstack = 0
 13499                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 13500  0CEA  319E  26EE  318C   	fcall	_CLOCK_getTime
 13501  0CED  0142               	movlb	2	; select bank2
 13502  0CEE  0838               	movf	_lastLedActiveTime^(0+256),w
 13503  0CEF  0140               	movlb	0	; select bank0
 13504  0CF0  0220               	subwf	?_CLOCK_getTime,w
 13505  0CF1  0141               	movlb	1	; select bank1
 13506  0CF2  00E5               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13507  0CF3  0142               	movlb	2	; select bank2
 13508  0CF4  0839               	movf	(_lastLedActiveTime+1)^(0+256),w
 13509  0CF5  0140               	movlb	0	; select bank0
 13510  0CF6  3B21               	subwfb	?_CLOCK_getTime+1,w
 13511  0CF7  0141               	movlb	1	; select bank1
 13512  0CF8  00E6               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 13513  0CF9  3000               	movlw	0
 13514  0CFA  0266               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 13515  0CFB  3032               	movlw	50
 13516  0CFC  1903               	skipnz
 13517  0CFD  0265               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 13518  0CFE  1C03               	btfss	3,0
 13519  0CFF  0008               	return
 13520                           
 13521                           ;led.c: 97:     lastLedActiveTime = CLOCK_getTime();
 13522  0D00  319E  26EE  318C   	fcall	_CLOCK_getTime
 13523  0D03  0140               	movlb	0	; select bank0
 13524  0D04  0821               	movf	?_CLOCK_getTime+1,w
 13525  0D05  0142               	movlb	2	; select bank2
 13526  0D06  00B9               	movwf	(_lastLedActiveTime+1)^(0+256)
 13527  0D07  0140               	movlb	0	; select bank0
 13528  0D08  0820               	movf	?_CLOCK_getTime,w
 13529  0D09  0142               	movlb	2	; select bank2
 13530  0D0A  00B8               	movwf	_lastLedActiveTime^(0+256)
 13531                           
 13532                           ;led.c: 99:     LATC5 = 0;
 13533  0D0B  0140               	movlb	0	; select bank0
 13534  0D0C  129A               	bcf	26,5	;volatile
 13535                           
 13536                           ;led.c: 100:     _Bool beatState = BEAT_detected();
 13537  0D0D  319F  2709  318C   	fcall	_BEAT_detected
 13538  0D10  0141               	movlb	1	; select bank1
 13539  0D11  00E5               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13540  0D12  0865               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 13541  0D13  0140               	movlb	0	; select bank0
 13542  0D14  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 13543                           
 13544                           ;led.c: 102:     if (beatState) {
 13545  0D15  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 13546  0D16  1D03               	btfss	3,2
 13547                           
 13548                           ;led.c: 103:         LATC5 = 1;
 13549  0D17  169A               	bsf	26,5	;volatile
 13550                           
 13551                           ;led.c: 106:      if(!beatState){
 13552  0D18  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 13553  0D19  1D03               	btfss	3,2
 13554  0D1A  2D2F               	goto	l8238
 13555                           
 13556                           ;led.c: 107:          LED_setColor(beatColorCreator(0,0,0,0));
 13557  0D1B  0141               	movlb	1	; select bank1
 13558  0D1C  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13559  0D1D  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13560  0D1E  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13561  0D1F  3000               	movlw	0
 13562  0D20  318A  22B1  318C   	fcall	_beatColorCreator
 13563  0D23  0141               	movlb	1	; select bank1
 13564  0D24  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13565  0D25  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13566  0D26  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13567  0D27  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13568  0D28  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13569  0D29  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13570  0D2A  0850               	movf	?_beatColorCreator^(0+128),w
 13571  0D2B  00DD               	movwf	LED_setColor@input^(0+128)
 13572  0D2C  3185  25D1         	fcall	_LED_setColor
 13573                           
 13574                           ;led.c: 108:     } else if (currentState == 1){
 13575  0D2E  0008               	return
 13576  0D2F                     l8238:	
 13577  0D2F  0141               	movlb	1	; select bank1
 13578  0D30  0329               	decf	_currentState^(0+128),w
 13579  0D31  042A               	iorwf	(_currentState+1)^(0+128),w
 13580  0D32  1D03               	btfss	3,2
 13581  0D33  2D72               	goto	l8244
 13582                           
 13583                           ;led.c: 109:         LED_setColor(beatColorCreator(0,0,0,1));
 13584  0D34  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13585  0D35  2D5A               	goto	L1
 13586  0D36                     l8258:	
 13587                           ;led.c: 115:          LED_setColor(beatColorCreator(0,1,1,0));
 13588                           
 13589                           ;led.c: 112:          LED_setColor(beatColorCreator(0,1,0,1));
 13590                           
 13591                           
 13592                           ;led.c: 118:          LED_setColor(beatColorCreator(1,0,1,1));
 13593  0D36  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13594  0D37  2D52               	goto	L13
 13595  0D38                     l8264:	
 13596                           
 13597                           ;led.c: 121:         LED_setColor(beatColorCreator(0,1,1,0));
 13598  0D38  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13599  0D39  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13600  0D3A  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13601  0D3B  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13602  0D3C  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13603  0D3D  2D5D               	goto	L2
 13604  0D3E                     l8270:	
 13605                           
 13606                           ;led.c: 124:         LED_setColor(beatColorCreator(1,1,1,0));
 13607  0D3E  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13608  0D3F  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13609  0D40  2D49               	goto	L10
 13610  0D41                     l8276:	
 13611                           
 13612                           ;led.c: 127:         LED_setColor(beatColorCreator(1,1,0,1));
 13613  0D41  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13614  0D42  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13615  0D43  2D4E               	goto	L12
 13616  0D44                     l8288:	
 13617                           ;led.c: 130:          LED_setColor(beatColorCreator(0,1,0,1));
 13618                           
 13619                           
 13620                           ;led.c: 133:          LED_setColor(beatColorCreator(0,0,1,1));
 13621  0D44  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13622  0D45  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13623  0D46  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13624  0D47  2D5B               	goto	L9
 13625  0D48                     l8294:	
 13626                           
 13627                           ;led.c: 136:          LED_setColor(beatColorCreator(1,0,1,0));
 13628  0D48  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13629  0D49                     L10:	
 13630  0D49  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13631  0D4A  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13632  0D4B  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13633  0D4C  2D56               	goto	L8
 13634  0D4D                     l8300:	
 13635                           
 13636                           ;led.c: 139:         LED_setColor(beatColorCreator(1,0,0,1));
 13637  0D4D  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13638  0D4E                     L12:	
 13639  0D4E  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13640  0D4F  2D54               	goto	L11
 13641  0D50                     l8306:	
 13642                           
 13643                           ;led.c: 142:         LED_setColor(beatColorCreator(1,1,1,1));
 13644  0D50  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13645  0D51  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13646  0D52                     L13:	
 13647  0D52  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13648  0D53  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13649  0D54                     L11:	
 13650  0D54  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13651  0D55  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13652  0D56                     L8:	
 13653  0D56  3001               	movlw	1
 13654  0D57  2D5E               	goto	L3
 13655  0D58                     l8312:	
 13656                           
 13657                           ;led.c: 145:         LED_setColor(beatColorCreator(0,1,0,1));
 13658  0D58  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13659  0D59  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13660  0D5A                     L1:	
 13661  0D5A  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13662  0D5B                     L9:	
 13663  0D5B  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13664  0D5C  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13665  0D5D                     L2:	
 13666  0D5D  3000               	movlw	0
 13667  0D5E                     L3:	
 13668  0D5E  318A  22B1  318C   	fcall	_beatColorCreator
 13669  0D61  0141               	movlb	1	; select bank1
 13670  0D62  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13671  0D63  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13672  0D64  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13673  0D65  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13674  0D66  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13675  0D67  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13676  0D68  0850               	movf	?_beatColorCreator^(0+128),w
 13677  0D69  00DD               	movwf	LED_setColor@input^(0+128)
 13678  0D6A  3185  25D1         	fcall	_LED_setColor
 13679                           
 13680                           ;led.c: 110:         currentState++;
 13681  0D6C  3001               	movlw	1
 13682  0D6D  0141               	movlb	1	; select bank1
 13683  0D6E  07A9               	addwf	_currentState^(0+128),f
 13684  0D6F  3000               	movlw	0
 13685  0D70  3DAA               	addwfc	(_currentState+1)^(0+128),f
 13686                           
 13687                           ;led.c: 111:     } else if(currentState == 2){
 13688  0D71  0008               	return
 13689  0D72                     l8244:	
 13690  0D72  3002               	movlw	2
 13691  0D73  0629               	xorwf	_currentState^(0+128),w
 13692  0D74  042A               	iorwf	(_currentState+1)^(0+128),w
 13693  0D75  1903               	btfsc	3,2
 13694  0D76  2D58               	goto	l8312
 13695  0D77  3003               	movlw	3
 13696  0D78  0629               	xorwf	_currentState^(0+128),w
 13697  0D79  042A               	iorwf	(_currentState+1)^(0+128),w
 13698  0D7A  1903               	btfsc	3,2
 13699  0D7B  2D38               	goto	l8264
 13700  0D7C  3004               	movlw	4
 13701  0D7D  0629               	xorwf	_currentState^(0+128),w
 13702  0D7E  042A               	iorwf	(_currentState+1)^(0+128),w
 13703  0D7F  1903               	btfsc	3,2
 13704  0D80  2D36               	goto	l8258
 13705  0D81  3005               	movlw	5
 13706  0D82  0629               	xorwf	_currentState^(0+128),w
 13707  0D83  042A               	iorwf	(_currentState+1)^(0+128),w
 13708  0D84  1903               	btfsc	3,2
 13709  0D85  2D38               	goto	l8264
 13710  0D86  3006               	movlw	6
 13711  0D87  0629               	xorwf	_currentState^(0+128),w
 13712  0D88  042A               	iorwf	(_currentState+1)^(0+128),w
 13713  0D89  1903               	btfsc	3,2
 13714  0D8A  2D3E               	goto	l8270
 13715  0D8B  3008               	movlw	8
 13716  0D8C  0629               	xorwf	_currentState^(0+128),w
 13717  0D8D  042A               	iorwf	(_currentState+1)^(0+128),w
 13718  0D8E  1903               	btfsc	3,2
 13719  0D8F  2D41               	goto	l8276
 13720  0D90  3009               	movlw	9
 13721  0D91  0629               	xorwf	_currentState^(0+128),w
 13722  0D92  042A               	iorwf	(_currentState+1)^(0+128),w
 13723  0D93  1903               	btfsc	3,2
 13724  0D94  2D58               	goto	l8312
 13725  0D95  300A               	movlw	10
 13726  0D96  0629               	xorwf	_currentState^(0+128),w
 13727  0D97  042A               	iorwf	(_currentState+1)^(0+128),w
 13728  0D98  1903               	btfsc	3,2
 13729  0D99  2D44               	goto	l8288
 13730  0D9A  300B               	movlw	11
 13731  0D9B  0629               	xorwf	_currentState^(0+128),w
 13732  0D9C  042A               	iorwf	(_currentState+1)^(0+128),w
 13733  0D9D  1903               	btfsc	3,2
 13734  0D9E  2D48               	goto	l8294
 13735  0D9F  300C               	movlw	12
 13736  0DA0  0629               	xorwf	_currentState^(0+128),w
 13737  0DA1  042A               	iorwf	(_currentState+1)^(0+128),w
 13738  0DA2  1903               	btfsc	3,2
 13739  0DA3  2D4D               	goto	l8300
 13740  0DA4  300D               	movlw	13
 13741  0DA5  0629               	xorwf	_currentState^(0+128),w
 13742  0DA6  042A               	iorwf	(_currentState+1)^(0+128),w
 13743  0DA7  1903               	btfsc	3,2
 13744  0DA8  2D50               	goto	l8306
 13745  0DA9  300E               	movlw	14
 13746  0DAA  0629               	xorwf	_currentState^(0+128),w
 13747  0DAB  042A               	iorwf	(_currentState+1)^(0+128),w
 13748  0DAC  1903               	btfsc	3,2
 13749  0DAD  2D58               	goto	l8312
 13750                           
 13751                           ;led.c: 148:         LED_setColor(beatColorCreator(0,1,1,1));
 13752  0DAE  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13753  0DAF  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13754  0DB0  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13755  0DB1  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13756  0DB2  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13757  0DB3  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13758  0DB4  3000               	movlw	0
 13759  0DB5  318A  22B1  318C   	fcall	_beatColorCreator
 13760  0DB8  0141               	movlb	1	; select bank1
 13761  0DB9  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13762  0DBA  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13763  0DBB  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13764  0DBC  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13765  0DBD  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13766  0DBE  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13767  0DBF  0850               	movf	?_beatColorCreator^(0+128),w
 13768  0DC0  00DD               	movwf	LED_setColor@input^(0+128)
 13769  0DC1  3185  25D1         	fcall	_LED_setColor
 13770                           
 13771                           ;led.c: 149:         currentState = 1;
 13772  0DC3  3001               	movlw	1
 13773  0DC4  0141               	movlb	1	; select bank1
 13774  0DC5  00A9               	movwf	_currentState^(0+128)
 13775  0DC6  3000               	movlw	0
 13776  0DC7  00AA               	movwf	(_currentState^(0+128)+1)
 13777  0DC8  0008               	return
 13778  0DC9                     __end_of_LED_task_BEAT_STROBE:	
 13779                           
 13780                           	psect	text24
 13781  0AB1                     __ptext24:	
 13782 ;; *************** function _beatColorCreator *****************
 13783 ;; Defined at:
 13784 ;;		line 169 in file "led.c"
 13785 ;; Parameters:    Size  Location     Type
 13786 ;;  inRed           1    wreg     _Bool 
 13787 ;;  inGreen         1    9[BANK1 ] _Bool 
 13788 ;;  inBlue          1   10[BANK1 ] _Bool 
 13789 ;;  inWhite         1   11[BANK1 ] _Bool 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;  inRed           1   13[BANK1 ] _Bool 
 13792 ;;  tempColor       4   18[BANK1 ] struct .
 13793 ;; Return value:  Size  Location     Type
 13794 ;;                  4    9[BANK1 ] struct .
 13795 ;; Registers used:
 13796 ;;		wreg, status,2, status,0, pclath, cstack
 13797 ;; Tracked objects:
 13798 ;;		On entry : 0/0
 13799 ;;		On exit  : 0/0
 13800 ;;		Unchanged: 0/0
 13801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13802 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13803 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13805 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13806 ;;Total ram usage:       14 bytes
 13807 ;; Hardware stack levels used:    1
 13808 ;; Hardware stack levels required when called:    7
 13809 ;; This function calls:
 13810 ;;		___fltol
 13811 ;;		_beatBrightnessCalculation
 13812 ;; This function is called by:
 13813 ;;		_LED_task_BEAT_STROBE
 13814 ;; This function uses a non-reentrant model
 13815 ;;
 13816                           
 13817                           
 13818                           ;psect for function _beatColorCreator
 13819  0AB1                     _beatColorCreator:	
 13820                           
 13821                           ;incstack = 0
 13822                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 13823                           ;beatColorCreator@inRed stored from wreg
 13824  0AB1  0141               	movlb	1	; select bank1
 13825  0AB2  00D4               	movwf	beatColorCreator@inRed^(0+128)
 13826                           
 13827                           ;led.c: 170:     color_t tempColor;;led.c: 172:     if(inRed)
 13828  0AB3  0854               	movf	beatColorCreator@inRed^(0+128),w
 13829  0AB4  1903               	btfsc	3,2
 13830  0AB5  2ADB               	goto	l7724
 13831                           
 13832                           ;led.c: 173:         tempColor.red = beatBrightnessCalculation();
 13833  0AB6  3197  2783  318A   	fcall	_beatBrightnessCalculation
 13834  0AB9  0141               	movlb	1	; select bank1
 13835  0ABA  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13836  0ABB  00D8               	movwf	(_beatColorCreator$3567+3)^(0+128)
 13837  0ABC  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13838  0ABD  00D7               	movwf	(_beatColorCreator$3567+2)^(0+128)
 13839  0ABE  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13840  0ABF  00D6               	movwf	(_beatColorCreator$3567+1)^(0+128)
 13841  0AC0  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13842  0AC1  00D5               	movwf	_beatColorCreator$3567^(0+128)
 13843                           
 13844                           ;led.c: 173:         tempColor.red = beatBrightnessCalculation();
 13845  0AC2  0858               	movf	(_beatColorCreator$3567+3)^(0+128),w
 13846  0AC3  0140               	movlb	0	; select bank0
 13847  0AC4  00E5               	movwf	___fltol@f1+3
 13848  0AC5  0141               	movlb	1	; select bank1
 13849  0AC6  0857               	movf	(_beatColorCreator$3567+2)^(0+128),w
 13850  0AC7  0140               	movlb	0	; select bank0
 13851  0AC8  00E4               	movwf	___fltol@f1+2
 13852  0AC9  0141               	movlb	1	; select bank1
 13853  0ACA  0856               	movf	(_beatColorCreator$3567+1)^(0+128),w
 13854  0ACB  0140               	movlb	0	; select bank0
 13855  0ACC  00E3               	movwf	___fltol@f1+1
 13856  0ACD  0141               	movlb	1	; select bank1
 13857  0ACE  0855               	movf	_beatColorCreator$3567^(0+128),w
 13858  0ACF  0140               	movlb	0	; select bank0
 13859  0AD0  00E2               	movwf	___fltol@f1
 13860  0AD1  3196  2640  318A   	fcall	___fltol
 13861  0AD4  0140               	movlb	0	; select bank0
 13862  0AD5  0862               	movf	?___fltol,w
 13863  0AD6  00EE               	movwf	??_beatColorCreator
 13864  0AD7  086E               	movf	??_beatColorCreator,w
 13865  0AD8  0141               	movlb	1	; select bank1
 13866  0AD9  00DA               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 13867  0ADA  2ADC               	goto	l7726
 13868  0ADB                     l7724:	
 13869                           
 13870                           ;led.c: 175:         tempColor.red = 0;
 13871  0ADB  01DA               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 13872  0ADC                     l7726:	
 13873                           
 13874                           ;led.c: 177:     if(inBlue)
 13875  0ADC  0851               	movf	beatColorCreator@inBlue^(0+128),w
 13876  0ADD  1903               	btfsc	3,2
 13877  0ADE  2B04               	goto	l7730
 13878                           
 13879                           ;led.c: 178:         tempColor.blue = beatBrightnessCalculation();
 13880  0ADF  3197  2783  318A   	fcall	_beatBrightnessCalculation
 13881  0AE2  0141               	movlb	1	; select bank1
 13882  0AE3  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13883  0AE4  00D8               	movwf	(_beatColorCreator$3567+3)^(0+128)
 13884  0AE5  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13885  0AE6  00D7               	movwf	(_beatColorCreator$3567+2)^(0+128)
 13886  0AE7  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13887  0AE8  00D6               	movwf	(_beatColorCreator$3567+1)^(0+128)
 13888  0AE9  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13889  0AEA  00D5               	movwf	_beatColorCreator$3567^(0+128)
 13890                           
 13891                           ;led.c: 178:         tempColor.blue = beatBrightnessCalculation();
 13892  0AEB  0858               	movf	(_beatColorCreator$3567+3)^(0+128),w
 13893  0AEC  0140               	movlb	0	; select bank0
 13894  0AED  00E5               	movwf	___fltol@f1+3
 13895  0AEE  0141               	movlb	1	; select bank1
 13896  0AEF  0857               	movf	(_beatColorCreator$3567+2)^(0+128),w
 13897  0AF0  0140               	movlb	0	; select bank0
 13898  0AF1  00E4               	movwf	___fltol@f1+2
 13899  0AF2  0141               	movlb	1	; select bank1
 13900  0AF3  0856               	movf	(_beatColorCreator$3567+1)^(0+128),w
 13901  0AF4  0140               	movlb	0	; select bank0
 13902  0AF5  00E3               	movwf	___fltol@f1+1
 13903  0AF6  0141               	movlb	1	; select bank1
 13904  0AF7  0855               	movf	_beatColorCreator$3567^(0+128),w
 13905  0AF8  0140               	movlb	0	; select bank0
 13906  0AF9  00E2               	movwf	___fltol@f1
 13907  0AFA  3196  2640  318A   	fcall	___fltol
 13908  0AFD  0140               	movlb	0	; select bank0
 13909  0AFE  0862               	movf	?___fltol,w
 13910  0AFF  00EE               	movwf	??_beatColorCreator
 13911  0B00  086E               	movf	??_beatColorCreator,w
 13912  0B01  0141               	movlb	1	; select bank1
 13913  0B02  00DC               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 13914  0B03  2B05               	goto	l7732
 13915  0B04                     l7730:	
 13916                           
 13917                           ;led.c: 180:         tempColor.blue = 0;
 13918  0B04  01DC               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 13919  0B05                     l7732:	
 13920                           
 13921                           ;led.c: 182:     if(inGreen)
 13922  0B05  0850               	movf	beatColorCreator@inGreen^(0+128),w
 13923  0B06  1903               	btfsc	3,2
 13924  0B07  2B2D               	goto	l7736
 13925                           
 13926                           ;led.c: 183:         tempColor.green = beatBrightnessCalculation();
 13927  0B08  3197  2783  318A   	fcall	_beatBrightnessCalculation
 13928  0B0B  0141               	movlb	1	; select bank1
 13929  0B0C  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13930  0B0D  00D8               	movwf	(_beatColorCreator$3567+3)^(0+128)
 13931  0B0E  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13932  0B0F  00D7               	movwf	(_beatColorCreator$3567+2)^(0+128)
 13933  0B10  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13934  0B11  00D6               	movwf	(_beatColorCreator$3567+1)^(0+128)
 13935  0B12  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13936  0B13  00D5               	movwf	_beatColorCreator$3567^(0+128)
 13937                           
 13938                           ;led.c: 183:         tempColor.green = beatBrightnessCalculation();
 13939  0B14  0858               	movf	(_beatColorCreator$3567+3)^(0+128),w
 13940  0B15  0140               	movlb	0	; select bank0
 13941  0B16  00E5               	movwf	___fltol@f1+3
 13942  0B17  0141               	movlb	1	; select bank1
 13943  0B18  0857               	movf	(_beatColorCreator$3567+2)^(0+128),w
 13944  0B19  0140               	movlb	0	; select bank0
 13945  0B1A  00E4               	movwf	___fltol@f1+2
 13946  0B1B  0141               	movlb	1	; select bank1
 13947  0B1C  0856               	movf	(_beatColorCreator$3567+1)^(0+128),w
 13948  0B1D  0140               	movlb	0	; select bank0
 13949  0B1E  00E3               	movwf	___fltol@f1+1
 13950  0B1F  0141               	movlb	1	; select bank1
 13951  0B20  0855               	movf	_beatColorCreator$3567^(0+128),w
 13952  0B21  0140               	movlb	0	; select bank0
 13953  0B22  00E2               	movwf	___fltol@f1
 13954  0B23  3196  2640  318A   	fcall	___fltol
 13955  0B26  0140               	movlb	0	; select bank0
 13956  0B27  0862               	movf	?___fltol,w
 13957  0B28  00EE               	movwf	??_beatColorCreator
 13958  0B29  086E               	movf	??_beatColorCreator,w
 13959  0B2A  0141               	movlb	1	; select bank1
 13960  0B2B  00DB               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 13961  0B2C  2B2E               	goto	l7738
 13962  0B2D                     l7736:	
 13963                           
 13964                           ;led.c: 185:         tempColor.green = 0;
 13965  0B2D  01DB               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 13966  0B2E                     l7738:	
 13967                           
 13968                           ;led.c: 187:     if(inWhite)
 13969  0B2E  0852               	movf	beatColorCreator@inWhite^(0+128),w
 13970  0B2F  1903               	btfsc	3,2
 13971  0B30  2B56               	goto	l7742
 13972                           
 13973                           ;led.c: 188:         tempColor.white = beatBrightnessCalculation();
 13974  0B31  3197  2783  318A   	fcall	_beatBrightnessCalculation
 13975  0B34  0141               	movlb	1	; select bank1
 13976  0B35  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13977  0B36  00D8               	movwf	(_beatColorCreator$3567+3)^(0+128)
 13978  0B37  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13979  0B38  00D7               	movwf	(_beatColorCreator$3567+2)^(0+128)
 13980  0B39  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13981  0B3A  00D6               	movwf	(_beatColorCreator$3567+1)^(0+128)
 13982  0B3B  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13983  0B3C  00D5               	movwf	_beatColorCreator$3567^(0+128)
 13984                           
 13985                           ;led.c: 188:         tempColor.white = beatBrightnessCalculation();
 13986  0B3D  0858               	movf	(_beatColorCreator$3567+3)^(0+128),w
 13987  0B3E  0140               	movlb	0	; select bank0
 13988  0B3F  00E5               	movwf	___fltol@f1+3
 13989  0B40  0141               	movlb	1	; select bank1
 13990  0B41  0857               	movf	(_beatColorCreator$3567+2)^(0+128),w
 13991  0B42  0140               	movlb	0	; select bank0
 13992  0B43  00E4               	movwf	___fltol@f1+2
 13993  0B44  0141               	movlb	1	; select bank1
 13994  0B45  0856               	movf	(_beatColorCreator$3567+1)^(0+128),w
 13995  0B46  0140               	movlb	0	; select bank0
 13996  0B47  00E3               	movwf	___fltol@f1+1
 13997  0B48  0141               	movlb	1	; select bank1
 13998  0B49  0855               	movf	_beatColorCreator$3567^(0+128),w
 13999  0B4A  0140               	movlb	0	; select bank0
 14000  0B4B  00E2               	movwf	___fltol@f1
 14001  0B4C  3196  2640  318A   	fcall	___fltol
 14002  0B4F  0140               	movlb	0	; select bank0
 14003  0B50  0862               	movf	?___fltol,w
 14004  0B51  00EE               	movwf	??_beatColorCreator
 14005  0B52  086E               	movf	??_beatColorCreator,w
 14006  0B53  0141               	movlb	1	; select bank1
 14007  0B54  00D9               	movwf	beatColorCreator@tempColor^(0+128)
 14008  0B55  2B57               	goto	l7744
 14009  0B56                     l7742:	
 14010                           
 14011                           ;led.c: 190:         tempColor.white = 0;
 14012  0B56  01D9               	clrf	beatColorCreator@tempColor^(0+128)
 14013  0B57                     l7744:	
 14014                           
 14015                           ;led.c: 192:     return tempColor;
 14016  0B57  085C               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 14017  0B58  00D3               	movwf	(?_beatColorCreator+3)^(0+128)
 14018  0B59  085B               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 14019  0B5A  00D2               	movwf	(?_beatColorCreator+2)^(0+128)
 14020  0B5B  085A               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 14021  0B5C  00D1               	movwf	(?_beatColorCreator+1)^(0+128)
 14022  0B5D  0859               	movf	beatColorCreator@tempColor^(0+128),w
 14023  0B5E  00D0               	movwf	?_beatColorCreator^(0+128)
 14024  0B5F  0008               	return
 14025  0B60                     __end_of_beatColorCreator:	
 14026                           
 14027                           	psect	text25
 14028  1783                     __ptext25:	
 14029 ;; *************** function _beatBrightnessCalculation *****************
 14030 ;; Defined at:
 14031 ;;		line 154 in file "led.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;		None
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  temp            1   77[BANK0 ] unsigned char 
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  4    0[BANK1 ] float 
 14038 ;; Registers used:
 14039 ;;		wreg, status,2, status,0, pclath, cstack
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14045 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14047 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14048 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;Total ram usage:       10 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    6
 14052 ;; This function calls:
 14053 ;;		___fldiv
 14054 ;;		___flmul
 14055 ;;		___fltol
 14056 ;;		___xxtofl
 14057 ;; This function is called by:
 14058 ;;		_beatColorCreator
 14059 ;; This function uses a non-reentrant model
 14060 ;;
 14061                           
 14062                           
 14063                           ;psect for function _beatBrightnessCalculation
 14064  1783                     _beatBrightnessCalculation:	
 14065                           
 14066                           ;led.c: 155:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 14067                           
 14068                           ;incstack = 0
 14069                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 14070  1783  0141               	movlb	1	; select bank1
 14071  1784  086F               	movf	_beatBrightness^(0+128),w
 14072  1785  00CB               	movwf	??_beatBrightnessCalculation^(0+128)
 14073  1786  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14074  1787  01CD               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14075  1788  01CE               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14076  1789  084E               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14077  178A  0140               	movlb	0	; select bank0
 14078  178B  00A3               	movwf	___xxtofl@val+3
 14079  178C  0141               	movlb	1	; select bank1
 14080  178D  084D               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14081  178E  0140               	movlb	0	; select bank0
 14082  178F  00A2               	movwf	___xxtofl@val+2
 14083  1790  0141               	movlb	1	; select bank1
 14084  1791  084C               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14085  1792  0140               	movlb	0	; select bank0
 14086  1793  00A1               	movwf	___xxtofl@val+1
 14087  1794  0141               	movlb	1	; select bank1
 14088  1795  084B               	movf	??_beatBrightnessCalculation^(0+128),w
 14089  1796  0140               	movlb	0	; select bank0
 14090  1797  00A0               	movwf	___xxtofl@val
 14091  1798  3001               	movlw	1
 14092  1799  3188  20DA  3197   	fcall	___xxtofl
 14093  179C  0140               	movlb	0	; select bank0
 14094  179D  0823               	movf	?___xxtofl+3,w
 14095  179E  00B5               	movwf	___fldiv@b+3
 14096  179F  0822               	movf	?___xxtofl+2,w
 14097  17A0  00B4               	movwf	___fldiv@b+2
 14098  17A1  0821               	movf	?___xxtofl+1,w
 14099  17A2  00B3               	movwf	___fldiv@b+1
 14100  17A3  0820               	movf	?___xxtofl,w
 14101  17A4  00B2               	movwf	___fldiv@b
 14102  17A5  3041               	movlw	65
 14103  17A6  00B1               	movwf	___fldiv@a+3
 14104  17A7  3010               	movlw	16
 14105  17A8  00B0               	movwf	___fldiv@a+2
 14106  17A9  3000               	movlw	0
 14107  17AA  00AF               	movwf	___fldiv@a+1
 14108  17AB  3000               	movlw	0
 14109  17AC  00AE               	movwf	___fldiv@a
 14110  17AD  3184  2457  3197   	fcall	___fldiv
 14111  17B0  0140               	movlb	0	; select bank0
 14112  17B1  0831               	movf	?___fldiv+3,w
 14113  17B2  00CF               	movwf	___flmul@a+3
 14114  17B3  0830               	movf	?___fldiv+2,w
 14115  17B4  00CE               	movwf	___flmul@a+2
 14116  17B5  082F               	movf	?___fldiv+1,w
 14117  17B6  00CD               	movwf	___flmul@a+1
 14118  17B7  082E               	movf	?___fldiv,w
 14119  17B8  00CC               	movwf	___flmul@a
 14120  17B9  3043               	movlw	67
 14121  17BA  00CB               	movwf	___flmul@b+3
 14122  17BB  307F               	movlw	127
 14123  17BC  00CA               	movwf	___flmul@b+2
 14124  17BD  3000               	movlw	0
 14125  17BE  00C9               	movwf	___flmul@b+1
 14126  17BF  3000               	movlw	0
 14127  17C0  00C8               	movwf	___flmul@b
 14128  17C1  3180  2090  3197   	fcall	___flmul
 14129  17C4  0140               	movlb	0	; select bank0
 14130  17C5  084B               	movf	?___flmul+3,w
 14131  17C6  00E5               	movwf	___fltol@f1+3
 14132  17C7  084A               	movf	?___flmul+2,w
 14133  17C8  00E4               	movwf	___fltol@f1+2
 14134  17C9  0849               	movf	?___flmul+1,w
 14135  17CA  00E3               	movwf	___fltol@f1+1
 14136  17CB  0848               	movf	?___flmul,w
 14137  17CC  00E2               	movwf	___fltol@f1
 14138  17CD  3196  2640  3197   	fcall	___fltol
 14139  17D0  0140               	movlb	0	; select bank0
 14140  17D1  0862               	movf	?___fltol,w
 14141  17D2  0141               	movlb	1	; select bank1
 14142  17D3  00CF               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 14143  17D4  084F               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 14144  17D5  0140               	movlb	0	; select bank0
 14145  17D6  00ED               	movwf	beatBrightnessCalculation@temp
 14146                           
 14147                           ;led.c: 156:     return temp;
 14148  17D7  086D               	movf	beatBrightnessCalculation@temp,w
 14149  17D8  0141               	movlb	1	; select bank1
 14150  17D9  00CB               	movwf	??_beatBrightnessCalculation^(0+128)
 14151  17DA  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14152  17DB  01CD               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14153  17DC  01CE               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14154  17DD  084E               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14155  17DE  0140               	movlb	0	; select bank0
 14156  17DF  00A3               	movwf	___xxtofl@val+3
 14157  17E0  0141               	movlb	1	; select bank1
 14158  17E1  084D               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14159  17E2  0140               	movlb	0	; select bank0
 14160  17E3  00A2               	movwf	___xxtofl@val+2
 14161  17E4  0141               	movlb	1	; select bank1
 14162  17E5  084C               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14163  17E6  0140               	movlb	0	; select bank0
 14164  17E7  00A1               	movwf	___xxtofl@val+1
 14165  17E8  0141               	movlb	1	; select bank1
 14166  17E9  084B               	movf	??_beatBrightnessCalculation^(0+128),w
 14167  17EA  0140               	movlb	0	; select bank0
 14168  17EB  00A0               	movwf	___xxtofl@val
 14169  17EC  3000               	movlw	0
 14170  17ED  3188  20DA         	fcall	___xxtofl
 14171  17EF  0140               	movlb	0	; select bank0
 14172  17F0  0823               	movf	?___xxtofl+3,w
 14173  17F1  0141               	movlb	1	; select bank1
 14174  17F2  00CA               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 14175  17F3  0140               	movlb	0	; select bank0
 14176  17F4  0822               	movf	?___xxtofl+2,w
 14177  17F5  0141               	movlb	1	; select bank1
 14178  17F6  00C9               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 14179  17F7  0140               	movlb	0	; select bank0
 14180  17F8  0821               	movf	?___xxtofl+1,w
 14181  17F9  0141               	movlb	1	; select bank1
 14182  17FA  00C8               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 14183  17FB  0140               	movlb	0	; select bank0
 14184  17FC  0820               	movf	?___xxtofl,w
 14185  17FD  0141               	movlb	1	; select bank1
 14186  17FE  00C7               	movwf	?_beatBrightnessCalculation^(0+128)
 14187  17FF  0008               	return
 14188  1800                     __end_of_beatBrightnessCalculation:	
 14189                           
 14190                           	psect	text26
 14191  05D1                     __ptext26:	
 14192 ;; *************** function _LED_setColor *****************
 14193 ;; Defined at:
 14194 ;;		line 24 in file "led.c"
 14195 ;; Parameters:    Size  Location     Type
 14196 ;;  input           4   22[BANK1 ] struct .
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;		None
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  1    wreg      void 
 14201 ;; Registers used:
 14202 ;;		wreg, status,2, status,0, pclath, cstack
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14208 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14210 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14211 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14212 ;;Total ram usage:        8 bytes
 14213 ;; Hardware stack levels used:    1
 14214 ;; Hardware stack levels required when called:    6
 14215 ;; This function calls:
 14216 ;;		_PWM1_LoadDutyValue
 14217 ;;		_PWM2_LoadDutyValue
 14218 ;;		_PWM3_LoadDutyValue
 14219 ;;		_PWM4_LoadDutyValue
 14220 ;;		___fldiv
 14221 ;;		___flmul
 14222 ;;		___fltol
 14223 ;;		___xxtofl
 14224 ;; This function is called by:
 14225 ;;		_LED_task_DMX
 14226 ;;		_LED_task
 14227 ;;		_LED_task_BEAT_STROBE
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           
 14232                           ;psect for function _LED_setColor
 14233  05D1                     _LED_setColor:	
 14234                           
 14235                           ;led.c: 25:     if(!startup){
 14236                           
 14237                           ;incstack = 0
 14238                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 14239  05D1  0141               	movlb	1	; select bank1
 14240  05D2  086E               	movf	_startup^(0+128),w
 14241  05D3  1D03               	btfss	3,2
 14242  05D4  0008               	return
 14243                           
 14244                           ;led.c: 26:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 14245  05D5  085E               	movf	(LED_setColor@input^(0+128)+1),w
 14246  05D6  00E1               	movwf	??_LED_setColor^(0+128)
 14247  05D7  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14248  05D8  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14249  05D9  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14250  05DA  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14251  05DB  0140               	movlb	0	; select bank0
 14252  05DC  00A3               	movwf	___xxtofl@val+3
 14253  05DD  0141               	movlb	1	; select bank1
 14254  05DE  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14255  05DF  0140               	movlb	0	; select bank0
 14256  05E0  00A2               	movwf	___xxtofl@val+2
 14257  05E1  0141               	movlb	1	; select bank1
 14258  05E2  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14259  05E3  0140               	movlb	0	; select bank0
 14260  05E4  00A1               	movwf	___xxtofl@val+1
 14261  05E5  0141               	movlb	1	; select bank1
 14262  05E6  0861               	movf	??_LED_setColor^(0+128),w
 14263  05E7  0140               	movlb	0	; select bank0
 14264  05E8  00A0               	movwf	___xxtofl@val
 14265  05E9  3001               	movlw	1
 14266  05EA  3188  20DA  3185   	fcall	___xxtofl
 14267  05ED  0140               	movlb	0	; select bank0
 14268  05EE  0823               	movf	?___xxtofl+3,w
 14269  05EF  00B5               	movwf	___fldiv@b+3
 14270  05F0  0822               	movf	?___xxtofl+2,w
 14271  05F1  00B4               	movwf	___fldiv@b+2
 14272  05F2  0821               	movf	?___xxtofl+1,w
 14273  05F3  00B3               	movwf	___fldiv@b+1
 14274  05F4  0820               	movf	?___xxtofl,w
 14275  05F5  00B2               	movwf	___fldiv@b
 14276  05F6  3043               	movlw	67
 14277  05F7  00B1               	movwf	___fldiv@a+3
 14278  05F8  307F               	movlw	127
 14279  05F9  00B0               	movwf	___fldiv@a+2
 14280  05FA  3000               	movlw	0
 14281  05FB  00AF               	movwf	___fldiv@a+1
 14282  05FC  3000               	movlw	0
 14283  05FD  00AE               	movwf	___fldiv@a
 14284  05FE  3184  2457  3185   	fcall	___fldiv
 14285  0601  0140               	movlb	0	; select bank0
 14286  0602  0831               	movf	?___fldiv+3,w
 14287  0603  00CF               	movwf	___flmul@a+3
 14288  0604  0830               	movf	?___fldiv+2,w
 14289  0605  00CE               	movwf	___flmul@a+2
 14290  0606  082F               	movf	?___fldiv+1,w
 14291  0607  00CD               	movwf	___flmul@a+1
 14292  0608  082E               	movf	?___fldiv,w
 14293  0609  00CC               	movwf	___flmul@a
 14294  060A  3042               	movlw	66
 14295  060B  00CB               	movwf	___flmul@b+3
 14296  060C  30FE               	movlw	254
 14297  060D  00CA               	movwf	___flmul@b+2
 14298  060E  3000               	movlw	0
 14299  060F  00C9               	movwf	___flmul@b+1
 14300  0610  3000               	movlw	0
 14301  0611  00C8               	movwf	___flmul@b
 14302  0612  3180  2090  3185   	fcall	___flmul
 14303  0615  0140               	movlb	0	; select bank0
 14304  0616  084B               	movf	?___flmul+3,w
 14305  0617  00E5               	movwf	___fltol@f1+3
 14306  0618  084A               	movf	?___flmul+2,w
 14307  0619  00E4               	movwf	___fltol@f1+2
 14308  061A  0849               	movf	?___flmul+1,w
 14309  061B  00E3               	movwf	___fltol@f1+1
 14310  061C  0848               	movf	?___flmul,w
 14311  061D  00E2               	movwf	___fltol@f1
 14312  061E  3196  2640  3185   	fcall	___fltol
 14313  0621  0140               	movlb	0	; select bank0
 14314  0622  0863               	movf	?___fltol+1,w
 14315  0623  0141               	movlb	1	; select bank1
 14316  0624  00C8               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 14317  0625  0140               	movlb	0	; select bank0
 14318  0626  0862               	movf	?___fltol,w
 14319  0627  0141               	movlb	1	; select bank1
 14320  0628  00C7               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 14321  0629  3191  2120  3185   	fcall	_PWM1_LoadDutyValue
 14322                           
 14323                           ;led.c: 27:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 14324  062C  0141               	movlb	1	; select bank1
 14325  062D  085F               	movf	(LED_setColor@input^(0+128)+2),w
 14326  062E  00E1               	movwf	??_LED_setColor^(0+128)
 14327  062F  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14328  0630  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14329  0631  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14330  0632  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14331  0633  0140               	movlb	0	; select bank0
 14332  0634  00A3               	movwf	___xxtofl@val+3
 14333  0635  0141               	movlb	1	; select bank1
 14334  0636  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14335  0637  0140               	movlb	0	; select bank0
 14336  0638  00A2               	movwf	___xxtofl@val+2
 14337  0639  0141               	movlb	1	; select bank1
 14338  063A  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14339  063B  0140               	movlb	0	; select bank0
 14340  063C  00A1               	movwf	___xxtofl@val+1
 14341  063D  0141               	movlb	1	; select bank1
 14342  063E  0861               	movf	??_LED_setColor^(0+128),w
 14343  063F  0140               	movlb	0	; select bank0
 14344  0640  00A0               	movwf	___xxtofl@val
 14345  0641  3001               	movlw	1
 14346  0642  3188  20DA  3185   	fcall	___xxtofl
 14347  0645  0140               	movlb	0	; select bank0
 14348  0646  0823               	movf	?___xxtofl+3,w
 14349  0647  00B5               	movwf	___fldiv@b+3
 14350  0648  0822               	movf	?___xxtofl+2,w
 14351  0649  00B4               	movwf	___fldiv@b+2
 14352  064A  0821               	movf	?___xxtofl+1,w
 14353  064B  00B3               	movwf	___fldiv@b+1
 14354  064C  0820               	movf	?___xxtofl,w
 14355  064D  00B2               	movwf	___fldiv@b
 14356  064E  3043               	movlw	67
 14357  064F  00B1               	movwf	___fldiv@a+3
 14358  0650  307F               	movlw	127
 14359  0651  00B0               	movwf	___fldiv@a+2
 14360  0652  3000               	movlw	0
 14361  0653  00AF               	movwf	___fldiv@a+1
 14362  0654  3000               	movlw	0
 14363  0655  00AE               	movwf	___fldiv@a
 14364  0656  3184  2457  3185   	fcall	___fldiv
 14365  0659  0140               	movlb	0	; select bank0
 14366  065A  0831               	movf	?___fldiv+3,w
 14367  065B  00CF               	movwf	___flmul@a+3
 14368  065C  0830               	movf	?___fldiv+2,w
 14369  065D  00CE               	movwf	___flmul@a+2
 14370  065E  082F               	movf	?___fldiv+1,w
 14371  065F  00CD               	movwf	___flmul@a+1
 14372  0660  082E               	movf	?___fldiv,w
 14373  0661  00CC               	movwf	___flmul@a
 14374  0662  3042               	movlw	66
 14375  0663  00CB               	movwf	___flmul@b+3
 14376  0664  30FE               	movlw	254
 14377  0665  00CA               	movwf	___flmul@b+2
 14378  0666  3000               	movlw	0
 14379  0667  00C9               	movwf	___flmul@b+1
 14380  0668  3000               	movlw	0
 14381  0669  00C8               	movwf	___flmul@b
 14382  066A  3180  2090  3185   	fcall	___flmul
 14383  066D  0140               	movlb	0	; select bank0
 14384  066E  084B               	movf	?___flmul+3,w
 14385  066F  00E5               	movwf	___fltol@f1+3
 14386  0670  084A               	movf	?___flmul+2,w
 14387  0671  00E4               	movwf	___fltol@f1+2
 14388  0672  0849               	movf	?___flmul+1,w
 14389  0673  00E3               	movwf	___fltol@f1+1
 14390  0674  0848               	movf	?___flmul,w
 14391  0675  00E2               	movwf	___fltol@f1
 14392  0676  3196  2640  3185   	fcall	___fltol
 14393  0679  0140               	movlb	0	; select bank0
 14394  067A  0863               	movf	?___fltol+1,w
 14395  067B  0141               	movlb	1	; select bank1
 14396  067C  00C8               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 14397  067D  0140               	movlb	0	; select bank0
 14398  067E  0862               	movf	?___fltol,w
 14399  067F  0141               	movlb	1	; select bank1
 14400  0680  00C7               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 14401  0681  3191  213E  3185   	fcall	_PWM2_LoadDutyValue
 14402                           
 14403                           ;led.c: 28:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 14404  0684  0141               	movlb	1	; select bank1
 14405  0685  0860               	movf	(LED_setColor@input^(0+128)+3),w
 14406  0686  00E1               	movwf	??_LED_setColor^(0+128)
 14407  0687  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14408  0688  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14409  0689  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14410  068A  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14411  068B  0140               	movlb	0	; select bank0
 14412  068C  00A3               	movwf	___xxtofl@val+3
 14413  068D  0141               	movlb	1	; select bank1
 14414  068E  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14415  068F  0140               	movlb	0	; select bank0
 14416  0690  00A2               	movwf	___xxtofl@val+2
 14417  0691  0141               	movlb	1	; select bank1
 14418  0692  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14419  0693  0140               	movlb	0	; select bank0
 14420  0694  00A1               	movwf	___xxtofl@val+1
 14421  0695  0141               	movlb	1	; select bank1
 14422  0696  0861               	movf	??_LED_setColor^(0+128),w
 14423  0697  0140               	movlb	0	; select bank0
 14424  0698  00A0               	movwf	___xxtofl@val
 14425  0699  3001               	movlw	1
 14426  069A  3188  20DA  3185   	fcall	___xxtofl
 14427  069D  0140               	movlb	0	; select bank0
 14428  069E  0823               	movf	?___xxtofl+3,w
 14429  069F  00B5               	movwf	___fldiv@b+3
 14430  06A0  0822               	movf	?___xxtofl+2,w
 14431  06A1  00B4               	movwf	___fldiv@b+2
 14432  06A2  0821               	movf	?___xxtofl+1,w
 14433  06A3  00B3               	movwf	___fldiv@b+1
 14434  06A4  0820               	movf	?___xxtofl,w
 14435  06A5  00B2               	movwf	___fldiv@b
 14436  06A6  3043               	movlw	67
 14437  06A7  00B1               	movwf	___fldiv@a+3
 14438  06A8  307F               	movlw	127
 14439  06A9  00B0               	movwf	___fldiv@a+2
 14440  06AA  3000               	movlw	0
 14441  06AB  00AF               	movwf	___fldiv@a+1
 14442  06AC  3000               	movlw	0
 14443  06AD  00AE               	movwf	___fldiv@a
 14444  06AE  3184  2457  3185   	fcall	___fldiv
 14445  06B1  0140               	movlb	0	; select bank0
 14446  06B2  0831               	movf	?___fldiv+3,w
 14447  06B3  00CF               	movwf	___flmul@a+3
 14448  06B4  0830               	movf	?___fldiv+2,w
 14449  06B5  00CE               	movwf	___flmul@a+2
 14450  06B6  082F               	movf	?___fldiv+1,w
 14451  06B7  00CD               	movwf	___flmul@a+1
 14452  06B8  082E               	movf	?___fldiv,w
 14453  06B9  00CC               	movwf	___flmul@a
 14454  06BA  3042               	movlw	66
 14455  06BB  00CB               	movwf	___flmul@b+3
 14456  06BC  30FE               	movlw	254
 14457  06BD  00CA               	movwf	___flmul@b+2
 14458  06BE  3000               	movlw	0
 14459  06BF  00C9               	movwf	___flmul@b+1
 14460  06C0  3000               	movlw	0
 14461  06C1  00C8               	movwf	___flmul@b
 14462  06C2  3180  2090  3185   	fcall	___flmul
 14463  06C5  0140               	movlb	0	; select bank0
 14464  06C6  084B               	movf	?___flmul+3,w
 14465  06C7  00E5               	movwf	___fltol@f1+3
 14466  06C8  084A               	movf	?___flmul+2,w
 14467  06C9  00E4               	movwf	___fltol@f1+2
 14468  06CA  0849               	movf	?___flmul+1,w
 14469  06CB  00E3               	movwf	___fltol@f1+1
 14470  06CC  0848               	movf	?___flmul,w
 14471  06CD  00E2               	movwf	___fltol@f1
 14472  06CE  3196  2640  3185   	fcall	___fltol
 14473  06D1  0140               	movlb	0	; select bank0
 14474  06D2  0863               	movf	?___fltol+1,w
 14475  06D3  0141               	movlb	1	; select bank1
 14476  06D4  00C8               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 14477  06D5  0140               	movlb	0	; select bank0
 14478  06D6  0862               	movf	?___fltol,w
 14479  06D7  0141               	movlb	1	; select bank1
 14480  06D8  00C7               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 14481  06D9  3191  215C  3185   	fcall	_PWM3_LoadDutyValue
 14482                           
 14483                           ;led.c: 29:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 14484  06DC  0141               	movlb	1	; select bank1
 14485  06DD  085D               	movf	LED_setColor@input^(0+128),w
 14486  06DE  00E1               	movwf	??_LED_setColor^(0+128)
 14487  06DF  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14488  06E0  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14489  06E1  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14490  06E2  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14491  06E3  0140               	movlb	0	; select bank0
 14492  06E4  00A3               	movwf	___xxtofl@val+3
 14493  06E5  0141               	movlb	1	; select bank1
 14494  06E6  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14495  06E7  0140               	movlb	0	; select bank0
 14496  06E8  00A2               	movwf	___xxtofl@val+2
 14497  06E9  0141               	movlb	1	; select bank1
 14498  06EA  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14499  06EB  0140               	movlb	0	; select bank0
 14500  06EC  00A1               	movwf	___xxtofl@val+1
 14501  06ED  0141               	movlb	1	; select bank1
 14502  06EE  0861               	movf	??_LED_setColor^(0+128),w
 14503  06EF  0140               	movlb	0	; select bank0
 14504  06F0  00A0               	movwf	___xxtofl@val
 14505  06F1  3001               	movlw	1
 14506  06F2  3188  20DA  3185   	fcall	___xxtofl
 14507  06F5  0140               	movlb	0	; select bank0
 14508  06F6  0823               	movf	?___xxtofl+3,w
 14509  06F7  00B5               	movwf	___fldiv@b+3
 14510  06F8  0822               	movf	?___xxtofl+2,w
 14511  06F9  00B4               	movwf	___fldiv@b+2
 14512  06FA  0821               	movf	?___xxtofl+1,w
 14513  06FB  00B3               	movwf	___fldiv@b+1
 14514  06FC  0820               	movf	?___xxtofl,w
 14515  06FD  00B2               	movwf	___fldiv@b
 14516  06FE  3043               	movlw	67
 14517  06FF  00B1               	movwf	___fldiv@a+3
 14518  0700  307F               	movlw	127
 14519  0701  00B0               	movwf	___fldiv@a+2
 14520  0702  3000               	movlw	0
 14521  0703  00AF               	movwf	___fldiv@a+1
 14522  0704  3000               	movlw	0
 14523  0705  00AE               	movwf	___fldiv@a
 14524  0706  3184  2457  3185   	fcall	___fldiv
 14525  0709  0140               	movlb	0	; select bank0
 14526  070A  0831               	movf	?___fldiv+3,w
 14527  070B  00CF               	movwf	___flmul@a+3
 14528  070C  0830               	movf	?___fldiv+2,w
 14529  070D  00CE               	movwf	___flmul@a+2
 14530  070E  082F               	movf	?___fldiv+1,w
 14531  070F  00CD               	movwf	___flmul@a+1
 14532  0710  082E               	movf	?___fldiv,w
 14533  0711  00CC               	movwf	___flmul@a
 14534  0712  3042               	movlw	66
 14535  0713  00CB               	movwf	___flmul@b+3
 14536  0714  30FE               	movlw	254
 14537  0715  00CA               	movwf	___flmul@b+2
 14538  0716  3000               	movlw	0
 14539  0717  00C9               	movwf	___flmul@b+1
 14540  0718  3000               	movlw	0
 14541  0719  00C8               	movwf	___flmul@b
 14542  071A  3180  2090  3185   	fcall	___flmul
 14543  071D  0140               	movlb	0	; select bank0
 14544  071E  084B               	movf	?___flmul+3,w
 14545  071F  00E5               	movwf	___fltol@f1+3
 14546  0720  084A               	movf	?___flmul+2,w
 14547  0721  00E4               	movwf	___fltol@f1+2
 14548  0722  0849               	movf	?___flmul+1,w
 14549  0723  00E3               	movwf	___fltol@f1+1
 14550  0724  0848               	movf	?___flmul,w
 14551  0725  00E2               	movwf	___fltol@f1
 14552  0726  3196  2640  3185   	fcall	___fltol
 14553  0729  0140               	movlb	0	; select bank0
 14554  072A  0863               	movf	?___fltol+1,w
 14555  072B  0141               	movlb	1	; select bank1
 14556  072C  00C8               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 14557  072D  0140               	movlb	0	; select bank0
 14558  072E  0862               	movf	?___fltol,w
 14559  072F  0141               	movlb	1	; select bank1
 14560  0730  00C7               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 14561  0731  3191  217A         	fcall	_PWM4_LoadDutyValue
 14562  0733  0008               	return
 14563  0734                     __end_of_LED_setColor:	
 14564                           
 14565                           	psect	text27
 14566  08DA                     __ptext27:	
 14567 ;; *************** function ___xxtofl *****************
 14568 ;; Defined at:
 14569 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;  sign            1    wreg     unsigned char 
 14572 ;;  val             4    0[BANK0 ] long 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;  sign            1    8[BANK0 ] unsigned char 
 14575 ;;  arg             4   10[BANK0 ] unsigned long 
 14576 ;;  exp             1    9[BANK0 ] unsigned char 
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  4    0[BANK0 ] unsigned char 
 14579 ;; Registers used:
 14580 ;;		wreg, status,2, status,0
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14587 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14588 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14589 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14590 ;;Total ram usage:       14 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:    4
 14593 ;; This function calls:
 14594 ;;		Nothing
 14595 ;; This function is called by:
 14596 ;;		_LED_setColor
 14597 ;;		_beatBrightnessCalculation
 14598 ;; This function uses a non-reentrant model
 14599 ;;
 14600                           
 14601                           
 14602                           ;psect for function ___xxtofl
 14603  08DA                     ___xxtofl:	
 14604                           
 14605                           ;incstack = 0
 14606                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14607                           ;___xxtofl@sign stored from wreg
 14608  08DA  0140               	movlb	0	; select bank0
 14609  08DB  00A8               	movwf	___xxtofl@sign
 14610  08DC  0828               	movf	___xxtofl@sign,w
 14611  08DD  1D03               	btfss	3,2
 14612  08DE  1FA3               	btfss	___xxtofl@val+3,7
 14613  08DF  28F0               	goto	l7526
 14614  08E0  0920               	comf	___xxtofl@val,w
 14615  08E1  00AA               	movwf	___xxtofl@arg
 14616  08E2  0921               	comf	___xxtofl@val+1,w
 14617  08E3  00AB               	movwf	___xxtofl@arg+1
 14618  08E4  0922               	comf	___xxtofl@val+2,w
 14619  08E5  00AC               	movwf	___xxtofl@arg+2
 14620  08E6  0923               	comf	___xxtofl@val+3,w
 14621  08E7  00AD               	movwf	___xxtofl@arg+3
 14622  08E8  0AAA               	incf	___xxtofl@arg,f
 14623  08E9  1903               	skipnz
 14624  08EA  0AAB               	incf	___xxtofl@arg+1,f
 14625  08EB  1903               	skipnz
 14626  08EC  0AAC               	incf	___xxtofl@arg+2,f
 14627  08ED  1903               	skipnz
 14628  08EE  0AAD               	incf	___xxtofl@arg+3,f
 14629  08EF  28F8               	goto	l2106
 14630  08F0                     l7526:	
 14631  08F0  0823               	movf	___xxtofl@val+3,w
 14632  08F1  00AD               	movwf	___xxtofl@arg+3
 14633  08F2  0822               	movf	___xxtofl@val+2,w
 14634  08F3  00AC               	movwf	___xxtofl@arg+2
 14635  08F4  0821               	movf	___xxtofl@val+1,w
 14636  08F5  00AB               	movwf	___xxtofl@arg+1
 14637  08F6  0820               	movf	___xxtofl@val,w
 14638  08F7  00AA               	movwf	___xxtofl@arg
 14639  08F8                     l2106:	
 14640  08F8  0823               	movf	___xxtofl@val+3,w
 14641  08F9  0422               	iorwf	___xxtofl@val+2,w
 14642  08FA  0421               	iorwf	___xxtofl@val+1,w
 14643  08FB  0420               	iorwf	___xxtofl@val,w
 14644  08FC  1D03               	skipz
 14645  08FD  2907               	goto	l7532
 14646  08FE  3000               	movlw	0
 14647  08FF  00A3               	movwf	?___xxtofl+3
 14648  0900  3000               	movlw	0
 14649  0901  00A2               	movwf	?___xxtofl+2
 14650  0902  3000               	movlw	0
 14651  0903  00A1               	movwf	?___xxtofl+1
 14652  0904  3000               	movlw	0
 14653  0905  00A0               	movwf	?___xxtofl
 14654  0906  0008               	return
 14655  0907                     l7532:	
 14656  0907  3096               	movlw	150
 14657  0908  00A4               	movwf	??___xxtofl
 14658  0909  0824               	movf	??___xxtofl,w
 14659  090A  00A9               	movwf	___xxtofl@exp
 14660  090B                     l7536:	
 14661  090B  30FE               	movlw	254
 14662  090C  052D               	andwf	___xxtofl@arg+3,w
 14663  090D  1903               	btfsc	3,2
 14664  090E  292E               	goto	l2112
 14665  090F  3001               	movlw	1
 14666  0910  00A4               	movwf	??___xxtofl
 14667  0911  0824               	movf	??___xxtofl,w
 14668  0912  07A9               	addwf	___xxtofl@exp,f
 14669  0913  3001               	movlw	1
 14670  0914                     u7335:	
 14671  0914  36AD               	lsrf	___xxtofl@arg+3,f
 14672  0915  0CAC               	rrf	___xxtofl@arg+2,f
 14673  0916  0CAB               	rrf	___xxtofl@arg+1,f
 14674  0917  0CAA               	rrf	___xxtofl@arg,f
 14675  0918  0B89               	decfsz	9,f
 14676  0919  2914               	goto	u7335
 14677  091A  290B               	goto	l7536
 14678  091B                     l7538:	
 14679  091B  3001               	movlw	1
 14680  091C  00A4               	movwf	??___xxtofl
 14681  091D  0824               	movf	??___xxtofl,w
 14682  091E  07A9               	addwf	___xxtofl@exp,f
 14683  091F  3001               	movlw	1
 14684  0920  07AA               	addwf	___xxtofl@arg,f
 14685  0921  3000               	movlw	0
 14686  0922  3DAB               	addwfc	___xxtofl@arg+1,f
 14687  0923  3000               	movlw	0
 14688  0924  3DAC               	addwfc	___xxtofl@arg+2,f
 14689  0925  3000               	movlw	0
 14690  0926  3DAD               	addwfc	___xxtofl@arg+3,f
 14691  0927  3001               	movlw	1
 14692  0928                     u7355:	
 14693  0928  36AD               	lsrf	___xxtofl@arg+3,f
 14694  0929  0CAC               	rrf	___xxtofl@arg+2,f
 14695  092A  0CAB               	rrf	___xxtofl@arg+1,f
 14696  092B  0CAA               	rrf	___xxtofl@arg,f
 14697  092C  0B89               	decfsz	9,f
 14698  092D  2928               	goto	u7355
 14699  092E                     l2112:	
 14700  092E  30FF               	movlw	255
 14701  092F  052D               	andwf	___xxtofl@arg+3,w
 14702  0930  1903               	btfsc	3,2
 14703  0931  2940               	goto	l7546
 14704  0932  291B               	goto	l7538
 14705  0933                     l7548:	
 14706  0933  3002               	movlw	2
 14707  0934  0229               	subwf	___xxtofl@exp,w
 14708  0935  1C03               	btfss	3,0
 14709  0936  2942               	goto	l2119
 14710  0937  3001               	movlw	1
 14711  0938  02A9               	subwf	___xxtofl@exp,f
 14712  0939  3001               	movlw	1
 14713  093A                     u7375:	
 14714  093A  35AA               	lslf	___xxtofl@arg,f
 14715  093B  0DAB               	rlf	___xxtofl@arg+1,f
 14716  093C  0DAC               	rlf	___xxtofl@arg+2,f
 14717  093D  0DAD               	rlf	___xxtofl@arg+3,f
 14718  093E  0B89               	decfsz	9,f
 14719  093F  293A               	goto	u7375
 14720  0940                     l7546:	
 14721  0940  1FAC               	btfss	___xxtofl@arg+2,7
 14722  0941  2933               	goto	l7548
 14723  0942                     l2119:	
 14724  0942  1829               	btfsc	___xxtofl@exp,0
 14725  0943  294C               	goto	l2120
 14726  0944  30FF               	movlw	255
 14727  0945  05AA               	andwf	___xxtofl@arg,f
 14728  0946  30FF               	movlw	255
 14729  0947  05AB               	andwf	___xxtofl@arg+1,f
 14730  0948  307F               	movlw	127
 14731  0949  05AC               	andwf	___xxtofl@arg+2,f
 14732  094A  30FF               	movlw	255
 14733  094B  05AD               	andwf	___xxtofl@arg+3,f
 14734  094C                     l2120:	
 14735  094C  1003               	clrc
 14736  094D  0CA9               	rrf	___xxtofl@exp,f
 14737  094E  0829               	movf	___xxtofl@exp,w
 14738  094F  00A4               	movwf	??___xxtofl
 14739  0950  01A5               	clrf	??___xxtofl+1
 14740  0951  01A6               	clrf	??___xxtofl+2
 14741  0952  01A7               	clrf	??___xxtofl+3
 14742  0953  3018               	movlw	24
 14743  0954                     u7415:	
 14744  0954  35A4               	lslf	??___xxtofl,f
 14745  0955  0DA5               	rlf	??___xxtofl+1,f
 14746  0956  0DA6               	rlf	??___xxtofl+2,f
 14747  0957  0DA7               	rlf	??___xxtofl+3,f
 14748  0958  0B89               	decfsz	9,f
 14749  0959  2954               	goto	u7415
 14750  095A  0824               	movf	??___xxtofl,w
 14751  095B  04AA               	iorwf	___xxtofl@arg,f
 14752  095C  0825               	movf	??___xxtofl+1,w
 14753  095D  04AB               	iorwf	___xxtofl@arg+1,f
 14754  095E  0826               	movf	??___xxtofl+2,w
 14755  095F  04AC               	iorwf	___xxtofl@arg+2,f
 14756  0960  0827               	movf	??___xxtofl+3,w
 14757  0961  04AD               	iorwf	___xxtofl@arg+3,f
 14758  0962  0828               	movf	___xxtofl@sign,w
 14759  0963  1D03               	btfss	3,2
 14760  0964  1FA3               	btfss	___xxtofl@val+3,7
 14761  0965  2967               	goto	l7560
 14762  0966  17AD               	bsf	___xxtofl@arg+3,7
 14763  0967                     l7560:	
 14764  0967  082D               	movf	___xxtofl@arg+3,w
 14765  0968  00A3               	movwf	?___xxtofl+3
 14766  0969  082C               	movf	___xxtofl@arg+2,w
 14767  096A  00A2               	movwf	?___xxtofl+2
 14768  096B  082B               	movf	___xxtofl@arg+1,w
 14769  096C  00A1               	movwf	?___xxtofl+1
 14770  096D  082A               	movf	___xxtofl@arg,w
 14771  096E  00A0               	movwf	?___xxtofl
 14772  096F  0008               	return
 14773  0970                     __end_of___xxtofl:	
 14774                           
 14775                           	psect	text28
 14776  1640                     __ptext28:	
 14777 ;; *************** function ___fltol *****************
 14778 ;; Defined at:
 14779 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  f1              4   66[BANK0 ] unsigned char 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;  exp1            1   76[BANK0 ] unsigned char 
 14784 ;;  sign1           1   75[BANK0 ] unsigned char 
 14785 ;; Return value:  Size  Location     Type
 14786 ;;                  4   66[BANK0 ] long 
 14787 ;; Registers used:
 14788 ;;		wreg, status,2, status,0
 14789 ;; Tracked objects:
 14790 ;;		On entry : 0/0
 14791 ;;		On exit  : 0/0
 14792 ;;		Unchanged: 0/0
 14793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14796 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14797 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14798 ;;Total ram usage:       11 bytes
 14799 ;; Hardware stack levels used:    1
 14800 ;; Hardware stack levels required when called:    4
 14801 ;; This function calls:
 14802 ;;		Nothing
 14803 ;; This function is called by:
 14804 ;;		_LED_setColor
 14805 ;;		_beatColorCreator
 14806 ;;		_beatBrightnessCalculation
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           
 14811                           ;psect for function ___fltol
 14812  1640                     ___fltol:	
 14813                           
 14814                           ;incstack = 0
 14815                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14816  1640  1003               	clrc
 14817  1641  0140               	movlb	0	; select bank0
 14818  1642  0D64               	rlf	___fltol@f1+2,w
 14819  1643  0D65               	rlf	___fltol@f1+3,w
 14820  1644  00E6               	movwf	??___fltol
 14821  1645  0866               	movf	??___fltol,w
 14822  1646  00EC               	movwf	___fltol@exp1
 14823  1647  086C               	movf	___fltol@exp1,w
 14824  1648  1D03               	btfss	3,2
 14825  1649  2E53               	goto	l7210
 14826  164A                     l7206:	
 14827  164A  3000               	movlw	0
 14828  164B  00E5               	movwf	?___fltol+3
 14829  164C  3000               	movlw	0
 14830  164D  00E4               	movwf	?___fltol+2
 14831  164E  3000               	movlw	0
 14832  164F  00E3               	movwf	?___fltol+1
 14833  1650  3000               	movlw	0
 14834  1651  00E2               	movwf	?___fltol
 14835  1652  0008               	return
 14836  1653                     l7210:	
 14837  1653  0862               	movf	___fltol@f1,w
 14838  1654  00E6               	movwf	??___fltol
 14839  1655  0863               	movf	___fltol@f1+1,w
 14840  1656  00E7               	movwf	??___fltol+1
 14841  1657  0864               	movf	___fltol@f1+2,w
 14842  1658  00E8               	movwf	??___fltol+2
 14843  1659  0865               	movf	___fltol@f1+3,w
 14844  165A  00E9               	movwf	??___fltol+3
 14845  165B  301F               	movlw	31
 14846  165C                     u6665:	
 14847  165C  36E9               	lsrf	??___fltol+3,f
 14848  165D  0CE8               	rrf	??___fltol+2,f
 14849  165E  0CE7               	rrf	??___fltol+1,f
 14850  165F  0CE6               	rrf	??___fltol,f
 14851  1660  0B89               	decfsz	9,f
 14852  1661  2E5C               	goto	u6665
 14853  1662  0866               	movf	??___fltol,w
 14854  1663  00EA               	movwf	??___fltol+4
 14855  1664  086A               	movf	??___fltol+4,w
 14856  1665  00EB               	movwf	___fltol@sign1
 14857  1666  17E4               	bsf	___fltol@f1+2,7
 14858  1667  30FF               	movlw	255
 14859  1668  05E2               	andwf	___fltol@f1,f
 14860  1669  30FF               	movlw	255
 14861  166A  05E3               	andwf	___fltol@f1+1,f
 14862  166B  30FF               	movlw	255
 14863  166C  05E4               	andwf	___fltol@f1+2,f
 14864  166D  3000               	movlw	0
 14865  166E  05E5               	andwf	___fltol@f1+3,f
 14866  166F  3096               	movlw	150
 14867  1670  02EC               	subwf	___fltol@exp1,f
 14868  1671  1FEC               	btfss	___fltol@exp1,7
 14869  1672  2E86               	goto	l7228
 14870  1673  086C               	movf	___fltol@exp1,w
 14871  1674  3A80               	xorlw	128
 14872  1675  3E97               	addlw	151
 14873  1676  1C03               	btfss	3,0
 14874  1677  2E4A               	goto	l7206
 14875  1678                     l7226:	
 14876  1678  3001               	movlw	1
 14877  1679                     u6695:	
 14878  1679  36E5               	lsrf	___fltol@f1+3,f
 14879  167A  0CE4               	rrf	___fltol@f1+2,f
 14880  167B  0CE3               	rrf	___fltol@f1+1,f
 14881  167C  0CE2               	rrf	___fltol@f1,f
 14882  167D  0B89               	decfsz	9,f
 14883  167E  2E79               	goto	u6695
 14884  167F  3001               	movlw	1
 14885  1680  00E6               	movwf	??___fltol
 14886  1681  0866               	movf	??___fltol,w
 14887  1682  07EC               	addwf	___fltol@exp1,f
 14888  1683  1903               	btfsc	3,2
 14889  1684  2E97               	goto	l7236
 14890  1685  2E78               	goto	l7226
 14891  1686                     l7228:	
 14892  1686  3020               	movlw	32
 14893  1687  026C               	subwf	___fltol@exp1,w
 14894  1688  1803               	btfsc	3,0
 14895  1689  2E4A               	goto	l7206
 14896  168A                     l1872:	
 14897  168A  086C               	movf	___fltol@exp1,w
 14898  168B  1903               	btfsc	3,2
 14899  168C  2E97               	goto	l7236
 14900  168D  3001               	movlw	1
 14901  168E                     u6725:	
 14902  168E  35E2               	lslf	___fltol@f1,f
 14903  168F  0DE3               	rlf	___fltol@f1+1,f
 14904  1690  0DE4               	rlf	___fltol@f1+2,f
 14905  1691  0DE5               	rlf	___fltol@f1+3,f
 14906  1692  0B89               	decfsz	9,f
 14907  1693  2E8E               	goto	u6725
 14908  1694  3001               	movlw	1
 14909  1695  02EC               	subwf	___fltol@exp1,f
 14910  1696  2E8A               	goto	l1872
 14911  1697                     l7236:	
 14912  1697  086B               	movf	___fltol@sign1,w
 14913  1698  1903               	btfsc	3,2
 14914  1699  0008               	return
 14915  169A  09E2               	comf	___fltol@f1,f
 14916  169B  09E3               	comf	___fltol@f1+1,f
 14917  169C  09E4               	comf	___fltol@f1+2,f
 14918  169D  09E5               	comf	___fltol@f1+3,f
 14919  169E  0AE2               	incf	___fltol@f1,f
 14920  169F  1903               	skipnz
 14921  16A0  0AE3               	incf	___fltol@f1+1,f
 14922  16A1  1903               	skipnz
 14923  16A2  0AE4               	incf	___fltol@f1+2,f
 14924  16A3  1903               	skipnz
 14925  16A4  0AE5               	incf	___fltol@f1+3,f
 14926  16A5  0008               	return
 14927  16A6                     __end_of___fltol:	
 14928                           
 14929                           	psect	text29
 14930  0090                     __ptext29:	
 14931 ;; *************** function ___flmul *****************
 14932 ;; Defined at:
 14933 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;  b               4   40[BANK0 ] long 
 14936 ;;  a               4   44[BANK0 ] long 
 14937 ;; Auto vars:     Size  Location     Type
 14938 ;;  prod            4   60[BANK0 ] struct .
 14939 ;;  grs             4   55[BANK0 ] unsigned long 
 14940 ;;  temp            2   64[BANK0 ] struct .
 14941 ;;  bexp            1   59[BANK0 ] unsigned char 
 14942 ;;  aexp            1   54[BANK0 ] unsigned char 
 14943 ;;  sign            1   53[BANK0 ] unsigned char 
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  4   40[BANK0 ] unsigned char 
 14946 ;; Registers used:
 14947 ;;		wreg, status,2, status,0, pclath, cstack
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14953 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14954 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14955 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14956 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14957 ;;Total ram usage:       26 bytes
 14958 ;; Hardware stack levels used:    1
 14959 ;; Hardware stack levels required when called:    5
 14960 ;; This function calls:
 14961 ;;		__Umul8_16
 14962 ;; This function is called by:
 14963 ;;		_LED_setColor
 14964 ;;		_beatBrightnessCalculation
 14965 ;; This function uses a non-reentrant model
 14966 ;;
 14967                           
 14968                           
 14969                           ;psect for function ___flmul
 14970  0090                     ___flmul:	
 14971                           
 14972                           ;incstack = 0
 14973                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14974  0090  0140               	movlb	0	; select bank0
 14975  0091  084B               	movf	___flmul@b+3,w
 14976  0092  3980               	andlw	128
 14977  0093  00D0               	movwf	??___flmul
 14978  0094  0850               	movf	??___flmul,w
 14979  0095  00D5               	movwf	___flmul@sign
 14980  0096  354B               	lslf	___flmul@b+3,w
 14981  0097  00D0               	movwf	??___flmul
 14982  0098  0850               	movf	??___flmul,w
 14983  0099  00DB               	movwf	___flmul@bexp
 14984  009A  1BCA               	btfsc	___flmul@b+2,7
 14985  009B  145B               	bsf	___flmul@bexp,0
 14986  009C  085B               	movf	___flmul@bexp,w
 14987  009D  1903               	btfsc	3,2
 14988  009E  28AC               	goto	l7396
 14989  009F  0A5B               	incf	___flmul@bexp,w
 14990  00A0  1D03               	btfss	3,2
 14991  00A1  28AA               	goto	l7394
 14992  00A2  3000               	movlw	0
 14993  00A3  00CB               	movwf	___flmul@b+3
 14994  00A4  3000               	movlw	0
 14995  00A5  00CA               	movwf	___flmul@b+2
 14996  00A6  3000               	movlw	0
 14997  00A7  00C9               	movwf	___flmul@b+1
 14998  00A8  3000               	movlw	0
 14999  00A9  00C8               	movwf	___flmul@b
 15000  00AA                     l7394:	
 15001  00AA  17CA               	bsf	___flmul@b+2,7
 15002  00AB  28B4               	goto	l7398
 15003  00AC                     l7396:	
 15004  00AC  3000               	movlw	0
 15005  00AD  00CB               	movwf	___flmul@b+3
 15006  00AE  3000               	movlw	0
 15007  00AF  00CA               	movwf	___flmul@b+2
 15008  00B0  3000               	movlw	0
 15009  00B1  00C9               	movwf	___flmul@b+1
 15010  00B2  3000               	movlw	0
 15011  00B3  00C8               	movwf	___flmul@b
 15012  00B4                     l7398:	
 15013  00B4  084F               	movf	___flmul@a+3,w
 15014  00B5  3980               	andlw	128
 15015  00B6  00D0               	movwf	??___flmul
 15016  00B7  0850               	movf	??___flmul,w
 15017  00B8  06D5               	xorwf	___flmul@sign,f
 15018  00B9  354F               	lslf	___flmul@a+3,w
 15019  00BA  00D0               	movwf	??___flmul
 15020  00BB  0850               	movf	??___flmul,w
 15021  00BC  00D6               	movwf	___flmul@aexp
 15022  00BD  1BCE               	btfsc	___flmul@a+2,7
 15023  00BE  1456               	bsf	___flmul@aexp,0
 15024  00BF  0856               	movf	___flmul@aexp,w
 15025  00C0  1903               	btfsc	3,2
 15026  00C1  28CF               	goto	l7414
 15027  00C2  0A56               	incf	___flmul@aexp,w
 15028  00C3  1D03               	btfss	3,2
 15029  00C4  28CD               	goto	l7412
 15030  00C5  3000               	movlw	0
 15031  00C6  00CF               	movwf	___flmul@a+3
 15032  00C7  3000               	movlw	0
 15033  00C8  00CE               	movwf	___flmul@a+2
 15034  00C9  3000               	movlw	0
 15035  00CA  00CD               	movwf	___flmul@a+1
 15036  00CB  3000               	movlw	0
 15037  00CC  00CC               	movwf	___flmul@a
 15038  00CD                     l7412:	
 15039  00CD  17CE               	bsf	___flmul@a+2,7
 15040  00CE  28D7               	goto	l7416
 15041  00CF                     l7414:	
 15042  00CF  3000               	movlw	0
 15043  00D0  00CF               	movwf	___flmul@a+3
 15044  00D1  3000               	movlw	0
 15045  00D2  00CE               	movwf	___flmul@a+2
 15046  00D3  3000               	movlw	0
 15047  00D4  00CD               	movwf	___flmul@a+1
 15048  00D5  3000               	movlw	0
 15049  00D6  00CC               	movwf	___flmul@a
 15050  00D7                     l7416:	
 15051  00D7  0856               	movf	___flmul@aexp,w
 15052  00D8  1D03               	btfss	3,2
 15053  00D9  085B               	movf	___flmul@bexp,w
 15054  00DA  1D03               	btfss	3,2
 15055  00DB  28E5               	goto	l7424
 15056  00DC  3000               	movlw	0
 15057  00DD  00CB               	movwf	?___flmul+3
 15058  00DE  3000               	movlw	0
 15059  00DF  00CA               	movwf	?___flmul+2
 15060  00E0  3000               	movlw	0
 15061  00E1  00C9               	movwf	?___flmul+1
 15062  00E2  3000               	movlw	0
 15063  00E3  00C8               	movwf	?___flmul
 15064  00E4  0008               	return
 15065  00E5                     l7424:	
 15066  00E5  0848               	movf	___flmul@b,w
 15067  00E6  00D0               	movwf	??___flmul
 15068  00E7  0850               	movf	??___flmul,w
 15069  00E8  00A0               	movwf	__Umul8_16@multiplicand
 15070  00E9  084E               	movf	___flmul@a+2,w
 15071  00EA  3191  21B8  3180   	fcall	__Umul8_16
 15072  00ED  0140               	movlb	0	; select bank0
 15073  00EE  0821               	movf	?__Umul8_16+1,w
 15074  00EF  00E1               	movwf	___flmul@temp+1
 15075  00F0  0820               	movf	?__Umul8_16,w
 15076  00F1  00E0               	movwf	___flmul@temp
 15077  00F2  0860               	movf	___flmul@temp,w
 15078  00F3  00D0               	movwf	??___flmul
 15079  00F4  01D1               	clrf	??___flmul+1
 15080  00F5  01D2               	clrf	??___flmul+2
 15081  00F6  01D3               	clrf	??___flmul+3
 15082  00F7  0853               	movf	??___flmul+3,w
 15083  00F8  00DA               	movwf	___flmul@grs+3
 15084  00F9  0852               	movf	??___flmul+2,w
 15085  00FA  00D9               	movwf	___flmul@grs+2
 15086  00FB  0851               	movf	??___flmul+1,w
 15087  00FC  00D8               	movwf	___flmul@grs+1
 15088  00FD  0850               	movf	??___flmul,w
 15089  00FE  00D7               	movwf	___flmul@grs
 15090  00FF  0861               	movf	___flmul@temp+1,w
 15091  0100  00D0               	movwf	??___flmul
 15092  0101  01D1               	clrf	??___flmul+1
 15093  0102  01D2               	clrf	??___flmul+2
 15094  0103  01D3               	clrf	??___flmul+3
 15095  0104  0853               	movf	??___flmul+3,w
 15096  0105  00DF               	movwf	___flmul@prod+3
 15097  0106  0852               	movf	??___flmul+2,w
 15098  0107  00DE               	movwf	___flmul@prod+2
 15099  0108  0851               	movf	??___flmul+1,w
 15100  0109  00DD               	movwf	___flmul@prod+1
 15101  010A  0850               	movf	??___flmul,w
 15102  010B  00DC               	movwf	___flmul@prod
 15103  010C  0849               	movf	___flmul@b+1,w
 15104  010D  00D0               	movwf	??___flmul
 15105  010E  0850               	movf	??___flmul,w
 15106  010F  00A0               	movwf	__Umul8_16@multiplicand
 15107  0110  084D               	movf	___flmul@a+1,w
 15108  0111  3191  21B8  3180   	fcall	__Umul8_16
 15109  0114  0140               	movlb	0	; select bank0
 15110  0115  0821               	movf	?__Umul8_16+1,w
 15111  0116  00E1               	movwf	___flmul@temp+1
 15112  0117  0820               	movf	?__Umul8_16,w
 15113  0118  00E0               	movwf	___flmul@temp
 15114  0119  0860               	movf	___flmul@temp,w
 15115  011A  00D0               	movwf	??___flmul
 15116  011B  01D1               	clrf	??___flmul+1
 15117  011C  01D2               	clrf	??___flmul+2
 15118  011D  01D3               	clrf	??___flmul+3
 15119  011E  0850               	movf	??___flmul,w
 15120  011F  07D7               	addwf	___flmul@grs,f
 15121  0120  0851               	movf	??___flmul+1,w
 15122  0121  3DD8               	addwfc	___flmul@grs+1,f
 15123  0122  0852               	movf	??___flmul+2,w
 15124  0123  3DD9               	addwfc	___flmul@grs+2,f
 15125  0124  0853               	movf	??___flmul+3,w
 15126  0125  3DDA               	addwfc	___flmul@grs+3,f
 15127  0126  0861               	movf	___flmul@temp+1,w
 15128  0127  00D0               	movwf	??___flmul
 15129  0128  01D1               	clrf	??___flmul+1
 15130  0129  01D2               	clrf	??___flmul+2
 15131  012A  01D3               	clrf	??___flmul+3
 15132  012B  0850               	movf	??___flmul,w
 15133  012C  07DC               	addwf	___flmul@prod,f
 15134  012D  0851               	movf	??___flmul+1,w
 15135  012E  3DDD               	addwfc	___flmul@prod+1,f
 15136  012F  0852               	movf	??___flmul+2,w
 15137  0130  3DDE               	addwfc	___flmul@prod+2,f
 15138  0131  0853               	movf	??___flmul+3,w
 15139  0132  3DDF               	addwfc	___flmul@prod+3,f
 15140  0133  084A               	movf	___flmul@b+2,w
 15141  0134  00D0               	movwf	??___flmul
 15142  0135  0850               	movf	??___flmul,w
 15143  0136  00A0               	movwf	__Umul8_16@multiplicand
 15144  0137  084C               	movf	___flmul@a,w
 15145  0138  3191  21B8  3180   	fcall	__Umul8_16
 15146  013B  0140               	movlb	0	; select bank0
 15147  013C  0821               	movf	?__Umul8_16+1,w
 15148  013D  00E1               	movwf	___flmul@temp+1
 15149  013E  0820               	movf	?__Umul8_16,w
 15150  013F  00E0               	movwf	___flmul@temp
 15151  0140  0860               	movf	___flmul@temp,w
 15152  0141  00D0               	movwf	??___flmul
 15153  0142  01D1               	clrf	??___flmul+1
 15154  0143  01D2               	clrf	??___flmul+2
 15155  0144  01D3               	clrf	??___flmul+3
 15156  0145  0850               	movf	??___flmul,w
 15157  0146  07D7               	addwf	___flmul@grs,f
 15158  0147  0851               	movf	??___flmul+1,w
 15159  0148  3DD8               	addwfc	___flmul@grs+1,f
 15160  0149  0852               	movf	??___flmul+2,w
 15161  014A  3DD9               	addwfc	___flmul@grs+2,f
 15162  014B  0853               	movf	??___flmul+3,w
 15163  014C  3DDA               	addwfc	___flmul@grs+3,f
 15164  014D  0861               	movf	___flmul@temp+1,w
 15165  014E  00D0               	movwf	??___flmul
 15166  014F  01D1               	clrf	??___flmul+1
 15167  0150  01D2               	clrf	??___flmul+2
 15168  0151  01D3               	clrf	??___flmul+3
 15169  0152  0850               	movf	??___flmul,w
 15170  0153  07DC               	addwf	___flmul@prod,f
 15171  0154  0851               	movf	??___flmul+1,w
 15172  0155  3DDD               	addwfc	___flmul@prod+1,f
 15173  0156  0852               	movf	??___flmul+2,w
 15174  0157  3DDE               	addwfc	___flmul@prod+2,f
 15175  0158  0853               	movf	??___flmul+3,w
 15176  0159  3DDF               	addwfc	___flmul@prod+3,f
 15177  015A  3008               	movlw	8
 15178  015B                     u7125:	
 15179  015B  35D7               	lslf	___flmul@grs,f
 15180  015C  0DD8               	rlf	___flmul@grs+1,f
 15181  015D  0DD9               	rlf	___flmul@grs+2,f
 15182  015E  0DDA               	rlf	___flmul@grs+3,f
 15183  015F  0B89               	decfsz	9,f
 15184  0160  295B               	goto	u7125
 15185  0161  0849               	movf	___flmul@b+1,w
 15186  0162  00D0               	movwf	??___flmul
 15187  0163  0850               	movf	??___flmul,w
 15188  0164  00A0               	movwf	__Umul8_16@multiplicand
 15189  0165  084C               	movf	___flmul@a,w
 15190  0166  3191  21B8  3180   	fcall	__Umul8_16
 15191  0169  0140               	movlb	0	; select bank0
 15192  016A  0821               	movf	?__Umul8_16+1,w
 15193  016B  00E1               	movwf	___flmul@temp+1
 15194  016C  0820               	movf	?__Umul8_16,w
 15195  016D  00E0               	movwf	___flmul@temp
 15196  016E  0860               	movf	___flmul@temp,w
 15197  016F  07D7               	addwf	___flmul@grs,f
 15198  0170  0861               	movf	___flmul@temp+1,w
 15199  0171  3DD8               	addwfc	___flmul@grs+1,f
 15200  0172  3000               	movlw	0
 15201  0173  3DD9               	addwfc	___flmul@grs+2,f
 15202  0174  3DDA               	addwfc	___flmul@grs+3,f
 15203  0175  0848               	movf	___flmul@b,w
 15204  0176  00D0               	movwf	??___flmul
 15205  0177  0850               	movf	??___flmul,w
 15206  0178  00A0               	movwf	__Umul8_16@multiplicand
 15207  0179  084D               	movf	___flmul@a+1,w
 15208  017A  3191  21B8  3180   	fcall	__Umul8_16
 15209  017D  0140               	movlb	0	; select bank0
 15210  017E  0821               	movf	?__Umul8_16+1,w
 15211  017F  00E1               	movwf	___flmul@temp+1
 15212  0180  0820               	movf	?__Umul8_16,w
 15213  0181  00E0               	movwf	___flmul@temp
 15214  0182  0860               	movf	___flmul@temp,w
 15215  0183  07D7               	addwf	___flmul@grs,f
 15216  0184  0861               	movf	___flmul@temp+1,w
 15217  0185  3DD8               	addwfc	___flmul@grs+1,f
 15218  0186  3000               	movlw	0
 15219  0187  3DD9               	addwfc	___flmul@grs+2,f
 15220  0188  3DDA               	addwfc	___flmul@grs+3,f
 15221  0189  3008               	movlw	8
 15222  018A                     u7135:	
 15223  018A  35D7               	lslf	___flmul@grs,f
 15224  018B  0DD8               	rlf	___flmul@grs+1,f
 15225  018C  0DD9               	rlf	___flmul@grs+2,f
 15226  018D  0DDA               	rlf	___flmul@grs+3,f
 15227  018E  0B89               	decfsz	9,f
 15228  018F  298A               	goto	u7135
 15229  0190  0848               	movf	___flmul@b,w
 15230  0191  00D0               	movwf	??___flmul
 15231  0192  0850               	movf	??___flmul,w
 15232  0193  00A0               	movwf	__Umul8_16@multiplicand
 15233  0194  084C               	movf	___flmul@a,w
 15234  0195  3191  21B8  3180   	fcall	__Umul8_16
 15235  0198  0140               	movlb	0	; select bank0
 15236  0199  0821               	movf	?__Umul8_16+1,w
 15237  019A  00E1               	movwf	___flmul@temp+1
 15238  019B  0820               	movf	?__Umul8_16,w
 15239  019C  00E0               	movwf	___flmul@temp
 15240  019D  0860               	movf	___flmul@temp,w
 15241  019E  07D7               	addwf	___flmul@grs,f
 15242  019F  0861               	movf	___flmul@temp+1,w
 15243  01A0  3DD8               	addwfc	___flmul@grs+1,f
 15244  01A1  3000               	movlw	0
 15245  01A2  3DD9               	addwfc	___flmul@grs+2,f
 15246  01A3  3DDA               	addwfc	___flmul@grs+3,f
 15247  01A4  0849               	movf	___flmul@b+1,w
 15248  01A5  00D0               	movwf	??___flmul
 15249  01A6  0850               	movf	??___flmul,w
 15250  01A7  00A0               	movwf	__Umul8_16@multiplicand
 15251  01A8  084E               	movf	___flmul@a+2,w
 15252  01A9  3191  21B8  3180   	fcall	__Umul8_16
 15253  01AC  0140               	movlb	0	; select bank0
 15254  01AD  0821               	movf	?__Umul8_16+1,w
 15255  01AE  00E1               	movwf	___flmul@temp+1
 15256  01AF  0820               	movf	?__Umul8_16,w
 15257  01B0  00E0               	movwf	___flmul@temp
 15258  01B1  0860               	movf	___flmul@temp,w
 15259  01B2  07DC               	addwf	___flmul@prod,f
 15260  01B3  0861               	movf	___flmul@temp+1,w
 15261  01B4  3DDD               	addwfc	___flmul@prod+1,f
 15262  01B5  3000               	movlw	0
 15263  01B6  3DDE               	addwfc	___flmul@prod+2,f
 15264  01B7  3DDF               	addwfc	___flmul@prod+3,f
 15265  01B8  084A               	movf	___flmul@b+2,w
 15266  01B9  00D0               	movwf	??___flmul
 15267  01BA  0850               	movf	??___flmul,w
 15268  01BB  00A0               	movwf	__Umul8_16@multiplicand
 15269  01BC  084D               	movf	___flmul@a+1,w
 15270  01BD  3191  21B8  3180   	fcall	__Umul8_16
 15271  01C0  0140               	movlb	0	; select bank0
 15272  01C1  0821               	movf	?__Umul8_16+1,w
 15273  01C2  00E1               	movwf	___flmul@temp+1
 15274  01C3  0820               	movf	?__Umul8_16,w
 15275  01C4  00E0               	movwf	___flmul@temp
 15276  01C5  0860               	movf	___flmul@temp,w
 15277  01C6  07DC               	addwf	___flmul@prod,f
 15278  01C7  0861               	movf	___flmul@temp+1,w
 15279  01C8  3DDD               	addwfc	___flmul@prod+1,f
 15280  01C9  3000               	movlw	0
 15281  01CA  3DDE               	addwfc	___flmul@prod+2,f
 15282  01CB  3DDF               	addwfc	___flmul@prod+3,f
 15283  01CC  084A               	movf	___flmul@b+2,w
 15284  01CD  00D0               	movwf	??___flmul
 15285  01CE  0850               	movf	??___flmul,w
 15286  01CF  00A0               	movwf	__Umul8_16@multiplicand
 15287  01D0  084E               	movf	___flmul@a+2,w
 15288  01D1  3191  21B8  3180   	fcall	__Umul8_16
 15289  01D4  0140               	movlb	0	; select bank0
 15290  01D5  0821               	movf	?__Umul8_16+1,w
 15291  01D6  00E1               	movwf	___flmul@temp+1
 15292  01D7  0820               	movf	?__Umul8_16,w
 15293  01D8  00E0               	movwf	___flmul@temp
 15294  01D9  0860               	movf	___flmul@temp,w
 15295  01DA  00D0               	movwf	??___flmul
 15296  01DB  0861               	movf	___flmul@temp+1,w
 15297  01DC  00D1               	movwf	??___flmul+1
 15298  01DD  01D2               	clrf	??___flmul+2
 15299  01DE  01D3               	clrf	??___flmul+3
 15300  01DF  3008               	movlw	8
 15301  01E0                     u7145:	
 15302  01E0  35D0               	lslf	??___flmul,f
 15303  01E1  0DD1               	rlf	??___flmul+1,f
 15304  01E2  0DD2               	rlf	??___flmul+2,f
 15305  01E3  0DD3               	rlf	??___flmul+3,f
 15306  01E4  0B89               	decfsz	9,f
 15307  01E5  29E0               	goto	u7145
 15308  01E6  0850               	movf	??___flmul,w
 15309  01E7  07DC               	addwf	___flmul@prod,f
 15310  01E8  0851               	movf	??___flmul+1,w
 15311  01E9  3DDD               	addwfc	___flmul@prod+1,f
 15312  01EA  0852               	movf	??___flmul+2,w
 15313  01EB  3DDE               	addwfc	___flmul@prod+2,f
 15314  01EC  0853               	movf	??___flmul+3,w
 15315  01ED  3DDF               	addwfc	___flmul@prod+3,f
 15316  01EE  0857               	movf	___flmul@grs,w
 15317  01EF  00D0               	movwf	??___flmul
 15318  01F0  0858               	movf	___flmul@grs+1,w
 15319  01F1  00D1               	movwf	??___flmul+1
 15320  01F2  0859               	movf	___flmul@grs+2,w
 15321  01F3  00D2               	movwf	??___flmul+2
 15322  01F4  085A               	movf	___flmul@grs+3,w
 15323  01F5  00D3               	movwf	??___flmul+3
 15324  01F6  3018               	movlw	24
 15325  01F7                     u7155:	
 15326  01F7  36D3               	lsrf	??___flmul+3,f
 15327  01F8  0CD2               	rrf	??___flmul+2,f
 15328  01F9  0CD1               	rrf	??___flmul+1,f
 15329  01FA  0CD0               	rrf	??___flmul,f
 15330  01FB  0B89               	decfsz	9,f
 15331  01FC  29F7               	goto	u7155
 15332  01FD  0850               	movf	??___flmul,w
 15333  01FE  07DC               	addwf	___flmul@prod,f
 15334  01FF  0851               	movf	??___flmul+1,w
 15335  0200  3DDD               	addwfc	___flmul@prod+1,f
 15336  0201  0852               	movf	??___flmul+2,w
 15337  0202  3DDE               	addwfc	___flmul@prod+2,f
 15338  0203  0853               	movf	??___flmul+3,w
 15339  0204  3DDF               	addwfc	___flmul@prod+3,f
 15340  0205  3008               	movlw	8
 15341  0206                     u7165:	
 15342  0206  35D7               	lslf	___flmul@grs,f
 15343  0207  0DD8               	rlf	___flmul@grs+1,f
 15344  0208  0DD9               	rlf	___flmul@grs+2,f
 15345  0209  0DDA               	rlf	___flmul@grs+3,f
 15346  020A  0B89               	decfsz	9,f
 15347  020B  2A06               	goto	u7165
 15348  020C  085B               	movf	___flmul@bexp,w
 15349  020D  0756               	addwf	___flmul@aexp,w
 15350  020E  00D0               	movwf	??___flmul
 15351  020F  01D1               	clrf	??___flmul+1
 15352  0210  0DD1               	rlf	??___flmul+1,f
 15353  0211  0850               	movf	??___flmul,w
 15354  0212  3E82               	addlw	130
 15355  0213  00E0               	movwf	___flmul@temp
 15356  0214  30FF               	movlw	255
 15357  0215  3D51               	addwfc	??___flmul+1,w
 15358  0216  00E1               	movwf	___flmul@temp+1
 15359  0217                     l7476:	
 15360  0217  1BDE               	btfsc	___flmul@prod+2,7
 15361  0218  2A2E               	goto	l7478
 15362  0219  3001               	movlw	1
 15363  021A                     u7175:	
 15364  021A  35DC               	lslf	___flmul@prod,f
 15365  021B  0DDD               	rlf	___flmul@prod+1,f
 15366  021C  0DDE               	rlf	___flmul@prod+2,f
 15367  021D  0DDF               	rlf	___flmul@prod+3,f
 15368  021E  0B89               	decfsz	9,f
 15369  021F  2A1A               	goto	u7175
 15370  0220  1BDA               	btfsc	___flmul@grs+3,7
 15371  0221  145C               	bsf	___flmul@prod,0
 15372  0222  3001               	movlw	1
 15373  0223                     u7195:	
 15374  0223  35D7               	lslf	___flmul@grs,f
 15375  0224  0DD8               	rlf	___flmul@grs+1,f
 15376  0225  0DD9               	rlf	___flmul@grs+2,f
 15377  0226  0DDA               	rlf	___flmul@grs+3,f
 15378  0227  0B89               	decfsz	9,f
 15379  0228  2A23               	goto	u7195
 15380  0229  30FF               	movlw	255
 15381  022A  07E0               	addwf	___flmul@temp,f
 15382  022B  30FF               	movlw	255
 15383  022C  3DE1               	addwfc	___flmul@temp+1,f
 15384  022D  2A17               	goto	l7476
 15385  022E                     l7478:	
 15386  022E  01D6               	clrf	___flmul@aexp
 15387  022F  1FDA               	btfss	___flmul@grs+3,7
 15388  0230  2A47               	goto	l7488
 15389  0231  30FF               	movlw	255
 15390  0232  0557               	andwf	___flmul@grs,w
 15391  0233  00D0               	movwf	??___flmul
 15392  0234  30FF               	movlw	255
 15393  0235  0558               	andwf	___flmul@grs+1,w
 15394  0236  00D1               	movwf	??___flmul+1
 15395  0237  30FF               	movlw	255
 15396  0238  0559               	andwf	___flmul@grs+2,w
 15397  0239  00D2               	movwf	??___flmul+2
 15398  023A  307F               	movlw	127
 15399  023B  055A               	andwf	___flmul@grs+3,w
 15400  023C  00D3               	movwf	??___flmul+3
 15401  023D  0853               	movf	??___flmul+3,w
 15402  023E  0452               	iorwf	??___flmul+2,w
 15403  023F  0451               	iorwf	??___flmul+1,w
 15404  0240  0450               	iorwf	??___flmul,w
 15405  0241  1903               	skipnz
 15406  0242  185C               	btfsc	___flmul@prod,0
 15407  0243  2A45               	goto	l7484
 15408  0244  2A47               	goto	l7488
 15409  0245                     l7484:	
 15410  0245  01D6               	clrf	___flmul@aexp
 15411  0246  0AD6               	incf	___flmul@aexp,f
 15412  0247                     l7488:	
 15413  0247  0856               	movf	___flmul@aexp,w
 15414  0248  1903               	btfsc	3,2
 15415  0249  2A70               	goto	l7498
 15416  024A  3001               	movlw	1
 15417  024B  07DC               	addwf	___flmul@prod,f
 15418  024C  3000               	movlw	0
 15419  024D  3DDD               	addwfc	___flmul@prod+1,f
 15420  024E  3000               	movlw	0
 15421  024F  3DDE               	addwfc	___flmul@prod+2,f
 15422  0250  3000               	movlw	0
 15423  0251  3DDF               	addwfc	___flmul@prod+3,f
 15424  0252  1C5F               	btfss	___flmul@prod+3,0
 15425  0253  2A70               	goto	l7498
 15426  0254  085C               	movf	___flmul@prod,w
 15427  0255  00D0               	movwf	??___flmul
 15428  0256  085D               	movf	___flmul@prod+1,w
 15429  0257  00D1               	movwf	??___flmul+1
 15430  0258  085E               	movf	___flmul@prod+2,w
 15431  0259  00D2               	movwf	??___flmul+2
 15432  025A  085F               	movf	___flmul@prod+3,w
 15433  025B  00D3               	movwf	??___flmul+3
 15434  025C  3001               	movlw	1
 15435  025D  00D4               	movwf	??___flmul+4
 15436  025E                     u7265:	
 15437  025E  37D3               	asrf	??___flmul+3,f
 15438  025F  0CD2               	rrf	??___flmul+2,f
 15439  0260  0CD1               	rrf	??___flmul+1,f
 15440  0261  0CD0               	rrf	??___flmul,f
 15441  0262  0BD4               	decfsz	??___flmul+4,f
 15442  0263  2A5E               	goto	u7265
 15443  0264  0853               	movf	??___flmul+3,w
 15444  0265  00DF               	movwf	___flmul@prod+3
 15445  0266  0852               	movf	??___flmul+2,w
 15446  0267  00DE               	movwf	___flmul@prod+2
 15447  0268  0851               	movf	??___flmul+1,w
 15448  0269  00DD               	movwf	___flmul@prod+1
 15449  026A  0850               	movf	??___flmul,w
 15450  026B  00DC               	movwf	___flmul@prod
 15451  026C  3001               	movlw	1
 15452  026D  07E0               	addwf	___flmul@temp,f
 15453  026E  3000               	movlw	0
 15454  026F  3DE1               	addwfc	___flmul@temp+1,f
 15455  0270                     l7498:	
 15456  0270  0861               	movf	___flmul@temp+1,w
 15457  0271  3A80               	xorlw	128
 15458  0272  00D0               	movwf	??___flmul
 15459  0273  3080               	movlw	128
 15460  0274  0250               	subwf	??___flmul,w
 15461  0275  1D03               	skipz
 15462  0276  2A79               	goto	u7275
 15463  0277  30FF               	movlw	255
 15464  0278  0260               	subwf	___flmul@temp,w
 15465  0279                     u7275:	
 15466  0279  1C03               	skipc
 15467  027A  2A85               	goto	l7502
 15468  027B  307F               	movlw	127
 15469  027C  0140               	movlb	0	; select bank0
 15470  027D  00DF               	movwf	___flmul@prod+3
 15471  027E  3080               	movlw	128
 15472  027F  00DE               	movwf	___flmul@prod+2
 15473  0280  3000               	movlw	0
 15474  0281  00DD               	movwf	___flmul@prod+1
 15475  0282  3000               	movlw	0
 15476  0283  00DC               	movwf	___flmul@prod
 15477  0284  2AAF               	goto	l2080
 15478  0285                     l7502:	
 15479  0285  0140               	movlb	0	; select bank0
 15480  0286  0861               	movf	___flmul@temp+1,w
 15481  0287  3A80               	xorlw	128
 15482  0288  00D0               	movwf	??___flmul
 15483  0289  3080               	movlw	128
 15484  028A  0250               	subwf	??___flmul,w
 15485  028B  1D03               	skipz
 15486  028C  2A8F               	goto	u7285
 15487  028D  3001               	movlw	1
 15488  028E  0260               	subwf	___flmul@temp,w
 15489  028F                     u7285:	
 15490  028F  1803               	skipnc
 15491  0290  2A9C               	goto	l7508
 15492  0291  3000               	movlw	0
 15493  0292  0140               	movlb	0	; select bank0
 15494  0293  00DF               	movwf	___flmul@prod+3
 15495  0294  3000               	movlw	0
 15496  0295  00DE               	movwf	___flmul@prod+2
 15497  0296  3000               	movlw	0
 15498  0297  00DD               	movwf	___flmul@prod+1
 15499  0298  3000               	movlw	0
 15500  0299  00DC               	movwf	___flmul@prod
 15501  029A  01D5               	clrf	___flmul@sign
 15502  029B  2AAF               	goto	l2080
 15503  029C                     l7508:	
 15504  029C  0140               	movlb	0	; select bank0
 15505  029D  0860               	movf	___flmul@temp,w
 15506  029E  00D0               	movwf	??___flmul
 15507  029F  0850               	movf	??___flmul,w
 15508  02A0  00DB               	movwf	___flmul@bexp
 15509  02A1  30FF               	movlw	255
 15510  02A2  05DC               	andwf	___flmul@prod,f
 15511  02A3  30FF               	movlw	255
 15512  02A4  05DD               	andwf	___flmul@prod+1,f
 15513  02A5  307F               	movlw	127
 15514  02A6  05DE               	andwf	___flmul@prod+2,f
 15515  02A7  3000               	movlw	0
 15516  02A8  05DF               	andwf	___flmul@prod+3,f
 15517  02A9  185B               	btfsc	___flmul@bexp,0
 15518  02AA  17DE               	bsf	___flmul@prod+2,7
 15519  02AB  365B               	lsrf	___flmul@bexp,w
 15520  02AC  00D0               	movwf	??___flmul
 15521  02AD  0850               	movf	??___flmul,w
 15522  02AE  00DF               	movwf	___flmul@prod+3
 15523  02AF                     l2080:	
 15524  02AF  0855               	movf	___flmul@sign,w
 15525  02B0  00D0               	movwf	??___flmul
 15526  02B1  0850               	movf	??___flmul,w
 15527  02B2  04DF               	iorwf	___flmul@prod+3,f
 15528  02B3  085F               	movf	___flmul@prod+3,w
 15529  02B4  00CB               	movwf	?___flmul+3
 15530  02B5  085E               	movf	___flmul@prod+2,w
 15531  02B6  00CA               	movwf	?___flmul+2
 15532  02B7  085D               	movf	___flmul@prod+1,w
 15533  02B8  00C9               	movwf	?___flmul+1
 15534  02B9  085C               	movf	___flmul@prod,w
 15535  02BA  00C8               	movwf	?___flmul
 15536  02BB  0008               	return
 15537  02BC                     __end_of___flmul:	
 15538                           
 15539                           	psect	text30
 15540  11B8                     __ptext30:	
 15541 ;; *************** function __Umul8_16 *****************
 15542 ;; Defined at:
 15543 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;  multiplier      1    wreg     unsigned char 
 15546 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15547 ;; Auto vars:     Size  Location     Type
 15548 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15549 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15550 ;;  product         2    4[BANK0 ] unsigned int 
 15551 ;; Return value:  Size  Location     Type
 15552 ;;                  2    0[BANK0 ] unsigned int 
 15553 ;; Registers used:
 15554 ;;		wreg, status,2, status,0
 15555 ;; Tracked objects:
 15556 ;;		On entry : 0/0
 15557 ;;		On exit  : 0/0
 15558 ;;		Unchanged: 0/0
 15559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15561 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15563 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15564 ;;Total ram usage:        9 bytes
 15565 ;; Hardware stack levels used:    1
 15566 ;; Hardware stack levels required when called:    4
 15567 ;; This function calls:
 15568 ;;		Nothing
 15569 ;; This function is called by:
 15570 ;;		___flmul
 15571 ;; This function uses a non-reentrant model
 15572 ;;
 15573                           
 15574                           
 15575                           ;psect for function __Umul8_16
 15576  11B8                     __Umul8_16:	
 15577                           
 15578                           ;incstack = 0
 15579                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15580                           ;__Umul8_16@multiplier stored from wreg
 15581  11B8  0140               	movlb	0	; select bank0
 15582  11B9  00A8               	movwf	__Umul8_16@multiplier
 15583  11BA  01A4               	clrf	__Umul8_16@product
 15584  11BB  01A5               	clrf	__Umul8_16@product+1
 15585  11BC  0820               	movf	__Umul8_16@multiplicand,w
 15586  11BD  00A2               	movwf	??__Umul8_16
 15587  11BE  01A3               	clrf	??__Umul8_16+1
 15588  11BF  0822               	movf	??__Umul8_16,w
 15589  11C0  00A6               	movwf	__Umul8_16@word_mpld
 15590  11C1  0823               	movf	??__Umul8_16+1,w
 15591  11C2  00A7               	movwf	__Umul8_16@word_mpld+1
 15592  11C3                     l7152:	
 15593  11C3  1C28               	btfss	__Umul8_16@multiplier,0
 15594  11C4  29C9               	goto	l2158
 15595  11C5  0826               	movf	__Umul8_16@word_mpld,w
 15596  11C6  07A4               	addwf	__Umul8_16@product,f
 15597  11C7  0827               	movf	__Umul8_16@word_mpld+1,w
 15598  11C8  3DA5               	addwfc	__Umul8_16@product+1,f
 15599  11C9                     l2158:	
 15600  11C9  3001               	movlw	1
 15601  11CA                     u6605:	
 15602  11CA  35A6               	lslf	__Umul8_16@word_mpld,f
 15603  11CB  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15604  11CC  0B89               	decfsz	9,f
 15605  11CD  29CA               	goto	u6605
 15606  11CE  1003               	clrc
 15607  11CF  0CA8               	rrf	__Umul8_16@multiplier,f
 15608  11D0  0828               	movf	__Umul8_16@multiplier,w
 15609  11D1  1D03               	btfss	3,2
 15610  11D2  29C3               	goto	l7152
 15611  11D3  0825               	movf	__Umul8_16@product+1,w
 15612  11D4  00A1               	movwf	?__Umul8_16+1
 15613  11D5  0824               	movf	__Umul8_16@product,w
 15614  11D6  00A0               	movwf	?__Umul8_16
 15615  11D7  0008               	return
 15616  11D8                     __end_of__Umul8_16:	
 15617                           
 15618                           	psect	text31
 15619  0457                     __ptext31:	
 15620 ;; *************** function ___fldiv *****************
 15621 ;; Defined at:
 15622 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;  a               4   14[BANK0 ] unsigned int 
 15625 ;;  b               4   18[BANK0 ] unsigned int 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;  grs             4   34[BANK0 ] unsigned long 
 15628 ;;  rem             4   27[BANK0 ] unsigned long 
 15629 ;;  new_exp         2   32[BANK0 ] int 
 15630 ;;  aexp            1   39[BANK0 ] unsigned char 
 15631 ;;  bexp            1   38[BANK0 ] unsigned char 
 15632 ;;  sign            1   31[BANK0 ] unsigned char 
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  4   14[BANK0 ] unsigned char 
 15635 ;; Registers used:
 15636 ;;		wreg, status,2, status,0
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15642 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15643 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15644 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15646 ;;Total ram usage:       26 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    4
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		_LED_setColor
 15653 ;;		_beatBrightnessCalculation
 15654 ;; This function uses a non-reentrant model
 15655 ;;
 15656                           
 15657                           
 15658                           ;psect for function ___fldiv
 15659  0457                     ___fldiv:	
 15660                           
 15661                           ;incstack = 0
 15662                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15663  0457  0140               	movlb	0	; select bank0
 15664  0458  0835               	movf	___fldiv@b+3,w
 15665  0459  3980               	andlw	128
 15666  045A  00B6               	movwf	??___fldiv
 15667  045B  0836               	movf	??___fldiv,w
 15668  045C  00BF               	movwf	___fldiv@sign
 15669  045D  3535               	lslf	___fldiv@b+3,w
 15670  045E  00B6               	movwf	??___fldiv
 15671  045F  0836               	movf	??___fldiv,w
 15672  0460  00C6               	movwf	___fldiv@bexp
 15673  0461  1BB4               	btfsc	___fldiv@b+2,7
 15674  0462  1446               	bsf	___fldiv@bexp,0
 15675  0463  0846               	movf	___fldiv@bexp,w
 15676  0464  1903               	btfsc	3,2
 15677  0465  2C74               	goto	l7258
 15678  0466  0A46               	incf	___fldiv@bexp,w
 15679  0467  1D03               	btfss	3,2
 15680  0468  2C71               	goto	l7254
 15681  0469  3000               	movlw	0
 15682  046A  00B5               	movwf	___fldiv@b+3
 15683  046B  3000               	movlw	0
 15684  046C  00B4               	movwf	___fldiv@b+2
 15685  046D  3000               	movlw	0
 15686  046E  00B3               	movwf	___fldiv@b+1
 15687  046F  3000               	movlw	0
 15688  0470  00B2               	movwf	___fldiv@b
 15689  0471                     l7254:	
 15690  0471  17B4               	bsf	___fldiv@b+2,7
 15691  0472  01B5               	clrf	___fldiv@b+3
 15692  0473  2C7C               	goto	l7260
 15693  0474                     l7258:	
 15694  0474  3000               	movlw	0
 15695  0475  00B5               	movwf	___fldiv@b+3
 15696  0476  3000               	movlw	0
 15697  0477  00B4               	movwf	___fldiv@b+2
 15698  0478  3000               	movlw	0
 15699  0479  00B3               	movwf	___fldiv@b+1
 15700  047A  3000               	movlw	0
 15701  047B  00B2               	movwf	___fldiv@b
 15702  047C                     l7260:	
 15703  047C  0831               	movf	___fldiv@a+3,w
 15704  047D  3980               	andlw	128
 15705  047E  00B6               	movwf	??___fldiv
 15706  047F  0836               	movf	??___fldiv,w
 15707  0480  06BF               	xorwf	___fldiv@sign,f
 15708  0481  3531               	lslf	___fldiv@a+3,w
 15709  0482  00B6               	movwf	??___fldiv
 15710  0483  0836               	movf	??___fldiv,w
 15711  0484  00C7               	movwf	___fldiv@aexp
 15712  0485  1BB0               	btfsc	___fldiv@a+2,7
 15713  0486  1447               	bsf	___fldiv@aexp,0
 15714  0487  0847               	movf	___fldiv@aexp,w
 15715  0488  1903               	btfsc	3,2
 15716  0489  2C98               	goto	l7278
 15717  048A  0A47               	incf	___fldiv@aexp,w
 15718  048B  1D03               	btfss	3,2
 15719  048C  2C95               	goto	l7274
 15720  048D  3000               	movlw	0
 15721  048E  00B1               	movwf	___fldiv@a+3
 15722  048F  3000               	movlw	0
 15723  0490  00B0               	movwf	___fldiv@a+2
 15724  0491  3000               	movlw	0
 15725  0492  00AF               	movwf	___fldiv@a+1
 15726  0493  3000               	movlw	0
 15727  0494  00AE               	movwf	___fldiv@a
 15728  0495                     l7274:	
 15729  0495  17B0               	bsf	___fldiv@a+2,7
 15730  0496  01B1               	clrf	___fldiv@a+3
 15731  0497  2CA0               	goto	l2028
 15732  0498                     l7278:	
 15733  0498  3000               	movlw	0
 15734  0499  00B1               	movwf	___fldiv@a+3
 15735  049A  3000               	movlw	0
 15736  049B  00B0               	movwf	___fldiv@a+2
 15737  049C  3000               	movlw	0
 15738  049D  00AF               	movwf	___fldiv@a+1
 15739  049E  3000               	movlw	0
 15740  049F  00AE               	movwf	___fldiv@a
 15741  04A0                     l2028:	
 15742  04A0  0831               	movf	___fldiv@a+3,w
 15743  04A1  0430               	iorwf	___fldiv@a+2,w
 15744  04A2  042F               	iorwf	___fldiv@a+1,w
 15745  04A3  042E               	iorwf	___fldiv@a,w
 15746  04A4  1D03               	skipz
 15747  04A5  2CBF               	goto	l7288
 15748  04A6  3000               	movlw	0
 15749  04A7  00B5               	movwf	___fldiv@b+3
 15750  04A8  3000               	movlw	0
 15751  04A9  00B4               	movwf	___fldiv@b+2
 15752  04AA  3000               	movlw	0
 15753  04AB  00B3               	movwf	___fldiv@b+1
 15754  04AC  3000               	movlw	0
 15755  04AD  00B2               	movwf	___fldiv@b
 15756  04AE  3080               	movlw	128
 15757  04AF  04B4               	iorwf	___fldiv@b+2,f
 15758  04B0  307F               	movlw	127
 15759  04B1  04B5               	iorwf	___fldiv@b+3,f
 15760  04B2                     L14:	
 15761  04B2  083F               	movf	___fldiv@sign,w
 15762  04B3  00B6               	movwf	??___fldiv
 15763  04B4  0836               	movf	??___fldiv,w
 15764  04B5  04B5               	iorwf	___fldiv@b+3,f
 15765  04B6  0835               	movf	___fldiv@b+3,w
 15766  04B7  00B1               	movwf	?___fldiv+3
 15767  04B8  0834               	movf	___fldiv@b+2,w
 15768  04B9  00B0               	movwf	?___fldiv+2
 15769  04BA  0833               	movf	___fldiv@b+1,w
 15770  04BB  00AF               	movwf	?___fldiv+1
 15771  04BC  0832               	movf	___fldiv@b,w
 15772  04BD  00AE               	movwf	?___fldiv
 15773  04BE  0008               	return
 15774  04BF                     l7288:	
 15775  04BF  0846               	movf	___fldiv@bexp,w
 15776  04C0  1D03               	btfss	3,2
 15777  04C1  2CCB               	goto	l7294
 15778  04C2  3000               	movlw	0
 15779  04C3  00B1               	movwf	?___fldiv+3
 15780  04C4  3000               	movlw	0
 15781  04C5  00B0               	movwf	?___fldiv+2
 15782  04C6  3000               	movlw	0
 15783  04C7  00AF               	movwf	?___fldiv+1
 15784  04C8  3000               	movlw	0
 15785  04C9  00AE               	movwf	?___fldiv
 15786  04CA  0008               	return
 15787  04CB                     l7294:	
 15788  04CB  0846               	movf	___fldiv@bexp,w
 15789  04CC  00B6               	movwf	??___fldiv
 15790  04CD  01B7               	clrf	??___fldiv+1
 15791  04CE  0837               	movf	??___fldiv+1,w
 15792  04CF  00B9               	movwf	??___fldiv+3
 15793  04D0  0847               	movf	___fldiv@aexp,w
 15794  04D1  0236               	subwf	??___fldiv,w
 15795  04D2  00B8               	movwf	??___fldiv+2
 15796  04D3  1C03               	skipc
 15797  04D4  03B9               	decf	??___fldiv+3,f
 15798  04D5  0838               	movf	??___fldiv+2,w
 15799  04D6  3E7F               	addlw	127
 15800  04D7  00C0               	movwf	___fldiv@new_exp
 15801  04D8  3000               	movlw	0
 15802  04D9  3D39               	addwfc	??___fldiv+3,w
 15803  04DA  00C1               	movwf	___fldiv@new_exp+1
 15804  04DB  0835               	movf	___fldiv@b+3,w
 15805  04DC  00BE               	movwf	___fldiv@rem+3
 15806  04DD  0834               	movf	___fldiv@b+2,w
 15807  04DE  00BD               	movwf	___fldiv@rem+2
 15808  04DF  0833               	movf	___fldiv@b+1,w
 15809  04E0  00BC               	movwf	___fldiv@rem+1
 15810  04E1  0832               	movf	___fldiv@b,w
 15811  04E2  00BB               	movwf	___fldiv@rem
 15812  04E3  3000               	movlw	0
 15813  04E4  00B5               	movwf	___fldiv@b+3
 15814  04E5  3000               	movlw	0
 15815  04E6  00B4               	movwf	___fldiv@b+2
 15816  04E7  3000               	movlw	0
 15817  04E8  00B3               	movwf	___fldiv@b+1
 15818  04E9  3000               	movlw	0
 15819  04EA  00B2               	movwf	___fldiv@b
 15820  04EB  3000               	movlw	0
 15821  04EC  00C5               	movwf	___fldiv@grs+3
 15822  04ED  3000               	movlw	0
 15823  04EE  00C4               	movwf	___fldiv@grs+2
 15824  04EF  3000               	movlw	0
 15825  04F0  00C3               	movwf	___fldiv@grs+1
 15826  04F1  3000               	movlw	0
 15827  04F2  00C2               	movwf	___fldiv@grs
 15828  04F3  01C7               	clrf	___fldiv@aexp
 15829  04F4                     l7322:	
 15830  04F4  301A               	movlw	26
 15831  04F5  0247               	subwf	___fldiv@aexp,w
 15832  04F6  1803               	btfsc	3,0
 15833  04F7  2D30               	goto	l7324
 15834  04F8  0847               	movf	___fldiv@aexp,w
 15835  04F9  1903               	btfsc	3,2
 15836  04FA  2D12               	goto	l7314
 15837  04FB  3001               	movlw	1
 15838  04FC                     u6845:	
 15839  04FC  35BB               	lslf	___fldiv@rem,f
 15840  04FD  0DBC               	rlf	___fldiv@rem+1,f
 15841  04FE  0DBD               	rlf	___fldiv@rem+2,f
 15842  04FF  0DBE               	rlf	___fldiv@rem+3,f
 15843  0500  0B89               	decfsz	9,f
 15844  0501  2CFC               	goto	u6845
 15845  0502  3001               	movlw	1
 15846  0503                     u6855:	
 15847  0503  35B2               	lslf	___fldiv@b,f
 15848  0504  0DB3               	rlf	___fldiv@b+1,f
 15849  0505  0DB4               	rlf	___fldiv@b+2,f
 15850  0506  0DB5               	rlf	___fldiv@b+3,f
 15851  0507  0B89               	decfsz	9,f
 15852  0508  2D03               	goto	u6855
 15853  0509  1BC5               	btfsc	___fldiv@grs+3,7
 15854  050A  1432               	bsf	___fldiv@b,0
 15855  050B  3001               	movlw	1
 15856  050C                     u6875:	
 15857  050C  35C2               	lslf	___fldiv@grs,f
 15858  050D  0DC3               	rlf	___fldiv@grs+1,f
 15859  050E  0DC4               	rlf	___fldiv@grs+2,f
 15860  050F  0DC5               	rlf	___fldiv@grs+3,f
 15861  0510  0B89               	decfsz	9,f
 15862  0511  2D0C               	goto	u6875
 15863  0512                     l7314:	
 15864  0512  0831               	movf	___fldiv@a+3,w
 15865  0513  023E               	subwf	___fldiv@rem+3,w
 15866  0514  1D03               	skipz
 15867  0515  2D20               	goto	u6885
 15868  0516  0830               	movf	___fldiv@a+2,w
 15869  0517  023D               	subwf	___fldiv@rem+2,w
 15870  0518  1D03               	skipz
 15871  0519  2D20               	goto	u6885
 15872  051A  082F               	movf	___fldiv@a+1,w
 15873  051B  023C               	subwf	___fldiv@rem+1,w
 15874  051C  1D03               	skipz
 15875  051D  2D20               	goto	u6885
 15876  051E  082E               	movf	___fldiv@a,w
 15877  051F  023B               	subwf	___fldiv@rem,w
 15878  0520                     u6885:	
 15879  0520  1C03               	skipc
 15880  0521  2D2B               	goto	l7320
 15881  0522  1745               	bsf	___fldiv@grs+3,6
 15882  0523  082E               	movf	___fldiv@a,w
 15883  0524  02BB               	subwf	___fldiv@rem,f
 15884  0525  082F               	movf	___fldiv@a+1,w
 15885  0526  3BBC               	subwfb	___fldiv@rem+1,f
 15886  0527  0830               	movf	___fldiv@a+2,w
 15887  0528  3BBD               	subwfb	___fldiv@rem+2,f
 15888  0529  0831               	movf	___fldiv@a+3,w
 15889  052A  3BBE               	subwfb	___fldiv@rem+3,f
 15890  052B                     l7320:	
 15891  052B  3001               	movlw	1
 15892  052C  00B6               	movwf	??___fldiv
 15893  052D  0836               	movf	??___fldiv,w
 15894  052E  07C7               	addwf	___fldiv@aexp,f
 15895  052F  2CF4               	goto	l7322
 15896  0530                     l7324:	
 15897  0530  083E               	movf	___fldiv@rem+3,w
 15898  0531  043D               	iorwf	___fldiv@rem+2,w
 15899  0532  043C               	iorwf	___fldiv@rem+1,w
 15900  0533  043B               	iorwf	___fldiv@rem,w
 15901  0534  1D03               	btfss	3,2
 15902  0535  1442               	bsf	___fldiv@grs,0
 15903  0536                     l7338:	
 15904  0536  1BB4               	btfsc	___fldiv@b+2,7
 15905  0537  2D4D               	goto	l7340
 15906  0538  3001               	movlw	1
 15907  0539                     u6915:	
 15908  0539  35B2               	lslf	___fldiv@b,f
 15909  053A  0DB3               	rlf	___fldiv@b+1,f
 15910  053B  0DB4               	rlf	___fldiv@b+2,f
 15911  053C  0DB5               	rlf	___fldiv@b+3,f
 15912  053D  0B89               	decfsz	9,f
 15913  053E  2D39               	goto	u6915
 15914  053F  1BC5               	btfsc	___fldiv@grs+3,7
 15915  0540  1432               	bsf	___fldiv@b,0
 15916  0541  3001               	movlw	1
 15917  0542                     u6935:	
 15918  0542  35C2               	lslf	___fldiv@grs,f
 15919  0543  0DC3               	rlf	___fldiv@grs+1,f
 15920  0544  0DC4               	rlf	___fldiv@grs+2,f
 15921  0545  0DC5               	rlf	___fldiv@grs+3,f
 15922  0546  0B89               	decfsz	9,f
 15923  0547  2D42               	goto	u6935
 15924  0548  30FF               	movlw	255
 15925  0549  07C0               	addwf	___fldiv@new_exp,f
 15926  054A  30FF               	movlw	255
 15927  054B  3DC1               	addwfc	___fldiv@new_exp+1,f
 15928  054C  2D36               	goto	l7338
 15929  054D                     l7340:	
 15930  054D  01C7               	clrf	___fldiv@aexp
 15931  054E  1FC5               	btfss	___fldiv@grs+3,7
 15932  054F  2D66               	goto	l7350
 15933  0550  30FF               	movlw	255
 15934  0551  0542               	andwf	___fldiv@grs,w
 15935  0552  00B6               	movwf	??___fldiv
 15936  0553  30FF               	movlw	255
 15937  0554  0543               	andwf	___fldiv@grs+1,w
 15938  0555  00B7               	movwf	??___fldiv+1
 15939  0556  30FF               	movlw	255
 15940  0557  0544               	andwf	___fldiv@grs+2,w
 15941  0558  00B8               	movwf	??___fldiv+2
 15942  0559  307F               	movlw	127
 15943  055A  0545               	andwf	___fldiv@grs+3,w
 15944  055B  00B9               	movwf	??___fldiv+3
 15945  055C  0839               	movf	??___fldiv+3,w
 15946  055D  0438               	iorwf	??___fldiv+2,w
 15947  055E  0437               	iorwf	??___fldiv+1,w
 15948  055F  0436               	iorwf	??___fldiv,w
 15949  0560  1903               	skipnz
 15950  0561  1832               	btfsc	___fldiv@b,0
 15951  0562  2D64               	goto	l7346
 15952  0563  2D66               	goto	l7350
 15953  0564                     l7346:	
 15954  0564  01C7               	clrf	___fldiv@aexp
 15955  0565  0AC7               	incf	___fldiv@aexp,f
 15956  0566                     l7350:	
 15957  0566  0847               	movf	___fldiv@aexp,w
 15958  0567  1903               	btfsc	3,2
 15959  0568  2D8F               	goto	l7360
 15960  0569  3001               	movlw	1
 15961  056A  07B2               	addwf	___fldiv@b,f
 15962  056B  3000               	movlw	0
 15963  056C  3DB3               	addwfc	___fldiv@b+1,f
 15964  056D  3000               	movlw	0
 15965  056E  3DB4               	addwfc	___fldiv@b+2,f
 15966  056F  3000               	movlw	0
 15967  0570  3DB5               	addwfc	___fldiv@b+3,f
 15968  0571  1C35               	btfss	___fldiv@b+3,0
 15969  0572  2D8F               	goto	l7360
 15970  0573  0832               	movf	___fldiv@b,w
 15971  0574  00B6               	movwf	??___fldiv
 15972  0575  0833               	movf	___fldiv@b+1,w
 15973  0576  00B7               	movwf	??___fldiv+1
 15974  0577  0834               	movf	___fldiv@b+2,w
 15975  0578  00B8               	movwf	??___fldiv+2
 15976  0579  0835               	movf	___fldiv@b+3,w
 15977  057A  00B9               	movwf	??___fldiv+3
 15978  057B  3001               	movlw	1
 15979  057C  00BA               	movwf	??___fldiv+4
 15980  057D                     u7005:	
 15981  057D  37B9               	asrf	??___fldiv+3,f
 15982  057E  0CB8               	rrf	??___fldiv+2,f
 15983  057F  0CB7               	rrf	??___fldiv+1,f
 15984  0580  0CB6               	rrf	??___fldiv,f
 15985  0581  0BBA               	decfsz	??___fldiv+4,f
 15986  0582  2D7D               	goto	u7005
 15987  0583  0839               	movf	??___fldiv+3,w
 15988  0584  00B5               	movwf	___fldiv@b+3
 15989  0585  0838               	movf	??___fldiv+2,w
 15990  0586  00B4               	movwf	___fldiv@b+2
 15991  0587  0837               	movf	??___fldiv+1,w
 15992  0588  00B3               	movwf	___fldiv@b+1
 15993  0589  0836               	movf	??___fldiv,w
 15994  058A  00B2               	movwf	___fldiv@b
 15995  058B  3001               	movlw	1
 15996  058C  07C0               	addwf	___fldiv@new_exp,f
 15997  058D  3000               	movlw	0
 15998  058E  3DC1               	addwfc	___fldiv@new_exp+1,f
 15999  058F                     l7360:	
 16000  058F  0841               	movf	___fldiv@new_exp+1,w
 16001  0590  3A80               	xorlw	128
 16002  0591  00B6               	movwf	??___fldiv
 16003  0592  3080               	movlw	128
 16004  0593  0236               	subwf	??___fldiv,w
 16005  0594  1D03               	skipz
 16006  0595  2D98               	goto	u7015
 16007  0596  30FF               	movlw	255
 16008  0597  0240               	subwf	___fldiv@new_exp,w
 16009  0598                     u7015:	
 16010  0598  1C03               	skipc
 16011  0599  2DA7               	goto	l2049
 16012  059A  30FF               	movlw	255
 16013  059B  0140               	movlb	0	; select bank0
 16014  059C  00C0               	movwf	___fldiv@new_exp
 16015  059D  3000               	movlw	0
 16016  059E  00C1               	movwf	___fldiv@new_exp+1
 16017  059F  3000               	movlw	0
 16018  05A0  00B5               	movwf	___fldiv@b+3
 16019  05A1  3000               	movlw	0
 16020  05A2  00B4               	movwf	___fldiv@b+2
 16021  05A3  3000               	movlw	0
 16022  05A4  00B3               	movwf	___fldiv@b+1
 16023  05A5  3000               	movlw	0
 16024  05A6  00B2               	movwf	___fldiv@b
 16025  05A7                     l2049:	
 16026  05A7  0140               	movlb	0	; select bank0
 16027  05A8  0841               	movf	___fldiv@new_exp+1,w
 16028  05A9  3A80               	xorlw	128
 16029  05AA  00B6               	movwf	??___fldiv
 16030  05AB  3080               	movlw	128
 16031  05AC  0236               	subwf	??___fldiv,w
 16032  05AD  1D03               	skipz
 16033  05AE  2DB1               	goto	u7025
 16034  05AF  3001               	movlw	1
 16035  05B0  0240               	subwf	___fldiv@new_exp,w
 16036  05B1                     u7025:	
 16037  05B1  1803               	skipnc
 16038  05B2  2DBF               	goto	l2050
 16039  05B3  0140               	movlb	0	; select bank0
 16040  05B4  01C0               	clrf	___fldiv@new_exp
 16041  05B5  01C1               	clrf	___fldiv@new_exp+1
 16042  05B6  3000               	movlw	0
 16043  05B7  00B5               	movwf	___fldiv@b+3
 16044  05B8  3000               	movlw	0
 16045  05B9  00B4               	movwf	___fldiv@b+2
 16046  05BA  3000               	movlw	0
 16047  05BB  00B3               	movwf	___fldiv@b+1
 16048  05BC  3000               	movlw	0
 16049  05BD  00B2               	movwf	___fldiv@b
 16050  05BE  01BF               	clrf	___fldiv@sign
 16051  05BF                     l2050:	
 16052  05BF  0140               	movlb	0	; select bank0
 16053  05C0  0840               	movf	___fldiv@new_exp,w
 16054  05C1  00B6               	movwf	??___fldiv
 16055  05C2  0836               	movf	??___fldiv,w
 16056  05C3  00C6               	movwf	___fldiv@bexp
 16057  05C4  1C46               	btfss	___fldiv@bexp,0
 16058  05C5  2DC8               	goto	l7374
 16059  05C6  17B4               	bsf	___fldiv@b+2,7
 16060  05C7  2DCC               	goto	l2052
 16061  05C8                     l7374:	
 16062  05C8  307F               	movlw	127
 16063  05C9  00B6               	movwf	??___fldiv
 16064  05CA  0836               	movf	??___fldiv,w
 16065  05CB  05B4               	andwf	___fldiv@b+2,f
 16066  05CC                     l2052:	
 16067  05CC  3646               	lsrf	___fldiv@bexp,w
 16068  05CD  00B6               	movwf	??___fldiv
 16069  05CE  0836               	movf	??___fldiv,w
 16070  05CF  00B5               	movwf	___fldiv@b+3
 16071  05D0  2CB2               	goto	L14
 16072  05D1                     __end_of___fldiv:	
 16073                           
 16074                           	psect	text32
 16075  117A                     __ptext32:	
 16076 ;; *************** function _PWM4_LoadDutyValue *****************
 16077 ;; Defined at:
 16078 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 16079 ;; Parameters:    Size  Location     Type
 16080 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16081 ;; Auto vars:     Size  Location     Type
 16082 ;;		None
 16083 ;; Return value:  Size  Location     Type
 16084 ;;                  1    wreg      void 
 16085 ;; Registers used:
 16086 ;;		wreg, status,2
 16087 ;; Tracked objects:
 16088 ;;		On entry : 0/0
 16089 ;;		On exit  : 0/0
 16090 ;;		Unchanged: 0/0
 16091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16092 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16095 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16096 ;;Total ram usage:        2 bytes
 16097 ;; Hardware stack levels used:    1
 16098 ;; Hardware stack levels required when called:    4
 16099 ;; This function calls:
 16100 ;;		Nothing
 16101 ;; This function is called by:
 16102 ;;		_LED_setColor
 16103 ;; This function uses a non-reentrant model
 16104 ;;
 16105                           
 16106                           
 16107                           ;psect for function _PWM4_LoadDutyValue
 16108  117A                     _PWM4_LoadDutyValue:	
 16109                           
 16110                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 16111                           
 16112                           ;incstack = 0
 16113                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 16114  117A  3000               	movlw	0
 16115  117B  0141               	movlb	1	; select bank1
 16116  117C  0248               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16117  117D  3080               	movlw	128
 16118  117E  1903               	skipnz
 16119  117F  0247               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16120  1180  1803               	skipnc
 16121  1181  0008               	return
 16122                           
 16123                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 16124  1182  30FF               	movlw	255
 16125  1183  05C7               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16126  1184  3003               	movlw	3
 16127  1185  05C8               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16128                           
 16129                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 16130  1186  0146               	movlb	6	; select bank6
 16131  1187  1E1A               	btfss	26,4	;volatile
 16132  1188  298F               	goto	l7588
 16133                           
 16134                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 16135  1189  3006               	movlw	6
 16136  118A  0141               	movlb	1	; select bank1
 16137  118B                     u7495:	
 16138  118B  35C7               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16139  118C  0DC8               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16140  118D  0B89               	decfsz	9,f
 16141  118E  298B               	goto	u7495
 16142  118F                     l7588:	
 16143                           
 16144                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 16145  118F  0141               	movlb	1	; select bank1
 16146  1190  0848               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16147  1191  0146               	movlb	6	; select bank6
 16148  1192  0099               	movwf	25	;volatile
 16149                           
 16150                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 16151  1193  0141               	movlb	1	; select bank1
 16152  1194  0847               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16153  1195  0146               	movlb	6	; select bank6
 16154  1196  0098               	movwf	24	;volatile
 16155                           
 16156                           ;mcc_generated_files/pwm4.c: 93:         }
 16157  1197  0008               	return
 16158  1198                     __end_of_PWM4_LoadDutyValue:	
 16159                           
 16160                           	psect	text33
 16161  115C                     __ptext33:	
 16162 ;; *************** function _PWM3_LoadDutyValue *****************
 16163 ;; Defined at:
 16164 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 16165 ;; Parameters:    Size  Location     Type
 16166 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16167 ;; Auto vars:     Size  Location     Type
 16168 ;;		None
 16169 ;; Return value:  Size  Location     Type
 16170 ;;                  1    wreg      void 
 16171 ;; Registers used:
 16172 ;;		wreg, status,2
 16173 ;; Tracked objects:
 16174 ;;		On entry : 0/0
 16175 ;;		On exit  : 0/0
 16176 ;;		Unchanged: 0/0
 16177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16178 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16181 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16182 ;;Total ram usage:        2 bytes
 16183 ;; Hardware stack levels used:    1
 16184 ;; Hardware stack levels required when called:    4
 16185 ;; This function calls:
 16186 ;;		Nothing
 16187 ;; This function is called by:
 16188 ;;		_LED_setColor
 16189 ;; This function uses a non-reentrant model
 16190 ;;
 16191                           
 16192                           
 16193                           ;psect for function _PWM3_LoadDutyValue
 16194  115C                     _PWM3_LoadDutyValue:	
 16195                           
 16196                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 16197                           
 16198                           ;incstack = 0
 16199                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 16200  115C  3000               	movlw	0
 16201  115D  0141               	movlb	1	; select bank1
 16202  115E  0248               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16203  115F  3080               	movlw	128
 16204  1160  1903               	skipnz
 16205  1161  0247               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16206  1162  1803               	skipnc
 16207  1163  0008               	return
 16208                           
 16209                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 16210  1164  30FF               	movlw	255
 16211  1165  05C7               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16212  1166  3003               	movlw	3
 16213  1167  05C8               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16214                           
 16215                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 16216  1168  0146               	movlb	6	; select bank6
 16217  1169  1E16               	btfss	22,4	;volatile
 16218  116A  2971               	goto	l7572
 16219                           
 16220                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 16221  116B  3006               	movlw	6
 16222  116C  0141               	movlb	1	; select bank1
 16223  116D                     u7465:	
 16224  116D  35C7               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16225  116E  0DC8               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16226  116F  0B89               	decfsz	9,f
 16227  1170  296D               	goto	u7465
 16228  1171                     l7572:	
 16229                           
 16230                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16231  1171  0141               	movlb	1	; select bank1
 16232  1172  0848               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16233  1173  0146               	movlb	6	; select bank6
 16234  1174  0095               	movwf	21	;volatile
 16235                           
 16236                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16237  1175  0141               	movlb	1	; select bank1
 16238  1176  0847               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16239  1177  0146               	movlb	6	; select bank6
 16240  1178  0094               	movwf	20	;volatile
 16241                           
 16242                           ;mcc_generated_files/pwm3.c: 93:         }
 16243  1179  0008               	return
 16244  117A                     __end_of_PWM3_LoadDutyValue:	
 16245                           
 16246                           	psect	text34
 16247  113E                     __ptext34:	
 16248 ;; *************** function _PWM2_LoadDutyValue *****************
 16249 ;; Defined at:
 16250 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16251 ;; Parameters:    Size  Location     Type
 16252 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16253 ;; Auto vars:     Size  Location     Type
 16254 ;;		None
 16255 ;; Return value:  Size  Location     Type
 16256 ;;                  1    wreg      void 
 16257 ;; Registers used:
 16258 ;;		wreg, status,2
 16259 ;; Tracked objects:
 16260 ;;		On entry : 0/0
 16261 ;;		On exit  : 0/0
 16262 ;;		Unchanged: 0/0
 16263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16264 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16267 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16268 ;;Total ram usage:        2 bytes
 16269 ;; Hardware stack levels used:    1
 16270 ;; Hardware stack levels required when called:    4
 16271 ;; This function calls:
 16272 ;;		Nothing
 16273 ;; This function is called by:
 16274 ;;		_LED_setColor
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           
 16279                           ;psect for function _PWM2_LoadDutyValue
 16280  113E                     _PWM2_LoadDutyValue:	
 16281                           
 16282                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 16283                           
 16284                           ;incstack = 0
 16285                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16286  113E  3000               	movlw	0
 16287  113F  0141               	movlb	1	; select bank1
 16288  1140  0248               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16289  1141  3080               	movlw	128
 16290  1142  1903               	skipnz
 16291  1143  0247               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16292  1144  1803               	skipnc
 16293  1145  0008               	return
 16294                           
 16295                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16296  1146  30FF               	movlw	255
 16297  1147  05C7               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16298  1148  3003               	movlw	3
 16299  1149  05C8               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16300                           
 16301                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16302  114A  0146               	movlb	6	; select bank6
 16303  114B  1E12               	btfss	18,4	;volatile
 16304  114C  2953               	goto	l7620
 16305                           
 16306                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16307  114D  3006               	movlw	6
 16308  114E  0141               	movlb	1	; select bank1
 16309  114F                     u7555:	
 16310  114F  35C7               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16311  1150  0DC8               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16312  1151  0B89               	decfsz	9,f
 16313  1152  294F               	goto	u7555
 16314  1153                     l7620:	
 16315                           
 16316                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16317  1153  0141               	movlb	1	; select bank1
 16318  1154  0848               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16319  1155  0146               	movlb	6	; select bank6
 16320  1156  0091               	movwf	17	;volatile
 16321                           
 16322                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16323  1157  0141               	movlb	1	; select bank1
 16324  1158  0847               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16325  1159  0146               	movlb	6	; select bank6
 16326  115A  0090               	movwf	16	;volatile
 16327                           
 16328                           ;mcc_generated_files/pwm2.c: 93:         }
 16329  115B  0008               	return
 16330  115C                     __end_of_PWM2_LoadDutyValue:	
 16331                           
 16332                           	psect	text35
 16333  1120                     __ptext35:	
 16334 ;; *************** function _PWM1_LoadDutyValue *****************
 16335 ;; Defined at:
 16336 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16337 ;; Parameters:    Size  Location     Type
 16338 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16339 ;; Auto vars:     Size  Location     Type
 16340 ;;		None
 16341 ;; Return value:  Size  Location     Type
 16342 ;;                  1    wreg      void 
 16343 ;; Registers used:
 16344 ;;		wreg, status,2
 16345 ;; Tracked objects:
 16346 ;;		On entry : 0/0
 16347 ;;		On exit  : 0/0
 16348 ;;		Unchanged: 0/0
 16349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16350 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16353 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16354 ;;Total ram usage:        2 bytes
 16355 ;; Hardware stack levels used:    1
 16356 ;; Hardware stack levels required when called:    4
 16357 ;; This function calls:
 16358 ;;		Nothing
 16359 ;; This function is called by:
 16360 ;;		_LED_setColor
 16361 ;; This function uses a non-reentrant model
 16362 ;;
 16363                           
 16364                           
 16365                           ;psect for function _PWM1_LoadDutyValue
 16366  1120                     _PWM1_LoadDutyValue:	
 16367                           
 16368                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 16369                           
 16370                           ;incstack = 0
 16371                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16372  1120  3000               	movlw	0
 16373  1121  0141               	movlb	1	; select bank1
 16374  1122  0248               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16375  1123  3080               	movlw	128
 16376  1124  1903               	skipnz
 16377  1125  0247               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16378  1126  1803               	skipnc
 16379  1127  0008               	return
 16380                           
 16381                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16382  1128  30FF               	movlw	255
 16383  1129  05C7               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16384  112A  3003               	movlw	3
 16385  112B  05C8               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16386                           
 16387                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16388  112C  0146               	movlb	6	; select bank6
 16389  112D  1E0E               	btfss	14,4	;volatile
 16390  112E  2935               	goto	l7604
 16391                           
 16392                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16393  112F  3006               	movlw	6
 16394  1130  0141               	movlb	1	; select bank1
 16395  1131                     u7525:	
 16396  1131  35C7               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16397  1132  0DC8               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16398  1133  0B89               	decfsz	9,f
 16399  1134  2931               	goto	u7525
 16400  1135                     l7604:	
 16401                           
 16402                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16403  1135  0141               	movlb	1	; select bank1
 16404  1136  0848               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16405  1137  0146               	movlb	6	; select bank6
 16406  1138  008D               	movwf	13	;volatile
 16407                           
 16408                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16409  1139  0141               	movlb	1	; select bank1
 16410  113A  0847               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16411  113B  0146               	movlb	6	; select bank6
 16412  113C  008C               	movwf	12	;volatile
 16413                           
 16414                           ;mcc_generated_files/pwm1.c: 93:         }
 16415  113D  0008               	return
 16416  113E                     __end_of_PWM1_LoadDutyValue:	
 16417                           
 16418                           	psect	text36
 16419  1F09                     __ptext36:	
 16420 ;; *************** function _BEAT_detected *****************
 16421 ;; Defined at:
 16422 ;;		line 49 in file "beat.c"
 16423 ;; Parameters:    Size  Location     Type
 16424 ;;		None
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;		None
 16427 ;; Return value:  Size  Location     Type
 16428 ;;                  1    wreg      _Bool 
 16429 ;; Registers used:
 16430 ;;		wreg, status,2, status,0
 16431 ;; Tracked objects:
 16432 ;;		On entry : 0/0
 16433 ;;		On exit  : 0/0
 16434 ;;		Unchanged: 0/0
 16435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16440 ;;Total ram usage:        0 bytes
 16441 ;; Hardware stack levels used:    1
 16442 ;; Hardware stack levels required when called:    4
 16443 ;; This function calls:
 16444 ;;		Nothing
 16445 ;; This function is called by:
 16446 ;;		_LED_task_BEAT_STROBE
 16447 ;; This function uses a non-reentrant model
 16448 ;;
 16449                           
 16450                           
 16451                           ;psect for function _BEAT_detected
 16452  1F09                     _BEAT_detected:	
 16453                           
 16454                           ;beat.c: 50:     if (detected) {
 16455                           
 16456                           ;incstack = 0
 16457                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16458  1F09  0141               	movlb	1	; select bank1
 16459  1F0A  082F               	movf	_detected^(0+128),w
 16460  1F0B  1903               	btfsc	3,2
 16461  1F0C  2F10               	goto	l7708
 16462                           
 16463                           ;beat.c: 51:         detected = 0;
 16464  1F0D  01AF               	clrf	_detected^(0+128)
 16465                           
 16466                           ;beat.c: 52:         return 1;
 16467  1F0E  3001               	movlw	1
 16468  1F0F  0008               	return
 16469  1F10                     l7708:	
 16470                           
 16471                           ;beat.c: 55:     return 0;
 16472  1F10  3000               	movlw	0
 16473  1F11  0008               	return
 16474  1F12                     __end_of_BEAT_detected:	
 16475                           
 16476                           	psect	text37
 16477  1EA2                     __ptext37:	
 16478 ;; *************** function _LED_task_BEAT_MIXED *****************
 16479 ;; Defined at:
 16480 ;;		line 209 in file "led.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;		None
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		None
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16498 ;;Total ram usage:        0 bytes
 16499 ;; Hardware stack levels used:    1
 16500 ;; Hardware stack levels required when called:    4
 16501 ;; This function calls:
 16502 ;;		Nothing
 16503 ;; This function is called by:
 16504 ;;		_LED_task
 16505 ;; This function uses a non-reentrant model
 16506 ;;
 16507                           
 16508                           
 16509                           ;psect for function _LED_task_BEAT_MIXED
 16510  1EA2                     _LED_task_BEAT_MIXED:	
 16511                           
 16512                           ;incstack = 0
 16513                           ; Regs used in _LED_task_BEAT_MIXED: []
 16514  1EA2  0008               	return
 16515  1EA3                     __end_of_LED_task_BEAT_MIXED:	
 16516                           
 16517                           	psect	text38
 16518  1EA1                     __ptext38:	
 16519 ;; *************** function _LED_task_BEAT_FADE *****************
 16520 ;; Defined at:
 16521 ;;		line 195 in file "led.c"
 16522 ;; Parameters:    Size  Location     Type
 16523 ;;		None
 16524 ;; Auto vars:     Size  Location     Type
 16525 ;;		None
 16526 ;; Return value:  Size  Location     Type
 16527 ;;                  1    wreg      void 
 16528 ;; Registers used:
 16529 ;;		None
 16530 ;; Tracked objects:
 16531 ;;		On entry : 0/0
 16532 ;;		On exit  : 0/0
 16533 ;;		Unchanged: 0/0
 16534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16539 ;;Total ram usage:        0 bytes
 16540 ;; Hardware stack levels used:    1
 16541 ;; Hardware stack levels required when called:    4
 16542 ;; This function calls:
 16543 ;;		Nothing
 16544 ;; This function is called by:
 16545 ;;		_LED_task
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           
 16550                           ;psect for function _LED_task_BEAT_FADE
 16551  1EA1                     _LED_task_BEAT_FADE:	
 16552                           
 16553                           ;incstack = 0
 16554                           ; Regs used in _LED_task_BEAT_FADE: []
 16555  1EA1  0008               	return
 16556  1EA2                     __end_of_LED_task_BEAT_FADE:	
 16557                           
 16558                           	psect	text39
 16559  1EA0                     __ptext39:	
 16560 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 16561 ;; Defined at:
 16562 ;;		line 205 in file "led.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;		None
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;		None
 16567 ;; Return value:  Size  Location     Type
 16568 ;;                  1    wreg      void 
 16569 ;; Registers used:
 16570 ;;		None
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16580 ;;Total ram usage:        0 bytes
 16581 ;; Hardware stack levels used:    1
 16582 ;; Hardware stack levels required when called:    4
 16583 ;; This function calls:
 16584 ;;		Nothing
 16585 ;; This function is called by:
 16586 ;;		_LED_task
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590                           
 16591                           ;psect for function _LED_task_BEAT_CONTINUOUS
 16592  1EA0                     _LED_task_BEAT_CONTINUOUS:	
 16593                           
 16594                           ;incstack = 0
 16595                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 16596  1EA0  0008               	return
 16597  1EA1                     __end_of_LED_task_BEAT_CONTINUOUS:	
 16598                           
 16599                           	psect	text40
 16600  1E9F                     __ptext40:	
 16601 ;; *************** function _LED_task_ANIMATION *****************
 16602 ;; Defined at:
 16603 ;;		line 201 in file "led.c"
 16604 ;; Parameters:    Size  Location     Type
 16605 ;;		None
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;		None
 16608 ;; Return value:  Size  Location     Type
 16609 ;;                  1    wreg      void 
 16610 ;; Registers used:
 16611 ;;		None
 16612 ;; Tracked objects:
 16613 ;;		On entry : 0/0
 16614 ;;		On exit  : 0/0
 16615 ;;		Unchanged: 0/0
 16616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16621 ;;Total ram usage:        0 bytes
 16622 ;; Hardware stack levels used:    1
 16623 ;; Hardware stack levels required when called:    4
 16624 ;; This function calls:
 16625 ;;		Nothing
 16626 ;; This function is called by:
 16627 ;;		_LED_task
 16628 ;; This function uses a non-reentrant model
 16629 ;;
 16630                           
 16631                           
 16632                           ;psect for function _LED_task_ANIMATION
 16633  1E9F                     _LED_task_ANIMATION:	
 16634                           
 16635                           ;incstack = 0
 16636                           ; Regs used in _LED_task_ANIMATION: []
 16637  1E9F  0008               	return
 16638  1EA0                     __end_of_LED_task_ANIMATION:	
 16639                           
 16640                           	psect	text41
 16641  1ECB                     __ptext41:	
 16642 ;; *************** function _LED_init *****************
 16643 ;; Defined at:
 16644 ;;		line 46 in file "led.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;		None
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;		None
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      void 
 16651 ;; Registers used:
 16652 ;;		status,2
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/0
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16662 ;;Total ram usage:        0 bytes
 16663 ;; Hardware stack levels used:    1
 16664 ;; Hardware stack levels required when called:    4
 16665 ;; This function calls:
 16666 ;;		Nothing
 16667 ;; This function is called by:
 16668 ;;		_main
 16669 ;; This function uses a non-reentrant model
 16670 ;;
 16671                           
 16672                           
 16673                           ;psect for function _LED_init
 16674  1ECB                     _LED_init:	
 16675                           
 16676                           ;led.c: 47:     manual.red = 0;
 16677                           
 16678                           ;incstack = 0
 16679                           ; Regs used in _LED_init: [status,2]
 16680  1ECB  0141               	movlb	1	; select bank1
 16681  1ECC  01A6               	clrf	(_manual^(0+128)+1)
 16682                           
 16683                           ;led.c: 48:     manual.green = 0;
 16684  1ECD  01A7               	clrf	(_manual^(0+128)+2)
 16685                           
 16686                           ;led.c: 49:     manual.blue = 0;
 16687  1ECE  01A8               	clrf	(_manual^(0+128)+3)
 16688                           
 16689                           ;led.c: 50:     manual.white = 0;
 16690  1ECF  01A5               	clrf	_manual^(0+128)
 16691                           
 16692                           ;led.c: 51:     TRISCbits.TRISC5 = 0;
 16693  1ED0  0140               	movlb	0	; select bank0
 16694  1ED1  1294               	bcf	20,5	;volatile
 16695  1ED2  0008               	return
 16696  1ED3                     __end_of_LED_init:	
 16697                           
 16698                           	psect	text42
 16699  1FD9                     __ptext42:	
 16700 ;; *************** function _DMX_init *****************
 16701 ;; Defined at:
 16702 ;;		line 21 in file "dmx.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;		None
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      void 
 16709 ;; Registers used:
 16710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16720 ;;Total ram usage:        0 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:    9
 16723 ;; This function calls:
 16724 ;;		_EUSART1_SetRxInterruptHandler
 16725 ;;		_TM1650_fastPrintNum
 16726 ;; This function is called by:
 16727 ;;		_main
 16728 ;; This function uses a non-reentrant model
 16729 ;;
 16730                           
 16731                           
 16732                           ;psect for function _DMX_init
 16733  1FD9                     _DMX_init:	
 16734                           
 16735                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16736                           
 16737                           ;incstack = 0
 16738                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16739  1FD9  306B               	movlw	low _DMX_interrupt
 16740  1FDA  0140               	movlb	0	; select bank0
 16741  1FDB  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16742  1FDC  3013               	movlw	high _DMX_interrupt
 16743  1FDD  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16744  1FDE  319F  2700  319F   	fcall	_EUSART1_SetRxInterruptHandler
 16745                           
 16746                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16747  1FE1  0141               	movlb	1	; select bank1
 16748  1FE2  086D               	movf	(_address+1)^(0+128),w
 16749  1FE3  0140               	movlb	0	; select bank0
 16750  1FE4  00B5               	movwf	TM1650_fastPrintNum@num+1
 16751  1FE5  0141               	movlb	1	; select bank1
 16752  1FE6  086C               	movf	_address^(0+128),w
 16753  1FE7  0140               	movlb	0	; select bank0
 16754  1FE8  00B4               	movwf	TM1650_fastPrintNum@num
 16755  1FE9  3187  2734         	fcall	_TM1650_fastPrintNum
 16756  1FEB  0008               	return
 16757  1FEC                     __end_of_DMX_init:	
 16758                           
 16759                           	psect	text43
 16760  1F00                     __ptext43:	
 16761 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16762 ;; Defined at:
 16763 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16764 ;; Parameters:    Size  Location     Type
 16765 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16766 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16767 ;; Auto vars:     Size  Location     Type
 16768 ;;		None
 16769 ;; Return value:  Size  Location     Type
 16770 ;;                  1    wreg      void 
 16771 ;; Registers used:
 16772 ;;		wreg
 16773 ;; Tracked objects:
 16774 ;;		On entry : 0/0
 16775 ;;		On exit  : 0/0
 16776 ;;		Unchanged: 0/0
 16777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16782 ;;Total ram usage:        2 bytes
 16783 ;; Hardware stack levels used:    1
 16784 ;; Hardware stack levels required when called:    4
 16785 ;; This function calls:
 16786 ;;		Nothing
 16787 ;; This function is called by:
 16788 ;;		_EUSART1_Initialize
 16789 ;;		_DMX_init
 16790 ;; This function uses a non-reentrant model
 16791 ;;
 16792                           
 16793                           
 16794                           ;psect for function _EUSART1_SetRxInterruptHandler
 16795  1F00                     _EUSART1_SetRxInterruptHandler:	
 16796                           
 16797                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16798                           
 16799                           ;incstack = 0
 16800                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16801  1F00  0140               	movlb	0	; select bank0
 16802  1F01  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16803  1F02  0142               	movlb	2	; select bank2
 16804  1F03  00E3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 16805  1F04  0140               	movlb	0	; select bank0
 16806  1F05  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16807  1F06  0142               	movlb	2	; select bank2
 16808  1F07  00E2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 16809  1F08  0008               	return
 16810  1F09                     __end_of_EUSART1_SetRxInterruptHandler:	
 16811                           
 16812                           	psect	text44
 16813  02BC                     __ptext44:	
 16814 ;; *************** function _CONTROLLER_task *****************
 16815 ;; Defined at:
 16816 ;;		line 25 in file "controller.c"
 16817 ;; Parameters:    Size  Location     Type
 16818 ;;		None
 16819 ;; Auto vars:     Size  Location     Type
 16820 ;;  isActive        1   79[BANK0 ] _Bool 
 16821 ;; Return value:  Size  Location     Type
 16822 ;;                  1    wreg      void 
 16823 ;; Registers used:
 16824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16825 ;; Tracked objects:
 16826 ;;		On entry : 0/0
 16827 ;;		On exit  : 0/0
 16828 ;;		Unchanged: 0/0
 16829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16832 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16833 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;Total ram usage:        3 bytes
 16835 ;; Hardware stack levels used:    1
 16836 ;; Hardware stack levels required when called:   18
 16837 ;; This function calls:
 16838 ;;		_BUTTONS_isClicked
 16839 ;;		_CLOCK_getTime
 16840 ;;		_CONTROL_BEAT
 16841 ;;		_CONTROL_DMX
 16842 ;;		_CONTROL_MANUAL
 16843 ;;		_TM1650_enable
 16844 ;;		_TM1650_fastPrintNum
 16845 ;;		_getManualColor
 16846 ;;		_menuSelection
 16847 ;;		_printf
 16848 ;; This function is called by:
 16849 ;;		_main
 16850 ;; This function uses a non-reentrant model
 16851 ;;
 16852                           
 16853                           
 16854                           ;psect for function _CONTROLLER_task
 16855  02BC                     _CONTROLLER_task:	
 16856                           
 16857                           ;controller.c: 27:     _Bool isActive = 1;
 16858                           
 16859                           ;incstack = 0
 16860 ;; hardware stack exceeded
 16861                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16862  02BC  0140               	movlb	0	; select bank0
 16863  02BD  01EF               	clrf	CONTROLLER_task@isActive
 16864  02BE  0AEF               	incf	CONTROLLER_task@isActive,f
 16865                           
 16866                           ;controller.c: 28:     upState = BUTTONS_isClicked(up);
 16867  02BF  0141               	movlb	1	; select bank1
 16868  02C0  083D               	movf	_up^(0+128),w
 16869  02C1  319F  27EC  3182   	fcall	_BUTTONS_isClicked
 16870  02C4  0141               	movlb	1	; select bank1
 16871  02C5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16872  02C6  0851               	movf	??_CONTROLLER_task^(0+128),w
 16873  02C7  00B6               	movwf	_upState^(0+128)
 16874                           
 16875                           ;controller.c: 29:     downState = BUTTONS_isClicked(down);
 16876  02C8  083C               	movf	_down^(0+128),w
 16877  02C9  319F  27EC  3182   	fcall	_BUTTONS_isClicked
 16878  02CC  0141               	movlb	1	; select bank1
 16879  02CD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16880  02CE  0851               	movf	??_CONTROLLER_task^(0+128),w
 16881  02CF  00B5               	movwf	_downState^(0+128)
 16882                           
 16883                           ;controller.c: 30:     menuState = BUTTONS_isClicked(menu);
 16884  02D0  083E               	movf	_menu^(0+128),w
 16885  02D1  319F  27EC  3182   	fcall	_BUTTONS_isClicked
 16886  02D4  0141               	movlb	1	; select bank1
 16887  02D5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16888  02D6  0851               	movf	??_CONTROLLER_task^(0+128),w
 16889  02D7  00B4               	movwf	_menuState^(0+128)
 16890                           
 16891                           ;controller.c: 31:     enterState = BUTTONS_isClicked(enter);
 16892  02D8  083B               	movf	_enter^(0+128),w
 16893  02D9  319F  27EC  3182   	fcall	_BUTTONS_isClicked
 16894  02DC  0141               	movlb	1	; select bank1
 16895  02DD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16896  02DE  0851               	movf	??_CONTROLLER_task^(0+128),w
 16897  02DF  00B3               	movwf	_enterState^(0+128)
 16898                           
 16899                           ;controller.c: 33:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 16900  02E0  036E               	decf	_startup^(0+128),w
 16901  02E1  1D03               	btfss	3,2
 16902  02E2  2B08               	goto	l8442
 16903  02E3  319E  26EE  3182   	fcall	_CLOCK_getTime
 16904  02E6  0142               	movlb	2	; select bank2
 16905  02E7  084A               	movf	_startTime^(0+256),w
 16906  02E8  0140               	movlb	0	; select bank0
 16907  02E9  0220               	subwf	?_CLOCK_getTime,w
 16908  02EA  0141               	movlb	1	; select bank1
 16909  02EB  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16910  02EC  0142               	movlb	2	; select bank2
 16911  02ED  084B               	movf	(_startTime+1)^(0+256),w
 16912  02EE  0140               	movlb	0	; select bank0
 16913  02EF  3B21               	subwfb	?_CLOCK_getTime+1,w
 16914  02F0  0141               	movlb	1	; select bank1
 16915  02F1  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16916  02F2  3013               	movlw	19
 16917  02F3  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16918  02F4  3088               	movlw	136
 16919  02F5  1903               	skipnz
 16920  02F6  0251               	subwf	??_CONTROLLER_task^(0+128),w
 16921  02F7  1803               	skipnc
 16922  02F8  2B08               	goto	l8442
 16923                           
 16924                           ;controller.c: 34:         menuSelection();
 16925  02F9  3188  205C  3182   	fcall	_menuSelection
 16926                           
 16927                           ;controller.c: 35:         if (upState || downState || menuState) {
 16928  02FC  0141               	movlb	1	; select bank1
 16929  02FD  0836               	movf	_upState^(0+128),w
 16930  02FE  1D03               	btfss	3,2
 16931  02FF  2B05               	goto	l1017
 16932  0300  0835               	movf	_downState^(0+128),w
 16933  0301  1903               	btfsc	3,2
 16934  0302  0834               	movf	_menuState^(0+128),w
 16935  0303  1903               	btfsc	3,2
 16936  0304  0008               	return
 16937  0305                     l1017:	
 16938                           
 16939                           ;controller.c: 36:             menuPressed = 1;
 16940  0305  01B8               	clrf	_menuPressed^(0+128)
 16941  0306  0AB8               	incf	_menuPressed^(0+128),f
 16942                           
 16943                           ;controller.c: 39:         return;
 16944                           
 16945                           ;controller.c: 37:         }
 16946  0307  0008               	return
 16947  0308                     l8442:	
 16948                           
 16949                           ;controller.c: 42:         if (menuPressed == 0 && startup == 1)
 16950  0308  0838               	movf	_menuPressed^(0+128),w
 16951  0309  1D03               	btfss	3,2
 16952  030A  2B0F               	goto	l1020
 16953  030B  036E               	decf	_startup^(0+128),w
 16954  030C  1D03               	btfss	3,2
 16955  030D  2B0F               	goto	l1020
 16956                           
 16957                           ;controller.c: 43:             currentSelection = MODE_DMX;
 16958  030E  01B9               	clrf	_currentSelection^(0+128)
 16959  030F                     l1020:	
 16960                           
 16961                           ;controller.c: 44:         startup = 0;
 16962  030F  01EE               	clrf	_startup^(0+128)
 16963                           
 16964                           ;controller.c: 47:     if ((menuState || menuPressed) && !enterPressed) {
 16965  0310  0834               	movf	_menuState^(0+128),w
 16966  0311  1903               	btfsc	3,2
 16967  0312  0838               	movf	_menuPressed^(0+128),w
 16968  0313  1903               	btfsc	3,2
 16969  0314  2B1E               	goto	l8458
 16970  0315  0837               	movf	_enterPressed^(0+128),w
 16971  0316  1D03               	btfss	3,2
 16972  0317  2B1E               	goto	l8458
 16973                           
 16974                           ;controller.c: 48:         menuPressed = 1;
 16975  0318  01B8               	clrf	_menuPressed^(0+128)
 16976  0319  0AB8               	incf	_menuPressed^(0+128),f
 16977                           
 16978                           ;controller.c: 49:         menuSelection();
 16979  031A  3188  205C  3182   	fcall	_menuSelection
 16980                           
 16981                           ;controller.c: 50:     } else if (currentSelection == MODE_DMX) {
 16982  031D  2B53               	goto	l8484
 16983  031E                     l8458:	
 16984  031E  0839               	movf	_currentSelection^(0+128),w
 16985  031F  1D03               	btfss	3,2
 16986  0320  2B25               	goto	l8462
 16987                           
 16988                           ;controller.c: 51:         isActive = CONTROL_DMX();
 16989  0321  3189  2170  3182   	fcall	_CONTROL_DMX
 16990  0324  2B4B               	goto	L16
 16991  0325                     l8462:	
 16992                           ;controller.c: 52:     } else if (currentSelection == MODE_ANIMATION) {
 16993                           
 16994  0325  3002               	movlw	2
 16995  0326  0639               	xorwf	_currentSelection^(0+128),w
 16996  0327  1D03               	btfss	3,2
 16997  0328  2B2D               	goto	l8466
 16998                           
 16999                           ;controller.c: 53:         isActive = 1;
 17000  0329  0140               	movlb	0	; select bank0
 17001  032A  01EF               	clrf	CONTROLLER_task@isActive
 17002  032B  0AEF               	incf	CONTROLLER_task@isActive,f
 17003                           
 17004                           ;controller.c: 54:     } else if (currentSelection == MODE_BEAT_STROBE || currentSelecti
      +                          on == MODE_BEAT_FADE || currentSelection == MODE_BEAT_CONTINUOUS || currentSelection == 
      +                          MODE_BEAT_MIXED) {
 17005  032C  2B53               	goto	l8484
 17006  032D                     l8466:	
 17007  032D  0339               	decf	_currentSelection^(0+128),w
 17008  032E  1903               	btfsc	3,2
 17009  032F  2B3C               	goto	l8474
 17010  0330  3004               	movlw	4
 17011  0331  0639               	xorwf	_currentSelection^(0+128),w
 17012  0332  1903               	btfsc	3,2
 17013  0333  2B3C               	goto	l8474
 17014  0334  3005               	movlw	5
 17015  0335  0639               	xorwf	_currentSelection^(0+128),w
 17016  0336  1903               	btfsc	3,2
 17017  0337  2B3C               	goto	l8474
 17018  0338  3006               	movlw	6
 17019  0339  0639               	xorwf	_currentSelection^(0+128),w
 17020  033A  1D03               	btfss	3,2
 17021  033B  2B40               	goto	l8476
 17022  033C                     l8474:	
 17023                           
 17024                           ;controller.c: 55:         isActive = CONTROL_BEAT();
 17025  033C  3197  2714  3182   	fcall	_CONTROL_BEAT
 17026  033F  2B4B               	goto	L16
 17027  0340                     l8476:	
 17028                           ;controller.c: 56:     } else if(currentSelection == MODE_MANUAL && !enterPressed){
 17029                           
 17030  0340  3003               	movlw	3
 17031  0341  0639               	xorwf	_currentSelection^(0+128),w
 17032  0342  1D03               	btfss	3,2
 17033  0343  2B51               	goto	l8482
 17034  0344  0837               	movf	_enterPressed^(0+128),w
 17035  0345  1D03               	btfss	3,2
 17036  0346  2B51               	goto	l8482
 17037                           
 17038                           ;controller.c: 57:         isActive = CONTROL_MANUAL(colorModeSelected);
 17039  0347  0831               	movf	_colorModeSelected^(0+128),w
 17040  0348  318B  2360  3182   	fcall	_CONTROL_MANUAL
 17041  034B                     L16:	
 17042  034B  0141               	movlb	1	; select bank1
 17043  034C  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17044  034D  0851               	movf	??_CONTROLLER_task^(0+128),w
 17045  034E  0140               	movlb	0	; select bank0
 17046  034F  00EF               	movwf	CONTROLLER_task@isActive
 17047                           
 17048                           ;controller.c: 58:     } else {
 17049  0350  2B53               	goto	l8484
 17050  0351                     l8482:	
 17051                           
 17052                           ;controller.c: 59:         isActive = 0;
 17053  0351  0140               	movlb	0	; select bank0
 17054  0352  01EF               	clrf	CONTROLLER_task@isActive
 17055  0353                     l8484:	
 17056                           
 17057                           ;controller.c: 62:     if (isActive) {
 17058  0353  0140               	movlb	0	; select bank0
 17059  0354  086F               	movf	CONTROLLER_task@isActive,w
 17060  0355  1903               	btfsc	3,2
 17061  0356  2B62               	goto	l8488
 17062                           
 17063                           ;controller.c: 63:         lastActiveTime = CLOCK_getTime();
 17064  0357  319E  26EE  3182   	fcall	_CLOCK_getTime
 17065  035A  0140               	movlb	0	; select bank0
 17066  035B  0821               	movf	?_CLOCK_getTime+1,w
 17067  035C  0142               	movlb	2	; select bank2
 17068  035D  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17069  035E  0140               	movlb	0	; select bank0
 17070  035F  0820               	movf	?_CLOCK_getTime,w
 17071  0360  0142               	movlb	2	; select bank2
 17072  0361  00C4               	movwf	_lastActiveTime^(0+256)
 17073  0362                     l8488:	
 17074                           
 17075                           ;controller.c: 66:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 17076  0362  319E  26EE  3182   	fcall	_CLOCK_getTime
 17077  0365  0142               	movlb	2	; select bank2
 17078  0366  0844               	movf	_lastActiveTime^(0+256),w
 17079  0367  0140               	movlb	0	; select bank0
 17080  0368  0220               	subwf	?_CLOCK_getTime,w
 17081  0369  0141               	movlb	1	; select bank1
 17082  036A  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17083  036B  0142               	movlb	2	; select bank2
 17084  036C  0845               	movf	(_lastActiveTime+1)^(0+256),w
 17085  036D  0140               	movlb	0	; select bank0
 17086  036E  3B21               	subwfb	?_CLOCK_getTime+1,w
 17087  036F  0141               	movlb	1	; select bank1
 17088  0370  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17089  0371  3013               	movlw	19
 17090  0372  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17091  0373  3088               	movlw	136
 17092  0374  1903               	skipnz
 17093  0375  0251               	subwf	??_CONTROLLER_task^(0+128),w
 17094  0376  1C03               	skipc
 17095  0377  2B8A               	goto	l8494
 17096                           
 17097                           ;controller.c: 67:         TM1650_enable(0);
 17098  0378  3000               	movlw	0
 17099  0379  3190  202B  3182   	fcall	_TM1650_enable
 17100                           
 17101                           ;controller.c: 68:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 17102  037C  319E  26EE  3182   	fcall	_CLOCK_getTime
 17103  037F  0140               	movlb	0	; select bank0
 17104  0380  0820               	movf	?_CLOCK_getTime,w
 17105  0381  3E77               	addlw	119
 17106  0382  0142               	movlb	2	; select bank2
 17107  0383  00C4               	movwf	_lastActiveTime^(0+256)
 17108  0384  30EC               	movlw	236
 17109  0385  0140               	movlb	0	; select bank0
 17110  0386  3D21               	addwfc	?_CLOCK_getTime+1,w
 17111  0387  0142               	movlb	2	; select bank2
 17112  0388  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17113                           
 17114                           ;controller.c: 69:     } else {
 17115  0389  2B8E               	goto	l8496
 17116  038A                     l8494:	
 17117                           
 17118                           ;controller.c: 70:         TM1650_enable(1);
 17119  038A  3001               	movlw	1
 17120  038B  3190  202B  3182   	fcall	_TM1650_enable
 17121  038E                     l8496:	
 17122                           
 17123                           ;controller.c: 73:     if (currentSelection == MODE_DMX && !menuPressed) {
 17124  038E  0141               	movlb	1	; select bank1
 17125  038F  0839               	movf	_currentSelection^(0+128),w
 17126  0390  1D03               	btfss	3,2
 17127  0391  2C23               	goto	l8504
 17128  0392  0838               	movf	_menuPressed^(0+128),w
 17129  0393  1D03               	btfss	3,2
 17130  0394  2C23               	goto	l8504
 17131                           
 17132                           ;controller.c: 74:         TM1650_fastPrintNum(address);
 17133  0395  086D               	movf	(_address+1)^(0+128),w
 17134  0396  0140               	movlb	0	; select bank0
 17135  0397  00B5               	movwf	TM1650_fastPrintNum@num+1
 17136  0398  0141               	movlb	1	; select bank1
 17137  0399  086C               	movf	_address^(0+128),w
 17138  039A  0140               	movlb	0	; select bank0
 17139  039B  00B4               	movwf	TM1650_fastPrintNum@num
 17140  039C  2C1E               	goto	L17
 17141  039D                     l8506:	
 17142  039D  0838               	movf	_menuPressed^(0+128),w
 17143  039E  1D03               	btfss	3,2
 17144  039F  2C26               	goto	l8512
 17145                           
 17146                           ;controller.c: 77:         printf("HOLD\r");
 17147  03A0  3081               	movlw	low (STR_1| (0+32768))
 17148  03A1  00C7               	movwf	printf@fmt^(0+128)
 17149  03A2  30A0               	movlw	high (STR_1| (0+32768))
 17150  03A3  00C8               	movwf	(printf@fmt^(0+128)+1)
 17151  03A4  3190  2040  3182   	fcall	_printf
 17152  03A7  2C20               	goto	l8502
 17153  03A8                     l8514:	
 17154  03A8  0838               	movf	_menuPressed^(0+128),w
 17155  03A9  1D03               	btfss	3,2
 17156  03AA  2C2A               	goto	l8522
 17157  03AB  0832               	movf	_beatHold^(0+128),w
 17158  03AC  1D03               	btfss	3,2
 17159  03AD  2C2A               	goto	l8522
 17160                           
 17161                           ;controller.c: 80:         printf("SEL1\r");
 17162  03AE  307B               	movlw	low (STR_2| (0+32768))
 17163  03AF  00C7               	movwf	printf@fmt^(0+128)
 17164  03B0  30A0               	movlw	high (STR_2| (0+32768))
 17165  03B1  00C8               	movwf	(printf@fmt^(0+128)+1)
 17166  03B2  3190  2040  3182   	fcall	_printf
 17167  03B5  2C20               	goto	l8502
 17168  03B6                     l8524:	
 17169  03B6  0838               	movf	_menuPressed^(0+128),w
 17170  03B7  1D03               	btfss	3,2
 17171  03B8  2C2D               	goto	l8532
 17172  03B9  0832               	movf	_beatHold^(0+128),w
 17173  03BA  1D03               	btfss	3,2
 17174  03BB  2C2D               	goto	l8532
 17175                           
 17176                           ;controller.c: 83:         printf("B-%u  \r", (uint8_t)beatBrightness);
 17177  03BC  304D               	movlw	low (STR_3| (0+32768))
 17178  03BD  00C7               	movwf	printf@fmt^(0+128)
 17179  03BE  30A0               	movlw	high (STR_3| (0+32768))
 17180  03BF  00C8               	movwf	(printf@fmt^(0+128)+1)
 17181  03C0  086F               	movf	_beatBrightness^(0+128),w
 17182  03C1  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17183  03C2  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17184  03C3  0851               	movf	??_CONTROLLER_task^(0+128),w
 17185  03C4  00C9               	movwf	(?_printf^(0+128)+2)
 17186  03C5  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17187  03C6  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17188  03C7  3190  2040  3182   	fcall	_printf
 17189  03CA  2C20               	goto	l8502
 17190  03CB                     l8534:	
 17191  03CB  0838               	movf	_menuPressed^(0+128),w
 17192  03CC  1D03               	btfss	3,2
 17193  03CD  2C31               	goto	l8542
 17194  03CE  0832               	movf	_beatHold^(0+128),w
 17195  03CF  1D03               	btfss	3,2
 17196  03D0  2C31               	goto	l8542
 17197                           
 17198                           ;controller.c: 86:         printf("F-%d  \r", (uint8_t)beatBrightness);
 17199  03D1  3045               	movlw	low (STR_4| (0+32768))
 17200  03D2  00C7               	movwf	printf@fmt^(0+128)
 17201  03D3  30A0               	movlw	high (STR_4| (0+32768))
 17202  03D4  00C8               	movwf	(printf@fmt^(0+128)+1)
 17203  03D5  086F               	movf	_beatBrightness^(0+128),w
 17204  03D6  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17205  03D7  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17206  03D8  0851               	movf	??_CONTROLLER_task^(0+128),w
 17207  03D9  00C9               	movwf	(?_printf^(0+128)+2)
 17208  03DA  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17209  03DB  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17210  03DC  3190  2040  3182   	fcall	_printf
 17211  03DF  2C20               	goto	l8502
 17212  03E0                     l8544:	
 17213  03E0  0838               	movf	_menuPressed^(0+128),w
 17214  03E1  1D03               	btfss	3,2
 17215  03E2  2C35               	goto	l8552
 17216  03E3  0832               	movf	_beatHold^(0+128),w
 17217  03E4  1D03               	btfss	3,2
 17218  03E5  2C35               	goto	l8552
 17219                           
 17220                           ;controller.c: 89:         printf("C-%d  \r", (uint8_t)beatBrightness);
 17221  03E6  303D               	movlw	low (STR_5| (0+32768))
 17222  03E7  00C7               	movwf	printf@fmt^(0+128)
 17223  03E8  30A0               	movlw	high (STR_5| (0+32768))
 17224  03E9  00C8               	movwf	(printf@fmt^(0+128)+1)
 17225  03EA  086F               	movf	_beatBrightness^(0+128),w
 17226  03EB  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17227  03EC  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17228  03ED  0851               	movf	??_CONTROLLER_task^(0+128),w
 17229  03EE  00C9               	movwf	(?_printf^(0+128)+2)
 17230  03EF  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17231  03F0  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17232  03F1  3190  2040  3182   	fcall	_printf
 17233  03F4  2C20               	goto	l8502
 17234  03F5                     l8554:	
 17235  03F5  0838               	movf	_menuPressed^(0+128),w
 17236  03F6  1D03               	btfss	3,2
 17237  03F7  2C39               	goto	l8562
 17238  03F8  0832               	movf	_beatHold^(0+128),w
 17239  03F9  1D03               	btfss	3,2
 17240  03FA  2C39               	goto	l8562
 17241                           
 17242                           ;controller.c: 92:         printf("A-%d  \r", (uint8_t)beatBrightness);
 17243  03FB  3035               	movlw	low (STR_6| (0+32768))
 17244  03FC  00C7               	movwf	printf@fmt^(0+128)
 17245  03FD  30A0               	movlw	high (STR_6| (0+32768))
 17246  03FE  00C8               	movwf	(printf@fmt^(0+128)+1)
 17247  03FF  086F               	movf	_beatBrightness^(0+128),w
 17248  0400  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17249  0401  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17250  0402  0851               	movf	??_CONTROLLER_task^(0+128),w
 17251  0403  00C9               	movwf	(?_printf^(0+128)+2)
 17252  0404  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17253  0405  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17254  0406  3190  2040  3182   	fcall	_printf
 17255  0409  2C20               	goto	l8502
 17256  040A                     l8568:	
 17257                           
 17258                           ;controller.c: 98:                 TM1650_fastPrintNum(getManualColor(CMODE_RED));
 17259  040A  3000               	movlw	0
 17260  040B  2C11               	goto	L18
 17261  040C                     l8570:	
 17262                           ;controller.c: 99:                 break;
 17263                           
 17264                           
 17265                           ;controller.c: 102:                 TM1650_fastPrintNum(getManualColor(CMODE_GREEN));
 17266  040C  3001               	movlw	1
 17267  040D  2C11               	goto	L18
 17268  040E                     l8572:	
 17269                           ;controller.c: 104:                 break;
 17270                           
 17271                           
 17272                           ;controller.c: 107:                 TM1650_fastPrintNum(getManualColor(CMODE_BLUE));
 17273  040E  3002               	movlw	2
 17274  040F  2C11               	goto	L18
 17275  0410                     l8574:	
 17276                           ;controller.c: 109:                 break;
 17277                           
 17278                           
 17279                           ;controller.c: 112:                 TM1650_fastPrintNum(getManualColor(CMODE_WHITE));
 17280  0410  3003               	movlw	3
 17281  0411                     L18:	
 17282  0411  3192  2243  3182   	fcall	_getManualColor
 17283  0414  0141               	movlb	1	; select bank1
 17284  0415  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17285  0416  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17286  0417  0851               	movf	??_CONTROLLER_task^(0+128),w
 17287  0418  0140               	movlb	0	; select bank0
 17288  0419  00B4               	movwf	TM1650_fastPrintNum@num
 17289  041A  0141               	movlb	1	; select bank1
 17290  041B  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17291  041C  0140               	movlb	0	; select bank0
 17292  041D  00B5               	movwf	TM1650_fastPrintNum@num+1
 17293  041E                     L17:	
 17294  041E  3187  2734         	fcall	_TM1650_fastPrintNum
 17295  0420                     l8502:	
 17296                           ;controller.c: 114:                 break;
 17297                           
 17298                           
 17299                           ;controller.c: 75:         enterPressed = 0;
 17300  0420  0141               	movlb	1	; select bank1
 17301  0421  01B7               	clrf	_enterPressed^(0+128)
 17302                           
 17303                           ;controller.c: 76:     } else if(beatHold == 1 && !menuPressed){
 17304  0422  0008               	return
 17305  0423                     l8504:	
 17306  0423  0332               	decf	_beatHold^(0+128),w
 17307  0424  1903               	btfsc	3,2
 17308  0425  2B9D               	goto	l8506
 17309  0426                     l8512:	
 17310  0426  3002               	movlw	2
 17311  0427  0639               	xorwf	_currentSelection^(0+128),w
 17312  0428  1903               	btfsc	3,2
 17313  0429  2BA8               	goto	l8514
 17314  042A                     l8522:	
 17315  042A  0339               	decf	_currentSelection^(0+128),w
 17316  042B  1903               	btfsc	3,2
 17317  042C  2BB6               	goto	l8524
 17318  042D                     l8532:	
 17319  042D  3004               	movlw	4
 17320  042E  0639               	xorwf	_currentSelection^(0+128),w
 17321  042F  1903               	btfsc	3,2
 17322  0430  2BCB               	goto	l8534
 17323  0431                     l8542:	
 17324  0431  3005               	movlw	5
 17325  0432  0639               	xorwf	_currentSelection^(0+128),w
 17326  0433  1903               	btfsc	3,2
 17327  0434  2BE0               	goto	l8544
 17328  0435                     l8552:	
 17329  0435  3006               	movlw	6
 17330  0436  0639               	xorwf	_currentSelection^(0+128),w
 17331  0437  1903               	btfsc	3,2
 17332  0438  2BF5               	goto	l8554
 17333  0439                     l8562:	
 17334  0439  3003               	movlw	3
 17335  043A  0639               	xorwf	_currentSelection^(0+128),w
 17336  043B  1D03               	btfss	3,2
 17337  043C  0008               	return
 17338  043D  0838               	movf	_menuPressed^(0+128),w
 17339  043E  1D03               	btfss	3,2
 17340  043F  0008               	return
 17341  0440  0831               	movf	_colorModeSelected^(0+128),w
 17342  0441  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17343  0442  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17344                           
 17345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17346                           ; Switch size 1, requested type "simple"
 17347                           ; Number of cases is 1, Range of values is 0 to 0
 17348                           ; switch strategies available:
 17349                           ; Name         Instructions Cycles
 17350                           ; simple_byte            4     3 (average)
 17351                           ; direct_byte            8     6 (fixed)
 17352                           ; jumptable            260     6 (fixed)
 17353                           ;	Chosen strategy is simple_byte
 17354  0443  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17355  0444  3A00               	xorlw	0	; case 0
 17356  0445  1903               	skipnz
 17357  0446  2C48               	goto	l8972
 17358  0447  2C20               	goto	l8502
 17359  0448                     l8972:	
 17360                           
 17361                           ; Switch size 1, requested type "simple"
 17362                           ; Number of cases is 4, Range of values is 0 to 3
 17363                           ; switch strategies available:
 17364                           ; Name         Instructions Cycles
 17365                           ; simple_byte           13     7 (average)
 17366                           ; direct_byte           14     6 (fixed)
 17367                           ; jumptable            260     6 (fixed)
 17368                           ;	Chosen strategy is simple_byte
 17369  0448  0851               	movf	??_CONTROLLER_task^(0+128),w
 17370  0449  3A00               	xorlw	0	; case 0
 17371  044A  1903               	skipnz
 17372  044B  2C0A               	goto	l8568
 17373  044C  3A01               	xorlw	1	; case 1
 17374  044D  1903               	skipnz
 17375  044E  2C0C               	goto	l8570
 17376  044F  3A03               	xorlw	3	; case 2
 17377  0450  1903               	skipnz
 17378  0451  2C0E               	goto	l8572
 17379  0452  3A01               	xorlw	1	; case 3
 17380  0453  1903               	skipnz
 17381  0454  2C10               	goto	l8574
 17382  0455  2C20               	goto	l8502
 17383  0456  0008               	return
 17384  0457                     __end_of_CONTROLLER_task:	
 17385                           
 17386                           	psect	text45
 17387  085C                     __ptext45:	
 17388 ;; *************** function _menuSelection *****************
 17389 ;; Defined at:
 17390 ;;		line 121 in file "controller.c"
 17391 ;; Parameters:    Size  Location     Type
 17392 ;;		None
 17393 ;; Auto vars:     Size  Location     Type
 17394 ;;		None
 17395 ;; Return value:  Size  Location     Type
 17396 ;;                  1    wreg      void 
 17397 ;; Registers used:
 17398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17399 ;; Tracked objects:
 17400 ;;		On entry : 0/0
 17401 ;;		On exit  : 0/0
 17402 ;;		Unchanged: 0/0
 17403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17406 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17408 ;;Total ram usage:        2 bytes
 17409 ;; Hardware stack levels used:    1
 17410 ;; Hardware stack levels required when called:   17
 17411 ;; This function calls:
 17412 ;;		_printf
 17413 ;; This function is called by:
 17414 ;;		_CONTROLLER_task
 17415 ;; This function uses a non-reentrant model
 17416 ;;
 17417                           
 17418                           
 17419                           ;psect for function _menuSelection
 17420  085C                     _menuSelection:	
 17421                           
 17422                           ;controller.c: 123:     if(menuSelected == MODE_BEAT_FADE || menuSelected == MODE_BEAT_C
      +                          ONTINUOUS || menuSelected == MODE_BEAT_MIXED)
 17423                           
 17424                           ;incstack = 0
 17425 ;; hardware stack exceeded
 17426                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17427  085C  3004               	movlw	4
 17428  085D  0141               	movlb	1	; select bank1
 17429  085E  063A               	xorwf	_menuSelected^(0+128),w
 17430  085F  1903               	btfsc	3,2
 17431  0860  2869               	goto	l1063
 17432  0861  3005               	movlw	5
 17433  0862  063A               	xorwf	_menuSelected^(0+128),w
 17434  0863  1903               	btfsc	3,2
 17435  0864  2869               	goto	l1063
 17436  0865  3006               	movlw	6
 17437  0866  063A               	xorwf	_menuSelected^(0+128),w
 17438  0867  1D03               	btfss	3,2
 17439  0868  286B               	goto	l7918
 17440  0869                     l1063:	
 17441                           
 17442                           ;controller.c: 124:         menuSelected = MODE_BEAT_STROBE;
 17443  0869  01BA               	clrf	_menuSelected^(0+128)
 17444  086A  0ABA               	incf	_menuSelected^(0+128),f
 17445  086B                     l7918:	
 17446                           
 17447                           ;controller.c: 126:     if(upState){
 17448  086B  0836               	movf	_upState^(0+128),w
 17449  086C  1903               	btfsc	3,2
 17450  086D  2880               	goto	l7926
 17451                           
 17452                           ;controller.c: 127:         if(menuSelected < 3){
 17453  086E  3003               	movlw	3
 17454  086F  023A               	subwf	_menuSelected^(0+128),w
 17455  0870  1803               	skipnc
 17456  0871  2879               	goto	l7924
 17457                           
 17458                           ;controller.c: 128:             menuSelected++;
 17459  0872  3001               	movlw	1
 17460  0873  0140               	movlb	0	; select bank0
 17461  0874  00ED               	movwf	??_menuSelection
 17462  0875  086D               	movf	??_menuSelection,w
 17463  0876  0141               	movlb	1	; select bank1
 17464  0877  07BA               	addwf	_menuSelected^(0+128),f
 17465                           
 17466                           ;controller.c: 129:         } else {
 17467  0878  288A               	goto	l7934
 17468  0879                     l7924:	
 17469                           
 17470                           ;controller.c: 130:             menuSelected = 3;
 17471  0879  3003               	movlw	3
 17472  087A  0140               	movlb	0	; select bank0
 17473  087B  00ED               	movwf	??_menuSelection
 17474  087C  086D               	movf	??_menuSelection,w
 17475  087D  0141               	movlb	1	; select bank1
 17476  087E  00BA               	movwf	_menuSelected^(0+128)
 17477  087F  288A               	goto	l7934
 17478  0880                     l7926:	
 17479  0880  0835               	movf	_downState^(0+128),w
 17480  0881  1903               	btfsc	3,2
 17481  0882  288A               	goto	l7934
 17482                           
 17483                           ;controller.c: 133:         if(menuSelected > 0){
 17484  0883  083A               	movf	_menuSelected^(0+128),w
 17485  0884  1903               	btfsc	3,2
 17486  0885  2889               	goto	l7932
 17487                           
 17488                           ;controller.c: 134:             menuSelected--;
 17489  0886  3001               	movlw	1
 17490  0887  02BA               	subwf	_menuSelected^(0+128),f
 17491                           
 17492                           ;controller.c: 135:         } else {
 17493  0888  288A               	goto	l7934
 17494  0889                     l7932:	
 17495                           
 17496                           ;controller.c: 136:             menuSelected = 0;
 17497  0889  01BA               	clrf	_menuSelected^(0+128)
 17498  088A                     l7934:	
 17499                           
 17500                           ;controller.c: 140:     if (enterState) {
 17501  088A  0833               	movf	_enterState^(0+128),w
 17502  088B  1903               	btfsc	3,2
 17503  088C  28BF               	goto	l7956
 17504                           
 17505                           ;controller.c: 141:         currentSelection = menuSelected;
 17506  088D  083A               	movf	_menuSelected^(0+128),w
 17507  088E  0140               	movlb	0	; select bank0
 17508  088F  00ED               	movwf	??_menuSelection
 17509  0890  086D               	movf	??_menuSelection,w
 17510  0891  0141               	movlb	1	; select bank1
 17511  0892  00B9               	movwf	_currentSelection^(0+128)
 17512                           
 17513                           ;controller.c: 142:         menuPressed = 0;
 17514  0893  01B8               	clrf	_menuPressed^(0+128)
 17515                           
 17516                           ;controller.c: 143:         enterPressed = 1;
 17517  0894  01B7               	clrf	_enterPressed^(0+128)
 17518  0895  0AB7               	incf	_enterPressed^(0+128),f
 17519  0896  0008               	return
 17520  0897                     l7944:	
 17521                           
 17522                           ;controller.c: 149:             printf("ANI \r");
 17523  0897  3075               	movlw	low (STR_7| (0+32768))
 17524  0898  0141               	movlb	1	; select bank1
 17525  0899  00C7               	movwf	printf@fmt^(0+128)
 17526  089A  30A0               	movlw	high (STR_7| (0+32768))
 17527  089B  00C8               	movwf	(printf@fmt^(0+128)+1)
 17528  089C  3190  2040         	fcall	_printf
 17529                           
 17530                           ;controller.c: 150:             break;
 17531  089E  0008               	return
 17532  089F                     l7946:	
 17533                           
 17534                           ;controller.c: 153:             printf("BEAT\r");
 17535  089F  3087               	movlw	low (STR_8| (0+32768))
 17536  08A0  0141               	movlb	1	; select bank1
 17537  08A1  00C7               	movwf	printf@fmt^(0+128)
 17538  08A2  30A0               	movlw	high (STR_8| (0+32768))
 17539  08A3  00C8               	movwf	(printf@fmt^(0+128)+1)
 17540  08A4  3190  2040         	fcall	_printf
 17541                           
 17542                           ;controller.c: 154:             break;
 17543  08A6  0008               	return
 17544  08A7                     l7948:	
 17545                           
 17546                           ;controller.c: 157:             printf("BEAT\r");
 17547  08A7  3087               	movlw	low (STR_8| (0+32768))
 17548  08A8  0141               	movlb	1	; select bank1
 17549  08A9  00C7               	movwf	printf@fmt^(0+128)
 17550  08AA  30A0               	movlw	high (STR_8| (0+32768))
 17551  08AB  00C8               	movwf	(printf@fmt^(0+128)+1)
 17552  08AC  3190  2040         	fcall	_printf
 17553                           
 17554                           ;controller.c: 158:             break;
 17555  08AE  0008               	return
 17556  08AF                     l7950:	
 17557                           
 17558                           ;controller.c: 161:             printf("PC  \r");
 17559  08AF  3069               	movlw	low (STR_10| (0+32768))
 17560  08B0  0141               	movlb	1	; select bank1
 17561  08B1  00C7               	movwf	printf@fmt^(0+128)
 17562  08B2  30A0               	movlw	high (STR_10| (0+32768))
 17563  08B3  00C8               	movwf	(printf@fmt^(0+128)+1)
 17564  08B4  3190  2040         	fcall	_printf
 17565                           
 17566                           ;controller.c: 162:             break;
 17567  08B6  0008               	return
 17568  08B7                     l7952:	
 17569                           
 17570                           ;controller.c: 165:             printf("LED \r");
 17571  08B7  306F               	movlw	low (STR_11| (0+32768))
 17572  08B8  0141               	movlb	1	; select bank1
 17573  08B9  00C7               	movwf	printf@fmt^(0+128)
 17574  08BA  30A0               	movlw	high (STR_11| (0+32768))
 17575  08BB  00C8               	movwf	(printf@fmt^(0+128)+1)
 17576  08BC  3190  2040         	fcall	_printf
 17577                           
 17578                           ;controller.c: 166:             break;
 17579  08BE  0008               	return
 17580  08BF                     l7956:	
 17581  08BF  083A               	movf	_menuSelected^(0+128),w
 17582  08C0  0140               	movlb	0	; select bank0
 17583  08C1  00ED               	movwf	??_menuSelection
 17584  08C2  01EE               	clrf	??_menuSelection+1
 17585                           
 17586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17587                           ; Switch size 1, requested type "simple"
 17588                           ; Number of cases is 1, Range of values is 0 to 0
 17589                           ; switch strategies available:
 17590                           ; Name         Instructions Cycles
 17591                           ; simple_byte            4     3 (average)
 17592                           ; direct_byte            8     6 (fixed)
 17593                           ; jumptable            260     6 (fixed)
 17594                           ;	Chosen strategy is simple_byte
 17595  08C3  086E               	movf	??_menuSelection+1,w
 17596  08C4  3A00               	xorlw	0	; case 0
 17597  08C5  1903               	skipnz
 17598  08C6  28C8               	goto	l8974
 17599  08C7  28D9               	goto	l1072
 17600  08C8                     l8974:	
 17601                           
 17602                           ; Switch size 1, requested type "simple"
 17603                           ; Number of cases is 5, Range of values is 0 to 4
 17604                           ; switch strategies available:
 17605                           ; Name         Instructions Cycles
 17606                           ; direct_byte           16     6 (fixed)
 17607                           ; simple_byte           16     9 (average)
 17608                           ; jumptable            260     6 (fixed)
 17609                           ;	Chosen strategy is simple_byte
 17610  08C8  086D               	movf	??_menuSelection,w
 17611  08C9  3A00               	xorlw	0	; case 0
 17612  08CA  1903               	skipnz
 17613  08CB  28AF               	goto	l7950
 17614  08CC  3A01               	xorlw	1	; case 1
 17615  08CD  1903               	skipnz
 17616  08CE  289F               	goto	l7946
 17617  08CF  3A03               	xorlw	3	; case 2
 17618  08D0  1903               	skipnz
 17619  08D1  2897               	goto	l7944
 17620  08D2  3A01               	xorlw	1	; case 3
 17621  08D3  1903               	skipnz
 17622  08D4  28B7               	goto	l7952
 17623  08D5  3A07               	xorlw	7	; case 4
 17624  08D6  1903               	skipnz
 17625  08D7  28A7               	goto	l7948
 17626  08D8  28D9               	goto	l1072
 17627  08D9                     l1072:	
 17628  08D9  0008               	return
 17629  08DA                     __end_of_menuSelection:	
 17630                           
 17631                           	psect	text46
 17632  1040                     __ptext46:	
 17633 ;; *************** function _printf *****************
 17634 ;; Defined at:
 17635 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17638 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17639 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17640 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17641 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17642 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(6), 
 17643 ;;		 -> STR_1(6), 
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;  ret             2    0        int 
 17646 ;;  ap              1   76[BANK0 ] PTR void [1]
 17647 ;;		 -> ?_printf(2), 
 17648 ;; Return value:  Size  Location     Type
 17649 ;;                  2    0[BANK1 ] int 
 17650 ;; Registers used:
 17651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17652 ;; Tracked objects:
 17653 ;;		On entry : 0/0
 17654 ;;		On exit  : 0/0
 17655 ;;		Unchanged: 0/0
 17656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17657 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17660 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17661 ;;Total ram usage:       14 bytes
 17662 ;; Hardware stack levels used:    1
 17663 ;; Hardware stack levels required when called:   16
 17664 ;; This function calls:
 17665 ;;		_vfprintf
 17666 ;; This function is called by:
 17667 ;;		_CONTROLLER_task
 17668 ;;		_menuSelection
 17669 ;;		_TM1650_init
 17670 ;;		_TM1650_scrollPrint
 17671 ;; This function uses a non-reentrant model
 17672 ;;
 17673                           
 17674                           
 17675                           ;psect for function _printf
 17676  1040                     _printf:	
 17677                           
 17678                           ;incstack = 0
 17679 ;; hardware stack exceeded
 17680                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17681  1040  30C9               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17682  1041  0140               	movlb	0	; select bank0
 17683  1042  00E9               	movwf	??_printf
 17684  1043  0869               	movf	??_printf,w
 17685  1044  00EC               	movwf	printf@ap
 17686  1045  0141               	movlb	1	; select bank1
 17687  1046  0848               	movf	(printf@fmt+1)^(0+128),w
 17688  1047  0140               	movlb	0	; select bank0
 17689  1048  00E2               	movwf	vfprintf@fmt+1
 17690  1049  0141               	movlb	1	; select bank1
 17691  104A  0847               	movf	printf@fmt^(0+128),w
 17692  104B  0140               	movlb	0	; select bank0
 17693  104C  00E1               	movwf	vfprintf@fmt
 17694  104D  306C               	movlw	(low (printf@ap| 0))& (0+255)
 17695  104E  00E9               	movwf	??_printf
 17696  104F  0869               	movf	??_printf,w
 17697  1050  00E3               	movwf	vfprintf@ap
 17698  1051  3000               	movlw	0
 17699  1052  3193  230C         	fcall	_vfprintf
 17700  1054  0008               	return
 17701  1055                     __end_of_printf:	
 17702                           
 17703                           	psect	text47
 17704  130C                     __ptext47:	
 17705 ;; *************** function _vfprintf *****************
 17706 ;; Defined at:
 17707 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17708 ;; Parameters:    Size  Location     Type
 17709 ;;  fp              1    wreg     PTR struct _IO_FILE
 17710 ;;		 -> NULL(0), 
 17711 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 17712 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17713 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17714 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17715 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17716 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(6), 
 17717 ;;		 -> STR_1(6), 
 17718 ;;  ap              1   67[BANK0 ] PTR PTR void 
 17719 ;;		 -> printf@ap(1), 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 17722 ;;		 -> NULL(0), 
 17723 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 17724 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17725 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17726 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17727 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17728 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(6), 
 17729 ;;		 -> STR_1(6), 
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  2   65[BANK0 ] int 
 17732 ;; Registers used:
 17733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17734 ;; Tracked objects:
 17735 ;;		On entry : 0/0
 17736 ;;		On exit  : 0/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17739 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17740 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17742 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17743 ;;Total ram usage:        8 bytes
 17744 ;; Hardware stack levels used:    1
 17745 ;; Hardware stack levels required when called:   15
 17746 ;; This function calls:
 17747 ;;		_vfpfcnvrt
 17748 ;; This function is called by:
 17749 ;;		_printf
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753                           
 17754                           ;psect for function _vfprintf
 17755  130C                     _vfprintf:	
 17756                           
 17757                           ;incstack = 0
 17758 ;; hardware stack exceeded
 17759                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17760                           ;vfprintf@fp stored from wreg
 17761  130C  0140               	movlb	0	; select bank0
 17762  130D  00E6               	movwf	vfprintf@fp
 17763                           
 17764                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 17765  130E  0862               	movf	vfprintf@fmt+1,w
 17766  130F  00E8               	movwf	vfprintf@cfmt+1
 17767  1310  0861               	movf	vfprintf@fmt,w
 17768  1311  00E7               	movwf	vfprintf@cfmt
 17769                           
 17770                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 17771  1312  0142               	movlb	2	; select bank2
 17772  1313  01B0               	clrf	_nout^(0+256)
 17773  1314  01B1               	clrf	(_nout+1)^(0+256)
 17774  1315                     l7646:	
 17775                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 17776                           
 17777                           
 17778                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 17779  1315  0140               	movlb	0	; select bank0
 17780  1316  0867               	movf	vfprintf@cfmt,w
 17781  1317  0084               	movwf	4
 17782  1318  0868               	movf	vfprintf@cfmt+1,w
 17783  1319  0085               	movwf	5
 17784  131A  0012               	moviw fsr0++
 17785  131B  1903               	btfsc	3,2
 17786  131C  2B32               	goto	l7648
 17787                           
 17788                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 17789  131D  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 17790  131E  00E4               	movwf	??_vfprintf
 17791  131F  0864               	movf	??_vfprintf,w
 17792  1320  00D8               	movwf	vfpfcnvrt@fmt
 17793  1321  0863               	movf	vfprintf@ap,w
 17794  1322  00E5               	movwf	??_vfprintf+1
 17795  1323  0865               	movf	??_vfprintf+1,w
 17796  1324  00D9               	movwf	vfpfcnvrt@ap
 17797  1325  0866               	movf	vfprintf@fp,w
 17798  1326  318A  2209  3193   	fcall	_vfpfcnvrt
 17799  1329  0140               	movlb	0	; select bank0
 17800  132A  0858               	movf	?_vfpfcnvrt,w
 17801  132B  0142               	movlb	2	; select bank2
 17802  132C  07B0               	addwf	_nout^(0+256),f
 17803  132D  0140               	movlb	0	; select bank0
 17804  132E  0859               	movf	?_vfpfcnvrt+1,w
 17805  132F  0142               	movlb	2	; select bank2
 17806  1330  3DB1               	addwfc	(_nout+1)^(0+256),f
 17807  1331  2B15               	goto	l7646
 17808  1332                     l7648:	
 17809                           
 17810                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 17811  1332  0142               	movlb	2	; select bank2
 17812  1333  0831               	movf	(_nout+1)^(0+256),w
 17813  1334  0140               	movlb	0	; select bank0
 17814  1335  00E2               	movwf	?_vfprintf+1
 17815  1336  0142               	movlb	2	; select bank2
 17816  1337  0830               	movf	_nout^(0+256),w
 17817  1338  0140               	movlb	0	; select bank0
 17818  1339  00E1               	movwf	?_vfprintf
 17819  133A  0008               	return
 17820  133B                     __end_of_vfprintf:	
 17821                           
 17822                           	psect	text48
 17823  0A09                     __ptext48:	
 17824 ;; *************** function _vfpfcnvrt *****************
 17825 ;; Defined at:
 17826 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;  fp              1    wreg     PTR struct _IO_FILE
 17829 ;;		 -> NULL(0), 
 17830 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 17831 ;;		 -> vfprintf@cfmt(2), 
 17832 ;;  ap              1   57[BANK0 ] PTR PTR void 
 17833 ;;		 -> printf@ap(1), 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 17836 ;;		 -> NULL(0), 
 17837 ;;  llu             8    0        unsigned long long 
 17838 ;;  ll              8    0        long long 
 17839 ;;  f               4    0        long long 
 17840 ;;  ct              3    0        unsigned char [3]
 17841 ;;  vp              2    0        PTR void 
 17842 ;;  i               2    0        int 
 17843 ;;  done            2    0        int 
 17844 ;;  cp              2    0        PTR unsigned char 
 17845 ;;  c               1   63[BANK0 ] unsigned char 
 17846 ;; Return value:  Size  Location     Type
 17847 ;;                  2   56[BANK0 ] int 
 17848 ;; Registers used:
 17849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17850 ;; Tracked objects:
 17851 ;;		On entry : 0/0
 17852 ;;		On exit  : 0/0
 17853 ;;		Unchanged: 0/0
 17854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17857 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17858 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17859 ;;Total ram usage:        9 bytes
 17860 ;; Hardware stack levels used:    1
 17861 ;; Hardware stack levels required when called:   14
 17862 ;; This function calls:
 17863 ;;		_ctoa
 17864 ;;		_fputc
 17865 ;; This function is called by:
 17866 ;;		_vfprintf
 17867 ;; This function uses a non-reentrant model
 17868 ;;
 17869                           
 17870                           
 17871                           ;psect for function _vfpfcnvrt
 17872  0A09                     _vfpfcnvrt:	
 17873                           
 17874                           ;incstack = 0
 17875 ;; hardware stack exceeded
 17876                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17877                           ;vfpfcnvrt@fp stored from wreg
 17878  0A09  0140               	movlb	0	; select bank0
 17879  0A0A  00E0               	movwf	vfpfcnvrt@fp
 17880                           
 17881                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 17882  0A0B  0858               	movf	vfpfcnvrt@fmt,w
 17883  0A0C  0086               	movwf	6
 17884  0A0D  0187               	clrf	7
 17885  0A0E  3F40               	moviw [0]fsr1
 17886  0A0F  00DA               	movwf	??_vfpfcnvrt
 17887  0A10  3F41               	moviw [1]fsr1
 17888  0A11  00DB               	movwf	??_vfpfcnvrt+1
 17889  0A12  085A               	movf	??_vfpfcnvrt,w
 17890  0A13  0084               	movwf	4
 17891  0A14  085B               	movf	??_vfpfcnvrt+1,w
 17892  0A15  0085               	movwf	5
 17893  0A16  0012               	moviw fsr0++
 17894  0A17  3A25               	xorlw	37
 17895  0A18  1D03               	btfss	3,2
 17896  0A19  2A8E               	goto	l7196
 17897                           
 17898                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 17899  0A1A  0858               	movf	vfpfcnvrt@fmt,w
 17900  0A1B  0086               	movwf	6
 17901  0A1C  0187               	clrf	7
 17902  0A1D  3001               	movlw	1
 17903  0A1E  0781               	addwf	1,f
 17904  0A1F  3141               	addfsr 1,1
 17905  0A20  1803               	skipnc
 17906  0A21  0A81               	incf	1,f
 17907                           
 17908                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 17909  0A22  0142               	movlb	2	; select bank2
 17910  0A23  01B2               	clrf	_width^(0+256)
 17911  0A24  01B3               	clrf	(_width+1)^(0+256)
 17912  0A25  01B6               	clrf	_flags^(0+256)
 17913  0A26  01B7               	clrf	(_flags+1)^(0+256)
 17914                           
 17915                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 17916  0A27  30FF               	movlw	255
 17917  0A28  00B4               	movwf	_prec^(0+256)
 17918  0A29  30FF               	movlw	255
 17919  0A2A  00B5               	movwf	(_prec^(0+256)+1)
 17920                           
 17921                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 17922  0A2B  0140               	movlb	0	; select bank0
 17923  0A2C  0858               	movf	vfpfcnvrt@fmt,w
 17924  0A2D  0086               	movwf	6
 17925  0A2E  0187               	clrf	7
 17926  0A2F  3F40               	moviw [0]fsr1
 17927  0A30  00DA               	movwf	??_vfpfcnvrt
 17928  0A31  3F41               	moviw [1]fsr1
 17929  0A32  00DB               	movwf	??_vfpfcnvrt+1
 17930  0A33  085A               	movf	??_vfpfcnvrt,w
 17931  0A34  0084               	movwf	4
 17932  0A35  085B               	movf	??_vfpfcnvrt+1,w
 17933  0A36  0085               	movwf	5
 17934  0A37  0012               	moviw fsr0++
 17935  0A38  3A63               	xorlw	99
 17936  0A39  1D03               	btfss	3,2
 17937  0A3A  2A5C               	goto	l7180
 17938                           
 17939                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 17940  0A3B  0858               	movf	vfpfcnvrt@fmt,w
 17941  0A3C  0086               	movwf	6
 17942  0A3D  0187               	clrf	7
 17943  0A3E  3001               	movlw	1
 17944  0A3F  0781               	addwf	1,f
 17945  0A40  3141               	addfsr 1,1
 17946  0A41  1803               	skipnc
 17947  0A42  0A81               	incf	1,f
 17948                           
 17949                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17950  0A43  0859               	movf	vfpfcnvrt@ap,w
 17951  0A44  0086               	movwf	6
 17952  0A45  0187               	clrf	7
 17953  0A46  0801               	movf	1,w
 17954  0A47  0084               	movwf	4
 17955  0A48  0185               	clrf	5
 17956  0A49  3002               	movlw	2
 17957  0A4A  0781               	addwf	1,f
 17958  0A4B  0800               	movf	0,w
 17959  0A4C  00DA               	movwf	??_vfpfcnvrt
 17960  0A4D  085A               	movf	??_vfpfcnvrt,w
 17961  0A4E  00DF               	movwf	vfpfcnvrt@c
 17962                           
 17963                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 17964  0A4F  085F               	movf	vfpfcnvrt@c,w
 17965  0A50  00DA               	movwf	??_vfpfcnvrt
 17966  0A51  085A               	movf	??_vfpfcnvrt,w
 17967  0A52  00D2               	movwf	ctoa@c
 17968  0A53  0860               	movf	vfpfcnvrt@fp,w
 17969  0A54  3193  233B         	fcall	_ctoa
 17970  0A56  0140               	movlb	0	; select bank0
 17971  0A57  0853               	movf	?_ctoa+1,w
 17972  0A58  00D9               	movwf	?_vfpfcnvrt+1
 17973  0A59  0852               	movf	?_ctoa,w
 17974  0A5A  00D8               	movwf	?_vfpfcnvrt
 17975  0A5B  0008               	return
 17976  0A5C                     l7180:	
 17977                           
 17978                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 17979  0A5C  0858               	movf	vfpfcnvrt@fmt,w
 17980  0A5D  0086               	movwf	6
 17981  0A5E  0187               	clrf	7
 17982  0A5F  3F40               	moviw [0]fsr1
 17983  0A60  00DA               	movwf	??_vfpfcnvrt
 17984  0A61  3F41               	moviw [1]fsr1
 17985  0A62  00DB               	movwf	??_vfpfcnvrt+1
 17986  0A63  085A               	movf	??_vfpfcnvrt,w
 17987  0A64  0084               	movwf	4
 17988  0A65  085B               	movf	??_vfpfcnvrt+1,w
 17989  0A66  0085               	movwf	5
 17990  0A67  0012               	moviw fsr0++
 17991  0A68  3A25               	xorlw	37
 17992  0A69  1D03               	btfss	3,2
 17993  0A6A  2A83               	goto	l7190
 17994                           
 17995                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 17996  0A6B  0858               	movf	vfpfcnvrt@fmt,w
 17997  0A6C  0086               	movwf	6
 17998  0A6D  0187               	clrf	7
 17999  0A6E  3001               	movlw	1
 18000  0A6F  0781               	addwf	1,f
 18001  0A70  3141               	addfsr 1,1
 18002  0A71  1803               	skipnc
 18003  0A72  0A81               	incf	1,f
 18004                           
 18005                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 18006  0A73  3025               	movlw	37
 18007  0A74  00B9               	movwf	fputc@c
 18008  0A75  3000               	movlw	0
 18009  0A76  00BA               	movwf	fputc@c+1
 18010  0A77  0860               	movf	vfpfcnvrt@fp,w
 18011  0A78  00DA               	movwf	??_vfpfcnvrt
 18012  0A79  085A               	movf	??_vfpfcnvrt,w
 18013  0A7A  00BB               	movwf	fputc@fp
 18014  0A7B  3194  24A1         	fcall	_fputc
 18015  0A7D                     l7186:	
 18016                           
 18017                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 18018  0A7D  3001               	movlw	1
 18019  0A7E  0140               	movlb	0	; select bank0
 18020  0A7F  00D8               	movwf	?_vfpfcnvrt
 18021  0A80  3000               	movlw	0
 18022  0A81  00D9               	movwf	?_vfpfcnvrt+1
 18023  0A82  0008               	return
 18024  0A83                     l7190:	
 18025                           
 18026                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 18027  0A83  0858               	movf	vfpfcnvrt@fmt,w
 18028  0A84  0086               	movwf	6
 18029  0A85  0187               	clrf	7
 18030  0A86  3001               	movlw	1
 18031  0A87  0781               	addwf	1,f
 18032  0A88  3141               	addfsr 1,1
 18033  0A89  1803               	skipnc
 18034  0A8A  0A81               	incf	1,f
 18035                           
 18036                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 18037  0A8B  01D8               	clrf	?_vfpfcnvrt
 18038  0A8C  01D9               	clrf	?_vfpfcnvrt+1
 18039  0A8D  0008               	return
 18040  0A8E                     l7196:	
 18041                           
 18042                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 18043  0A8E  0858               	movf	vfpfcnvrt@fmt,w
 18044  0A8F  0086               	movwf	6
 18045  0A90  0187               	clrf	7
 18046  0A91  3F40               	moviw [0]fsr1
 18047  0A92  00DA               	movwf	??_vfpfcnvrt
 18048  0A93  3F41               	moviw [1]fsr1
 18049  0A94  00DB               	movwf	??_vfpfcnvrt+1
 18050  0A95  085A               	movf	??_vfpfcnvrt,w
 18051  0A96  0084               	movwf	4
 18052  0A97  085B               	movf	??_vfpfcnvrt+1,w
 18053  0A98  0085               	movwf	5
 18054  0A99  0800               	movf	0,w	;code access
 18055  0A9A  00DC               	movwf	??_vfpfcnvrt+2
 18056  0A9B  01DD               	clrf	??_vfpfcnvrt+3
 18057  0A9C  085C               	movf	??_vfpfcnvrt+2,w
 18058  0A9D  00B9               	movwf	fputc@c
 18059  0A9E  085D               	movf	??_vfpfcnvrt+3,w
 18060  0A9F  00BA               	movwf	fputc@c+1
 18061  0AA0  0860               	movf	vfpfcnvrt@fp,w
 18062  0AA1  00DE               	movwf	??_vfpfcnvrt+4
 18063  0AA2  085E               	movf	??_vfpfcnvrt+4,w
 18064  0AA3  00BB               	movwf	fputc@fp
 18065  0AA4  3194  24A1  318A   	fcall	_fputc
 18066                           
 18067                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18068  0AA7  0140               	movlb	0	; select bank0
 18069  0AA8  0858               	movf	vfpfcnvrt@fmt,w
 18070  0AA9  0086               	movwf	6
 18071  0AAA  0187               	clrf	7
 18072  0AAB  3001               	movlw	1
 18073  0AAC  0781               	addwf	1,f
 18074  0AAD  3141               	addfsr 1,1
 18075  0AAE  1803               	skipnc
 18076  0AAF  0A81               	incf	1,f
 18077  0AB0  2A7D               	goto	l7186
 18078  0AB1                     __end_of_vfpfcnvrt:	
 18079                           
 18080                           	psect	text49
 18081  133B                     __ptext49:	
 18082 ;; *************** function _ctoa *****************
 18083 ;; Defined at:
 18084 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18085 ;; Parameters:    Size  Location     Type
 18086 ;;  fp              1    wreg     PTR struct _IO_FILE
 18087 ;;		 -> NULL(0), 
 18088 ;;  c               1   50[BANK0 ] unsigned char 
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 18091 ;;		 -> NULL(0), 
 18092 ;;  w               2   53[BANK0 ] int 
 18093 ;;  l               2    0        int 
 18094 ;; Return value:  Size  Location     Type
 18095 ;;                  2   50[BANK0 ] int 
 18096 ;; Registers used:
 18097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18098 ;; Tracked objects:
 18099 ;;		On entry : 0/0
 18100 ;;		On exit  : 0/0
 18101 ;;		Unchanged: 0/0
 18102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18104 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18106 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18107 ;;Total ram usage:        6 bytes
 18108 ;; Hardware stack levels used:    1
 18109 ;; Hardware stack levels required when called:   13
 18110 ;; This function calls:
 18111 ;;		_pad
 18112 ;; This function is called by:
 18113 ;;		_vfpfcnvrt
 18114 ;; This function uses a non-reentrant model
 18115 ;;
 18116                           
 18117                           
 18118                           ;psect for function _ctoa
 18119  133B                     _ctoa:	
 18120                           
 18121                           ;incstack = 0
 18122 ;; hardware stack exceeded
 18123                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18124                           ;ctoa@fp stored from wreg
 18125  133B  0140               	movlb	0	; select bank0
 18126  133C  00D7               	movwf	ctoa@fp
 18127                           
 18128                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 18129  133D  0142               	movlb	2	; select bank2
 18130  133E  0832               	movf	_width^(0+256),w
 18131  133F  0433               	iorwf	(_width+1)^(0+256),w
 18132  1340  1D03               	btfss	3,2
 18133  1341  2B4A               	goto	l7138
 18134  1342  0833               	movf	(_width+1)^(0+256),w
 18135  1343  0140               	movlb	0	; select bank0
 18136  1344  00D6               	movwf	ctoa@w+1
 18137  1345  0142               	movlb	2	; select bank2
 18138  1346  0832               	movf	_width^(0+256),w
 18139  1347  0140               	movlb	0	; select bank0
 18140  1348  00D5               	movwf	ctoa@w
 18141  1349  2B53               	goto	l7140
 18142  134A                     l7138:	
 18143  134A  0832               	movf	_width^(0+256),w
 18144  134B  3EFF               	addlw	255
 18145  134C  0140               	movlb	0	; select bank0
 18146  134D  00D5               	movwf	ctoa@w
 18147  134E  30FF               	movlw	255
 18148  134F  0142               	movlb	2	; select bank2
 18149  1350  3D33               	addwfc	(_width+1)^(0+256),w
 18150  1351  0140               	movlb	0	; select bank0
 18151  1352  00D6               	movwf	ctoa@w+1
 18152  1353                     l7140:	
 18153                           
 18154                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 18155  1353  0852               	movf	ctoa@c,w
 18156  1354  00D4               	movwf	??_ctoa
 18157  1355  0854               	movf	??_ctoa,w
 18158  1356  0143               	movlb	3	; select bank3
 18159  1357  00A0               	movwf	_dbuf^(0+384)
 18160                           
 18161                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 18162  1358  01A1               	clrf	(_dbuf^(0+384)+1)
 18163                           
 18164                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 18165  1359  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 18166  135A  0140               	movlb	0	; select bank0
 18167  135B  00D4               	movwf	??_ctoa
 18168  135C  0854               	movf	??_ctoa,w
 18169  135D  00C9               	movwf	pad@buf
 18170  135E  0856               	movf	ctoa@w+1,w
 18171  135F  00CB               	movwf	pad@p+1
 18172  1360  0855               	movf	ctoa@w,w
 18173  1361  00CA               	movwf	pad@p
 18174  1362  0857               	movf	ctoa@fp,w
 18175  1363  3195  25ED         	fcall	_pad
 18176  1365  0140               	movlb	0	; select bank0
 18177  1366  084A               	movf	?_pad+1,w
 18178  1367  00D3               	movwf	?_ctoa+1
 18179  1368  0849               	movf	?_pad,w
 18180  1369  00D2               	movwf	?_ctoa
 18181  136A  0008               	return
 18182  136B                     __end_of_ctoa:	
 18183                           
 18184                           	psect	text50
 18185  15ED                     __ptext50:	
 18186 ;; *************** function _pad *****************
 18187 ;; Defined at:
 18188 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18189 ;; Parameters:    Size  Location     Type
 18190 ;;  fp              1    wreg     PTR struct _IO_FILE
 18191 ;;		 -> NULL(0), 
 18192 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 18193 ;;		 -> dbuf(32), 
 18194 ;;  p               2   42[BANK0 ] int 
 18195 ;; Auto vars:     Size  Location     Type
 18196 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 18197 ;;		 -> NULL(0), 
 18198 ;;  w               2   47[BANK0 ] int 
 18199 ;;  i               2   45[BANK0 ] int 
 18200 ;; Return value:  Size  Location     Type
 18201 ;;                  2   41[BANK0 ] int 
 18202 ;; Registers used:
 18203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18204 ;; Tracked objects:
 18205 ;;		On entry : 0/0
 18206 ;;		On exit  : 0/0
 18207 ;;		Unchanged: 0/0
 18208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18209 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18210 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18211 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18212 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18213 ;;Total ram usage:        9 bytes
 18214 ;; Hardware stack levels used:    1
 18215 ;; Hardware stack levels required when called:   12
 18216 ;; This function calls:
 18217 ;;		_fputc
 18218 ;;		_fputs
 18219 ;;		_strlen
 18220 ;; This function is called by:
 18221 ;;		_ctoa
 18222 ;; This function uses a non-reentrant model
 18223 ;;
 18224                           
 18225                           
 18226                           ;psect for function _pad
 18227  15ED                     _pad:	
 18228                           
 18229                           ;incstack = 0
 18230 ;; hardware stack exceeded
 18231                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18232                           ;pad@fp stored from wreg
 18233  15ED  0140               	movlb	0	; select bank0
 18234  15EE  00D1               	movwf	pad@fp
 18235                           
 18236                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 18237  15EF  0142               	movlb	2	; select bank2
 18238  15F0  1C36               	btfss	_flags^(0+256),0
 18239  15F1  2DFB               	goto	l7116
 18240                           
 18241                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 18242  15F2  0140               	movlb	0	; select bank0
 18243  15F3  0851               	movf	pad@fp,w
 18244  15F4  00CC               	movwf	??_pad
 18245  15F5  084C               	movf	??_pad,w
 18246  15F6  00C1               	movwf	fputs@fp
 18247  15F7  0849               	movf	pad@buf,w
 18248  15F8  3192  2269  3195   	fcall	_fputs
 18249  15FB                     l7116:	
 18250                           
 18251                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 18252  15FB  0140               	movlb	0	; select bank0
 18253  15FC  1BCB               	btfsc	pad@p+1,7
 18254  15FD  2E03               	goto	l7120
 18255  15FE  084B               	movf	pad@p+1,w
 18256  15FF  00D0               	movwf	pad@w+1
 18257  1600  084A               	movf	pad@p,w
 18258  1601  00CF               	movwf	pad@w
 18259  1602  2E05               	goto	l1643
 18260  1603                     l7120:	
 18261  1603  01CF               	clrf	pad@w
 18262  1604  01D0               	clrf	pad@w+1
 18263  1605                     l1643:	
 18264                           
 18265                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18266  1605  01CD               	clrf	pad@i
 18267  1606  01CE               	clrf	pad@i+1
 18268  1607                     l7126:	
 18269                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 18270                           
 18271                           
 18272                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 18273  1607  084E               	movf	pad@i+1,w
 18274  1608  3A80               	xorlw	128
 18275  1609  00CC               	movwf	??_pad
 18276  160A  0850               	movf	pad@w+1,w
 18277  160B  3A80               	xorlw	128
 18278  160C  024C               	subwf	??_pad,w
 18279  160D  1D03               	skipz
 18280  160E  2E11               	goto	u6565
 18281  160F  084F               	movf	pad@w,w
 18282  1610  024D               	subwf	pad@i,w
 18283  1611                     u6565:	
 18284  1611  1803               	btfsc	3,0
 18285  1612  2E25               	goto	l1646
 18286                           
 18287                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 18288  1613  3020               	movlw	32
 18289  1614  0140               	movlb	0	; select bank0
 18290  1615  00B9               	movwf	fputc@c
 18291  1616  3000               	movlw	0
 18292  1617  00BA               	movwf	fputc@c+1
 18293  1618  0851               	movf	pad@fp,w
 18294  1619  00CC               	movwf	??_pad
 18295  161A  084C               	movf	??_pad,w
 18296  161B  00BB               	movwf	fputc@fp
 18297  161C  3194  24A1  3195   	fcall	_fputc
 18298                           
 18299                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18300  161F  3001               	movlw	1
 18301  1620  0140               	movlb	0	; select bank0
 18302  1621  07CD               	addwf	pad@i,f
 18303  1622  3000               	movlw	0
 18304  1623  3DCE               	addwfc	pad@i+1,f
 18305  1624  2E07               	goto	l7126
 18306  1625                     l1646:	
 18307                           
 18308                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 18309  1625  0142               	movlb	2	; select bank2
 18310  1626  1836               	btfsc	_flags^(0+256),0
 18311  1627  2E31               	goto	l7130
 18312                           
 18313                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 18314  1628  0140               	movlb	0	; select bank0
 18315  1629  0851               	movf	pad@fp,w
 18316  162A  00CC               	movwf	??_pad
 18317  162B  084C               	movf	??_pad,w
 18318  162C  00C1               	movwf	fputs@fp
 18319  162D  0849               	movf	pad@buf,w
 18320  162E  3192  2269  3195   	fcall	_fputs
 18321  1631                     l7130:	
 18322                           
 18323                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 18324  1631  0140               	movlb	0	; select bank0
 18325  1632  0849               	movf	pad@buf,w
 18326  1633  00A0               	movwf	strlen@s
 18327  1634  3001               	movlw	1
 18328  1635  00A1               	movwf	strlen@s+1
 18329  1636  3190  209C         	fcall	_strlen
 18330  1638  0140               	movlb	0	; select bank0
 18331  1639  084F               	movf	pad@w,w
 18332  163A  0720               	addwf	?_strlen,w
 18333  163B  00C9               	movwf	?_pad
 18334  163C  0850               	movf	pad@w+1,w
 18335  163D  3D21               	addwfc	?_strlen+1,w
 18336  163E  00CA               	movwf	?_pad+1
 18337  163F  0008               	return
 18338  1640                     __end_of_pad:	
 18339                           
 18340                           	psect	text51
 18341  109C                     __ptext51:	
 18342 ;; *************** function _strlen *****************
 18343 ;; Defined at:
 18344 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18347 ;;		 -> dbuf(32), STR_14(9), 
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18350 ;;		 -> dbuf(32), STR_14(9), 
 18351 ;; Return value:  Size  Location     Type
 18352 ;;                  2    0[BANK0 ] unsigned int 
 18353 ;; Registers used:
 18354 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18355 ;; Tracked objects:
 18356 ;;		On entry : 0/0
 18357 ;;		On exit  : 0/0
 18358 ;;		Unchanged: 0/0
 18359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18363 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18364 ;;Total ram usage:        5 bytes
 18365 ;; Hardware stack levels used:    1
 18366 ;; Hardware stack levels required when called:    4
 18367 ;; This function calls:
 18368 ;;		Nothing
 18369 ;; This function is called by:
 18370 ;;		_pad
 18371 ;;		_TM1650_scrollPrint
 18372 ;; This function uses a non-reentrant model
 18373 ;;
 18374                           
 18375                           
 18376                           ;psect for function _strlen
 18377  109C                     _strlen:	
 18378                           
 18379                           ;incstack = 0
 18380                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18381  109C  0140               	movlb	0	; select bank0
 18382  109D  0821               	movf	strlen@s+1,w
 18383  109E  00A4               	movwf	strlen@a+1
 18384  109F  0820               	movf	strlen@s,w
 18385  10A0  00A3               	movwf	strlen@a
 18386  10A1                     l4718:	
 18387  10A1  0820               	movf	strlen@s,w
 18388  10A2  0084               	movwf	4
 18389  10A3  0821               	movf	strlen@s+1,w
 18390  10A4  0085               	movwf	5
 18391  10A5  0012               	moviw fsr0++
 18392  10A6  1903               	btfsc	3,2
 18393  10A7  28AD               	goto	l4720
 18394  10A8  3001               	movlw	1
 18395  10A9  07A0               	addwf	strlen@s,f
 18396  10AA  3000               	movlw	0
 18397  10AB  3DA1               	addwfc	strlen@s+1,f
 18398  10AC  28A1               	goto	l4718
 18399  10AD                     l4720:	
 18400  10AD  0823               	movf	strlen@a,w
 18401  10AE  0220               	subwf	strlen@s,w
 18402  10AF  00A0               	movwf	?_strlen
 18403  10B0  0824               	movf	strlen@a+1,w
 18404  10B1  3B21               	subwfb	strlen@s+1,w
 18405  10B2  00A1               	movwf	?_strlen+1
 18406  10B3  0008               	return
 18407  10B4                     __end_of_strlen:	
 18408                           
 18409                           	psect	text52
 18410  1269                     __ptext52:	
 18411 ;; *************** function _fputs *****************
 18412 ;; Defined at:
 18413 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 18414 ;; Parameters:    Size  Location     Type
 18415 ;;  s               1    wreg     PTR const unsigned char 
 18416 ;;		 -> dbuf(32), 
 18417 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 18418 ;;		 -> NULL(0), 
 18419 ;; Auto vars:     Size  Location     Type
 18420 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 18421 ;;		 -> dbuf(32), 
 18422 ;;  i               2   38[BANK0 ] int 
 18423 ;;  c               1   37[BANK0 ] unsigned char 
 18424 ;; Return value:  Size  Location     Type
 18425 ;;                  2   33[BANK0 ] int 
 18426 ;; Registers used:
 18427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18428 ;; Tracked objects:
 18429 ;;		On entry : 0/0
 18430 ;;		On exit  : 0/0
 18431 ;;		Unchanged: 0/0
 18432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18433 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18434 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18435 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18436 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18437 ;;Total ram usage:        8 bytes
 18438 ;; Hardware stack levels used:    1
 18439 ;; Hardware stack levels required when called:   11
 18440 ;; This function calls:
 18441 ;;		_fputc
 18442 ;; This function is called by:
 18443 ;;		_pad
 18444 ;; This function uses a non-reentrant model
 18445 ;;
 18446                           
 18447                           
 18448                           ;psect for function _fputs
 18449  1269                     _fputs:	
 18450                           
 18451                           ;incstack = 0
 18452 ;; hardware stack exceeded
 18453                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18454                           ;fputs@s stored from wreg
 18455  1269  0140               	movlb	0	; select bank0
 18456  126A  00C8               	movwf	fputs@s
 18457  126B  01C6               	clrf	fputs@i
 18458  126C  01C7               	clrf	fputs@i+1
 18459  126D                     l7110:	
 18460  126D  0846               	movf	fputs@i,w
 18461  126E  0748               	addwf	fputs@s,w
 18462  126F  00C2               	movwf	??_fputs
 18463  1270  0842               	movf	??_fputs,w
 18464  1271  0086               	movwf	6
 18465  1272  3001               	movlw	1	; select bank2/3
 18466  1273  0087               	movwf	7
 18467  1274  0801               	movf	1,w
 18468  1275  00C3               	movwf	??_fputs+1
 18469  1276  0843               	movf	??_fputs+1,w
 18470  1277  00C5               	movwf	fputs@c
 18471  1278  0845               	movf	fputs@c,w
 18472  1279  1903               	btfsc	3,2
 18473  127A  0008               	return
 18474  127B  0845               	movf	fputs@c,w
 18475  127C  00C2               	movwf	??_fputs
 18476  127D  01C3               	clrf	??_fputs+1
 18477  127E  0842               	movf	??_fputs,w
 18478  127F  00B9               	movwf	fputc@c
 18479  1280  0843               	movf	??_fputs+1,w
 18480  1281  00BA               	movwf	fputc@c+1
 18481  1282  0841               	movf	fputs@fp,w
 18482  1283  00C4               	movwf	??_fputs+2
 18483  1284  0844               	movf	??_fputs+2,w
 18484  1285  00BB               	movwf	fputc@fp
 18485  1286  3194  24A1  3192   	fcall	_fputc
 18486  1289  3001               	movlw	1
 18487  128A  0140               	movlb	0	; select bank0
 18488  128B  07C6               	addwf	fputs@i,f
 18489  128C  3000               	movlw	0
 18490  128D  3DC7               	addwfc	fputs@i+1,f
 18491  128E  2A6D               	goto	l7110
 18492  128F                     __end_of_fputs:	
 18493                           
 18494                           	psect	text53
 18495  14A1                     __ptext53:	
 18496 ;; *************** function _fputc *****************
 18497 ;; Defined at:
 18498 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 18499 ;; Parameters:    Size  Location     Type
 18500 ;;  c               2   25[BANK0 ] int 
 18501 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 18502 ;;		 -> NULL(0), 
 18503 ;; Auto vars:     Size  Location     Type
 18504 ;;		None
 18505 ;; Return value:  Size  Location     Type
 18506 ;;                  2   25[BANK0 ] int 
 18507 ;; Registers used:
 18508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18509 ;; Tracked objects:
 18510 ;;		On entry : 0/0
 18511 ;;		On exit  : 0/0
 18512 ;;		Unchanged: 0/0
 18513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18516 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18518 ;;Total ram usage:        8 bytes
 18519 ;; Hardware stack levels used:    1
 18520 ;; Hardware stack levels required when called:   10
 18521 ;; This function calls:
 18522 ;;		_putch
 18523 ;; This function is called by:
 18524 ;;		_pad
 18525 ;;		_vfpfcnvrt
 18526 ;;		_fputs
 18527 ;; This function uses a non-reentrant model
 18528 ;;
 18529                           
 18530                           
 18531                           ;psect for function _fputc
 18532  14A1                     _fputc:	
 18533                           
 18534                           ;incstack = 0
 18535                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18536  14A1  0140               	movlb	0	; select bank0
 18537  14A2  083B               	movf	fputc@fp,w
 18538  14A3  1D03               	btfss	3,2
 18539  14A4  083B               	movf	fputc@fp,w
 18540  14A5  1D03               	btfss	3,2
 18541  14A6  2CAB               	goto	l7096
 18542  14A7  0839               	movf	fputc@c,w
 18543  14A8  3191  21FB         	fcall	_putch
 18544  14AA  0008               	return
 18545  14AB                     l7096:	
 18546  14AB  083B               	movf	fputc@fp,w
 18547  14AC  3E03               	addlw	3
 18548  14AD  0086               	movwf	6
 18549  14AE  0187               	clrf	7
 18550  14AF  0016               	moviw fsr1++
 18551  14B0  0401               	iorwf	1,w
 18552  14B1  1903               	btfsc	3,2
 18553  14B2  2CCE               	goto	l7100
 18554  14B3  083B               	movf	fputc@fp,w
 18555  14B4  3E03               	addlw	3
 18556  14B5  0086               	movwf	6
 18557  14B6  0187               	clrf	7
 18558  14B7  3F40               	moviw [0]fsr1
 18559  14B8  00BC               	movwf	??_fputc
 18560  14B9  3F41               	moviw [1]fsr1
 18561  14BA  00BD               	movwf	??_fputc+1
 18562  14BB  0A3B               	incf	fputc@fp,w
 18563  14BC  0086               	movwf	6
 18564  14BD  0187               	clrf	7
 18565  14BE  3F40               	moviw [0]fsr1
 18566  14BF  00BE               	movwf	??_fputc+2
 18567  14C0  3F41               	moviw [1]fsr1
 18568  14C1  00BF               	movwf	??_fputc+3
 18569  14C2  083F               	movf	??_fputc+3,w
 18570  14C3  3A80               	xorlw	128
 18571  14C4  00C0               	movwf	??_fputc+4
 18572  14C5  083D               	movf	??_fputc+1,w
 18573  14C6  3A80               	xorlw	128
 18574  14C7  0240               	subwf	??_fputc+4,w
 18575  14C8  1D03               	skipz
 18576  14C9  2CCC               	goto	u6525
 18577  14CA  083C               	movf	??_fputc,w
 18578  14CB  023E               	subwf	??_fputc+2,w
 18579  14CC                     u6525:	
 18580  14CC  1803               	skipnc
 18581  14CD  0008               	return
 18582  14CE                     l7100:	
 18583  14CE  0140               	movlb	0	; select bank0
 18584  14CF  0A3B               	incf	fputc@fp,w
 18585  14D0  0086               	movwf	6
 18586  14D1  0187               	clrf	7
 18587  14D2  3001               	movlw	1
 18588  14D3  0781               	addwf	1,f
 18589  14D4  3141               	addfsr 1,1
 18590  14D5  1803               	skipnc
 18591  14D6  0A81               	incf	1,f
 18592  14D7  0008               	return
 18593  14D8                     __end_of_fputc:	
 18594                           
 18595                           	psect	text54
 18596  11FB                     __ptext54:	
 18597 ;; *************** function _putch *****************
 18598 ;; Defined at:
 18599 ;;		line 120 in file "tm1650.c"
 18600 ;; Parameters:    Size  Location     Type
 18601 ;;  n               1    wreg     unsigned char 
 18602 ;; Auto vars:     Size  Location     Type
 18603 ;;  n               1   24[BANK0 ] unsigned char 
 18604 ;; Return value:  Size  Location     Type
 18605 ;;                  1    wreg      void 
 18606 ;; Registers used:
 18607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18608 ;; Tracked objects:
 18609 ;;		On entry : 0/0
 18610 ;;		On exit  : 0/0
 18611 ;;		Unchanged: 0/0
 18612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18617 ;;Total ram usage:        2 bytes
 18618 ;; Hardware stack levels used:    1
 18619 ;; Hardware stack levels required when called:    9
 18620 ;; This function calls:
 18621 ;;		_TM1650_setDigit
 18622 ;; This function is called by:
 18623 ;;		_fputc
 18624 ;; This function uses a non-reentrant model
 18625 ;;
 18626                           
 18627                           
 18628                           ;psect for function _putch
 18629  11FB                     _putch:	
 18630                           
 18631                           ;incstack = 0
 18632                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18633                           ;putch@n stored from wreg
 18634  11FB  0140               	movlb	0	; select bank0
 18635  11FC  00B8               	movwf	putch@n
 18636                           
 18637                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 18638  11FD  3004               	movlw	4
 18639  11FE  0141               	movlb	1	; select bank1
 18640  11FF  0230               	subwf	_position^(0+128),w
 18641  1200  1803               	skipnc
 18642  1201  2A09               	goto	l7082
 18643  1202  300D               	movlw	13
 18644  1203  0140               	movlb	0	; select bank0
 18645  1204  0638               	xorwf	putch@n,w
 18646  1205  1D03               	btfss	3,2
 18647  1206  0838               	movf	putch@n,w
 18648  1207  1D03               	btfss	3,2
 18649  1208  2A0B               	goto	l7084
 18650  1209                     l7082:	
 18651                           
 18652                           ;tm1650.c: 123:         position = 0;
 18653  1209  0141               	movlb	1	; select bank1
 18654  120A  01B0               	clrf	_position^(0+128)
 18655  120B                     l7084:	
 18656                           
 18657                           ;tm1650.c: 125:     if(n != '\r'){
 18658  120B  300D               	movlw	13
 18659  120C  0140               	movlb	0	; select bank0
 18660  120D  0638               	xorwf	putch@n,w
 18661  120E  1903               	btfsc	3,2
 18662  120F  0008               	return
 18663                           
 18664                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 18665  1210  0838               	movf	putch@n,w
 18666  1211  00B7               	movwf	??_putch
 18667  1212  0837               	movf	??_putch,w
 18668  1213  00B4               	movwf	TM1650_setDigit@data
 18669  1214  0141               	movlb	1	; select bank1
 18670  1215  0830               	movf	_position^(0+128),w
 18671  1216  319F  27C7         	fcall	_TM1650_setDigit
 18672                           
 18673                           ;tm1650.c: 127:         position++;
 18674  1218  3001               	movlw	1
 18675  1219  0140               	movlb	0	; select bank0
 18676  121A  00B7               	movwf	??_putch
 18677  121B  0837               	movf	??_putch,w
 18678  121C  0141               	movlb	1	; select bank1
 18679  121D  07B0               	addwf	_position^(0+128),f
 18680  121E  0008               	return
 18681  121F                     __end_of_putch:	
 18682                           
 18683                           	psect	text55
 18684  1FC7                     __ptext55:	
 18685 ;; *************** function _TM1650_setDigit *****************
 18686 ;; Defined at:
 18687 ;;		line 95 in file "tm1650.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  digit           1    wreg     unsigned char 
 18690 ;;  data            1   20[BANK0 ] unsigned char 
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;  digit           1   22[BANK0 ] unsigned char 
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      void 
 18695 ;; Registers used:
 18696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18702 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18705 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18706 ;;Total ram usage:        3 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; Hardware stack levels required when called:    8
 18709 ;; This function calls:
 18710 ;;		_writeData
 18711 ;; This function is called by:
 18712 ;;		_putch
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           
 18717                           ;psect for function _TM1650_setDigit
 18718  1FC7                     _TM1650_setDigit:	
 18719                           
 18720                           ;incstack = 0
 18721                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18722                           ;TM1650_setDigit@digit stored from wreg
 18723  1FC7  0140               	movlb	0	; select bank0
 18724  1FC8  00B6               	movwf	TM1650_setDigit@digit
 18725                           
 18726                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 18727  1FC9  0834               	movf	TM1650_setDigit@data,w
 18728  1FCA  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 18729  1FCB  0084               	movwf	4
 18730  1FCC  3097               	movlw	high ((_charTable+65504)| (0+32768))
 18731  1FCD  1803               	skipnc
 18732  1FCE  3E01               	addlw	1
 18733  1FCF  0085               	movwf	5
 18734  1FD0  0800               	movf	0,w	;code access
 18735  1FD1  00B5               	movwf	??_TM1650_setDigit
 18736  1FD2  0835               	movf	??_TM1650_setDigit,w
 18737  1FD3  00AE               	movwf	writeData@data
 18738  1FD4  0836               	movf	TM1650_setDigit@digit,w
 18739  1FD5  3E34               	addlw	52
 18740  1FD6  3191  2103         	fcall	_writeData
 18741  1FD8  0008               	return
 18742  1FD9                     __end_of_TM1650_setDigit:	
 18743                           
 18744                           	psect	text56
 18745  1243                     __ptext56:	
 18746 ;; *************** function _getManualColor *****************
 18747 ;; Defined at:
 18748 ;;		line 273 in file "led.c"
 18749 ;; Parameters:    Size  Location     Type
 18750 ;;  input           1    wreg     enum E10883
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;  input           1    2[BANK0 ] enum E10883
 18753 ;; Return value:  Size  Location     Type
 18754 ;;                  1    wreg      unsigned char 
 18755 ;; Registers used:
 18756 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18757 ;; Tracked objects:
 18758 ;;		On entry : 0/0
 18759 ;;		On exit  : 0/0
 18760 ;;		Unchanged: 0/0
 18761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18765 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18766 ;;Total ram usage:        3 bytes
 18767 ;; Hardware stack levels used:    1
 18768 ;; Hardware stack levels required when called:    4
 18769 ;; This function calls:
 18770 ;;		Nothing
 18771 ;; This function is called by:
 18772 ;;		_CONTROLLER_task
 18773 ;; This function uses a non-reentrant model
 18774 ;;
 18775                           
 18776                           
 18777                           ;psect for function _getManualColor
 18778  1243                     _getManualColor:	
 18779                           
 18780                           ;incstack = 0
 18781                           ; Regs used in _getManualColor: [wreg-fsr0h+status,2+status,0]
 18782                           ;getManualColor@input stored from wreg
 18783  1243  0140               	movlb	0	; select bank0
 18784  1244  00A2               	movwf	getManualColor@input
 18785                           
 18786                           ;led.c: 275:        switch(input){
 18787  1245  2A52               	goto	l6022
 18788  1246                     l5996:	
 18789                           
 18790                           ;led.c: 278:             return manual.red;
 18791  1246  0141               	movlb	1	; select bank1
 18792  1247  0826               	movf	(_manual^(0+128)+1),w
 18793  1248  0008               	return
 18794  1249                     l6002:	
 18795                           
 18796                           ;led.c: 282:             return manual.green;
 18797  1249  0141               	movlb	1	; select bank1
 18798  124A  0827               	movf	(_manual^(0+128)+2),w
 18799  124B  0008               	return
 18800  124C                     l6008:	
 18801                           
 18802                           ;led.c: 286:             return manual.blue;
 18803  124C  0141               	movlb	1	; select bank1
 18804  124D  0828               	movf	(_manual^(0+128)+3),w
 18805  124E  0008               	return
 18806  124F                     l6014:	
 18807                           
 18808                           ;led.c: 290:             return manual.white;
 18809  124F  0141               	movlb	1	; select bank1
 18810  1250  0825               	movf	_manual^(0+128),w
 18811  1251  0008               	return
 18812  1252                     l6022:	
 18813  1252  0822               	movf	getManualColor@input,w
 18814  1253  00A0               	movwf	??_getManualColor
 18815  1254  01A1               	clrf	??_getManualColor+1
 18816                           
 18817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18818                           ; Switch size 1, requested type "simple"
 18819                           ; Number of cases is 1, Range of values is 0 to 0
 18820                           ; switch strategies available:
 18821                           ; Name         Instructions Cycles
 18822                           ; simple_byte            4     3 (average)
 18823                           ; direct_byte            8     6 (fixed)
 18824                           ; jumptable            260     6 (fixed)
 18825                           ;	Chosen strategy is simple_byte
 18826  1255  0821               	movf	??_getManualColor+1,w
 18827  1256  3A00               	xorlw	0	; case 0
 18828  1257  1903               	skipnz
 18829  1258  2A5A               	goto	l8976
 18830  1259  2A68               	goto	l1466
 18831  125A                     l8976:	
 18832                           
 18833                           ; Switch size 1, requested type "simple"
 18834                           ; Number of cases is 4, Range of values is 0 to 3
 18835                           ; switch strategies available:
 18836                           ; Name         Instructions Cycles
 18837                           ; simple_byte           13     7 (average)
 18838                           ; direct_byte           14     6 (fixed)
 18839                           ; jumptable            260     6 (fixed)
 18840                           ;	Chosen strategy is simple_byte
 18841  125A  0820               	movf	??_getManualColor,w
 18842  125B  3A00               	xorlw	0	; case 0
 18843  125C  1903               	skipnz
 18844  125D  2A46               	goto	l5996
 18845  125E  3A01               	xorlw	1	; case 1
 18846  125F  1903               	skipnz
 18847  1260  2A49               	goto	l6002
 18848  1261  3A03               	xorlw	3	; case 2
 18849  1262  1903               	skipnz
 18850  1263  2A4C               	goto	l6008
 18851  1264  3A01               	xorlw	1	; case 3
 18852  1265  1903               	skipnz
 18853  1266  2A4F               	goto	l6014
 18854  1267  2A68               	goto	l1466
 18855  1268                     l1466:	
 18856  1268  0008               	return
 18857  1269                     __end_of_getManualColor:	
 18858                           
 18859                           	psect	text57
 18860  102B                     __ptext57:	
 18861 ;; *************** function _TM1650_enable *****************
 18862 ;; Defined at:
 18863 ;;		line 41 in file "tm1650.c"
 18864 ;; Parameters:    Size  Location     Type
 18865 ;;  enable          1    wreg     _Bool 
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;  enable          1   20[BANK0 ] _Bool 
 18868 ;; Return value:  Size  Location     Type
 18869 ;;                  1    wreg      void 
 18870 ;; Registers used:
 18871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18872 ;; Tracked objects:
 18873 ;;		On entry : 0/0
 18874 ;;		On exit  : 0/0
 18875 ;;		Unchanged: 0/0
 18876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18881 ;;Total ram usage:        1 bytes
 18882 ;; Hardware stack levels used:    1
 18883 ;; Hardware stack levels required when called:    8
 18884 ;; This function calls:
 18885 ;;		_writeData
 18886 ;; This function is called by:
 18887 ;;		_CONTROLLER_task
 18888 ;;		_TM1650_init
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           
 18893                           ;psect for function _TM1650_enable
 18894  102B                     _TM1650_enable:	
 18895                           
 18896                           ;incstack = 0
 18897                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18898                           ;TM1650_enable@enable stored from wreg
 18899  102B  0140               	movlb	0	; select bank0
 18900  102C  00B4               	movwf	TM1650_enable@enable
 18901                           
 18902                           ;tm1650.c: 42:     if(enable){
 18903  102D  0834               	movf	TM1650_enable@enable,w
 18904  102E  1903               	btfsc	3,2
 18905  102F  2839               	goto	l8208
 18906                           
 18907                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 18908  1030  01AE               	clrf	writeData@data
 18909  1031  0AAE               	incf	writeData@data,f
 18910  1032  3024               	movlw	36
 18911  1033  3191  2103         	fcall	_writeData
 18912                           
 18913                           ;tm1650.c: 44:         tm1650_status = 1;
 18914  1035  0142               	movlb	2	; select bank2
 18915  1036  01CC               	clrf	_tm1650_status^(0+256)
 18916  1037  0ACC               	incf	_tm1650_status^(0+256),f
 18917                           
 18918                           ;tm1650.c: 45:     } else {
 18919  1038  0008               	return
 18920  1039                     l8208:	
 18921                           
 18922                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 18923  1039  01AE               	clrf	writeData@data
 18924  103A  3024               	movlw	36
 18925  103B  3191  2103         	fcall	_writeData
 18926                           
 18927                           ;tm1650.c: 47:         tm1650_status = 0;
 18928  103D  0142               	movlb	2	; select bank2
 18929  103E  01CC               	clrf	_tm1650_status^(0+256)
 18930  103F  0008               	return
 18931  1040                     __end_of_TM1650_enable:	
 18932                           
 18933                           	psect	text58
 18934  0B60                     __ptext58:	
 18935 ;; *************** function _CONTROL_MANUAL *****************
 18936 ;; Defined at:
 18937 ;;		line 255 in file "controller.c"
 18938 ;; Parameters:    Size  Location     Type
 18939 ;;  input           1    wreg     enum E10878
 18940 ;; Auto vars:     Size  Location     Type
 18941 ;;  input           1    5[BANK0 ] enum E10878
 18942 ;; Return value:  Size  Location     Type
 18943 ;;                  1    wreg      _Bool 
 18944 ;; Registers used:
 18945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18946 ;; Tracked objects:
 18947 ;;		On entry : 0/0
 18948 ;;		On exit  : 0/0
 18949 ;;		Unchanged: 0/0
 18950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18954 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18955 ;;Total ram usage:        3 bytes
 18956 ;; Hardware stack levels used:    1
 18957 ;; Hardware stack levels required when called:    5
 18958 ;; This function calls:
 18959 ;;		_BUTTONS_isHeld
 18960 ;;		_CLOCK_getTime
 18961 ;;		_colorDec
 18962 ;;		_colorInc
 18963 ;; This function is called by:
 18964 ;;		_CONTROLLER_task
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           
 18969                           ;psect for function _CONTROL_MANUAL
 18970  0B60                     _CONTROL_MANUAL:	
 18971                           
 18972                           ;incstack = 0
 18973                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18974                           ;CONTROL_MANUAL@input stored from wreg
 18975  0B60  0140               	movlb	0	; select bank0
 18976  0B61  00A5               	movwf	CONTROL_MANUAL@input
 18977                           
 18978                           ;controller.c: 257:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 18979  0B62  0141               	movlb	1	; select bank1
 18980  0B63  083D               	movf	_up^(0+128),w
 18981  0B64  319F  2796  318B   	fcall	_BUTTONS_isHeld
 18982  0B67  3A00               	xorlw	0
 18983  0B68  1903               	skipnz
 18984  0B69  2BC5               	goto	l8124
 18985  0B6A  319E  26EE  318B   	fcall	_CLOCK_getTime
 18986  0B6D  0141               	movlb	1	; select bank1
 18987  0B6E  082B               	movf	_lastIncTime^(0+128),w
 18988  0B6F  0140               	movlb	0	; select bank0
 18989  0B70  0220               	subwf	?_CLOCK_getTime,w
 18990  0B71  00A3               	movwf	??_CONTROL_MANUAL
 18991  0B72  0141               	movlb	1	; select bank1
 18992  0B73  082C               	movf	(_lastIncTime+1)^(0+128),w
 18993  0B74  0140               	movlb	0	; select bank0
 18994  0B75  3B21               	subwfb	?_CLOCK_getTime+1,w
 18995  0B76  00A4               	movwf	??_CONTROL_MANUAL+1
 18996  0B77  0824               	movf	??_CONTROL_MANUAL+1,w
 18997  0B78  027D               	subwf	_incInterval+1,w
 18998  0B79  1D03               	skipz
 18999  0B7A  2B7D               	goto	u8075
 19000  0B7B  0823               	movf	??_CONTROL_MANUAL,w
 19001  0B7C  027C               	subwf	_incInterval,w
 19002  0B7D                     u8075:	
 19003  0B7D  1803               	skipnc
 19004  0B7E  2BC5               	goto	l8124
 19005                           
 19006                           ;controller.c: 258:         colorInc(input);
 19007  0B7F  0825               	movf	CONTROL_MANUAL@input,w
 19008  0B80  3195  2559  318B   	fcall	_colorInc
 19009  0B83  2B9D               	goto	L20
 19010  0B84                     l8126:	
 19011                           ;controller.c: 260:         if(incInterval > 10){
 19012                           
 19013                           ;controller.c: 259:         lastIncTime = CLOCK_getTime();
 19014                           
 19015  0B84  319E  26EE  318B   	fcall	_CLOCK_getTime
 19016  0B87  0141               	movlb	1	; select bank1
 19017  0B88  082B               	movf	_lastIncTime^(0+128),w
 19018  0B89  0140               	movlb	0	; select bank0
 19019  0B8A  0220               	subwf	?_CLOCK_getTime,w
 19020  0B8B  00A3               	movwf	??_CONTROL_MANUAL
 19021  0B8C  0141               	movlb	1	; select bank1
 19022  0B8D  082C               	movf	(_lastIncTime+1)^(0+128),w
 19023  0B8E  0140               	movlb	0	; select bank0
 19024  0B8F  3B21               	subwfb	?_CLOCK_getTime+1,w
 19025  0B90  00A4               	movwf	??_CONTROL_MANUAL+1
 19026  0B91  0824               	movf	??_CONTROL_MANUAL+1,w
 19027  0B92  027D               	subwf	_incInterval+1,w
 19028  0B93  1D03               	skipz
 19029  0B94  2B97               	goto	u8105
 19030  0B95  0823               	movf	??_CONTROL_MANUAL,w
 19031  0B96  027C               	subwf	_incInterval,w
 19032  0B97                     u8105:	
 19033  0B97  1803               	skipnc
 19034  0B98  2BCD               	goto	l8140
 19035                           
 19036                           ;controller.c: 265:         colorDec(input);
 19037  0B99  0825               	movf	CONTROL_MANUAL@input,w
 19038  0B9A  3194  246B  318B   	fcall	_colorDec
 19039  0B9D                     L20:	
 19040                           
 19041                           ;controller.c: 266:         lastIncTime = CLOCK_getTime();
 19042  0B9D  319E  26EE  318B   	fcall	_CLOCK_getTime
 19043  0BA0  0140               	movlb	0	; select bank0
 19044  0BA1  0821               	movf	?_CLOCK_getTime+1,w
 19045  0BA2  0141               	movlb	1	; select bank1
 19046  0BA3  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19047  0BA4  0140               	movlb	0	; select bank0
 19048  0BA5  0820               	movf	?_CLOCK_getTime,w
 19049  0BA6  0141               	movlb	1	; select bank1
 19050  0BA7  00AB               	movwf	_lastIncTime^(0+128)
 19051                           
 19052                           ;controller.c: 267:         if(incInterval > 10){
 19053  0BA8  087D               	movf	_incInterval+1,w
 19054  0BA9  3A80               	xorlw	128
 19055  0BAA  0140               	movlb	0	; select bank0
 19056  0BAB  00A3               	movwf	??_CONTROL_MANUAL
 19057  0BAC  3080               	movlw	128
 19058  0BAD  0223               	subwf	??_CONTROL_MANUAL,w
 19059  0BAE  1D03               	skipz
 19060  0BAF  2BB2               	goto	u8115
 19061  0BB0  300B               	movlw	11
 19062  0BB1  027C               	subwf	_incInterval,w
 19063  0BB2                     u8115:	
 19064  0BB2  1C03               	skipc
 19065  0BB3  2BC3               	goto	l1128
 19066                           
 19067                           ;controller.c: 261:             incInterval-=1;
 19068  0BB4  30FF               	movlw	255
 19069  0BB5  07FC               	addwf	_incInterval,f
 19070  0BB6  30FF               	movlw	255
 19071  0BB7  3DFD               	addwfc	_incInterval+1,f
 19072  0BB8  2BC3               	goto	l1128
 19073  0BB9                     l8142:	
 19074                           
 19075                           ;controller.c: 272:         colorInc(input);
 19076  0BB9  0140               	movlb	0	; select bank0
 19077  0BBA  0825               	movf	CONTROL_MANUAL@input,w
 19078  0BBB  3195  2559  318B   	fcall	_colorInc
 19079  0BBE  2BC3               	goto	l1128
 19080  0BBF                     l8152:	
 19081                           
 19082                           ;controller.c: 276:         colorDec(input);
 19083  0BBF  0140               	movlb	0	; select bank0
 19084  0BC0  0825               	movf	CONTROL_MANUAL@input,w
 19085  0BC1  3194  246B         	fcall	_colorDec
 19086  0BC3                     l1128:	
 19087                           ;controller.c: 262:         }
 19088                           
 19089                           
 19090                           ;controller.c: 263:         return 1;
 19091  0BC3  3001               	movlw	1
 19092  0BC4  0008               	return
 19093  0BC5                     l8124:	
 19094  0BC5  0141               	movlb	1	; select bank1
 19095  0BC6  083C               	movf	_down^(0+128),w
 19096  0BC7  319F  2796  318B   	fcall	_BUTTONS_isHeld
 19097  0BCA  3A00               	xorlw	0
 19098  0BCB  1D03               	btfss	3,2
 19099  0BCC  2B84               	goto	l8126
 19100  0BCD                     l8140:	
 19101  0BCD  0141               	movlb	1	; select bank1
 19102  0BCE  0836               	movf	_upState^(0+128),w
 19103  0BCF  1D03               	btfss	3,2
 19104  0BD0  2BB9               	goto	l8142
 19105  0BD1  0835               	movf	_downState^(0+128),w
 19106  0BD2  1D03               	btfss	3,2
 19107  0BD3  2BBF               	goto	l8152
 19108  0BD4  0833               	movf	_enterState^(0+128),w
 19109  0BD5  1D03               	btfss	3,2
 19110  0BD6  2BE7               	goto	l8172
 19111  0BD7  2BFE               	goto	l8180
 19112  0BD8                     l1140:	
 19113                           ;controller.c: 280:             case CMODE_RED:
 19114                           
 19115                           
 19116                           ;controller.c: 281:                 colorModeSelected = CMODE_GREEN;
 19117  0BD8  0141               	movlb	1	; select bank1
 19118  0BD9  01B1               	clrf	_colorModeSelected^(0+128)
 19119  0BDA  0AB1               	incf	_colorModeSelected^(0+128),f
 19120                           
 19121                           ;controller.c: 282:                 break;
 19122  0BDB  2BC3               	goto	l1128
 19123  0BDC                     l8164:	
 19124                           
 19125                           ;controller.c: 285:                 colorModeSelected = CMODE_BLUE;
 19126  0BDC  3002               	movlw	2
 19127  0BDD  2BDF               	goto	L19
 19128  0BDE                     l8166:	
 19129                           ;controller.c: 286:                 break;
 19130                           
 19131                           
 19132                           ;controller.c: 289:                 colorModeSelected = CMODE_WHITE;
 19133  0BDE  3003               	movlw	3
 19134  0BDF                     L19:	
 19135  0BDF  00A3               	movwf	??_CONTROL_MANUAL
 19136  0BE0  0823               	movf	??_CONTROL_MANUAL,w
 19137  0BE1  0141               	movlb	1	; select bank1
 19138  0BE2  00B1               	movwf	_colorModeSelected^(0+128)
 19139                           
 19140                           ;controller.c: 290:                 break;
 19141  0BE3  2BC3               	goto	l1128
 19142  0BE4                     l8168:	
 19143                           
 19144                           ;controller.c: 293:                 colorModeSelected = CMODE_RED;
 19145  0BE4  0141               	movlb	1	; select bank1
 19146  0BE5  01B1               	clrf	_colorModeSelected^(0+128)
 19147                           
 19148                           ;controller.c: 294:                 break;
 19149  0BE6  2BC3               	goto	l1128
 19150  0BE7                     l8172:	
 19151  0BE7  0140               	movlb	0	; select bank0
 19152  0BE8  0825               	movf	CONTROL_MANUAL@input,w
 19153  0BE9  00A3               	movwf	??_CONTROL_MANUAL
 19154  0BEA  01A4               	clrf	??_CONTROL_MANUAL+1
 19155                           
 19156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19157                           ; Switch size 1, requested type "simple"
 19158                           ; Number of cases is 1, Range of values is 0 to 0
 19159                           ; switch strategies available:
 19160                           ; Name         Instructions Cycles
 19161                           ; simple_byte            4     3 (average)
 19162                           ; direct_byte            8     6 (fixed)
 19163                           ; jumptable            260     6 (fixed)
 19164                           ;	Chosen strategy is simple_byte
 19165  0BEB  0824               	movf	??_CONTROL_MANUAL+1,w
 19166  0BEC  3A00               	xorlw	0	; case 0
 19167  0BED  1903               	skipnz
 19168  0BEE  2BF0               	goto	l8978
 19169  0BEF  2BC3               	goto	l1128
 19170  0BF0                     l8978:	
 19171                           
 19172                           ; Switch size 1, requested type "simple"
 19173                           ; Number of cases is 4, Range of values is 0 to 3
 19174                           ; switch strategies available:
 19175                           ; Name         Instructions Cycles
 19176                           ; simple_byte           13     7 (average)
 19177                           ; direct_byte           14     6 (fixed)
 19178                           ; jumptable            260     6 (fixed)
 19179                           ;	Chosen strategy is simple_byte
 19180  0BF0  0823               	movf	??_CONTROL_MANUAL,w
 19181  0BF1  3A00               	xorlw	0	; case 0
 19182  0BF2  1903               	skipnz
 19183  0BF3  2BD8               	goto	l1140
 19184  0BF4  3A01               	xorlw	1	; case 1
 19185  0BF5  1903               	skipnz
 19186  0BF6  2BDC               	goto	l8164
 19187  0BF7  3A03               	xorlw	3	; case 2
 19188  0BF8  1903               	skipnz
 19189  0BF9  2BDE               	goto	l8166
 19190  0BFA  3A01               	xorlw	1	; case 3
 19191  0BFB  1903               	skipnz
 19192  0BFC  2BE4               	goto	l8168
 19193  0BFD  2BC3               	goto	l1128
 19194  0BFE                     l8180:	
 19195  0BFE  0836               	movf	_upState^(0+128),w
 19196  0BFF  1D03               	btfss	3,2
 19197  0C00  0835               	movf	_downState^(0+128),w
 19198  0C01  1D03               	btfss	3,2
 19199  0C02  2C16               	goto	l8190
 19200  0C03  083C               	movf	_down^(0+128),w
 19201  0C04  319F  2796  318B   	fcall	_BUTTONS_isHeld
 19202  0C07  3A00               	xorlw	0
 19203  0C08  1D03               	skipz
 19204  0C09  2C16               	goto	l8190
 19205  0C0A  0141               	movlb	1	; select bank1
 19206  0C0B  083D               	movf	_up^(0+128),w
 19207  0C0C  319F  2796  318B   	fcall	_BUTTONS_isHeld
 19208  0C0F  3A00               	xorlw	0
 19209  0C10  1D03               	skipz
 19210  0C11  2C16               	goto	l8190
 19211                           
 19212                           ;controller.c: 298:         incInterval = 100;
 19213  0C12  3064               	movlw	100
 19214  0C13  00FC               	movwf	_incInterval
 19215  0C14  3000               	movlw	0
 19216  0C15  00FD               	movwf	_incInterval+1
 19217  0C16                     l8190:	
 19218                           ;controller.c: 299:     } else {
 19219                           
 19220                           
 19221                           ;controller.c: 300:         return 0;
 19222  0C16  3000               	movlw	0
 19223  0C17  0008               	return
 19224  0C18                     __end_of_CONTROL_MANUAL:	
 19225                           
 19226                           	psect	text59
 19227  1559                     __ptext59:	
 19228 ;; *************** function _colorInc *****************
 19229 ;; Defined at:
 19230 ;;		line 217 in file "led.c"
 19231 ;; Parameters:    Size  Location     Type
 19232 ;;  input           1    wreg     enum E10883
 19233 ;; Auto vars:     Size  Location     Type
 19234 ;;  input           1    2[BANK0 ] enum E10883
 19235 ;; Return value:  Size  Location     Type
 19236 ;;                  1    wreg      void 
 19237 ;; Registers used:
 19238 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19239 ;; Tracked objects:
 19240 ;;		On entry : 0/0
 19241 ;;		On exit  : 0/0
 19242 ;;		Unchanged: 0/0
 19243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19248 ;;Total ram usage:        3 bytes
 19249 ;; Hardware stack levels used:    1
 19250 ;; Hardware stack levels required when called:    4
 19251 ;; This function calls:
 19252 ;;		Nothing
 19253 ;; This function is called by:
 19254 ;;		_CONTROL_MANUAL
 19255 ;; This function uses a non-reentrant model
 19256 ;;
 19257                           
 19258                           
 19259                           ;psect for function _colorInc
 19260  1559                     _colorInc:	
 19261                           
 19262                           ;incstack = 0
 19263                           ; Regs used in _colorInc: [wreg-fsr0h+status,2+status,0]
 19264                           ;colorInc@input stored from wreg
 19265  1559  0140               	movlb	0	; select bank0
 19266  155A  00A2               	movwf	colorInc@input
 19267                           
 19268                           ;led.c: 219:     switch(input){
 19269  155B  2D88               	goto	l5398
 19270  155C                     l5380:	
 19271                           
 19272                           ;led.c: 222:             if(!(manual.red > 254))
 19273  155C  0141               	movlb	1	; select bank1
 19274  155D  0A26               	incf	(_manual^(0+128)+1),w
 19275  155E  1903               	btfsc	3,2
 19276  155F  0008               	return
 19277                           
 19278                           ;led.c: 223:             manual.red++;
 19279  1560  3001               	movlw	1
 19280  1561  0140               	movlb	0	; select bank0
 19281  1562  00A0               	movwf	??_colorInc
 19282  1563  0820               	movf	??_colorInc,w
 19283  1564  0141               	movlb	1	; select bank1
 19284  1565  07A6               	addwf	(_manual^(0+128)+1),f
 19285  1566  0008               	return
 19286  1567                     l5384:	
 19287                           
 19288                           ;led.c: 227:             if(!(manual.green > 254))
 19289  1567  0141               	movlb	1	; select bank1
 19290  1568  0A27               	incf	(_manual^(0+128)+2),w
 19291  1569  1903               	btfsc	3,2
 19292  156A  0008               	return
 19293                           
 19294                           ;led.c: 228:             manual.green++;
 19295  156B  3001               	movlw	1
 19296  156C  0140               	movlb	0	; select bank0
 19297  156D  00A0               	movwf	??_colorInc
 19298  156E  0820               	movf	??_colorInc,w
 19299  156F  0141               	movlb	1	; select bank1
 19300  1570  07A7               	addwf	(_manual^(0+128)+2),f
 19301  1571  0008               	return
 19302  1572                     l5388:	
 19303                           
 19304                           ;led.c: 232:             if(!(manual.blue > 254))
 19305  1572  0141               	movlb	1	; select bank1
 19306  1573  0A28               	incf	(_manual^(0+128)+3),w
 19307  1574  1903               	btfsc	3,2
 19308  1575  0008               	return
 19309                           
 19310                           ;led.c: 233:             manual.blue++;
 19311  1576  3001               	movlw	1
 19312  1577  0140               	movlb	0	; select bank0
 19313  1578  00A0               	movwf	??_colorInc
 19314  1579  0820               	movf	??_colorInc,w
 19315  157A  0141               	movlb	1	; select bank1
 19316  157B  07A8               	addwf	(_manual^(0+128)+3),f
 19317  157C  0008               	return
 19318  157D                     l5392:	
 19319                           
 19320                           ;led.c: 237:             if(!(manual.white > 254))
 19321  157D  0141               	movlb	1	; select bank1
 19322  157E  0A25               	incf	_manual^(0+128),w
 19323  157F  1903               	btfsc	3,2
 19324  1580  0008               	return
 19325                           
 19326                           ;led.c: 238:             manual.white++;
 19327  1581  3001               	movlw	1
 19328  1582  0140               	movlb	0	; select bank0
 19329  1583  00A0               	movwf	??_colorInc
 19330  1584  0820               	movf	??_colorInc,w
 19331  1585  0141               	movlb	1	; select bank1
 19332  1586  07A5               	addwf	_manual^(0+128),f
 19333  1587  0008               	return
 19334  1588                     l5398:	
 19335  1588  0822               	movf	colorInc@input,w
 19336  1589  00A0               	movwf	??_colorInc
 19337  158A  01A1               	clrf	??_colorInc+1
 19338                           
 19339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19340                           ; Switch size 1, requested type "simple"
 19341                           ; Number of cases is 1, Range of values is 0 to 0
 19342                           ; switch strategies available:
 19343                           ; Name         Instructions Cycles
 19344                           ; simple_byte            4     3 (average)
 19345                           ; direct_byte            8     6 (fixed)
 19346                           ; jumptable            260     6 (fixed)
 19347                           ;	Chosen strategy is simple_byte
 19348  158B  0821               	movf	??_colorInc+1,w
 19349  158C  3A00               	xorlw	0	; case 0
 19350  158D  1903               	skipnz
 19351  158E  2D90               	goto	l8980
 19352  158F  2D9E               	goto	l1448
 19353  1590                     l8980:	
 19354                           
 19355                           ; Switch size 1, requested type "simple"
 19356                           ; Number of cases is 4, Range of values is 0 to 3
 19357                           ; switch strategies available:
 19358                           ; Name         Instructions Cycles
 19359                           ; simple_byte           13     7 (average)
 19360                           ; direct_byte           14     6 (fixed)
 19361                           ; jumptable            260     6 (fixed)
 19362                           ;	Chosen strategy is simple_byte
 19363  1590  0820               	movf	??_colorInc,w
 19364  1591  3A00               	xorlw	0	; case 0
 19365  1592  1903               	skipnz
 19366  1593  2D5C               	goto	l5380
 19367  1594  3A01               	xorlw	1	; case 1
 19368  1595  1903               	skipnz
 19369  1596  2D67               	goto	l5384
 19370  1597  3A03               	xorlw	3	; case 2
 19371  1598  1903               	skipnz
 19372  1599  2D72               	goto	l5388
 19373  159A  3A01               	xorlw	1	; case 3
 19374  159B  1903               	skipnz
 19375  159C  2D7D               	goto	l5392
 19376  159D  2D9E               	goto	l1448
 19377  159E                     l1448:	
 19378  159E  0008               	return
 19379  159F                     __end_of_colorInc:	
 19380                           
 19381                           	psect	text60
 19382  146B                     __ptext60:	
 19383 ;; *************** function _colorDec *****************
 19384 ;; Defined at:
 19385 ;;		line 245 in file "led.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;  input           1    wreg     enum E10883
 19388 ;; Auto vars:     Size  Location     Type
 19389 ;;  input           1    2[BANK0 ] enum E10883
 19390 ;; Return value:  Size  Location     Type
 19391 ;;                  1    wreg      void 
 19392 ;; Registers used:
 19393 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19394 ;; Tracked objects:
 19395 ;;		On entry : 0/0
 19396 ;;		On exit  : 0/0
 19397 ;;		Unchanged: 0/0
 19398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19402 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19403 ;;Total ram usage:        3 bytes
 19404 ;; Hardware stack levels used:    1
 19405 ;; Hardware stack levels required when called:    4
 19406 ;; This function calls:
 19407 ;;		Nothing
 19408 ;; This function is called by:
 19409 ;;		_CONTROL_MANUAL
 19410 ;; This function uses a non-reentrant model
 19411 ;;
 19412                           
 19413                           
 19414                           ;psect for function _colorDec
 19415  146B                     _colorDec:	
 19416                           
 19417                           ;incstack = 0
 19418                           ; Regs used in _colorDec: [wreg-fsr0h+status,2+status,0]
 19419                           ;colorDec@input stored from wreg
 19420  146B  0140               	movlb	0	; select bank0
 19421  146C  00A2               	movwf	colorDec@input
 19422                           
 19423                           ;led.c: 247:     switch(input){
 19424  146D  2C8A               	goto	l5426
 19425  146E                     l5408:	
 19426                           
 19427                           ;led.c: 250:             if(!(manual.red < 1))
 19428  146E  0141               	movlb	1	; select bank1
 19429  146F  0826               	movf	(_manual^(0+128)+1),w
 19430  1470  1903               	btfsc	3,2
 19431  1471  0008               	return
 19432                           
 19433                           ;led.c: 251:             manual.red--;
 19434  1472  3001               	movlw	1
 19435  1473  02A6               	subwf	(_manual^(0+128)+1),f
 19436  1474  0008               	return
 19437  1475                     l5412:	
 19438                           
 19439                           ;led.c: 255:             if(!(manual.green < 1))
 19440  1475  0141               	movlb	1	; select bank1
 19441  1476  0827               	movf	(_manual^(0+128)+2),w
 19442  1477  1903               	btfsc	3,2
 19443  1478  0008               	return
 19444                           
 19445                           ;led.c: 256:             manual.green--;
 19446  1479  3001               	movlw	1
 19447  147A  02A7               	subwf	(_manual^(0+128)+2),f
 19448  147B  0008               	return
 19449  147C                     l5416:	
 19450                           
 19451                           ;led.c: 260:             if(!(manual.blue < 1))
 19452  147C  0141               	movlb	1	; select bank1
 19453  147D  0828               	movf	(_manual^(0+128)+3),w
 19454  147E  1903               	btfsc	3,2
 19455  147F  0008               	return
 19456                           
 19457                           ;led.c: 261:             manual.blue--;
 19458  1480  3001               	movlw	1
 19459  1481  02A8               	subwf	(_manual^(0+128)+3),f
 19460  1482  0008               	return
 19461  1483                     l5420:	
 19462                           
 19463                           ;led.c: 265:             if(!(manual.white < 1))
 19464  1483  0141               	movlb	1	; select bank1
 19465  1484  0825               	movf	_manual^(0+128),w
 19466  1485  1903               	btfsc	3,2
 19467  1486  0008               	return
 19468                           
 19469                           ;led.c: 266:             manual.white--;
 19470  1487  3001               	movlw	1
 19471  1488  02A5               	subwf	_manual^(0+128),f
 19472  1489  0008               	return
 19473  148A                     l5426:	
 19474  148A  0822               	movf	colorDec@input,w
 19475  148B  00A0               	movwf	??_colorDec
 19476  148C  01A1               	clrf	??_colorDec+1
 19477                           
 19478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19479                           ; Switch size 1, requested type "simple"
 19480                           ; Number of cases is 1, Range of values is 0 to 0
 19481                           ; switch strategies available:
 19482                           ; Name         Instructions Cycles
 19483                           ; simple_byte            4     3 (average)
 19484                           ; direct_byte            8     6 (fixed)
 19485                           ; jumptable            260     6 (fixed)
 19486                           ;	Chosen strategy is simple_byte
 19487  148D  0821               	movf	??_colorDec+1,w
 19488  148E  3A00               	xorlw	0	; case 0
 19489  148F  1903               	skipnz
 19490  1490  2C92               	goto	l8982
 19491  1491  2CA0               	goto	l1461
 19492  1492                     l8982:	
 19493                           
 19494                           ; Switch size 1, requested type "simple"
 19495                           ; Number of cases is 4, Range of values is 0 to 3
 19496                           ; switch strategies available:
 19497                           ; Name         Instructions Cycles
 19498                           ; simple_byte           13     7 (average)
 19499                           ; direct_byte           14     6 (fixed)
 19500                           ; jumptable            260     6 (fixed)
 19501                           ;	Chosen strategy is simple_byte
 19502  1492  0820               	movf	??_colorDec,w
 19503  1493  3A00               	xorlw	0	; case 0
 19504  1494  1903               	skipnz
 19505  1495  2C6E               	goto	l5408
 19506  1496  3A01               	xorlw	1	; case 1
 19507  1497  1903               	skipnz
 19508  1498  2C75               	goto	l5412
 19509  1499  3A03               	xorlw	3	; case 2
 19510  149A  1903               	skipnz
 19511  149B  2C7C               	goto	l5416
 19512  149C  3A01               	xorlw	1	; case 3
 19513  149D  1903               	skipnz
 19514  149E  2C83               	goto	l5420
 19515  149F  2CA0               	goto	l1461
 19516  14A0                     l1461:	
 19517  14A0  0008               	return
 19518  14A1                     __end_of_colorDec:	
 19519                           
 19520                           	psect	text61
 19521  0970                     __ptext61:	
 19522 ;; *************** function _CONTROL_DMX *****************
 19523 ;; Defined at:
 19524 ;;		line 174 in file "controller.c"
 19525 ;; Parameters:    Size  Location     Type
 19526 ;;		None
 19527 ;; Auto vars:     Size  Location     Type
 19528 ;;		None
 19529 ;; Return value:  Size  Location     Type
 19530 ;;                  1    wreg      _Bool 
 19531 ;; Registers used:
 19532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19533 ;; Tracked objects:
 19534 ;;		On entry : 0/0
 19535 ;;		On exit  : 0/0
 19536 ;;		Unchanged: 0/0
 19537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19542 ;;Total ram usage:        2 bytes
 19543 ;; Hardware stack levels used:    1
 19544 ;; Hardware stack levels required when called:   10
 19545 ;; This function calls:
 19546 ;;		_BUTTONS_isHeld
 19547 ;;		_CLOCK_getTime
 19548 ;;		_address_dec
 19549 ;;		_address_inc
 19550 ;; This function is called by:
 19551 ;;		_CONTROLLER_task
 19552 ;; This function uses a non-reentrant model
 19553 ;;
 19554                           
 19555                           
 19556                           ;psect for function _CONTROL_DMX
 19557  0970                     _CONTROL_DMX:	
 19558                           
 19559                           ;controller.c: 176:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 19560                           
 19561                           ;incstack = 0
 19562                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19563  0970  0141               	movlb	1	; select bank1
 19564  0971  083D               	movf	_up^(0+128),w
 19565  0972  319F  2796  3189   	fcall	_BUTTONS_isHeld
 19566  0975  3A00               	xorlw	0
 19567  0976  1903               	skipnz
 19568  0977  29C6               	goto	l7978
 19569  0978  319E  26EE  3189   	fcall	_CLOCK_getTime
 19570  097B  0141               	movlb	1	; select bank1
 19571  097C  082B               	movf	_lastIncTime^(0+128),w
 19572  097D  0140               	movlb	0	; select bank0
 19573  097E  0220               	subwf	?_CLOCK_getTime,w
 19574  097F  00B7               	movwf	??_CONTROL_DMX
 19575  0980  0141               	movlb	1	; select bank1
 19576  0981  082C               	movf	(_lastIncTime+1)^(0+128),w
 19577  0982  0140               	movlb	0	; select bank0
 19578  0983  3B21               	subwfb	?_CLOCK_getTime+1,w
 19579  0984  00B8               	movwf	??_CONTROL_DMX+1
 19580  0985  0838               	movf	??_CONTROL_DMX+1,w
 19581  0986  027D               	subwf	_incInterval+1,w
 19582  0987  1D03               	skipz
 19583  0988  298B               	goto	u7775
 19584  0989  0837               	movf	??_CONTROL_DMX,w
 19585  098A  027C               	subwf	_incInterval,w
 19586  098B                     u7775:	
 19587  098B  1803               	skipnc
 19588  098C  29C6               	goto	l7978
 19589                           
 19590                           ;controller.c: 177:         address_inc();
 19591  098D  3190  20B4  3189   	fcall	_address_inc
 19592  0990  29A9               	goto	L21
 19593  0991                     l7980:	
 19594                           ;controller.c: 179:         if(incInterval > 20){
 19595                           
 19596                           ;controller.c: 178:         lastIncTime = CLOCK_getTime();
 19597                           
 19598  0991  319E  26EE  3189   	fcall	_CLOCK_getTime
 19599  0994  0141               	movlb	1	; select bank1
 19600  0995  082B               	movf	_lastIncTime^(0+128),w
 19601  0996  0140               	movlb	0	; select bank0
 19602  0997  0220               	subwf	?_CLOCK_getTime,w
 19603  0998  00B7               	movwf	??_CONTROL_DMX
 19604  0999  0141               	movlb	1	; select bank1
 19605  099A  082C               	movf	(_lastIncTime+1)^(0+128),w
 19606  099B  0140               	movlb	0	; select bank0
 19607  099C  3B21               	subwfb	?_CLOCK_getTime+1,w
 19608  099D  00B8               	movwf	??_CONTROL_DMX+1
 19609  099E  0838               	movf	??_CONTROL_DMX+1,w
 19610  099F  027D               	subwf	_incInterval+1,w
 19611  09A0  1D03               	skipz
 19612  09A1  29A4               	goto	u7805
 19613  09A2  0837               	movf	??_CONTROL_DMX,w
 19614  09A3  027C               	subwf	_incInterval,w
 19615  09A4                     u7805:	
 19616  09A4  1803               	skipnc
 19617  09A5  29CE               	goto	l7994
 19618                           
 19619                           ;controller.c: 184:         address_dec();
 19620  09A6  3190  2084  3189   	fcall	_address_dec
 19621  09A9                     L21:	
 19622                           
 19623                           ;controller.c: 185:         lastIncTime = CLOCK_getTime();
 19624  09A9  319E  26EE  3189   	fcall	_CLOCK_getTime
 19625  09AC  0140               	movlb	0	; select bank0
 19626  09AD  0821               	movf	?_CLOCK_getTime+1,w
 19627  09AE  0141               	movlb	1	; select bank1
 19628  09AF  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19629  09B0  0140               	movlb	0	; select bank0
 19630  09B1  0820               	movf	?_CLOCK_getTime,w
 19631  09B2  0141               	movlb	1	; select bank1
 19632  09B3  00AB               	movwf	_lastIncTime^(0+128)
 19633                           
 19634                           ;controller.c: 186:         if(incInterval > 20){
 19635  09B4  087D               	movf	_incInterval+1,w
 19636  09B5  3A80               	xorlw	128
 19637  09B6  0140               	movlb	0	; select bank0
 19638  09B7  00B7               	movwf	??_CONTROL_DMX
 19639  09B8  3080               	movlw	128
 19640  09B9  0237               	subwf	??_CONTROL_DMX,w
 19641  09BA  1D03               	skipz
 19642  09BB  29BE               	goto	u7815
 19643  09BC  3015               	movlw	21
 19644  09BD  027C               	subwf	_incInterval,w
 19645  09BE                     u7815:	
 19646  09BE  1C03               	skipc
 19647  09BF  29C4               	goto	l1086
 19648                           
 19649                           ;controller.c: 180:             incInterval-=1;
 19650  09C0  30FF               	movlw	255
 19651  09C1  07FC               	addwf	_incInterval,f
 19652  09C2  30FF               	movlw	255
 19653  09C3  3DFD               	addwfc	_incInterval+1,f
 19654  09C4                     l1086:	
 19655                           ;controller.c: 181:         }
 19656                           
 19657                           
 19658                           ;controller.c: 182:         return 1;
 19659  09C4  3001               	movlw	1
 19660  09C5  0008               	return
 19661  09C6                     l7978:	
 19662  09C6  0141               	movlb	1	; select bank1
 19663  09C7  083C               	movf	_down^(0+128),w
 19664  09C8  319F  2796  3189   	fcall	_BUTTONS_isHeld
 19665  09CB  3A00               	xorlw	0
 19666  09CC  1D03               	btfss	3,2
 19667  09CD  2991               	goto	l7980
 19668  09CE                     l7994:	
 19669  09CE  0141               	movlb	1	; select bank1
 19670  09CF  083B               	movf	_enter^(0+128),w
 19671  09D0  319F  2796  3189   	fcall	_BUTTONS_isHeld
 19672  09D3  3A00               	xorlw	0
 19673  09D4  1903               	skipnz
 19674  09D5  29DD               	goto	l8002
 19675                           
 19676                           ;controller.c: 191:         address = 1;
 19677  09D6  3001               	movlw	1
 19678  09D7  0141               	movlb	1	; select bank1
 19679  09D8  00EC               	movwf	_address^(0+128)
 19680  09D9  3000               	movlw	0
 19681  09DA  00ED               	movwf	(_address^(0+128)+1)
 19682                           
 19683                           ;controller.c: 192:         return 1;
 19684  09DB  3001               	movlw	1
 19685  09DC  0008               	return
 19686  09DD                     l8002:	
 19687  09DD  0141               	movlb	1	; select bank1
 19688  09DE  0836               	movf	_upState^(0+128),w
 19689  09DF  1903               	btfsc	3,2
 19690  09E0  29E5               	goto	l8012
 19691                           
 19692                           ;controller.c: 194:         address_inc();
 19693  09E1  3190  20B4  3189   	fcall	_address_inc
 19694  09E4  29C4               	goto	l1086
 19695  09E5                     l8012:	
 19696  09E5  0835               	movf	_downState^(0+128),w
 19697  09E6  1903               	btfsc	3,2
 19698  09E7  29EC               	goto	l8022
 19699                           
 19700                           ;controller.c: 198:         address_dec();
 19701  09E8  3190  2084  3189   	fcall	_address_dec
 19702  09EB  29C4               	goto	l1086
 19703  09EC                     l8022:	
 19704  09EC  0833               	movf	_enterState^(0+128),w
 19705  09ED  1D03               	btfss	3,2
 19706  09EE  29C4               	goto	l1086
 19707  09EF  0836               	movf	_upState^(0+128),w
 19708  09F0  1D03               	btfss	3,2
 19709  09F1  0835               	movf	_downState^(0+128),w
 19710  09F2  1D03               	btfss	3,2
 19711  09F3  2A07               	goto	l8040
 19712  09F4  083C               	movf	_down^(0+128),w
 19713  09F5  319F  2796  3189   	fcall	_BUTTONS_isHeld
 19714  09F8  3A00               	xorlw	0
 19715  09F9  1D03               	skipz
 19716  09FA  2A07               	goto	l8040
 19717  09FB  0141               	movlb	1	; select bank1
 19718  09FC  083D               	movf	_up^(0+128),w
 19719  09FD  319F  2796  3189   	fcall	_BUTTONS_isHeld
 19720  0A00  3A00               	xorlw	0
 19721  0A01  1D03               	skipz
 19722  0A02  2A07               	goto	l8040
 19723                           
 19724                           ;controller.c: 203:         incInterval = 100;
 19725  0A03  3064               	movlw	100
 19726  0A04  00FC               	movwf	_incInterval
 19727  0A05  3000               	movlw	0
 19728  0A06  00FD               	movwf	_incInterval+1
 19729  0A07                     l8040:	
 19730                           ;controller.c: 204:     } else {
 19731                           
 19732                           
 19733                           ;controller.c: 205:         return 0;
 19734  0A07  3000               	movlw	0
 19735  0A08  0008               	return
 19736  0A09                     __end_of_CONTROL_DMX:	
 19737                           
 19738                           	psect	text62
 19739  10B4                     __ptext62:	
 19740 ;; *************** function _address_inc *****************
 19741 ;; Defined at:
 19742 ;;		line 29 in file "dmx.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;		None
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;		None
 19747 ;; Return value:  Size  Location     Type
 19748 ;;                  1    wreg      void 
 19749 ;; Registers used:
 19750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19751 ;; Tracked objects:
 19752 ;;		On entry : 0/0
 19753 ;;		On exit  : 0/0
 19754 ;;		Unchanged: 0/0
 19755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19760 ;;Total ram usage:        0 bytes
 19761 ;; Hardware stack levels used:    1
 19762 ;; Hardware stack levels required when called:    9
 19763 ;; This function calls:
 19764 ;;		_TM1650_fastPrintNum
 19765 ;; This function is called by:
 19766 ;;		_CONTROL_DMX
 19767 ;; This function uses a non-reentrant model
 19768 ;;
 19769                           
 19770                           
 19771                           ;psect for function _address_inc
 19772  10B4                     _address_inc:	
 19773                           
 19774                           ;dmx.c: 31:     if(address == 512)
 19775                           
 19776                           ;incstack = 0
 19777                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19778  10B4  3002               	movlw	2
 19779  10B5  0141               	movlb	1	; select bank1
 19780  10B6  066D               	xorwf	(_address+1)^(0+128),w
 19781  10B7  046C               	iorwf	_address^(0+128),w
 19782  10B8  1D03               	btfss	3,2
 19783  10B9  28BF               	goto	l7688
 19784                           
 19785                           ;dmx.c: 32:         address = 1;
 19786  10BA  3001               	movlw	1
 19787  10BB  00EC               	movwf	_address^(0+128)
 19788  10BC  3000               	movlw	0
 19789  10BD  00ED               	movwf	(_address^(0+128)+1)
 19790  10BE  28C3               	goto	l7690
 19791  10BF                     l7688:	
 19792                           
 19793                           ;dmx.c: 34:         address++;
 19794  10BF  3001               	movlw	1
 19795  10C0  07EC               	addwf	_address^(0+128),f
 19796  10C1  3000               	movlw	0
 19797  10C2  3DED               	addwfc	(_address+1)^(0+128),f
 19798  10C3                     l7690:	
 19799                           
 19800                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 19801  10C3  086D               	movf	(_address+1)^(0+128),w
 19802  10C4  0140               	movlb	0	; select bank0
 19803  10C5  00B5               	movwf	TM1650_fastPrintNum@num+1
 19804  10C6  0141               	movlb	1	; select bank1
 19805  10C7  086C               	movf	_address^(0+128),w
 19806  10C8  0140               	movlb	0	; select bank0
 19807  10C9  00B4               	movwf	TM1650_fastPrintNum@num
 19808  10CA  3187  2734         	fcall	_TM1650_fastPrintNum
 19809  10CC  0008               	return
 19810  10CD                     __end_of_address_inc:	
 19811                           
 19812                           	psect	text63
 19813  1084                     __ptext63:	
 19814 ;; *************** function _address_dec *****************
 19815 ;; Defined at:
 19816 ;;		line 43 in file "dmx.c"
 19817 ;; Parameters:    Size  Location     Type
 19818 ;;		None
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;		None
 19821 ;; Return value:  Size  Location     Type
 19822 ;;                  1    wreg      void 
 19823 ;; Registers used:
 19824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19825 ;; Tracked objects:
 19826 ;;		On entry : 0/0
 19827 ;;		On exit  : 0/0
 19828 ;;		Unchanged: 0/0
 19829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19834 ;;Total ram usage:        0 bytes
 19835 ;; Hardware stack levels used:    1
 19836 ;; Hardware stack levels required when called:    9
 19837 ;; This function calls:
 19838 ;;		_TM1650_fastPrintNum
 19839 ;; This function is called by:
 19840 ;;		_CONTROL_DMX
 19841 ;; This function uses a non-reentrant model
 19842 ;;
 19843                           
 19844                           
 19845                           ;psect for function _address_dec
 19846  1084                     _address_dec:	
 19847                           
 19848                           ;dmx.c: 45:     if(address == 1)
 19849                           
 19850                           ;incstack = 0
 19851                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19852  1084  0141               	movlb	1	; select bank1
 19853  1085  036C               	decf	_address^(0+128),w
 19854  1086  046D               	iorwf	(_address+1)^(0+128),w
 19855  1087  1D03               	btfss	3,2
 19856  1088  288E               	goto	l7696
 19857                           
 19858                           ;dmx.c: 46:         address = 512;
 19859  1089  3000               	movlw	0
 19860  108A  00EC               	movwf	_address^(0+128)
 19861  108B  3002               	movlw	2
 19862  108C  00ED               	movwf	(_address^(0+128)+1)
 19863  108D  2892               	goto	l7698
 19864  108E                     l7696:	
 19865                           
 19866                           ;dmx.c: 48:         address--;
 19867  108E  3001               	movlw	1
 19868  108F  02EC               	subwf	_address^(0+128),f
 19869  1090  3000               	movlw	0
 19870  1091  3BED               	subwfb	(_address+1)^(0+128),f
 19871  1092                     l7698:	
 19872                           
 19873                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 19874  1092  086D               	movf	(_address+1)^(0+128),w
 19875  1093  0140               	movlb	0	; select bank0
 19876  1094  00B5               	movwf	TM1650_fastPrintNum@num+1
 19877  1095  0141               	movlb	1	; select bank1
 19878  1096  086C               	movf	_address^(0+128),w
 19879  1097  0140               	movlb	0	; select bank0
 19880  1098  00B4               	movwf	TM1650_fastPrintNum@num
 19881  1099  3187  2734         	fcall	_TM1650_fastPrintNum
 19882  109B  0008               	return
 19883  109C                     __end_of_address_dec:	
 19884                           
 19885                           	psect	text64
 19886  0734                     __ptext64:	
 19887 ;; *************** function _TM1650_fastPrintNum *****************
 19888 ;; Defined at:
 19889 ;;		line 101 in file "tm1650.c"
 19890 ;; Parameters:    Size  Location     Type
 19891 ;;  num             2   20[BANK0 ] unsigned short 
 19892 ;; Auto vars:     Size  Location     Type
 19893 ;;		None
 19894 ;; Return value:  Size  Location     Type
 19895 ;;                  1    wreg      void 
 19896 ;; Registers used:
 19897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19898 ;; Tracked objects:
 19899 ;;		On entry : 0/0
 19900 ;;		On exit  : 0/0
 19901 ;;		Unchanged: 0/0
 19902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19906 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19907 ;;Total ram usage:        3 bytes
 19908 ;; Hardware stack levels used:    1
 19909 ;; Hardware stack levels required when called:    8
 19910 ;; This function calls:
 19911 ;;		___lwdiv
 19912 ;;		___lwmod
 19913 ;;		_writeData
 19914 ;; This function is called by:
 19915 ;;		_CONTROLLER_task
 19916 ;;		_DMX_init
 19917 ;;		_address_inc
 19918 ;;		_address_dec
 19919 ;; This function uses a non-reentrant model
 19920 ;;
 19921                           
 19922                           
 19923                           ;psect for function _TM1650_fastPrintNum
 19924  0734                     _TM1650_fastPrintNum:	
 19925                           
 19926                           ;tm1650.c: 103:     if(num > 9999){
 19927                           
 19928                           ;incstack = 0
 19929                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19930  0734  3027               	movlw	39
 19931  0735  0140               	movlb	0	; select bank0
 19932  0736  0235               	subwf	TM1650_fastPrintNum@num+1,w
 19933  0737  3010               	movlw	16
 19934  0738  1903               	skipnz
 19935  0739  0234               	subwf	TM1650_fastPrintNum@num,w
 19936  073A  1C03               	skipc
 19937  073B  2F5F               	goto	l7634
 19938                           
 19939                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 19940  073C  3079               	movlw	121
 19941  073D  00B6               	movwf	??_TM1650_fastPrintNum
 19942  073E  0836               	movf	??_TM1650_fastPrintNum,w
 19943  073F  00AE               	movwf	writeData@data
 19944  0740  3034               	movlw	52
 19945  0741  3191  2103  3187   	fcall	_writeData
 19946                           
 19947                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 19948  0744  3079               	movlw	121
 19949  0745  0140               	movlb	0	; select bank0
 19950  0746  00B6               	movwf	??_TM1650_fastPrintNum
 19951  0747  0836               	movf	??_TM1650_fastPrintNum,w
 19952  0748  00AE               	movwf	writeData@data
 19953  0749  3035               	movlw	53
 19954  074A  3191  2103  3187   	fcall	_writeData
 19955                           
 19956                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 19957  074D  3079               	movlw	121
 19958  074E  0140               	movlb	0	; select bank0
 19959  074F  00B6               	movwf	??_TM1650_fastPrintNum
 19960  0750  0836               	movf	??_TM1650_fastPrintNum,w
 19961  0751  00AE               	movwf	writeData@data
 19962  0752  3036               	movlw	54
 19963  0753  3191  2103  3187   	fcall	_writeData
 19964                           
 19965                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 19966  0756  3079               	movlw	121
 19967  0757  0140               	movlb	0	; select bank0
 19968  0758  00B6               	movwf	??_TM1650_fastPrintNum
 19969  0759  0836               	movf	??_TM1650_fastPrintNum,w
 19970  075A  00AE               	movwf	writeData@data
 19971  075B  3037               	movlw	55
 19972  075C  3191  2103         	fcall	_writeData
 19973  075E  0008               	return
 19974  075F                     l7634:	
 19975                           
 19976                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 19977  075F  300A               	movlw	10
 19978  0760  00A8               	movwf	___lwmod@divisor
 19979  0761  3000               	movlw	0
 19980  0762  00A9               	movwf	___lwmod@divisor+1
 19981  0763  0835               	movf	TM1650_fastPrintNum@num+1,w
 19982  0764  00AB               	movwf	___lwmod@dividend+1
 19983  0765  0834               	movf	TM1650_fastPrintNum@num,w
 19984  0766  00AA               	movwf	___lwmod@dividend
 19985  0767  3192  22DF  3187   	fcall	___lwmod
 19986  076A  0140               	movlb	0	; select bank0
 19987  076B  0829               	movf	?___lwmod+1,w
 19988  076C  0085               	movwf	5
 19989  076D  0828               	movf	?___lwmod,w
 19990  076E  0084               	movwf	4
 19991  076F  3010               	movlw	low ((_charTable+16)| (0+32768))
 19992  0770  0784               	addwf	4,f
 19993  0771  3098               	movlw	high ((_charTable+16)| (0+32768))
 19994  0772  3D85               	addwfc	5,f
 19995  0773  0800               	movf	0,w	;code access
 19996  0774  00B6               	movwf	??_TM1650_fastPrintNum
 19997  0775  0836               	movf	??_TM1650_fastPrintNum,w
 19998  0776  00AE               	movwf	writeData@data
 19999  0777  3037               	movlw	55
 20000  0778  3191  2103  3187   	fcall	_writeData
 20001                           
 20002                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 20003  077B  300A               	movlw	10
 20004  077C  0140               	movlb	0	; select bank0
 20005  077D  00A8               	movwf	___lwmod@divisor
 20006  077E  3000               	movlw	0
 20007  077F  00A9               	movwf	___lwmod@divisor+1
 20008  0780  300A               	movlw	10
 20009  0781  00A0               	movwf	___lwdiv@divisor
 20010  0782  3000               	movlw	0
 20011  0783  00A1               	movwf	___lwdiv@divisor+1
 20012  0784  0835               	movf	TM1650_fastPrintNum@num+1,w
 20013  0785  00A3               	movwf	___lwdiv@dividend+1
 20014  0786  0834               	movf	TM1650_fastPrintNum@num,w
 20015  0787  00A2               	movwf	___lwdiv@dividend
 20016  0788  3194  2436  3187   	fcall	___lwdiv
 20017  078B  0140               	movlb	0	; select bank0
 20018  078C  0821               	movf	?___lwdiv+1,w
 20019  078D  00AB               	movwf	___lwmod@dividend+1
 20020  078E  0820               	movf	?___lwdiv,w
 20021  078F  00AA               	movwf	___lwmod@dividend
 20022  0790  3192  22DF  3187   	fcall	___lwmod
 20023  0793  0140               	movlb	0	; select bank0
 20024  0794  0829               	movf	?___lwmod+1,w
 20025  0795  0085               	movwf	5
 20026  0796  0828               	movf	?___lwmod,w
 20027  0797  0084               	movwf	4
 20028  0798  3010               	movlw	low ((_charTable+16)| (0+32768))
 20029  0799  0784               	addwf	4,f
 20030  079A  3098               	movlw	high ((_charTable+16)| (0+32768))
 20031  079B  3D85               	addwfc	5,f
 20032  079C  0800               	movf	0,w	;code access
 20033  079D  00B6               	movwf	??_TM1650_fastPrintNum
 20034  079E  0836               	movf	??_TM1650_fastPrintNum,w
 20035  079F  00AE               	movwf	writeData@data
 20036  07A0  3036               	movlw	54
 20037  07A1  3191  2103  3187   	fcall	_writeData
 20038                           
 20039                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 20040  07A4  300A               	movlw	10
 20041  07A5  0140               	movlb	0	; select bank0
 20042  07A6  00A8               	movwf	___lwmod@divisor
 20043  07A7  3000               	movlw	0
 20044  07A8  00A9               	movwf	___lwmod@divisor+1
 20045  07A9  3064               	movlw	100
 20046  07AA  00A0               	movwf	___lwdiv@divisor
 20047  07AB  3000               	movlw	0
 20048  07AC  00A1               	movwf	___lwdiv@divisor+1
 20049  07AD  0835               	movf	TM1650_fastPrintNum@num+1,w
 20050  07AE  00A3               	movwf	___lwdiv@dividend+1
 20051  07AF  0834               	movf	TM1650_fastPrintNum@num,w
 20052  07B0  00A2               	movwf	___lwdiv@dividend
 20053  07B1  3194  2436  3187   	fcall	___lwdiv
 20054  07B4  0140               	movlb	0	; select bank0
 20055  07B5  0821               	movf	?___lwdiv+1,w
 20056  07B6  00AB               	movwf	___lwmod@dividend+1
 20057  07B7  0820               	movf	?___lwdiv,w
 20058  07B8  00AA               	movwf	___lwmod@dividend
 20059  07B9  3192  22DF  3187   	fcall	___lwmod
 20060  07BC  0140               	movlb	0	; select bank0
 20061  07BD  0829               	movf	?___lwmod+1,w
 20062  07BE  0085               	movwf	5
 20063  07BF  0828               	movf	?___lwmod,w
 20064  07C0  0084               	movwf	4
 20065  07C1  3010               	movlw	low ((_charTable+16)| (0+32768))
 20066  07C2  0784               	addwf	4,f
 20067  07C3  3098               	movlw	high ((_charTable+16)| (0+32768))
 20068  07C4  3D85               	addwfc	5,f
 20069  07C5  0800               	movf	0,w	;code access
 20070  07C6  00B6               	movwf	??_TM1650_fastPrintNum
 20071  07C7  0836               	movf	??_TM1650_fastPrintNum,w
 20072  07C8  00AE               	movwf	writeData@data
 20073  07C9  3035               	movlw	53
 20074  07CA  3191  2103  3187   	fcall	_writeData
 20075                           
 20076                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 20077  07CD  300A               	movlw	10
 20078  07CE  0140               	movlb	0	; select bank0
 20079  07CF  00A8               	movwf	___lwmod@divisor
 20080  07D0  3000               	movlw	0
 20081  07D1  00A9               	movwf	___lwmod@divisor+1
 20082  07D2  30E8               	movlw	232
 20083  07D3  00A0               	movwf	___lwdiv@divisor
 20084  07D4  3003               	movlw	3
 20085  07D5  00A1               	movwf	___lwdiv@divisor+1
 20086  07D6  0835               	movf	TM1650_fastPrintNum@num+1,w
 20087  07D7  00A3               	movwf	___lwdiv@dividend+1
 20088  07D8  0834               	movf	TM1650_fastPrintNum@num,w
 20089  07D9  00A2               	movwf	___lwdiv@dividend
 20090  07DA  3194  2436  3187   	fcall	___lwdiv
 20091  07DD  0140               	movlb	0	; select bank0
 20092  07DE  0821               	movf	?___lwdiv+1,w
 20093  07DF  00AB               	movwf	___lwmod@dividend+1
 20094  07E0  0820               	movf	?___lwdiv,w
 20095  07E1  00AA               	movwf	___lwmod@dividend
 20096  07E2  3192  22DF  3187   	fcall	___lwmod
 20097  07E5  0140               	movlb	0	; select bank0
 20098  07E6  0829               	movf	?___lwmod+1,w
 20099  07E7  0085               	movwf	5
 20100  07E8  0828               	movf	?___lwmod,w
 20101  07E9  0084               	movwf	4
 20102  07EA  3010               	movlw	low ((_charTable+16)| (0+32768))
 20103  07EB  0784               	addwf	4,f
 20104  07EC  3098               	movlw	high ((_charTable+16)| (0+32768))
 20105  07ED  3D85               	addwfc	5,f
 20106  07EE  0800               	movf	0,w	;code access
 20107  07EF  00B6               	movwf	??_TM1650_fastPrintNum
 20108  07F0  0836               	movf	??_TM1650_fastPrintNum,w
 20109  07F1  00AE               	movwf	writeData@data
 20110  07F2  3034               	movlw	52
 20111  07F3  3191  2103         	fcall	_writeData
 20112  07F5  0008               	return
 20113  07F6                     __end_of_TM1650_fastPrintNum:	
 20114                           
 20115                           	psect	text65
 20116  1103                     __ptext65:	
 20117 ;; *************** function _writeData *****************
 20118 ;; Defined at:
 20119 ;;		line 31 in file "tm1650.c"
 20120 ;; Parameters:    Size  Location     Type
 20121 ;;  address         1    wreg     unsigned char 
 20122 ;;  data            1   14[BANK0 ] unsigned char 
 20123 ;; Auto vars:     Size  Location     Type
 20124 ;;  address         1   18[BANK0 ] unsigned char 
 20125 ;;  status          1   19[BANK0 ] enum E11370
 20126 ;; Return value:  Size  Location     Type
 20127 ;;                  1    wreg      void 
 20128 ;; Registers used:
 20129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20130 ;; Tracked objects:
 20131 ;;		On entry : 0/0
 20132 ;;		On exit  : 0/0
 20133 ;;		Unchanged: 0/0
 20134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20135 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20137 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20138 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20139 ;;Total ram usage:        6 bytes
 20140 ;; Hardware stack levels used:    1
 20141 ;; Hardware stack levels required when called:    7
 20142 ;; This function calls:
 20143 ;;		_I2C1_MasterWrite
 20144 ;; This function is called by:
 20145 ;;		_TM1650_enable
 20146 ;;		_TM1650_setDigit
 20147 ;;		_TM1650_fastPrintNum
 20148 ;;		_TM1650_brightness
 20149 ;; This function uses a non-reentrant model
 20150 ;;
 20151                           
 20152                           
 20153                           ;psect for function _writeData
 20154  1103                     _writeData:	
 20155                           
 20156                           ;incstack = 0
 20157                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20158                           ;writeData@address stored from wreg
 20159  1103  0140               	movlb	0	; select bank0
 20160  1104  00B2               	movwf	writeData@address
 20161                           
 20162                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 20163  1105  3002               	movlw	2
 20164  1106  00AF               	movwf	??_writeData
 20165  1107  082F               	movf	??_writeData,w
 20166  1108  00B3               	movwf	writeData@status
 20167                           
 20168                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 20169  1109  01A7               	clrf	I2C1_MasterWrite@length
 20170  110A  0AA7               	incf	I2C1_MasterWrite@length,f
 20171  110B  0832               	movf	writeData@address,w
 20172  110C  00AF               	movwf	??_writeData
 20173  110D  01B0               	clrf	??_writeData+1
 20174  110E  082F               	movf	??_writeData,w
 20175  110F  00A8               	movwf	I2C1_MasterWrite@address
 20176  1110  0830               	movf	??_writeData+1,w
 20177  1111  00A9               	movwf	I2C1_MasterWrite@address+1
 20178  1112  3033               	movlw	(low (writeData@status| 0))& (0+255)
 20179  1113  00B1               	movwf	??_writeData+2
 20180  1114  0831               	movf	??_writeData+2,w
 20181  1115  00AA               	movwf	I2C1_MasterWrite@pflag
 20182  1116  302E               	movlw	(low (writeData@data| 0))& (0+255)
 20183  1117  3192  22B5  3191   	fcall	_I2C1_MasterWrite
 20184  111A                     l7072:	
 20185                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 20186                           
 20187  111A  3002               	movlw	2
 20188  111B  0140               	movlb	0	; select bank0
 20189  111C  0633               	xorwf	writeData@status,w
 20190  111D  1D03               	btfss	3,2
 20191  111E  0008               	return
 20192  111F  291A               	goto	l7072
 20193  1120                     __end_of_writeData:	
 20194                           
 20195                           	psect	text66
 20196  12B5                     __ptext66:	
 20197 ;; *************** function _I2C1_MasterWrite *****************
 20198 ;; Defined at:
 20199 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 20200 ;; Parameters:    Size  Location     Type
 20201 ;;  pdata           1    wreg     PTR unsigned char 
 20202 ;;		 -> writeData@data(1), 
 20203 ;;  length          1    7[BANK0 ] unsigned char 
 20204 ;;  address         2    8[BANK0 ] unsigned short 
 20205 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 20206 ;;		 -> writeData@status(1), 
 20207 ;; Auto vars:     Size  Location     Type
 20208 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 20209 ;;		 -> writeData@data(1), 
 20210 ;; Return value:  Size  Location     Type
 20211 ;;                  1    wreg      void 
 20212 ;; Registers used:
 20213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20214 ;; Tracked objects:
 20215 ;;		On entry : 0/0
 20216 ;;		On exit  : 0/0
 20217 ;;		Unchanged: 0/0
 20218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20222 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20223 ;;Total ram usage:        7 bytes
 20224 ;; Hardware stack levels used:    1
 20225 ;; Hardware stack levels required when called:    6
 20226 ;; This function calls:
 20227 ;;		_I2C1_MasterTRBInsert
 20228 ;;		_I2C1_MasterWriteTRBBuild
 20229 ;; This function is called by:
 20230 ;;		_writeData
 20231 ;; This function uses a non-reentrant model
 20232 ;;
 20233                           
 20234                           
 20235                           ;psect for function _I2C1_MasterWrite
 20236  12B5                     _I2C1_MasterWrite:	
 20237                           
 20238                           ;incstack = 0
 20239                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20240                           ;I2C1_MasterWrite@pdata stored from wreg
 20241  12B5  0140               	movlb	0	; select bank0
 20242  12B6  00AD               	movwf	I2C1_MasterWrite@pdata
 20243                           
 20244                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 20245  12B7  0141               	movlb	1	; select bank1
 20246  12B8  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 20247  12B9  2AD8               	goto	l7066
 20248                           
 20249                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 20250  12BA  0140               	movlb	0	; select bank0
 20251  12BB  082D               	movf	I2C1_MasterWrite@pdata,w
 20252  12BC  00AB               	movwf	??_I2C1_MasterWrite
 20253  12BD  082B               	movf	??_I2C1_MasterWrite,w
 20254  12BE  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 20255  12BF  0827               	movf	I2C1_MasterWrite@length,w
 20256  12C0  00AC               	movwf	??_I2C1_MasterWrite+1
 20257  12C1  082C               	movf	??_I2C1_MasterWrite+1,w
 20258  12C2  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 20259  12C3  0829               	movf	I2C1_MasterWrite@address+1,w
 20260  12C4  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 20261  12C5  0828               	movf	I2C1_MasterWrite@address,w
 20262  12C6  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 20263  12C7  3051               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20264  12C8  3191  21D8  3192   	fcall	_I2C1_MasterWriteTRBBuild
 20265                           
 20266                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 20267  12CB  3051               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20268  12CC  0140               	movlb	0	; select bank0
 20269  12CD  00AB               	movwf	??_I2C1_MasterWrite
 20270  12CE  082B               	movf	??_I2C1_MasterWrite,w
 20271  12CF  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 20272  12D0  082A               	movf	I2C1_MasterWrite@pflag,w
 20273  12D1  00AC               	movwf	??_I2C1_MasterWrite+1
 20274  12D2  082C               	movf	??_I2C1_MasterWrite+1,w
 20275  12D3  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 20276  12D4  3001               	movlw	1
 20277  12D5  3188  2007         	fcall	_I2C1_MasterTRBInsert
 20278                           
 20279                           ;mcc_generated_files/i2c1.c: 613:     }
 20280  12D7  0008               	return
 20281  12D8                     l7066:	
 20282                           
 20283                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20284  12D8  0140               	movlb	0	; select bank0
 20285  12D9  082A               	movf	I2C1_MasterWrite@pflag,w
 20286  12DA  0086               	movwf	6
 20287  12DB  0187               	clrf	7
 20288  12DC  0181               	clrf	1
 20289  12DD  0A81               	incf	1,f
 20290  12DE  0008               	return
 20291  12DF                     __end_of_I2C1_MasterWrite:	
 20292                           
 20293                           	psect	text67
 20294  11D8                     __ptext67:	
 20295 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 20296 ;; Defined at:
 20297 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;  ptrb            1    wreg     PTR struct .
 20300 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20301 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 20302 ;;		 -> writeData@data(1), 
 20303 ;;  length          1    1[BANK0 ] unsigned char 
 20304 ;;  address         2    2[BANK0 ] unsigned short 
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;  ptrb            1    6[BANK0 ] PTR struct .
 20307 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20308 ;; Return value:  Size  Location     Type
 20309 ;;                  1    wreg      void 
 20310 ;; Registers used:
 20311 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20312 ;; Tracked objects:
 20313 ;;		On entry : 0/0
 20314 ;;		On exit  : 0/0
 20315 ;;		Unchanged: 0/0
 20316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20317 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20321 ;;Total ram usage:        7 bytes
 20322 ;; Hardware stack levels used:    1
 20323 ;; Hardware stack levels required when called:    4
 20324 ;; This function calls:
 20325 ;;		Nothing
 20326 ;; This function is called by:
 20327 ;;		_I2C1_MasterWrite
 20328 ;; This function uses a non-reentrant model
 20329 ;;
 20330                           
 20331                           
 20332                           ;psect for function _I2C1_MasterWriteTRBBuild
 20333  11D8                     _I2C1_MasterWriteTRBBuild:	
 20334                           
 20335                           ;incstack = 0
 20336                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 20337                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 20338  11D8  0140               	movlb	0	; select bank0
 20339  11D9  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 20340                           
 20341                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 20342  11DA  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 20343  11DB  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 20344  11DC  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 20345  11DD  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20346  11DE  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 20347  11DF  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 20348  11E0  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20349  11E1  0086               	movwf	6
 20350  11E2  3001               	movlw	1	; select bank2/3
 20351  11E3  0087               	movwf	7
 20352  11E4  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20353  11E5  3FC0               	movwi [0]fsr1
 20354  11E6  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 20355  11E7  3FC1               	movwi [1]fsr1
 20356                           
 20357                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 20358  11E8  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 20359  11E9  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20360  11EA  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20361  11EB  3E02               	addlw	2
 20362  11EC  0086               	movwf	6
 20363  11ED  3001               	movlw	1	; select bank2/3
 20364  11EE  0087               	movwf	7
 20365  11EF  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20366  11F0  0081               	movwf	1
 20367                           
 20368                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 20369  11F1  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 20370  11F2  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20371  11F3  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20372  11F4  3E03               	addlw	3
 20373  11F5  0086               	movwf	6
 20374  11F6  3001               	movlw	1	; select bank2/3
 20375  11F7  0087               	movwf	7
 20376  11F8  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20377  11F9  0081               	movwf	1
 20378  11FA  0008               	return
 20379  11FB                     __end_of_I2C1_MasterWriteTRBBuild:	
 20380                           
 20381                           	psect	text68
 20382  0807                     __ptext68:	
 20383 ;; *************** function _I2C1_MasterTRBInsert *****************
 20384 ;; Defined at:
 20385 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 20386 ;; Parameters:    Size  Location     Type
 20387 ;;  count           1    wreg     unsigned char 
 20388 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 20389 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 20390 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 20391 ;;		 -> writeData@status(1), 
 20392 ;; Auto vars:     Size  Location     Type
 20393 ;;  count           1    3[BANK0 ] unsigned char 
 20394 ;; Return value:  Size  Location     Type
 20395 ;;                  1    wreg      void 
 20396 ;; Registers used:
 20397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20398 ;; Tracked objects:
 20399 ;;		On entry : 0/0
 20400 ;;		On exit  : 0/0
 20401 ;;		Unchanged: 0/0
 20402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;Total ram usage:        4 bytes
 20408 ;; Hardware stack levels used:    1
 20409 ;; Hardware stack levels required when called:    5
 20410 ;; This function calls:
 20411 ;;		_I2C1_WaitForLastPacketToComplete
 20412 ;; This function is called by:
 20413 ;;		_I2C1_MasterWrite
 20414 ;;		_I2C1_MasterRead
 20415 ;; This function uses a non-reentrant model
 20416 ;;
 20417                           
 20418                           
 20419                           ;psect for function _I2C1_MasterTRBInsert
 20420  0807                     _I2C1_MasterTRBInsert:	
 20421                           
 20422                           ;incstack = 0
 20423                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20424                           ;I2C1_MasterTRBInsert@count stored from wreg
 20425  0807  0140               	movlb	0	; select bank0
 20426  0808  00A3               	movwf	I2C1_MasterTRBInsert@count
 20427                           
 20428                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 20429  0809  0141               	movlb	1	; select bank1
 20430  080A  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 20431  080B  2849               	goto	l7054
 20432                           
 20433                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 20434  080C  3002               	movlw	2
 20435  080D  0140               	movlb	0	; select bank0
 20436  080E  00A2               	movwf	??_I2C1_MasterTRBInsert
 20437  080F  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20438  0810  0086               	movwf	6
 20439  0811  0187               	clrf	7
 20440  0812  0822               	movf	??_I2C1_MasterTRBInsert,w
 20441  0813  0081               	movwf	1
 20442                           
 20443                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 20444  0814  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 20445  0815  00A2               	movwf	??_I2C1_MasterTRBInsert
 20446  0816  0141               	movlb	1	; select bank1
 20447  0817  0A20               	incf	_i2c1_object^(0+128),w
 20448  0818  0086               	movwf	6
 20449  0819  3001               	movlw	1	; select bank2/3
 20450  081A  0087               	movwf	7
 20451  081B  0140               	movlb	0	; select bank0
 20452  081C  0822               	movf	??_I2C1_MasterTRBInsert,w
 20453  081D  0081               	movwf	1
 20454                           
 20455                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 20456  081E  0823               	movf	I2C1_MasterTRBInsert@count,w
 20457  081F  00A2               	movwf	??_I2C1_MasterTRBInsert
 20458  0820  0141               	movlb	1	; select bank1
 20459  0821  0820               	movf	_i2c1_object^(0+128),w
 20460  0822  0086               	movwf	6
 20461  0823  3001               	movlw	1	; select bank2/3
 20462  0824  0087               	movwf	7
 20463  0825  0140               	movlb	0	; select bank0
 20464  0826  0822               	movf	??_I2C1_MasterTRBInsert,w
 20465  0827  0081               	movwf	1
 20466                           
 20467                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 20468  0828  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20469  0829  00A2               	movwf	??_I2C1_MasterTRBInsert
 20470  082A  0141               	movlb	1	; select bank1
 20471  082B  0820               	movf	_i2c1_object^(0+128),w
 20472  082C  3E02               	addlw	2
 20473  082D  0086               	movwf	6
 20474  082E  3001               	movlw	1	; select bank2/3
 20475  082F  0087               	movwf	7
 20476  0830  0140               	movlb	0	; select bank0
 20477  0831  0822               	movf	??_I2C1_MasterTRBInsert,w
 20478  0832  0081               	movwf	1
 20479                           
 20480                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 20481  0833  3003               	movlw	3
 20482  0834  00A2               	movwf	??_I2C1_MasterTRBInsert
 20483  0835  0822               	movf	??_I2C1_MasterTRBInsert,w
 20484  0836  0141               	movlb	1	; select bank1
 20485  0837  07A0               	addwf	_i2c1_object^(0+128),f
 20486                           
 20487                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 20488  0838  0820               	movf	_i2c1_object^(0+128),w
 20489  0839  3A58               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 20490  083A  1D03               	skipz
 20491  083B  2842               	goto	l7050
 20492                           
 20493                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 20494  083C  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 20495  083D  0140               	movlb	0	; select bank0
 20496  083E  00A2               	movwf	??_I2C1_MasterTRBInsert
 20497  083F  0822               	movf	??_I2C1_MasterTRBInsert,w
 20498  0840  0141               	movlb	1	; select bank1
 20499  0841  00A0               	movwf	_i2c1_object^(0+128)
 20500  0842                     l7050:	
 20501                           
 20502                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 20503  0842  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 20504                           
 20505                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 20506  0843  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 20507  0844  0620               	xorwf	_i2c1_object^(0+128),w
 20508  0845  1D03               	skipz
 20509  0846  284F               	goto	l7056
 20510                           
 20511                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 20512  0847  1422               	bsf	(_i2c1_object^(0+128)+2),0
 20513  0848  284F               	goto	l7056
 20514  0849                     l7054:	
 20515                           
 20516                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20517  0849  0140               	movlb	0	; select bank0
 20518  084A  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20519  084B  0086               	movwf	6
 20520  084C  0187               	clrf	7
 20521  084D  0181               	clrf	1
 20522  084E  0A81               	incf	1,f
 20523  084F                     l7056:	
 20524                           
 20525                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 20526  084F  0140               	movlb	0	; select bank0
 20527  0850  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20528  0851  0086               	movwf	6
 20529  0852  0187               	clrf	7
 20530  0853  3002               	movlw	2
 20531  0854  0601               	xorwf	1,w
 20532  0855  1D03               	btfss	3,2
 20533  0856  0008               	return
 20534                           
 20535                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 20536  0857  319E  26B8         	fcall	_I2C1_WaitForLastPacketToComplete
 20537                           
 20538                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 20539  0859  014E               	movlb	14	; select bank14
 20540  085A  140F               	bsf	15,0	;volatile
 20541  085B  0008               	return
 20542  085C                     __end_of_I2C1_MasterTRBInsert:	
 20543                           
 20544                           	psect	text69
 20545  1EB8                     __ptext69:	
 20546 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 20547 ;; Defined at:
 20548 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;		None
 20551 ;; Auto vars:     Size  Location     Type
 20552 ;;		None
 20553 ;; Return value:  Size  Location     Type
 20554 ;;                  1    wreg      void 
 20555 ;; Registers used:
 20556 ;;		wreg, status,2, status,0
 20557 ;; Tracked objects:
 20558 ;;		On entry : 0/0
 20559 ;;		On exit  : 0/0
 20560 ;;		Unchanged: 0/0
 20561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20566 ;;Total ram usage:        0 bytes
 20567 ;; Hardware stack levels used:    1
 20568 ;; Hardware stack levels required when called:    4
 20569 ;; This function calls:
 20570 ;;		Nothing
 20571 ;; This function is called by:
 20572 ;;		_I2C1_MasterTRBInsert
 20573 ;; This function uses a non-reentrant model
 20574 ;;
 20575                           
 20576                           
 20577                           ;psect for function _I2C1_WaitForLastPacketToComplete
 20578  1EB8                     _I2C1_WaitForLastPacketToComplete:	
 20579  1EB8                     l7038:	
 20580                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20581                           
 20582                           ;incstack = 0
 20583                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 20584                           
 20585                           
 20586                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20587  1EB8  0141               	movlb	1	; select bank1
 20588  1EB9  0844               	movf	_i2c1_state^(0+128),w
 20589  1EBA  1903               	btfsc	3,2
 20590  1EBB  0008               	return
 20591  1EBC  2EB8               	goto	l7038
 20592  1EBD                     __end_of_I2C1_WaitForLastPacketToComplete:	
 20593                           
 20594                           	psect	text70
 20595  12DF                     __ptext70:	
 20596 ;; *************** function ___lwmod *****************
 20597 ;; Defined at:
 20598 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;  divisor         2    8[BANK0 ] unsigned int 
 20601 ;;  dividend        2   10[BANK0 ] unsigned int 
 20602 ;; Auto vars:     Size  Location     Type
 20603 ;;  counter         1   13[BANK0 ] unsigned char 
 20604 ;; Return value:  Size  Location     Type
 20605 ;;                  2    8[BANK0 ] unsigned int 
 20606 ;; Registers used:
 20607 ;;		wreg, status,2, status,0
 20608 ;; Tracked objects:
 20609 ;;		On entry : 0/0
 20610 ;;		On exit  : 0/0
 20611 ;;		Unchanged: 0/0
 20612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20616 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20617 ;;Total ram usage:        6 bytes
 20618 ;; Hardware stack levels used:    1
 20619 ;; Hardware stack levels required when called:    4
 20620 ;; This function calls:
 20621 ;;		Nothing
 20622 ;; This function is called by:
 20623 ;;		_TM1650_fastPrintNum
 20624 ;; This function uses a non-reentrant model
 20625 ;;
 20626                           
 20627                           
 20628                           ;psect for function ___lwmod
 20629  12DF                     ___lwmod:	
 20630                           
 20631                           ;incstack = 0
 20632                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 20633  12DF  0140               	movlb	0	; select bank0
 20634  12E0  0828               	movf	___lwmod@divisor,w
 20635  12E1  0429               	iorwf	___lwmod@divisor+1,w
 20636  12E2  1903               	btfsc	3,2
 20637  12E3  2B07               	goto	l4904
 20638  12E4  01AD               	clrf	___lwmod@counter
 20639  12E5  0AAD               	incf	___lwmod@counter,f
 20640  12E6                     l4894:	
 20641  12E6  1BA9               	btfsc	___lwmod@divisor+1,7
 20642  12E7  2AF2               	goto	l4896
 20643  12E8  3001               	movlw	1
 20644  12E9                     u3615:	
 20645  12E9  35A8               	lslf	___lwmod@divisor,f
 20646  12EA  0DA9               	rlf	___lwmod@divisor+1,f
 20647  12EB  0B89               	decfsz	9,f
 20648  12EC  2AE9               	goto	u3615
 20649  12ED  3001               	movlw	1
 20650  12EE  00AC               	movwf	??___lwmod
 20651  12EF  082C               	movf	??___lwmod,w
 20652  12F0  07AD               	addwf	___lwmod@counter,f
 20653  12F1  2AE6               	goto	l4894
 20654  12F2                     l4896:	
 20655  12F2  0829               	movf	___lwmod@divisor+1,w
 20656  12F3  022B               	subwf	___lwmod@dividend+1,w
 20657  12F4  1D03               	skipz
 20658  12F5  2AF8               	goto	u3635
 20659  12F6  0828               	movf	___lwmod@divisor,w
 20660  12F7  022A               	subwf	___lwmod@dividend,w
 20661  12F8                     u3635:	
 20662  12F8  1C03               	skipc
 20663  12F9  2AFE               	goto	l4900
 20664  12FA  0828               	movf	___lwmod@divisor,w
 20665  12FB  02AA               	subwf	___lwmod@dividend,f
 20666  12FC  0829               	movf	___lwmod@divisor+1,w
 20667  12FD  3BAB               	subwfb	___lwmod@dividend+1,f
 20668  12FE                     l4900:	
 20669  12FE  3001               	movlw	1
 20670  12FF                     u3645:	
 20671  12FF  36A9               	lsrf	___lwmod@divisor+1,f
 20672  1300  0CA8               	rrf	___lwmod@divisor,f
 20673  1301  0B89               	decfsz	9,f
 20674  1302  2AFF               	goto	u3645
 20675  1303  3001               	movlw	1
 20676  1304  02AD               	subwf	___lwmod@counter,f
 20677  1305  1D03               	btfss	3,2
 20678  1306  2AF2               	goto	l4896
 20679  1307                     l4904:	
 20680  1307  082B               	movf	___lwmod@dividend+1,w
 20681  1308  00A9               	movwf	?___lwmod+1
 20682  1309  082A               	movf	___lwmod@dividend,w
 20683  130A  00A8               	movwf	?___lwmod
 20684  130B  0008               	return
 20685  130C                     __end_of___lwmod:	
 20686                           
 20687                           	psect	text71
 20688  1714                     __ptext71:	
 20689 ;; *************** function _CONTROL_BEAT *****************
 20690 ;; Defined at:
 20691 ;;		line 212 in file "controller.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;		None
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;		None
 20696 ;; Return value:  Size  Location     Type
 20697 ;;                  1    wreg      _Bool 
 20698 ;; Registers used:
 20699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20700 ;; Tracked objects:
 20701 ;;		On entry : 0/0
 20702 ;;		On exit  : 0/0
 20703 ;;		Unchanged: 0/0
 20704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20708 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20709 ;;Total ram usage:        1 bytes
 20710 ;; Hardware stack levels used:    1
 20711 ;; Hardware stack levels required when called:    5
 20712 ;; This function calls:
 20713 ;;		_BUTTONS_isHeld
 20714 ;; This function is called by:
 20715 ;;		_CONTROLLER_task
 20716 ;; This function uses a non-reentrant model
 20717 ;;
 20718                           
 20719                           
 20720                           ;psect for function _CONTROL_BEAT
 20721  1714                     _CONTROL_BEAT:	
 20722                           
 20723                           ;controller.c: 214:     if(BUTTONS_isHeld(enter) && !enterPressed){
 20724                           
 20725                           ;incstack = 0
 20726                           ; Regs used in _CONTROL_BEAT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20727  1714  0141               	movlb	1	; select bank1
 20728  1715  083B               	movf	_enter^(0+128),w
 20729  1716  319F  2796  3197   	fcall	_BUTTONS_isHeld
 20730  1719  3A00               	xorlw	0
 20731  171A  1903               	skipnz
 20732  171B  2F49               	goto	l8060
 20733  171C  0141               	movlb	1	; select bank1
 20734  171D  0837               	movf	_enterPressed^(0+128),w
 20735  171E  1D03               	btfss	3,2
 20736  171F  2F49               	goto	l8060
 20737                           
 20738                           ;controller.c: 215:         beatHold = !beatHold;
 20739  1720  0832               	movf	_beatHold^(0+128),w
 20740  1721  1D03               	btfss	3,2
 20741  1722  2F25               	goto	u7920
 20742  1723  3001               	movlw	1
 20743  1724  2F26               	goto	u7930
 20744  1725                     u7920:	
 20745  1725  3000               	movlw	0
 20746  1726                     u7930:	
 20747  1726  0140               	movlb	0	; select bank0
 20748  1727  00A1               	movwf	??_CONTROL_BEAT
 20749  1728  0821               	movf	??_CONTROL_BEAT,w
 20750  1729  0141               	movlb	1	; select bank1
 20751  172A  00B2               	movwf	_beatHold^(0+128)
 20752                           
 20753                           ;controller.c: 216:         enterPressed = 1;
 20754  172B  01B7               	clrf	_enterPressed^(0+128)
 20755  172C  0AB7               	incf	_enterPressed^(0+128),f
 20756  172D  2F47               	goto	l8056
 20757  172E                     l8062:	
 20758                           
 20759                           ;controller.c: 223:         if(beatBrightness < 9){
 20760  172E  3009               	movlw	9
 20761  172F  026F               	subwf	_beatBrightness^(0+128),w
 20762  1730  1803               	skipnc
 20763  1731  2F39               	goto	l8066
 20764                           
 20765                           ;controller.c: 224:             beatBrightness++;
 20766  1732  3001               	movlw	1
 20767  1733  0140               	movlb	0	; select bank0
 20768  1734  00A1               	movwf	??_CONTROL_BEAT
 20769  1735  0821               	movf	??_CONTROL_BEAT,w
 20770  1736  0141               	movlb	1	; select bank1
 20771  1737  07EF               	addwf	_beatBrightness^(0+128),f
 20772                           
 20773                           ;controller.c: 225:         } else {
 20774  1738  2F47               	goto	l8056
 20775  1739                     l8066:	
 20776                           
 20777                           ;controller.c: 226:             beatBrightness = 9;
 20778  1739  3009               	movlw	9
 20779  173A  0140               	movlb	0	; select bank0
 20780  173B  00A1               	movwf	??_CONTROL_BEAT
 20781  173C  0821               	movf	??_CONTROL_BEAT,w
 20782  173D  0141               	movlb	1	; select bank1
 20783  173E  00EF               	movwf	_beatBrightness^(0+128)
 20784  173F  2F47               	goto	l8056
 20785  1740                     l8074:	
 20786                           
 20787                           ;controller.c: 230:         if(beatBrightness > 0){
 20788  1740  086F               	movf	_beatBrightness^(0+128),w
 20789  1741  1903               	btfsc	3,2
 20790  1742  2F46               	goto	l8078
 20791                           
 20792                           ;controller.c: 231:             beatBrightness--;
 20793  1743  3001               	movlw	1
 20794  1744  02EF               	subwf	_beatBrightness^(0+128),f
 20795                           
 20796                           ;controller.c: 232:         } else {
 20797  1745  2F47               	goto	l8056
 20798  1746                     l8078:	
 20799                           
 20800                           ;controller.c: 233:             beatBrightness = 0;
 20801  1746  01EF               	clrf	_beatBrightness^(0+128)
 20802  1747                     l8056:	
 20803                           
 20804                           ;controller.c: 217:         return 1;
 20805  1747  3001               	movlw	1
 20806  1748  0008               	return
 20807  1749                     l8060:	
 20808                           
 20809                           ;controller.c: 222:     if (upState) {
 20810  1749  0141               	movlb	1	; select bank1
 20811  174A  0836               	movf	_upState^(0+128),w
 20812  174B  1D03               	btfss	3,2
 20813  174C  2F2E               	goto	l8062
 20814  174D  0835               	movf	_downState^(0+128),w
 20815  174E  1D03               	btfss	3,2
 20816  174F  2F40               	goto	l8074
 20817                           
 20818                           ;controller.c: 238:     if(enterState && currentSelection == MODE_BEAT_FADE){
 20819  1750  0833               	movf	_enterState^(0+128),w
 20820  1751  1903               	btfsc	3,2
 20821  1752  2F5E               	goto	l8090
 20822  1753  3004               	movlw	4
 20823  1754  0639               	xorwf	_currentSelection^(0+128),w
 20824  1755  1D03               	btfss	3,2
 20825  1756  2F5E               	goto	l8090
 20826                           
 20827                           ;controller.c: 239:         currentSelection = MODE_BEAT_CONTINUOUS;
 20828  1757  3005               	movlw	5
 20829  1758  0140               	movlb	0	; select bank0
 20830  1759  00A1               	movwf	??_CONTROL_BEAT
 20831  175A  0821               	movf	??_CONTROL_BEAT,w
 20832  175B  0141               	movlb	1	; select bank1
 20833  175C  00B9               	movwf	_currentSelection^(0+128)
 20834                           
 20835                           ;controller.c: 241:     } else if(enterState && currentSelection == MODE_BEAT_STROBE){
 20836  175D  0008               	return
 20837  175E                     l8090:	
 20838  175E  0833               	movf	_enterState^(0+128),w
 20839  175F  1903               	btfsc	3,2
 20840  1760  2F6B               	goto	l8096
 20841  1761  0339               	decf	_currentSelection^(0+128),w
 20842  1762  1D03               	btfss	3,2
 20843  1763  2F6B               	goto	l8096
 20844                           
 20845                           ;controller.c: 242:         currentSelection = MODE_BEAT_FADE;
 20846  1764  3004               	movlw	4
 20847  1765  0140               	movlb	0	; select bank0
 20848  1766  00A1               	movwf	??_CONTROL_BEAT
 20849  1767  0821               	movf	??_CONTROL_BEAT,w
 20850  1768  0141               	movlb	1	; select bank1
 20851  1769  00B9               	movwf	_currentSelection^(0+128)
 20852                           
 20853                           ;controller.c: 243:     } else if(enterState && currentSelection == MODE_BEAT_CONTINUOUS
      +                          ){
 20854  176A  0008               	return
 20855  176B                     l8096:	
 20856  176B  0833               	movf	_enterState^(0+128),w
 20857  176C  1903               	btfsc	3,2
 20858  176D  2F79               	goto	l8102
 20859  176E  3005               	movlw	5
 20860  176F  0639               	xorwf	_currentSelection^(0+128),w
 20861  1770  1D03               	btfss	3,2
 20862  1771  2F79               	goto	l8102
 20863                           
 20864                           ;controller.c: 244:         currentSelection = MODE_BEAT_MIXED;
 20865  1772  3006               	movlw	6
 20866  1773  0140               	movlb	0	; select bank0
 20867  1774  00A1               	movwf	??_CONTROL_BEAT
 20868  1775  0821               	movf	??_CONTROL_BEAT,w
 20869  1776  0141               	movlb	1	; select bank1
 20870  1777  00B9               	movwf	_currentSelection^(0+128)
 20871                           
 20872                           ;controller.c: 245:     } else if(enterState && currentSelection == MODE_BEAT_MIXED){
 20873  1778  0008               	return
 20874  1779                     l8102:	
 20875  1779  0833               	movf	_enterState^(0+128),w
 20876  177A  1903               	btfsc	3,2
 20877  177B  0008               	return
 20878  177C  3006               	movlw	6
 20879  177D  0639               	xorwf	_currentSelection^(0+128),w
 20880  177E  1D03               	btfss	3,2
 20881  177F  0008               	return
 20882                           
 20883                           ;controller.c: 246:         currentSelection = MODE_BEAT_STROBE;
 20884  1780  01B9               	clrf	_currentSelection^(0+128)
 20885  1781  0AB9               	incf	_currentSelection^(0+128),f
 20886  1782  0008               	return
 20887  1783                     __end_of_CONTROL_BEAT:	
 20888                           
 20889                           	psect	text72
 20890  1F96                     __ptext72:	
 20891 ;; *************** function _BUTTONS_isHeld *****************
 20892 ;; Defined at:
 20893 ;;		line 106 in file "buttons.c"
 20894 ;; Parameters:    Size  Location     Type
 20895 ;;  button          1    wreg     PTR struct .
 20896 ;;		 -> buttons(32), NULL(0), 
 20897 ;; Auto vars:     Size  Location     Type
 20898 ;;  button          1    0[BANK0 ] PTR struct .
 20899 ;;		 -> buttons(32), NULL(0), 
 20900 ;; Return value:  Size  Location     Type
 20901 ;;                  1    wreg      _Bool 
 20902 ;; Registers used:
 20903 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20904 ;; Tracked objects:
 20905 ;;		On entry : 0/0
 20906 ;;		On exit  : 0/0
 20907 ;;		Unchanged: 0/0
 20908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20913 ;;Total ram usage:        1 bytes
 20914 ;; Hardware stack levels used:    1
 20915 ;; Hardware stack levels required when called:    4
 20916 ;; This function calls:
 20917 ;;		Nothing
 20918 ;; This function is called by:
 20919 ;;		_CONTROL_DMX
 20920 ;;		_CONTROL_BEAT
 20921 ;;		_CONTROL_MANUAL
 20922 ;; This function uses a non-reentrant model
 20923 ;;
 20924                           
 20925                           
 20926                           ;psect for function _BUTTONS_isHeld
 20927  1F96                     _BUTTONS_isHeld:	
 20928                           
 20929                           ;incstack = 0
 20930                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 20931                           ;BUTTONS_isHeld@button stored from wreg
 20932  1F96  0140               	movlb	0	; select bank0
 20933  1F97  00A0               	movwf	BUTTONS_isHeld@button
 20934                           
 20935                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 20936  1F98  0820               	movf	BUTTONS_isHeld@button,w
 20937  1F99  3E07               	addlw	7
 20938  1F9A  0086               	movwf	6
 20939  1F9B  3001               	movlw	1	; select bank2/3
 20940  1F9C  0087               	movwf	7
 20941  1F9D  3003               	movlw	3
 20942  1F9E  0601               	xorwf	1,w
 20943  1F9F  1D03               	btfss	3,2
 20944  1FA0  2FA3               	goto	l7674
 20945                           
 20946                           ;buttons.c: 108:         return 1;
 20947  1FA1  3001               	movlw	1
 20948  1FA2  0008               	return
 20949  1FA3                     l7674:	
 20950                           
 20951                           ;buttons.c: 111:     return 0;
 20952  1FA3  3000               	movlw	0
 20953  1FA4  0008               	return
 20954  1FA5                     __end_of_BUTTONS_isHeld:	
 20955                           
 20956                           	psect	text73
 20957  1FEC                     __ptext73:	
 20958 ;; *************** function _BUTTONS_isClicked *****************
 20959 ;; Defined at:
 20960 ;;		line 97 in file "buttons.c"
 20961 ;; Parameters:    Size  Location     Type
 20962 ;;  button          1    wreg     PTR struct .
 20963 ;;		 -> buttons(32), NULL(0), 
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;  button          1    0[BANK0 ] PTR struct .
 20966 ;;		 -> buttons(32), NULL(0), 
 20967 ;; Return value:  Size  Location     Type
 20968 ;;                  1    wreg      _Bool 
 20969 ;; Registers used:
 20970 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20971 ;; Tracked objects:
 20972 ;;		On entry : 0/0
 20973 ;;		On exit  : 0/0
 20974 ;;		Unchanged: 0/0
 20975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20979 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20980 ;;Total ram usage:        1 bytes
 20981 ;; Hardware stack levels used:    1
 20982 ;; Hardware stack levels required when called:    4
 20983 ;; This function calls:
 20984 ;;		Nothing
 20985 ;; This function is called by:
 20986 ;;		_CONTROLLER_task
 20987 ;; This function uses a non-reentrant model
 20988 ;;
 20989                           
 20990                           
 20991                           ;psect for function _BUTTONS_isClicked
 20992  1FEC                     _BUTTONS_isClicked:	
 20993                           
 20994                           ;incstack = 0
 20995                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 20996                           ;BUTTONS_isClicked@button stored from wreg
 20997  1FEC  0140               	movlb	0	; select bank0
 20998  1FED  00A0               	movwf	BUTTONS_isClicked@button
 20999                           
 21000                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 21001  1FEE  0820               	movf	BUTTONS_isClicked@button,w
 21002  1FEF  3E07               	addlw	7
 21003  1FF0  0086               	movwf	6
 21004  1FF1  3001               	movlw	1	; select bank2/3
 21005  1FF2  0087               	movwf	7
 21006  1FF3  0301               	decf	1,w
 21007  1FF4  1D03               	btfss	3,2
 21008  1FF5  2FFE               	goto	l7908
 21009                           
 21010                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 21011  1FF6  0820               	movf	BUTTONS_isClicked@button,w
 21012  1FF7  3E07               	addlw	7
 21013  1FF8  0086               	movwf	6
 21014  1FF9  3001               	movlw	1	; select bank2/3
 21015  1FFA  0087               	movwf	7
 21016  1FFB  0181               	clrf	1
 21017                           
 21018                           ;buttons.c: 100:         return 1;
 21019  1FFC  3001               	movlw	1
 21020  1FFD  0008               	return
 21021  1FFE                     l7908:	
 21022                           
 21023                           ;buttons.c: 103:     return 0;
 21024  1FFE  3000               	movlw	0
 21025  1FFF  0008               	return
 21026  2000                     __end_of_BUTTONS_isClicked:	
 21027                           
 21028                           	psect	text74
 21029  1EC3                     __ptext74:	
 21030 ;; *************** function _CLOCK_init *****************
 21031 ;; Defined at:
 21032 ;;		line 8 in file "clock.c"
 21033 ;; Parameters:    Size  Location     Type
 21034 ;;		None
 21035 ;; Auto vars:     Size  Location     Type
 21036 ;;		None
 21037 ;; Return value:  Size  Location     Type
 21038 ;;                  1    wreg      void 
 21039 ;; Registers used:
 21040 ;;		wreg, status,2, status,0, pclath, cstack
 21041 ;; Tracked objects:
 21042 ;;		On entry : 0/0
 21043 ;;		On exit  : 0/0
 21044 ;;		Unchanged: 0/0
 21045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21050 ;;Total ram usage:        0 bytes
 21051 ;; Hardware stack levels used:    1
 21052 ;; Hardware stack levels required when called:    5
 21053 ;; This function calls:
 21054 ;;		_TMR0_SetInterruptHandler
 21055 ;; This function is called by:
 21056 ;;		_main
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           
 21061                           ;psect for function _CLOCK_init
 21062  1EC3                     _CLOCK_init:	
 21063                           
 21064                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 21065                           
 21066                           ;incstack = 0
 21067                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 21068  1EC3  30BD               	movlw	low _CLOCK_timerCallback
 21069  1EC4  0140               	movlb	0	; select bank0
 21070  1EC5  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 21071  1EC6  301E               	movlw	high _CLOCK_timerCallback
 21072  1EC7  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 21073  1EC8  319E  26F7         	fcall	_TMR0_SetInterruptHandler
 21074  1ECA  0008               	return
 21075  1ECB                     __end_of_CLOCK_init:	
 21076                           
 21077                           	psect	text75
 21078  1EF7                     __ptext75:	
 21079 ;; *************** function _TMR0_SetInterruptHandler *****************
 21080 ;; Defined at:
 21081 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 21082 ;; Parameters:    Size  Location     Type
 21083 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21084 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 21085 ;; Auto vars:     Size  Location     Type
 21086 ;;		None
 21087 ;; Return value:  Size  Location     Type
 21088 ;;                  1    wreg      void 
 21089 ;; Registers used:
 21090 ;;		wreg
 21091 ;; Tracked objects:
 21092 ;;		On entry : 0/0
 21093 ;;		On exit  : 0/0
 21094 ;;		Unchanged: 0/0
 21095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21100 ;;Total ram usage:        2 bytes
 21101 ;; Hardware stack levels used:    1
 21102 ;; Hardware stack levels required when called:    4
 21103 ;; This function calls:
 21104 ;;		Nothing
 21105 ;; This function is called by:
 21106 ;;		_TMR0_Initialize
 21107 ;;		_CLOCK_init
 21108 ;; This function uses a non-reentrant model
 21109 ;;
 21110                           
 21111                           
 21112                           ;psect for function _TMR0_SetInterruptHandler
 21113  1EF7                     _TMR0_SetInterruptHandler:	
 21114                           
 21115                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 21116                           
 21117                           ;incstack = 0
 21118                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 21119  1EF7  0140               	movlb	0	; select bank0
 21120  1EF8  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 21121  1EF9  0142               	movlb	2	; select bank2
 21122  1EFA  00DB               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 21123  1EFB  0140               	movlb	0	; select bank0
 21124  1EFC  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 21125  1EFD  0142               	movlb	2	; select bank2
 21126  1EFE  00DA               	movwf	_TMR0_InterruptHandler^(0+256)
 21127  1EFF  0008               	return
 21128  1F00                     __end_of_TMR0_SetInterruptHandler:	
 21129                           
 21130                           	psect	text76
 21131  0DC9                     __ptext76:	
 21132 ;; *************** function _BUTTONS_task *****************
 21133 ;; Defined at:
 21134 ;;		line 56 in file "buttons.c"
 21135 ;; Parameters:    Size  Location     Type
 21136 ;;		None
 21137 ;; Auto vars:     Size  Location     Type
 21138 ;;  btn             1    8[BANK0 ] PTR struct .
 21139 ;;		 -> buttons(32), 
 21140 ;;  i               1    5[BANK0 ] unsigned char 
 21141 ;;  time            2    6[BANK0 ] unsigned short 
 21142 ;; Return value:  Size  Location     Type
 21143 ;;                  1    wreg      void 
 21144 ;; Registers used:
 21145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21146 ;; Tracked objects:
 21147 ;;		On entry : 0/0
 21148 ;;		On exit  : 0/0
 21149 ;;		Unchanged: 0/0
 21150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21152 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21153 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21154 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21155 ;;Total ram usage:        7 bytes
 21156 ;; Hardware stack levels used:    1
 21157 ;; Hardware stack levels required when called:    5
 21158 ;; This function calls:
 21159 ;;		_CLOCK_getTime
 21160 ;; This function is called by:
 21161 ;;		_main
 21162 ;; This function uses a non-reentrant model
 21163 ;;
 21164                           
 21165                           
 21166                           ;psect for function _BUTTONS_task
 21167  0DC9                     _BUTTONS_task:	
 21168                           
 21169                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 21170                           
 21171                           ;incstack = 0
 21172                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21173  0DC9  319E  26EE  318D   	fcall	_CLOCK_getTime
 21174  0DCC  0140               	movlb	0	; select bank0
 21175  0DCD  0821               	movf	?_CLOCK_getTime+1,w
 21176  0DCE  00A7               	movwf	BUTTONS_task@time+1
 21177  0DCF  0820               	movf	?_CLOCK_getTime,w
 21178  0DD0  00A6               	movwf	BUTTONS_task@time
 21179                           
 21180                           ;buttons.c: 61:     if (time - lastTime < 10)
 21181  0DD1  0142               	movlb	2	; select bank2
 21182  0DD2  0848               	movf	_lastTime^(0+256),w
 21183  0DD3  0140               	movlb	0	; select bank0
 21184  0DD4  0226               	subwf	BUTTONS_task@time,w
 21185  0DD5  00A2               	movwf	??_BUTTONS_task
 21186  0DD6  0142               	movlb	2	; select bank2
 21187  0DD7  0849               	movf	(_lastTime+1)^(0+256),w
 21188  0DD8  0140               	movlb	0	; select bank0
 21189  0DD9  3B27               	subwfb	BUTTONS_task@time+1,w
 21190  0DDA  00A3               	movwf	??_BUTTONS_task+1
 21191  0DDB  3000               	movlw	0
 21192  0DDC  0223               	subwf	??_BUTTONS_task+1,w
 21193  0DDD  300A               	movlw	10
 21194  0DDE  1903               	skipnz
 21195  0DDF  0222               	subwf	??_BUTTONS_task,w
 21196  0DE0  1C03               	btfss	3,0
 21197  0DE1  0008               	return
 21198                           
 21199                           ;buttons.c: 64:     lastTime = time;
 21200  0DE2  0827               	movf	BUTTONS_task@time+1,w
 21201  0DE3  0142               	movlb	2	; select bank2
 21202  0DE4  00C9               	movwf	(_lastTime+1)^(0+256)
 21203  0DE5  0140               	movlb	0	; select bank0
 21204  0DE6  0826               	movf	BUTTONS_task@time,w
 21205  0DE7  0142               	movlb	2	; select bank2
 21206  0DE8  00C8               	movwf	_lastTime^(0+256)
 21207                           
 21208                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 21209  0DE9  0140               	movlb	0	; select bank0
 21210  0DEA  01A5               	clrf	BUTTONS_task@i
 21211  0DEB                     l8388:	
 21212                           
 21213                           ;buttons.c: 68:         button_t* btn = buttons + i;
 21214  0DEB  0825               	movf	BUTTONS_task@i,w
 21215  0DEC  00A2               	movwf	??_BUTTONS_task
 21216  0DED  3002               	movlw	2
 21217  0DEE                     u8375:	
 21218  0DEE  35A2               	lslf	??_BUTTONS_task,f
 21219  0DEF  3EFF               	addlw	-1
 21220  0DF0  1D03               	skipz
 21221  0DF1  2DEE               	goto	u8375
 21222  0DF2  3522               	lslf	??_BUTTONS_task,w
 21223  0DF3  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 21224  0DF4  00A3               	movwf	??_BUTTONS_task+1
 21225  0DF5  0823               	movf	??_BUTTONS_task+1,w
 21226  0DF6  00A8               	movwf	BUTTONS_task@btn
 21227                           
 21228                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 21229  0DF7  0828               	movf	BUTTONS_task@btn,w
 21230  0DF8  0086               	movwf	6
 21231  0DF9  3001               	movlw	1	; select bank2/3
 21232  0DFA  0087               	movwf	7
 21233  0DFB  3F40               	moviw [0]fsr1
 21234  0DFC  00A2               	movwf	??_BUTTONS_task
 21235  0DFD  3F41               	moviw [1]fsr1
 21236  0DFE  00A3               	movwf	??_BUTTONS_task+1
 21237  0DFF  0822               	movf	??_BUTTONS_task,w
 21238  0E00  0086               	movwf	6
 21239  0E01  0823               	movf	??_BUTTONS_task+1,w
 21240  0E02  0087               	movwf	7
 21241  0E03  3001               	movlw	1
 21242  0E04  00A4               	movwf	??_BUTTONS_task+2
 21243  0E05  0828               	movf	BUTTONS_task@btn,w
 21244  0E06  3E02               	addlw	2
 21245  0E07  0084               	movwf	4
 21246  0E08  3001               	movlw	1	; select bank2/3
 21247  0E09  0085               	movwf	5
 21248  0E0A  0A00               	incf	0,w
 21249  0E0B  2E0D               	goto	u8384
 21250  0E0C                     u8385:	
 21251  0E0C  35A4               	lslf	??_BUTTONS_task+2,f
 21252  0E0D                     u8384:	
 21253  0E0D  0B89               	decfsz	9,f
 21254  0E0E  2E0C               	goto	u8385
 21255  0E0F  0824               	movf	??_BUTTONS_task+2,w
 21256  0E10  0501               	andwf	1,w
 21257  0E11  1D03               	btfss	3,2
 21258  0E12  2E2C               	goto	l8396
 21259                           
 21260                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 21261  0E13  0828               	movf	BUTTONS_task@btn,w
 21262  0E14  3E03               	addlw	3
 21263  0E15  0086               	movwf	6
 21264  0E16  3001               	movlw	1	; select bank2/3
 21265  0E17  0087               	movwf	7
 21266  0E18  0181               	clrf	1
 21267  0E19  0A81               	incf	1,f
 21268                           
 21269                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 21270  0E1A  0828               	movf	BUTTONS_task@btn,w
 21271  0E1B  3E07               	addlw	7
 21272  0E1C  0086               	movwf	6
 21273  0E1D  3001               	movlw	1	; select bank2/3
 21274  0E1E  0087               	movwf	7
 21275  0E1F  0801               	movf	1,w
 21276  0E20  1D03               	btfss	3,2
 21277  0E21  2E32               	goto	l909
 21278                           
 21279                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 21280  0E22  0828               	movf	BUTTONS_task@btn,w
 21281  0E23  3E05               	addlw	5
 21282  0E24  0086               	movwf	6
 21283  0E25  3001               	movlw	1	; select bank2/3
 21284  0E26  0087               	movwf	7
 21285  0E27  0826               	movf	BUTTONS_task@time,w
 21286  0E28  3FC0               	movwi [0]fsr1
 21287  0E29  0827               	movf	BUTTONS_task@time+1,w
 21288  0E2A  3FC1               	movwi [1]fsr1
 21289  0E2B  2E32               	goto	l909
 21290  0E2C                     l8396:	
 21291                           
 21292                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 21293  0E2C  0828               	movf	BUTTONS_task@btn,w
 21294  0E2D  3E03               	addlw	3
 21295  0E2E  0086               	movwf	6
 21296  0E2F  3001               	movlw	1	; select bank2/3
 21297  0E30  0087               	movwf	7
 21298  0E31  0181               	clrf	1
 21299  0E32                     l909:	
 21300                           ;buttons.c: 78:         }
 21301                           
 21302                           
 21303                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 21304  0E32  0828               	movf	BUTTONS_task@btn,w
 21305  0E33  3E03               	addlw	3
 21306  0E34  0086               	movwf	6
 21307  0E35  3001               	movlw	1	; select bank2/3
 21308  0E36  0087               	movwf	7
 21309  0E37  0801               	movf	1,w
 21310  0E38  1D03               	btfss	3,2
 21311  0E39  2E4A               	goto	l8402
 21312  0E3A  0828               	movf	BUTTONS_task@btn,w
 21313  0E3B  3E04               	addlw	4
 21314  0E3C  0086               	movwf	6
 21315  0E3D  3001               	movlw	1	; select bank2/3
 21316  0E3E  0087               	movwf	7
 21317  0E3F  0301               	decf	1,w
 21318  0E40  1D03               	btfss	3,2
 21319  0E41  2E4A               	goto	l8402
 21320                           
 21321                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 21322  0E42  0828               	movf	BUTTONS_task@btn,w
 21323  0E43  3E07               	addlw	7
 21324  0E44  0086               	movwf	6
 21325  0E45  3001               	movlw	1	; select bank2/3
 21326  0E46  0087               	movwf	7
 21327  0E47  0181               	clrf	1
 21328  0E48  0A81               	incf	1,f
 21329                           
 21330                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 21331  0E49  2E97               	goto	l911
 21332  0E4A                     l8402:	
 21333  0E4A  0828               	movf	BUTTONS_task@btn,w
 21334  0E4B  3E03               	addlw	3
 21335  0E4C  0086               	movwf	6
 21336  0E4D  3001               	movlw	1	; select bank2/3
 21337  0E4E  0087               	movwf	7
 21338  0E4F  0301               	decf	1,w
 21339  0E50  1D03               	btfss	3,2
 21340  0E51  2E78               	goto	l8412
 21341  0E52  0828               	movf	BUTTONS_task@btn,w
 21342  0E53  3E04               	addlw	4
 21343  0E54  0086               	movwf	6
 21344  0E55  3001               	movlw	1	; select bank2/3
 21345  0E56  0087               	movwf	7
 21346  0E57  0301               	decf	1,w
 21347  0E58  1D03               	btfss	3,2
 21348  0E59  2E78               	goto	l8412
 21349                           
 21350                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 21351  0E5A  0828               	movf	BUTTONS_task@btn,w
 21352  0E5B  3E05               	addlw	5
 21353  0E5C  0086               	movwf	6
 21354  0E5D  3001               	movlw	1	; select bank2/3
 21355  0E5E  0087               	movwf	7
 21356  0E5F  3F40               	moviw [0]fsr1
 21357  0E60  0226               	subwf	BUTTONS_task@time,w
 21358  0E61  00A2               	movwf	??_BUTTONS_task
 21359  0E62  3F41               	moviw [1]fsr1
 21360  0E63  3B27               	subwfb	BUTTONS_task@time+1,w
 21361  0E64  00A3               	movwf	??_BUTTONS_task+1
 21362  0E65  3000               	movlw	0
 21363  0E66  0223               	subwf	??_BUTTONS_task+1,w
 21364  0E67  30C9               	movlw	201
 21365  0E68  1903               	skipnz
 21366  0E69  0222               	subwf	??_BUTTONS_task,w
 21367  0E6A  1C03               	skipc
 21368  0E6B  2E6E               	goto	l8410
 21369                           
 21370                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 21371  0E6C  3003               	movlw	3
 21372  0E6D  2E6F               	goto	L22
 21373  0E6E                     l8410:	
 21374                           ;buttons.c: 86:             } else {
 21375                           
 21376                           
 21377                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 21378  0E6E  3002               	movlw	2
 21379  0E6F                     L22:	
 21380  0E6F  00A2               	movwf	??_BUTTONS_task
 21381  0E70  0828               	movf	BUTTONS_task@btn,w
 21382  0E71  3E07               	addlw	7
 21383  0E72  0086               	movwf	6
 21384  0E73  3001               	movlw	1	; select bank2/3
 21385  0E74  0087               	movwf	7
 21386  0E75  0822               	movf	??_BUTTONS_task,w
 21387  0E76  0081               	movwf	1
 21388  0E77  2E97               	goto	l911
 21389  0E78                     l8412:	
 21390  0E78  0828               	movf	BUTTONS_task@btn,w
 21391  0E79  3E03               	addlw	3
 21392  0E7A  0086               	movwf	6
 21393  0E7B  3001               	movlw	1	; select bank2/3
 21394  0E7C  0087               	movwf	7
 21395  0E7D  0801               	movf	1,w
 21396  0E7E  1D03               	btfss	3,2
 21397  0E7F  2E97               	goto	l911
 21398  0E80  0828               	movf	BUTTONS_task@btn,w
 21399  0E81  3E04               	addlw	4
 21400  0E82  0086               	movwf	6
 21401  0E83  3001               	movlw	1	; select bank2/3
 21402  0E84  0087               	movwf	7
 21403  0E85  0301               	decf	1,w
 21404  0E86  1D03               	btfss	3,2
 21405  0E87  2E97               	goto	l911
 21406  0E88  0828               	movf	BUTTONS_task@btn,w
 21407  0E89  3E07               	addlw	7
 21408  0E8A  0086               	movwf	6
 21409  0E8B  3001               	movlw	1	; select bank2/3
 21410  0E8C  0087               	movwf	7
 21411  0E8D  3003               	movlw	3
 21412  0E8E  0601               	xorwf	1,w
 21413  0E8F  1D03               	btfss	3,2
 21414  0E90  2E97               	goto	l911
 21415                           
 21416                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 21417  0E91  0828               	movf	BUTTONS_task@btn,w
 21418  0E92  3E07               	addlw	7
 21419  0E93  0086               	movwf	6
 21420  0E94  3001               	movlw	1	; select bank2/3
 21421  0E95  0087               	movwf	7
 21422  0E96  0181               	clrf	1
 21423  0E97                     l911:	
 21424                           
 21425                           ;buttons.c: 93:         btn->lastState = btn->state;
 21426  0E97  0828               	movf	BUTTONS_task@btn,w
 21427  0E98  3E03               	addlw	3
 21428  0E99  0086               	movwf	6
 21429  0E9A  3001               	movlw	1	; select bank2/3
 21430  0E9B  0087               	movwf	7
 21431  0E9C  0801               	movf	1,w
 21432  0E9D  00A2               	movwf	??_BUTTONS_task
 21433  0E9E  0828               	movf	BUTTONS_task@btn,w
 21434  0E9F  3E04               	addlw	4
 21435  0EA0  0086               	movwf	6
 21436  0EA1  3001               	movlw	1	; select bank2/3
 21437  0EA2  0087               	movwf	7
 21438  0EA3  0822               	movf	??_BUTTONS_task,w
 21439  0EA4  0081               	movwf	1
 21440                           
 21441                           ;buttons.c: 94:     }
 21442  0EA5  3001               	movlw	1
 21443  0EA6  00A2               	movwf	??_BUTTONS_task
 21444  0EA7  0822               	movf	??_BUTTONS_task,w
 21445  0EA8  07A5               	addwf	BUTTONS_task@i,f
 21446  0EA9  3004               	movlw	4
 21447  0EAA  0225               	subwf	BUTTONS_task@i,w
 21448  0EAB  1803               	btfsc	3,0
 21449  0EAC  0008               	return
 21450  0EAD  2DEB               	goto	l8388
 21451  0EAE                     __end_of_BUTTONS_task:	
 21452                           
 21453                           	psect	text77
 21454  159F                     __ptext77:	
 21455 ;; *************** function _BUTTONS_init *****************
 21456 ;; Defined at:
 21457 ;;		line 23 in file "buttons.c"
 21458 ;; Parameters:    Size  Location     Type
 21459 ;;		None
 21460 ;; Auto vars:     Size  Location     Type
 21461 ;;		None
 21462 ;; Return value:  Size  Location     Type
 21463 ;;                  1    wreg      void 
 21464 ;; Registers used:
 21465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21466 ;; Tracked objects:
 21467 ;;		On entry : 0/0
 21468 ;;		On exit  : 0/0
 21469 ;;		Unchanged: 0/0
 21470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21475 ;;Total ram usage:        1 bytes
 21476 ;; Hardware stack levels used:    1
 21477 ;; Hardware stack levels required when called:    5
 21478 ;; This function calls:
 21479 ;;		_GPIO_init
 21480 ;;		_init
 21481 ;; This function is called by:
 21482 ;;		_main
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           
 21487                           ;psect for function _BUTTONS_init
 21488  159F                     _BUTTONS_init:	
 21489                           
 21490                           ;buttons.c: 24:     menu = &buttons[0];
 21491                           
 21492                           ;incstack = 0
 21493                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21494  159F  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 21495  15A0  0140               	movlb	0	; select bank0
 21496  15A1  00A5               	movwf	??_BUTTONS_init
 21497  15A2  0825               	movf	??_BUTTONS_init,w
 21498  15A3  0141               	movlb	1	; select bank1
 21499  15A4  00BE               	movwf	_menu^(0+128)
 21500                           
 21501                           ;buttons.c: 25:     up = &buttons[1];
 21502  15A5  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 21503  15A6  0140               	movlb	0	; select bank0
 21504  15A7  00A5               	movwf	??_BUTTONS_init
 21505  15A8  0825               	movf	??_BUTTONS_init,w
 21506  15A9  0141               	movlb	1	; select bank1
 21507  15AA  00BD               	movwf	_up^(0+128)
 21508                           
 21509                           ;buttons.c: 26:     down = &buttons[2];
 21510  15AB  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 21511  15AC  0140               	movlb	0	; select bank0
 21512  15AD  00A5               	movwf	??_BUTTONS_init
 21513  15AE  0825               	movf	??_BUTTONS_init,w
 21514  15AF  0141               	movlb	1	; select bank1
 21515  15B0  00BC               	movwf	_down^(0+128)
 21516                           
 21517                           ;buttons.c: 27:     enter = &buttons[3];
 21518  15B1  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 21519  15B2  0140               	movlb	0	; select bank0
 21520  15B3  00A5               	movwf	??_BUTTONS_init
 21521  15B4  0825               	movf	??_BUTTONS_init,w
 21522  15B5  0141               	movlb	1	; select bank1
 21523  15B6  00BB               	movwf	_enter^(0+128)
 21524                           
 21525                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 21526  15B7  300E               	movlw	14
 21527  15B8  0140               	movlb	0	; select bank0
 21528  15B9  00A0               	movwf	init@port
 21529  15BA  3000               	movlw	0
 21530  15BB  00A1               	movwf	init@port+1
 21531  15BC  3002               	movlw	2
 21532  15BD  00A5               	movwf	??_BUTTONS_init
 21533  15BE  0825               	movf	??_BUTTONS_init,w
 21534  15BF  00A2               	movwf	init@pin
 21535  15C0  0141               	movlb	1	; select bank1
 21536  15C1  083E               	movf	_menu^(0+128),w
 21537  15C2  3191  2198  3195   	fcall	_init
 21538                           
 21539                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 21540  15C5  300C               	movlw	12
 21541  15C6  0140               	movlb	0	; select bank0
 21542  15C7  00A0               	movwf	init@port
 21543  15C8  3000               	movlw	0
 21544  15C9  00A1               	movwf	init@port+1
 21545  15CA  3002               	movlw	2
 21546  15CB  00A5               	movwf	??_BUTTONS_init
 21547  15CC  0825               	movf	??_BUTTONS_init,w
 21548  15CD  00A2               	movwf	init@pin
 21549  15CE  0141               	movlb	1	; select bank1
 21550  15CF  083B               	movf	_enter^(0+128),w
 21551  15D0  3191  2198  3195   	fcall	_init
 21552                           
 21553                           ;buttons.c: 31:     init(down, &PORTC, 0);
 21554  15D3  300E               	movlw	14
 21555  15D4  0140               	movlb	0	; select bank0
 21556  15D5  00A0               	movwf	init@port
 21557  15D6  3000               	movlw	0
 21558  15D7  00A1               	movwf	init@port+1
 21559  15D8  01A2               	clrf	init@pin
 21560  15D9  0141               	movlb	1	; select bank1
 21561  15DA  083C               	movf	_down^(0+128),w
 21562  15DB  3191  2198  3195   	fcall	_init
 21563                           
 21564                           ;buttons.c: 32:     init(up, &PORTC, 1);
 21565  15DE  300E               	movlw	14
 21566  15DF  0140               	movlb	0	; select bank0
 21567  15E0  00A0               	movwf	init@port
 21568  15E1  3000               	movlw	0
 21569  15E2  00A1               	movwf	init@port+1
 21570  15E3  01A2               	clrf	init@pin
 21571  15E4  0AA2               	incf	init@pin,f
 21572  15E5  0141               	movlb	1	; select bank1
 21573  15E6  083D               	movf	_up^(0+128),w
 21574  15E7  3191  2198  3195   	fcall	_init
 21575                           
 21576                           ;buttons.c: 34:     GPIO_init();
 21577  15EA  319F  27B6         	fcall	_GPIO_init
 21578  15EC  0008               	return
 21579  15ED                     __end_of_BUTTONS_init:	
 21580                           
 21581                           	psect	text78
 21582  1198                     __ptext78:	
 21583 ;; *************** function _init *****************
 21584 ;; Defined at:
 21585 ;;		line 16 in file "buttons.c"
 21586 ;; Parameters:    Size  Location     Type
 21587 ;;  btn             1    wreg     PTR struct .
 21588 ;;		 -> buttons(32), NULL(0), 
 21589 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 21590 ;;		 -> PORTA(1), PORTC(1), 
 21591 ;;  pin             1    2[BANK0 ] unsigned char 
 21592 ;; Auto vars:     Size  Location     Type
 21593 ;;  btn             1    4[BANK0 ] PTR struct .
 21594 ;;		 -> buttons(32), NULL(0), 
 21595 ;; Return value:  Size  Location     Type
 21596 ;;                  1    wreg      void 
 21597 ;; Registers used:
 21598 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21599 ;; Tracked objects:
 21600 ;;		On entry : 0/0
 21601 ;;		On exit  : 0/0
 21602 ;;		Unchanged: 0/0
 21603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21604 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21607 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21608 ;;Total ram usage:        5 bytes
 21609 ;; Hardware stack levels used:    1
 21610 ;; Hardware stack levels required when called:    4
 21611 ;; This function calls:
 21612 ;;		Nothing
 21613 ;; This function is called by:
 21614 ;;		_BUTTONS_init
 21615 ;; This function uses a non-reentrant model
 21616 ;;
 21617                           
 21618                           
 21619                           ;psect for function _init
 21620  1198                     _init:	
 21621                           
 21622                           ;incstack = 0
 21623                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 21624                           ;init@btn stored from wreg
 21625  1198  0140               	movlb	0	; select bank0
 21626  1199  00A4               	movwf	init@btn
 21627                           
 21628                           ;buttons.c: 17:     btn->port = port;
 21629  119A  0824               	movf	init@btn,w
 21630  119B  0086               	movwf	6
 21631  119C  3001               	movlw	1	; select bank2/3
 21632  119D  0087               	movwf	7
 21633  119E  0820               	movf	init@port,w
 21634  119F  3FC0               	movwi [0]fsr1
 21635  11A0  0821               	movf	init@port+1,w
 21636  11A1  3FC1               	movwi [1]fsr1
 21637                           
 21638                           ;buttons.c: 18:     btn->pin = pin;
 21639  11A2  0822               	movf	init@pin,w
 21640  11A3  00A3               	movwf	??_init
 21641  11A4  0824               	movf	init@btn,w
 21642  11A5  3E02               	addlw	2
 21643  11A6  0086               	movwf	6
 21644  11A7  3001               	movlw	1	; select bank2/3
 21645  11A8  0087               	movwf	7
 21646  11A9  0823               	movf	??_init,w
 21647  11AA  0081               	movwf	1
 21648                           
 21649                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 21650  11AB  0824               	movf	init@btn,w
 21651  11AC  3E03               	addlw	3
 21652  11AD  0086               	movwf	6
 21653  11AE  3001               	movlw	1	; select bank2/3
 21654  11AF  0087               	movwf	7
 21655  11B0  0181               	clrf	1
 21656                           
 21657                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 21658  11B1  0824               	movf	init@btn,w
 21659  11B2  3E07               	addlw	7
 21660  11B3  0086               	movwf	6
 21661  11B4  3001               	movlw	1	; select bank2/3
 21662  11B5  0087               	movwf	7
 21663  11B6  0181               	clrf	1
 21664  11B7  0008               	return
 21665  11B8                     __end_of_init:	
 21666                           
 21667                           	psect	text79
 21668  1FB6                     __ptext79:	
 21669 ;; *************** function _GPIO_init *****************
 21670 ;; Defined at:
 21671 ;;		line 38 in file "buttons.c"
 21672 ;; Parameters:    Size  Location     Type
 21673 ;;		None
 21674 ;; Auto vars:     Size  Location     Type
 21675 ;;		None
 21676 ;; Return value:  Size  Location     Type
 21677 ;;                  1    wreg      void 
 21678 ;; Registers used:
 21679 ;;		None
 21680 ;; Tracked objects:
 21681 ;;		On entry : 0/0
 21682 ;;		On exit  : 0/0
 21683 ;;		Unchanged: 0/0
 21684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21689 ;;Total ram usage:        0 bytes
 21690 ;; Hardware stack levels used:    1
 21691 ;; Hardware stack levels required when called:    4
 21692 ;; This function calls:
 21693 ;;		Nothing
 21694 ;; This function is called by:
 21695 ;;		_BUTTONS_init
 21696 ;; This function uses a non-reentrant model
 21697 ;;
 21698                           
 21699                           
 21700                           ;psect for function _GPIO_init
 21701  1FB6                     _GPIO_init:	
 21702                           
 21703                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 21704                           
 21705                           ;incstack = 0
 21706                           ; Regs used in _GPIO_init: []
 21707  1FB6  0140               	movlb	0	; select bank0
 21708  1FB7  1512               	bsf	18,2	;volatile
 21709                           
 21710                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 21711  1FB8  017E               	movlb	62	; select bank62
 21712  1FB9  1138               	bcf	56,2	;volatile
 21713                           
 21714                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 21715  1FBA  1539               	bsf	57,2	;volatile
 21716                           
 21717                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 21718  1FBB  0140               	movlb	0	; select bank0
 21719  1FBC  1414               	bsf	20,0	;volatile
 21720                           
 21721                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 21722  1FBD  1494               	bsf	20,1	;volatile
 21723                           
 21724                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 21725  1FBE  1514               	bsf	20,2	;volatile
 21726                           
 21727                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 21728  1FBF  017E               	movlb	62	; select bank62
 21729  1FC0  104E               	bcf	78,0	;volatile
 21730                           
 21731                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 21732  1FC1  10CE               	bcf	78,1	;volatile
 21733                           
 21734                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 21735  1FC2  114E               	bcf	78,2	;volatile
 21736                           
 21737                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 21738  1FC3  144F               	bsf	79,0	;volatile
 21739                           
 21740                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 21741  1FC4  14CF               	bsf	79,1	;volatile
 21742                           
 21743                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 21744  1FC5  154F               	bsf	79,2	;volatile
 21745  1FC6  0008               	return
 21746  1FC7                     __end_of_GPIO_init:	
 21747                           
 21748                           	psect	text80
 21749  0C18                     __ptext80:	
 21750 ;; *************** function _BEAT_task *****************
 21751 ;; Defined at:
 21752 ;;		line 65 in file "beat.c"
 21753 ;; Parameters:    Size  Location     Type
 21754 ;;		None
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;  offset          2   10[BANK0 ] unsigned short 
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      void 
 21759 ;; Registers used:
 21760 ;;		wreg, status,2, status,0, pclath, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21768 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21769 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21770 ;;Total ram usage:        4 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:    5
 21773 ;; This function calls:
 21774 ;;		_ADCC_SetUpperThreshold
 21775 ;;		_CLOCK_getTime
 21776 ;;		___lwdiv
 21777 ;; This function is called by:
 21778 ;;		_main
 21779 ;; This function uses a non-reentrant model
 21780 ;;
 21781                           
 21782                           
 21783                           ;psect for function _BEAT_task
 21784  0C18                     _BEAT_task:	
 21785                           
 21786                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 21787                           
 21788                           ;incstack = 0
 21789                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 21790  0C18  319E  26EE  318C   	fcall	_CLOCK_getTime
 21791  0C1B  0142               	movlb	2	; select bank2
 21792  0C1C  083E               	movf	_lastRun^(0+256),w
 21793  0C1D  0140               	movlb	0	; select bank0
 21794  0C1E  0220               	subwf	?_CLOCK_getTime,w
 21795  0C1F  00A8               	movwf	??_BEAT_task
 21796  0C20  0142               	movlb	2	; select bank2
 21797  0C21  083F               	movf	(_lastRun+1)^(0+256),w
 21798  0C22  0140               	movlb	0	; select bank0
 21799  0C23  3B21               	subwfb	?_CLOCK_getTime+1,w
 21800  0C24  00A9               	movwf	??_BEAT_task+1
 21801  0C25  0142               	movlb	2	; select bank2
 21802  0C26  0867               	movf	(_delay+1)^(0+256),w
 21803  0C27  0140               	movlb	0	; select bank0
 21804  0C28  0229               	subwf	??_BEAT_task+1,w
 21805  0C29  1D03               	skipz
 21806  0C2A  2C2F               	goto	u8915
 21807  0C2B  0142               	movlb	2	; select bank2
 21808  0C2C  0866               	movf	_delay^(0+256),w
 21809  0C2D  0140               	movlb	0	; select bank0
 21810  0C2E  0228               	subwf	??_BEAT_task,w
 21811  0C2F                     u8915:	
 21812  0C2F  1C03               	btfss	3,0
 21813  0C30  0008               	return
 21814                           
 21815                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 21816  0C31  319E  26EE  318C   	fcall	_CLOCK_getTime
 21817  0C34  0140               	movlb	0	; select bank0
 21818  0C35  0821               	movf	?_CLOCK_getTime+1,w
 21819  0C36  0142               	movlb	2	; select bank2
 21820  0C37  00BF               	movwf	(_lastRun+1)^(0+256)
 21821  0C38  0140               	movlb	0	; select bank0
 21822  0C39  0820               	movf	?_CLOCK_getTime,w
 21823  0C3A  0142               	movlb	2	; select bank2
 21824  0C3B  00BE               	movwf	_lastRun^(0+256)
 21825                           
 21826                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 21827  0C3C  0141               	movlb	1	; select bank1
 21828  0C3D  032E               	decf	_thresholdExceeded^(0+128),w
 21829  0C3E  1D03               	btfss	3,2
 21830  0C3F  2C46               	goto	l8598
 21831                           
 21832                           ;beat.c: 77:         thresholdCount++;
 21833  0C40  3001               	movlw	1
 21834  0C41  0142               	movlb	2	; select bank2
 21835  0C42  07BC               	addwf	_thresholdCount^(0+256),f
 21836  0C43  3000               	movlw	0
 21837  0C44  3DBD               	addwfc	(_thresholdCount+1)^(0+256),f
 21838                           
 21839                           ;beat.c: 78:     } else {
 21840  0C45  2C4D               	goto	l8602
 21841  0C46                     l8598:	
 21842                           
 21843                           ;beat.c: 80:         thresholdCount = 0;
 21844  0C46  0142               	movlb	2	; select bank2
 21845  0C47  01BC               	clrf	_thresholdCount^(0+256)
 21846  0C48  01BD               	clrf	(_thresholdCount+1)^(0+256)
 21847                           
 21848                           ;beat.c: 81:         delay = 30;
 21849  0C49  301E               	movlw	30
 21850  0C4A  00E6               	movwf	_delay^(0+256)
 21851  0C4B  3000               	movlw	0
 21852  0C4C  00E7               	movwf	(_delay^(0+256)+1)
 21853  0C4D                     l8602:	
 21854                           
 21855                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 21856  0C4D  0141               	movlb	1	; select bank1
 21857  0C4E  032E               	decf	_thresholdExceeded^(0+128),w
 21858  0C4F  1D03               	btfss	3,2
 21859  0C50  2C94               	goto	l8620
 21860  0C51  082D               	movf	_lastDetected^(0+128),w
 21861  0C52  1D03               	btfss	3,2
 21862  0C53  2C94               	goto	l8620
 21863                           
 21864                           ;beat.c: 89:         detected = 1;
 21865  0C54  01AF               	clrf	_detected^(0+128)
 21866  0C55  0AAF               	incf	_detected^(0+128),f
 21867                           
 21868                           ;beat.c: 92:         delay = 50;
 21869  0C56  3032               	movlw	50
 21870  0C57  0142               	movlb	2	; select bank2
 21871  0C58  00E6               	movwf	_delay^(0+256)
 21872  0C59  3000               	movlw	0
 21873  0C5A  00E7               	movwf	(_delay^(0+256)+1)
 21874                           
 21875                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 21876  0C5B  319E  26EE  318C   	fcall	_CLOCK_getTime
 21877  0C5E  0142               	movlb	2	; select bank2
 21878  0C5F  0842               	movf	_lastBeat^(0+256),w
 21879  0C60  0140               	movlb	0	; select bank0
 21880  0C61  0220               	subwf	?_CLOCK_getTime,w
 21881  0C62  00AA               	movwf	BEAT_task@offset
 21882  0C63  0142               	movlb	2	; select bank2
 21883  0C64  0843               	movf	(_lastBeat+1)^(0+256),w
 21884  0C65  0140               	movlb	0	; select bank0
 21885  0C66  3B21               	subwfb	?_CLOCK_getTime+1,w
 21886  0C67  00AB               	movwf	BEAT_task@offset+1
 21887                           
 21888                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 21889  0C68  319E  26EE  318C   	fcall	_CLOCK_getTime
 21890  0C6B  0140               	movlb	0	; select bank0
 21891  0C6C  0821               	movf	?_CLOCK_getTime+1,w
 21892  0C6D  0142               	movlb	2	; select bank2
 21893  0C6E  00C3               	movwf	(_lastBeat+1)^(0+256)
 21894  0C6F  0140               	movlb	0	; select bank0
 21895  0C70  0820               	movf	?_CLOCK_getTime,w
 21896  0C71  0142               	movlb	2	; select bank2
 21897  0C72  00C2               	movwf	_lastBeat^(0+256)
 21898                           
 21899                           ;beat.c: 99:         if (offset < 150)
 21900  0C73  3000               	movlw	0
 21901  0C74  0140               	movlb	0	; select bank0
 21902  0C75  022B               	subwf	BEAT_task@offset+1,w
 21903  0C76  3096               	movlw	150
 21904  0C77  1903               	skipnz
 21905  0C78  022A               	subwf	BEAT_task@offset,w
 21906  0C79  1803               	skipnc
 21907  0C7A  2C81               	goto	l8618
 21908                           
 21909                           ;beat.c: 100:             bpm = 400;
 21910  0C7B  3090               	movlw	144
 21911  0C7C  0142               	movlb	2	; select bank2
 21912  0C7D  00C0               	movwf	_bpm^(0+256)
 21913  0C7E  3001               	movlw	1
 21914  0C7F  00C1               	movwf	(_bpm^(0+256)+1)
 21915  0C80  2C94               	goto	l8620
 21916  0C81                     l8618:	
 21917                           
 21918                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 21919  0C81  082B               	movf	BEAT_task@offset+1,w
 21920  0C82  00A1               	movwf	___lwdiv@divisor+1
 21921  0C83  082A               	movf	BEAT_task@offset,w
 21922  0C84  00A0               	movwf	___lwdiv@divisor
 21923  0C85  3060               	movlw	96
 21924  0C86  00A2               	movwf	___lwdiv@dividend
 21925  0C87  30EA               	movlw	234
 21926  0C88  00A3               	movwf	___lwdiv@dividend+1
 21927  0C89  3194  2436  318C   	fcall	___lwdiv
 21928  0C8C  0140               	movlb	0	; select bank0
 21929  0C8D  0821               	movf	?___lwdiv+1,w
 21930  0C8E  0142               	movlb	2	; select bank2
 21931  0C8F  00C1               	movwf	(_bpm+1)^(0+256)
 21932  0C90  0140               	movlb	0	; select bank0
 21933  0C91  0820               	movf	?___lwdiv,w
 21934  0C92  0142               	movlb	2	; select bank2
 21935  0C93  00C0               	movwf	_bpm^(0+256)
 21936  0C94                     l8620:	
 21937                           
 21938                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 21939  0C94  0141               	movlb	1	; select bank1
 21940  0C95  082E               	movf	_thresholdExceeded^(0+128),w
 21941  0C96  0140               	movlb	0	; select bank0
 21942  0C97  00A8               	movwf	??_BEAT_task
 21943  0C98  0828               	movf	??_BEAT_task,w
 21944  0C99  0141               	movlb	1	; select bank1
 21945  0C9A  00AD               	movwf	_lastDetected^(0+128)
 21946                           
 21947                           ;beat.c: 109:     thresholdExceeded = 0;
 21948  0C9B  01AE               	clrf	_thresholdExceeded^(0+128)
 21949                           
 21950                           ;beat.c: 111:     if (thresholdCount > 3) {
 21951  0C9C  0142               	movlb	2	; select bank2
 21952  0C9D  083D               	movf	(_thresholdCount+1)^(0+256),w
 21953  0C9E  3A80               	xorlw	128
 21954  0C9F  0140               	movlb	0	; select bank0
 21955  0CA0  00A8               	movwf	??_BEAT_task
 21956  0CA1  3080               	movlw	128
 21957  0CA2  0228               	subwf	??_BEAT_task,w
 21958  0CA3  1D03               	skipz
 21959  0CA4  2CA8               	goto	u8965
 21960  0CA5  3004               	movlw	4
 21961  0CA6  0142               	movlb	2	; select bank2
 21962  0CA7  023C               	subwf	_thresholdCount^(0+256),w
 21963  0CA8                     u8965:	
 21964  0CA8  1C03               	skipc
 21965  0CA9  2CC7               	goto	l8634
 21966                           
 21967                           ;beat.c: 112:         threshold += 1;
 21968  0CAA  3001               	movlw	1
 21969  0CAB  0142               	movlb	2	; select bank2
 21970  0CAC  07E8               	addwf	_threshold^(0+256),f
 21971  0CAD  3000               	movlw	0
 21972  0CAE  3DE9               	addwfc	(_threshold+1)^(0+256),f
 21973                           
 21974                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 21975  0CAF  0869               	movf	(_threshold+1)^(0+256),w
 21976  0CB0  0140               	movlb	0	; select bank0
 21977  0CB1  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 21978  0CB2  0142               	movlb	2	; select bank2
 21979  0CB3  0868               	movf	_threshold^(0+256),w
 21980  0CB4  0140               	movlb	0	; select bank0
 21981  0CB5  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 21982  0CB6  319E  26DC  318C   	fcall	_ADCC_SetUpperThreshold
 21983                           
 21984                           ;beat.c: 114:         thresholdCount = 0;
 21985  0CB9  0142               	movlb	2	; select bank2
 21986  0CBA  01BC               	clrf	_thresholdCount^(0+256)
 21987  0CBB  01BD               	clrf	(_thresholdCount+1)^(0+256)
 21988                           
 21989                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 21990  0CBC  319E  26EE         	fcall	_CLOCK_getTime
 21991  0CBE  0140               	movlb	0	; select bank0
 21992  0CBF  0821               	movf	?_CLOCK_getTime+1,w
 21993  0CC0  0142               	movlb	2	; select bank2
 21994  0CC1  00C3               	movwf	(_lastBeat+1)^(0+256)
 21995  0CC2  0140               	movlb	0	; select bank0
 21996  0CC3  0820               	movf	?_CLOCK_getTime,w
 21997  0CC4  0142               	movlb	2	; select bank2
 21998  0CC5  00C2               	movwf	_lastBeat^(0+256)
 21999                           
 22000                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 22001  0CC6  0008               	return
 22002  0CC7                     l8634:	
 22003  0CC7  319E  26EE  318C   	fcall	_CLOCK_getTime
 22004  0CCA  0142               	movlb	2	; select bank2
 22005  0CCB  0842               	movf	_lastBeat^(0+256),w
 22006  0CCC  0140               	movlb	0	; select bank0
 22007  0CCD  0220               	subwf	?_CLOCK_getTime,w
 22008  0CCE  00A8               	movwf	??_BEAT_task
 22009  0CCF  0142               	movlb	2	; select bank2
 22010  0CD0  0843               	movf	(_lastBeat+1)^(0+256),w
 22011  0CD1  0140               	movlb	0	; select bank0
 22012  0CD2  3B21               	subwfb	?_CLOCK_getTime+1,w
 22013  0CD3  00A9               	movwf	??_BEAT_task+1
 22014  0CD4  3003               	movlw	3
 22015  0CD5  0229               	subwf	??_BEAT_task+1,w
 22016  0CD6  30E9               	movlw	233
 22017  0CD7  1903               	skipnz
 22018  0CD8  0228               	subwf	??_BEAT_task,w
 22019  0CD9  1C03               	skipc
 22020  0CDA  0008               	return
 22021                           
 22022                           ;beat.c: 119:         threshold -= 1;
 22023  0CDB  3001               	movlw	1
 22024  0CDC  0142               	movlb	2	; select bank2
 22025  0CDD  02E8               	subwf	_threshold^(0+256),f
 22026  0CDE  3000               	movlw	0
 22027  0CDF  3BE9               	subwfb	(_threshold+1)^(0+256),f
 22028                           
 22029                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 22030  0CE0  0869               	movf	(_threshold+1)^(0+256),w
 22031  0CE1  0140               	movlb	0	; select bank0
 22032  0CE2  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22033  0CE3  0142               	movlb	2	; select bank2
 22034  0CE4  0868               	movf	_threshold^(0+256),w
 22035  0CE5  0140               	movlb	0	; select bank0
 22036  0CE6  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22037  0CE7  319E  26DC         	fcall	_ADCC_SetUpperThreshold
 22038  0CE9  0008               	return
 22039  0CEA                     __end_of_BEAT_task:	
 22040                           
 22041                           	psect	text81
 22042  1436                     __ptext81:	
 22043 ;; *************** function ___lwdiv *****************
 22044 ;; Defined at:
 22045 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 22046 ;; Parameters:    Size  Location     Type
 22047 ;;  divisor         2    0[BANK0 ] unsigned int 
 22048 ;;  dividend        2    2[BANK0 ] unsigned int 
 22049 ;; Auto vars:     Size  Location     Type
 22050 ;;  quotient        2    5[BANK0 ] unsigned int 
 22051 ;;  counter         1    7[BANK0 ] unsigned char 
 22052 ;; Return value:  Size  Location     Type
 22053 ;;                  2    0[BANK0 ] unsigned int 
 22054 ;; Registers used:
 22055 ;;		wreg, status,2, status,0
 22056 ;; Tracked objects:
 22057 ;;		On entry : 0/0
 22058 ;;		On exit  : 0/0
 22059 ;;		Unchanged: 0/0
 22060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22061 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22062 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22063 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22064 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22065 ;;Total ram usage:        8 bytes
 22066 ;; Hardware stack levels used:    1
 22067 ;; Hardware stack levels required when called:    4
 22068 ;; This function calls:
 22069 ;;		Nothing
 22070 ;; This function is called by:
 22071 ;;		_TM1650_fastPrintNum
 22072 ;;		_BEAT_task
 22073 ;; This function uses a non-reentrant model
 22074 ;;
 22075                           
 22076                           
 22077                           ;psect for function ___lwdiv
 22078  1436                     ___lwdiv:	
 22079                           
 22080                           ;incstack = 0
 22081                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22082  1436  0140               	movlb	0	; select bank0
 22083  1437  01A5               	clrf	___lwdiv@quotient
 22084  1438  01A6               	clrf	___lwdiv@quotient+1
 22085  1439  0820               	movf	___lwdiv@divisor,w
 22086  143A  0421               	iorwf	___lwdiv@divisor+1,w
 22087  143B  1903               	btfsc	3,2
 22088  143C  2C66               	goto	l4882
 22089  143D  01A7               	clrf	___lwdiv@counter
 22090  143E  0AA7               	incf	___lwdiv@counter,f
 22091  143F                     l4870:	
 22092  143F  1BA1               	btfsc	___lwdiv@divisor+1,7
 22093  1440  2C4B               	goto	l4872
 22094  1441  3001               	movlw	1
 22095  1442                     u3545:	
 22096  1442  35A0               	lslf	___lwdiv@divisor,f
 22097  1443  0DA1               	rlf	___lwdiv@divisor+1,f
 22098  1444  0B89               	decfsz	9,f
 22099  1445  2C42               	goto	u3545
 22100  1446  3001               	movlw	1
 22101  1447  00A4               	movwf	??___lwdiv
 22102  1448  0824               	movf	??___lwdiv,w
 22103  1449  07A7               	addwf	___lwdiv@counter,f
 22104  144A  2C3F               	goto	l4870
 22105  144B                     l4872:	
 22106  144B  3001               	movlw	1
 22107  144C                     u3565:	
 22108  144C  35A5               	lslf	___lwdiv@quotient,f
 22109  144D  0DA6               	rlf	___lwdiv@quotient+1,f
 22110  144E  0B89               	decfsz	9,f
 22111  144F  2C4C               	goto	u3565
 22112  1450  0821               	movf	___lwdiv@divisor+1,w
 22113  1451  0223               	subwf	___lwdiv@dividend+1,w
 22114  1452  1D03               	skipz
 22115  1453  2C56               	goto	u3575
 22116  1454  0820               	movf	___lwdiv@divisor,w
 22117  1455  0222               	subwf	___lwdiv@dividend,w
 22118  1456                     u3575:	
 22119  1456  1C03               	skipc
 22120  1457  2C5D               	goto	l4878
 22121  1458  0820               	movf	___lwdiv@divisor,w
 22122  1459  02A2               	subwf	___lwdiv@dividend,f
 22123  145A  0821               	movf	___lwdiv@divisor+1,w
 22124  145B  3BA3               	subwfb	___lwdiv@dividend+1,f
 22125  145C  1425               	bsf	___lwdiv@quotient,0
 22126  145D                     l4878:	
 22127  145D  3001               	movlw	1
 22128  145E                     u3585:	
 22129  145E  36A1               	lsrf	___lwdiv@divisor+1,f
 22130  145F  0CA0               	rrf	___lwdiv@divisor,f
 22131  1460  0B89               	decfsz	9,f
 22132  1461  2C5E               	goto	u3585
 22133  1462  3001               	movlw	1
 22134  1463  02A7               	subwf	___lwdiv@counter,f
 22135  1464  1D03               	btfss	3,2
 22136  1465  2C4B               	goto	l4872
 22137  1466                     l4882:	
 22138  1466  0826               	movf	___lwdiv@quotient+1,w
 22139  1467  00A1               	movwf	?___lwdiv+1
 22140  1468  0825               	movf	___lwdiv@quotient,w
 22141  1469  00A0               	movwf	?___lwdiv
 22142  146A  0008               	return
 22143  146B                     __end_of___lwdiv:	
 22144                           
 22145                           	psect	text82
 22146  1EEE                     __ptext82:	
 22147 ;; *************** function _CLOCK_getTime *****************
 22148 ;; Defined at:
 22149 ;;		line 16 in file "clock.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;		None
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;		None
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  2    0[BANK0 ] unsigned short 
 22156 ;; Registers used:
 22157 ;;		wreg
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22167 ;;Total ram usage:        2 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:    4
 22170 ;; This function calls:
 22171 ;;		Nothing
 22172 ;; This function is called by:
 22173 ;;		_main
 22174 ;;		_BUTTONS_task
 22175 ;;		_CONTROLLER_task
 22176 ;;		_CONTROL_DMX
 22177 ;;		_CONTROL_MANUAL
 22178 ;;		_BEAT_task
 22179 ;;		_LED_task_BEAT_STROBE
 22180 ;; This function uses a non-reentrant model
 22181 ;;
 22182                           
 22183                           
 22184                           ;psect for function _CLOCK_getTime
 22185  1EEE                     _CLOCK_getTime:	
 22186                           
 22187                           ;clock.c: 17:     return currentTime;
 22188                           
 22189                           ;incstack = 0
 22190                           ; Regs used in _CLOCK_getTime: [wreg]
 22191  1EEE  0142               	movlb	2	; select bank2
 22192  1EEF  0847               	movf	(_currentTime+1)^(0+256),w
 22193  1EF0  0140               	movlb	0	; select bank0
 22194  1EF1  00A1               	movwf	?_CLOCK_getTime+1
 22195  1EF2  0142               	movlb	2	; select bank2
 22196  1EF3  0846               	movf	_currentTime^(0+256),w
 22197  1EF4  0140               	movlb	0	; select bank0
 22198  1EF5  00A0               	movwf	?_CLOCK_getTime
 22199  1EF6  0008               	return
 22200  1EF7                     __end_of_CLOCK_getTime:	
 22201                           
 22202                           	psect	text83
 22203  1055                     __ptext83:	
 22204 ;; *************** function _BEAT_init *****************
 22205 ;; Defined at:
 22206 ;;		line 39 in file "beat.c"
 22207 ;; Parameters:    Size  Location     Type
 22208 ;;		None
 22209 ;; Auto vars:     Size  Location     Type
 22210 ;;		None
 22211 ;; Return value:  Size  Location     Type
 22212 ;;                  1    wreg      void 
 22213 ;; Registers used:
 22214 ;;		wreg, status,2, status,0, pclath, cstack
 22215 ;; Tracked objects:
 22216 ;;		On entry : 0/0
 22217 ;;		On exit  : 0/0
 22218 ;;		Unchanged: 0/0
 22219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22224 ;;Total ram usage:        0 bytes
 22225 ;; Hardware stack levels used:    1
 22226 ;; Hardware stack levels required when called:    5
 22227 ;; This function calls:
 22228 ;;		_ADCC_SetADTIInterruptHandler
 22229 ;;		_ADCC_SetUpperThreshold
 22230 ;;		_ADCC_StartConversion
 22231 ;; This function is called by:
 22232 ;;		_main
 22233 ;; This function uses a non-reentrant model
 22234 ;;
 22235                           
 22236                           
 22237                           ;psect for function _BEAT_init
 22238  1055                     _BEAT_init:	
 22239                           
 22240                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 22241                           
 22242                           ;incstack = 0
 22243                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 22244  1055  0142               	movlb	2	; select bank2
 22245  1056  0869               	movf	(_threshold+1)^(0+256),w
 22246  1057  0140               	movlb	0	; select bank0
 22247  1058  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22248  1059  0142               	movlb	2	; select bank2
 22249  105A  0868               	movf	_threshold^(0+256),w
 22250  105B  0140               	movlb	0	; select bank0
 22251  105C  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22252  105D  319E  26DC  3190   	fcall	_ADCC_SetUpperThreshold
 22253                           
 22254                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 22255  1060  30AC               	movlw	low _adcThresholdHandler
 22256  1061  0140               	movlb	0	; select bank0
 22257  1062  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 22258  1063  301E               	movlw	high _adcThresholdHandler
 22259  1064  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 22260  1065  319E  26D3  3190   	fcall	_ADCC_SetADTIInterruptHandler
 22261                           
 22262                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 22263  1068  300F               	movlw	15
 22264  1069  319E  26E5         	fcall	_ADCC_StartConversion
 22265  106B  0008               	return
 22266  106C                     __end_of_BEAT_init:	
 22267                           
 22268                           	psect	text84
 22269  1EE5                     __ptext84:	
 22270 ;; *************** function _ADCC_StartConversion *****************
 22271 ;; Defined at:
 22272 ;;		line 121 in file "mcc_generated_files/adcc.c"
 22273 ;; Parameters:    Size  Location     Type
 22274 ;;  channel         1    wreg     enum E10867
 22275 ;; Auto vars:     Size  Location     Type
 22276 ;;  channel         1    0[BANK0 ] enum E10867
 22277 ;; Return value:  Size  Location     Type
 22278 ;;                  1    wreg      void 
 22279 ;; Registers used:
 22280 ;;		wreg
 22281 ;; Tracked objects:
 22282 ;;		On entry : 0/0
 22283 ;;		On exit  : 0/0
 22284 ;;		Unchanged: 0/0
 22285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22290 ;;Total ram usage:        1 bytes
 22291 ;; Hardware stack levels used:    1
 22292 ;; Hardware stack levels required when called:    4
 22293 ;; This function calls:
 22294 ;;		Nothing
 22295 ;; This function is called by:
 22296 ;;		_BEAT_init
 22297 ;; This function uses a non-reentrant model
 22298 ;;
 22299                           
 22300                           
 22301                           ;psect for function _ADCC_StartConversion
 22302  1EE5                     _ADCC_StartConversion:	
 22303                           
 22304                           ;incstack = 0
 22305                           ; Regs used in _ADCC_StartConversion: [wreg]
 22306                           ;ADCC_StartConversion@channel stored from wreg
 22307  1EE5  0140               	movlb	0	; select bank0
 22308  1EE6  00A0               	movwf	ADCC_StartConversion@channel
 22309                           
 22310                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 22311  1EE7  0820               	movf	ADCC_StartConversion@channel,w
 22312  1EE8  0141               	movlb	1	; select bank1
 22313  1EE9  009F               	movwf	31	;volatile
 22314                           
 22315                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 22316  1EEA  0142               	movlb	2	; select bank2
 22317  1EEB  1791               	bsf	17,7	;volatile
 22318                           
 22319                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 22320  1EEC  1411               	bsf	17,0	;volatile
 22321  1EED  0008               	return
 22322  1EEE                     __end_of_ADCC_StartConversion:	
 22323                           
 22324                           	psect	text85
 22325  1EDC                     __ptext85:	
 22326 ;; *************** function _ADCC_SetUpperThreshold *****************
 22327 ;; Defined at:
 22328 ;;		line 251 in file "mcc_generated_files/adcc.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 22331 ;; Auto vars:     Size  Location     Type
 22332 ;;		None
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1    wreg      void 
 22335 ;; Registers used:
 22336 ;;		wreg, status,2
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22346 ;;Total ram usage:        2 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:    4
 22349 ;; This function calls:
 22350 ;;		Nothing
 22351 ;; This function is called by:
 22352 ;;		_BEAT_init
 22353 ;;		_BEAT_task
 22354 ;; This function uses a non-reentrant model
 22355 ;;
 22356                           
 22357                           
 22358                           ;psect for function _ADCC_SetUpperThreshold
 22359  1EDC                     _ADCC_SetUpperThreshold:	
 22360                           
 22361                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 22362                           
 22363                           ;incstack = 0
 22364                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 22365  1EDC  0140               	movlb	0	; select bank0
 22366  1EDD  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 22367  1EDE  0141               	movlb	1	; select bank1
 22368  1EDF  008F               	movwf	15	;volatile
 22369                           
 22370                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 22371  1EE0  0140               	movlb	0	; select bank0
 22372  1EE1  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 22373  1EE2  0141               	movlb	1	; select bank1
 22374  1EE3  008E               	movwf	14	;volatile
 22375  1EE4  0008               	return
 22376  1EE5                     __end_of_ADCC_SetUpperThreshold:	
 22377                           
 22378                           	psect	text86
 22379  1ED3                     __ptext86:	
 22380 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22381 ;; Defined at:
 22382 ;;		line 317 in file "mcc_generated_files/adcc.c"
 22383 ;; Parameters:    Size  Location     Type
 22384 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22385 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 22386 ;; Auto vars:     Size  Location     Type
 22387 ;;		None
 22388 ;; Return value:  Size  Location     Type
 22389 ;;                  1    wreg      void 
 22390 ;; Registers used:
 22391 ;;		wreg
 22392 ;; Tracked objects:
 22393 ;;		On entry : 0/0
 22394 ;;		On exit  : 0/0
 22395 ;;		Unchanged: 0/0
 22396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22401 ;;Total ram usage:        2 bytes
 22402 ;; Hardware stack levels used:    1
 22403 ;; Hardware stack levels required when called:    4
 22404 ;; This function calls:
 22405 ;;		Nothing
 22406 ;; This function is called by:
 22407 ;;		_ADCC_Initialize
 22408 ;;		_BEAT_init
 22409 ;; This function uses a non-reentrant model
 22410 ;;
 22411                           
 22412                           
 22413                           ;psect for function _ADCC_SetADTIInterruptHandler
 22414  1ED3                     _ADCC_SetADTIInterruptHandler:	
 22415                           
 22416                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22417                           
 22418                           ;incstack = 0
 22419                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 22420  1ED3  0140               	movlb	0	; select bank0
 22421  1ED4  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 22422  1ED5  0142               	movlb	2	; select bank2
 22423  1ED6  00D9               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 22424  1ED7  0140               	movlb	0	; select bank0
 22425  1ED8  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 22426  1ED9  0142               	movlb	2	; select bank2
 22427  1EDA  00D8               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 22428  1EDB  0008               	return
 22429  1EDC                     __end_of_ADCC_SetADTIInterruptHandler:	
 22430                           
 22431                           	psect	intentry
 22432  0004                     __pintentry:	
 22433 ;; *************** function _INTERRUPT_InterruptManager *****************
 22434 ;; Defined at:
 22435 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22436 ;; Parameters:    Size  Location     Type
 22437 ;;		None
 22438 ;; Auto vars:     Size  Location     Type
 22439 ;;		None
 22440 ;; Return value:  Size  Location     Type
 22441 ;;                  1    wreg      void 
 22442 ;; Registers used:
 22443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22444 ;; Tracked objects:
 22445 ;;		On entry : 0/0
 22446 ;;		On exit  : 0/0
 22447 ;;		Unchanged: 0/0
 22448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22453 ;;Total ram usage:        0 bytes
 22454 ;; Hardware stack levels used:    1
 22455 ;; Hardware stack levels required when called:    3
 22456 ;; This function calls:
 22457 ;;		Absolute function
 22458 ;;		_ADCC_ThresholdISR
 22459 ;;		_DMX_interrupt
 22460 ;;		_EUSART1_Receive_ISR
 22461 ;;		_I2C1_BusCollisionISR
 22462 ;;		_I2C1_ISR
 22463 ;;		_TMR0_ISR
 22464 ;; This function is called by:
 22465 ;;		Interrupt level 1
 22466 ;; This function uses a non-reentrant model
 22467 ;;
 22468                           
 22469  0004                     _INTERRUPT_InterruptManager:	
 22470                           
 22471                           ;incstack = 0
 22472 ;; hardware stack exceeded
 22473  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22474                           
 22475                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22476  0005  3180               	pagesel	$
 22477                           
 22478                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 22479  0006  014E               	movlb	14	; select bank14
 22480  0007  1A96               	btfsc	22,5	;volatile
 22481  0008  1E8C               	btfss	12,5	;volatile
 22482  0009  280E               	goto	i1l427
 22483                           
 22484                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 22485  000A  319F  277B  3180   	fcall	_TMR0_ISR
 22486                           
 22487                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22488  000D  282E               	goto	i1l439
 22489  000E                     i1l427:	
 22490                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22491                           
 22492  000E  1F0B               	btfss	11,6	;volatile
 22493  000F  282E               	goto	i1l439
 22494                           
 22495                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22496  0010  1899               	btfsc	25,1	;volatile
 22497  0011  1C8F               	btfss	15,1	;volatile
 22498  0012  2817               	goto	i1l430
 22499                           
 22500                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 22501  0013  319E  26A6  3180   	fcall	_I2C1_BusCollisionISR
 22502                           
 22503                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 22504  0016  282E               	goto	i1l439
 22505  0017                     i1l430:	
 22506                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22507                           
 22508  0017  1819               	btfsc	25,0	;volatile
 22509  0018  1C0F               	btfss	15,0	;volatile
 22510  0019  281E               	goto	i1l432
 22511                           
 22512                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 22513  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 22514                           
 22515                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 22516  001D  282E               	goto	i1l439
 22517  001E                     i1l432:	
 22518                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 22519                           
 22520  001E  1897               	btfsc	23,1	;volatile
 22521  001F  1C8D               	btfss	13,1	;volatile
 22522  0020  2825               	goto	i1l434
 22523                           
 22524                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 22525  0021  319F  276E  3180   	fcall	_ADCC_ThresholdISR
 22526                           
 22527                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 22528  0024  282E               	goto	i1l439
 22529  0025                     i1l434:	
 22530                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 22531                           
 22532  0025  1A99               	btfsc	25,5	;volatile
 22533  0026  1E8F               	btfss	15,5	;volatile
 22534  0027  282E               	goto	i1l439
 22535                           
 22536                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 22537  0028  0142               	movlb	2	; select bank2
 22538  0029  0863               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 22539  002A  008A               	movwf	10
 22540  002B  0862               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 22541  002C  000A               	callw
 22542  002D  3180               	pagesel	$
 22543  002E                     i1l439:	
 22544                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 22545                           
 22546  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22547  002F  0009               	retfie
 22548  0030                     __end_of_INTERRUPT_InterruptManager:	
 22549                           
 22550                           	psect	text88
 22551  1F7B                     __ptext88:	
 22552 ;; *************** function _TMR0_ISR *****************
 22553 ;; Defined at:
 22554 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 22555 ;; Parameters:    Size  Location     Type
 22556 ;;		None
 22557 ;; Auto vars:     Size  Location     Type
 22558 ;;		None
 22559 ;; Return value:  Size  Location     Type
 22560 ;;                  1    wreg      void 
 22561 ;; Registers used:
 22562 ;;		wreg, status,2, status,0, pclath, cstack
 22563 ;; Tracked objects:
 22564 ;;		On entry : 0/0
 22565 ;;		On exit  : 0/0
 22566 ;;		Unchanged: 0/0
 22567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22572 ;;Total ram usage:        0 bytes
 22573 ;; Hardware stack levels used:    1
 22574 ;; Hardware stack levels required when called:    1
 22575 ;; This function calls:
 22576 ;;		Absolute function
 22577 ;;		_CLOCK_timerCallback
 22578 ;;		_TMR0_DefaultInterruptHandler
 22579 ;; This function is called by:
 22580 ;;		_INTERRUPT_InterruptManager
 22581 ;; This function uses a non-reentrant model
 22582 ;;
 22583                           
 22584                           
 22585                           ;psect for function _TMR0_ISR
 22586  1F7B                     _TMR0_ISR:	
 22587                           
 22588                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 22589                           
 22590                           ;incstack = 0
 22591 ;; hardware stack exceeded
 22592                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 22593  1F7B  014E               	movlb	14	; select bank14
 22594  1F7C  128C               	bcf	12,5	;volatile
 22595                           
 22596                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 22597  1F7D  0142               	movlb	2	; select bank2
 22598  1F7E  085A               	movf	_TMR0_InterruptHandler^(0+256),w
 22599  1F7F  045B               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 22600  1F80  1903               	btfsc	3,2
 22601  1F81  0008               	return
 22602                           
 22603                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 22604  1F82  085B               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 22605  1F83  008A               	movwf	10
 22606  1F84  085A               	movf	_TMR0_InterruptHandler^(0+256),w
 22607  1F85  000A               	callw
 22608  1F86  319F               	pagesel	$
 22609  1F87  0008               	return
 22610  1F88                     __end_of_TMR0_ISR:	
 22611                           
 22612                           	psect	text89
 22613  1EBD                     __ptext89:	
 22614 ;; *************** function _CLOCK_timerCallback *****************
 22615 ;; Defined at:
 22616 ;;		line 20 in file "clock.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;		None
 22619 ;; Auto vars:     Size  Location     Type
 22620 ;;		None
 22621 ;; Return value:  Size  Location     Type
 22622 ;;                  1    wreg      void 
 22623 ;; Registers used:
 22624 ;;		wreg
 22625 ;; Tracked objects:
 22626 ;;		On entry : 0/0
 22627 ;;		On exit  : 0/0
 22628 ;;		Unchanged: 0/0
 22629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22634 ;;Total ram usage:        0 bytes
 22635 ;; Hardware stack levels used:    1
 22636 ;; This function calls:
 22637 ;;		Nothing
 22638 ;; This function is called by:
 22639 ;;		_CLOCK_init
 22640 ;;		_TMR0_ISR
 22641 ;; This function uses a non-reentrant model
 22642 ;;
 22643                           
 22644                           
 22645                           ;psect for function _CLOCK_timerCallback
 22646  1EBD                     _CLOCK_timerCallback:	
 22647                           
 22648                           ;clock.c: 21:     currentTime++;
 22649                           
 22650                           ;incstack = 0
 22651 ;; hardware stack exceeded
 22652                           ; Regs used in _CLOCK_timerCallback: [wreg]
 22653  1EBD  3001               	movlw	1
 22654  1EBE  0142               	movlb	2	; select bank2
 22655  1EBF  07C6               	addwf	_currentTime^(0+256),f
 22656  1EC0  3000               	movlw	0
 22657  1EC1  3DC7               	addwfc	(_currentTime+1)^(0+256),f
 22658  1EC2  0008               	return
 22659  1EC3                     __end_of_CLOCK_timerCallback:	
 22660                           
 22661                           	psect	text90
 22662  1E9E                     __ptext90:	
 22663 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 22664 ;; Defined at:
 22665 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 22666 ;; Parameters:    Size  Location     Type
 22667 ;;		None
 22668 ;; Auto vars:     Size  Location     Type
 22669 ;;		None
 22670 ;; Return value:  Size  Location     Type
 22671 ;;                  1    wreg      void 
 22672 ;; Registers used:
 22673 ;;		None
 22674 ;; Tracked objects:
 22675 ;;		On entry : 0/0
 22676 ;;		On exit  : 0/0
 22677 ;;		Unchanged: 0/0
 22678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22683 ;;Total ram usage:        0 bytes
 22684 ;; Hardware stack levels used:    1
 22685 ;; This function calls:
 22686 ;;		Nothing
 22687 ;; This function is called by:
 22688 ;;		_TMR0_Initialize
 22689 ;;		_TMR0_ISR
 22690 ;; This function uses a non-reentrant model
 22691 ;;
 22692                           
 22693                           
 22694                           ;psect for function _TMR0_DefaultInterruptHandler
 22695  1E9E                     _TMR0_DefaultInterruptHandler:	
 22696                           
 22697                           ;incstack = 0
 22698 ;; hardware stack exceeded
 22699                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 22700  1E9E  0008               	return
 22701  1E9F                     __end_of_TMR0_DefaultInterruptHandler:	
 22702                           
 22703                           	psect	text91
 22704  0EAE                     __ptext91:	
 22705 ;; *************** function _I2C1_ISR *****************
 22706 ;; Defined at:
 22707 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;		None
 22710 ;; Auto vars:     Size  Location     Type
 22711 ;;		None
 22712 ;; Return value:  Size  Location     Type
 22713 ;;                  1    wreg      void 
 22714 ;; Registers used:
 22715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22716 ;; Tracked objects:
 22717 ;;		On entry : 0/0
 22718 ;;		On exit  : 0/0
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22725 ;;Total ram usage:        4 bytes
 22726 ;; Hardware stack levels used:    1
 22727 ;; Hardware stack levels required when called:    1
 22728 ;; This function calls:
 22729 ;;		_I2C1_FunctionComplete
 22730 ;;		_I2C1_Stop
 22731 ;; This function is called by:
 22732 ;;		_INTERRUPT_InterruptManager
 22733 ;; This function uses a non-reentrant model
 22734 ;;
 22735                           
 22736                           
 22737                           ;psect for function _I2C1_ISR
 22738  0EAE                     _I2C1_ISR:	
 22739                           
 22740                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 22741                           
 22742                           ;incstack = 0
 22743 ;; hardware stack exceeded
 22744                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22745  0EAE  014E               	movlb	14	; select bank14
 22746  0EAF  100F               	bcf	15,0	;volatile
 22747                           
 22748                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 22749  0EB0  0143               	movlb	3	; select bank3
 22750  0EB1  1F90               	btfss	16,7	;volatile
 22751  0EB2  2FD3               	goto	i1l6328
 22752                           
 22753                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 22754  0EB3  1390               	bcf	16,7	;volatile
 22755                           
 22756                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 22757  0EB4  0141               	movlb	1	; select bank1
 22758  0EB5  01C4               	clrf	_i2c1_state^(0+128)
 22759                           
 22760                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 22761  0EB6  0842               	movf	_p_i2c1_current^(0+128),w
 22762  0EB7  3E02               	addlw	2
 22763  0EB8  0086               	movwf	6
 22764  0EB9  3001               	movlw	1	; select bank2/3
 22765  0EBA  0087               	movwf	7
 22766  0EBB  0801               	movf	1,w
 22767  0EBC  0086               	movwf	6
 22768  0EBD  0187               	clrf	7
 22769  0EBE  0181               	clrf	1
 22770  0EBF  0A81               	incf	1,f
 22771                           
 22772                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 22773  0EC0  01C2               	clrf	_p_i2c1_current^(0+128)
 22774  0EC1  0008               	return
 22775  0EC2                     i1l547:	
 22776                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 22777                           
 22778                           
 22779                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 22780  0EC2  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 22781  0EC3  0008               	return
 22782                           
 22783                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 22784  0EC4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22785  0EC5  00F2               	movwf	??_I2C1_ISR
 22786  0EC6  0872               	movf	??_I2C1_ISR,w
 22787  0EC7  00C2               	movwf	_p_i2c1_current^(0+128)
 22788                           
 22789                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 22790  0EC8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22791  0EC9  0086               	movwf	6
 22792  0ECA  3001               	movlw	1	; select bank2/3
 22793  0ECB  0087               	movwf	7
 22794  0ECC  0801               	movf	1,w
 22795  0ECD  00F2               	movwf	??_I2C1_ISR
 22796  0ECE  0872               	movf	??_I2C1_ISR,w
 22797  0ECF  00C3               	movwf	_i2c1_trb_count^(0+128)
 22798                           
 22799                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 22800  0ED0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22801  0ED1  0086               	movwf	6
 22802  0ED2  3001               	movlw	1	; select bank2/3
 22803  0ED3  0087               	movwf	7
 22804  0ED4  3001               	movlw	1	; select bank2/3
 22805  0ED5  3F41               	moviw [1]fsr1
 22806  0ED6  00F7               	movwf	_p_i2c1_trb_current
 22807                           
 22808                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 22809  0ED7  3003               	movlw	3
 22810  0ED8  00F2               	movwf	??_I2C1_ISR
 22811  0ED9  0872               	movf	??_I2C1_ISR,w
 22812  0EDA  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 22813                           
 22814                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 22815  0EDB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22816  0EDC  3A58               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 22817  0EDD  1D03               	skipz
 22818  0EDE  2EE3               	goto	i1l6216
 22819                           
 22820                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 22821  0EDF  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 22822  0EE0  00F2               	movwf	??_I2C1_ISR
 22823  0EE1  0872               	movf	??_I2C1_ISR,w
 22824  0EE2  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 22825  0EE3                     i1l6216:	
 22826                           
 22827                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 22828  0EE3  1022               	bcf	(_i2c1_object^(0+128)+2),0
 22829                           
 22830                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 22831  0EE4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22832  0EE5  0620               	xorwf	_i2c1_object^(0+128),w
 22833  0EE6  1903               	btfsc	3,2
 22834                           
 22835                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 22836  0EE7  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 22837                           
 22838                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 22839                           
 22840                           ;mcc_generated_files/i2c1.c: 290:                 }
 22841  0EE8  0143               	movlb	3	; select bank3
 22842  0EE9  1411               	bsf	17,0	;volatile
 22843  0EEA                     i1l6220:	
 22844                           
 22845                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 22846  0EEA  3002               	movlw	2
 22847  0EEB  00F2               	movwf	??_I2C1_ISR
 22848  0EEC  0872               	movf	??_I2C1_ISR,w
 22849  0EED  0141               	movlb	1	; select bank1
 22850  0EEE  00C4               	movwf	_i2c1_state^(0+128)
 22851  0EEF  0008               	return
 22852  0EF0                     i1l552:	
 22853                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 22854                           
 22855  0EF0  2F7C               	goto	i1l573
 22856  0EF1                     i1l553:	
 22857                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 22858                           
 22859                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 22860                           
 22861                           
 22862                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 22863  0EF1  0143               	movlb	3	; select bank3
 22864  0EF2  1F11               	btfss	17,6	;volatile
 22865  0EF3  2EFD               	goto	i1l6228
 22866                           
 22867                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 22868  0EF4  3001               	movlw	1
 22869  0EF5  00F2               	movwf	??_I2C1_ISR
 22870  0EF6  0872               	movf	??_I2C1_ISR,w
 22871  0EF7  0141               	movlb	1	; select bank1
 22872  0EF8  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22873                           
 22874                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22875  0EF9  3004               	movlw	4
 22876  0EFA  3190  20CD         	fcall	_I2C1_Stop
 22877                           
 22878                           ;mcc_generated_files/i2c1.c: 319:             }
 22879  0EFC  0008               	return
 22880  0EFD                     i1l6228:	
 22881                           
 22882                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 22883  0EFD  087B               	movf	I2C1_ISR@i2c_address+1,w
 22884  0EFE  00F3               	movwf	??_I2C1_ISR+1
 22885  0EFF  087A               	movf	I2C1_ISR@i2c_address,w
 22886  0F00  00F2               	movwf	??_I2C1_ISR
 22887  0F01  36F3               	lsrf	??_I2C1_ISR+1,f
 22888  0F02  0CF2               	rrf	??_I2C1_ISR,f
 22889  0F03  0872               	movf	??_I2C1_ISR,w
 22890  0F04  008C               	movwf	12	;volatile
 22891                           
 22892                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 22893  0F05  1C7A               	btfss	I2C1_ISR@i2c_address,0
 22894  0F06  2F0D               	goto	i1l6234
 22895                           
 22896                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 22897  0F07  300B               	movlw	11
 22898  0F08  00F2               	movwf	??_I2C1_ISR
 22899  0F09  0872               	movf	??_I2C1_ISR,w
 22900  0F0A  0141               	movlb	1	; select bank1
 22901  0F0B  00C4               	movwf	_i2c1_state^(0+128)
 22902                           
 22903                           ;mcc_generated_files/i2c1.c: 331:                 }
 22904  0F0C  0008               	return
 22905  0F0D                     i1l6234:	
 22906                           
 22907                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 22908  0F0D  3003               	movlw	3
 22909  0F0E  00F2               	movwf	??_I2C1_ISR
 22910  0F0F  0872               	movf	??_I2C1_ISR,w
 22911  0F10  0141               	movlb	1	; select bank1
 22912  0F11  00C4               	movwf	_i2c1_state^(0+128)
 22913  0F12  0008               	return
 22914  0F13                     i1l558:	
 22915                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 22916                           
 22917                           
 22918                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 22919  0F13  0143               	movlb	3	; select bank3
 22920  0F14  1F11               	btfss	17,6	;volatile
 22921  0F15  2F1F               	goto	i1l559
 22922                           
 22923                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 22924  0F16  3001               	movlw	1
 22925  0F17  00F2               	movwf	??_I2C1_ISR
 22926  0F18  0872               	movf	??_I2C1_ISR,w
 22927  0F19  0141               	movlb	1	; select bank1
 22928  0F1A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22929                           
 22930                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22931  0F1B  3004               	movlw	4
 22932  0F1C  3190  20CD         	fcall	_I2C1_Stop
 22933                           
 22934                           ;mcc_generated_files/i2c1.c: 347:             }
 22935  0F1E  0008               	return
 22936  0F1F                     i1l559:	
 22937                           ;mcc_generated_files/i2c1.c: 348:             else
 22938                           
 22939                           
 22940                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 22941  0F1F  1491               	bsf	17,1	;volatile
 22942                           
 22943                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 22944  0F20  087B               	movf	I2C1_ISR@i2c_address+1,w
 22945  0F21  00F3               	movwf	??_I2C1_ISR+1
 22946  0F22  087A               	movf	I2C1_ISR@i2c_address,w
 22947  0F23  00F2               	movwf	??_I2C1_ISR
 22948  0F24  0873               	movf	??_I2C1_ISR+1,w
 22949  0F25  00F2               	movwf	??_I2C1_ISR
 22950  0F26  01F3               	clrf	??_I2C1_ISR+1
 22951  0F27  3006               	movlw	6
 22952  0F28  0572               	andwf	??_I2C1_ISR,w
 22953  0F29  00F4               	movwf	??_I2C1_ISR+2
 22954  0F2A  3000               	movlw	0
 22955  0F2B  0573               	andwf	??_I2C1_ISR+1,w
 22956  0F2C  00F5               	movwf	??_I2C1_ISR+3
 22957  0F2D  30F0               	movlw	240
 22958  0F2E  0474               	iorwf	??_I2C1_ISR+2,w
 22959  0F2F  00FA               	movwf	I2C1_ISR@i2c_address
 22960  0F30  3000               	movlw	0
 22961  0F31  0475               	iorwf	??_I2C1_ISR+3,w
 22962  0F32  00FB               	movwf	I2C1_ISR@i2c_address+1
 22963                           
 22964                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 22965  0F33  147A               	bsf	I2C1_ISR@i2c_address,0
 22966                           
 22967                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 22968  0F34  0141               	movlb	1	; select bank1
 22969  0F35  01BF               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 22970  0F36  0ABF               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 22971  0F37  2EEA               	goto	i1l6220
 22972  0F38                     i1l6248:	
 22973                           
 22974                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 22975  0F38  033F               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 22976  0F39  1903               	btfsc	3,2
 22977  0F3A  2F51               	goto	i1l6268
 22978                           
 22979                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 22980  0F3B  0877               	movf	_p_i2c1_trb_current,w
 22981  0F3C  0086               	movwf	6
 22982  0F3D  3001               	movlw	1	; select bank2/3
 22983  0F3E  0087               	movwf	7
 22984  0F3F  3F40               	moviw [0]fsr1
 22985  0F40  00FA               	movwf	I2C1_ISR@i2c_address
 22986  0F41  3F41               	moviw [1]fsr1
 22987  0F42  00FB               	movwf	I2C1_ISR@i2c_address+1
 22988                           
 22989                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 22990  0F43  0877               	movf	_p_i2c1_trb_current,w
 22991  0F44  0086               	movwf	6
 22992  0F45  3001               	movlw	1	; select bank2/3
 22993  0F46  0087               	movwf	7
 22994  0F47  3001               	movlw	1	; select bank2/3
 22995  0F48  3F43               	moviw [3]fsr1
 22996  0F49  00C1               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 22997                           
 22998                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 22999  0F4A  0877               	movf	_p_i2c1_trb_current,w
 23000  0F4B  0086               	movwf	6
 23001  0F4C  3001               	movlw	1	; select bank2/3
 23002  0F4D  0087               	movwf	7
 23003  0F4E  3001               	movlw	1	; select bank2/3
 23004  0F4F  3F42               	moviw [2]fsr1
 23005  0F50  00C0               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 23006  0F51                     i1l6268:	
 23007                           
 23008                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 23009  0F51  087A               	movf	I2C1_ISR@i2c_address,w
 23010  0F52  0143               	movlb	3	; select bank3
 23011  0F53  008C               	movwf	12	;volatile
 23012                           
 23013                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 23014  0F54  1C7A               	btfss	I2C1_ISR@i2c_address,0
 23015  0F55  2F0D               	goto	i1l6234
 23016                           
 23017                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 23018  0F56  3005               	movlw	5
 23019  0F57  00F2               	movwf	??_I2C1_ISR
 23020  0F58  0872               	movf	??_I2C1_ISR,w
 23021  0F59  0141               	movlb	1	; select bank1
 23022  0F5A  00C4               	movwf	_i2c1_state^(0+128)
 23023                           
 23024                           ;mcc_generated_files/i2c1.c: 419:                 }
 23025  0F5B  0008               	return
 23026  0F5C                     i1l569:	
 23027                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 23028                           
 23029                           
 23030                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 23031  0F5C  0143               	movlb	3	; select bank3
 23032  0F5D  1F11               	btfss	17,6	;volatile
 23033  0F5E  2F6A               	goto	i1l6282
 23034                           
 23035                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 23036  0F5F  3001               	movlw	1
 23037  0F60  00F2               	movwf	??_I2C1_ISR
 23038  0F61  0872               	movf	??_I2C1_ISR,w
 23039  0F62  0141               	movlb	1	; select bank1
 23040  0F63  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23041                           
 23042                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 23043  0F64  0143               	movlb	3	; select bank3
 23044  0F65  1311               	bcf	17,6	;volatile
 23045                           
 23046                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 23047  0F66  3005               	movlw	5
 23048  0F67  3190  20CD         	fcall	_I2C1_Stop
 23049                           
 23050                           ;mcc_generated_files/i2c1.c: 442:             }
 23051  0F69  0008               	return
 23052  0F6A                     i1l6282:	
 23053                           
 23054                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 23055  0F6A  3001               	movlw	1
 23056  0F6B  0141               	movlb	1	; select bank1
 23057  0F6C  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23058  0F6D  0A40               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 23059  0F6E  1D03               	btfss	3,2
 23060  0F6F  2F7F               	goto	i1l6290
 23061                           
 23062                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 23063  0F70  3004               	movlw	4
 23064  0F71  00F2               	movwf	??_I2C1_ISR
 23065  0F72  0872               	movf	??_I2C1_ISR,w
 23066  0F73  07F7               	addwf	_p_i2c1_trb_current,f
 23067                           
 23068                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 23069  0F74  3001               	movlw	1
 23070  0F75  02C3               	subwf	_i2c1_trb_count^(0+128),f
 23071  0F76  1D03               	btfss	3,2
 23072  0F77  2F7C               	goto	i1l573
 23073                           
 23074                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23075  0F78  3000               	movlw	0
 23076  0F79  3190  20CD         	fcall	_I2C1_Stop
 23077                           
 23078                           ;mcc_generated_files/i2c1.c: 457:                     }
 23079  0F7B  0008               	return
 23080  0F7C                     i1l573:	
 23081                           ;mcc_generated_files/i2c1.c: 458:                     else
 23082                           
 23083                           
 23084                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 23085  0F7C  0143               	movlb	3	; select bank3
 23086  0F7D  1491               	bsf	17,1	;volatile
 23087  0F7E  2EEA               	goto	i1l6220
 23088  0F7F                     i1l6290:	
 23089                           
 23090                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 23091  0F7F  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23092  0F80  0086               	movwf	6
 23093  0F81  0187               	clrf	7
 23094  0F82  0801               	movf	1,w
 23095  0F83  0143               	movlb	3	; select bank3
 23096  0F84  008C               	movwf	12	;volatile
 23097  0F85  3001               	movlw	1
 23098  0F86  00F2               	movwf	??_I2C1_ISR
 23099  0F87  0872               	movf	??_I2C1_ISR,w
 23100  0F88  0141               	movlb	1	; select bank1
 23101  0F89  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23102  0F8A  0008               	return
 23103  0F8B                     i1l576:	
 23104                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 23105                           
 23106                           
 23107                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 23108  0F8B  0143               	movlb	3	; select bank3
 23109  0F8C  1F11               	btfss	17,6	;volatile
 23110  0F8D  2F99               	goto	i1l577
 23111                           
 23112                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 23113  0F8E  3001               	movlw	1
 23114  0F8F  00F2               	movwf	??_I2C1_ISR
 23115  0F90  0872               	movf	??_I2C1_ISR,w
 23116  0F91  0141               	movlb	1	; select bank1
 23117  0F92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23118                           
 23119                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23120  0F93  3004               	movlw	4
 23121  0F94  3190  20CD         	fcall	_I2C1_Stop
 23122                           
 23123                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 23124  0F96  0143               	movlb	3	; select bank3
 23125  0F97  1311               	bcf	17,6	;volatile
 23126                           
 23127                           ;mcc_generated_files/i2c1.c: 495:             }
 23128  0F98  0008               	return
 23129  0F99                     i1l577:	
 23130                           ;mcc_generated_files/i2c1.c: 496:             else
 23131                           
 23132                           
 23133                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 23134  0F99  1591               	bsf	17,3	;volatile
 23135                           
 23136                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 23137  0F9A  3008               	movlw	8
 23138  0F9B  00F2               	movwf	??_I2C1_ISR
 23139  0F9C  0872               	movf	??_I2C1_ISR,w
 23140  0F9D  0141               	movlb	1	; select bank1
 23141  0F9E  00C4               	movwf	_i2c1_state^(0+128)
 23142  0F9F  0008               	return
 23143  0FA0                     i1l6302:	
 23144                           
 23145                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 23146  0FA0  3008               	movlw	8
 23147  0FA1  00F2               	movwf	??_I2C1_ISR
 23148  0FA2  0872               	movf	??_I2C1_ISR,w
 23149  0FA3  00C4               	movwf	_i2c1_state^(0+128)
 23150                           
 23151                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 23152  0FA4  0143               	movlb	3	; select bank3
 23153  0FA5  1591               	bsf	17,3	;volatile
 23154                           
 23155                           ;mcc_generated_files/i2c1.c: 513:             break;
 23156  0FA6  0008               	return
 23157  0FA7                     i1l6306:	
 23158                           
 23159                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 23160  0FA7  0143               	movlb	3	; select bank3
 23161  0FA8  080C               	movf	12,w	;volatile
 23162  0FA9  00F2               	movwf	??_I2C1_ISR
 23163  0FAA  0141               	movlb	1	; select bank1
 23164  0FAB  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23165  0FAC  0086               	movwf	6
 23166  0FAD  0187               	clrf	7
 23167  0FAE  0872               	movf	??_I2C1_ISR,w
 23168  0FAF  0081               	movwf	1
 23169  0FB0  3001               	movlw	1
 23170  0FB1  00F2               	movwf	??_I2C1_ISR
 23171  0FB2  0872               	movf	??_I2C1_ISR,w
 23172  0FB3  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23173                           
 23174                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 23175  0FB4  3001               	movlw	1
 23176  0FB5  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23177  0FB6  1903               	btfsc	3,2
 23178  0FB7  2FC0               	goto	i1l581
 23179                           
 23180                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 23181  0FB8  0143               	movlb	3	; select bank3
 23182  0FB9  1291               	bcf	17,5	;volatile
 23183                           
 23184                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 23185  0FBA  3006               	movlw	6
 23186  0FBB  00F2               	movwf	??_I2C1_ISR
 23187  0FBC  0872               	movf	??_I2C1_ISR,w
 23188  0FBD  0141               	movlb	1	; select bank1
 23189  0FBE  00C4               	movwf	_i2c1_state^(0+128)
 23190                           
 23191                           ;mcc_generated_files/i2c1.c: 532:             }
 23192  0FBF  2FC4               	goto	i1l6318
 23193  0FC0                     i1l581:	
 23194                           ;mcc_generated_files/i2c1.c: 533:             else
 23195                           
 23196                           
 23197                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 23198  0FC0  0143               	movlb	3	; select bank3
 23199  0FC1  1691               	bsf	17,5	;volatile
 23200                           
 23201                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 23202  0FC2  319F  27A5         	fcall	_I2C1_FunctionComplete
 23203  0FC4                     i1l6318:	
 23204                           
 23205                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 23206  0FC4  0143               	movlb	3	; select bank3
 23207  0FC5  1611               	bsf	17,4	;volatile
 23208                           
 23209                           ;mcc_generated_files/i2c1.c: 545:             break;
 23210  0FC6  0008               	return
 23211  0FC7                     i1l6320:	
 23212                           
 23213                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23214  0FC7  3000               	movlw	0
 23215  0FC8  3190  20CD         	fcall	_I2C1_Stop
 23216                           
 23217                           ;mcc_generated_files/i2c1.c: 552:             break;
 23218  0FCA  0008               	return
 23219  0FCB                     i1l6322:	
 23220                           
 23221                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 23222  0FCB  3001               	movlw	1
 23223  0FCC  00F2               	movwf	??_I2C1_ISR
 23224  0FCD  0872               	movf	??_I2C1_ISR,w
 23225  0FCE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23226                           
 23227                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 23228  0FCF  3006               	movlw	6
 23229  0FD0  3190  20CD         	fcall	_I2C1_Stop
 23230                           
 23231                           ;mcc_generated_files/i2c1.c: 560:             break;
 23232  0FD2  0008               	return
 23233  0FD3                     i1l6328:	
 23234  0FD3  0141               	movlb	1	; select bank1
 23235  0FD4  0844               	movf	_i2c1_state^(0+128),w
 23236  0FD5  00F2               	movwf	??_I2C1_ISR
 23237  0FD6  01F3               	clrf	??_I2C1_ISR+1
 23238                           
 23239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23240                           ; Switch size 1, requested type "simple"
 23241                           ; Number of cases is 1, Range of values is 0 to 0
 23242                           ; switch strategies available:
 23243                           ; Name         Instructions Cycles
 23244                           ; simple_byte            4     3 (average)
 23245                           ; direct_byte            8     6 (fixed)
 23246                           ; jumptable            260     6 (fixed)
 23247                           ;	Chosen strategy is simple_byte
 23248  0FD7  0873               	movf	??_I2C1_ISR+1,w
 23249  0FD8  3A00               	xorlw	0	; case 0
 23250  0FD9  1903               	skipnz
 23251  0FDA  2FDC               	goto	i1l8984
 23252  0FDB  2FCB               	goto	i1l6322
 23253  0FDC                     i1l8984:	
 23254                           
 23255                           ; Switch size 1, requested type "simple"
 23256                           ; Number of cases is 11, Range of values is 0 to 11
 23257                           ; switch strategies available:
 23258                           ; Name         Instructions Cycles
 23259                           ; direct_byte           30     6 (fixed)
 23260                           ; simple_byte           34    18 (average)
 23261                           ; jumptable            260     6 (fixed)
 23262                           ;	Chosen strategy is simple_byte
 23263  0FDC  0872               	movf	??_I2C1_ISR,w
 23264  0FDD  3A00               	xorlw	0	; case 0
 23265  0FDE  1903               	skipnz
 23266  0FDF  2EC2               	goto	i1l547
 23267  0FE0  3A01               	xorlw	1	; case 1
 23268  0FE1  1903               	skipnz
 23269  0FE2  2EF0               	goto	i1l552
 23270  0FE3  3A03               	xorlw	3	; case 2
 23271  0FE4  1903               	skipnz
 23272  0FE5  2F38               	goto	i1l6248
 23273  0FE6  3A01               	xorlw	1	; case 3
 23274  0FE7  1903               	skipnz
 23275  0FE8  2F5C               	goto	i1l569
 23276  0FE9  3A07               	xorlw	7	; case 4
 23277  0FEA  1903               	skipnz
 23278  0FEB  2FC7               	goto	i1l6320
 23279  0FEC  3A01               	xorlw	1	; case 5
 23280  0FED  1903               	skipnz
 23281  0FEE  2F8B               	goto	i1l576
 23282  0FEF  3A03               	xorlw	3	; case 6
 23283  0FF0  1903               	skipnz
 23284  0FF1  2FA0               	goto	i1l6302
 23285  0FF2  3A01               	xorlw	1	; case 7
 23286  0FF3  1903               	skipnz
 23287  0FF4  2FC7               	goto	i1l6320
 23288  0FF5  3A0F               	xorlw	15	; case 8
 23289  0FF6  1903               	skipnz
 23290  0FF7  2FA7               	goto	i1l6306
 23291  0FF8  3A02               	xorlw	2	; case 10
 23292  0FF9  1903               	skipnz
 23293  0FFA  2EF1               	goto	i1l553
 23294  0FFB  3A01               	xorlw	1	; case 11
 23295  0FFC  1903               	skipnz
 23296  0FFD  2F13               	goto	i1l558
 23297  0FFE  2FCB               	goto	i1l6322
 23298  0FFF  0008               	return
 23299  1000                     __end_of_I2C1_ISR:	
 23300                           
 23301                           	psect	text92
 23302  10CD                     __ptext92:	
 23303 ;; *************** function _I2C1_Stop *****************
 23304 ;; Defined at:
 23305 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 23306 ;; Parameters:    Size  Location     Type
 23307 ;;  completion_c    1    wreg     enum E10866
 23308 ;; Auto vars:     Size  Location     Type
 23309 ;;  completion_c    1    1[COMMON] enum E10866
 23310 ;; Return value:  Size  Location     Type
 23311 ;;                  1    wreg      void 
 23312 ;; Registers used:
 23313 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23314 ;; Tracked objects:
 23315 ;;		On entry : 0/0
 23316 ;;		On exit  : 0/0
 23317 ;;		Unchanged: 0/0
 23318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23323 ;;Total ram usage:        2 bytes
 23324 ;; Hardware stack levels used:    1
 23325 ;; This function calls:
 23326 ;;		Nothing
 23327 ;; This function is called by:
 23328 ;;		_I2C1_ISR
 23329 ;; This function uses a non-reentrant model
 23330 ;;
 23331                           
 23332                           
 23333                           ;psect for function _I2C1_Stop
 23334  10CD                     _I2C1_Stop:	
 23335                           
 23336                           ;incstack = 0
 23337 ;; hardware stack exceeded
 23338                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 23339                           ;I2C1_Stop@completion_code stored from wreg
 23340  10CD  00F1               	movwf	I2C1_Stop@completion_code
 23341                           
 23342                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 23343  10CE  0143               	movlb	3	; select bank3
 23344  10CF  1511               	bsf	17,2	;volatile
 23345                           
 23346                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 23347  10D0  0141               	movlb	1	; select bank1
 23348  10D1  0842               	movf	_p_i2c1_current^(0+128),w
 23349  10D2  3E02               	addlw	2
 23350  10D3  0086               	movwf	6
 23351  10D4  3001               	movlw	1	; select bank2/3
 23352  10D5  0087               	movwf	7
 23353  10D6  0801               	movf	1,w
 23354  10D7  1903               	btfsc	3,2
 23355  10D8  28E5               	goto	i1l5654
 23356                           
 23357                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 23358  10D9  0871               	movf	I2C1_Stop@completion_code,w
 23359  10DA  00F0               	movwf	??_I2C1_Stop
 23360  10DB  0842               	movf	_p_i2c1_current^(0+128),w
 23361  10DC  3E02               	addlw	2
 23362  10DD  0086               	movwf	6
 23363  10DE  3001               	movlw	1	; select bank2/3
 23364  10DF  0087               	movwf	7
 23365  10E0  0801               	movf	1,w
 23366  10E1  0086               	movwf	6
 23367  10E2  0187               	clrf	7
 23368  10E3  0870               	movf	??_I2C1_Stop,w
 23369  10E4  0081               	movwf	1
 23370  10E5                     i1l5654:	
 23371                           
 23372                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 23373  10E5  01C4               	clrf	_i2c1_state^(0+128)
 23374  10E6  0008               	return
 23375  10E7                     __end_of_I2C1_Stop:	
 23376                           
 23377                           	psect	text93
 23378  1FA5                     __ptext93:	
 23379 ;; *************** function _I2C1_FunctionComplete *****************
 23380 ;; Defined at:
 23381 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 23382 ;; Parameters:    Size  Location     Type
 23383 ;;		None
 23384 ;; Auto vars:     Size  Location     Type
 23385 ;;		None
 23386 ;; Return value:  Size  Location     Type
 23387 ;;                  1    wreg      void 
 23388 ;; Registers used:
 23389 ;;		wreg, status,2, status,0
 23390 ;; Tracked objects:
 23391 ;;		On entry : 0/0
 23392 ;;		On exit  : 0/0
 23393 ;;		Unchanged: 0/0
 23394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23399 ;;Total ram usage:        1 bytes
 23400 ;; Hardware stack levels used:    1
 23401 ;; This function calls:
 23402 ;;		Nothing
 23403 ;; This function is called by:
 23404 ;;		_I2C1_ISR
 23405 ;; This function uses a non-reentrant model
 23406 ;;
 23407                           
 23408                           
 23409                           ;psect for function _I2C1_FunctionComplete
 23410  1FA5                     _I2C1_FunctionComplete:	
 23411                           
 23412                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 23413                           
 23414                           ;incstack = 0
 23415 ;; hardware stack exceeded
 23416                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 23417  1FA5  3004               	movlw	4
 23418  1FA6  00F0               	movwf	??_I2C1_FunctionComplete
 23419  1FA7  0870               	movf	??_I2C1_FunctionComplete,w
 23420  1FA8  07F7               	addwf	_p_i2c1_trb_current,f
 23421                           
 23422                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 23423  1FA9  3001               	movlw	1
 23424  1FAA  0141               	movlb	1	; select bank1
 23425  1FAB  02C3               	subwf	_i2c1_trb_count^(0+128),f
 23426  1FAC  1D03               	btfss	3,2
 23427  1FAD  2FB3               	goto	i1l588
 23428                           
 23429                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 23430  1FAE  3004               	movlw	4
 23431  1FAF  00F0               	movwf	??_I2C1_FunctionComplete
 23432  1FB0  0870               	movf	??_I2C1_FunctionComplete,w
 23433  1FB1  00C4               	movwf	_i2c1_state^(0+128)
 23434                           
 23435                           ;mcc_generated_files/i2c1.c: 575:     }
 23436  1FB2  0008               	return
 23437  1FB3                     i1l588:	
 23438                           ;mcc_generated_files/i2c1.c: 576:     else
 23439                           
 23440                           
 23441                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 23442  1FB3  01C4               	clrf	_i2c1_state^(0+128)
 23443  1FB4  0AC4               	incf	_i2c1_state^(0+128),f
 23444  1FB5  0008               	return
 23445  1FB6                     __end_of_I2C1_FunctionComplete:	
 23446                           
 23447                           	psect	text94
 23448  1EA6                     __ptext94:	
 23449 ;; *************** function _I2C1_BusCollisionISR *****************
 23450 ;; Defined at:
 23451 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 23452 ;; Parameters:    Size  Location     Type
 23453 ;;		None
 23454 ;; Auto vars:     Size  Location     Type
 23455 ;;		None
 23456 ;; Return value:  Size  Location     Type
 23457 ;;                  1    wreg      void 
 23458 ;; Registers used:
 23459 ;;		None
 23460 ;; Tracked objects:
 23461 ;;		On entry : 0/0
 23462 ;;		On exit  : 0/0
 23463 ;;		Unchanged: 0/0
 23464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23469 ;;Total ram usage:        0 bytes
 23470 ;; Hardware stack levels used:    1
 23471 ;; This function calls:
 23472 ;;		Nothing
 23473 ;; This function is called by:
 23474 ;;		_INTERRUPT_InterruptManager
 23475 ;; This function uses a non-reentrant model
 23476 ;;
 23477                           
 23478                           
 23479                           ;psect for function _I2C1_BusCollisionISR
 23480  1EA6                     _I2C1_BusCollisionISR:	
 23481                           
 23482                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 23483                           
 23484                           ;incstack = 0
 23485 ;; hardware stack exceeded
 23486                           ; Regs used in _I2C1_BusCollisionISR: []
 23487  1EA6  014E               	movlb	14	; select bank14
 23488  1EA7  108F               	bcf	15,1	;volatile
 23489  1EA8  0008               	return
 23490  1EA9                     __end_of_I2C1_BusCollisionISR:	
 23491                           
 23492                           	psect	text95
 23493  136B                     __ptext95:	
 23494 ;; *************** function _DMX_interrupt *****************
 23495 ;; Defined at:
 23496 ;;		line 54 in file "dmx.c"
 23497 ;; Parameters:    Size  Location     Type
 23498 ;;		None
 23499 ;; Auto vars:     Size  Location     Type
 23500 ;;  dummy           1    6[COMMON] volatile unsigned char 
 23501 ;; Return value:  Size  Location     Type
 23502 ;;                  1    wreg      void 
 23503 ;; Registers used:
 23504 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23505 ;; Tracked objects:
 23506 ;;		On entry : 0/0
 23507 ;;		On exit  : 0/0
 23508 ;;		Unchanged: 0/0
 23509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23512 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23513 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23514 ;;Total ram usage:        7 bytes
 23515 ;; Hardware stack levels used:    1
 23516 ;; This function calls:
 23517 ;;		Nothing
 23518 ;; This function is called by:
 23519 ;;		_DMX_init
 23520 ;;		_INTERRUPT_InterruptManager
 23521 ;; This function uses a non-reentrant model
 23522 ;;
 23523                           
 23524                           
 23525                           ;psect for function _DMX_interrupt
 23526  136B                     _DMX_interrupt:	
 23527                           
 23528                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 23529                           
 23530                           ;incstack = 0
 23531 ;; hardware stack exceeded
 23532                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 23533  136B  0142               	movlb	2	; select bank2
 23534  136C  1C9D               	btfss	29,1	;volatile
 23535  136D  2B70               	goto	i1l6670
 23536                           
 23537                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 23538  136E  121D               	bcf	29,4	;volatile
 23539                           
 23540                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 23541  136F  161D               	bsf	29,4	;volatile
 23542  1370                     i1l6670:	
 23543                           
 23544                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 23545  1370  0864               	movf	_initial^(0+256),w
 23546  1371  0465               	iorwf	(_initial+1)^(0+256),w
 23547  1372  1903               	btfsc	3,2
 23548  1373  191D               	btfsc	29,2	;volatile
 23549  1374  2B91               	goto	i1l6678
 23550                           
 23551                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 23552  1375  0819               	movf	25,w	;volatile
 23553  1376  00F0               	movwf	??_DMX_interrupt
 23554  1377  01F1               	clrf	??_DMX_interrupt+1
 23555  1378  083B               	movf	(_arrayIndex+1)^(0+256),w
 23556  1379  00F3               	movwf	??_DMX_interrupt+3
 23557  137A  083A               	movf	_arrayIndex^(0+256),w
 23558  137B  00F2               	movwf	??_DMX_interrupt+2
 23559  137C  35F2               	lslf	??_DMX_interrupt+2,f
 23560  137D  0DF3               	rlf	??_DMX_interrupt+3,f
 23561  137E  30EE               	movlw	238
 23562  137F  00F4               	movwf	??_DMX_interrupt+4
 23563  1380  3023               	movlw	35
 23564  1381  00F5               	movwf	??_DMX_interrupt+5
 23565  1382  0872               	movf	??_DMX_interrupt+2,w
 23566  1383  0774               	addwf	??_DMX_interrupt+4,w
 23567  1384  0086               	movwf	6
 23568  1385  0873               	movf	??_DMX_interrupt+3,w
 23569  1386  3D75               	addwfc	??_DMX_interrupt+5,w
 23570  1387  0087               	movwf	7
 23571  1388  0870               	movf	??_DMX_interrupt,w
 23572  1389  3FC0               	movwi [0]fsr1
 23573  138A  0871               	movf	??_DMX_interrupt+1,w
 23574  138B  3FC1               	movwi [1]fsr1
 23575                           
 23576                           ;dmx.c: 63:         arrayIndex += 1;
 23577  138C  3001               	movlw	1
 23578  138D  07BA               	addwf	_arrayIndex^(0+256),f
 23579  138E  3000               	movlw	0
 23580  138F  3DBB               	addwfc	(_arrayIndex+1)^(0+256),f
 23581                           
 23582                           ;dmx.c: 64:     } else {
 23583  1390  2B99               	goto	i1l6682
 23584  1391                     i1l6678:	
 23585                           
 23586                           ;dmx.c: 65:         arrayIndex = 0;
 23587  1391  01BA               	clrf	_arrayIndex^(0+256)
 23588  1392  01BB               	clrf	(_arrayIndex+1)^(0+256)
 23589                           
 23590                           ;dmx.c: 66:         initial = 0;
 23591  1393  01E4               	clrf	_initial^(0+256)
 23592  1394  01E5               	clrf	(_initial+1)^(0+256)
 23593                           
 23594                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 23595  1395  0819               	movf	25,w	;volatile
 23596  1396  00F0               	movwf	??_DMX_interrupt
 23597  1397  0870               	movf	??_DMX_interrupt,w
 23598  1398  00F6               	movwf	DMX_interrupt@dummy	;volatile
 23599  1399                     i1l6682:	
 23600                           
 23601                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 23602  1399  014E               	movlb	14	; select bank14
 23603  139A  128F               	bcf	15,5	;volatile
 23604  139B  0008               	return
 23605  139C                     __end_of_DMX_interrupt:	
 23606                           
 23607                           	psect	text96
 23608  1402                     __ptext96:	
 23609 ;; *************** function _EUSART1_Receive_ISR *****************
 23610 ;; Defined at:
 23611 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 23612 ;; Parameters:    Size  Location     Type
 23613 ;;		None
 23614 ;; Auto vars:     Size  Location     Type
 23615 ;;		None
 23616 ;; Return value:  Size  Location     Type
 23617 ;;                  1    wreg      void 
 23618 ;; Registers used:
 23619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23620 ;; Tracked objects:
 23621 ;;		On entry : 0/0
 23622 ;;		On exit  : 0/0
 23623 ;;		Unchanged: 0/0
 23624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23629 ;;Total ram usage:        0 bytes
 23630 ;; Hardware stack levels used:    1
 23631 ;; Hardware stack levels required when called:    2
 23632 ;; This function calls:
 23633 ;;		Absolute function
 23634 ;;		_EUSART1_DefaultErrorHandler
 23635 ;;		_EUSART1_DefaultFramingErrorHandler
 23636 ;;		_EUSART1_DefaultOverrunErrorHandler
 23637 ;;		_EUSART1_RxDataHandler
 23638 ;; This function is called by:
 23639 ;;		_EUSART1_Initialize
 23640 ;;		_INTERRUPT_InterruptManager
 23641 ;; This function uses a non-reentrant model
 23642 ;;
 23643                           
 23644                           
 23645                           ;psect for function _EUSART1_Receive_ISR
 23646  1402                     _EUSART1_Receive_ISR:	
 23647                           
 23648                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 23649                           
 23650                           ;incstack = 0
 23651 ;; hardware stack exceeded
 23652                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23653  1402  0879               	movf	_eusart1RxHead,w	;volatile
 23654  1403  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23655  1404  0086               	movwf	6
 23656  1405  3001               	movlw	1	; select bank2/3
 23657  1406  0087               	movwf	7
 23658  1407  0181               	clrf	1
 23659                           
 23660                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 23661  1408  0142               	movlb	2	; select bank2
 23662  1409  1D1D               	btfss	29,2	;volatile
 23663  140A  2C16               	goto	i1l6172
 23664                           
 23665                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 23666  140B  0879               	movf	_eusart1RxHead,w	;volatile
 23667  140C  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23668  140D  0086               	movwf	6
 23669  140E  3001               	movlw	1	; select bank2/3
 23670  140F  0087               	movwf	7
 23671  1410  1481               	bsf	1,1
 23672                           
 23673                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 23674  1411  0861               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 23675  1412  008A               	movwf	10
 23676  1413  0860               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 23677  1414  000A               	callw
 23678  1415  3194               	pagesel	$
 23679  1416                     i1l6172:	
 23680                           
 23681                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 23682  1416  0142               	movlb	2	; select bank2
 23683  1417  1C9D               	btfss	29,1	;volatile
 23684  1418  2C24               	goto	i1l6178
 23685                           
 23686                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 23687  1419  0879               	movf	_eusart1RxHead,w	;volatile
 23688  141A  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23689  141B  0086               	movwf	6
 23690  141C  3001               	movlw	1	; select bank2/3
 23691  141D  0087               	movwf	7
 23692  141E  1501               	bsf	1,2
 23693                           
 23694                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 23695  141F  085F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 23696  1420  008A               	movwf	10
 23697  1421  085E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 23698  1422  000A               	callw
 23699  1423  3194               	pagesel	$
 23700  1424                     i1l6178:	
 23701                           
 23702                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 23703  1424  0879               	movf	_eusart1RxHead,w	;volatile
 23704  1425  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23705  1426  0086               	movwf	6
 23706  1427  3001               	movlw	1	; select bank2/3
 23707  1428  0087               	movwf	7
 23708  1429  0801               	movf	1,w
 23709  142A  1903               	btfsc	3,2
 23710  142B  2C33               	goto	i1l6182
 23711                           
 23712                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 23713  142C  0142               	movlb	2	; select bank2
 23714  142D  085D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 23715  142E  008A               	movwf	10
 23716  142F  085C               	movf	_EUSART1_ErrorHandler^(0+256),w
 23717  1430  000A               	callw
 23718  1431  3194               	pagesel	$
 23719                           
 23720                           ;mcc_generated_files/eusart1.c: 188:     } else {
 23721  1432  0008               	return
 23722  1433                     i1l6182:	
 23723                           
 23724                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 23725  1433  3190  206C         	fcall	_EUSART1_RxDataHandler
 23726  1435  0008               	return
 23727  1436                     __end_of_EUSART1_Receive_ISR:	
 23728                           
 23729                           	psect	text97
 23730  1EB0                     __ptext97:	
 23731 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 23732 ;; Defined at:
 23733 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 23734 ;; Parameters:    Size  Location     Type
 23735 ;;		None
 23736 ;; Auto vars:     Size  Location     Type
 23737 ;;		None
 23738 ;; Return value:  Size  Location     Type
 23739 ;;                  1    wreg      void 
 23740 ;; Registers used:
 23741 ;;		None
 23742 ;; Tracked objects:
 23743 ;;		On entry : 0/0
 23744 ;;		On exit  : 0/0
 23745 ;;		Unchanged: 0/0
 23746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23751 ;;Total ram usage:        0 bytes
 23752 ;; Hardware stack levels used:    1
 23753 ;; This function calls:
 23754 ;;		Nothing
 23755 ;; This function is called by:
 23756 ;;		_EUSART1_Initialize
 23757 ;;		_EUSART1_Receive_ISR
 23758 ;; This function uses a non-reentrant model
 23759 ;;
 23760                           
 23761                           
 23762                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 23763  1EB0                     _EUSART1_DefaultOverrunErrorHandler:	
 23764                           
 23765                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 23766                           
 23767                           ;incstack = 0
 23768 ;; hardware stack exceeded
 23769                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 23770  1EB0  0142               	movlb	2	; select bank2
 23771  1EB1  121D               	bcf	29,4	;volatile
 23772                           
 23773                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 23774  1EB2  161D               	bsf	29,4	;volatile
 23775  1EB3  0008               	return
 23776  1EB4                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 23777                           
 23778                           	psect	text98
 23779  1E9D                     __ptext98:	
 23780 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 23781 ;; Defined at:
 23782 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;		None
 23785 ;; Auto vars:     Size  Location     Type
 23786 ;;		None
 23787 ;; Return value:  Size  Location     Type
 23788 ;;                  1    wreg      void 
 23789 ;; Registers used:
 23790 ;;		None
 23791 ;; Tracked objects:
 23792 ;;		On entry : 0/0
 23793 ;;		On exit  : 0/0
 23794 ;;		Unchanged: 0/0
 23795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23800 ;;Total ram usage:        0 bytes
 23801 ;; Hardware stack levels used:    1
 23802 ;; This function calls:
 23803 ;;		Nothing
 23804 ;; This function is called by:
 23805 ;;		_EUSART1_Initialize
 23806 ;;		_EUSART1_Receive_ISR
 23807 ;; This function uses a non-reentrant model
 23808 ;;
 23809                           
 23810                           
 23811                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 23812  1E9D                     _EUSART1_DefaultFramingErrorHandler:	
 23813                           
 23814                           ;incstack = 0
 23815 ;; hardware stack exceeded
 23816                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 23817  1E9D  0008               	return
 23818  1E9E                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 23819                           
 23820                           	psect	text99
 23821  1EA3                     __ptext99:	
 23822 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 23823 ;; Defined at:
 23824 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;		None
 23827 ;; Auto vars:     Size  Location     Type
 23828 ;;		None
 23829 ;; Return value:  Size  Location     Type
 23830 ;;                  1    wreg      void 
 23831 ;; Registers used:
 23832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23833 ;; Tracked objects:
 23834 ;;		On entry : 0/0
 23835 ;;		On exit  : 0/0
 23836 ;;		Unchanged: 0/0
 23837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23842 ;;Total ram usage:        0 bytes
 23843 ;; Hardware stack levels used:    1
 23844 ;; Hardware stack levels required when called:    1
 23845 ;; This function calls:
 23846 ;;		_EUSART1_RxDataHandler
 23847 ;; This function is called by:
 23848 ;;		_EUSART1_Initialize
 23849 ;;		_EUSART1_Receive_ISR
 23850 ;; This function uses a non-reentrant model
 23851 ;;
 23852                           
 23853                           
 23854                           ;psect for function _EUSART1_DefaultErrorHandler
 23855  1EA3                     _EUSART1_DefaultErrorHandler:	
 23856                           
 23857                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 23858                           
 23859                           ;incstack = 0
 23860 ;; hardware stack exceeded
 23861                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 23862  1EA3  3190  206C         	fcall	_EUSART1_RxDataHandler
 23863  1EA5  0008               	return
 23864  1EA6                     __end_of_EUSART1_DefaultErrorHandler:	
 23865                           
 23866                           	psect	text100
 23867  106C                     __ptext100:	
 23868 ;; *************** function _EUSART1_RxDataHandler *****************
 23869 ;; Defined at:
 23870 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;		None
 23873 ;; Auto vars:     Size  Location     Type
 23874 ;;		None
 23875 ;; Return value:  Size  Location     Type
 23876 ;;                  1    wreg      void 
 23877 ;; Registers used:
 23878 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23879 ;; Tracked objects:
 23880 ;;		On entry : 0/0
 23881 ;;		On exit  : 0/0
 23882 ;;		Unchanged: 0/0
 23883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23888 ;;Total ram usage:        1 bytes
 23889 ;; Hardware stack levels used:    1
 23890 ;; This function calls:
 23891 ;;		Nothing
 23892 ;; This function is called by:
 23893 ;;		_EUSART1_Receive_ISR
 23894 ;;		_EUSART1_DefaultErrorHandler
 23895 ;; This function uses a non-reentrant model
 23896 ;;
 23897                           
 23898                           
 23899                           ;psect for function _EUSART1_RxDataHandler
 23900  106C                     _EUSART1_RxDataHandler:	
 23901                           
 23902                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 23903                           
 23904                           ;incstack = 0
 23905 ;; hardware stack exceeded
 23906                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 23907  106C  0142               	movlb	2	; select bank2
 23908  106D  0819               	movf	25,w	;volatile
 23909  106E  00F0               	movwf	??_EUSART1_RxDataHandler
 23910  106F  0879               	movf	_eusart1RxHead,w
 23911  1070  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 23912  1071  0086               	movwf	6
 23913  1072  3001               	movlw	1	; select bank2/3
 23914  1073  0087               	movwf	7
 23915  1074  0870               	movf	??_EUSART1_RxDataHandler,w
 23916  1075  0081               	movwf	1
 23917  1076  3001               	movlw	1
 23918  1077  00F0               	movwf	??_EUSART1_RxDataHandler
 23919  1078  0870               	movf	??_EUSART1_RxDataHandler,w
 23920  1079  07F9               	addwf	_eusart1RxHead,f	;volatile
 23921                           
 23922                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 23923  107A  3008               	movlw	8
 23924  107B  0279               	subwf	_eusart1RxHead,w	;volatile
 23925  107C  1803               	btfsc	3,0
 23926                           
 23927                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 23928  107D  01F9               	clrf	_eusart1RxHead	;volatile
 23929                           
 23930                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 23931  107E  3001               	movlw	1
 23932  107F  00F0               	movwf	??_EUSART1_RxDataHandler
 23933  1080  0870               	movf	??_EUSART1_RxDataHandler,w
 23934  1081  0141               	movlb	1	; select bank1
 23935  1082  07C6               	addwf	_eusart1RxCount^(0+128),f	;volatile
 23936  1083  0008               	return
 23937  1084                     __end_of_EUSART1_RxDataHandler:	
 23938                           
 23939                           	psect	text101
 23940  1F6E                     __ptext101:	
 23941 ;; *************** function _ADCC_ThresholdISR *****************
 23942 ;; Defined at:
 23943 ;;		line 308 in file "mcc_generated_files/adcc.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;		None
 23946 ;; Auto vars:     Size  Location     Type
 23947 ;;		None
 23948 ;; Return value:  Size  Location     Type
 23949 ;;                  1    wreg      void 
 23950 ;; Registers used:
 23951 ;;		wreg, status,2, status,0, pclath, cstack
 23952 ;; Tracked objects:
 23953 ;;		On entry : 0/0
 23954 ;;		On exit  : 0/0
 23955 ;;		Unchanged: 0/0
 23956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23961 ;;Total ram usage:        0 bytes
 23962 ;; Hardware stack levels used:    1
 23963 ;; Hardware stack levels required when called:    1
 23964 ;; This function calls:
 23965 ;;		Absolute function
 23966 ;;		_ADCC_DefaultInterruptHandler
 23967 ;;		_adcThresholdHandler
 23968 ;; This function is called by:
 23969 ;;		_INTERRUPT_InterruptManager
 23970 ;; This function uses a non-reentrant model
 23971 ;;
 23972                           
 23973                           
 23974                           ;psect for function _ADCC_ThresholdISR
 23975  1F6E                     _ADCC_ThresholdISR:	
 23976                           
 23977                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 23978                           
 23979                           ;incstack = 0
 23980 ;; hardware stack exceeded
 23981                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 23982  1F6E  014E               	movlb	14	; select bank14
 23983  1F6F  108D               	bcf	13,1	;volatile
 23984                           
 23985                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 23986  1F70  0142               	movlb	2	; select bank2
 23987  1F71  0858               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 23988  1F72  0459               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 23989  1F73  1903               	btfsc	3,2
 23990  1F74  0008               	return
 23991                           
 23992                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 23993  1F75  0859               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 23994  1F76  008A               	movwf	10
 23995  1F77  0858               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 23996  1F78  000A               	callw
 23997  1F79  319F               	pagesel	$
 23998  1F7A  0008               	return
 23999  1F7B                     __end_of_ADCC_ThresholdISR:	
 24000                           
 24001                           	psect	text102
 24002  1E9C                     __ptext102:	
 24003 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24004 ;; Defined at:
 24005 ;;		line 320 in file "mcc_generated_files/adcc.c"
 24006 ;; Parameters:    Size  Location     Type
 24007 ;;		None
 24008 ;; Auto vars:     Size  Location     Type
 24009 ;;		None
 24010 ;; Return value:  Size  Location     Type
 24011 ;;                  1    wreg      void 
 24012 ;; Registers used:
 24013 ;;		None
 24014 ;; Tracked objects:
 24015 ;;		On entry : 0/0
 24016 ;;		On exit  : 0/0
 24017 ;;		Unchanged: 0/0
 24018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24023 ;;Total ram usage:        0 bytes
 24024 ;; Hardware stack levels used:    1
 24025 ;; This function calls:
 24026 ;;		Nothing
 24027 ;; This function is called by:
 24028 ;;		_ADCC_Initialize
 24029 ;;		_ADCC_ThresholdISR
 24030 ;; This function uses a non-reentrant model
 24031 ;;
 24032                           
 24033                           
 24034                           ;psect for function _ADCC_DefaultInterruptHandler
 24035  1E9C                     _ADCC_DefaultInterruptHandler:	
 24036                           
 24037                           ;incstack = 0
 24038 ;; hardware stack exceeded
 24039                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 24040  1E9C  0008               	return
 24041  1E9D                     __end_of_ADCC_DefaultInterruptHandler:	
 24042                           
 24043                           	psect	text103
 24044  1EAC                     __ptext103:	
 24045 ;; *************** function _adcThresholdHandler *****************
 24046 ;; Defined at:
 24047 ;;		line 35 in file "beat.c"
 24048 ;; Parameters:    Size  Location     Type
 24049 ;;		None
 24050 ;; Auto vars:     Size  Location     Type
 24051 ;;		None
 24052 ;; Return value:  Size  Location     Type
 24053 ;;                  1    wreg      void 
 24054 ;; Registers used:
 24055 ;;		None
 24056 ;; Tracked objects:
 24057 ;;		On entry : 0/0
 24058 ;;		On exit  : 0/0
 24059 ;;		Unchanged: 0/0
 24060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24065 ;;Total ram usage:        0 bytes
 24066 ;; Hardware stack levels used:    1
 24067 ;; This function calls:
 24068 ;;		Nothing
 24069 ;; This function is called by:
 24070 ;;		_BEAT_init
 24071 ;;		_ADCC_ThresholdISR
 24072 ;; This function uses a non-reentrant model
 24073 ;;
 24074                           
 24075                           
 24076                           ;psect for function _adcThresholdHandler
 24077  1EAC                     _adcThresholdHandler:	
 24078                           
 24079                           ;beat.c: 36:     thresholdExceeded = 1;
 24080                           
 24081                           ;incstack = 0
 24082 ;; hardware stack exceeded
 24083                           ; Regs used in _adcThresholdHandler: []
 24084  1EAC  0141               	movlb	1	; select bank1
 24085  1EAD  01AE               	clrf	_thresholdExceeded^(0+128)
 24086  1EAE  0AAE               	incf	_thresholdExceeded^(0+128),f
 24087  1EAF  0008               	return
 24088  1EB0                     __end_of_adcThresholdHandler:	
 24089  007E                     btemp	set	126	;btemp
 24090  007E                     int$flags	set	126
 24091  007E                     wtemp0	set	126


Data Sizes:
    Strings     146
    Constant    96
    Data        12
    BSS         164
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      80
    BANK2            80      6      80
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_14(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_14(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3103_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1993$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _CONTROL_MANUAL->_colorDec
    _CONTROL_MANUAL->_colorInc
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_BUTTONS_isHeld
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  130156
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   19447
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   47659
                                             35 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                    _LED_task_MANUAL
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_MANUAL                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   11287
                                             30 BANK1      5     5      0
                                              0 BANK2      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 3     3      0   25230
                                             79 BANK0      1     1      0
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (3) _beatColorCreator                                    14    10      4   14023
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (4) _beatBrightnessCalculation                           10     6      4    8509
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   11142
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1061
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2411
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    5293
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   53088
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                       _CONTROL_BEAT
                        _CONTROL_DMX
                     _CONTROL_MANUAL
                      _TM1650_enable
                _TM1650_fastPrintNum
                     _getManualColor
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16746
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16746
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _getManualColor                                       3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       3     3      0     590
                                              3 BANK0      3     3      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                           _colorDec
                           _colorInc
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   10555
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    5082
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    5082
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    5082
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                     _getManualColor (ARG)
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         1     1      0     391
                                              1 BANK0      1     1      0
                     _BUTTONS_isHeld
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     391
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_BEAT
       _BUTTONS_isHeld
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _getManualColor (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _getManualColor (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _CONTROL_MANUAL
       _BUTTONS_isHeld
       _CLOCK_getTime
       _colorDec
       _colorInc
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _getManualColor
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _LED_task_MANUAL
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     13E       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     13E      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 12:24:33 2019

                       __end_of_LED_task_MANUAL 0801                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0070                                              _up 00BD  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D2  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1EAC                                             l911 0E97  
                                           l909 0E32                                             _PR2 028D  
                                           _bpm 0140                                             _pad 15ED  
                       __size_of_PMD_Initialize 000A                                 _TMR2_Initialize 1F88  
                               _PWM4_Initialize 1F57                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ___flmul@aexp 0056  
                                  ___flmul@bexp 005B                              _LED_task_BEAT_FADE 1EA1  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                   __CFG_BBEN$OFF 0000  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l1020 030F                                            l1017 0305  
                                          l1140 0BD8                                            l1063 0869  
                                          l1128 0BC3                                            l1072 08D9  
                                          l2120 094C                                            l2112 092E  
                                          l2050 05BF                                            l2106 08F8  
                                          l2052 05CC                                            l2028 04A0  
                                          l1086 09C4                                            l2119 0942  
                                          l2080 02AF                                            l2049 05A7  
                                          l1370 1558                                            l1461 14A0  
                                          l2158 11C9                                            l1448 159E  
                                          l1466 1268                                            l1643 1605  
                                          l1646 1625                                            l6002 1249  
                                          l6014 124F                                            l6022 1252  
                          _ADCC_StartConversion 1EE5                                            l6008 124C  
                                          l1872 168A                                            l5420 1483  
                                          l5412 1475                                            l7100 14CE  
                                          l7110 126D                                            ?_pad 0049  
                                          l5416 147C                                            l5408 146E  
                                          l4720 10AD                                            l7120 1603  
                                          l7050 0842                                            l8002 09DD  
                                          l5426 148A                                            l7130 1631  
                                          l7210 1653                                            l4900 12FE  
                                          l8012 09E5                                            l5380 155C  
                                          l7116 15FB                                            l7140 1353  
                                          l8102 1779                                            l7038 1EB8  
                                          l7054 0849                                            l8022 09EC  
                                          l4718 10A1                                            l7126 1607  
                                          l7206 164A                                            l4904 1307  
                                          l7056 084F                                            l7072 111A  
                                          l8040 0A07                                            l5392 157D  
                                          l5384 1567                                            l7320 052B  
                                          l7152 11C3                                            l7066 12D8  
                                          l7082 1209                                            l7138 134A  
                                          l7314 0512                                            l7322 04F4  
                                          l7226 1678                                            l8060 1749  
                                          l5388 1572                                            l8140 0BCD  
                                          l8124 0BC5                                            l7084 120B  
                                          l7180 0A5C                                            l7340 054D  
                                          l7324 0530                                            l7260 047C  
                                          l7412 00CD                                            l7236 1697  
                                          l7228 1686                                            l8300 0D4D  
                                          l4870 143F                                            l8062 172E  
                                          l5398 1588                                            l8142 0BB9  
                                          l8126 0B84                                            l7190 0A83  
                                          l7350 0566                                            l7254 0471  
                                          l7502 0285                                            l7414 00CF  
                                          l4872 144B                                            l8056 1747  
                                          l8152 0BBF                                            l8208 1039  
                                          l7096 14AB                                            l7360 058F  
                                          l7424 00E5                                            l7416 00D7  
                                          l8312 0D58                                            l4882 1466  
                                          l8410 0E6E                                            l8402 0E4A  
                                          l8090 175E                                            l8074 1740  
                                          l8066 1739                                            l7186 0A7D  
                                          l7346 0564                                            l7338 0536  
                                          l7274 0495                                            l7258 0474  
                                          l8306 0D50                                            l8412 0E78  
                                          l8164 0BDC                                            l8172 0BE7  
                                          l8180 0BFE                                            l7196 0A8E  
                                          l7604 1135                                            l7620 1153  
                                          l7508 029C                                            l7532 0907  
                                          l8244 0D72                                            l4878 145D  
                                          l8078 1746                                            l4894 12E6  
                                          l8190 0C16                                            l8166 0BDE  
                                          l8502 0420                                            l7374 05C8  
                                          l7294 04CB                                            l7278 0498  
                                          l7526 08F0                                            l8270 0D3E  
                                          l8238 0D2F                                            l8096 176B  
                                          l4896 12F2                                            l8168 0BE4  
                                          l8512 0426                                            l8504 0423  
                                          l7288 04BF                                            l7560 0967  
                                          l7536 090B                                            l8264 0D38  
                                          l8602 0C4D                                            l7634 075F  
                                          l8514 03A8                                            l8522 042A  
                                          l8506 039D                                            l8442 0308  
                                          l7394 00AA                                            l7546 0940  
                                          l7538 091B                                            l7730 0B04  
                                          l8258 0D36                                            l8620 0C94  
                                          l8524 03B6                                            l8532 042D  
                                          l7708 1F10                                            l7572 1171  
                                          l7484 0245                                            l7476 0217  
                                          l7396 00AC                                            l7548 0933  
                                          l7732 0B05                                            l7724 0ADB  
                                          l8276 0D41                                            l7646 1315  
                                          l8534 03CB                                            l8542 0431  
                                          l8462 0325                                            l7478 022E  
                                          l7398 00B4                                            l7742 0B56  
                                          l7726 0ADC                                            l8294 0D48  
                                          l7648 1332                                            l8544 03E0  
                                          l8552 0435                                            l7488 0247  
                                          l7744 0B57                                            l7736 0B2D  
                                          l8288 0D44                                            l8634 0CC7  
                                          l8618 0C81                                            l7674 1FA3  
                                          l7690 10C3                                            l8570 040C  
                                          l8554 03F5                                            l8562 0439  
                                          l8482 0351                                            l8474 033C  
                                          l8466 032D                                            l8458 031E  
                                          l7498 0270                                            l7738 0B2E  
                                          l8650 1521                                            l8642 1515  
                                          l8396 0E2C                                            l8388 0DEB  
                                          l7908 1FFE                                            l5996 1246  
                                          l7932 0889                                            l7924 0879  
                                          l8572 040E                                            l8476 0340  
                                          l8484 0353                                            l7588 118F  
                                          l8652 1524                                            l8644 1518  
                                          l8660 1536                                            l7950 08AF  
                                          l7934 088A                                            l7926 0880  
                                          l7918 086B                                            l8574 0410  
                                          l8494 038A                                            l8654 1527  
                                          l8646 151B                                            l7696 108E  
                                          l7688 10BF                                            l7952 08B7  
                                          l7944 0897                                            l8568 040A  
                                          l8496 038E                                            l8488 0362  
                                          l8648 151E                                            l7698 1092  
                                          l7946 089F                                            l7980 0991  
                                          l7948 08A7                                            l7956 08BF  
                                          l8598 0C46                                            l8694 1507  
                                          l7994 09CE                                            l7978 09C6  
                                          l8970 1541                                            l8980 1590  
                                          l8972 0448                                  ?_TM1650_enable 0070  
                                          l8982 1492                                            l8974 08C8  
                                          STR_1 2081                                            l8976 125A  
                                          STR_2 207B                                            STR_3 204D  
                                          l8978 0BF0                                            STR_4 2045  
                                          STR_5 203D                                            STR_6 2035  
                                          STR_7 2075                                            STR_8 2087  
                                          STR_9 2087                         __end_of_PWM1_Initialize 1F41  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _T2PR 028D  
                                          u3615 12E9                                            u3545 1442  
                                          u3635 12F8                                            _PMD0 0796  
                                          u3565 144C                                            u3645 12FF  
                                          u7005 057D                                            _PMD1 0797  
                                          _PMD2 0798                                            u3575 1456  
                                          u7015 0598                                            _PMD3 0799  
                                          _PMD4 079A                                            u3585 145E  
                                          u7025 05B1                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          u7125 015B                                            u7135 018A  
                                          u8105 0B97                                            u7145 01E0  
                                          u8115 0BB2                                            u7155 01F7  
                                          u6525 14CC                                            u6605 11CA  
                                          u7165 0206                                            u7175 021A  
                                          u7415 0954                                            u7335 0914  
                                          u7265 025E                                            u9017 14E1  
                                          u8075 0B7D                                            u7275 0279  
                                          u7195 0223                                            u7355 0928  
                                          u6565 1611                                            u7525 1131  
                                          u7285 028F                                            u6725 168E  
                                          u7375 093A                                            u7465 116D  
                                          u6665 165C                                            u7555 114F  
                                          u6915 0539                                            u7805 09A4  
                                          u6845 04FC                      ?_beatBrightnessCalculation 00C7  
                                          u8375 0DEE                                            u7815 09BE  
                                          u7495 118B                                            u6935 0542  
                                          u6855 0503                                            u6695 1679  
                                          u8384 0E0D                                            u7920 1725  
                                          u8385 0E0C                                            u7930 1726  
                                          u6875 050C                                            u6885 0520  
                                          u7775 098B                                            u8915 0C2F  
                                          u8965 0CA8                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 1E9F  
                                 __CFG_FCMEN$ON 0000                             ?_LED_task_BEAT_FADE 0070  
                                 ?_BUTTONS_init 0070                                   ?_BUTTONS_task 0070  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0070  
                                          _ctoa 133B                                            _main 14D8  
                                          _down 00BC                                            _init 1198  
                                          _menu 00BE                                            _prec 0134  
                                          _nout 0130                                            pad@i 004D  
                                          pad@p 004A                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 004F  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1FD9  
                           ?_LED_task_ANIMATION 0070                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                           _LED_task_BEAT_MIXED 1EA2                                  _BUTTONS_isHeld 1F96  
                                         ??_pad 004C                         __end_of_PWM2_Initialize 1F4C  
                       __end_of_TMR0_Initialize 1017                                      _i2c1_state 00C4  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1F36                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                __end_of_LED_init 1ED3  
                                 ___fltol@sign1 006B                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0052  
                              __end_of_LED_task 1559                                           ?_main 0070  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 05D1                                           _ADREF 0116  
                             __end_of_I2C1_Stop 10E7                                           STR_10 2069  
                                         STR_11 206F                                           STR_12 208D  
                                         STR_20 2025                                           STR_13 2067  
                                         STR_21 2055                                           STR_22 2063  
                                         STR_14 201C                                           STR_15 205C  
                                         STR_16 202D                                           STR_17 2013  
                                 __CFG_WDTE$OFF 0000                                           STR_18 2000  
                                         STR_19 200A                                __end_of_DMX_init 1FEC  
                                         _ADRPT 009A                                 __end_of___flmul 02BC  
                               __end_of___fltol 16A6                                           _T2CON 028E  
                                         _LATC5 00D5                                           _T2HLT 028F  
                               __end_of___lwdiv 146B                      _ADCC_ADTI_InterruptHandler 0158  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l430 0017                                           i1l432 001E  
                               __end_of___lwmod 130C                                           i1l434 0025  
                                         i1l427 000E                                           i1l439 002E  
                                         i1l552 0EF0                                           i1l553 0EF1  
                                         i1l547 0EC2                                           i1l581 0FC0  
                                         i1l573 0F7C                                           i1l558 0F13  
                                         i1l559 0F1F                                           i1l576 0F8B  
                                         i1l577 0F99                                           i1l569 0F5C  
                                         i1l588 1FB3                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 0058                              _PWM4_LoadDutyValue 117A  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
              __end_of_LED_task_BEAT_CONTINUOUS 1EA1                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1EA9  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                               __end_of_getMode 1003                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 1F88                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 0166                            ?_LED_task_BEAT_MIXED 0070  
                                         _flags 0136                                           _enter 00BB  
                         ?_ADCC_StartConversion 0070                                           _fputc 14A1  
                                         _fputs 1269                             ?_PWM4_LoadDutyValue 00C7  
                     __size_of_beatColorCreator 00AF                                           pad@fp 0051  
                                         _width 0132                                           ctoa@c 0052  
                                         _putch 11FB                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 1F57                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0070                               __end_of_BEAT_init 106C  
                             __end_of_BEAT_task 0CEA                                           status 0003  
                                 colorDec@input 0022                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1E9E     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 1E9D                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 1FA5                                 __initialization 0032  
                          TM1650_setDigit@digit 0036                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                ?_LED_task_MANUAL 0070  
                                  __end_of_ctoa 136B                      __end_of_EUSART1_Initialize 13CF  
                                  __end_of_main 1514                                    __end_of_init 11B8  
                               _CONTROLLER_task 02BC                            ??_PWM4_LoadDutyValue 006D  
                                 ?_LED_setColor 00DD                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                                   ?_LED_task_DMX 0070  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1EF7  
                       __end_of_PWM4_Initialize 1F62                         __end_of_TMR2_Initialize 1F96  
                   ?_INTERRUPT_InterruptManager 0070                            _LED_task_BEAT_STROBE 0CEA  
                                   _i2c1_object 00A0                                          ??_ctoa 0054  
                                        ??_main 016E                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 1783                                   colorInc@input 0022  
                             __end_of_GPIO_init 1FC7                           ??_LED_task_BEAT_MIXED 0020  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 0099                                          ?_fputc 0039  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0041                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0070  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0070  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        _RC7PPS 1F27                                          i1l6220 0EEA  
                                        i1l6302 0FA0                                          i1l6320 0FC7  
                                        i1l6216 0EE3                                  __CFG_WDTCCS$SC 0000  
                                        i1l6322 0FCB                                          i1l6306 0FA7  
                                        i1l6234 0F0D                                          i1l6172 1416  
                                        i1l6228 0EFD                                          i1l6182 1433  
                                        i1l6318 0FC4                                          i1l6248 0F38  
                                        i1l6328 0FD3                                          i1l6178 1424  
                                        i1l6290 0F7F                                          i1l6282 0F6A  
                                        i1l6268 0F51                                          i1l5654 10E5  
                                        i1l6670 1370                                          i1l6682 1399  
                                        i1l6678 1391                                          i1l8984 0FDC  
                                        _OSCFRQ 0893                          __size_of_DMX_interrupt 0031  
                                        _TX1REG 011A                                          _TX1STA 011E  
                              __end_of___xxtofl 0970                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                               ?_BUTTONS_isHeld 0070                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0067  
                              __end_of_colorDec 14A1                                __end_of_colorInc 159F  
                                _p_i2c1_current 00C2                                  ??_LED_setColor 00E1  
                   __size_of_PWM3_LoadDutyValue 001E                                  ??_LED_task_DMX 00E5  
                   __end_of_TM1650_fastPrintNum 07F6                               _ADCC_ThresholdISR 1F6E  
                                     ??___fldiv 0036                          __size_of_menuSelection 007E  
                                __CFG_STVREN$ON 0000                                       ??___flmul 0050  
                                     ??___fltol 0066                                       ??___lwdiv 0024  
                                     ??___lwmod 002C                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                          _manual 00A5  
                              ?_TMR0_Initialize 0070                                ?_PWM2_Initialize 0070  
                            ?_ADCC_ThresholdISR 0070                           ?_LED_task_BEAT_STROBE 0070  
                                     ?_I2C1_ISR 0070                                       ??_getMode 0020  
                                        _printf 1040                          __size_of_BEAT_detected 0009  
                                        pad@buf 0049                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0057  
                                _lastActiveTime 0144                                          _strlen 109C  
                          __size_of_TM1650_init 0014                                 _ADCC_Initialize 128F  
                                        fputc@c 0039                                  _PMD_Initialize 07F6  
                                        fputs@c 0045                                    ??_CLOCK_init 0022  
                                        fputs@i 0046                                          fputs@s 0048  
                                  __pdataCOMMON 007C                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0070                          ??_ADCC_StartConversion 0020  
                                        putch@n 0038                                __end_of_vfprintf 133B  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 1EDC  
                 I2C1_MasterWriteTRBBuild@pdata 0020                        _LED_task_BEAT_CONTINUOUS 1EA0  
                                 _tm1650_status 014C                                 _eusart1RxBuffer 0128  
                       beatColorCreator@inGreen 00D0                                ?_PWM3_Initialize 0070  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 121F                                    ___xxtofl@val 0020  
                       beatColorCreator@inWhite 00D2                         __end_of__initialization 008C  
                       __end_of_CONTROLLER_task 0457                              ?_SYSTEM_Initialize 0070  
                    __end_of_PWM2_LoadDutyValue 115C                                       ?_LED_init 0070  
                                     ?_LED_task 0070                                      ___fltol@f1 0062  
                                     ?_DMX_init 0070                                  _i2c1_trb_count 00C3  
                   PWM1_LoadDutyValue@dutyValue 00C7                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 1F7B                         __size_of_DMX_getAddress 0003  
                 __end_of_EUSART1_RxDataHandler 1084                           _I2C1_FunctionComplete 1FA5  
                          _I2C1_BusCollisionISR 1EA6                                  __pcstackCOMMON 0070  
                            __end_of_CLOCK_init 1ECB                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 1EB4                                    __pidataBANK2 0801  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0070  
                                 __end_of_fputc 14D8                                   __end_of_fputs 128F  
                                 __end_of_putch 121F                              _PWM1_LoadDutyValue 1120  
                                    ??_I2C1_ISR 0072                                ?_TMR2_Initialize 0070  
                              ?_PWM4_Initialize 0070                                   _DMX_interrupt 136B  
                          __end_of_BUTTONS_init 15ED                          __end_of_PMD_Initialize 0800  
                          __end_of_BUTTONS_task 0EAE                     PWM4_LoadDutyValue@dutyValue 00C7  
                       __size_of_getManualColor 0026                             ?_PWM1_LoadDutyValue 00C7  
                   __end_of_EUSART1_Receive_ISR 1436                               _thresholdExceeded 00AE  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00DD  
                                 _menuSelection 085C                                         ??_fputc 003C  
                     __end_of_SYSTEM_Initialize 1243                                         ??_fputs 0042  
                              _beatColorCreator 0AB1                                         ??_putch 0037  
                                 _eusart1RxHead 0079                                   _eusart1RxTail 0078  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                   ??_beatBrightnessCalculation 00CB                                   _BEAT_detected 1F09  
                                    ??_LED_init 0020                                      ??_LED_task 00EA  
                                    ??_DMX_init 0037                            ??_PWM1_LoadDutyValue 006D  
                             __end_of__Umul8_16 11D8                           ?_I2C1_BusCollisionISR 0070  
               __end_of_EUSART1_SetErrorHandler 1F1B                                      __pmaintext 14D8  
              __end_of_TMR0_SetInterruptHandler 1F00                                      ??_TMR0_ISR 0070  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 12B5                          ??_LED_task_BEAT_STROBE 00E5  
                                    __pintentry 0004                                 _I2C1_Initialize 10E7  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                           __size_of_CONTROL_BEAT 006F  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0070  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1EDC  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1ED3  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00C7  
                               ?_PMD_Initialize 0070                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 1F24         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1F1B                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 10CD                                      _arrayIndex 013A  
                                ?_menuSelection 0070                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 0734  
                             _colorModeSelected 00B1                                       ?_colorDec 0070  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1EBD  
                                     ?_colorInc 0070                            __end_of_LED_task_DMX 1714  
                                ?_BEAT_detected 0070                   I2C1_MasterTRBInsert@ptrb_list 0020  
                       __size_of_CONTROL_MANUAL 00B8                              __size_of_writeData 001D  
                                 ??_address_dec 0037                                   ??_address_inc 0037  
                              ?_CONTROLLER_task 0070                                      _enterState 00B3  
                               BUTTONS_task@btn 0028                                    _CONTROL_BEAT 1714  
                        ?_I2C1_FunctionComplete 0070                                       _BEAT_init 1055  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0C18  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 0077  
                                       ___fldiv 0457                            ?_CLOCK_timerCallback 0070  
                                       ___flmul 0090                                         ___fltol 1640  
                                       ___lwdiv 1436                                         ___lwmod 12DF  
                                     ?_vfprintf 0061                       _beatBrightnessCalculation 1783  
                                       _address 00EC                     __size_of_LED_task_BEAT_FADE 0001  
                                       _getMode 1000                                         __ptext1 1017  
                                       __ptext2 121F                                         __ptext3 1F88  
                                       __ptext4 1003                                         __ptext5 1F57  
                                       __ptext6 1F4C                                         __ptext7 1F41  
                                       __ptext8 1F36                                         __ptext9 07F6  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 013E                           _OSCILLATOR_Initialize 1F2D  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0164                                         _buttons 01C0  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 139C  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                     __size_of_LED_task_ANIMATION 0001  
                                    ?_I2C1_Stop 0070                     __end_of_adcThresholdHandler 1EB0  
                                       _upState 00B6                   ??_EUSART1_DefaultErrorHandler 0071  
                                       _startup 00EE                      __size_of_SYSTEM_Initialize 0024  
                 LED_task_BEAT_STROBE@beatState 006F                            I2C1_ISR@pi2c_buf_ptr 00C1  
                                       clrloop0 1F63                                      ??_colorDec 0020  
                                    ??_colorInc 0020                                _currentSelection 00B9  
                          end_of_initialization 008C                                       _T2RSTbits 0291  
                                     _GPIO_init 1FB6                             ?_EUSART1_Initialize 0070  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003B  
                   _EUSART1_OverrunErrorHandler 015E                                         fputs@fp 0041  
                        ??_I2C1_BusCollisionISR 0070                         __end_of_I2C1_Initialize 1103  
                                _DMX_getAddress 1EA9           __end_of_EUSART1_SetRxInterruptHandler 1F09  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1F00  
                                    ?_BEAT_init 0070                                      ?_BEAT_task 0070  
                 beatBrightnessCalculation@temp 006D                               __end_of_vfpfcnvrt 0AB1  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0070                                 ??_DMX_interrupt 0070  
                           __end_of_address_dec 109C                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 10CD                                ?_ADCC_Initialize 0070  
                                    ??_vfprintf 0064                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1EF7  
                   __end_of_LED_task_BEAT_MIXED 1EA3                      ??_LED_task_BEAT_CONTINUOUS 0020  
                                _getManualColor 1243                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 0152                        __size_of_LED_task_MANUAL 0001  
                             __end_of_writeData 1120                                 ??_menuSelection 006D  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0037  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1040               I2C1_ISR@i2c_10bit_address_restart 00BF  
                                    ?_GPIO_init 0070                             getManualColor@input 0022  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0057  
                                  _BUTTONS_init 159F                                    _BUTTONS_task 0DC9  
                        __end_of_DMX_getAddress 1EAC                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 117A            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_init 0008  
                             __size_of_LED_task 0045                               __size_of_DMX_init 0013  
                      __end_of_beatColorCreator 0B60                  ??_ADCC_DefaultInterruptHandler 0070  
                                 ??_TM1650_init 006D                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0060                         I2C1_MasterWrite@trBlock 0151  
                        __end_of_getManualColor 1269                                   __pidataCOMMON 0002  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0071  
                            _PWM2_LoadDutyValue 113E                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0070                  __end_of_ADCC_SetUpperThreshold 1EE5  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 1055  
                         __size_of_LED_setColor 0163                                  __end_of_strlen 10B4  
                                  _lastDetected 00AD                           __size_of_LED_task_DMX 006E  
                           start_initialization 0032                                    _enterPressed 00B7  
                                   ??_I2C1_Stop 0070                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 00C7  
               __size_of_PIN_MANAGER_Initialize 0033                             TM1650_setDigit@data 0034  
                                   __end_of_pad 1640   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                                _beatBrightness 00EF                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 1FEC                             __end_of_CONTROL_DMX 0A09  
                                _CONTROL_MANUAL 0B60                                 ?_DMX_getAddress 0070  
                            ?_BUTTONS_isClicked 0070                                     _address_dec 1084  
                                   _address_inc 10B4                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0070                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 006D  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0061  
                   PWM2_LoadDutyValue@dutyValue 00C7                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 106C  
                                  _LED_setColor 05D1                  ?_EUSART1_SetRxInterruptHandler 0020  
                           CONTROL_MANUAL@input 0025                                       __Umul8_16 11B8  
                                   __pdataBANK1 00EC                                     __pdataBANK2 0164  
                                  _LED_task_DMX 16A6                                 ?_getManualColor 0070  
                                 _CLOCK_getTime 1EEE                                        ??_printf 0069  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00C6                          beatColorCreator@inBlue 00D1  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 102B  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0077               _EUSART1_RxDefaultInterruptHandler 0162  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00C7                                   __pcstackBANK2 016A  
            __size_of_beatBrightnessCalculation 007D                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 0155  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 2000  
                     beatColorCreator@tempColor 00D9                               ??_LED_task_MANUAL 0020  
                        __end_of_CONTROL_MANUAL 0C18                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0070                    __size_of_EUSART1_Receive_ISR 0034  
                             __size_of_colorDec 0036                               __size_of_colorInc 0046  
                                  _menuSelected 00BA                                    _currentState 00A9  
                                     _charTable 1800                           _TMR0_InterruptHandler 015A  
                                     __pnvBANK2 0158                     __size_of_PWM1_LoadDutyValue 001E  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 13CF  
                                      ?___fldiv 002E                                       __ptext100 106C  
                                     __ptext101 1F6E                                       __ptext102 1E9C  
                                     __ptext103 1EAC                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0EAE  
                 __size_of_LED_task_BEAT_STROBE 00DF                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 0077                                 writeData@status 0033  
                                      ?_getMode 0070                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 12B5                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 085C      __end_of_EUSART1_DefaultOverrunErrorHandler 1EB4  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 1EB0  
                          _EUSART1_ErrorHandler 015C                                       _downState 00B5  
                                   _CONTROL_DMX 0970                         _EUSART1_SetErrorHandler 1F12  
                             ??_TM1650_setDigit 0035                                ___lwdiv@quotient 0025  
             __end_of_beatBrightnessCalculation 1800                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                       _menuState 00B4  
                                __size_of_fputs 0026                                 ?_CONTROL_MANUAL 0070  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1EBD  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0070                _I2C1_WaitForLastPacketToComplete 1EB8  
                        I2C1_MasterRead@trBlock 014D                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 1F62  
                                      _PIE0bits 0716                                        _LED_init 1ECB  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 1514                                        _DMX_init 1FD9  
           __size_of_INTERRUPT_InterruptManager 002C                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                     _incInterval 007C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                         CONTROLLER_task@isActive 006F  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 1F7B  
                    __end_of_LED_task_BEAT_FADE 1EA2                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_task 019B                                     _TM1650_init 1017  
                                     _threshold 0168                                       _vfpfcnvrt 0A09  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 014A  
                    __end_of_LED_task_ANIMATION 1EA0                              DMX_interrupt@dummy 0076  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 1103                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 005F                                     _lastIncTime 00AB  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1EC3  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0734  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 1198  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0063  
                                    vfprintf@fp 0066                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00C0                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                             ?_beatColorCreator 00D0                           beatColorCreator@inRed 00D4  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                         __end_of_DMX_interrupt 139C                     __size_of_EUSART1_Initialize 0033  
                                    ?_vfpfcnvrt 0058                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                           _beatColorCreator$3567 00D5  
              __end_of_I2C1_MasterWriteTRBBuild 11FB                              ??_beatColorCreator 006E  
                            _PWM3_LoadDutyValue 115C                                      _ANSELAbits 1F38  
                                      _beatHold 00B2                                      _ANSELCbits 1F4E  
                              __size_of_getMode 0003                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 1EA6  
                   _EUSART1_DefaultErrorHandler 1EA3                                     _currentTime 0146  
                                    _CLOCK_init 1EC3                                        ___xxtofl 08DA  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00B8                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 08DA                             I2C1_ISR@i2c_address 007A  
                               ___lwdiv@counter 0027                                        _detected 00AF  
                                    ?_writeData 002E                                        __ptext10 13CF  
                                      __ptext11 1F2D                                        __ptext20 0800  
                                      __ptext12 10E7                                        __ptext21 16A6  
                                      __ptext13 139C                                        __ptext30 11B8  
                                      __ptext22 1EA9                                        __ptext14 1F24  
                                      __ptext31 0457                                        __ptext23 0CEA  
                                      __ptext15 1F1B                                        __ptext40 1E9F  
                                      __ptext32 117A                                        __ptext24 0AB1  
                                      __ptext16 1F12                                        __ptext41 1ECB  
                                      __ptext33 115C                                        __ptext25 1783  
                                      __ptext17 128F                                        __ptext50 15ED  
                                      __ptext42 1FD9                                        __ptext34 113E  
                                      __ptext26 05D1                                        __ptext18 1514  
                                      __ptext51 109C                                        __ptext43 1F00  
                                      __ptext35 1120                                        __ptext27 08DA  
                                      __ptext19 1000                                        __ptext60 146B  
                                      __ptext52 1269                                        __ptext44 02BC  
                                      __ptext36 1F09                                        __ptext28 1640  
                                      __ptext61 0970                                        __ptext53 14A1  
                                      __ptext45 085C                                        __ptext37 1EA2  
                                      __ptext29 0090                                        __ptext70 12DF  
                                      __ptext62 10B4                                        __ptext54 11FB  
                                      __ptext46 1040                                        __ptext38 1EA1  
                                      __ptext71 1714                                        __ptext63 1084  
                                      __ptext55 1FC7                                        __ptext47 130C  
                                      __ptext39 1EA0                                        __ptext80 0C18  
                                      __ptext72 1F96                                        __ptext64 0734  
                                      __ptext56 1243                                        __ptext48 0A09  
                                      __ptext81 1436                                        __ptext73 1FEC  
                                      __ptext65 1103                                        __ptext57 102B  
                                      __ptext49 133B                                        __ptext90 1E9E  
                                      __ptext82 1EEE                                        __ptext74 1EC3  
                                      __ptext66 12B5                                        __ptext58 0B60  
                           ?_PWM3_LoadDutyValue 00C7                                        __ptext91 0EAE  
                                      __ptext83 1055                                        __ptext75 1EF7  
                                      __ptext67 11D8                                        __ptext59 1559  
                                      __ptext92 10CD                                        __ptext84 1EE5  
                                      __ptext76 0DC9                                        __ptext68 0807  
                                      __ptext93 1FA5                                        __ptext85 1EDC  
                                      __ptext77 159F                                        __ptext69 1EB8  
                                      __ptext94 1EA6                                        __ptext86 1ED3  
                                      __ptext78 1198                                        __ptext95 136B  
                                      __ptext79 1FB6                                        __ptext96 1402  
                                      __ptext88 1F7B                                        __ptext97 1EB0  
                                      __ptext89 1EBD                                        __ptext98 1E9D  
                                      __ptext99 1EA3                    __size_of_LED_task_BEAT_MIXED 0001  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                                ??_DMX_getAddress 0020  
                                      _colorDec 146B                                        _colorInc 1559  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 1F12  
                                      _lastBeat 0142                                        _lastTime 0148  
             __size_of_LED_task_BEAT_CONTINUOUS 0001                                 LED_task_DMX@dmx 016A  
                     ?_LED_task_BEAT_CONTINUOUS 0070                                   __size_of_ctoa 0030  
                                 __size_of_main 003C                                   __size_of_init 0020  
                                  ?_address_dec 0070            __end_of_TMR0_DefaultInterruptHandler 1E9F  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1E9E  
                                  ?_address_inc 0070                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 0807                                      _RC1STAbits 011D  
                              ??_getManualColor 0020  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                          ??_PWM3_LoadDutyValue 006D                    __end_of_ADCC_StartConversion 1EEE  
                                      int$flags 007E                                        _position 00B0  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 130C  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00C7                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 0160                             _EUSART1_Receive_ISR 1402  
                               _LED_task_MANUAL 0800                           ??_TM1650_fastPrintNum 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_task 00D1  
                                      init@port 0020                                  __pstringtext10 2045  
                                __pstringtext11 204D                                  __pstringtext20 2087  
                                __pstringtext12 2055                                  __pstringtext21 208D  
                                __pstringtext13 205C                                  __pstringtext22 0000  
                                __pstringtext14 2063                                  __pstringtext15 2069  
                                __pstringtext16 206F                                  __pstringtext17 2075  
                                __pstringtext18 207B                                  __pstringtext19 2081  
          __end_of_ADCC_DefaultInterruptHandler 1E9D           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1E9C                                        intlevel1 0000  
                                _thresholdCount 013C                            ?_EUSART1_Receive_ISR 0070  
                                 writeData@data 002E                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0070                        __end_of_I2C1_MasterWrite 12DF  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1F2D         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1F24                   __end_of_I2C1_FunctionComplete 1FB6  
                                 ?_CONTROL_BEAT 0070                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 1F36                   ?_TMR0_DefaultInterruptHandler 0070  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0034  
                             _lastLedActiveTime 0138                                        printf@ap 006C  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 00C7  
                               _TM1650_setDigit 1FC7                                     ??_vfpfcnvrt 005A  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00C5  
                                 __pstringtext1 1800                                   __pstringtext2 2000  
                                 __pstringtext3 200A                                   __pstringtext4 2013  
                                 __pstringtext5 201C                                   __pstringtext6 2025  
                                 __pstringtext7 202D                                   __pstringtext8 2035  
                                 __pstringtext9 203D                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0070  
                               _TMR0_Initialize 1003                                 _PWM2_Initialize 1F41  
                              ??_CONTROL_MANUAL 0023                                 ___lwmod@counter 002D  
                                  ?_CONTROL_DMX 0070                        _I2C1_MasterWriteTRBBuild 11D8  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                  __end_of_LED_task_BEAT_STROBE 0DC9                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0071                  __end_of_PIN_MANAGER_Initialize 1402  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 102B  
                            __size_of_I2C1_Stop 001A                   ?_ADCC_DefaultInterruptHandler 0070  
                    __end_of_PWM1_LoadDutyValue 113E                            __Umul8_16@multiplier 0028  
                                ??_CONTROL_BEAT 0021                         ??_EUSART1_RxDataHandler 0070  
                               _PWM3_Initialize 1F4C                               __Umul8_16@product 0024  
