

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 18:11:49 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	stringtext2,global,class=STRCODE,delta=2
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	stringtext13,global,class=STRCODE,delta=2
    22                           	psect	stringtext14,global,class=STRCODE,delta=2
    23                           	psect	stringtext15,global,class=STRCODE,delta=2
    24                           	psect	stringtext16,global,class=STRCODE,delta=2
    25                           	psect	stringtext17,global,class=STRCODE,delta=2
    26                           	psect	stringtext18,global,class=STRCODE,delta=2
    27                           	psect	stringtext19,global,class=STRCODE,delta=2
    28                           	psect	stringtext20,global,class=STRCODE,delta=2
    29                           	psect	stringtext21,global,class=STRCODE,delta=2
    30                           	psect	stringtext22,global,class=STRCODE,delta=2
    31                           	psect	stringtext23,global,class=STRCODE,delta=2
    32                           	psect	stringtext24,global,class=STRCODE,delta=2
    33                           	psect	stringtext25,global,class=STRCODE,delta=2
    34                           	psect	cinit,global,class=CODE,merge=1,delta=2
    35                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    36                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    37                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    38                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    39                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    41                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    42                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    43                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    44                           	psect	inittext,global,class=CODE,delta=2
    45                           	psect	clrtext,global,class=CODE,delta=2
    46                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    47                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    48                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    49                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    50                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    51                           	psect	text1,local,class=CODE,merge=1,delta=2
    52                           	psect	text2,local,class=CODE,merge=1,delta=2
    53                           	psect	text3,local,class=CODE,merge=1,delta=2
    54                           	psect	text4,local,class=CODE,merge=1,delta=2
    55                           	psect	text5,local,class=CODE,merge=1,delta=2
    56                           	psect	text6,local,class=CODE,merge=1,delta=2
    57                           	psect	text7,local,class=CODE,merge=1,delta=2
    58                           	psect	text8,local,class=CODE,merge=1,delta=2
    59                           	psect	text9,local,class=CODE,merge=1,delta=2
    60                           	psect	text10,local,class=CODE,merge=1,delta=2
    61                           	psect	text11,local,class=CODE,merge=1,delta=2
    62                           	psect	text12,local,class=CODE,merge=1,delta=2
    63                           	psect	text13,local,class=CODE,merge=1,delta=2
    64                           	psect	text14,local,class=CODE,merge=1,delta=2
    65                           	psect	text15,local,class=CODE,merge=1,delta=2
    66                           	psect	text16,local,class=CODE,merge=1,delta=2
    67                           	psect	text17,local,class=CODE,merge=1,delta=2
    68                           	psect	text18,local,class=CODE,merge=1,delta=2
    69                           	psect	text19,local,class=CODE,merge=1,delta=2
    70                           	psect	text20,local,class=CODE,merge=1,delta=2
    71                           	psect	text21,local,class=CODE,merge=1,delta=2
    72                           	psect	text22,local,class=CODE,merge=1,delta=2
    73                           	psect	text23,local,class=CODE,merge=1,delta=2
    74                           	psect	text24,local,class=CODE,merge=1,delta=2
    75                           	psect	text25,local,class=CODE,merge=1,delta=2
    76                           	psect	text26,local,class=CODE,merge=1,delta=2
    77                           	psect	text27,local,class=CODE,merge=1,delta=2
    78                           	psect	text28,local,class=CODE,merge=1,delta=2
    79                           	psect	text29,local,class=CODE,merge=1,delta=2
    80                           	psect	text30,local,class=CODE,merge=1,delta=2
    81                           	psect	text31,local,class=CODE,merge=1,delta=2
    82                           	psect	text32,local,class=CODE,merge=1,delta=2
    83                           	psect	text33,local,class=CODE,merge=1,delta=2
    84                           	psect	text34,local,class=CODE,merge=1,delta=2
    85                           	psect	text35,local,class=CODE,merge=1,delta=2
    86                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text37,local,class=CODE,merge=1,delta=2
    88                           	psect	text38,local,class=CODE,merge=1,delta=2
    89                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text40,local,class=CODE,merge=1,delta=2
    91                           	psect	text41,local,class=CODE,merge=1,delta=2
    92                           	psect	text42,local,class=CODE,merge=1,delta=2
    93                           	psect	text43,local,class=CODE,merge=1,delta=2
    94                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text47,local,class=CODE,merge=1,delta=2
    98                           	psect	text48,local,class=CODE,merge=1,delta=2
    99                           	psect	text49,local,class=CODE,merge=1,delta=2
   100                           	psect	text50,local,class=CODE,merge=1,delta=2
   101                           	psect	text51,local,class=CODE,merge=1,delta=2
   102                           	psect	text52,local,class=CODE,merge=1,delta=2
   103                           	psect	text53,local,class=CODE,merge=1,delta=2
   104                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text57,local,class=CODE,merge=1,delta=2
   108                           	psect	text58,local,class=CODE,merge=1,delta=2
   109                           	psect	text59,local,class=CODE,merge=1,delta=2
   110                           	psect	text60,local,class=CODE,merge=1,delta=2
   111                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   112                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   113                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text66,local,class=CODE,merge=1,delta=2
   117                           	psect	text67,local,class=CODE,merge=1,delta=2
   118                           	psect	text68,local,class=CODE,merge=1,delta=2
   119                           	psect	text69,local,class=CODE,merge=1,delta=2
   120                           	psect	text70,local,class=CODE,merge=1,delta=2
   121                           	psect	text71,local,class=CODE,merge=1,delta=2
   122                           	psect	text72,local,class=CODE,merge=1,delta=2
   123                           	psect	text73,local,class=CODE,merge=1,delta=2
   124                           	psect	text74,local,class=CODE,merge=1,delta=2
   125                           	psect	text75,local,class=CODE,merge=1,delta=2
   126                           	psect	text76,local,class=CODE,merge=1,delta=2
   127                           	psect	text77,local,class=CODE,merge=1,delta=2
   128                           	psect	text78,local,class=CODE,merge=1,delta=2
   129                           	psect	text79,local,class=CODE,merge=1,delta=2
   130                           	psect	text80,local,class=CODE,merge=1,delta=2
   131                           	psect	text81,local,class=CODE,merge=1,delta=2
   132                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
   133                           	psect	text83,local,class=CODE,merge=1,delta=2
   134                           	psect	text84,local,class=CODE,merge=1,delta=2
   135                           	psect	text85,local,class=CODE,merge=1,delta=2
   136                           	psect	text86,local,class=CODE,merge=1,delta=2
   137                           	psect	text87,local,class=CODE,merge=1,delta=2
   138                           	psect	intentry,global,class=CODE,delta=2
   139                           	psect	text89,local,class=CODE,merge=1,delta=2
   140                           	psect	text90,local,class=CODE,merge=1,delta=2
   141                           	psect	text91,local,class=CODE,merge=1,delta=2
   142                           	psect	text92,local,class=CODE,merge=1,delta=2
   143                           	psect	text93,local,class=CODE,merge=1,delta=2
   144                           	psect	text94,local,class=CODE,merge=1,delta=2
   145                           	psect	text95,local,class=CODE,merge=1,delta=2
   146                           	psect	text96,local,class=CODE,merge=1,delta=2
   147                           	psect	text97,local,class=CODE,merge=1,delta=2
   148                           	psect	text98,local,class=CODE,merge=1,delta=2
   149                           	psect	text99,local,class=CODE,merge=1,delta=2
   150                           	psect	text100,local,class=CODE,merge=1,delta=2
   151                           	psect	text101,local,class=CODE,merge=1,delta=2
   152                           	psect	text102,local,class=CODE,merge=1,delta=2
   153                           	psect	text103,local,class=CODE,merge=1,delta=2
   154                           	psect	text104,local,class=CODE,merge=1,delta=2
   155                           	dabs	1,0xCA0,32
   156                           	dabs	1,0xC20,80
   157                           	dabs	1,0xBA0,80
   158                           	dabs	1,0xB20,80
   159                           	dabs	1,0xAA0,80
   160                           	dabs	1,0xA20,80
   161                           	dabs	1,0x9A0,80
   162                           	dabs	1,0x920,80
   163                           	dabs	1,0x8A0,80
   164                           	dabs	1,0x820,80
   165                           	dabs	1,0x7A0,80
   166                           	dabs	1,0x720,80
   167                           	dabs	1,0x6A0,80
   168                           	dabs	1,0x64E,34
   169                           	dabs	1,0x23EE,0,_dmxArray
   170                           	dabs	1,0x7E,2
   171  0000                     
   172                           ; Version 2.05
   173                           ; Generated 20/12/2018 GMT
   174                           ; 
   175                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   176                           ; All rights reserved.
   177                           ; 
   178                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   179                           ; 
   180                           ; Redistribution and use in source and binary forms, with or without modification, are
   181                           ; permitted provided that the following conditions are met:
   182                           ; 
   183                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   184                           ;        conditions and the following disclaimer.
   185                           ; 
   186                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   187                           ;        of conditions and the following disclaimer in the documentation and/or other
   188                           ;        materials provided with the distribution.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC16F18446 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  008C                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  008E                     	;# 
   232  008F                     	;# 
   233  0090                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  010F                     	;# 
   261  0110                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  0119                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011A                     	;# 
   275  011A                     	;# 
   276  011B                     	;# 
   277  011B                     	;# 
   278  011B                     	;# 
   279  011B                     	;# 
   280  011B                     	;# 
   281  011C                     	;# 
   282  011C                     	;# 
   283  011C                     	;# 
   284  011D                     	;# 
   285  011D                     	;# 
   286  011D                     	;# 
   287  011E                     	;# 
   288  011E                     	;# 
   289  011E                     	;# 
   290  011F                     	;# 
   291  011F                     	;# 
   292  011F                     	;# 
   293  011F                     	;# 
   294  011F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  018E                     	;# 
   298  018F                     	;# 
   299  0190                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0196                     	;# 
   303  0197                     	;# 
   304  0198                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  020C                     	;# 
   310  020D                     	;# 
   311  020E                     	;# 
   312  020E                     	;# 
   313  020F                     	;# 
   314  020F                     	;# 
   315  0210                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0216                     	;# 
   327  0217                     	;# 
   328  0217                     	;# 
   329  0218                     	;# 
   330  0219                     	;# 
   331  021A                     	;# 
   332  021A                     	;# 
   333  021B                     	;# 
   334  021B                     	;# 
   335  021C                     	;# 
   336  021C                     	;# 
   337  021D                     	;# 
   338  021D                     	;# 
   339  021E                     	;# 
   340  021F                     	;# 
   341  028C                     	;# 
   342  028C                     	;# 
   343  028D                     	;# 
   344  028D                     	;# 
   345  028E                     	;# 
   346  028F                     	;# 
   347  0290                     	;# 
   348  0291                     	;# 
   349  0292                     	;# 
   350  0292                     	;# 
   351  0293                     	;# 
   352  0293                     	;# 
   353  0294                     	;# 
   354  0295                     	;# 
   355  0296                     	;# 
   356  0297                     	;# 
   357  0298                     	;# 
   358  0298                     	;# 
   359  0299                     	;# 
   360  0299                     	;# 
   361  029A                     	;# 
   362  029B                     	;# 
   363  029C                     	;# 
   364  029D                     	;# 
   365  029F                     	;# 
   366  030C                     	;# 
   367  030C                     	;# 
   368  030D                     	;# 
   369  030E                     	;# 
   370  030F                     	;# 
   371  0310                     	;# 
   372  0310                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0314                     	;# 
   377  0314                     	;# 
   378  0315                     	;# 
   379  0316                     	;# 
   380  0317                     	;# 
   381  0318                     	;# 
   382  0318                     	;# 
   383  0319                     	;# 
   384  031A                     	;# 
   385  031B                     	;# 
   386  038C                     	;# 
   387  038C                     	;# 
   388  038D                     	;# 
   389  038E                     	;# 
   390  0390                     	;# 
   391  0390                     	;# 
   392  0391                     	;# 
   393  0392                     	;# 
   394  048C                     	;# 
   395  048C                     	;# 
   396  048D                     	;# 
   397  048E                     	;# 
   398  048F                     	;# 
   399  048F                     	;# 
   400  0490                     	;# 
   401  0491                     	;# 
   402  0492                     	;# 
   403  0492                     	;# 
   404  0493                     	;# 
   405  0494                     	;# 
   406  0495                     	;# 
   407  0495                     	;# 
   408  0496                     	;# 
   409  0497                     	;# 
   410  0498                     	;# 
   411  0499                     	;# 
   412  049A                     	;# 
   413  049B                     	;# 
   414  049C                     	;# 
   415  049D                     	;# 
   416  058C                     	;# 
   417  058C                     	;# 
   418  058D                     	;# 
   419  058E                     	;# 
   420  058F                     	;# 
   421  058F                     	;# 
   422  0590                     	;# 
   423  0591                     	;# 
   424  0592                     	;# 
   425  0593                     	;# 
   426  059C                     	;# 
   427  059C                     	;# 
   428  059D                     	;# 
   429  059D                     	;# 
   430  059E                     	;# 
   431  059F                     	;# 
   432  060C                     	;# 
   433  060C                     	;# 
   434  060D                     	;# 
   435  060D                     	;# 
   436  060E                     	;# 
   437  060F                     	;# 
   438  0610                     	;# 
   439  0611                     	;# 
   440  0612                     	;# 
   441  0613                     	;# 
   442  0614                     	;# 
   443  0616                     	;# 
   444  0616                     	;# 
   445  0617                     	;# 
   446  0617                     	;# 
   447  0618                     	;# 
   448  0619                     	;# 
   449  061A                     	;# 
   450  061B                     	;# 
   451  061C                     	;# 
   452  061D                     	;# 
   453  061E                     	;# 
   454  070C                     	;# 
   455  070D                     	;# 
   456  070E                     	;# 
   457  070F                     	;# 
   458  0710                     	;# 
   459  0711                     	;# 
   460  0712                     	;# 
   461  0713                     	;# 
   462  0714                     	;# 
   463  0716                     	;# 
   464  0717                     	;# 
   465  0718                     	;# 
   466  0719                     	;# 
   467  071A                     	;# 
   468  071B                     	;# 
   469  071C                     	;# 
   470  071D                     	;# 
   471  071E                     	;# 
   472  0796                     	;# 
   473  0797                     	;# 
   474  0798                     	;# 
   475  0799                     	;# 
   476  079A                     	;# 
   477  079B                     	;# 
   478  079C                     	;# 
   479  079D                     	;# 
   480  080C                     	;# 
   481  080D                     	;# 
   482  080E                     	;# 
   483  080F                     	;# 
   484  0810                     	;# 
   485  0811                     	;# 
   486  0812                     	;# 
   487  0813                     	;# 
   488  0814                     	;# 
   489  081A                     	;# 
   490  081A                     	;# 
   491  081B                     	;# 
   492  081C                     	;# 
   493  081C                     	;# 
   494  081D                     	;# 
   495  081E                     	;# 
   496  081F                     	;# 
   497  088C                     	;# 
   498  088D                     	;# 
   499  088E                     	;# 
   500  088F                     	;# 
   501  0890                     	;# 
   502  0891                     	;# 
   503  0892                     	;# 
   504  0893                     	;# 
   505  0895                     	;# 
   506  0896                     	;# 
   507  0897                     	;# 
   508  0898                     	;# 
   509  0899                     	;# 
   510  089A                     	;# 
   511  089B                     	;# 
   512  090C                     	;# 
   513  090E                     	;# 
   514  090F                     	;# 
   515  091F                     	;# 
   516  098F                     	;# 
   517  098F                     	;# 
   518  0990                     	;# 
   519  0991                     	;# 
   520  0992                     	;# 
   521  0993                     	;# 
   522  0994                     	;# 
   523  0995                     	;# 
   524  0996                     	;# 
   525  0997                     	;# 
   526  1E0F                     	;# 
   527  1E10                     	;# 
   528  1E11                     	;# 
   529  1E12                     	;# 
   530  1E13                     	;# 
   531  1E14                     	;# 
   532  1E15                     	;# 
   533  1E16                     	;# 
   534  1E17                     	;# 
   535  1E18                     	;# 
   536  1E19                     	;# 
   537  1E1A                     	;# 
   538  1E1B                     	;# 
   539  1E1C                     	;# 
   540  1E1D                     	;# 
   541  1E1E                     	;# 
   542  1E1F                     	;# 
   543  1E20                     	;# 
   544  1E21                     	;# 
   545  1E22                     	;# 
   546  1E23                     	;# 
   547  1E24                     	;# 
   548  1E25                     	;# 
   549  1E26                     	;# 
   550  1E27                     	;# 
   551  1E28                     	;# 
   552  1E29                     	;# 
   553  1E2A                     	;# 
   554  1E2B                     	;# 
   555  1E2C                     	;# 
   556  1E2D                     	;# 
   557  1E2E                     	;# 
   558  1E2F                     	;# 
   559  1E30                     	;# 
   560  1E31                     	;# 
   561  1E32                     	;# 
   562  1E33                     	;# 
   563  1E34                     	;# 
   564  1E35                     	;# 
   565  1E36                     	;# 
   566  1E37                     	;# 
   567  1E8F                     	;# 
   568  1E90                     	;# 
   569  1E91                     	;# 
   570  1E92                     	;# 
   571  1E93                     	;# 
   572  1E94                     	;# 
   573  1E95                     	;# 
   574  1E96                     	;# 
   575  1E97                     	;# 
   576  1E9C                     	;# 
   577  1E9D                     	;# 
   578  1E9E                     	;# 
   579  1EA1                     	;# 
   580  1EA2                     	;# 
   581  1EA3                     	;# 
   582  1EA4                     	;# 
   583  1EA9                     	;# 
   584  1EAA                     	;# 
   585  1EB1                     	;# 
   586  1EB2                     	;# 
   587  1EB8                     	;# 
   588  1EB9                     	;# 
   589  1EBA                     	;# 
   590  1EBB                     	;# 
   591  1EBC                     	;# 
   592  1EBD                     	;# 
   593  1EBE                     	;# 
   594  1EC3                     	;# 
   595  1EC5                     	;# 
   596  1EC6                     	;# 
   597  1EC7                     	;# 
   598  1EC8                     	;# 
   599  1EC9                     	;# 
   600  1ECA                     	;# 
   601  1ECB                     	;# 
   602  1ECB                     	;# 
   603  1ECB                     	;# 
   604  1ECC                     	;# 
   605  1ECC                     	;# 
   606  1ECC                     	;# 
   607  1F10                     	;# 
   608  1F11                     	;# 
   609  1F12                     	;# 
   610  1F14                     	;# 
   611  1F15                     	;# 
   612  1F1C                     	;# 
   613  1F1D                     	;# 
   614  1F1E                     	;# 
   615  1F1F                     	;# 
   616  1F20                     	;# 
   617  1F21                     	;# 
   618  1F22                     	;# 
   619  1F23                     	;# 
   620  1F24                     	;# 
   621  1F25                     	;# 
   622  1F26                     	;# 
   623  1F27                     	;# 
   624  1F38                     	;# 
   625  1F39                     	;# 
   626  1F3A                     	;# 
   627  1F3B                     	;# 
   628  1F3C                     	;# 
   629  1F3D                     	;# 
   630  1F3E                     	;# 
   631  1F3F                     	;# 
   632  1F43                     	;# 
   633  1F44                     	;# 
   634  1F45                     	;# 
   635  1F46                     	;# 
   636  1F47                     	;# 
   637  1F48                     	;# 
   638  1F49                     	;# 
   639  1F4A                     	;# 
   640  1F4E                     	;# 
   641  1F4F                     	;# 
   642  1F50                     	;# 
   643  1F51                     	;# 
   644  1F52                     	;# 
   645  1F53                     	;# 
   646  1F54                     	;# 
   647  1F55                     	;# 
   648  1FE4                     	;# 
   649  1FE5                     	;# 
   650  1FE6                     	;# 
   651  1FE7                     	;# 
   652  1FE8                     	;# 
   653  1FE8                     	;# 
   654  1FE9                     	;# 
   655  1FEA                     	;# 
   656  1FEB                     	;# 
   657  1FED                     	;# 
   658  1FEE                     	;# 
   659  1FEF                     	;# 
   660  0000                     	;# 
   661  0001                     	;# 
   662  0002                     	;# 
   663  0003                     	;# 
   664  0004                     	;# 
   665  0005                     	;# 
   666  0006                     	;# 
   667  0007                     	;# 
   668  0008                     	;# 
   669  0009                     	;# 
   670  000A                     	;# 
   671  000B                     	;# 
   672  000C                     	;# 
   673  000D                     	;# 
   674  000E                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0014                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  008C                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008E                     	;# 
   686  008F                     	;# 
   687  0090                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0094                     	;# 
   694  0094                     	;# 
   695  0095                     	;# 
   696  0096                     	;# 
   697  0096                     	;# 
   698  0097                     	;# 
   699  0098                     	;# 
   700  0099                     	;# 
   701  009A                     	;# 
   702  009B                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009D                     	;# 
   707  009E                     	;# 
   708  009F                     	;# 
   709  010C                     	;# 
   710  010C                     	;# 
   711  010D                     	;# 
   712  010E                     	;# 
   713  010F                     	;# 
   714  010F                     	;# 
   715  0110                     	;# 
   716  0111                     	;# 
   717  0112                     	;# 
   718  0113                     	;# 
   719  0114                     	;# 
   720  0115                     	;# 
   721  0116                     	;# 
   722  0117                     	;# 
   723  0118                     	;# 
   724  0119                     	;# 
   725  0119                     	;# 
   726  0119                     	;# 
   727  011A                     	;# 
   728  011A                     	;# 
   729  011A                     	;# 
   730  011B                     	;# 
   731  011B                     	;# 
   732  011B                     	;# 
   733  011B                     	;# 
   734  011B                     	;# 
   735  011C                     	;# 
   736  011C                     	;# 
   737  011C                     	;# 
   738  011D                     	;# 
   739  011D                     	;# 
   740  011D                     	;# 
   741  011E                     	;# 
   742  011E                     	;# 
   743  011E                     	;# 
   744  011F                     	;# 
   745  011F                     	;# 
   746  011F                     	;# 
   747  011F                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  018E                     	;# 
   752  018F                     	;# 
   753  0190                     	;# 
   754  0191                     	;# 
   755  0192                     	;# 
   756  0196                     	;# 
   757  0197                     	;# 
   758  0198                     	;# 
   759  0199                     	;# 
   760  019A                     	;# 
   761  019B                     	;# 
   762  019C                     	;# 
   763  020C                     	;# 
   764  020D                     	;# 
   765  020E                     	;# 
   766  020E                     	;# 
   767  020F                     	;# 
   768  020F                     	;# 
   769  0210                     	;# 
   770  0210                     	;# 
   771  0211                     	;# 
   772  0211                     	;# 
   773  0212                     	;# 
   774  0213                     	;# 
   775  0214                     	;# 
   776  0214                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0216                     	;# 
   780  0216                     	;# 
   781  0217                     	;# 
   782  0217                     	;# 
   783  0218                     	;# 
   784  0219                     	;# 
   785  021A                     	;# 
   786  021A                     	;# 
   787  021B                     	;# 
   788  021B                     	;# 
   789  021C                     	;# 
   790  021C                     	;# 
   791  021D                     	;# 
   792  021D                     	;# 
   793  021E                     	;# 
   794  021F                     	;# 
   795  028C                     	;# 
   796  028C                     	;# 
   797  028D                     	;# 
   798  028D                     	;# 
   799  028E                     	;# 
   800  028F                     	;# 
   801  0290                     	;# 
   802  0291                     	;# 
   803  0292                     	;# 
   804  0292                     	;# 
   805  0293                     	;# 
   806  0293                     	;# 
   807  0294                     	;# 
   808  0295                     	;# 
   809  0296                     	;# 
   810  0297                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  0299                     	;# 
   815  029A                     	;# 
   816  029B                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  029F                     	;# 
   820  030C                     	;# 
   821  030C                     	;# 
   822  030D                     	;# 
   823  030E                     	;# 
   824  030F                     	;# 
   825  0310                     	;# 
   826  0310                     	;# 
   827  0311                     	;# 
   828  0312                     	;# 
   829  0313                     	;# 
   830  0314                     	;# 
   831  0314                     	;# 
   832  0315                     	;# 
   833  0316                     	;# 
   834  0317                     	;# 
   835  0318                     	;# 
   836  0318                     	;# 
   837  0319                     	;# 
   838  031A                     	;# 
   839  031B                     	;# 
   840  038C                     	;# 
   841  038C                     	;# 
   842  038D                     	;# 
   843  038E                     	;# 
   844  0390                     	;# 
   845  0390                     	;# 
   846  0391                     	;# 
   847  0392                     	;# 
   848  048C                     	;# 
   849  048C                     	;# 
   850  048D                     	;# 
   851  048E                     	;# 
   852  048F                     	;# 
   853  048F                     	;# 
   854  0490                     	;# 
   855  0491                     	;# 
   856  0492                     	;# 
   857  0492                     	;# 
   858  0493                     	;# 
   859  0494                     	;# 
   860  0495                     	;# 
   861  0495                     	;# 
   862  0496                     	;# 
   863  0497                     	;# 
   864  0498                     	;# 
   865  0499                     	;# 
   866  049A                     	;# 
   867  049B                     	;# 
   868  049C                     	;# 
   869  049D                     	;# 
   870  058C                     	;# 
   871  058C                     	;# 
   872  058D                     	;# 
   873  058E                     	;# 
   874  058F                     	;# 
   875  058F                     	;# 
   876  0590                     	;# 
   877  0591                     	;# 
   878  0592                     	;# 
   879  0593                     	;# 
   880  059C                     	;# 
   881  059C                     	;# 
   882  059D                     	;# 
   883  059D                     	;# 
   884  059E                     	;# 
   885  059F                     	;# 
   886  060C                     	;# 
   887  060C                     	;# 
   888  060D                     	;# 
   889  060D                     	;# 
   890  060E                     	;# 
   891  060F                     	;# 
   892  0610                     	;# 
   893  0611                     	;# 
   894  0612                     	;# 
   895  0613                     	;# 
   896  0614                     	;# 
   897  0616                     	;# 
   898  0616                     	;# 
   899  0617                     	;# 
   900  0617                     	;# 
   901  0618                     	;# 
   902  0619                     	;# 
   903  061A                     	;# 
   904  061B                     	;# 
   905  061C                     	;# 
   906  061D                     	;# 
   907  061E                     	;# 
   908  070C                     	;# 
   909  070D                     	;# 
   910  070E                     	;# 
   911  070F                     	;# 
   912  0710                     	;# 
   913  0711                     	;# 
   914  0712                     	;# 
   915  0713                     	;# 
   916  0714                     	;# 
   917  0716                     	;# 
   918  0717                     	;# 
   919  0718                     	;# 
   920  0719                     	;# 
   921  071A                     	;# 
   922  071B                     	;# 
   923  071C                     	;# 
   924  071D                     	;# 
   925  071E                     	;# 
   926  0796                     	;# 
   927  0797                     	;# 
   928  0798                     	;# 
   929  0799                     	;# 
   930  079A                     	;# 
   931  079B                     	;# 
   932  079C                     	;# 
   933  079D                     	;# 
   934  080C                     	;# 
   935  080D                     	;# 
   936  080E                     	;# 
   937  080F                     	;# 
   938  0810                     	;# 
   939  0811                     	;# 
   940  0812                     	;# 
   941  0813                     	;# 
   942  0814                     	;# 
   943  081A                     	;# 
   944  081A                     	;# 
   945  081B                     	;# 
   946  081C                     	;# 
   947  081C                     	;# 
   948  081D                     	;# 
   949  081E                     	;# 
   950  081F                     	;# 
   951  088C                     	;# 
   952  088D                     	;# 
   953  088E                     	;# 
   954  088F                     	;# 
   955  0890                     	;# 
   956  0891                     	;# 
   957  0892                     	;# 
   958  0893                     	;# 
   959  0895                     	;# 
   960  0896                     	;# 
   961  0897                     	;# 
   962  0898                     	;# 
   963  0899                     	;# 
   964  089A                     	;# 
   965  089B                     	;# 
   966  090C                     	;# 
   967  090E                     	;# 
   968  090F                     	;# 
   969  091F                     	;# 
   970  098F                     	;# 
   971  098F                     	;# 
   972  0990                     	;# 
   973  0991                     	;# 
   974  0992                     	;# 
   975  0993                     	;# 
   976  0994                     	;# 
   977  0995                     	;# 
   978  0996                     	;# 
   979  0997                     	;# 
   980  1E0F                     	;# 
   981  1E10                     	;# 
   982  1E11                     	;# 
   983  1E12                     	;# 
   984  1E13                     	;# 
   985  1E14                     	;# 
   986  1E15                     	;# 
   987  1E16                     	;# 
   988  1E17                     	;# 
   989  1E18                     	;# 
   990  1E19                     	;# 
   991  1E1A                     	;# 
   992  1E1B                     	;# 
   993  1E1C                     	;# 
   994  1E1D                     	;# 
   995  1E1E                     	;# 
   996  1E1F                     	;# 
   997  1E20                     	;# 
   998  1E21                     	;# 
   999  1E22                     	;# 
  1000  1E23                     	;# 
  1001  1E24                     	;# 
  1002  1E25                     	;# 
  1003  1E26                     	;# 
  1004  1E27                     	;# 
  1005  1E28                     	;# 
  1006  1E29                     	;# 
  1007  1E2A                     	;# 
  1008  1E2B                     	;# 
  1009  1E2C                     	;# 
  1010  1E2D                     	;# 
  1011  1E2E                     	;# 
  1012  1E2F                     	;# 
  1013  1E30                     	;# 
  1014  1E31                     	;# 
  1015  1E32                     	;# 
  1016  1E33                     	;# 
  1017  1E34                     	;# 
  1018  1E35                     	;# 
  1019  1E36                     	;# 
  1020  1E37                     	;# 
  1021  1E8F                     	;# 
  1022  1E90                     	;# 
  1023  1E91                     	;# 
  1024  1E92                     	;# 
  1025  1E93                     	;# 
  1026  1E94                     	;# 
  1027  1E95                     	;# 
  1028  1E96                     	;# 
  1029  1E97                     	;# 
  1030  1E9C                     	;# 
  1031  1E9D                     	;# 
  1032  1E9E                     	;# 
  1033  1EA1                     	;# 
  1034  1EA2                     	;# 
  1035  1EA3                     	;# 
  1036  1EA4                     	;# 
  1037  1EA9                     	;# 
  1038  1EAA                     	;# 
  1039  1EB1                     	;# 
  1040  1EB2                     	;# 
  1041  1EB8                     	;# 
  1042  1EB9                     	;# 
  1043  1EBA                     	;# 
  1044  1EBB                     	;# 
  1045  1EBC                     	;# 
  1046  1EBD                     	;# 
  1047  1EBE                     	;# 
  1048  1EC3                     	;# 
  1049  1EC5                     	;# 
  1050  1EC6                     	;# 
  1051  1EC7                     	;# 
  1052  1EC8                     	;# 
  1053  1EC9                     	;# 
  1054  1ECA                     	;# 
  1055  1ECB                     	;# 
  1056  1ECB                     	;# 
  1057  1ECB                     	;# 
  1058  1ECC                     	;# 
  1059  1ECC                     	;# 
  1060  1ECC                     	;# 
  1061  1F10                     	;# 
  1062  1F11                     	;# 
  1063  1F12                     	;# 
  1064  1F14                     	;# 
  1065  1F15                     	;# 
  1066  1F1C                     	;# 
  1067  1F1D                     	;# 
  1068  1F1E                     	;# 
  1069  1F1F                     	;# 
  1070  1F20                     	;# 
  1071  1F21                     	;# 
  1072  1F22                     	;# 
  1073  1F23                     	;# 
  1074  1F24                     	;# 
  1075  1F25                     	;# 
  1076  1F26                     	;# 
  1077  1F27                     	;# 
  1078  1F38                     	;# 
  1079  1F39                     	;# 
  1080  1F3A                     	;# 
  1081  1F3B                     	;# 
  1082  1F3C                     	;# 
  1083  1F3D                     	;# 
  1084  1F3E                     	;# 
  1085  1F3F                     	;# 
  1086  1F43                     	;# 
  1087  1F44                     	;# 
  1088  1F45                     	;# 
  1089  1F46                     	;# 
  1090  1F47                     	;# 
  1091  1F48                     	;# 
  1092  1F49                     	;# 
  1093  1F4A                     	;# 
  1094  1F4E                     	;# 
  1095  1F4F                     	;# 
  1096  1F50                     	;# 
  1097  1F51                     	;# 
  1098  1F52                     	;# 
  1099  1F53                     	;# 
  1100  1F54                     	;# 
  1101  1F55                     	;# 
  1102  1FE4                     	;# 
  1103  1FE5                     	;# 
  1104  1FE6                     	;# 
  1105  1FE7                     	;# 
  1106  1FE8                     	;# 
  1107  1FE8                     	;# 
  1108  1FE9                     	;# 
  1109  1FEA                     	;# 
  1110  1FEB                     	;# 
  1111  1FED                     	;# 
  1112  1FEE                     	;# 
  1113  1FEF                     	;# 
  1114  0000                     	;# 
  1115  0001                     	;# 
  1116  0002                     	;# 
  1117  0003                     	;# 
  1118  0004                     	;# 
  1119  0005                     	;# 
  1120  0006                     	;# 
  1121  0007                     	;# 
  1122  0008                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0018                     	;# 
  1133  0019                     	;# 
  1134  001A                     	;# 
  1135  008C                     	;# 
  1136  008C                     	;# 
  1137  008D                     	;# 
  1138  008E                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0092                     	;# 
  1146  0093                     	;# 
  1147  0094                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0096                     	;# 
  1152  0097                     	;# 
  1153  0098                     	;# 
  1154  0099                     	;# 
  1155  009A                     	;# 
  1156  009B                     	;# 
  1157  009B                     	;# 
  1158  009C                     	;# 
  1159  009D                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  010C                     	;# 
  1164  010C                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  010F                     	;# 
  1169  0110                     	;# 
  1170  0111                     	;# 
  1171  0112                     	;# 
  1172  0113                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0117                     	;# 
  1177  0118                     	;# 
  1178  0119                     	;# 
  1179  0119                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011A                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011B                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011C                     	;# 
  1190  011C                     	;# 
  1191  011C                     	;# 
  1192  011D                     	;# 
  1193  011D                     	;# 
  1194  011D                     	;# 
  1195  011E                     	;# 
  1196  011E                     	;# 
  1197  011E                     	;# 
  1198  011F                     	;# 
  1199  011F                     	;# 
  1200  011F                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  018F                     	;# 
  1207  0190                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0198                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  020C                     	;# 
  1218  020D                     	;# 
  1219  020E                     	;# 
  1220  020E                     	;# 
  1221  020F                     	;# 
  1222  020F                     	;# 
  1223  0210                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0213                     	;# 
  1229  0214                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0218                     	;# 
  1238  0219                     	;# 
  1239  021A                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021B                     	;# 
  1243  021C                     	;# 
  1244  021C                     	;# 
  1245  021D                     	;# 
  1246  021D                     	;# 
  1247  021E                     	;# 
  1248  021F                     	;# 
  1249  028C                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  028F                     	;# 
  1255  0290                     	;# 
  1256  0291                     	;# 
  1257  0292                     	;# 
  1258  0292                     	;# 
  1259  0293                     	;# 
  1260  0293                     	;# 
  1261  0294                     	;# 
  1262  0295                     	;# 
  1263  0296                     	;# 
  1264  0297                     	;# 
  1265  0298                     	;# 
  1266  0298                     	;# 
  1267  0299                     	;# 
  1268  0299                     	;# 
  1269  029A                     	;# 
  1270  029B                     	;# 
  1271  029C                     	;# 
  1272  029D                     	;# 
  1273  029F                     	;# 
  1274  030C                     	;# 
  1275  030C                     	;# 
  1276  030D                     	;# 
  1277  030E                     	;# 
  1278  030F                     	;# 
  1279  0310                     	;# 
  1280  0310                     	;# 
  1281  0311                     	;# 
  1282  0312                     	;# 
  1283  0313                     	;# 
  1284  0314                     	;# 
  1285  0314                     	;# 
  1286  0315                     	;# 
  1287  0316                     	;# 
  1288  0317                     	;# 
  1289  0318                     	;# 
  1290  0318                     	;# 
  1291  0319                     	;# 
  1292  031A                     	;# 
  1293  031B                     	;# 
  1294  038C                     	;# 
  1295  038C                     	;# 
  1296  038D                     	;# 
  1297  038E                     	;# 
  1298  0390                     	;# 
  1299  0390                     	;# 
  1300  0391                     	;# 
  1301  0392                     	;# 
  1302  048C                     	;# 
  1303  048C                     	;# 
  1304  048D                     	;# 
  1305  048E                     	;# 
  1306  048F                     	;# 
  1307  048F                     	;# 
  1308  0490                     	;# 
  1309  0491                     	;# 
  1310  0492                     	;# 
  1311  0492                     	;# 
  1312  0493                     	;# 
  1313  0494                     	;# 
  1314  0495                     	;# 
  1315  0495                     	;# 
  1316  0496                     	;# 
  1317  0497                     	;# 
  1318  0498                     	;# 
  1319  0499                     	;# 
  1320  049A                     	;# 
  1321  049B                     	;# 
  1322  049C                     	;# 
  1323  049D                     	;# 
  1324  058C                     	;# 
  1325  058C                     	;# 
  1326  058D                     	;# 
  1327  058E                     	;# 
  1328  058F                     	;# 
  1329  058F                     	;# 
  1330  0590                     	;# 
  1331  0591                     	;# 
  1332  0592                     	;# 
  1333  0593                     	;# 
  1334  059C                     	;# 
  1335  059C                     	;# 
  1336  059D                     	;# 
  1337  059D                     	;# 
  1338  059E                     	;# 
  1339  059F                     	;# 
  1340  060C                     	;# 
  1341  060C                     	;# 
  1342  060D                     	;# 
  1343  060D                     	;# 
  1344  060E                     	;# 
  1345  060F                     	;# 
  1346  0610                     	;# 
  1347  0611                     	;# 
  1348  0612                     	;# 
  1349  0613                     	;# 
  1350  0614                     	;# 
  1351  0616                     	;# 
  1352  0616                     	;# 
  1353  0617                     	;# 
  1354  0617                     	;# 
  1355  0618                     	;# 
  1356  0619                     	;# 
  1357  061A                     	;# 
  1358  061B                     	;# 
  1359  061C                     	;# 
  1360  061D                     	;# 
  1361  061E                     	;# 
  1362  070C                     	;# 
  1363  070D                     	;# 
  1364  070E                     	;# 
  1365  070F                     	;# 
  1366  0710                     	;# 
  1367  0711                     	;# 
  1368  0712                     	;# 
  1369  0713                     	;# 
  1370  0714                     	;# 
  1371  0716                     	;# 
  1372  0717                     	;# 
  1373  0718                     	;# 
  1374  0719                     	;# 
  1375  071A                     	;# 
  1376  071B                     	;# 
  1377  071C                     	;# 
  1378  071D                     	;# 
  1379  071E                     	;# 
  1380  0796                     	;# 
  1381  0797                     	;# 
  1382  0798                     	;# 
  1383  0799                     	;# 
  1384  079A                     	;# 
  1385  079B                     	;# 
  1386  079C                     	;# 
  1387  079D                     	;# 
  1388  080C                     	;# 
  1389  080D                     	;# 
  1390  080E                     	;# 
  1391  080F                     	;# 
  1392  0810                     	;# 
  1393  0811                     	;# 
  1394  0812                     	;# 
  1395  0813                     	;# 
  1396  0814                     	;# 
  1397  081A                     	;# 
  1398  081A                     	;# 
  1399  081B                     	;# 
  1400  081C                     	;# 
  1401  081C                     	;# 
  1402  081D                     	;# 
  1403  081E                     	;# 
  1404  081F                     	;# 
  1405  088C                     	;# 
  1406  088D                     	;# 
  1407  088E                     	;# 
  1408  088F                     	;# 
  1409  0890                     	;# 
  1410  0891                     	;# 
  1411  0892                     	;# 
  1412  0893                     	;# 
  1413  0895                     	;# 
  1414  0896                     	;# 
  1415  0897                     	;# 
  1416  0898                     	;# 
  1417  0899                     	;# 
  1418  089A                     	;# 
  1419  089B                     	;# 
  1420  090C                     	;# 
  1421  090E                     	;# 
  1422  090F                     	;# 
  1423  091F                     	;# 
  1424  098F                     	;# 
  1425  098F                     	;# 
  1426  0990                     	;# 
  1427  0991                     	;# 
  1428  0992                     	;# 
  1429  0993                     	;# 
  1430  0994                     	;# 
  1431  0995                     	;# 
  1432  0996                     	;# 
  1433  0997                     	;# 
  1434  1E0F                     	;# 
  1435  1E10                     	;# 
  1436  1E11                     	;# 
  1437  1E12                     	;# 
  1438  1E13                     	;# 
  1439  1E14                     	;# 
  1440  1E15                     	;# 
  1441  1E16                     	;# 
  1442  1E17                     	;# 
  1443  1E18                     	;# 
  1444  1E19                     	;# 
  1445  1E1A                     	;# 
  1446  1E1B                     	;# 
  1447  1E1C                     	;# 
  1448  1E1D                     	;# 
  1449  1E1E                     	;# 
  1450  1E1F                     	;# 
  1451  1E20                     	;# 
  1452  1E21                     	;# 
  1453  1E22                     	;# 
  1454  1E23                     	;# 
  1455  1E24                     	;# 
  1456  1E25                     	;# 
  1457  1E26                     	;# 
  1458  1E27                     	;# 
  1459  1E28                     	;# 
  1460  1E29                     	;# 
  1461  1E2A                     	;# 
  1462  1E2B                     	;# 
  1463  1E2C                     	;# 
  1464  1E2D                     	;# 
  1465  1E2E                     	;# 
  1466  1E2F                     	;# 
  1467  1E30                     	;# 
  1468  1E31                     	;# 
  1469  1E32                     	;# 
  1470  1E33                     	;# 
  1471  1E34                     	;# 
  1472  1E35                     	;# 
  1473  1E36                     	;# 
  1474  1E37                     	;# 
  1475  1E8F                     	;# 
  1476  1E90                     	;# 
  1477  1E91                     	;# 
  1478  1E92                     	;# 
  1479  1E93                     	;# 
  1480  1E94                     	;# 
  1481  1E95                     	;# 
  1482  1E96                     	;# 
  1483  1E97                     	;# 
  1484  1E9C                     	;# 
  1485  1E9D                     	;# 
  1486  1E9E                     	;# 
  1487  1EA1                     	;# 
  1488  1EA2                     	;# 
  1489  1EA3                     	;# 
  1490  1EA4                     	;# 
  1491  1EA9                     	;# 
  1492  1EAA                     	;# 
  1493  1EB1                     	;# 
  1494  1EB2                     	;# 
  1495  1EB8                     	;# 
  1496  1EB9                     	;# 
  1497  1EBA                     	;# 
  1498  1EBB                     	;# 
  1499  1EBC                     	;# 
  1500  1EBD                     	;# 
  1501  1EBE                     	;# 
  1502  1EC3                     	;# 
  1503  1EC5                     	;# 
  1504  1EC6                     	;# 
  1505  1EC7                     	;# 
  1506  1EC8                     	;# 
  1507  1EC9                     	;# 
  1508  1ECA                     	;# 
  1509  1ECB                     	;# 
  1510  1ECB                     	;# 
  1511  1ECB                     	;# 
  1512  1ECC                     	;# 
  1513  1ECC                     	;# 
  1514  1ECC                     	;# 
  1515  1F10                     	;# 
  1516  1F11                     	;# 
  1517  1F12                     	;# 
  1518  1F14                     	;# 
  1519  1F15                     	;# 
  1520  1F1C                     	;# 
  1521  1F1D                     	;# 
  1522  1F1E                     	;# 
  1523  1F1F                     	;# 
  1524  1F20                     	;# 
  1525  1F21                     	;# 
  1526  1F22                     	;# 
  1527  1F23                     	;# 
  1528  1F24                     	;# 
  1529  1F25                     	;# 
  1530  1F26                     	;# 
  1531  1F27                     	;# 
  1532  1F38                     	;# 
  1533  1F39                     	;# 
  1534  1F3A                     	;# 
  1535  1F3B                     	;# 
  1536  1F3C                     	;# 
  1537  1F3D                     	;# 
  1538  1F3E                     	;# 
  1539  1F3F                     	;# 
  1540  1F43                     	;# 
  1541  1F44                     	;# 
  1542  1F45                     	;# 
  1543  1F46                     	;# 
  1544  1F47                     	;# 
  1545  1F48                     	;# 
  1546  1F49                     	;# 
  1547  1F4A                     	;# 
  1548  1F4E                     	;# 
  1549  1F4F                     	;# 
  1550  1F50                     	;# 
  1551  1F51                     	;# 
  1552  1F52                     	;# 
  1553  1F53                     	;# 
  1554  1F54                     	;# 
  1555  1F55                     	;# 
  1556  1FE4                     	;# 
  1557  1FE5                     	;# 
  1558  1FE6                     	;# 
  1559  1FE7                     	;# 
  1560  1FE8                     	;# 
  1561  1FE8                     	;# 
  1562  1FE9                     	;# 
  1563  1FEA                     	;# 
  1564  1FEB                     	;# 
  1565  1FED                     	;# 
  1566  1FEE                     	;# 
  1567  1FEF                     	;# 
  1568  0000                     	;# 
  1569  0001                     	;# 
  1570  0002                     	;# 
  1571  0003                     	;# 
  1572  0004                     	;# 
  1573  0005                     	;# 
  1574  0006                     	;# 
  1575  0007                     	;# 
  1576  0008                     	;# 
  1577  0009                     	;# 
  1578  000A                     	;# 
  1579  000B                     	;# 
  1580  000C                     	;# 
  1581  000D                     	;# 
  1582  000E                     	;# 
  1583  0012                     	;# 
  1584  0013                     	;# 
  1585  0014                     	;# 
  1586  0018                     	;# 
  1587  0019                     	;# 
  1588  001A                     	;# 
  1589  008C                     	;# 
  1590  008C                     	;# 
  1591  008D                     	;# 
  1592  008E                     	;# 
  1593  008E                     	;# 
  1594  008F                     	;# 
  1595  0090                     	;# 
  1596  0090                     	;# 
  1597  0091                     	;# 
  1598  0092                     	;# 
  1599  0092                     	;# 
  1600  0093                     	;# 
  1601  0094                     	;# 
  1602  0094                     	;# 
  1603  0095                     	;# 
  1604  0096                     	;# 
  1605  0096                     	;# 
  1606  0097                     	;# 
  1607  0098                     	;# 
  1608  0099                     	;# 
  1609  009A                     	;# 
  1610  009B                     	;# 
  1611  009B                     	;# 
  1612  009C                     	;# 
  1613  009D                     	;# 
  1614  009D                     	;# 
  1615  009E                     	;# 
  1616  009F                     	;# 
  1617  010C                     	;# 
  1618  010C                     	;# 
  1619  010D                     	;# 
  1620  010E                     	;# 
  1621  010F                     	;# 
  1622  010F                     	;# 
  1623  0110                     	;# 
  1624  0111                     	;# 
  1625  0112                     	;# 
  1626  0113                     	;# 
  1627  0114                     	;# 
  1628  0115                     	;# 
  1629  0116                     	;# 
  1630  0117                     	;# 
  1631  0118                     	;# 
  1632  0119                     	;# 
  1633  0119                     	;# 
  1634  0119                     	;# 
  1635  011A                     	;# 
  1636  011A                     	;# 
  1637  011A                     	;# 
  1638  011B                     	;# 
  1639  011B                     	;# 
  1640  011B                     	;# 
  1641  011B                     	;# 
  1642  011B                     	;# 
  1643  011C                     	;# 
  1644  011C                     	;# 
  1645  011C                     	;# 
  1646  011D                     	;# 
  1647  011D                     	;# 
  1648  011D                     	;# 
  1649  011E                     	;# 
  1650  011E                     	;# 
  1651  011E                     	;# 
  1652  011F                     	;# 
  1653  011F                     	;# 
  1654  011F                     	;# 
  1655  011F                     	;# 
  1656  011F                     	;# 
  1657  018C                     	;# 
  1658  018D                     	;# 
  1659  018E                     	;# 
  1660  018F                     	;# 
  1661  0190                     	;# 
  1662  0191                     	;# 
  1663  0192                     	;# 
  1664  0196                     	;# 
  1665  0197                     	;# 
  1666  0198                     	;# 
  1667  0199                     	;# 
  1668  019A                     	;# 
  1669  019B                     	;# 
  1670  019C                     	;# 
  1671  020C                     	;# 
  1672  020D                     	;# 
  1673  020E                     	;# 
  1674  020E                     	;# 
  1675  020F                     	;# 
  1676  020F                     	;# 
  1677  0210                     	;# 
  1678  0210                     	;# 
  1679  0211                     	;# 
  1680  0211                     	;# 
  1681  0212                     	;# 
  1682  0213                     	;# 
  1683  0214                     	;# 
  1684  0214                     	;# 
  1685  0215                     	;# 
  1686  0215                     	;# 
  1687  0216                     	;# 
  1688  0216                     	;# 
  1689  0217                     	;# 
  1690  0217                     	;# 
  1691  0218                     	;# 
  1692  0219                     	;# 
  1693  021A                     	;# 
  1694  021A                     	;# 
  1695  021B                     	;# 
  1696  021B                     	;# 
  1697  021C                     	;# 
  1698  021C                     	;# 
  1699  021D                     	;# 
  1700  021D                     	;# 
  1701  021E                     	;# 
  1702  021F                     	;# 
  1703  028C                     	;# 
  1704  028C                     	;# 
  1705  028D                     	;# 
  1706  028D                     	;# 
  1707  028E                     	;# 
  1708  028F                     	;# 
  1709  0290                     	;# 
  1710  0291                     	;# 
  1711  0292                     	;# 
  1712  0292                     	;# 
  1713  0293                     	;# 
  1714  0293                     	;# 
  1715  0294                     	;# 
  1716  0295                     	;# 
  1717  0296                     	;# 
  1718  0297                     	;# 
  1719  0298                     	;# 
  1720  0298                     	;# 
  1721  0299                     	;# 
  1722  0299                     	;# 
  1723  029A                     	;# 
  1724  029B                     	;# 
  1725  029C                     	;# 
  1726  029D                     	;# 
  1727  029F                     	;# 
  1728  030C                     	;# 
  1729  030C                     	;# 
  1730  030D                     	;# 
  1731  030E                     	;# 
  1732  030F                     	;# 
  1733  0310                     	;# 
  1734  0310                     	;# 
  1735  0311                     	;# 
  1736  0312                     	;# 
  1737  0313                     	;# 
  1738  0314                     	;# 
  1739  0314                     	;# 
  1740  0315                     	;# 
  1741  0316                     	;# 
  1742  0317                     	;# 
  1743  0318                     	;# 
  1744  0318                     	;# 
  1745  0319                     	;# 
  1746  031A                     	;# 
  1747  031B                     	;# 
  1748  038C                     	;# 
  1749  038C                     	;# 
  1750  038D                     	;# 
  1751  038E                     	;# 
  1752  0390                     	;# 
  1753  0390                     	;# 
  1754  0391                     	;# 
  1755  0392                     	;# 
  1756  048C                     	;# 
  1757  048C                     	;# 
  1758  048D                     	;# 
  1759  048E                     	;# 
  1760  048F                     	;# 
  1761  048F                     	;# 
  1762  0490                     	;# 
  1763  0491                     	;# 
  1764  0492                     	;# 
  1765  0492                     	;# 
  1766  0493                     	;# 
  1767  0494                     	;# 
  1768  0495                     	;# 
  1769  0495                     	;# 
  1770  0496                     	;# 
  1771  0497                     	;# 
  1772  0498                     	;# 
  1773  0499                     	;# 
  1774  049A                     	;# 
  1775  049B                     	;# 
  1776  049C                     	;# 
  1777  049D                     	;# 
  1778  058C                     	;# 
  1779  058C                     	;# 
  1780  058D                     	;# 
  1781  058E                     	;# 
  1782  058F                     	;# 
  1783  058F                     	;# 
  1784  0590                     	;# 
  1785  0591                     	;# 
  1786  0592                     	;# 
  1787  0593                     	;# 
  1788  059C                     	;# 
  1789  059C                     	;# 
  1790  059D                     	;# 
  1791  059D                     	;# 
  1792  059E                     	;# 
  1793  059F                     	;# 
  1794  060C                     	;# 
  1795  060C                     	;# 
  1796  060D                     	;# 
  1797  060D                     	;# 
  1798  060E                     	;# 
  1799  060F                     	;# 
  1800  0610                     	;# 
  1801  0611                     	;# 
  1802  0612                     	;# 
  1803  0613                     	;# 
  1804  0614                     	;# 
  1805  0616                     	;# 
  1806  0616                     	;# 
  1807  0617                     	;# 
  1808  0617                     	;# 
  1809  0618                     	;# 
  1810  0619                     	;# 
  1811  061A                     	;# 
  1812  061B                     	;# 
  1813  061C                     	;# 
  1814  061D                     	;# 
  1815  061E                     	;# 
  1816  070C                     	;# 
  1817  070D                     	;# 
  1818  070E                     	;# 
  1819  070F                     	;# 
  1820  0710                     	;# 
  1821  0711                     	;# 
  1822  0712                     	;# 
  1823  0713                     	;# 
  1824  0714                     	;# 
  1825  0716                     	;# 
  1826  0717                     	;# 
  1827  0718                     	;# 
  1828  0719                     	;# 
  1829  071A                     	;# 
  1830  071B                     	;# 
  1831  071C                     	;# 
  1832  071D                     	;# 
  1833  071E                     	;# 
  1834  0796                     	;# 
  1835  0797                     	;# 
  1836  0798                     	;# 
  1837  0799                     	;# 
  1838  079A                     	;# 
  1839  079B                     	;# 
  1840  079C                     	;# 
  1841  079D                     	;# 
  1842  080C                     	;# 
  1843  080D                     	;# 
  1844  080E                     	;# 
  1845  080F                     	;# 
  1846  0810                     	;# 
  1847  0811                     	;# 
  1848  0812                     	;# 
  1849  0813                     	;# 
  1850  0814                     	;# 
  1851  081A                     	;# 
  1852  081A                     	;# 
  1853  081B                     	;# 
  1854  081C                     	;# 
  1855  081C                     	;# 
  1856  081D                     	;# 
  1857  081E                     	;# 
  1858  081F                     	;# 
  1859  088C                     	;# 
  1860  088D                     	;# 
  1861  088E                     	;# 
  1862  088F                     	;# 
  1863  0890                     	;# 
  1864  0891                     	;# 
  1865  0892                     	;# 
  1866  0893                     	;# 
  1867  0895                     	;# 
  1868  0896                     	;# 
  1869  0897                     	;# 
  1870  0898                     	;# 
  1871  0899                     	;# 
  1872  089A                     	;# 
  1873  089B                     	;# 
  1874  090C                     	;# 
  1875  090E                     	;# 
  1876  090F                     	;# 
  1877  091F                     	;# 
  1878  098F                     	;# 
  1879  098F                     	;# 
  1880  0990                     	;# 
  1881  0991                     	;# 
  1882  0992                     	;# 
  1883  0993                     	;# 
  1884  0994                     	;# 
  1885  0995                     	;# 
  1886  0996                     	;# 
  1887  0997                     	;# 
  1888  1E0F                     	;# 
  1889  1E10                     	;# 
  1890  1E11                     	;# 
  1891  1E12                     	;# 
  1892  1E13                     	;# 
  1893  1E14                     	;# 
  1894  1E15                     	;# 
  1895  1E16                     	;# 
  1896  1E17                     	;# 
  1897  1E18                     	;# 
  1898  1E19                     	;# 
  1899  1E1A                     	;# 
  1900  1E1B                     	;# 
  1901  1E1C                     	;# 
  1902  1E1D                     	;# 
  1903  1E1E                     	;# 
  1904  1E1F                     	;# 
  1905  1E20                     	;# 
  1906  1E21                     	;# 
  1907  1E22                     	;# 
  1908  1E23                     	;# 
  1909  1E24                     	;# 
  1910  1E25                     	;# 
  1911  1E26                     	;# 
  1912  1E27                     	;# 
  1913  1E28                     	;# 
  1914  1E29                     	;# 
  1915  1E2A                     	;# 
  1916  1E2B                     	;# 
  1917  1E2C                     	;# 
  1918  1E2D                     	;# 
  1919  1E2E                     	;# 
  1920  1E2F                     	;# 
  1921  1E30                     	;# 
  1922  1E31                     	;# 
  1923  1E32                     	;# 
  1924  1E33                     	;# 
  1925  1E34                     	;# 
  1926  1E35                     	;# 
  1927  1E36                     	;# 
  1928  1E37                     	;# 
  1929  1E8F                     	;# 
  1930  1E90                     	;# 
  1931  1E91                     	;# 
  1932  1E92                     	;# 
  1933  1E93                     	;# 
  1934  1E94                     	;# 
  1935  1E95                     	;# 
  1936  1E96                     	;# 
  1937  1E97                     	;# 
  1938  1E9C                     	;# 
  1939  1E9D                     	;# 
  1940  1E9E                     	;# 
  1941  1EA1                     	;# 
  1942  1EA2                     	;# 
  1943  1EA3                     	;# 
  1944  1EA4                     	;# 
  1945  1EA9                     	;# 
  1946  1EAA                     	;# 
  1947  1EB1                     	;# 
  1948  1EB2                     	;# 
  1949  1EB8                     	;# 
  1950  1EB9                     	;# 
  1951  1EBA                     	;# 
  1952  1EBB                     	;# 
  1953  1EBC                     	;# 
  1954  1EBD                     	;# 
  1955  1EBE                     	;# 
  1956  1EC3                     	;# 
  1957  1EC5                     	;# 
  1958  1EC6                     	;# 
  1959  1EC7                     	;# 
  1960  1EC8                     	;# 
  1961  1EC9                     	;# 
  1962  1ECA                     	;# 
  1963  1ECB                     	;# 
  1964  1ECB                     	;# 
  1965  1ECB                     	;# 
  1966  1ECC                     	;# 
  1967  1ECC                     	;# 
  1968  1ECC                     	;# 
  1969  1F10                     	;# 
  1970  1F11                     	;# 
  1971  1F12                     	;# 
  1972  1F14                     	;# 
  1973  1F15                     	;# 
  1974  1F1C                     	;# 
  1975  1F1D                     	;# 
  1976  1F1E                     	;# 
  1977  1F1F                     	;# 
  1978  1F20                     	;# 
  1979  1F21                     	;# 
  1980  1F22                     	;# 
  1981  1F23                     	;# 
  1982  1F24                     	;# 
  1983  1F25                     	;# 
  1984  1F26                     	;# 
  1985  1F27                     	;# 
  1986  1F38                     	;# 
  1987  1F39                     	;# 
  1988  1F3A                     	;# 
  1989  1F3B                     	;# 
  1990  1F3C                     	;# 
  1991  1F3D                     	;# 
  1992  1F3E                     	;# 
  1993  1F3F                     	;# 
  1994  1F43                     	;# 
  1995  1F44                     	;# 
  1996  1F45                     	;# 
  1997  1F46                     	;# 
  1998  1F47                     	;# 
  1999  1F48                     	;# 
  2000  1F49                     	;# 
  2001  1F4A                     	;# 
  2002  1F4E                     	;# 
  2003  1F4F                     	;# 
  2004  1F50                     	;# 
  2005  1F51                     	;# 
  2006  1F52                     	;# 
  2007  1F53                     	;# 
  2008  1F54                     	;# 
  2009  1F55                     	;# 
  2010  1FE4                     	;# 
  2011  1FE5                     	;# 
  2012  1FE6                     	;# 
  2013  1FE7                     	;# 
  2014  1FE8                     	;# 
  2015  1FE8                     	;# 
  2016  1FE9                     	;# 
  2017  1FEA                     	;# 
  2018  1FEB                     	;# 
  2019  1FED                     	;# 
  2020  1FEE                     	;# 
  2021  1FEF                     	;# 
  2022  0000                     	;# 
  2023  0001                     	;# 
  2024  0002                     	;# 
  2025  0003                     	;# 
  2026  0004                     	;# 
  2027  0005                     	;# 
  2028  0006                     	;# 
  2029  0007                     	;# 
  2030  0008                     	;# 
  2031  0009                     	;# 
  2032  000A                     	;# 
  2033  000B                     	;# 
  2034  000C                     	;# 
  2035  000D                     	;# 
  2036  000E                     	;# 
  2037  0012                     	;# 
  2038  0013                     	;# 
  2039  0014                     	;# 
  2040  0018                     	;# 
  2041  0019                     	;# 
  2042  001A                     	;# 
  2043  008C                     	;# 
  2044  008C                     	;# 
  2045  008D                     	;# 
  2046  008E                     	;# 
  2047  008E                     	;# 
  2048  008F                     	;# 
  2049  0090                     	;# 
  2050  0090                     	;# 
  2051  0091                     	;# 
  2052  0092                     	;# 
  2053  0092                     	;# 
  2054  0093                     	;# 
  2055  0094                     	;# 
  2056  0094                     	;# 
  2057  0095                     	;# 
  2058  0096                     	;# 
  2059  0096                     	;# 
  2060  0097                     	;# 
  2061  0098                     	;# 
  2062  0099                     	;# 
  2063  009A                     	;# 
  2064  009B                     	;# 
  2065  009B                     	;# 
  2066  009C                     	;# 
  2067  009D                     	;# 
  2068  009D                     	;# 
  2069  009E                     	;# 
  2070  009F                     	;# 
  2071  010C                     	;# 
  2072  010C                     	;# 
  2073  010D                     	;# 
  2074  010E                     	;# 
  2075  010F                     	;# 
  2076  010F                     	;# 
  2077  0110                     	;# 
  2078  0111                     	;# 
  2079  0112                     	;# 
  2080  0113                     	;# 
  2081  0114                     	;# 
  2082  0115                     	;# 
  2083  0116                     	;# 
  2084  0117                     	;# 
  2085  0118                     	;# 
  2086  0119                     	;# 
  2087  0119                     	;# 
  2088  0119                     	;# 
  2089  011A                     	;# 
  2090  011A                     	;# 
  2091  011A                     	;# 
  2092  011B                     	;# 
  2093  011B                     	;# 
  2094  011B                     	;# 
  2095  011B                     	;# 
  2096  011B                     	;# 
  2097  011C                     	;# 
  2098  011C                     	;# 
  2099  011C                     	;# 
  2100  011D                     	;# 
  2101  011D                     	;# 
  2102  011D                     	;# 
  2103  011E                     	;# 
  2104  011E                     	;# 
  2105  011E                     	;# 
  2106  011F                     	;# 
  2107  011F                     	;# 
  2108  011F                     	;# 
  2109  011F                     	;# 
  2110  011F                     	;# 
  2111  018C                     	;# 
  2112  018D                     	;# 
  2113  018E                     	;# 
  2114  018F                     	;# 
  2115  0190                     	;# 
  2116  0191                     	;# 
  2117  0192                     	;# 
  2118  0196                     	;# 
  2119  0197                     	;# 
  2120  0198                     	;# 
  2121  0199                     	;# 
  2122  019A                     	;# 
  2123  019B                     	;# 
  2124  019C                     	;# 
  2125  020C                     	;# 
  2126  020D                     	;# 
  2127  020E                     	;# 
  2128  020E                     	;# 
  2129  020F                     	;# 
  2130  020F                     	;# 
  2131  0210                     	;# 
  2132  0210                     	;# 
  2133  0211                     	;# 
  2134  0211                     	;# 
  2135  0212                     	;# 
  2136  0213                     	;# 
  2137  0214                     	;# 
  2138  0214                     	;# 
  2139  0215                     	;# 
  2140  0215                     	;# 
  2141  0216                     	;# 
  2142  0216                     	;# 
  2143  0217                     	;# 
  2144  0217                     	;# 
  2145  0218                     	;# 
  2146  0219                     	;# 
  2147  021A                     	;# 
  2148  021A                     	;# 
  2149  021B                     	;# 
  2150  021B                     	;# 
  2151  021C                     	;# 
  2152  021C                     	;# 
  2153  021D                     	;# 
  2154  021D                     	;# 
  2155  021E                     	;# 
  2156  021F                     	;# 
  2157  028C                     	;# 
  2158  028C                     	;# 
  2159  028D                     	;# 
  2160  028D                     	;# 
  2161  028E                     	;# 
  2162  028F                     	;# 
  2163  0290                     	;# 
  2164  0291                     	;# 
  2165  0292                     	;# 
  2166  0292                     	;# 
  2167  0293                     	;# 
  2168  0293                     	;# 
  2169  0294                     	;# 
  2170  0295                     	;# 
  2171  0296                     	;# 
  2172  0297                     	;# 
  2173  0298                     	;# 
  2174  0298                     	;# 
  2175  0299                     	;# 
  2176  0299                     	;# 
  2177  029A                     	;# 
  2178  029B                     	;# 
  2179  029C                     	;# 
  2180  029D                     	;# 
  2181  029F                     	;# 
  2182  030C                     	;# 
  2183  030C                     	;# 
  2184  030D                     	;# 
  2185  030E                     	;# 
  2186  030F                     	;# 
  2187  0310                     	;# 
  2188  0310                     	;# 
  2189  0311                     	;# 
  2190  0312                     	;# 
  2191  0313                     	;# 
  2192  0314                     	;# 
  2193  0314                     	;# 
  2194  0315                     	;# 
  2195  0316                     	;# 
  2196  0317                     	;# 
  2197  0318                     	;# 
  2198  0318                     	;# 
  2199  0319                     	;# 
  2200  031A                     	;# 
  2201  031B                     	;# 
  2202  038C                     	;# 
  2203  038C                     	;# 
  2204  038D                     	;# 
  2205  038E                     	;# 
  2206  0390                     	;# 
  2207  0390                     	;# 
  2208  0391                     	;# 
  2209  0392                     	;# 
  2210  048C                     	;# 
  2211  048C                     	;# 
  2212  048D                     	;# 
  2213  048E                     	;# 
  2214  048F                     	;# 
  2215  048F                     	;# 
  2216  0490                     	;# 
  2217  0491                     	;# 
  2218  0492                     	;# 
  2219  0492                     	;# 
  2220  0493                     	;# 
  2221  0494                     	;# 
  2222  0495                     	;# 
  2223  0495                     	;# 
  2224  0496                     	;# 
  2225  0497                     	;# 
  2226  0498                     	;# 
  2227  0499                     	;# 
  2228  049A                     	;# 
  2229  049B                     	;# 
  2230  049C                     	;# 
  2231  049D                     	;# 
  2232  058C                     	;# 
  2233  058C                     	;# 
  2234  058D                     	;# 
  2235  058E                     	;# 
  2236  058F                     	;# 
  2237  058F                     	;# 
  2238  0590                     	;# 
  2239  0591                     	;# 
  2240  0592                     	;# 
  2241  0593                     	;# 
  2242  059C                     	;# 
  2243  059C                     	;# 
  2244  059D                     	;# 
  2245  059D                     	;# 
  2246  059E                     	;# 
  2247  059F                     	;# 
  2248  060C                     	;# 
  2249  060C                     	;# 
  2250  060D                     	;# 
  2251  060D                     	;# 
  2252  060E                     	;# 
  2253  060F                     	;# 
  2254  0610                     	;# 
  2255  0611                     	;# 
  2256  0612                     	;# 
  2257  0613                     	;# 
  2258  0614                     	;# 
  2259  0616                     	;# 
  2260  0616                     	;# 
  2261  0617                     	;# 
  2262  0617                     	;# 
  2263  0618                     	;# 
  2264  0619                     	;# 
  2265  061A                     	;# 
  2266  061B                     	;# 
  2267  061C                     	;# 
  2268  061D                     	;# 
  2269  061E                     	;# 
  2270  070C                     	;# 
  2271  070D                     	;# 
  2272  070E                     	;# 
  2273  070F                     	;# 
  2274  0710                     	;# 
  2275  0711                     	;# 
  2276  0712                     	;# 
  2277  0713                     	;# 
  2278  0714                     	;# 
  2279  0716                     	;# 
  2280  0717                     	;# 
  2281  0718                     	;# 
  2282  0719                     	;# 
  2283  071A                     	;# 
  2284  071B                     	;# 
  2285  071C                     	;# 
  2286  071D                     	;# 
  2287  071E                     	;# 
  2288  0796                     	;# 
  2289  0797                     	;# 
  2290  0798                     	;# 
  2291  0799                     	;# 
  2292  079A                     	;# 
  2293  079B                     	;# 
  2294  079C                     	;# 
  2295  079D                     	;# 
  2296  080C                     	;# 
  2297  080D                     	;# 
  2298  080E                     	;# 
  2299  080F                     	;# 
  2300  0810                     	;# 
  2301  0811                     	;# 
  2302  0812                     	;# 
  2303  0813                     	;# 
  2304  0814                     	;# 
  2305  081A                     	;# 
  2306  081A                     	;# 
  2307  081B                     	;# 
  2308  081C                     	;# 
  2309  081C                     	;# 
  2310  081D                     	;# 
  2311  081E                     	;# 
  2312  081F                     	;# 
  2313  088C                     	;# 
  2314  088D                     	;# 
  2315  088E                     	;# 
  2316  088F                     	;# 
  2317  0890                     	;# 
  2318  0891                     	;# 
  2319  0892                     	;# 
  2320  0893                     	;# 
  2321  0895                     	;# 
  2322  0896                     	;# 
  2323  0897                     	;# 
  2324  0898                     	;# 
  2325  0899                     	;# 
  2326  089A                     	;# 
  2327  089B                     	;# 
  2328  090C                     	;# 
  2329  090E                     	;# 
  2330  090F                     	;# 
  2331  091F                     	;# 
  2332  098F                     	;# 
  2333  098F                     	;# 
  2334  0990                     	;# 
  2335  0991                     	;# 
  2336  0992                     	;# 
  2337  0993                     	;# 
  2338  0994                     	;# 
  2339  0995                     	;# 
  2340  0996                     	;# 
  2341  0997                     	;# 
  2342  1E0F                     	;# 
  2343  1E10                     	;# 
  2344  1E11                     	;# 
  2345  1E12                     	;# 
  2346  1E13                     	;# 
  2347  1E14                     	;# 
  2348  1E15                     	;# 
  2349  1E16                     	;# 
  2350  1E17                     	;# 
  2351  1E18                     	;# 
  2352  1E19                     	;# 
  2353  1E1A                     	;# 
  2354  1E1B                     	;# 
  2355  1E1C                     	;# 
  2356  1E1D                     	;# 
  2357  1E1E                     	;# 
  2358  1E1F                     	;# 
  2359  1E20                     	;# 
  2360  1E21                     	;# 
  2361  1E22                     	;# 
  2362  1E23                     	;# 
  2363  1E24                     	;# 
  2364  1E25                     	;# 
  2365  1E26                     	;# 
  2366  1E27                     	;# 
  2367  1E28                     	;# 
  2368  1E29                     	;# 
  2369  1E2A                     	;# 
  2370  1E2B                     	;# 
  2371  1E2C                     	;# 
  2372  1E2D                     	;# 
  2373  1E2E                     	;# 
  2374  1E2F                     	;# 
  2375  1E30                     	;# 
  2376  1E31                     	;# 
  2377  1E32                     	;# 
  2378  1E33                     	;# 
  2379  1E34                     	;# 
  2380  1E35                     	;# 
  2381  1E36                     	;# 
  2382  1E37                     	;# 
  2383  1E8F                     	;# 
  2384  1E90                     	;# 
  2385  1E91                     	;# 
  2386  1E92                     	;# 
  2387  1E93                     	;# 
  2388  1E94                     	;# 
  2389  1E95                     	;# 
  2390  1E96                     	;# 
  2391  1E97                     	;# 
  2392  1E9C                     	;# 
  2393  1E9D                     	;# 
  2394  1E9E                     	;# 
  2395  1EA1                     	;# 
  2396  1EA2                     	;# 
  2397  1EA3                     	;# 
  2398  1EA4                     	;# 
  2399  1EA9                     	;# 
  2400  1EAA                     	;# 
  2401  1EB1                     	;# 
  2402  1EB2                     	;# 
  2403  1EB8                     	;# 
  2404  1EB9                     	;# 
  2405  1EBA                     	;# 
  2406  1EBB                     	;# 
  2407  1EBC                     	;# 
  2408  1EBD                     	;# 
  2409  1EBE                     	;# 
  2410  1EC3                     	;# 
  2411  1EC5                     	;# 
  2412  1EC6                     	;# 
  2413  1EC7                     	;# 
  2414  1EC8                     	;# 
  2415  1EC9                     	;# 
  2416  1ECA                     	;# 
  2417  1ECB                     	;# 
  2418  1ECB                     	;# 
  2419  1ECB                     	;# 
  2420  1ECC                     	;# 
  2421  1ECC                     	;# 
  2422  1ECC                     	;# 
  2423  1F10                     	;# 
  2424  1F11                     	;# 
  2425  1F12                     	;# 
  2426  1F14                     	;# 
  2427  1F15                     	;# 
  2428  1F1C                     	;# 
  2429  1F1D                     	;# 
  2430  1F1E                     	;# 
  2431  1F1F                     	;# 
  2432  1F20                     	;# 
  2433  1F21                     	;# 
  2434  1F22                     	;# 
  2435  1F23                     	;# 
  2436  1F24                     	;# 
  2437  1F25                     	;# 
  2438  1F26                     	;# 
  2439  1F27                     	;# 
  2440  1F38                     	;# 
  2441  1F39                     	;# 
  2442  1F3A                     	;# 
  2443  1F3B                     	;# 
  2444  1F3C                     	;# 
  2445  1F3D                     	;# 
  2446  1F3E                     	;# 
  2447  1F3F                     	;# 
  2448  1F43                     	;# 
  2449  1F44                     	;# 
  2450  1F45                     	;# 
  2451  1F46                     	;# 
  2452  1F47                     	;# 
  2453  1F48                     	;# 
  2454  1F49                     	;# 
  2455  1F4A                     	;# 
  2456  1F4E                     	;# 
  2457  1F4F                     	;# 
  2458  1F50                     	;# 
  2459  1F51                     	;# 
  2460  1F52                     	;# 
  2461  1F53                     	;# 
  2462  1F54                     	;# 
  2463  1F55                     	;# 
  2464  1FE4                     	;# 
  2465  1FE5                     	;# 
  2466  1FE6                     	;# 
  2467  1FE7                     	;# 
  2468  1FE8                     	;# 
  2469  1FE8                     	;# 
  2470  1FE9                     	;# 
  2471  1FEA                     	;# 
  2472  1FEB                     	;# 
  2473  1FED                     	;# 
  2474  1FEE                     	;# 
  2475  1FEF                     	;# 
  2476  0000                     	;# 
  2477  0001                     	;# 
  2478  0002                     	;# 
  2479  0003                     	;# 
  2480  0004                     	;# 
  2481  0005                     	;# 
  2482  0006                     	;# 
  2483  0007                     	;# 
  2484  0008                     	;# 
  2485  0009                     	;# 
  2486  000A                     	;# 
  2487  000B                     	;# 
  2488  000C                     	;# 
  2489  000D                     	;# 
  2490  000E                     	;# 
  2491  0012                     	;# 
  2492  0013                     	;# 
  2493  0014                     	;# 
  2494  0018                     	;# 
  2495  0019                     	;# 
  2496  001A                     	;# 
  2497  008C                     	;# 
  2498  008C                     	;# 
  2499  008D                     	;# 
  2500  008E                     	;# 
  2501  008E                     	;# 
  2502  008F                     	;# 
  2503  0090                     	;# 
  2504  0090                     	;# 
  2505  0091                     	;# 
  2506  0092                     	;# 
  2507  0092                     	;# 
  2508  0093                     	;# 
  2509  0094                     	;# 
  2510  0094                     	;# 
  2511  0095                     	;# 
  2512  0096                     	;# 
  2513  0096                     	;# 
  2514  0097                     	;# 
  2515  0098                     	;# 
  2516  0099                     	;# 
  2517  009A                     	;# 
  2518  009B                     	;# 
  2519  009B                     	;# 
  2520  009C                     	;# 
  2521  009D                     	;# 
  2522  009D                     	;# 
  2523  009E                     	;# 
  2524  009F                     	;# 
  2525  010C                     	;# 
  2526  010C                     	;# 
  2527  010D                     	;# 
  2528  010E                     	;# 
  2529  010F                     	;# 
  2530  010F                     	;# 
  2531  0110                     	;# 
  2532  0111                     	;# 
  2533  0112                     	;# 
  2534  0113                     	;# 
  2535  0114                     	;# 
  2536  0115                     	;# 
  2537  0116                     	;# 
  2538  0117                     	;# 
  2539  0118                     	;# 
  2540  0119                     	;# 
  2541  0119                     	;# 
  2542  0119                     	;# 
  2543  011A                     	;# 
  2544  011A                     	;# 
  2545  011A                     	;# 
  2546  011B                     	;# 
  2547  011B                     	;# 
  2548  011B                     	;# 
  2549  011B                     	;# 
  2550  011B                     	;# 
  2551  011C                     	;# 
  2552  011C                     	;# 
  2553  011C                     	;# 
  2554  011D                     	;# 
  2555  011D                     	;# 
  2556  011D                     	;# 
  2557  011E                     	;# 
  2558  011E                     	;# 
  2559  011E                     	;# 
  2560  011F                     	;# 
  2561  011F                     	;# 
  2562  011F                     	;# 
  2563  011F                     	;# 
  2564  011F                     	;# 
  2565  018C                     	;# 
  2566  018D                     	;# 
  2567  018E                     	;# 
  2568  018F                     	;# 
  2569  0190                     	;# 
  2570  0191                     	;# 
  2571  0192                     	;# 
  2572  0196                     	;# 
  2573  0197                     	;# 
  2574  0198                     	;# 
  2575  0199                     	;# 
  2576  019A                     	;# 
  2577  019B                     	;# 
  2578  019C                     	;# 
  2579  020C                     	;# 
  2580  020D                     	;# 
  2581  020E                     	;# 
  2582  020E                     	;# 
  2583  020F                     	;# 
  2584  020F                     	;# 
  2585  0210                     	;# 
  2586  0210                     	;# 
  2587  0211                     	;# 
  2588  0211                     	;# 
  2589  0212                     	;# 
  2590  0213                     	;# 
  2591  0214                     	;# 
  2592  0214                     	;# 
  2593  0215                     	;# 
  2594  0215                     	;# 
  2595  0216                     	;# 
  2596  0216                     	;# 
  2597  0217                     	;# 
  2598  0217                     	;# 
  2599  0218                     	;# 
  2600  0219                     	;# 
  2601  021A                     	;# 
  2602  021A                     	;# 
  2603  021B                     	;# 
  2604  021B                     	;# 
  2605  021C                     	;# 
  2606  021C                     	;# 
  2607  021D                     	;# 
  2608  021D                     	;# 
  2609  021E                     	;# 
  2610  021F                     	;# 
  2611  028C                     	;# 
  2612  028C                     	;# 
  2613  028D                     	;# 
  2614  028D                     	;# 
  2615  028E                     	;# 
  2616  028F                     	;# 
  2617  0290                     	;# 
  2618  0291                     	;# 
  2619  0292                     	;# 
  2620  0292                     	;# 
  2621  0293                     	;# 
  2622  0293                     	;# 
  2623  0294                     	;# 
  2624  0295                     	;# 
  2625  0296                     	;# 
  2626  0297                     	;# 
  2627  0298                     	;# 
  2628  0298                     	;# 
  2629  0299                     	;# 
  2630  0299                     	;# 
  2631  029A                     	;# 
  2632  029B                     	;# 
  2633  029C                     	;# 
  2634  029D                     	;# 
  2635  029F                     	;# 
  2636  030C                     	;# 
  2637  030C                     	;# 
  2638  030D                     	;# 
  2639  030E                     	;# 
  2640  030F                     	;# 
  2641  0310                     	;# 
  2642  0310                     	;# 
  2643  0311                     	;# 
  2644  0312                     	;# 
  2645  0313                     	;# 
  2646  0314                     	;# 
  2647  0314                     	;# 
  2648  0315                     	;# 
  2649  0316                     	;# 
  2650  0317                     	;# 
  2651  0318                     	;# 
  2652  0318                     	;# 
  2653  0319                     	;# 
  2654  031A                     	;# 
  2655  031B                     	;# 
  2656  038C                     	;# 
  2657  038C                     	;# 
  2658  038D                     	;# 
  2659  038E                     	;# 
  2660  0390                     	;# 
  2661  0390                     	;# 
  2662  0391                     	;# 
  2663  0392                     	;# 
  2664  048C                     	;# 
  2665  048C                     	;# 
  2666  048D                     	;# 
  2667  048E                     	;# 
  2668  048F                     	;# 
  2669  048F                     	;# 
  2670  0490                     	;# 
  2671  0491                     	;# 
  2672  0492                     	;# 
  2673  0492                     	;# 
  2674  0493                     	;# 
  2675  0494                     	;# 
  2676  0495                     	;# 
  2677  0495                     	;# 
  2678  0496                     	;# 
  2679  0497                     	;# 
  2680  0498                     	;# 
  2681  0499                     	;# 
  2682  049A                     	;# 
  2683  049B                     	;# 
  2684  049C                     	;# 
  2685  049D                     	;# 
  2686  058C                     	;# 
  2687  058C                     	;# 
  2688  058D                     	;# 
  2689  058E                     	;# 
  2690  058F                     	;# 
  2691  058F                     	;# 
  2692  0590                     	;# 
  2693  0591                     	;# 
  2694  0592                     	;# 
  2695  0593                     	;# 
  2696  059C                     	;# 
  2697  059C                     	;# 
  2698  059D                     	;# 
  2699  059D                     	;# 
  2700  059E                     	;# 
  2701  059F                     	;# 
  2702  060C                     	;# 
  2703  060C                     	;# 
  2704  060D                     	;# 
  2705  060D                     	;# 
  2706  060E                     	;# 
  2707  060F                     	;# 
  2708  0610                     	;# 
  2709  0611                     	;# 
  2710  0612                     	;# 
  2711  0613                     	;# 
  2712  0614                     	;# 
  2713  0616                     	;# 
  2714  0616                     	;# 
  2715  0617                     	;# 
  2716  0617                     	;# 
  2717  0618                     	;# 
  2718  0619                     	;# 
  2719  061A                     	;# 
  2720  061B                     	;# 
  2721  061C                     	;# 
  2722  061D                     	;# 
  2723  061E                     	;# 
  2724  070C                     	;# 
  2725  070D                     	;# 
  2726  070E                     	;# 
  2727  070F                     	;# 
  2728  0710                     	;# 
  2729  0711                     	;# 
  2730  0712                     	;# 
  2731  0713                     	;# 
  2732  0714                     	;# 
  2733  0716                     	;# 
  2734  0717                     	;# 
  2735  0718                     	;# 
  2736  0719                     	;# 
  2737  071A                     	;# 
  2738  071B                     	;# 
  2739  071C                     	;# 
  2740  071D                     	;# 
  2741  071E                     	;# 
  2742  0796                     	;# 
  2743  0797                     	;# 
  2744  0798                     	;# 
  2745  0799                     	;# 
  2746  079A                     	;# 
  2747  079B                     	;# 
  2748  079C                     	;# 
  2749  079D                     	;# 
  2750  080C                     	;# 
  2751  080D                     	;# 
  2752  080E                     	;# 
  2753  080F                     	;# 
  2754  0810                     	;# 
  2755  0811                     	;# 
  2756  0812                     	;# 
  2757  0813                     	;# 
  2758  0814                     	;# 
  2759  081A                     	;# 
  2760  081A                     	;# 
  2761  081B                     	;# 
  2762  081C                     	;# 
  2763  081C                     	;# 
  2764  081D                     	;# 
  2765  081E                     	;# 
  2766  081F                     	;# 
  2767  088C                     	;# 
  2768  088D                     	;# 
  2769  088E                     	;# 
  2770  088F                     	;# 
  2771  0890                     	;# 
  2772  0891                     	;# 
  2773  0892                     	;# 
  2774  0893                     	;# 
  2775  0895                     	;# 
  2776  0896                     	;# 
  2777  0897                     	;# 
  2778  0898                     	;# 
  2779  0899                     	;# 
  2780  089A                     	;# 
  2781  089B                     	;# 
  2782  090C                     	;# 
  2783  090E                     	;# 
  2784  090F                     	;# 
  2785  091F                     	;# 
  2786  098F                     	;# 
  2787  098F                     	;# 
  2788  0990                     	;# 
  2789  0991                     	;# 
  2790  0992                     	;# 
  2791  0993                     	;# 
  2792  0994                     	;# 
  2793  0995                     	;# 
  2794  0996                     	;# 
  2795  0997                     	;# 
  2796  1E0F                     	;# 
  2797  1E10                     	;# 
  2798  1E11                     	;# 
  2799  1E12                     	;# 
  2800  1E13                     	;# 
  2801  1E14                     	;# 
  2802  1E15                     	;# 
  2803  1E16                     	;# 
  2804  1E17                     	;# 
  2805  1E18                     	;# 
  2806  1E19                     	;# 
  2807  1E1A                     	;# 
  2808  1E1B                     	;# 
  2809  1E1C                     	;# 
  2810  1E1D                     	;# 
  2811  1E1E                     	;# 
  2812  1E1F                     	;# 
  2813  1E20                     	;# 
  2814  1E21                     	;# 
  2815  1E22                     	;# 
  2816  1E23                     	;# 
  2817  1E24                     	;# 
  2818  1E25                     	;# 
  2819  1E26                     	;# 
  2820  1E27                     	;# 
  2821  1E28                     	;# 
  2822  1E29                     	;# 
  2823  1E2A                     	;# 
  2824  1E2B                     	;# 
  2825  1E2C                     	;# 
  2826  1E2D                     	;# 
  2827  1E2E                     	;# 
  2828  1E2F                     	;# 
  2829  1E30                     	;# 
  2830  1E31                     	;# 
  2831  1E32                     	;# 
  2832  1E33                     	;# 
  2833  1E34                     	;# 
  2834  1E35                     	;# 
  2835  1E36                     	;# 
  2836  1E37                     	;# 
  2837  1E8F                     	;# 
  2838  1E90                     	;# 
  2839  1E91                     	;# 
  2840  1E92                     	;# 
  2841  1E93                     	;# 
  2842  1E94                     	;# 
  2843  1E95                     	;# 
  2844  1E96                     	;# 
  2845  1E97                     	;# 
  2846  1E9C                     	;# 
  2847  1E9D                     	;# 
  2848  1E9E                     	;# 
  2849  1EA1                     	;# 
  2850  1EA2                     	;# 
  2851  1EA3                     	;# 
  2852  1EA4                     	;# 
  2853  1EA9                     	;# 
  2854  1EAA                     	;# 
  2855  1EB1                     	;# 
  2856  1EB2                     	;# 
  2857  1EB8                     	;# 
  2858  1EB9                     	;# 
  2859  1EBA                     	;# 
  2860  1EBB                     	;# 
  2861  1EBC                     	;# 
  2862  1EBD                     	;# 
  2863  1EBE                     	;# 
  2864  1EC3                     	;# 
  2865  1EC5                     	;# 
  2866  1EC6                     	;# 
  2867  1EC7                     	;# 
  2868  1EC8                     	;# 
  2869  1EC9                     	;# 
  2870  1ECA                     	;# 
  2871  1ECB                     	;# 
  2872  1ECB                     	;# 
  2873  1ECB                     	;# 
  2874  1ECC                     	;# 
  2875  1ECC                     	;# 
  2876  1ECC                     	;# 
  2877  1F10                     	;# 
  2878  1F11                     	;# 
  2879  1F12                     	;# 
  2880  1F14                     	;# 
  2881  1F15                     	;# 
  2882  1F1C                     	;# 
  2883  1F1D                     	;# 
  2884  1F1E                     	;# 
  2885  1F1F                     	;# 
  2886  1F20                     	;# 
  2887  1F21                     	;# 
  2888  1F22                     	;# 
  2889  1F23                     	;# 
  2890  1F24                     	;# 
  2891  1F25                     	;# 
  2892  1F26                     	;# 
  2893  1F27                     	;# 
  2894  1F38                     	;# 
  2895  1F39                     	;# 
  2896  1F3A                     	;# 
  2897  1F3B                     	;# 
  2898  1F3C                     	;# 
  2899  1F3D                     	;# 
  2900  1F3E                     	;# 
  2901  1F3F                     	;# 
  2902  1F43                     	;# 
  2903  1F44                     	;# 
  2904  1F45                     	;# 
  2905  1F46                     	;# 
  2906  1F47                     	;# 
  2907  1F48                     	;# 
  2908  1F49                     	;# 
  2909  1F4A                     	;# 
  2910  1F4E                     	;# 
  2911  1F4F                     	;# 
  2912  1F50                     	;# 
  2913  1F51                     	;# 
  2914  1F52                     	;# 
  2915  1F53                     	;# 
  2916  1F54                     	;# 
  2917  1F55                     	;# 
  2918  1FE4                     	;# 
  2919  1FE5                     	;# 
  2920  1FE6                     	;# 
  2921  1FE7                     	;# 
  2922  1FE8                     	;# 
  2923  1FE8                     	;# 
  2924  1FE9                     	;# 
  2925  1FEA                     	;# 
  2926  1FEB                     	;# 
  2927  1FED                     	;# 
  2928  1FEE                     	;# 
  2929  1FEF                     	;# 
  2930  0000                     	;# 
  2931  0001                     	;# 
  2932  0002                     	;# 
  2933  0003                     	;# 
  2934  0004                     	;# 
  2935  0005                     	;# 
  2936  0006                     	;# 
  2937  0007                     	;# 
  2938  0008                     	;# 
  2939  0009                     	;# 
  2940  000A                     	;# 
  2941  000B                     	;# 
  2942  000C                     	;# 
  2943  000D                     	;# 
  2944  000E                     	;# 
  2945  0012                     	;# 
  2946  0013                     	;# 
  2947  0014                     	;# 
  2948  0018                     	;# 
  2949  0019                     	;# 
  2950  001A                     	;# 
  2951  008C                     	;# 
  2952  008C                     	;# 
  2953  008D                     	;# 
  2954  008E                     	;# 
  2955  008E                     	;# 
  2956  008F                     	;# 
  2957  0090                     	;# 
  2958  0090                     	;# 
  2959  0091                     	;# 
  2960  0092                     	;# 
  2961  0092                     	;# 
  2962  0093                     	;# 
  2963  0094                     	;# 
  2964  0094                     	;# 
  2965  0095                     	;# 
  2966  0096                     	;# 
  2967  0096                     	;# 
  2968  0097                     	;# 
  2969  0098                     	;# 
  2970  0099                     	;# 
  2971  009A                     	;# 
  2972  009B                     	;# 
  2973  009B                     	;# 
  2974  009C                     	;# 
  2975  009D                     	;# 
  2976  009D                     	;# 
  2977  009E                     	;# 
  2978  009F                     	;# 
  2979  010C                     	;# 
  2980  010C                     	;# 
  2981  010D                     	;# 
  2982  010E                     	;# 
  2983  010F                     	;# 
  2984  010F                     	;# 
  2985  0110                     	;# 
  2986  0111                     	;# 
  2987  0112                     	;# 
  2988  0113                     	;# 
  2989  0114                     	;# 
  2990  0115                     	;# 
  2991  0116                     	;# 
  2992  0117                     	;# 
  2993  0118                     	;# 
  2994  0119                     	;# 
  2995  0119                     	;# 
  2996  0119                     	;# 
  2997  011A                     	;# 
  2998  011A                     	;# 
  2999  011A                     	;# 
  3000  011B                     	;# 
  3001  011B                     	;# 
  3002  011B                     	;# 
  3003  011B                     	;# 
  3004  011B                     	;# 
  3005  011C                     	;# 
  3006  011C                     	;# 
  3007  011C                     	;# 
  3008  011D                     	;# 
  3009  011D                     	;# 
  3010  011D                     	;# 
  3011  011E                     	;# 
  3012  011E                     	;# 
  3013  011E                     	;# 
  3014  011F                     	;# 
  3015  011F                     	;# 
  3016  011F                     	;# 
  3017  011F                     	;# 
  3018  011F                     	;# 
  3019  018C                     	;# 
  3020  018D                     	;# 
  3021  018E                     	;# 
  3022  018F                     	;# 
  3023  0190                     	;# 
  3024  0191                     	;# 
  3025  0192                     	;# 
  3026  0196                     	;# 
  3027  0197                     	;# 
  3028  0198                     	;# 
  3029  0199                     	;# 
  3030  019A                     	;# 
  3031  019B                     	;# 
  3032  019C                     	;# 
  3033  020C                     	;# 
  3034  020D                     	;# 
  3035  020E                     	;# 
  3036  020E                     	;# 
  3037  020F                     	;# 
  3038  020F                     	;# 
  3039  0210                     	;# 
  3040  0210                     	;# 
  3041  0211                     	;# 
  3042  0211                     	;# 
  3043  0212                     	;# 
  3044  0213                     	;# 
  3045  0214                     	;# 
  3046  0214                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0216                     	;# 
  3050  0216                     	;# 
  3051  0217                     	;# 
  3052  0217                     	;# 
  3053  0218                     	;# 
  3054  0219                     	;# 
  3055  021A                     	;# 
  3056  021A                     	;# 
  3057  021B                     	;# 
  3058  021B                     	;# 
  3059  021C                     	;# 
  3060  021C                     	;# 
  3061  021D                     	;# 
  3062  021D                     	;# 
  3063  021E                     	;# 
  3064  021F                     	;# 
  3065  028C                     	;# 
  3066  028C                     	;# 
  3067  028D                     	;# 
  3068  028D                     	;# 
  3069  028E                     	;# 
  3070  028F                     	;# 
  3071  0290                     	;# 
  3072  0291                     	;# 
  3073  0292                     	;# 
  3074  0292                     	;# 
  3075  0293                     	;# 
  3076  0293                     	;# 
  3077  0294                     	;# 
  3078  0295                     	;# 
  3079  0296                     	;# 
  3080  0297                     	;# 
  3081  0298                     	;# 
  3082  0298                     	;# 
  3083  0299                     	;# 
  3084  0299                     	;# 
  3085  029A                     	;# 
  3086  029B                     	;# 
  3087  029C                     	;# 
  3088  029D                     	;# 
  3089  029F                     	;# 
  3090  030C                     	;# 
  3091  030C                     	;# 
  3092  030D                     	;# 
  3093  030E                     	;# 
  3094  030F                     	;# 
  3095  0310                     	;# 
  3096  0310                     	;# 
  3097  0311                     	;# 
  3098  0312                     	;# 
  3099  0313                     	;# 
  3100  0314                     	;# 
  3101  0314                     	;# 
  3102  0315                     	;# 
  3103  0316                     	;# 
  3104  0317                     	;# 
  3105  0318                     	;# 
  3106  0318                     	;# 
  3107  0319                     	;# 
  3108  031A                     	;# 
  3109  031B                     	;# 
  3110  038C                     	;# 
  3111  038C                     	;# 
  3112  038D                     	;# 
  3113  038E                     	;# 
  3114  0390                     	;# 
  3115  0390                     	;# 
  3116  0391                     	;# 
  3117  0392                     	;# 
  3118  048C                     	;# 
  3119  048C                     	;# 
  3120  048D                     	;# 
  3121  048E                     	;# 
  3122  048F                     	;# 
  3123  048F                     	;# 
  3124  0490                     	;# 
  3125  0491                     	;# 
  3126  0492                     	;# 
  3127  0492                     	;# 
  3128  0493                     	;# 
  3129  0494                     	;# 
  3130  0495                     	;# 
  3131  0495                     	;# 
  3132  0496                     	;# 
  3133  0497                     	;# 
  3134  0498                     	;# 
  3135  0499                     	;# 
  3136  049A                     	;# 
  3137  049B                     	;# 
  3138  049C                     	;# 
  3139  049D                     	;# 
  3140  058C                     	;# 
  3141  058C                     	;# 
  3142  058D                     	;# 
  3143  058E                     	;# 
  3144  058F                     	;# 
  3145  058F                     	;# 
  3146  0590                     	;# 
  3147  0591                     	;# 
  3148  0592                     	;# 
  3149  0593                     	;# 
  3150  059C                     	;# 
  3151  059C                     	;# 
  3152  059D                     	;# 
  3153  059D                     	;# 
  3154  059E                     	;# 
  3155  059F                     	;# 
  3156  060C                     	;# 
  3157  060C                     	;# 
  3158  060D                     	;# 
  3159  060D                     	;# 
  3160  060E                     	;# 
  3161  060F                     	;# 
  3162  0610                     	;# 
  3163  0611                     	;# 
  3164  0612                     	;# 
  3165  0613                     	;# 
  3166  0614                     	;# 
  3167  0616                     	;# 
  3168  0616                     	;# 
  3169  0617                     	;# 
  3170  0617                     	;# 
  3171  0618                     	;# 
  3172  0619                     	;# 
  3173  061A                     	;# 
  3174  061B                     	;# 
  3175  061C                     	;# 
  3176  061D                     	;# 
  3177  061E                     	;# 
  3178  070C                     	;# 
  3179  070D                     	;# 
  3180  070E                     	;# 
  3181  070F                     	;# 
  3182  0710                     	;# 
  3183  0711                     	;# 
  3184  0712                     	;# 
  3185  0713                     	;# 
  3186  0714                     	;# 
  3187  0716                     	;# 
  3188  0717                     	;# 
  3189  0718                     	;# 
  3190  0719                     	;# 
  3191  071A                     	;# 
  3192  071B                     	;# 
  3193  071C                     	;# 
  3194  071D                     	;# 
  3195  071E                     	;# 
  3196  0796                     	;# 
  3197  0797                     	;# 
  3198  0798                     	;# 
  3199  0799                     	;# 
  3200  079A                     	;# 
  3201  079B                     	;# 
  3202  079C                     	;# 
  3203  079D                     	;# 
  3204  080C                     	;# 
  3205  080D                     	;# 
  3206  080E                     	;# 
  3207  080F                     	;# 
  3208  0810                     	;# 
  3209  0811                     	;# 
  3210  0812                     	;# 
  3211  0813                     	;# 
  3212  0814                     	;# 
  3213  081A                     	;# 
  3214  081A                     	;# 
  3215  081B                     	;# 
  3216  081C                     	;# 
  3217  081C                     	;# 
  3218  081D                     	;# 
  3219  081E                     	;# 
  3220  081F                     	;# 
  3221  088C                     	;# 
  3222  088D                     	;# 
  3223  088E                     	;# 
  3224  088F                     	;# 
  3225  0890                     	;# 
  3226  0891                     	;# 
  3227  0892                     	;# 
  3228  0893                     	;# 
  3229  0895                     	;# 
  3230  0896                     	;# 
  3231  0897                     	;# 
  3232  0898                     	;# 
  3233  0899                     	;# 
  3234  089A                     	;# 
  3235  089B                     	;# 
  3236  090C                     	;# 
  3237  090E                     	;# 
  3238  090F                     	;# 
  3239  091F                     	;# 
  3240  098F                     	;# 
  3241  098F                     	;# 
  3242  0990                     	;# 
  3243  0991                     	;# 
  3244  0992                     	;# 
  3245  0993                     	;# 
  3246  0994                     	;# 
  3247  0995                     	;# 
  3248  0996                     	;# 
  3249  0997                     	;# 
  3250  1E0F                     	;# 
  3251  1E10                     	;# 
  3252  1E11                     	;# 
  3253  1E12                     	;# 
  3254  1E13                     	;# 
  3255  1E14                     	;# 
  3256  1E15                     	;# 
  3257  1E16                     	;# 
  3258  1E17                     	;# 
  3259  1E18                     	;# 
  3260  1E19                     	;# 
  3261  1E1A                     	;# 
  3262  1E1B                     	;# 
  3263  1E1C                     	;# 
  3264  1E1D                     	;# 
  3265  1E1E                     	;# 
  3266  1E1F                     	;# 
  3267  1E20                     	;# 
  3268  1E21                     	;# 
  3269  1E22                     	;# 
  3270  1E23                     	;# 
  3271  1E24                     	;# 
  3272  1E25                     	;# 
  3273  1E26                     	;# 
  3274  1E27                     	;# 
  3275  1E28                     	;# 
  3276  1E29                     	;# 
  3277  1E2A                     	;# 
  3278  1E2B                     	;# 
  3279  1E2C                     	;# 
  3280  1E2D                     	;# 
  3281  1E2E                     	;# 
  3282  1E2F                     	;# 
  3283  1E30                     	;# 
  3284  1E31                     	;# 
  3285  1E32                     	;# 
  3286  1E33                     	;# 
  3287  1E34                     	;# 
  3288  1E35                     	;# 
  3289  1E36                     	;# 
  3290  1E37                     	;# 
  3291  1E8F                     	;# 
  3292  1E90                     	;# 
  3293  1E91                     	;# 
  3294  1E92                     	;# 
  3295  1E93                     	;# 
  3296  1E94                     	;# 
  3297  1E95                     	;# 
  3298  1E96                     	;# 
  3299  1E97                     	;# 
  3300  1E9C                     	;# 
  3301  1E9D                     	;# 
  3302  1E9E                     	;# 
  3303  1EA1                     	;# 
  3304  1EA2                     	;# 
  3305  1EA3                     	;# 
  3306  1EA4                     	;# 
  3307  1EA9                     	;# 
  3308  1EAA                     	;# 
  3309  1EB1                     	;# 
  3310  1EB2                     	;# 
  3311  1EB8                     	;# 
  3312  1EB9                     	;# 
  3313  1EBA                     	;# 
  3314  1EBB                     	;# 
  3315  1EBC                     	;# 
  3316  1EBD                     	;# 
  3317  1EBE                     	;# 
  3318  1EC3                     	;# 
  3319  1EC5                     	;# 
  3320  1EC6                     	;# 
  3321  1EC7                     	;# 
  3322  1EC8                     	;# 
  3323  1EC9                     	;# 
  3324  1ECA                     	;# 
  3325  1ECB                     	;# 
  3326  1ECB                     	;# 
  3327  1ECB                     	;# 
  3328  1ECC                     	;# 
  3329  1ECC                     	;# 
  3330  1ECC                     	;# 
  3331  1F10                     	;# 
  3332  1F11                     	;# 
  3333  1F12                     	;# 
  3334  1F14                     	;# 
  3335  1F15                     	;# 
  3336  1F1C                     	;# 
  3337  1F1D                     	;# 
  3338  1F1E                     	;# 
  3339  1F1F                     	;# 
  3340  1F20                     	;# 
  3341  1F21                     	;# 
  3342  1F22                     	;# 
  3343  1F23                     	;# 
  3344  1F24                     	;# 
  3345  1F25                     	;# 
  3346  1F26                     	;# 
  3347  1F27                     	;# 
  3348  1F38                     	;# 
  3349  1F39                     	;# 
  3350  1F3A                     	;# 
  3351  1F3B                     	;# 
  3352  1F3C                     	;# 
  3353  1F3D                     	;# 
  3354  1F3E                     	;# 
  3355  1F3F                     	;# 
  3356  1F43                     	;# 
  3357  1F44                     	;# 
  3358  1F45                     	;# 
  3359  1F46                     	;# 
  3360  1F47                     	;# 
  3361  1F48                     	;# 
  3362  1F49                     	;# 
  3363  1F4A                     	;# 
  3364  1F4E                     	;# 
  3365  1F4F                     	;# 
  3366  1F50                     	;# 
  3367  1F51                     	;# 
  3368  1F52                     	;# 
  3369  1F53                     	;# 
  3370  1F54                     	;# 
  3371  1F55                     	;# 
  3372  1FE4                     	;# 
  3373  1FE5                     	;# 
  3374  1FE6                     	;# 
  3375  1FE7                     	;# 
  3376  1FE8                     	;# 
  3377  1FE8                     	;# 
  3378  1FE9                     	;# 
  3379  1FEA                     	;# 
  3380  1FEB                     	;# 
  3381  1FED                     	;# 
  3382  1FEE                     	;# 
  3383  1FEF                     	;# 
  3384  0000                     	;# 
  3385  0001                     	;# 
  3386  0002                     	;# 
  3387  0003                     	;# 
  3388  0004                     	;# 
  3389  0005                     	;# 
  3390  0006                     	;# 
  3391  0007                     	;# 
  3392  0008                     	;# 
  3393  0009                     	;# 
  3394  000A                     	;# 
  3395  000B                     	;# 
  3396  000C                     	;# 
  3397  000D                     	;# 
  3398  000E                     	;# 
  3399  0012                     	;# 
  3400  0013                     	;# 
  3401  0014                     	;# 
  3402  0018                     	;# 
  3403  0019                     	;# 
  3404  001A                     	;# 
  3405  008C                     	;# 
  3406  008C                     	;# 
  3407  008D                     	;# 
  3408  008E                     	;# 
  3409  008E                     	;# 
  3410  008F                     	;# 
  3411  0090                     	;# 
  3412  0090                     	;# 
  3413  0091                     	;# 
  3414  0092                     	;# 
  3415  0092                     	;# 
  3416  0093                     	;# 
  3417  0094                     	;# 
  3418  0094                     	;# 
  3419  0095                     	;# 
  3420  0096                     	;# 
  3421  0096                     	;# 
  3422  0097                     	;# 
  3423  0098                     	;# 
  3424  0099                     	;# 
  3425  009A                     	;# 
  3426  009B                     	;# 
  3427  009B                     	;# 
  3428  009C                     	;# 
  3429  009D                     	;# 
  3430  009D                     	;# 
  3431  009E                     	;# 
  3432  009F                     	;# 
  3433  010C                     	;# 
  3434  010C                     	;# 
  3435  010D                     	;# 
  3436  010E                     	;# 
  3437  010F                     	;# 
  3438  010F                     	;# 
  3439  0110                     	;# 
  3440  0111                     	;# 
  3441  0112                     	;# 
  3442  0113                     	;# 
  3443  0114                     	;# 
  3444  0115                     	;# 
  3445  0116                     	;# 
  3446  0117                     	;# 
  3447  0118                     	;# 
  3448  0119                     	;# 
  3449  0119                     	;# 
  3450  0119                     	;# 
  3451  011A                     	;# 
  3452  011A                     	;# 
  3453  011A                     	;# 
  3454  011B                     	;# 
  3455  011B                     	;# 
  3456  011B                     	;# 
  3457  011B                     	;# 
  3458  011B                     	;# 
  3459  011C                     	;# 
  3460  011C                     	;# 
  3461  011C                     	;# 
  3462  011D                     	;# 
  3463  011D                     	;# 
  3464  011D                     	;# 
  3465  011E                     	;# 
  3466  011E                     	;# 
  3467  011E                     	;# 
  3468  011F                     	;# 
  3469  011F                     	;# 
  3470  011F                     	;# 
  3471  011F                     	;# 
  3472  011F                     	;# 
  3473  018C                     	;# 
  3474  018D                     	;# 
  3475  018E                     	;# 
  3476  018F                     	;# 
  3477  0190                     	;# 
  3478  0191                     	;# 
  3479  0192                     	;# 
  3480  0196                     	;# 
  3481  0197                     	;# 
  3482  0198                     	;# 
  3483  0199                     	;# 
  3484  019A                     	;# 
  3485  019B                     	;# 
  3486  019C                     	;# 
  3487  020C                     	;# 
  3488  020D                     	;# 
  3489  020E                     	;# 
  3490  020E                     	;# 
  3491  020F                     	;# 
  3492  020F                     	;# 
  3493  0210                     	;# 
  3494  0210                     	;# 
  3495  0211                     	;# 
  3496  0211                     	;# 
  3497  0212                     	;# 
  3498  0213                     	;# 
  3499  0214                     	;# 
  3500  0214                     	;# 
  3501  0215                     	;# 
  3502  0215                     	;# 
  3503  0216                     	;# 
  3504  0216                     	;# 
  3505  0217                     	;# 
  3506  0217                     	;# 
  3507  0218                     	;# 
  3508  0219                     	;# 
  3509  021A                     	;# 
  3510  021A                     	;# 
  3511  021B                     	;# 
  3512  021B                     	;# 
  3513  021C                     	;# 
  3514  021C                     	;# 
  3515  021D                     	;# 
  3516  021D                     	;# 
  3517  021E                     	;# 
  3518  021F                     	;# 
  3519  028C                     	;# 
  3520  028C                     	;# 
  3521  028D                     	;# 
  3522  028D                     	;# 
  3523  028E                     	;# 
  3524  028F                     	;# 
  3525  0290                     	;# 
  3526  0291                     	;# 
  3527  0292                     	;# 
  3528  0292                     	;# 
  3529  0293                     	;# 
  3530  0293                     	;# 
  3531  0294                     	;# 
  3532  0295                     	;# 
  3533  0296                     	;# 
  3534  0297                     	;# 
  3535  0298                     	;# 
  3536  0298                     	;# 
  3537  0299                     	;# 
  3538  0299                     	;# 
  3539  029A                     	;# 
  3540  029B                     	;# 
  3541  029C                     	;# 
  3542  029D                     	;# 
  3543  029F                     	;# 
  3544  030C                     	;# 
  3545  030C                     	;# 
  3546  030D                     	;# 
  3547  030E                     	;# 
  3548  030F                     	;# 
  3549  0310                     	;# 
  3550  0310                     	;# 
  3551  0311                     	;# 
  3552  0312                     	;# 
  3553  0313                     	;# 
  3554  0314                     	;# 
  3555  0314                     	;# 
  3556  0315                     	;# 
  3557  0316                     	;# 
  3558  0317                     	;# 
  3559  0318                     	;# 
  3560  0318                     	;# 
  3561  0319                     	;# 
  3562  031A                     	;# 
  3563  031B                     	;# 
  3564  038C                     	;# 
  3565  038C                     	;# 
  3566  038D                     	;# 
  3567  038E                     	;# 
  3568  0390                     	;# 
  3569  0390                     	;# 
  3570  0391                     	;# 
  3571  0392                     	;# 
  3572  048C                     	;# 
  3573  048C                     	;# 
  3574  048D                     	;# 
  3575  048E                     	;# 
  3576  048F                     	;# 
  3577  048F                     	;# 
  3578  0490                     	;# 
  3579  0491                     	;# 
  3580  0492                     	;# 
  3581  0492                     	;# 
  3582  0493                     	;# 
  3583  0494                     	;# 
  3584  0495                     	;# 
  3585  0495                     	;# 
  3586  0496                     	;# 
  3587  0497                     	;# 
  3588  0498                     	;# 
  3589  0499                     	;# 
  3590  049A                     	;# 
  3591  049B                     	;# 
  3592  049C                     	;# 
  3593  049D                     	;# 
  3594  058C                     	;# 
  3595  058C                     	;# 
  3596  058D                     	;# 
  3597  058E                     	;# 
  3598  058F                     	;# 
  3599  058F                     	;# 
  3600  0590                     	;# 
  3601  0591                     	;# 
  3602  0592                     	;# 
  3603  0593                     	;# 
  3604  059C                     	;# 
  3605  059C                     	;# 
  3606  059D                     	;# 
  3607  059D                     	;# 
  3608  059E                     	;# 
  3609  059F                     	;# 
  3610  060C                     	;# 
  3611  060C                     	;# 
  3612  060D                     	;# 
  3613  060D                     	;# 
  3614  060E                     	;# 
  3615  060F                     	;# 
  3616  0610                     	;# 
  3617  0611                     	;# 
  3618  0612                     	;# 
  3619  0613                     	;# 
  3620  0614                     	;# 
  3621  0616                     	;# 
  3622  0616                     	;# 
  3623  0617                     	;# 
  3624  0617                     	;# 
  3625  0618                     	;# 
  3626  0619                     	;# 
  3627  061A                     	;# 
  3628  061B                     	;# 
  3629  061C                     	;# 
  3630  061D                     	;# 
  3631  061E                     	;# 
  3632  070C                     	;# 
  3633  070D                     	;# 
  3634  070E                     	;# 
  3635  070F                     	;# 
  3636  0710                     	;# 
  3637  0711                     	;# 
  3638  0712                     	;# 
  3639  0713                     	;# 
  3640  0714                     	;# 
  3641  0716                     	;# 
  3642  0717                     	;# 
  3643  0718                     	;# 
  3644  0719                     	;# 
  3645  071A                     	;# 
  3646  071B                     	;# 
  3647  071C                     	;# 
  3648  071D                     	;# 
  3649  071E                     	;# 
  3650  0796                     	;# 
  3651  0797                     	;# 
  3652  0798                     	;# 
  3653  0799                     	;# 
  3654  079A                     	;# 
  3655  079B                     	;# 
  3656  079C                     	;# 
  3657  079D                     	;# 
  3658  080C                     	;# 
  3659  080D                     	;# 
  3660  080E                     	;# 
  3661  080F                     	;# 
  3662  0810                     	;# 
  3663  0811                     	;# 
  3664  0812                     	;# 
  3665  0813                     	;# 
  3666  0814                     	;# 
  3667  081A                     	;# 
  3668  081A                     	;# 
  3669  081B                     	;# 
  3670  081C                     	;# 
  3671  081C                     	;# 
  3672  081D                     	;# 
  3673  081E                     	;# 
  3674  081F                     	;# 
  3675  088C                     	;# 
  3676  088D                     	;# 
  3677  088E                     	;# 
  3678  088F                     	;# 
  3679  0890                     	;# 
  3680  0891                     	;# 
  3681  0892                     	;# 
  3682  0893                     	;# 
  3683  0895                     	;# 
  3684  0896                     	;# 
  3685  0897                     	;# 
  3686  0898                     	;# 
  3687  0899                     	;# 
  3688  089A                     	;# 
  3689  089B                     	;# 
  3690  090C                     	;# 
  3691  090E                     	;# 
  3692  090F                     	;# 
  3693  091F                     	;# 
  3694  098F                     	;# 
  3695  098F                     	;# 
  3696  0990                     	;# 
  3697  0991                     	;# 
  3698  0992                     	;# 
  3699  0993                     	;# 
  3700  0994                     	;# 
  3701  0995                     	;# 
  3702  0996                     	;# 
  3703  0997                     	;# 
  3704  1E0F                     	;# 
  3705  1E10                     	;# 
  3706  1E11                     	;# 
  3707  1E12                     	;# 
  3708  1E13                     	;# 
  3709  1E14                     	;# 
  3710  1E15                     	;# 
  3711  1E16                     	;# 
  3712  1E17                     	;# 
  3713  1E18                     	;# 
  3714  1E19                     	;# 
  3715  1E1A                     	;# 
  3716  1E1B                     	;# 
  3717  1E1C                     	;# 
  3718  1E1D                     	;# 
  3719  1E1E                     	;# 
  3720  1E1F                     	;# 
  3721  1E20                     	;# 
  3722  1E21                     	;# 
  3723  1E22                     	;# 
  3724  1E23                     	;# 
  3725  1E24                     	;# 
  3726  1E25                     	;# 
  3727  1E26                     	;# 
  3728  1E27                     	;# 
  3729  1E28                     	;# 
  3730  1E29                     	;# 
  3731  1E2A                     	;# 
  3732  1E2B                     	;# 
  3733  1E2C                     	;# 
  3734  1E2D                     	;# 
  3735  1E2E                     	;# 
  3736  1E2F                     	;# 
  3737  1E30                     	;# 
  3738  1E31                     	;# 
  3739  1E32                     	;# 
  3740  1E33                     	;# 
  3741  1E34                     	;# 
  3742  1E35                     	;# 
  3743  1E36                     	;# 
  3744  1E37                     	;# 
  3745  1E8F                     	;# 
  3746  1E90                     	;# 
  3747  1E91                     	;# 
  3748  1E92                     	;# 
  3749  1E93                     	;# 
  3750  1E94                     	;# 
  3751  1E95                     	;# 
  3752  1E96                     	;# 
  3753  1E97                     	;# 
  3754  1E9C                     	;# 
  3755  1E9D                     	;# 
  3756  1E9E                     	;# 
  3757  1EA1                     	;# 
  3758  1EA2                     	;# 
  3759  1EA3                     	;# 
  3760  1EA4                     	;# 
  3761  1EA9                     	;# 
  3762  1EAA                     	;# 
  3763  1EB1                     	;# 
  3764  1EB2                     	;# 
  3765  1EB8                     	;# 
  3766  1EB9                     	;# 
  3767  1EBA                     	;# 
  3768  1EBB                     	;# 
  3769  1EBC                     	;# 
  3770  1EBD                     	;# 
  3771  1EBE                     	;# 
  3772  1EC3                     	;# 
  3773  1EC5                     	;# 
  3774  1EC6                     	;# 
  3775  1EC7                     	;# 
  3776  1EC8                     	;# 
  3777  1EC9                     	;# 
  3778  1ECA                     	;# 
  3779  1ECB                     	;# 
  3780  1ECB                     	;# 
  3781  1ECB                     	;# 
  3782  1ECC                     	;# 
  3783  1ECC                     	;# 
  3784  1ECC                     	;# 
  3785  1F10                     	;# 
  3786  1F11                     	;# 
  3787  1F12                     	;# 
  3788  1F14                     	;# 
  3789  1F15                     	;# 
  3790  1F1C                     	;# 
  3791  1F1D                     	;# 
  3792  1F1E                     	;# 
  3793  1F1F                     	;# 
  3794  1F20                     	;# 
  3795  1F21                     	;# 
  3796  1F22                     	;# 
  3797  1F23                     	;# 
  3798  1F24                     	;# 
  3799  1F25                     	;# 
  3800  1F26                     	;# 
  3801  1F27                     	;# 
  3802  1F38                     	;# 
  3803  1F39                     	;# 
  3804  1F3A                     	;# 
  3805  1F3B                     	;# 
  3806  1F3C                     	;# 
  3807  1F3D                     	;# 
  3808  1F3E                     	;# 
  3809  1F3F                     	;# 
  3810  1F43                     	;# 
  3811  1F44                     	;# 
  3812  1F45                     	;# 
  3813  1F46                     	;# 
  3814  1F47                     	;# 
  3815  1F48                     	;# 
  3816  1F49                     	;# 
  3817  1F4A                     	;# 
  3818  1F4E                     	;# 
  3819  1F4F                     	;# 
  3820  1F50                     	;# 
  3821  1F51                     	;# 
  3822  1F52                     	;# 
  3823  1F53                     	;# 
  3824  1F54                     	;# 
  3825  1F55                     	;# 
  3826  1FE4                     	;# 
  3827  1FE5                     	;# 
  3828  1FE6                     	;# 
  3829  1FE7                     	;# 
  3830  1FE8                     	;# 
  3831  1FE8                     	;# 
  3832  1FE9                     	;# 
  3833  1FEA                     	;# 
  3834  1FEB                     	;# 
  3835  1FED                     	;# 
  3836  1FEE                     	;# 
  3837  1FEF                     	;# 
  3838  0000                     	;# 
  3839  0001                     	;# 
  3840  0002                     	;# 
  3841  0003                     	;# 
  3842  0004                     	;# 
  3843  0005                     	;# 
  3844  0006                     	;# 
  3845  0007                     	;# 
  3846  0008                     	;# 
  3847  0009                     	;# 
  3848  000A                     	;# 
  3849  000B                     	;# 
  3850  000C                     	;# 
  3851  000D                     	;# 
  3852  000E                     	;# 
  3853  0012                     	;# 
  3854  0013                     	;# 
  3855  0014                     	;# 
  3856  0018                     	;# 
  3857  0019                     	;# 
  3858  001A                     	;# 
  3859  008C                     	;# 
  3860  008C                     	;# 
  3861  008D                     	;# 
  3862  008E                     	;# 
  3863  008E                     	;# 
  3864  008F                     	;# 
  3865  0090                     	;# 
  3866  0090                     	;# 
  3867  0091                     	;# 
  3868  0092                     	;# 
  3869  0092                     	;# 
  3870  0093                     	;# 
  3871  0094                     	;# 
  3872  0094                     	;# 
  3873  0095                     	;# 
  3874  0096                     	;# 
  3875  0096                     	;# 
  3876  0097                     	;# 
  3877  0098                     	;# 
  3878  0099                     	;# 
  3879  009A                     	;# 
  3880  009B                     	;# 
  3881  009B                     	;# 
  3882  009C                     	;# 
  3883  009D                     	;# 
  3884  009D                     	;# 
  3885  009E                     	;# 
  3886  009F                     	;# 
  3887  010C                     	;# 
  3888  010C                     	;# 
  3889  010D                     	;# 
  3890  010E                     	;# 
  3891  010F                     	;# 
  3892  010F                     	;# 
  3893  0110                     	;# 
  3894  0111                     	;# 
  3895  0112                     	;# 
  3896  0113                     	;# 
  3897  0114                     	;# 
  3898  0115                     	;# 
  3899  0116                     	;# 
  3900  0117                     	;# 
  3901  0118                     	;# 
  3902  0119                     	;# 
  3903  0119                     	;# 
  3904  0119                     	;# 
  3905  011A                     	;# 
  3906  011A                     	;# 
  3907  011A                     	;# 
  3908  011B                     	;# 
  3909  011B                     	;# 
  3910  011B                     	;# 
  3911  011B                     	;# 
  3912  011B                     	;# 
  3913  011C                     	;# 
  3914  011C                     	;# 
  3915  011C                     	;# 
  3916  011D                     	;# 
  3917  011D                     	;# 
  3918  011D                     	;# 
  3919  011E                     	;# 
  3920  011E                     	;# 
  3921  011E                     	;# 
  3922  011F                     	;# 
  3923  011F                     	;# 
  3924  011F                     	;# 
  3925  011F                     	;# 
  3926  011F                     	;# 
  3927  018C                     	;# 
  3928  018D                     	;# 
  3929  018E                     	;# 
  3930  018F                     	;# 
  3931  0190                     	;# 
  3932  0191                     	;# 
  3933  0192                     	;# 
  3934  0196                     	;# 
  3935  0197                     	;# 
  3936  0198                     	;# 
  3937  0199                     	;# 
  3938  019A                     	;# 
  3939  019B                     	;# 
  3940  019C                     	;# 
  3941  020C                     	;# 
  3942  020D                     	;# 
  3943  020E                     	;# 
  3944  020E                     	;# 
  3945  020F                     	;# 
  3946  020F                     	;# 
  3947  0210                     	;# 
  3948  0210                     	;# 
  3949  0211                     	;# 
  3950  0211                     	;# 
  3951  0212                     	;# 
  3952  0213                     	;# 
  3953  0214                     	;# 
  3954  0214                     	;# 
  3955  0215                     	;# 
  3956  0215                     	;# 
  3957  0216                     	;# 
  3958  0216                     	;# 
  3959  0217                     	;# 
  3960  0217                     	;# 
  3961  0218                     	;# 
  3962  0219                     	;# 
  3963  021A                     	;# 
  3964  021A                     	;# 
  3965  021B                     	;# 
  3966  021B                     	;# 
  3967  021C                     	;# 
  3968  021C                     	;# 
  3969  021D                     	;# 
  3970  021D                     	;# 
  3971  021E                     	;# 
  3972  021F                     	;# 
  3973  028C                     	;# 
  3974  028C                     	;# 
  3975  028D                     	;# 
  3976  028D                     	;# 
  3977  028E                     	;# 
  3978  028F                     	;# 
  3979  0290                     	;# 
  3980  0291                     	;# 
  3981  0292                     	;# 
  3982  0292                     	;# 
  3983  0293                     	;# 
  3984  0293                     	;# 
  3985  0294                     	;# 
  3986  0295                     	;# 
  3987  0296                     	;# 
  3988  0297                     	;# 
  3989  0298                     	;# 
  3990  0298                     	;# 
  3991  0299                     	;# 
  3992  0299                     	;# 
  3993  029A                     	;# 
  3994  029B                     	;# 
  3995  029C                     	;# 
  3996  029D                     	;# 
  3997  029F                     	;# 
  3998  030C                     	;# 
  3999  030C                     	;# 
  4000  030D                     	;# 
  4001  030E                     	;# 
  4002  030F                     	;# 
  4003  0310                     	;# 
  4004  0310                     	;# 
  4005  0311                     	;# 
  4006  0312                     	;# 
  4007  0313                     	;# 
  4008  0314                     	;# 
  4009  0314                     	;# 
  4010  0315                     	;# 
  4011  0316                     	;# 
  4012  0317                     	;# 
  4013  0318                     	;# 
  4014  0318                     	;# 
  4015  0319                     	;# 
  4016  031A                     	;# 
  4017  031B                     	;# 
  4018  038C                     	;# 
  4019  038C                     	;# 
  4020  038D                     	;# 
  4021  038E                     	;# 
  4022  0390                     	;# 
  4023  0390                     	;# 
  4024  0391                     	;# 
  4025  0392                     	;# 
  4026  048C                     	;# 
  4027  048C                     	;# 
  4028  048D                     	;# 
  4029  048E                     	;# 
  4030  048F                     	;# 
  4031  048F                     	;# 
  4032  0490                     	;# 
  4033  0491                     	;# 
  4034  0492                     	;# 
  4035  0492                     	;# 
  4036  0493                     	;# 
  4037  0494                     	;# 
  4038  0495                     	;# 
  4039  0495                     	;# 
  4040  0496                     	;# 
  4041  0497                     	;# 
  4042  0498                     	;# 
  4043  0499                     	;# 
  4044  049A                     	;# 
  4045  049B                     	;# 
  4046  049C                     	;# 
  4047  049D                     	;# 
  4048  058C                     	;# 
  4049  058C                     	;# 
  4050  058D                     	;# 
  4051  058E                     	;# 
  4052  058F                     	;# 
  4053  058F                     	;# 
  4054  0590                     	;# 
  4055  0591                     	;# 
  4056  0592                     	;# 
  4057  0593                     	;# 
  4058  059C                     	;# 
  4059  059C                     	;# 
  4060  059D                     	;# 
  4061  059D                     	;# 
  4062  059E                     	;# 
  4063  059F                     	;# 
  4064  060C                     	;# 
  4065  060C                     	;# 
  4066  060D                     	;# 
  4067  060D                     	;# 
  4068  060E                     	;# 
  4069  060F                     	;# 
  4070  0610                     	;# 
  4071  0611                     	;# 
  4072  0612                     	;# 
  4073  0613                     	;# 
  4074  0614                     	;# 
  4075  0616                     	;# 
  4076  0616                     	;# 
  4077  0617                     	;# 
  4078  0617                     	;# 
  4079  0618                     	;# 
  4080  0619                     	;# 
  4081  061A                     	;# 
  4082  061B                     	;# 
  4083  061C                     	;# 
  4084  061D                     	;# 
  4085  061E                     	;# 
  4086  070C                     	;# 
  4087  070D                     	;# 
  4088  070E                     	;# 
  4089  070F                     	;# 
  4090  0710                     	;# 
  4091  0711                     	;# 
  4092  0712                     	;# 
  4093  0713                     	;# 
  4094  0714                     	;# 
  4095  0716                     	;# 
  4096  0717                     	;# 
  4097  0718                     	;# 
  4098  0719                     	;# 
  4099  071A                     	;# 
  4100  071B                     	;# 
  4101  071C                     	;# 
  4102  071D                     	;# 
  4103  071E                     	;# 
  4104  0796                     	;# 
  4105  0797                     	;# 
  4106  0798                     	;# 
  4107  0799                     	;# 
  4108  079A                     	;# 
  4109  079B                     	;# 
  4110  079C                     	;# 
  4111  079D                     	;# 
  4112  080C                     	;# 
  4113  080D                     	;# 
  4114  080E                     	;# 
  4115  080F                     	;# 
  4116  0810                     	;# 
  4117  0811                     	;# 
  4118  0812                     	;# 
  4119  0813                     	;# 
  4120  0814                     	;# 
  4121  081A                     	;# 
  4122  081A                     	;# 
  4123  081B                     	;# 
  4124  081C                     	;# 
  4125  081C                     	;# 
  4126  081D                     	;# 
  4127  081E                     	;# 
  4128  081F                     	;# 
  4129  088C                     	;# 
  4130  088D                     	;# 
  4131  088E                     	;# 
  4132  088F                     	;# 
  4133  0890                     	;# 
  4134  0891                     	;# 
  4135  0892                     	;# 
  4136  0893                     	;# 
  4137  0895                     	;# 
  4138  0896                     	;# 
  4139  0897                     	;# 
  4140  0898                     	;# 
  4141  0899                     	;# 
  4142  089A                     	;# 
  4143  089B                     	;# 
  4144  090C                     	;# 
  4145  090E                     	;# 
  4146  090F                     	;# 
  4147  091F                     	;# 
  4148  098F                     	;# 
  4149  098F                     	;# 
  4150  0990                     	;# 
  4151  0991                     	;# 
  4152  0992                     	;# 
  4153  0993                     	;# 
  4154  0994                     	;# 
  4155  0995                     	;# 
  4156  0996                     	;# 
  4157  0997                     	;# 
  4158  1E0F                     	;# 
  4159  1E10                     	;# 
  4160  1E11                     	;# 
  4161  1E12                     	;# 
  4162  1E13                     	;# 
  4163  1E14                     	;# 
  4164  1E15                     	;# 
  4165  1E16                     	;# 
  4166  1E17                     	;# 
  4167  1E18                     	;# 
  4168  1E19                     	;# 
  4169  1E1A                     	;# 
  4170  1E1B                     	;# 
  4171  1E1C                     	;# 
  4172  1E1D                     	;# 
  4173  1E1E                     	;# 
  4174  1E1F                     	;# 
  4175  1E20                     	;# 
  4176  1E21                     	;# 
  4177  1E22                     	;# 
  4178  1E23                     	;# 
  4179  1E24                     	;# 
  4180  1E25                     	;# 
  4181  1E26                     	;# 
  4182  1E27                     	;# 
  4183  1E28                     	;# 
  4184  1E29                     	;# 
  4185  1E2A                     	;# 
  4186  1E2B                     	;# 
  4187  1E2C                     	;# 
  4188  1E2D                     	;# 
  4189  1E2E                     	;# 
  4190  1E2F                     	;# 
  4191  1E30                     	;# 
  4192  1E31                     	;# 
  4193  1E32                     	;# 
  4194  1E33                     	;# 
  4195  1E34                     	;# 
  4196  1E35                     	;# 
  4197  1E36                     	;# 
  4198  1E37                     	;# 
  4199  1E8F                     	;# 
  4200  1E90                     	;# 
  4201  1E91                     	;# 
  4202  1E92                     	;# 
  4203  1E93                     	;# 
  4204  1E94                     	;# 
  4205  1E95                     	;# 
  4206  1E96                     	;# 
  4207  1E97                     	;# 
  4208  1E9C                     	;# 
  4209  1E9D                     	;# 
  4210  1E9E                     	;# 
  4211  1EA1                     	;# 
  4212  1EA2                     	;# 
  4213  1EA3                     	;# 
  4214  1EA4                     	;# 
  4215  1EA9                     	;# 
  4216  1EAA                     	;# 
  4217  1EB1                     	;# 
  4218  1EB2                     	;# 
  4219  1EB8                     	;# 
  4220  1EB9                     	;# 
  4221  1EBA                     	;# 
  4222  1EBB                     	;# 
  4223  1EBC                     	;# 
  4224  1EBD                     	;# 
  4225  1EBE                     	;# 
  4226  1EC3                     	;# 
  4227  1EC5                     	;# 
  4228  1EC6                     	;# 
  4229  1EC7                     	;# 
  4230  1EC8                     	;# 
  4231  1EC9                     	;# 
  4232  1ECA                     	;# 
  4233  1ECB                     	;# 
  4234  1ECB                     	;# 
  4235  1ECB                     	;# 
  4236  1ECC                     	;# 
  4237  1ECC                     	;# 
  4238  1ECC                     	;# 
  4239  1F10                     	;# 
  4240  1F11                     	;# 
  4241  1F12                     	;# 
  4242  1F14                     	;# 
  4243  1F15                     	;# 
  4244  1F1C                     	;# 
  4245  1F1D                     	;# 
  4246  1F1E                     	;# 
  4247  1F1F                     	;# 
  4248  1F20                     	;# 
  4249  1F21                     	;# 
  4250  1F22                     	;# 
  4251  1F23                     	;# 
  4252  1F24                     	;# 
  4253  1F25                     	;# 
  4254  1F26                     	;# 
  4255  1F27                     	;# 
  4256  1F38                     	;# 
  4257  1F39                     	;# 
  4258  1F3A                     	;# 
  4259  1F3B                     	;# 
  4260  1F3C                     	;# 
  4261  1F3D                     	;# 
  4262  1F3E                     	;# 
  4263  1F3F                     	;# 
  4264  1F43                     	;# 
  4265  1F44                     	;# 
  4266  1F45                     	;# 
  4267  1F46                     	;# 
  4268  1F47                     	;# 
  4269  1F48                     	;# 
  4270  1F49                     	;# 
  4271  1F4A                     	;# 
  4272  1F4E                     	;# 
  4273  1F4F                     	;# 
  4274  1F50                     	;# 
  4275  1F51                     	;# 
  4276  1F52                     	;# 
  4277  1F53                     	;# 
  4278  1F54                     	;# 
  4279  1F55                     	;# 
  4280  1FE4                     	;# 
  4281  1FE5                     	;# 
  4282  1FE6                     	;# 
  4283  1FE7                     	;# 
  4284  1FE8                     	;# 
  4285  1FE8                     	;# 
  4286  1FE9                     	;# 
  4287  1FEA                     	;# 
  4288  1FEB                     	;# 
  4289  1FED                     	;# 
  4290  1FEE                     	;# 
  4291  1FEF                     	;# 
  4292  0000                     	;# 
  4293  0001                     	;# 
  4294  0002                     	;# 
  4295  0003                     	;# 
  4296  0004                     	;# 
  4297  0005                     	;# 
  4298  0006                     	;# 
  4299  0007                     	;# 
  4300  0008                     	;# 
  4301  0009                     	;# 
  4302  000A                     	;# 
  4303  000B                     	;# 
  4304  000C                     	;# 
  4305  000D                     	;# 
  4306  000E                     	;# 
  4307  0012                     	;# 
  4308  0013                     	;# 
  4309  0014                     	;# 
  4310  0018                     	;# 
  4311  0019                     	;# 
  4312  001A                     	;# 
  4313  008C                     	;# 
  4314  008C                     	;# 
  4315  008D                     	;# 
  4316  008E                     	;# 
  4317  008E                     	;# 
  4318  008F                     	;# 
  4319  0090                     	;# 
  4320  0090                     	;# 
  4321  0091                     	;# 
  4322  0092                     	;# 
  4323  0092                     	;# 
  4324  0093                     	;# 
  4325  0094                     	;# 
  4326  0094                     	;# 
  4327  0095                     	;# 
  4328  0096                     	;# 
  4329  0096                     	;# 
  4330  0097                     	;# 
  4331  0098                     	;# 
  4332  0099                     	;# 
  4333  009A                     	;# 
  4334  009B                     	;# 
  4335  009B                     	;# 
  4336  009C                     	;# 
  4337  009D                     	;# 
  4338  009D                     	;# 
  4339  009E                     	;# 
  4340  009F                     	;# 
  4341  010C                     	;# 
  4342  010C                     	;# 
  4343  010D                     	;# 
  4344  010E                     	;# 
  4345  010F                     	;# 
  4346  010F                     	;# 
  4347  0110                     	;# 
  4348  0111                     	;# 
  4349  0112                     	;# 
  4350  0113                     	;# 
  4351  0114                     	;# 
  4352  0115                     	;# 
  4353  0116                     	;# 
  4354  0117                     	;# 
  4355  0118                     	;# 
  4356  0119                     	;# 
  4357  0119                     	;# 
  4358  0119                     	;# 
  4359  011A                     	;# 
  4360  011A                     	;# 
  4361  011A                     	;# 
  4362  011B                     	;# 
  4363  011B                     	;# 
  4364  011B                     	;# 
  4365  011B                     	;# 
  4366  011B                     	;# 
  4367  011C                     	;# 
  4368  011C                     	;# 
  4369  011C                     	;# 
  4370  011D                     	;# 
  4371  011D                     	;# 
  4372  011D                     	;# 
  4373  011E                     	;# 
  4374  011E                     	;# 
  4375  011E                     	;# 
  4376  011F                     	;# 
  4377  011F                     	;# 
  4378  011F                     	;# 
  4379  011F                     	;# 
  4380  011F                     	;# 
  4381  018C                     	;# 
  4382  018D                     	;# 
  4383  018E                     	;# 
  4384  018F                     	;# 
  4385  0190                     	;# 
  4386  0191                     	;# 
  4387  0192                     	;# 
  4388  0196                     	;# 
  4389  0197                     	;# 
  4390  0198                     	;# 
  4391  0199                     	;# 
  4392  019A                     	;# 
  4393  019B                     	;# 
  4394  019C                     	;# 
  4395  020C                     	;# 
  4396  020D                     	;# 
  4397  020E                     	;# 
  4398  020E                     	;# 
  4399  020F                     	;# 
  4400  020F                     	;# 
  4401  0210                     	;# 
  4402  0210                     	;# 
  4403  0211                     	;# 
  4404  0211                     	;# 
  4405  0212                     	;# 
  4406  0213                     	;# 
  4407  0214                     	;# 
  4408  0214                     	;# 
  4409  0215                     	;# 
  4410  0215                     	;# 
  4411  0216                     	;# 
  4412  0216                     	;# 
  4413  0217                     	;# 
  4414  0217                     	;# 
  4415  0218                     	;# 
  4416  0219                     	;# 
  4417  021A                     	;# 
  4418  021A                     	;# 
  4419  021B                     	;# 
  4420  021B                     	;# 
  4421  021C                     	;# 
  4422  021C                     	;# 
  4423  021D                     	;# 
  4424  021D                     	;# 
  4425  021E                     	;# 
  4426  021F                     	;# 
  4427  028C                     	;# 
  4428  028C                     	;# 
  4429  028D                     	;# 
  4430  028D                     	;# 
  4431  028E                     	;# 
  4432  028F                     	;# 
  4433  0290                     	;# 
  4434  0291                     	;# 
  4435  0292                     	;# 
  4436  0292                     	;# 
  4437  0293                     	;# 
  4438  0293                     	;# 
  4439  0294                     	;# 
  4440  0295                     	;# 
  4441  0296                     	;# 
  4442  0297                     	;# 
  4443  0298                     	;# 
  4444  0298                     	;# 
  4445  0299                     	;# 
  4446  0299                     	;# 
  4447  029A                     	;# 
  4448  029B                     	;# 
  4449  029C                     	;# 
  4450  029D                     	;# 
  4451  029F                     	;# 
  4452  030C                     	;# 
  4453  030C                     	;# 
  4454  030D                     	;# 
  4455  030E                     	;# 
  4456  030F                     	;# 
  4457  0310                     	;# 
  4458  0310                     	;# 
  4459  0311                     	;# 
  4460  0312                     	;# 
  4461  0313                     	;# 
  4462  0314                     	;# 
  4463  0314                     	;# 
  4464  0315                     	;# 
  4465  0316                     	;# 
  4466  0317                     	;# 
  4467  0318                     	;# 
  4468  0318                     	;# 
  4469  0319                     	;# 
  4470  031A                     	;# 
  4471  031B                     	;# 
  4472  038C                     	;# 
  4473  038C                     	;# 
  4474  038D                     	;# 
  4475  038E                     	;# 
  4476  0390                     	;# 
  4477  0390                     	;# 
  4478  0391                     	;# 
  4479  0392                     	;# 
  4480  048C                     	;# 
  4481  048C                     	;# 
  4482  048D                     	;# 
  4483  048E                     	;# 
  4484  048F                     	;# 
  4485  048F                     	;# 
  4486  0490                     	;# 
  4487  0491                     	;# 
  4488  0492                     	;# 
  4489  0492                     	;# 
  4490  0493                     	;# 
  4491  0494                     	;# 
  4492  0495                     	;# 
  4493  0495                     	;# 
  4494  0496                     	;# 
  4495  0497                     	;# 
  4496  0498                     	;# 
  4497  0499                     	;# 
  4498  049A                     	;# 
  4499  049B                     	;# 
  4500  049C                     	;# 
  4501  049D                     	;# 
  4502  058C                     	;# 
  4503  058C                     	;# 
  4504  058D                     	;# 
  4505  058E                     	;# 
  4506  058F                     	;# 
  4507  058F                     	;# 
  4508  0590                     	;# 
  4509  0591                     	;# 
  4510  0592                     	;# 
  4511  0593                     	;# 
  4512  059C                     	;# 
  4513  059C                     	;# 
  4514  059D                     	;# 
  4515  059D                     	;# 
  4516  059E                     	;# 
  4517  059F                     	;# 
  4518  060C                     	;# 
  4519  060C                     	;# 
  4520  060D                     	;# 
  4521  060D                     	;# 
  4522  060E                     	;# 
  4523  060F                     	;# 
  4524  0610                     	;# 
  4525  0611                     	;# 
  4526  0612                     	;# 
  4527  0613                     	;# 
  4528  0614                     	;# 
  4529  0616                     	;# 
  4530  0616                     	;# 
  4531  0617                     	;# 
  4532  0617                     	;# 
  4533  0618                     	;# 
  4534  0619                     	;# 
  4535  061A                     	;# 
  4536  061B                     	;# 
  4537  061C                     	;# 
  4538  061D                     	;# 
  4539  061E                     	;# 
  4540  070C                     	;# 
  4541  070D                     	;# 
  4542  070E                     	;# 
  4543  070F                     	;# 
  4544  0710                     	;# 
  4545  0711                     	;# 
  4546  0712                     	;# 
  4547  0713                     	;# 
  4548  0714                     	;# 
  4549  0716                     	;# 
  4550  0717                     	;# 
  4551  0718                     	;# 
  4552  0719                     	;# 
  4553  071A                     	;# 
  4554  071B                     	;# 
  4555  071C                     	;# 
  4556  071D                     	;# 
  4557  071E                     	;# 
  4558  0796                     	;# 
  4559  0797                     	;# 
  4560  0798                     	;# 
  4561  0799                     	;# 
  4562  079A                     	;# 
  4563  079B                     	;# 
  4564  079C                     	;# 
  4565  079D                     	;# 
  4566  080C                     	;# 
  4567  080D                     	;# 
  4568  080E                     	;# 
  4569  080F                     	;# 
  4570  0810                     	;# 
  4571  0811                     	;# 
  4572  0812                     	;# 
  4573  0813                     	;# 
  4574  0814                     	;# 
  4575  081A                     	;# 
  4576  081A                     	;# 
  4577  081B                     	;# 
  4578  081C                     	;# 
  4579  081C                     	;# 
  4580  081D                     	;# 
  4581  081E                     	;# 
  4582  081F                     	;# 
  4583  088C                     	;# 
  4584  088D                     	;# 
  4585  088E                     	;# 
  4586  088F                     	;# 
  4587  0890                     	;# 
  4588  0891                     	;# 
  4589  0892                     	;# 
  4590  0893                     	;# 
  4591  0895                     	;# 
  4592  0896                     	;# 
  4593  0897                     	;# 
  4594  0898                     	;# 
  4595  0899                     	;# 
  4596  089A                     	;# 
  4597  089B                     	;# 
  4598  090C                     	;# 
  4599  090E                     	;# 
  4600  090F                     	;# 
  4601  091F                     	;# 
  4602  098F                     	;# 
  4603  098F                     	;# 
  4604  0990                     	;# 
  4605  0991                     	;# 
  4606  0992                     	;# 
  4607  0993                     	;# 
  4608  0994                     	;# 
  4609  0995                     	;# 
  4610  0996                     	;# 
  4611  0997                     	;# 
  4612  1E0F                     	;# 
  4613  1E10                     	;# 
  4614  1E11                     	;# 
  4615  1E12                     	;# 
  4616  1E13                     	;# 
  4617  1E14                     	;# 
  4618  1E15                     	;# 
  4619  1E16                     	;# 
  4620  1E17                     	;# 
  4621  1E18                     	;# 
  4622  1E19                     	;# 
  4623  1E1A                     	;# 
  4624  1E1B                     	;# 
  4625  1E1C                     	;# 
  4626  1E1D                     	;# 
  4627  1E1E                     	;# 
  4628  1E1F                     	;# 
  4629  1E20                     	;# 
  4630  1E21                     	;# 
  4631  1E22                     	;# 
  4632  1E23                     	;# 
  4633  1E24                     	;# 
  4634  1E25                     	;# 
  4635  1E26                     	;# 
  4636  1E27                     	;# 
  4637  1E28                     	;# 
  4638  1E29                     	;# 
  4639  1E2A                     	;# 
  4640  1E2B                     	;# 
  4641  1E2C                     	;# 
  4642  1E2D                     	;# 
  4643  1E2E                     	;# 
  4644  1E2F                     	;# 
  4645  1E30                     	;# 
  4646  1E31                     	;# 
  4647  1E32                     	;# 
  4648  1E33                     	;# 
  4649  1E34                     	;# 
  4650  1E35                     	;# 
  4651  1E36                     	;# 
  4652  1E37                     	;# 
  4653  1E8F                     	;# 
  4654  1E90                     	;# 
  4655  1E91                     	;# 
  4656  1E92                     	;# 
  4657  1E93                     	;# 
  4658  1E94                     	;# 
  4659  1E95                     	;# 
  4660  1E96                     	;# 
  4661  1E97                     	;# 
  4662  1E9C                     	;# 
  4663  1E9D                     	;# 
  4664  1E9E                     	;# 
  4665  1EA1                     	;# 
  4666  1EA2                     	;# 
  4667  1EA3                     	;# 
  4668  1EA4                     	;# 
  4669  1EA9                     	;# 
  4670  1EAA                     	;# 
  4671  1EB1                     	;# 
  4672  1EB2                     	;# 
  4673  1EB8                     	;# 
  4674  1EB9                     	;# 
  4675  1EBA                     	;# 
  4676  1EBB                     	;# 
  4677  1EBC                     	;# 
  4678  1EBD                     	;# 
  4679  1EBE                     	;# 
  4680  1EC3                     	;# 
  4681  1EC5                     	;# 
  4682  1EC6                     	;# 
  4683  1EC7                     	;# 
  4684  1EC8                     	;# 
  4685  1EC9                     	;# 
  4686  1ECA                     	;# 
  4687  1ECB                     	;# 
  4688  1ECB                     	;# 
  4689  1ECB                     	;# 
  4690  1ECC                     	;# 
  4691  1ECC                     	;# 
  4692  1ECC                     	;# 
  4693  1F10                     	;# 
  4694  1F11                     	;# 
  4695  1F12                     	;# 
  4696  1F14                     	;# 
  4697  1F15                     	;# 
  4698  1F1C                     	;# 
  4699  1F1D                     	;# 
  4700  1F1E                     	;# 
  4701  1F1F                     	;# 
  4702  1F20                     	;# 
  4703  1F21                     	;# 
  4704  1F22                     	;# 
  4705  1F23                     	;# 
  4706  1F24                     	;# 
  4707  1F25                     	;# 
  4708  1F26                     	;# 
  4709  1F27                     	;# 
  4710  1F38                     	;# 
  4711  1F39                     	;# 
  4712  1F3A                     	;# 
  4713  1F3B                     	;# 
  4714  1F3C                     	;# 
  4715  1F3D                     	;# 
  4716  1F3E                     	;# 
  4717  1F3F                     	;# 
  4718  1F43                     	;# 
  4719  1F44                     	;# 
  4720  1F45                     	;# 
  4721  1F46                     	;# 
  4722  1F47                     	;# 
  4723  1F48                     	;# 
  4724  1F49                     	;# 
  4725  1F4A                     	;# 
  4726  1F4E                     	;# 
  4727  1F4F                     	;# 
  4728  1F50                     	;# 
  4729  1F51                     	;# 
  4730  1F52                     	;# 
  4731  1F53                     	;# 
  4732  1F54                     	;# 
  4733  1F55                     	;# 
  4734  1FE4                     	;# 
  4735  1FE5                     	;# 
  4736  1FE6                     	;# 
  4737  1FE7                     	;# 
  4738  1FE8                     	;# 
  4739  1FE8                     	;# 
  4740  1FE9                     	;# 
  4741  1FEA                     	;# 
  4742  1FEB                     	;# 
  4743  1FED                     	;# 
  4744  1FEE                     	;# 
  4745  1FEF                     	;# 
  4746  0000                     	;# 
  4747  0001                     	;# 
  4748  0002                     	;# 
  4749  0003                     	;# 
  4750  0004                     	;# 
  4751  0005                     	;# 
  4752  0006                     	;# 
  4753  0007                     	;# 
  4754  0008                     	;# 
  4755  0009                     	;# 
  4756  000A                     	;# 
  4757  000B                     	;# 
  4758  000C                     	;# 
  4759  000D                     	;# 
  4760  000E                     	;# 
  4761  0012                     	;# 
  4762  0013                     	;# 
  4763  0014                     	;# 
  4764  0018                     	;# 
  4765  0019                     	;# 
  4766  001A                     	;# 
  4767  008C                     	;# 
  4768  008C                     	;# 
  4769  008D                     	;# 
  4770  008E                     	;# 
  4771  008E                     	;# 
  4772  008F                     	;# 
  4773  0090                     	;# 
  4774  0090                     	;# 
  4775  0091                     	;# 
  4776  0092                     	;# 
  4777  0092                     	;# 
  4778  0093                     	;# 
  4779  0094                     	;# 
  4780  0094                     	;# 
  4781  0095                     	;# 
  4782  0096                     	;# 
  4783  0096                     	;# 
  4784  0097                     	;# 
  4785  0098                     	;# 
  4786  0099                     	;# 
  4787  009A                     	;# 
  4788  009B                     	;# 
  4789  009B                     	;# 
  4790  009C                     	;# 
  4791  009D                     	;# 
  4792  009D                     	;# 
  4793  009E                     	;# 
  4794  009F                     	;# 
  4795  010C                     	;# 
  4796  010C                     	;# 
  4797  010D                     	;# 
  4798  010E                     	;# 
  4799  010F                     	;# 
  4800  010F                     	;# 
  4801  0110                     	;# 
  4802  0111                     	;# 
  4803  0112                     	;# 
  4804  0113                     	;# 
  4805  0114                     	;# 
  4806  0115                     	;# 
  4807  0116                     	;# 
  4808  0117                     	;# 
  4809  0118                     	;# 
  4810  0119                     	;# 
  4811  0119                     	;# 
  4812  0119                     	;# 
  4813  011A                     	;# 
  4814  011A                     	;# 
  4815  011A                     	;# 
  4816  011B                     	;# 
  4817  011B                     	;# 
  4818  011B                     	;# 
  4819  011B                     	;# 
  4820  011B                     	;# 
  4821  011C                     	;# 
  4822  011C                     	;# 
  4823  011C                     	;# 
  4824  011D                     	;# 
  4825  011D                     	;# 
  4826  011D                     	;# 
  4827  011E                     	;# 
  4828  011E                     	;# 
  4829  011E                     	;# 
  4830  011F                     	;# 
  4831  011F                     	;# 
  4832  011F                     	;# 
  4833  011F                     	;# 
  4834  011F                     	;# 
  4835  018C                     	;# 
  4836  018D                     	;# 
  4837  018E                     	;# 
  4838  018F                     	;# 
  4839  0190                     	;# 
  4840  0191                     	;# 
  4841  0192                     	;# 
  4842  0196                     	;# 
  4843  0197                     	;# 
  4844  0198                     	;# 
  4845  0199                     	;# 
  4846  019A                     	;# 
  4847  019B                     	;# 
  4848  019C                     	;# 
  4849  020C                     	;# 
  4850  020D                     	;# 
  4851  020E                     	;# 
  4852  020E                     	;# 
  4853  020F                     	;# 
  4854  020F                     	;# 
  4855  0210                     	;# 
  4856  0210                     	;# 
  4857  0211                     	;# 
  4858  0211                     	;# 
  4859  0212                     	;# 
  4860  0213                     	;# 
  4861  0214                     	;# 
  4862  0214                     	;# 
  4863  0215                     	;# 
  4864  0215                     	;# 
  4865  0216                     	;# 
  4866  0216                     	;# 
  4867  0217                     	;# 
  4868  0217                     	;# 
  4869  0218                     	;# 
  4870  0219                     	;# 
  4871  021A                     	;# 
  4872  021A                     	;# 
  4873  021B                     	;# 
  4874  021B                     	;# 
  4875  021C                     	;# 
  4876  021C                     	;# 
  4877  021D                     	;# 
  4878  021D                     	;# 
  4879  021E                     	;# 
  4880  021F                     	;# 
  4881  028C                     	;# 
  4882  028C                     	;# 
  4883  028D                     	;# 
  4884  028D                     	;# 
  4885  028E                     	;# 
  4886  028F                     	;# 
  4887  0290                     	;# 
  4888  0291                     	;# 
  4889  0292                     	;# 
  4890  0292                     	;# 
  4891  0293                     	;# 
  4892  0293                     	;# 
  4893  0294                     	;# 
  4894  0295                     	;# 
  4895  0296                     	;# 
  4896  0297                     	;# 
  4897  0298                     	;# 
  4898  0298                     	;# 
  4899  0299                     	;# 
  4900  0299                     	;# 
  4901  029A                     	;# 
  4902  029B                     	;# 
  4903  029C                     	;# 
  4904  029D                     	;# 
  4905  029F                     	;# 
  4906  030C                     	;# 
  4907  030C                     	;# 
  4908  030D                     	;# 
  4909  030E                     	;# 
  4910  030F                     	;# 
  4911  0310                     	;# 
  4912  0310                     	;# 
  4913  0311                     	;# 
  4914  0312                     	;# 
  4915  0313                     	;# 
  4916  0314                     	;# 
  4917  0314                     	;# 
  4918  0315                     	;# 
  4919  0316                     	;# 
  4920  0317                     	;# 
  4921  0318                     	;# 
  4922  0318                     	;# 
  4923  0319                     	;# 
  4924  031A                     	;# 
  4925  031B                     	;# 
  4926  038C                     	;# 
  4927  038C                     	;# 
  4928  038D                     	;# 
  4929  038E                     	;# 
  4930  0390                     	;# 
  4931  0390                     	;# 
  4932  0391                     	;# 
  4933  0392                     	;# 
  4934  048C                     	;# 
  4935  048C                     	;# 
  4936  048D                     	;# 
  4937  048E                     	;# 
  4938  048F                     	;# 
  4939  048F                     	;# 
  4940  0490                     	;# 
  4941  0491                     	;# 
  4942  0492                     	;# 
  4943  0492                     	;# 
  4944  0493                     	;# 
  4945  0494                     	;# 
  4946  0495                     	;# 
  4947  0495                     	;# 
  4948  0496                     	;# 
  4949  0497                     	;# 
  4950  0498                     	;# 
  4951  0499                     	;# 
  4952  049A                     	;# 
  4953  049B                     	;# 
  4954  049C                     	;# 
  4955  049D                     	;# 
  4956  058C                     	;# 
  4957  058C                     	;# 
  4958  058D                     	;# 
  4959  058E                     	;# 
  4960  058F                     	;# 
  4961  058F                     	;# 
  4962  0590                     	;# 
  4963  0591                     	;# 
  4964  0592                     	;# 
  4965  0593                     	;# 
  4966  059C                     	;# 
  4967  059C                     	;# 
  4968  059D                     	;# 
  4969  059D                     	;# 
  4970  059E                     	;# 
  4971  059F                     	;# 
  4972  060C                     	;# 
  4973  060C                     	;# 
  4974  060D                     	;# 
  4975  060D                     	;# 
  4976  060E                     	;# 
  4977  060F                     	;# 
  4978  0610                     	;# 
  4979  0611                     	;# 
  4980  0612                     	;# 
  4981  0613                     	;# 
  4982  0614                     	;# 
  4983  0616                     	;# 
  4984  0616                     	;# 
  4985  0617                     	;# 
  4986  0617                     	;# 
  4987  0618                     	;# 
  4988  0619                     	;# 
  4989  061A                     	;# 
  4990  061B                     	;# 
  4991  061C                     	;# 
  4992  061D                     	;# 
  4993  061E                     	;# 
  4994  070C                     	;# 
  4995  070D                     	;# 
  4996  070E                     	;# 
  4997  070F                     	;# 
  4998  0710                     	;# 
  4999  0711                     	;# 
  5000  0712                     	;# 
  5001  0713                     	;# 
  5002  0714                     	;# 
  5003  0716                     	;# 
  5004  0717                     	;# 
  5005  0718                     	;# 
  5006  0719                     	;# 
  5007  071A                     	;# 
  5008  071B                     	;# 
  5009  071C                     	;# 
  5010  071D                     	;# 
  5011  071E                     	;# 
  5012  0796                     	;# 
  5013  0797                     	;# 
  5014  0798                     	;# 
  5015  0799                     	;# 
  5016  079A                     	;# 
  5017  079B                     	;# 
  5018  079C                     	;# 
  5019  079D                     	;# 
  5020  080C                     	;# 
  5021  080D                     	;# 
  5022  080E                     	;# 
  5023  080F                     	;# 
  5024  0810                     	;# 
  5025  0811                     	;# 
  5026  0812                     	;# 
  5027  0813                     	;# 
  5028  0814                     	;# 
  5029  081A                     	;# 
  5030  081A                     	;# 
  5031  081B                     	;# 
  5032  081C                     	;# 
  5033  081C                     	;# 
  5034  081D                     	;# 
  5035  081E                     	;# 
  5036  081F                     	;# 
  5037  088C                     	;# 
  5038  088D                     	;# 
  5039  088E                     	;# 
  5040  088F                     	;# 
  5041  0890                     	;# 
  5042  0891                     	;# 
  5043  0892                     	;# 
  5044  0893                     	;# 
  5045  0895                     	;# 
  5046  0896                     	;# 
  5047  0897                     	;# 
  5048  0898                     	;# 
  5049  0899                     	;# 
  5050  089A                     	;# 
  5051  089B                     	;# 
  5052  090C                     	;# 
  5053  090E                     	;# 
  5054  090F                     	;# 
  5055  091F                     	;# 
  5056  098F                     	;# 
  5057  098F                     	;# 
  5058  0990                     	;# 
  5059  0991                     	;# 
  5060  0992                     	;# 
  5061  0993                     	;# 
  5062  0994                     	;# 
  5063  0995                     	;# 
  5064  0996                     	;# 
  5065  0997                     	;# 
  5066  1E0F                     	;# 
  5067  1E10                     	;# 
  5068  1E11                     	;# 
  5069  1E12                     	;# 
  5070  1E13                     	;# 
  5071  1E14                     	;# 
  5072  1E15                     	;# 
  5073  1E16                     	;# 
  5074  1E17                     	;# 
  5075  1E18                     	;# 
  5076  1E19                     	;# 
  5077  1E1A                     	;# 
  5078  1E1B                     	;# 
  5079  1E1C                     	;# 
  5080  1E1D                     	;# 
  5081  1E1E                     	;# 
  5082  1E1F                     	;# 
  5083  1E20                     	;# 
  5084  1E21                     	;# 
  5085  1E22                     	;# 
  5086  1E23                     	;# 
  5087  1E24                     	;# 
  5088  1E25                     	;# 
  5089  1E26                     	;# 
  5090  1E27                     	;# 
  5091  1E28                     	;# 
  5092  1E29                     	;# 
  5093  1E2A                     	;# 
  5094  1E2B                     	;# 
  5095  1E2C                     	;# 
  5096  1E2D                     	;# 
  5097  1E2E                     	;# 
  5098  1E2F                     	;# 
  5099  1E30                     	;# 
  5100  1E31                     	;# 
  5101  1E32                     	;# 
  5102  1E33                     	;# 
  5103  1E34                     	;# 
  5104  1E35                     	;# 
  5105  1E36                     	;# 
  5106  1E37                     	;# 
  5107  1E8F                     	;# 
  5108  1E90                     	;# 
  5109  1E91                     	;# 
  5110  1E92                     	;# 
  5111  1E93                     	;# 
  5112  1E94                     	;# 
  5113  1E95                     	;# 
  5114  1E96                     	;# 
  5115  1E97                     	;# 
  5116  1E9C                     	;# 
  5117  1E9D                     	;# 
  5118  1E9E                     	;# 
  5119  1EA1                     	;# 
  5120  1EA2                     	;# 
  5121  1EA3                     	;# 
  5122  1EA4                     	;# 
  5123  1EA9                     	;# 
  5124  1EAA                     	;# 
  5125  1EB1                     	;# 
  5126  1EB2                     	;# 
  5127  1EB8                     	;# 
  5128  1EB9                     	;# 
  5129  1EBA                     	;# 
  5130  1EBB                     	;# 
  5131  1EBC                     	;# 
  5132  1EBD                     	;# 
  5133  1EBE                     	;# 
  5134  1EC3                     	;# 
  5135  1EC5                     	;# 
  5136  1EC6                     	;# 
  5137  1EC7                     	;# 
  5138  1EC8                     	;# 
  5139  1EC9                     	;# 
  5140  1ECA                     	;# 
  5141  1ECB                     	;# 
  5142  1ECB                     	;# 
  5143  1ECB                     	;# 
  5144  1ECC                     	;# 
  5145  1ECC                     	;# 
  5146  1ECC                     	;# 
  5147  1F10                     	;# 
  5148  1F11                     	;# 
  5149  1F12                     	;# 
  5150  1F14                     	;# 
  5151  1F15                     	;# 
  5152  1F1C                     	;# 
  5153  1F1D                     	;# 
  5154  1F1E                     	;# 
  5155  1F1F                     	;# 
  5156  1F20                     	;# 
  5157  1F21                     	;# 
  5158  1F22                     	;# 
  5159  1F23                     	;# 
  5160  1F24                     	;# 
  5161  1F25                     	;# 
  5162  1F26                     	;# 
  5163  1F27                     	;# 
  5164  1F38                     	;# 
  5165  1F39                     	;# 
  5166  1F3A                     	;# 
  5167  1F3B                     	;# 
  5168  1F3C                     	;# 
  5169  1F3D                     	;# 
  5170  1F3E                     	;# 
  5171  1F3F                     	;# 
  5172  1F43                     	;# 
  5173  1F44                     	;# 
  5174  1F45                     	;# 
  5175  1F46                     	;# 
  5176  1F47                     	;# 
  5177  1F48                     	;# 
  5178  1F49                     	;# 
  5179  1F4A                     	;# 
  5180  1F4E                     	;# 
  5181  1F4F                     	;# 
  5182  1F50                     	;# 
  5183  1F51                     	;# 
  5184  1F52                     	;# 
  5185  1F53                     	;# 
  5186  1F54                     	;# 
  5187  1F55                     	;# 
  5188  1FE4                     	;# 
  5189  1FE5                     	;# 
  5190  1FE6                     	;# 
  5191  1FE7                     	;# 
  5192  1FE8                     	;# 
  5193  1FE8                     	;# 
  5194  1FE9                     	;# 
  5195  1FEA                     	;# 
  5196  1FEB                     	;# 
  5197  1FED                     	;# 
  5198  1FEE                     	;# 
  5199  1FEF                     	;# 
  5200  0000                     	;# 
  5201  0001                     	;# 
  5202  0002                     	;# 
  5203  0003                     	;# 
  5204  0004                     	;# 
  5205  0005                     	;# 
  5206  0006                     	;# 
  5207  0007                     	;# 
  5208  0008                     	;# 
  5209  0009                     	;# 
  5210  000A                     	;# 
  5211  000B                     	;# 
  5212  000C                     	;# 
  5213  000D                     	;# 
  5214  000E                     	;# 
  5215  0012                     	;# 
  5216  0013                     	;# 
  5217  0014                     	;# 
  5218  0018                     	;# 
  5219  0019                     	;# 
  5220  001A                     	;# 
  5221  008C                     	;# 
  5222  008C                     	;# 
  5223  008D                     	;# 
  5224  008E                     	;# 
  5225  008E                     	;# 
  5226  008F                     	;# 
  5227  0090                     	;# 
  5228  0090                     	;# 
  5229  0091                     	;# 
  5230  0092                     	;# 
  5231  0092                     	;# 
  5232  0093                     	;# 
  5233  0094                     	;# 
  5234  0094                     	;# 
  5235  0095                     	;# 
  5236  0096                     	;# 
  5237  0096                     	;# 
  5238  0097                     	;# 
  5239  0098                     	;# 
  5240  0099                     	;# 
  5241  009A                     	;# 
  5242  009B                     	;# 
  5243  009B                     	;# 
  5244  009C                     	;# 
  5245  009D                     	;# 
  5246  009D                     	;# 
  5247  009E                     	;# 
  5248  009F                     	;# 
  5249  010C                     	;# 
  5250  010C                     	;# 
  5251  010D                     	;# 
  5252  010E                     	;# 
  5253  010F                     	;# 
  5254  010F                     	;# 
  5255  0110                     	;# 
  5256  0111                     	;# 
  5257  0112                     	;# 
  5258  0113                     	;# 
  5259  0114                     	;# 
  5260  0115                     	;# 
  5261  0116                     	;# 
  5262  0117                     	;# 
  5263  0118                     	;# 
  5264  0119                     	;# 
  5265  0119                     	;# 
  5266  0119                     	;# 
  5267  011A                     	;# 
  5268  011A                     	;# 
  5269  011A                     	;# 
  5270  011B                     	;# 
  5271  011B                     	;# 
  5272  011B                     	;# 
  5273  011B                     	;# 
  5274  011B                     	;# 
  5275  011C                     	;# 
  5276  011C                     	;# 
  5277  011C                     	;# 
  5278  011D                     	;# 
  5279  011D                     	;# 
  5280  011D                     	;# 
  5281  011E                     	;# 
  5282  011E                     	;# 
  5283  011E                     	;# 
  5284  011F                     	;# 
  5285  011F                     	;# 
  5286  011F                     	;# 
  5287  011F                     	;# 
  5288  011F                     	;# 
  5289  018C                     	;# 
  5290  018D                     	;# 
  5291  018E                     	;# 
  5292  018F                     	;# 
  5293  0190                     	;# 
  5294  0191                     	;# 
  5295  0192                     	;# 
  5296  0196                     	;# 
  5297  0197                     	;# 
  5298  0198                     	;# 
  5299  0199                     	;# 
  5300  019A                     	;# 
  5301  019B                     	;# 
  5302  019C                     	;# 
  5303  020C                     	;# 
  5304  020D                     	;# 
  5305  020E                     	;# 
  5306  020E                     	;# 
  5307  020F                     	;# 
  5308  020F                     	;# 
  5309  0210                     	;# 
  5310  0210                     	;# 
  5311  0211                     	;# 
  5312  0211                     	;# 
  5313  0212                     	;# 
  5314  0213                     	;# 
  5315  0214                     	;# 
  5316  0214                     	;# 
  5317  0215                     	;# 
  5318  0215                     	;# 
  5319  0216                     	;# 
  5320  0216                     	;# 
  5321  0217                     	;# 
  5322  0217                     	;# 
  5323  0218                     	;# 
  5324  0219                     	;# 
  5325  021A                     	;# 
  5326  021A                     	;# 
  5327  021B                     	;# 
  5328  021B                     	;# 
  5329  021C                     	;# 
  5330  021C                     	;# 
  5331  021D                     	;# 
  5332  021D                     	;# 
  5333  021E                     	;# 
  5334  021F                     	;# 
  5335  028C                     	;# 
  5336  028C                     	;# 
  5337  028D                     	;# 
  5338  028D                     	;# 
  5339  028E                     	;# 
  5340  028F                     	;# 
  5341  0290                     	;# 
  5342  0291                     	;# 
  5343  0292                     	;# 
  5344  0292                     	;# 
  5345  0293                     	;# 
  5346  0293                     	;# 
  5347  0294                     	;# 
  5348  0295                     	;# 
  5349  0296                     	;# 
  5350  0297                     	;# 
  5351  0298                     	;# 
  5352  0298                     	;# 
  5353  0299                     	;# 
  5354  0299                     	;# 
  5355  029A                     	;# 
  5356  029B                     	;# 
  5357  029C                     	;# 
  5358  029D                     	;# 
  5359  029F                     	;# 
  5360  030C                     	;# 
  5361  030C                     	;# 
  5362  030D                     	;# 
  5363  030E                     	;# 
  5364  030F                     	;# 
  5365  0310                     	;# 
  5366  0310                     	;# 
  5367  0311                     	;# 
  5368  0312                     	;# 
  5369  0313                     	;# 
  5370  0314                     	;# 
  5371  0314                     	;# 
  5372  0315                     	;# 
  5373  0316                     	;# 
  5374  0317                     	;# 
  5375  0318                     	;# 
  5376  0318                     	;# 
  5377  0319                     	;# 
  5378  031A                     	;# 
  5379  031B                     	;# 
  5380  038C                     	;# 
  5381  038C                     	;# 
  5382  038D                     	;# 
  5383  038E                     	;# 
  5384  0390                     	;# 
  5385  0390                     	;# 
  5386  0391                     	;# 
  5387  0392                     	;# 
  5388  048C                     	;# 
  5389  048C                     	;# 
  5390  048D                     	;# 
  5391  048E                     	;# 
  5392  048F                     	;# 
  5393  048F                     	;# 
  5394  0490                     	;# 
  5395  0491                     	;# 
  5396  0492                     	;# 
  5397  0492                     	;# 
  5398  0493                     	;# 
  5399  0494                     	;# 
  5400  0495                     	;# 
  5401  0495                     	;# 
  5402  0496                     	;# 
  5403  0497                     	;# 
  5404  0498                     	;# 
  5405  0499                     	;# 
  5406  049A                     	;# 
  5407  049B                     	;# 
  5408  049C                     	;# 
  5409  049D                     	;# 
  5410  058C                     	;# 
  5411  058C                     	;# 
  5412  058D                     	;# 
  5413  058E                     	;# 
  5414  058F                     	;# 
  5415  058F                     	;# 
  5416  0590                     	;# 
  5417  0591                     	;# 
  5418  0592                     	;# 
  5419  0593                     	;# 
  5420  059C                     	;# 
  5421  059C                     	;# 
  5422  059D                     	;# 
  5423  059D                     	;# 
  5424  059E                     	;# 
  5425  059F                     	;# 
  5426  060C                     	;# 
  5427  060C                     	;# 
  5428  060D                     	;# 
  5429  060D                     	;# 
  5430  060E                     	;# 
  5431  060F                     	;# 
  5432  0610                     	;# 
  5433  0611                     	;# 
  5434  0612                     	;# 
  5435  0613                     	;# 
  5436  0614                     	;# 
  5437  0616                     	;# 
  5438  0616                     	;# 
  5439  0617                     	;# 
  5440  0617                     	;# 
  5441  0618                     	;# 
  5442  0619                     	;# 
  5443  061A                     	;# 
  5444  061B                     	;# 
  5445  061C                     	;# 
  5446  061D                     	;# 
  5447  061E                     	;# 
  5448  070C                     	;# 
  5449  070D                     	;# 
  5450  070E                     	;# 
  5451  070F                     	;# 
  5452  0710                     	;# 
  5453  0711                     	;# 
  5454  0712                     	;# 
  5455  0713                     	;# 
  5456  0714                     	;# 
  5457  0716                     	;# 
  5458  0717                     	;# 
  5459  0718                     	;# 
  5460  0719                     	;# 
  5461  071A                     	;# 
  5462  071B                     	;# 
  5463  071C                     	;# 
  5464  071D                     	;# 
  5465  071E                     	;# 
  5466  0796                     	;# 
  5467  0797                     	;# 
  5468  0798                     	;# 
  5469  0799                     	;# 
  5470  079A                     	;# 
  5471  079B                     	;# 
  5472  079C                     	;# 
  5473  079D                     	;# 
  5474  080C                     	;# 
  5475  080D                     	;# 
  5476  080E                     	;# 
  5477  080F                     	;# 
  5478  0810                     	;# 
  5479  0811                     	;# 
  5480  0812                     	;# 
  5481  0813                     	;# 
  5482  0814                     	;# 
  5483  081A                     	;# 
  5484  081A                     	;# 
  5485  081B                     	;# 
  5486  081C                     	;# 
  5487  081C                     	;# 
  5488  081D                     	;# 
  5489  081E                     	;# 
  5490  081F                     	;# 
  5491  088C                     	;# 
  5492  088D                     	;# 
  5493  088E                     	;# 
  5494  088F                     	;# 
  5495  0890                     	;# 
  5496  0891                     	;# 
  5497  0892                     	;# 
  5498  0893                     	;# 
  5499  0895                     	;# 
  5500  0896                     	;# 
  5501  0897                     	;# 
  5502  0898                     	;# 
  5503  0899                     	;# 
  5504  089A                     	;# 
  5505  089B                     	;# 
  5506  090C                     	;# 
  5507  090E                     	;# 
  5508  090F                     	;# 
  5509  091F                     	;# 
  5510  098F                     	;# 
  5511  098F                     	;# 
  5512  0990                     	;# 
  5513  0991                     	;# 
  5514  0992                     	;# 
  5515  0993                     	;# 
  5516  0994                     	;# 
  5517  0995                     	;# 
  5518  0996                     	;# 
  5519  0997                     	;# 
  5520  1E0F                     	;# 
  5521  1E10                     	;# 
  5522  1E11                     	;# 
  5523  1E12                     	;# 
  5524  1E13                     	;# 
  5525  1E14                     	;# 
  5526  1E15                     	;# 
  5527  1E16                     	;# 
  5528  1E17                     	;# 
  5529  1E18                     	;# 
  5530  1E19                     	;# 
  5531  1E1A                     	;# 
  5532  1E1B                     	;# 
  5533  1E1C                     	;# 
  5534  1E1D                     	;# 
  5535  1E1E                     	;# 
  5536  1E1F                     	;# 
  5537  1E20                     	;# 
  5538  1E21                     	;# 
  5539  1E22                     	;# 
  5540  1E23                     	;# 
  5541  1E24                     	;# 
  5542  1E25                     	;# 
  5543  1E26                     	;# 
  5544  1E27                     	;# 
  5545  1E28                     	;# 
  5546  1E29                     	;# 
  5547  1E2A                     	;# 
  5548  1E2B                     	;# 
  5549  1E2C                     	;# 
  5550  1E2D                     	;# 
  5551  1E2E                     	;# 
  5552  1E2F                     	;# 
  5553  1E30                     	;# 
  5554  1E31                     	;# 
  5555  1E32                     	;# 
  5556  1E33                     	;# 
  5557  1E34                     	;# 
  5558  1E35                     	;# 
  5559  1E36                     	;# 
  5560  1E37                     	;# 
  5561  1E8F                     	;# 
  5562  1E90                     	;# 
  5563  1E91                     	;# 
  5564  1E92                     	;# 
  5565  1E93                     	;# 
  5566  1E94                     	;# 
  5567  1E95                     	;# 
  5568  1E96                     	;# 
  5569  1E97                     	;# 
  5570  1E9C                     	;# 
  5571  1E9D                     	;# 
  5572  1E9E                     	;# 
  5573  1EA1                     	;# 
  5574  1EA2                     	;# 
  5575  1EA3                     	;# 
  5576  1EA4                     	;# 
  5577  1EA9                     	;# 
  5578  1EAA                     	;# 
  5579  1EB1                     	;# 
  5580  1EB2                     	;# 
  5581  1EB8                     	;# 
  5582  1EB9                     	;# 
  5583  1EBA                     	;# 
  5584  1EBB                     	;# 
  5585  1EBC                     	;# 
  5586  1EBD                     	;# 
  5587  1EBE                     	;# 
  5588  1EC3                     	;# 
  5589  1EC5                     	;# 
  5590  1EC6                     	;# 
  5591  1EC7                     	;# 
  5592  1EC8                     	;# 
  5593  1EC9                     	;# 
  5594  1ECA                     	;# 
  5595  1ECB                     	;# 
  5596  1ECB                     	;# 
  5597  1ECB                     	;# 
  5598  1ECC                     	;# 
  5599  1ECC                     	;# 
  5600  1ECC                     	;# 
  5601  1F10                     	;# 
  5602  1F11                     	;# 
  5603  1F12                     	;# 
  5604  1F14                     	;# 
  5605  1F15                     	;# 
  5606  1F1C                     	;# 
  5607  1F1D                     	;# 
  5608  1F1E                     	;# 
  5609  1F1F                     	;# 
  5610  1F20                     	;# 
  5611  1F21                     	;# 
  5612  1F22                     	;# 
  5613  1F23                     	;# 
  5614  1F24                     	;# 
  5615  1F25                     	;# 
  5616  1F26                     	;# 
  5617  1F27                     	;# 
  5618  1F38                     	;# 
  5619  1F39                     	;# 
  5620  1F3A                     	;# 
  5621  1F3B                     	;# 
  5622  1F3C                     	;# 
  5623  1F3D                     	;# 
  5624  1F3E                     	;# 
  5625  1F3F                     	;# 
  5626  1F43                     	;# 
  5627  1F44                     	;# 
  5628  1F45                     	;# 
  5629  1F46                     	;# 
  5630  1F47                     	;# 
  5631  1F48                     	;# 
  5632  1F49                     	;# 
  5633  1F4A                     	;# 
  5634  1F4E                     	;# 
  5635  1F4F                     	;# 
  5636  1F50                     	;# 
  5637  1F51                     	;# 
  5638  1F52                     	;# 
  5639  1F53                     	;# 
  5640  1F54                     	;# 
  5641  1F55                     	;# 
  5642  1FE4                     	;# 
  5643  1FE5                     	;# 
  5644  1FE6                     	;# 
  5645  1FE7                     	;# 
  5646  1FE8                     	;# 
  5647  1FE8                     	;# 
  5648  1FE9                     	;# 
  5649  1FEA                     	;# 
  5650  1FEB                     	;# 
  5651  1FED                     	;# 
  5652  1FEE                     	;# 
  5653  1FEF                     	;# 
  5654  0000                     	;# 
  5655  0001                     	;# 
  5656  0002                     	;# 
  5657  0003                     	;# 
  5658  0004                     	;# 
  5659  0005                     	;# 
  5660  0006                     	;# 
  5661  0007                     	;# 
  5662  0008                     	;# 
  5663  0009                     	;# 
  5664  000A                     	;# 
  5665  000B                     	;# 
  5666  000C                     	;# 
  5667  000D                     	;# 
  5668  000E                     	;# 
  5669  0012                     	;# 
  5670  0013                     	;# 
  5671  0014                     	;# 
  5672  0018                     	;# 
  5673  0019                     	;# 
  5674  001A                     	;# 
  5675  008C                     	;# 
  5676  008C                     	;# 
  5677  008D                     	;# 
  5678  008E                     	;# 
  5679  008E                     	;# 
  5680  008F                     	;# 
  5681  0090                     	;# 
  5682  0090                     	;# 
  5683  0091                     	;# 
  5684  0092                     	;# 
  5685  0092                     	;# 
  5686  0093                     	;# 
  5687  0094                     	;# 
  5688  0094                     	;# 
  5689  0095                     	;# 
  5690  0096                     	;# 
  5691  0096                     	;# 
  5692  0097                     	;# 
  5693  0098                     	;# 
  5694  0099                     	;# 
  5695  009A                     	;# 
  5696  009B                     	;# 
  5697  009B                     	;# 
  5698  009C                     	;# 
  5699  009D                     	;# 
  5700  009D                     	;# 
  5701  009E                     	;# 
  5702  009F                     	;# 
  5703  010C                     	;# 
  5704  010C                     	;# 
  5705  010D                     	;# 
  5706  010E                     	;# 
  5707  010F                     	;# 
  5708  010F                     	;# 
  5709  0110                     	;# 
  5710  0111                     	;# 
  5711  0112                     	;# 
  5712  0113                     	;# 
  5713  0114                     	;# 
  5714  0115                     	;# 
  5715  0116                     	;# 
  5716  0117                     	;# 
  5717  0118                     	;# 
  5718  0119                     	;# 
  5719  0119                     	;# 
  5720  0119                     	;# 
  5721  011A                     	;# 
  5722  011A                     	;# 
  5723  011A                     	;# 
  5724  011B                     	;# 
  5725  011B                     	;# 
  5726  011B                     	;# 
  5727  011B                     	;# 
  5728  011B                     	;# 
  5729  011C                     	;# 
  5730  011C                     	;# 
  5731  011C                     	;# 
  5732  011D                     	;# 
  5733  011D                     	;# 
  5734  011D                     	;# 
  5735  011E                     	;# 
  5736  011E                     	;# 
  5737  011E                     	;# 
  5738  011F                     	;# 
  5739  011F                     	;# 
  5740  011F                     	;# 
  5741  011F                     	;# 
  5742  011F                     	;# 
  5743  018C                     	;# 
  5744  018D                     	;# 
  5745  018E                     	;# 
  5746  018F                     	;# 
  5747  0190                     	;# 
  5748  0191                     	;# 
  5749  0192                     	;# 
  5750  0196                     	;# 
  5751  0197                     	;# 
  5752  0198                     	;# 
  5753  0199                     	;# 
  5754  019A                     	;# 
  5755  019B                     	;# 
  5756  019C                     	;# 
  5757  020C                     	;# 
  5758  020D                     	;# 
  5759  020E                     	;# 
  5760  020E                     	;# 
  5761  020F                     	;# 
  5762  020F                     	;# 
  5763  0210                     	;# 
  5764  0210                     	;# 
  5765  0211                     	;# 
  5766  0211                     	;# 
  5767  0212                     	;# 
  5768  0213                     	;# 
  5769  0214                     	;# 
  5770  0214                     	;# 
  5771  0215                     	;# 
  5772  0215                     	;# 
  5773  0216                     	;# 
  5774  0216                     	;# 
  5775  0217                     	;# 
  5776  0217                     	;# 
  5777  0218                     	;# 
  5778  0219                     	;# 
  5779  021A                     	;# 
  5780  021A                     	;# 
  5781  021B                     	;# 
  5782  021B                     	;# 
  5783  021C                     	;# 
  5784  021C                     	;# 
  5785  021D                     	;# 
  5786  021D                     	;# 
  5787  021E                     	;# 
  5788  021F                     	;# 
  5789  028C                     	;# 
  5790  028C                     	;# 
  5791  028D                     	;# 
  5792  028D                     	;# 
  5793  028E                     	;# 
  5794  028F                     	;# 
  5795  0290                     	;# 
  5796  0291                     	;# 
  5797  0292                     	;# 
  5798  0292                     	;# 
  5799  0293                     	;# 
  5800  0293                     	;# 
  5801  0294                     	;# 
  5802  0295                     	;# 
  5803  0296                     	;# 
  5804  0297                     	;# 
  5805  0298                     	;# 
  5806  0298                     	;# 
  5807  0299                     	;# 
  5808  0299                     	;# 
  5809  029A                     	;# 
  5810  029B                     	;# 
  5811  029C                     	;# 
  5812  029D                     	;# 
  5813  029F                     	;# 
  5814  030C                     	;# 
  5815  030C                     	;# 
  5816  030D                     	;# 
  5817  030E                     	;# 
  5818  030F                     	;# 
  5819  0310                     	;# 
  5820  0310                     	;# 
  5821  0311                     	;# 
  5822  0312                     	;# 
  5823  0313                     	;# 
  5824  0314                     	;# 
  5825  0314                     	;# 
  5826  0315                     	;# 
  5827  0316                     	;# 
  5828  0317                     	;# 
  5829  0318                     	;# 
  5830  0318                     	;# 
  5831  0319                     	;# 
  5832  031A                     	;# 
  5833  031B                     	;# 
  5834  038C                     	;# 
  5835  038C                     	;# 
  5836  038D                     	;# 
  5837  038E                     	;# 
  5838  0390                     	;# 
  5839  0390                     	;# 
  5840  0391                     	;# 
  5841  0392                     	;# 
  5842  048C                     	;# 
  5843  048C                     	;# 
  5844  048D                     	;# 
  5845  048E                     	;# 
  5846  048F                     	;# 
  5847  048F                     	;# 
  5848  0490                     	;# 
  5849  0491                     	;# 
  5850  0492                     	;# 
  5851  0492                     	;# 
  5852  0493                     	;# 
  5853  0494                     	;# 
  5854  0495                     	;# 
  5855  0495                     	;# 
  5856  0496                     	;# 
  5857  0497                     	;# 
  5858  0498                     	;# 
  5859  0499                     	;# 
  5860  049A                     	;# 
  5861  049B                     	;# 
  5862  049C                     	;# 
  5863  049D                     	;# 
  5864  058C                     	;# 
  5865  058C                     	;# 
  5866  058D                     	;# 
  5867  058E                     	;# 
  5868  058F                     	;# 
  5869  058F                     	;# 
  5870  0590                     	;# 
  5871  0591                     	;# 
  5872  0592                     	;# 
  5873  0593                     	;# 
  5874  059C                     	;# 
  5875  059C                     	;# 
  5876  059D                     	;# 
  5877  059D                     	;# 
  5878  059E                     	;# 
  5879  059F                     	;# 
  5880  060C                     	;# 
  5881  060C                     	;# 
  5882  060D                     	;# 
  5883  060D                     	;# 
  5884  060E                     	;# 
  5885  060F                     	;# 
  5886  0610                     	;# 
  5887  0611                     	;# 
  5888  0612                     	;# 
  5889  0613                     	;# 
  5890  0614                     	;# 
  5891  0616                     	;# 
  5892  0616                     	;# 
  5893  0617                     	;# 
  5894  0617                     	;# 
  5895  0618                     	;# 
  5896  0619                     	;# 
  5897  061A                     	;# 
  5898  061B                     	;# 
  5899  061C                     	;# 
  5900  061D                     	;# 
  5901  061E                     	;# 
  5902  070C                     	;# 
  5903  070D                     	;# 
  5904  070E                     	;# 
  5905  070F                     	;# 
  5906  0710                     	;# 
  5907  0711                     	;# 
  5908  0712                     	;# 
  5909  0713                     	;# 
  5910  0714                     	;# 
  5911  0716                     	;# 
  5912  0717                     	;# 
  5913  0718                     	;# 
  5914  0719                     	;# 
  5915  071A                     	;# 
  5916  071B                     	;# 
  5917  071C                     	;# 
  5918  071D                     	;# 
  5919  071E                     	;# 
  5920  0796                     	;# 
  5921  0797                     	;# 
  5922  0798                     	;# 
  5923  0799                     	;# 
  5924  079A                     	;# 
  5925  079B                     	;# 
  5926  079C                     	;# 
  5927  079D                     	;# 
  5928  080C                     	;# 
  5929  080D                     	;# 
  5930  080E                     	;# 
  5931  080F                     	;# 
  5932  0810                     	;# 
  5933  0811                     	;# 
  5934  0812                     	;# 
  5935  0813                     	;# 
  5936  0814                     	;# 
  5937  081A                     	;# 
  5938  081A                     	;# 
  5939  081B                     	;# 
  5940  081C                     	;# 
  5941  081C                     	;# 
  5942  081D                     	;# 
  5943  081E                     	;# 
  5944  081F                     	;# 
  5945  088C                     	;# 
  5946  088D                     	;# 
  5947  088E                     	;# 
  5948  088F                     	;# 
  5949  0890                     	;# 
  5950  0891                     	;# 
  5951  0892                     	;# 
  5952  0893                     	;# 
  5953  0895                     	;# 
  5954  0896                     	;# 
  5955  0897                     	;# 
  5956  0898                     	;# 
  5957  0899                     	;# 
  5958  089A                     	;# 
  5959  089B                     	;# 
  5960  090C                     	;# 
  5961  090E                     	;# 
  5962  090F                     	;# 
  5963  091F                     	;# 
  5964  098F                     	;# 
  5965  098F                     	;# 
  5966  0990                     	;# 
  5967  0991                     	;# 
  5968  0992                     	;# 
  5969  0993                     	;# 
  5970  0994                     	;# 
  5971  0995                     	;# 
  5972  0996                     	;# 
  5973  0997                     	;# 
  5974  1E0F                     	;# 
  5975  1E10                     	;# 
  5976  1E11                     	;# 
  5977  1E12                     	;# 
  5978  1E13                     	;# 
  5979  1E14                     	;# 
  5980  1E15                     	;# 
  5981  1E16                     	;# 
  5982  1E17                     	;# 
  5983  1E18                     	;# 
  5984  1E19                     	;# 
  5985  1E1A                     	;# 
  5986  1E1B                     	;# 
  5987  1E1C                     	;# 
  5988  1E1D                     	;# 
  5989  1E1E                     	;# 
  5990  1E1F                     	;# 
  5991  1E20                     	;# 
  5992  1E21                     	;# 
  5993  1E22                     	;# 
  5994  1E23                     	;# 
  5995  1E24                     	;# 
  5996  1E25                     	;# 
  5997  1E26                     	;# 
  5998  1E27                     	;# 
  5999  1E28                     	;# 
  6000  1E29                     	;# 
  6001  1E2A                     	;# 
  6002  1E2B                     	;# 
  6003  1E2C                     	;# 
  6004  1E2D                     	;# 
  6005  1E2E                     	;# 
  6006  1E2F                     	;# 
  6007  1E30                     	;# 
  6008  1E31                     	;# 
  6009  1E32                     	;# 
  6010  1E33                     	;# 
  6011  1E34                     	;# 
  6012  1E35                     	;# 
  6013  1E36                     	;# 
  6014  1E37                     	;# 
  6015  1E8F                     	;# 
  6016  1E90                     	;# 
  6017  1E91                     	;# 
  6018  1E92                     	;# 
  6019  1E93                     	;# 
  6020  1E94                     	;# 
  6021  1E95                     	;# 
  6022  1E96                     	;# 
  6023  1E97                     	;# 
  6024  1E9C                     	;# 
  6025  1E9D                     	;# 
  6026  1E9E                     	;# 
  6027  1EA1                     	;# 
  6028  1EA2                     	;# 
  6029  1EA3                     	;# 
  6030  1EA4                     	;# 
  6031  1EA9                     	;# 
  6032  1EAA                     	;# 
  6033  1EB1                     	;# 
  6034  1EB2                     	;# 
  6035  1EB8                     	;# 
  6036  1EB9                     	;# 
  6037  1EBA                     	;# 
  6038  1EBB                     	;# 
  6039  1EBC                     	;# 
  6040  1EBD                     	;# 
  6041  1EBE                     	;# 
  6042  1EC3                     	;# 
  6043  1EC5                     	;# 
  6044  1EC6                     	;# 
  6045  1EC7                     	;# 
  6046  1EC8                     	;# 
  6047  1EC9                     	;# 
  6048  1ECA                     	;# 
  6049  1ECB                     	;# 
  6050  1ECB                     	;# 
  6051  1ECB                     	;# 
  6052  1ECC                     	;# 
  6053  1ECC                     	;# 
  6054  1ECC                     	;# 
  6055  1F10                     	;# 
  6056  1F11                     	;# 
  6057  1F12                     	;# 
  6058  1F14                     	;# 
  6059  1F15                     	;# 
  6060  1F1C                     	;# 
  6061  1F1D                     	;# 
  6062  1F1E                     	;# 
  6063  1F1F                     	;# 
  6064  1F20                     	;# 
  6065  1F21                     	;# 
  6066  1F22                     	;# 
  6067  1F23                     	;# 
  6068  1F24                     	;# 
  6069  1F25                     	;# 
  6070  1F26                     	;# 
  6071  1F27                     	;# 
  6072  1F38                     	;# 
  6073  1F39                     	;# 
  6074  1F3A                     	;# 
  6075  1F3B                     	;# 
  6076  1F3C                     	;# 
  6077  1F3D                     	;# 
  6078  1F3E                     	;# 
  6079  1F3F                     	;# 
  6080  1F43                     	;# 
  6081  1F44                     	;# 
  6082  1F45                     	;# 
  6083  1F46                     	;# 
  6084  1F47                     	;# 
  6085  1F48                     	;# 
  6086  1F49                     	;# 
  6087  1F4A                     	;# 
  6088  1F4E                     	;# 
  6089  1F4F                     	;# 
  6090  1F50                     	;# 
  6091  1F51                     	;# 
  6092  1F52                     	;# 
  6093  1F53                     	;# 
  6094  1F54                     	;# 
  6095  1F55                     	;# 
  6096  1FE4                     	;# 
  6097  1FE5                     	;# 
  6098  1FE6                     	;# 
  6099  1FE7                     	;# 
  6100  1FE8                     	;# 
  6101  1FE8                     	;# 
  6102  1FE9                     	;# 
  6103  1FEA                     	;# 
  6104  1FEB                     	;# 
  6105  1FED                     	;# 
  6106  1FEE                     	;# 
  6107  1FEF                     	;# 
  6108  0000                     	;# 
  6109  0001                     	;# 
  6110  0002                     	;# 
  6111  0003                     	;# 
  6112  0004                     	;# 
  6113  0005                     	;# 
  6114  0006                     	;# 
  6115  0007                     	;# 
  6116  0008                     	;# 
  6117  0009                     	;# 
  6118  000A                     	;# 
  6119  000B                     	;# 
  6120  000C                     	;# 
  6121  000D                     	;# 
  6122  000E                     	;# 
  6123  0012                     	;# 
  6124  0013                     	;# 
  6125  0014                     	;# 
  6126  0018                     	;# 
  6127  0019                     	;# 
  6128  001A                     	;# 
  6129  008C                     	;# 
  6130  008C                     	;# 
  6131  008D                     	;# 
  6132  008E                     	;# 
  6133  008E                     	;# 
  6134  008F                     	;# 
  6135  0090                     	;# 
  6136  0090                     	;# 
  6137  0091                     	;# 
  6138  0092                     	;# 
  6139  0092                     	;# 
  6140  0093                     	;# 
  6141  0094                     	;# 
  6142  0094                     	;# 
  6143  0095                     	;# 
  6144  0096                     	;# 
  6145  0096                     	;# 
  6146  0097                     	;# 
  6147  0098                     	;# 
  6148  0099                     	;# 
  6149  009A                     	;# 
  6150  009B                     	;# 
  6151  009B                     	;# 
  6152  009C                     	;# 
  6153  009D                     	;# 
  6154  009D                     	;# 
  6155  009E                     	;# 
  6156  009F                     	;# 
  6157  010C                     	;# 
  6158  010C                     	;# 
  6159  010D                     	;# 
  6160  010E                     	;# 
  6161  010F                     	;# 
  6162  010F                     	;# 
  6163  0110                     	;# 
  6164  0111                     	;# 
  6165  0112                     	;# 
  6166  0113                     	;# 
  6167  0114                     	;# 
  6168  0115                     	;# 
  6169  0116                     	;# 
  6170  0117                     	;# 
  6171  0118                     	;# 
  6172  0119                     	;# 
  6173  0119                     	;# 
  6174  0119                     	;# 
  6175  011A                     	;# 
  6176  011A                     	;# 
  6177  011A                     	;# 
  6178  011B                     	;# 
  6179  011B                     	;# 
  6180  011B                     	;# 
  6181  011B                     	;# 
  6182  011B                     	;# 
  6183  011C                     	;# 
  6184  011C                     	;# 
  6185  011C                     	;# 
  6186  011D                     	;# 
  6187  011D                     	;# 
  6188  011D                     	;# 
  6189  011E                     	;# 
  6190  011E                     	;# 
  6191  011E                     	;# 
  6192  011F                     	;# 
  6193  011F                     	;# 
  6194  011F                     	;# 
  6195  011F                     	;# 
  6196  011F                     	;# 
  6197  018C                     	;# 
  6198  018D                     	;# 
  6199  018E                     	;# 
  6200  018F                     	;# 
  6201  0190                     	;# 
  6202  0191                     	;# 
  6203  0192                     	;# 
  6204  0196                     	;# 
  6205  0197                     	;# 
  6206  0198                     	;# 
  6207  0199                     	;# 
  6208  019A                     	;# 
  6209  019B                     	;# 
  6210  019C                     	;# 
  6211  020C                     	;# 
  6212  020D                     	;# 
  6213  020E                     	;# 
  6214  020E                     	;# 
  6215  020F                     	;# 
  6216  020F                     	;# 
  6217  0210                     	;# 
  6218  0210                     	;# 
  6219  0211                     	;# 
  6220  0211                     	;# 
  6221  0212                     	;# 
  6222  0213                     	;# 
  6223  0214                     	;# 
  6224  0214                     	;# 
  6225  0215                     	;# 
  6226  0215                     	;# 
  6227  0216                     	;# 
  6228  0216                     	;# 
  6229  0217                     	;# 
  6230  0217                     	;# 
  6231  0218                     	;# 
  6232  0219                     	;# 
  6233  021A                     	;# 
  6234  021A                     	;# 
  6235  021B                     	;# 
  6236  021B                     	;# 
  6237  021C                     	;# 
  6238  021C                     	;# 
  6239  021D                     	;# 
  6240  021D                     	;# 
  6241  021E                     	;# 
  6242  021F                     	;# 
  6243  028C                     	;# 
  6244  028C                     	;# 
  6245  028D                     	;# 
  6246  028D                     	;# 
  6247  028E                     	;# 
  6248  028F                     	;# 
  6249  0290                     	;# 
  6250  0291                     	;# 
  6251  0292                     	;# 
  6252  0292                     	;# 
  6253  0293                     	;# 
  6254  0293                     	;# 
  6255  0294                     	;# 
  6256  0295                     	;# 
  6257  0296                     	;# 
  6258  0297                     	;# 
  6259  0298                     	;# 
  6260  0298                     	;# 
  6261  0299                     	;# 
  6262  0299                     	;# 
  6263  029A                     	;# 
  6264  029B                     	;# 
  6265  029C                     	;# 
  6266  029D                     	;# 
  6267  029F                     	;# 
  6268  030C                     	;# 
  6269  030C                     	;# 
  6270  030D                     	;# 
  6271  030E                     	;# 
  6272  030F                     	;# 
  6273  0310                     	;# 
  6274  0310                     	;# 
  6275  0311                     	;# 
  6276  0312                     	;# 
  6277  0313                     	;# 
  6278  0314                     	;# 
  6279  0314                     	;# 
  6280  0315                     	;# 
  6281  0316                     	;# 
  6282  0317                     	;# 
  6283  0318                     	;# 
  6284  0318                     	;# 
  6285  0319                     	;# 
  6286  031A                     	;# 
  6287  031B                     	;# 
  6288  038C                     	;# 
  6289  038C                     	;# 
  6290  038D                     	;# 
  6291  038E                     	;# 
  6292  0390                     	;# 
  6293  0390                     	;# 
  6294  0391                     	;# 
  6295  0392                     	;# 
  6296  048C                     	;# 
  6297  048C                     	;# 
  6298  048D                     	;# 
  6299  048E                     	;# 
  6300  048F                     	;# 
  6301  048F                     	;# 
  6302  0490                     	;# 
  6303  0491                     	;# 
  6304  0492                     	;# 
  6305  0492                     	;# 
  6306  0493                     	;# 
  6307  0494                     	;# 
  6308  0495                     	;# 
  6309  0495                     	;# 
  6310  0496                     	;# 
  6311  0497                     	;# 
  6312  0498                     	;# 
  6313  0499                     	;# 
  6314  049A                     	;# 
  6315  049B                     	;# 
  6316  049C                     	;# 
  6317  049D                     	;# 
  6318  058C                     	;# 
  6319  058C                     	;# 
  6320  058D                     	;# 
  6321  058E                     	;# 
  6322  058F                     	;# 
  6323  058F                     	;# 
  6324  0590                     	;# 
  6325  0591                     	;# 
  6326  0592                     	;# 
  6327  0593                     	;# 
  6328  059C                     	;# 
  6329  059C                     	;# 
  6330  059D                     	;# 
  6331  059D                     	;# 
  6332  059E                     	;# 
  6333  059F                     	;# 
  6334  060C                     	;# 
  6335  060C                     	;# 
  6336  060D                     	;# 
  6337  060D                     	;# 
  6338  060E                     	;# 
  6339  060F                     	;# 
  6340  0610                     	;# 
  6341  0611                     	;# 
  6342  0612                     	;# 
  6343  0613                     	;# 
  6344  0614                     	;# 
  6345  0616                     	;# 
  6346  0616                     	;# 
  6347  0617                     	;# 
  6348  0617                     	;# 
  6349  0618                     	;# 
  6350  0619                     	;# 
  6351  061A                     	;# 
  6352  061B                     	;# 
  6353  061C                     	;# 
  6354  061D                     	;# 
  6355  061E                     	;# 
  6356  070C                     	;# 
  6357  070D                     	;# 
  6358  070E                     	;# 
  6359  070F                     	;# 
  6360  0710                     	;# 
  6361  0711                     	;# 
  6362  0712                     	;# 
  6363  0713                     	;# 
  6364  0714                     	;# 
  6365  0716                     	;# 
  6366  0717                     	;# 
  6367  0718                     	;# 
  6368  0719                     	;# 
  6369  071A                     	;# 
  6370  071B                     	;# 
  6371  071C                     	;# 
  6372  071D                     	;# 
  6373  071E                     	;# 
  6374  0796                     	;# 
  6375  0797                     	;# 
  6376  0798                     	;# 
  6377  0799                     	;# 
  6378  079A                     	;# 
  6379  079B                     	;# 
  6380  079C                     	;# 
  6381  079D                     	;# 
  6382  080C                     	;# 
  6383  080D                     	;# 
  6384  080E                     	;# 
  6385  080F                     	;# 
  6386  0810                     	;# 
  6387  0811                     	;# 
  6388  0812                     	;# 
  6389  0813                     	;# 
  6390  0814                     	;# 
  6391  081A                     	;# 
  6392  081A                     	;# 
  6393  081B                     	;# 
  6394  081C                     	;# 
  6395  081C                     	;# 
  6396  081D                     	;# 
  6397  081E                     	;# 
  6398  081F                     	;# 
  6399  088C                     	;# 
  6400  088D                     	;# 
  6401  088E                     	;# 
  6402  088F                     	;# 
  6403  0890                     	;# 
  6404  0891                     	;# 
  6405  0892                     	;# 
  6406  0893                     	;# 
  6407  0895                     	;# 
  6408  0896                     	;# 
  6409  0897                     	;# 
  6410  0898                     	;# 
  6411  0899                     	;# 
  6412  089A                     	;# 
  6413  089B                     	;# 
  6414  090C                     	;# 
  6415  090E                     	;# 
  6416  090F                     	;# 
  6417  091F                     	;# 
  6418  098F                     	;# 
  6419  098F                     	;# 
  6420  0990                     	;# 
  6421  0991                     	;# 
  6422  0992                     	;# 
  6423  0993                     	;# 
  6424  0994                     	;# 
  6425  0995                     	;# 
  6426  0996                     	;# 
  6427  0997                     	;# 
  6428  1E0F                     	;# 
  6429  1E10                     	;# 
  6430  1E11                     	;# 
  6431  1E12                     	;# 
  6432  1E13                     	;# 
  6433  1E14                     	;# 
  6434  1E15                     	;# 
  6435  1E16                     	;# 
  6436  1E17                     	;# 
  6437  1E18                     	;# 
  6438  1E19                     	;# 
  6439  1E1A                     	;# 
  6440  1E1B                     	;# 
  6441  1E1C                     	;# 
  6442  1E1D                     	;# 
  6443  1E1E                     	;# 
  6444  1E1F                     	;# 
  6445  1E20                     	;# 
  6446  1E21                     	;# 
  6447  1E22                     	;# 
  6448  1E23                     	;# 
  6449  1E24                     	;# 
  6450  1E25                     	;# 
  6451  1E26                     	;# 
  6452  1E27                     	;# 
  6453  1E28                     	;# 
  6454  1E29                     	;# 
  6455  1E2A                     	;# 
  6456  1E2B                     	;# 
  6457  1E2C                     	;# 
  6458  1E2D                     	;# 
  6459  1E2E                     	;# 
  6460  1E2F                     	;# 
  6461  1E30                     	;# 
  6462  1E31                     	;# 
  6463  1E32                     	;# 
  6464  1E33                     	;# 
  6465  1E34                     	;# 
  6466  1E35                     	;# 
  6467  1E36                     	;# 
  6468  1E37                     	;# 
  6469  1E8F                     	;# 
  6470  1E90                     	;# 
  6471  1E91                     	;# 
  6472  1E92                     	;# 
  6473  1E93                     	;# 
  6474  1E94                     	;# 
  6475  1E95                     	;# 
  6476  1E96                     	;# 
  6477  1E97                     	;# 
  6478  1E9C                     	;# 
  6479  1E9D                     	;# 
  6480  1E9E                     	;# 
  6481  1EA1                     	;# 
  6482  1EA2                     	;# 
  6483  1EA3                     	;# 
  6484  1EA4                     	;# 
  6485  1EA9                     	;# 
  6486  1EAA                     	;# 
  6487  1EB1                     	;# 
  6488  1EB2                     	;# 
  6489  1EB8                     	;# 
  6490  1EB9                     	;# 
  6491  1EBA                     	;# 
  6492  1EBB                     	;# 
  6493  1EBC                     	;# 
  6494  1EBD                     	;# 
  6495  1EBE                     	;# 
  6496  1EC3                     	;# 
  6497  1EC5                     	;# 
  6498  1EC6                     	;# 
  6499  1EC7                     	;# 
  6500  1EC8                     	;# 
  6501  1EC9                     	;# 
  6502  1ECA                     	;# 
  6503  1ECB                     	;# 
  6504  1ECB                     	;# 
  6505  1ECB                     	;# 
  6506  1ECC                     	;# 
  6507  1ECC                     	;# 
  6508  1ECC                     	;# 
  6509  1F10                     	;# 
  6510  1F11                     	;# 
  6511  1F12                     	;# 
  6512  1F14                     	;# 
  6513  1F15                     	;# 
  6514  1F1C                     	;# 
  6515  1F1D                     	;# 
  6516  1F1E                     	;# 
  6517  1F1F                     	;# 
  6518  1F20                     	;# 
  6519  1F21                     	;# 
  6520  1F22                     	;# 
  6521  1F23                     	;# 
  6522  1F24                     	;# 
  6523  1F25                     	;# 
  6524  1F26                     	;# 
  6525  1F27                     	;# 
  6526  1F38                     	;# 
  6527  1F39                     	;# 
  6528  1F3A                     	;# 
  6529  1F3B                     	;# 
  6530  1F3C                     	;# 
  6531  1F3D                     	;# 
  6532  1F3E                     	;# 
  6533  1F3F                     	;# 
  6534  1F43                     	;# 
  6535  1F44                     	;# 
  6536  1F45                     	;# 
  6537  1F46                     	;# 
  6538  1F47                     	;# 
  6539  1F48                     	;# 
  6540  1F49                     	;# 
  6541  1F4A                     	;# 
  6542  1F4E                     	;# 
  6543  1F4F                     	;# 
  6544  1F50                     	;# 
  6545  1F51                     	;# 
  6546  1F52                     	;# 
  6547  1F53                     	;# 
  6548  1F54                     	;# 
  6549  1F55                     	;# 
  6550  1FE4                     	;# 
  6551  1FE5                     	;# 
  6552  1FE6                     	;# 
  6553  1FE7                     	;# 
  6554  1FE8                     	;# 
  6555  1FE8                     	;# 
  6556  1FE9                     	;# 
  6557  1FEA                     	;# 
  6558  1FEB                     	;# 
  6559  1FED                     	;# 
  6560  1FEE                     	;# 
  6561  1FEF                     	;# 
  6562  0000                     	;# 
  6563  0001                     	;# 
  6564  0002                     	;# 
  6565  0003                     	;# 
  6566  0004                     	;# 
  6567  0005                     	;# 
  6568  0006                     	;# 
  6569  0007                     	;# 
  6570  0008                     	;# 
  6571  0009                     	;# 
  6572  000A                     	;# 
  6573  000B                     	;# 
  6574  000C                     	;# 
  6575  000D                     	;# 
  6576  000E                     	;# 
  6577  0012                     	;# 
  6578  0013                     	;# 
  6579  0014                     	;# 
  6580  0018                     	;# 
  6581  0019                     	;# 
  6582  001A                     	;# 
  6583  008C                     	;# 
  6584  008C                     	;# 
  6585  008D                     	;# 
  6586  008E                     	;# 
  6587  008E                     	;# 
  6588  008F                     	;# 
  6589  0090                     	;# 
  6590  0090                     	;# 
  6591  0091                     	;# 
  6592  0092                     	;# 
  6593  0092                     	;# 
  6594  0093                     	;# 
  6595  0094                     	;# 
  6596  0094                     	;# 
  6597  0095                     	;# 
  6598  0096                     	;# 
  6599  0096                     	;# 
  6600  0097                     	;# 
  6601  0098                     	;# 
  6602  0099                     	;# 
  6603  009A                     	;# 
  6604  009B                     	;# 
  6605  009B                     	;# 
  6606  009C                     	;# 
  6607  009D                     	;# 
  6608  009D                     	;# 
  6609  009E                     	;# 
  6610  009F                     	;# 
  6611  010C                     	;# 
  6612  010C                     	;# 
  6613  010D                     	;# 
  6614  010E                     	;# 
  6615  010F                     	;# 
  6616  010F                     	;# 
  6617  0110                     	;# 
  6618  0111                     	;# 
  6619  0112                     	;# 
  6620  0113                     	;# 
  6621  0114                     	;# 
  6622  0115                     	;# 
  6623  0116                     	;# 
  6624  0117                     	;# 
  6625  0118                     	;# 
  6626  0119                     	;# 
  6627  0119                     	;# 
  6628  0119                     	;# 
  6629  011A                     	;# 
  6630  011A                     	;# 
  6631  011A                     	;# 
  6632  011B                     	;# 
  6633  011B                     	;# 
  6634  011B                     	;# 
  6635  011B                     	;# 
  6636  011B                     	;# 
  6637  011C                     	;# 
  6638  011C                     	;# 
  6639  011C                     	;# 
  6640  011D                     	;# 
  6641  011D                     	;# 
  6642  011D                     	;# 
  6643  011E                     	;# 
  6644  011E                     	;# 
  6645  011E                     	;# 
  6646  011F                     	;# 
  6647  011F                     	;# 
  6648  011F                     	;# 
  6649  011F                     	;# 
  6650  011F                     	;# 
  6651  018C                     	;# 
  6652  018D                     	;# 
  6653  018E                     	;# 
  6654  018F                     	;# 
  6655  0190                     	;# 
  6656  0191                     	;# 
  6657  0192                     	;# 
  6658  0196                     	;# 
  6659  0197                     	;# 
  6660  0198                     	;# 
  6661  0199                     	;# 
  6662  019A                     	;# 
  6663  019B                     	;# 
  6664  019C                     	;# 
  6665  020C                     	;# 
  6666  020D                     	;# 
  6667  020E                     	;# 
  6668  020E                     	;# 
  6669  020F                     	;# 
  6670  020F                     	;# 
  6671  0210                     	;# 
  6672  0210                     	;# 
  6673  0211                     	;# 
  6674  0211                     	;# 
  6675  0212                     	;# 
  6676  0213                     	;# 
  6677  0214                     	;# 
  6678  0214                     	;# 
  6679  0215                     	;# 
  6680  0215                     	;# 
  6681  0216                     	;# 
  6682  0216                     	;# 
  6683  0217                     	;# 
  6684  0217                     	;# 
  6685  0218                     	;# 
  6686  0219                     	;# 
  6687  021A                     	;# 
  6688  021A                     	;# 
  6689  021B                     	;# 
  6690  021B                     	;# 
  6691  021C                     	;# 
  6692  021C                     	;# 
  6693  021D                     	;# 
  6694  021D                     	;# 
  6695  021E                     	;# 
  6696  021F                     	;# 
  6697  028C                     	;# 
  6698  028C                     	;# 
  6699  028D                     	;# 
  6700  028D                     	;# 
  6701  028E                     	;# 
  6702  028F                     	;# 
  6703  0290                     	;# 
  6704  0291                     	;# 
  6705  0292                     	;# 
  6706  0292                     	;# 
  6707  0293                     	;# 
  6708  0293                     	;# 
  6709  0294                     	;# 
  6710  0295                     	;# 
  6711  0296                     	;# 
  6712  0297                     	;# 
  6713  0298                     	;# 
  6714  0298                     	;# 
  6715  0299                     	;# 
  6716  0299                     	;# 
  6717  029A                     	;# 
  6718  029B                     	;# 
  6719  029C                     	;# 
  6720  029D                     	;# 
  6721  029F                     	;# 
  6722  030C                     	;# 
  6723  030C                     	;# 
  6724  030D                     	;# 
  6725  030E                     	;# 
  6726  030F                     	;# 
  6727  0310                     	;# 
  6728  0310                     	;# 
  6729  0311                     	;# 
  6730  0312                     	;# 
  6731  0313                     	;# 
  6732  0314                     	;# 
  6733  0314                     	;# 
  6734  0315                     	;# 
  6735  0316                     	;# 
  6736  0317                     	;# 
  6737  0318                     	;# 
  6738  0318                     	;# 
  6739  0319                     	;# 
  6740  031A                     	;# 
  6741  031B                     	;# 
  6742  038C                     	;# 
  6743  038C                     	;# 
  6744  038D                     	;# 
  6745  038E                     	;# 
  6746  0390                     	;# 
  6747  0390                     	;# 
  6748  0391                     	;# 
  6749  0392                     	;# 
  6750  048C                     	;# 
  6751  048C                     	;# 
  6752  048D                     	;# 
  6753  048E                     	;# 
  6754  048F                     	;# 
  6755  048F                     	;# 
  6756  0490                     	;# 
  6757  0491                     	;# 
  6758  0492                     	;# 
  6759  0492                     	;# 
  6760  0493                     	;# 
  6761  0494                     	;# 
  6762  0495                     	;# 
  6763  0495                     	;# 
  6764  0496                     	;# 
  6765  0497                     	;# 
  6766  0498                     	;# 
  6767  0499                     	;# 
  6768  049A                     	;# 
  6769  049B                     	;# 
  6770  049C                     	;# 
  6771  049D                     	;# 
  6772  058C                     	;# 
  6773  058C                     	;# 
  6774  058D                     	;# 
  6775  058E                     	;# 
  6776  058F                     	;# 
  6777  058F                     	;# 
  6778  0590                     	;# 
  6779  0591                     	;# 
  6780  0592                     	;# 
  6781  0593                     	;# 
  6782  059C                     	;# 
  6783  059C                     	;# 
  6784  059D                     	;# 
  6785  059D                     	;# 
  6786  059E                     	;# 
  6787  059F                     	;# 
  6788  060C                     	;# 
  6789  060C                     	;# 
  6790  060D                     	;# 
  6791  060D                     	;# 
  6792  060E                     	;# 
  6793  060F                     	;# 
  6794  0610                     	;# 
  6795  0611                     	;# 
  6796  0612                     	;# 
  6797  0613                     	;# 
  6798  0614                     	;# 
  6799  0616                     	;# 
  6800  0616                     	;# 
  6801  0617                     	;# 
  6802  0617                     	;# 
  6803  0618                     	;# 
  6804  0619                     	;# 
  6805  061A                     	;# 
  6806  061B                     	;# 
  6807  061C                     	;# 
  6808  061D                     	;# 
  6809  061E                     	;# 
  6810  070C                     	;# 
  6811  070D                     	;# 
  6812  070E                     	;# 
  6813  070F                     	;# 
  6814  0710                     	;# 
  6815  0711                     	;# 
  6816  0712                     	;# 
  6817  0713                     	;# 
  6818  0714                     	;# 
  6819  0716                     	;# 
  6820  0717                     	;# 
  6821  0718                     	;# 
  6822  0719                     	;# 
  6823  071A                     	;# 
  6824  071B                     	;# 
  6825  071C                     	;# 
  6826  071D                     	;# 
  6827  071E                     	;# 
  6828  0796                     	;# 
  6829  0797                     	;# 
  6830  0798                     	;# 
  6831  0799                     	;# 
  6832  079A                     	;# 
  6833  079B                     	;# 
  6834  079C                     	;# 
  6835  079D                     	;# 
  6836  080C                     	;# 
  6837  080D                     	;# 
  6838  080E                     	;# 
  6839  080F                     	;# 
  6840  0810                     	;# 
  6841  0811                     	;# 
  6842  0812                     	;# 
  6843  0813                     	;# 
  6844  0814                     	;# 
  6845  081A                     	;# 
  6846  081A                     	;# 
  6847  081B                     	;# 
  6848  081C                     	;# 
  6849  081C                     	;# 
  6850  081D                     	;# 
  6851  081E                     	;# 
  6852  081F                     	;# 
  6853  088C                     	;# 
  6854  088D                     	;# 
  6855  088E                     	;# 
  6856  088F                     	;# 
  6857  0890                     	;# 
  6858  0891                     	;# 
  6859  0892                     	;# 
  6860  0893                     	;# 
  6861  0895                     	;# 
  6862  0896                     	;# 
  6863  0897                     	;# 
  6864  0898                     	;# 
  6865  0899                     	;# 
  6866  089A                     	;# 
  6867  089B                     	;# 
  6868  090C                     	;# 
  6869  090E                     	;# 
  6870  090F                     	;# 
  6871  091F                     	;# 
  6872  098F                     	;# 
  6873  098F                     	;# 
  6874  0990                     	;# 
  6875  0991                     	;# 
  6876  0992                     	;# 
  6877  0993                     	;# 
  6878  0994                     	;# 
  6879  0995                     	;# 
  6880  0996                     	;# 
  6881  0997                     	;# 
  6882  1E0F                     	;# 
  6883  1E10                     	;# 
  6884  1E11                     	;# 
  6885  1E12                     	;# 
  6886  1E13                     	;# 
  6887  1E14                     	;# 
  6888  1E15                     	;# 
  6889  1E16                     	;# 
  6890  1E17                     	;# 
  6891  1E18                     	;# 
  6892  1E19                     	;# 
  6893  1E1A                     	;# 
  6894  1E1B                     	;# 
  6895  1E1C                     	;# 
  6896  1E1D                     	;# 
  6897  1E1E                     	;# 
  6898  1E1F                     	;# 
  6899  1E20                     	;# 
  6900  1E21                     	;# 
  6901  1E22                     	;# 
  6902  1E23                     	;# 
  6903  1E24                     	;# 
  6904  1E25                     	;# 
  6905  1E26                     	;# 
  6906  1E27                     	;# 
  6907  1E28                     	;# 
  6908  1E29                     	;# 
  6909  1E2A                     	;# 
  6910  1E2B                     	;# 
  6911  1E2C                     	;# 
  6912  1E2D                     	;# 
  6913  1E2E                     	;# 
  6914  1E2F                     	;# 
  6915  1E30                     	;# 
  6916  1E31                     	;# 
  6917  1E32                     	;# 
  6918  1E33                     	;# 
  6919  1E34                     	;# 
  6920  1E35                     	;# 
  6921  1E36                     	;# 
  6922  1E37                     	;# 
  6923  1E8F                     	;# 
  6924  1E90                     	;# 
  6925  1E91                     	;# 
  6926  1E92                     	;# 
  6927  1E93                     	;# 
  6928  1E94                     	;# 
  6929  1E95                     	;# 
  6930  1E96                     	;# 
  6931  1E97                     	;# 
  6932  1E9C                     	;# 
  6933  1E9D                     	;# 
  6934  1E9E                     	;# 
  6935  1EA1                     	;# 
  6936  1EA2                     	;# 
  6937  1EA3                     	;# 
  6938  1EA4                     	;# 
  6939  1EA9                     	;# 
  6940  1EAA                     	;# 
  6941  1EB1                     	;# 
  6942  1EB2                     	;# 
  6943  1EB8                     	;# 
  6944  1EB9                     	;# 
  6945  1EBA                     	;# 
  6946  1EBB                     	;# 
  6947  1EBC                     	;# 
  6948  1EBD                     	;# 
  6949  1EBE                     	;# 
  6950  1EC3                     	;# 
  6951  1EC5                     	;# 
  6952  1EC6                     	;# 
  6953  1EC7                     	;# 
  6954  1EC8                     	;# 
  6955  1EC9                     	;# 
  6956  1ECA                     	;# 
  6957  1ECB                     	;# 
  6958  1ECB                     	;# 
  6959  1ECB                     	;# 
  6960  1ECC                     	;# 
  6961  1ECC                     	;# 
  6962  1ECC                     	;# 
  6963  1F10                     	;# 
  6964  1F11                     	;# 
  6965  1F12                     	;# 
  6966  1F14                     	;# 
  6967  1F15                     	;# 
  6968  1F1C                     	;# 
  6969  1F1D                     	;# 
  6970  1F1E                     	;# 
  6971  1F1F                     	;# 
  6972  1F20                     	;# 
  6973  1F21                     	;# 
  6974  1F22                     	;# 
  6975  1F23                     	;# 
  6976  1F24                     	;# 
  6977  1F25                     	;# 
  6978  1F26                     	;# 
  6979  1F27                     	;# 
  6980  1F38                     	;# 
  6981  1F39                     	;# 
  6982  1F3A                     	;# 
  6983  1F3B                     	;# 
  6984  1F3C                     	;# 
  6985  1F3D                     	;# 
  6986  1F3E                     	;# 
  6987  1F3F                     	;# 
  6988  1F43                     	;# 
  6989  1F44                     	;# 
  6990  1F45                     	;# 
  6991  1F46                     	;# 
  6992  1F47                     	;# 
  6993  1F48                     	;# 
  6994  1F49                     	;# 
  6995  1F4A                     	;# 
  6996  1F4E                     	;# 
  6997  1F4F                     	;# 
  6998  1F50                     	;# 
  6999  1F51                     	;# 
  7000  1F52                     	;# 
  7001  1F53                     	;# 
  7002  1F54                     	;# 
  7003  1F55                     	;# 
  7004  1FE4                     	;# 
  7005  1FE5                     	;# 
  7006  1FE6                     	;# 
  7007  1FE7                     	;# 
  7008  1FE8                     	;# 
  7009  1FE8                     	;# 
  7010  1FE9                     	;# 
  7011  1FEA                     	;# 
  7012  1FEB                     	;# 
  7013  1FED                     	;# 
  7014  1FEE                     	;# 
  7015  1FEF                     	;# 
  7016  0000                     	;# 
  7017  0001                     	;# 
  7018  0002                     	;# 
  7019  0003                     	;# 
  7020  0004                     	;# 
  7021  0005                     	;# 
  7022  0006                     	;# 
  7023  0007                     	;# 
  7024  0008                     	;# 
  7025  0009                     	;# 
  7026  000A                     	;# 
  7027  000B                     	;# 
  7028  000C                     	;# 
  7029  000D                     	;# 
  7030  000E                     	;# 
  7031  0012                     	;# 
  7032  0013                     	;# 
  7033  0014                     	;# 
  7034  0018                     	;# 
  7035  0019                     	;# 
  7036  001A                     	;# 
  7037  008C                     	;# 
  7038  008C                     	;# 
  7039  008D                     	;# 
  7040  008E                     	;# 
  7041  008E                     	;# 
  7042  008F                     	;# 
  7043  0090                     	;# 
  7044  0090                     	;# 
  7045  0091                     	;# 
  7046  0092                     	;# 
  7047  0092                     	;# 
  7048  0093                     	;# 
  7049  0094                     	;# 
  7050  0094                     	;# 
  7051  0095                     	;# 
  7052  0096                     	;# 
  7053  0096                     	;# 
  7054  0097                     	;# 
  7055  0098                     	;# 
  7056  0099                     	;# 
  7057  009A                     	;# 
  7058  009B                     	;# 
  7059  009B                     	;# 
  7060  009C                     	;# 
  7061  009D                     	;# 
  7062  009D                     	;# 
  7063  009E                     	;# 
  7064  009F                     	;# 
  7065  010C                     	;# 
  7066  010C                     	;# 
  7067  010D                     	;# 
  7068  010E                     	;# 
  7069  010F                     	;# 
  7070  010F                     	;# 
  7071  0110                     	;# 
  7072  0111                     	;# 
  7073  0112                     	;# 
  7074  0113                     	;# 
  7075  0114                     	;# 
  7076  0115                     	;# 
  7077  0116                     	;# 
  7078  0117                     	;# 
  7079  0118                     	;# 
  7080  0119                     	;# 
  7081  0119                     	;# 
  7082  0119                     	;# 
  7083  011A                     	;# 
  7084  011A                     	;# 
  7085  011A                     	;# 
  7086  011B                     	;# 
  7087  011B                     	;# 
  7088  011B                     	;# 
  7089  011B                     	;# 
  7090  011B                     	;# 
  7091  011C                     	;# 
  7092  011C                     	;# 
  7093  011C                     	;# 
  7094  011D                     	;# 
  7095  011D                     	;# 
  7096  011D                     	;# 
  7097  011E                     	;# 
  7098  011E                     	;# 
  7099  011E                     	;# 
  7100  011F                     	;# 
  7101  011F                     	;# 
  7102  011F                     	;# 
  7103  011F                     	;# 
  7104  011F                     	;# 
  7105  018C                     	;# 
  7106  018D                     	;# 
  7107  018E                     	;# 
  7108  018F                     	;# 
  7109  0190                     	;# 
  7110  0191                     	;# 
  7111  0192                     	;# 
  7112  0196                     	;# 
  7113  0197                     	;# 
  7114  0198                     	;# 
  7115  0199                     	;# 
  7116  019A                     	;# 
  7117  019B                     	;# 
  7118  019C                     	;# 
  7119  020C                     	;# 
  7120  020D                     	;# 
  7121  020E                     	;# 
  7122  020E                     	;# 
  7123  020F                     	;# 
  7124  020F                     	;# 
  7125  0210                     	;# 
  7126  0210                     	;# 
  7127  0211                     	;# 
  7128  0211                     	;# 
  7129  0212                     	;# 
  7130  0213                     	;# 
  7131  0214                     	;# 
  7132  0214                     	;# 
  7133  0215                     	;# 
  7134  0215                     	;# 
  7135  0216                     	;# 
  7136  0216                     	;# 
  7137  0217                     	;# 
  7138  0217                     	;# 
  7139  0218                     	;# 
  7140  0219                     	;# 
  7141  021A                     	;# 
  7142  021A                     	;# 
  7143  021B                     	;# 
  7144  021B                     	;# 
  7145  021C                     	;# 
  7146  021C                     	;# 
  7147  021D                     	;# 
  7148  021D                     	;# 
  7149  021E                     	;# 
  7150  021F                     	;# 
  7151  028C                     	;# 
  7152  028C                     	;# 
  7153  028D                     	;# 
  7154  028D                     	;# 
  7155  028E                     	;# 
  7156  028F                     	;# 
  7157  0290                     	;# 
  7158  0291                     	;# 
  7159  0292                     	;# 
  7160  0292                     	;# 
  7161  0293                     	;# 
  7162  0293                     	;# 
  7163  0294                     	;# 
  7164  0295                     	;# 
  7165  0296                     	;# 
  7166  0297                     	;# 
  7167  0298                     	;# 
  7168  0298                     	;# 
  7169  0299                     	;# 
  7170  0299                     	;# 
  7171  029A                     	;# 
  7172  029B                     	;# 
  7173  029C                     	;# 
  7174  029D                     	;# 
  7175  029F                     	;# 
  7176  030C                     	;# 
  7177  030C                     	;# 
  7178  030D                     	;# 
  7179  030E                     	;# 
  7180  030F                     	;# 
  7181  0310                     	;# 
  7182  0310                     	;# 
  7183  0311                     	;# 
  7184  0312                     	;# 
  7185  0313                     	;# 
  7186  0314                     	;# 
  7187  0314                     	;# 
  7188  0315                     	;# 
  7189  0316                     	;# 
  7190  0317                     	;# 
  7191  0318                     	;# 
  7192  0318                     	;# 
  7193  0319                     	;# 
  7194  031A                     	;# 
  7195  031B                     	;# 
  7196  038C                     	;# 
  7197  038C                     	;# 
  7198  038D                     	;# 
  7199  038E                     	;# 
  7200  0390                     	;# 
  7201  0390                     	;# 
  7202  0391                     	;# 
  7203  0392                     	;# 
  7204  048C                     	;# 
  7205  048C                     	;# 
  7206  048D                     	;# 
  7207  048E                     	;# 
  7208  048F                     	;# 
  7209  048F                     	;# 
  7210  0490                     	;# 
  7211  0491                     	;# 
  7212  0492                     	;# 
  7213  0492                     	;# 
  7214  0493                     	;# 
  7215  0494                     	;# 
  7216  0495                     	;# 
  7217  0495                     	;# 
  7218  0496                     	;# 
  7219  0497                     	;# 
  7220  0498                     	;# 
  7221  0499                     	;# 
  7222  049A                     	;# 
  7223  049B                     	;# 
  7224  049C                     	;# 
  7225  049D                     	;# 
  7226  058C                     	;# 
  7227  058C                     	;# 
  7228  058D                     	;# 
  7229  058E                     	;# 
  7230  058F                     	;# 
  7231  058F                     	;# 
  7232  0590                     	;# 
  7233  0591                     	;# 
  7234  0592                     	;# 
  7235  0593                     	;# 
  7236  059C                     	;# 
  7237  059C                     	;# 
  7238  059D                     	;# 
  7239  059D                     	;# 
  7240  059E                     	;# 
  7241  059F                     	;# 
  7242  060C                     	;# 
  7243  060C                     	;# 
  7244  060D                     	;# 
  7245  060D                     	;# 
  7246  060E                     	;# 
  7247  060F                     	;# 
  7248  0610                     	;# 
  7249  0611                     	;# 
  7250  0612                     	;# 
  7251  0613                     	;# 
  7252  0614                     	;# 
  7253  0616                     	;# 
  7254  0616                     	;# 
  7255  0617                     	;# 
  7256  0617                     	;# 
  7257  0618                     	;# 
  7258  0619                     	;# 
  7259  061A                     	;# 
  7260  061B                     	;# 
  7261  061C                     	;# 
  7262  061D                     	;# 
  7263  061E                     	;# 
  7264  070C                     	;# 
  7265  070D                     	;# 
  7266  070E                     	;# 
  7267  070F                     	;# 
  7268  0710                     	;# 
  7269  0711                     	;# 
  7270  0712                     	;# 
  7271  0713                     	;# 
  7272  0714                     	;# 
  7273  0716                     	;# 
  7274  0717                     	;# 
  7275  0718                     	;# 
  7276  0719                     	;# 
  7277  071A                     	;# 
  7278  071B                     	;# 
  7279  071C                     	;# 
  7280  071D                     	;# 
  7281  071E                     	;# 
  7282  0796                     	;# 
  7283  0797                     	;# 
  7284  0798                     	;# 
  7285  0799                     	;# 
  7286  079A                     	;# 
  7287  079B                     	;# 
  7288  079C                     	;# 
  7289  079D                     	;# 
  7290  080C                     	;# 
  7291  080D                     	;# 
  7292  080E                     	;# 
  7293  080F                     	;# 
  7294  0810                     	;# 
  7295  0811                     	;# 
  7296  0812                     	;# 
  7297  0813                     	;# 
  7298  0814                     	;# 
  7299  081A                     	;# 
  7300  081A                     	;# 
  7301  081B                     	;# 
  7302  081C                     	;# 
  7303  081C                     	;# 
  7304  081D                     	;# 
  7305  081E                     	;# 
  7306  081F                     	;# 
  7307  088C                     	;# 
  7308  088D                     	;# 
  7309  088E                     	;# 
  7310  088F                     	;# 
  7311  0890                     	;# 
  7312  0891                     	;# 
  7313  0892                     	;# 
  7314  0893                     	;# 
  7315  0895                     	;# 
  7316  0896                     	;# 
  7317  0897                     	;# 
  7318  0898                     	;# 
  7319  0899                     	;# 
  7320  089A                     	;# 
  7321  089B                     	;# 
  7322  090C                     	;# 
  7323  090E                     	;# 
  7324  090F                     	;# 
  7325  091F                     	;# 
  7326  098F                     	;# 
  7327  098F                     	;# 
  7328  0990                     	;# 
  7329  0991                     	;# 
  7330  0992                     	;# 
  7331  0993                     	;# 
  7332  0994                     	;# 
  7333  0995                     	;# 
  7334  0996                     	;# 
  7335  0997                     	;# 
  7336  1E0F                     	;# 
  7337  1E10                     	;# 
  7338  1E11                     	;# 
  7339  1E12                     	;# 
  7340  1E13                     	;# 
  7341  1E14                     	;# 
  7342  1E15                     	;# 
  7343  1E16                     	;# 
  7344  1E17                     	;# 
  7345  1E18                     	;# 
  7346  1E19                     	;# 
  7347  1E1A                     	;# 
  7348  1E1B                     	;# 
  7349  1E1C                     	;# 
  7350  1E1D                     	;# 
  7351  1E1E                     	;# 
  7352  1E1F                     	;# 
  7353  1E20                     	;# 
  7354  1E21                     	;# 
  7355  1E22                     	;# 
  7356  1E23                     	;# 
  7357  1E24                     	;# 
  7358  1E25                     	;# 
  7359  1E26                     	;# 
  7360  1E27                     	;# 
  7361  1E28                     	;# 
  7362  1E29                     	;# 
  7363  1E2A                     	;# 
  7364  1E2B                     	;# 
  7365  1E2C                     	;# 
  7366  1E2D                     	;# 
  7367  1E2E                     	;# 
  7368  1E2F                     	;# 
  7369  1E30                     	;# 
  7370  1E31                     	;# 
  7371  1E32                     	;# 
  7372  1E33                     	;# 
  7373  1E34                     	;# 
  7374  1E35                     	;# 
  7375  1E36                     	;# 
  7376  1E37                     	;# 
  7377  1E8F                     	;# 
  7378  1E90                     	;# 
  7379  1E91                     	;# 
  7380  1E92                     	;# 
  7381  1E93                     	;# 
  7382  1E94                     	;# 
  7383  1E95                     	;# 
  7384  1E96                     	;# 
  7385  1E97                     	;# 
  7386  1E9C                     	;# 
  7387  1E9D                     	;# 
  7388  1E9E                     	;# 
  7389  1EA1                     	;# 
  7390  1EA2                     	;# 
  7391  1EA3                     	;# 
  7392  1EA4                     	;# 
  7393  1EA9                     	;# 
  7394  1EAA                     	;# 
  7395  1EB1                     	;# 
  7396  1EB2                     	;# 
  7397  1EB8                     	;# 
  7398  1EB9                     	;# 
  7399  1EBA                     	;# 
  7400  1EBB                     	;# 
  7401  1EBC                     	;# 
  7402  1EBD                     	;# 
  7403  1EBE                     	;# 
  7404  1EC3                     	;# 
  7405  1EC5                     	;# 
  7406  1EC6                     	;# 
  7407  1EC7                     	;# 
  7408  1EC8                     	;# 
  7409  1EC9                     	;# 
  7410  1ECA                     	;# 
  7411  1ECB                     	;# 
  7412  1ECB                     	;# 
  7413  1ECB                     	;# 
  7414  1ECC                     	;# 
  7415  1ECC                     	;# 
  7416  1ECC                     	;# 
  7417  1F10                     	;# 
  7418  1F11                     	;# 
  7419  1F12                     	;# 
  7420  1F14                     	;# 
  7421  1F15                     	;# 
  7422  1F1C                     	;# 
  7423  1F1D                     	;# 
  7424  1F1E                     	;# 
  7425  1F1F                     	;# 
  7426  1F20                     	;# 
  7427  1F21                     	;# 
  7428  1F22                     	;# 
  7429  1F23                     	;# 
  7430  1F24                     	;# 
  7431  1F25                     	;# 
  7432  1F26                     	;# 
  7433  1F27                     	;# 
  7434  1F38                     	;# 
  7435  1F39                     	;# 
  7436  1F3A                     	;# 
  7437  1F3B                     	;# 
  7438  1F3C                     	;# 
  7439  1F3D                     	;# 
  7440  1F3E                     	;# 
  7441  1F3F                     	;# 
  7442  1F43                     	;# 
  7443  1F44                     	;# 
  7444  1F45                     	;# 
  7445  1F46                     	;# 
  7446  1F47                     	;# 
  7447  1F48                     	;# 
  7448  1F49                     	;# 
  7449  1F4A                     	;# 
  7450  1F4E                     	;# 
  7451  1F4F                     	;# 
  7452  1F50                     	;# 
  7453  1F51                     	;# 
  7454  1F52                     	;# 
  7455  1F53                     	;# 
  7456  1F54                     	;# 
  7457  1F55                     	;# 
  7458  1FE4                     	;# 
  7459  1FE5                     	;# 
  7460  1FE6                     	;# 
  7461  1FE7                     	;# 
  7462  1FE8                     	;# 
  7463  1FE8                     	;# 
  7464  1FE9                     	;# 
  7465  1FEA                     	;# 
  7466  1FEB                     	;# 
  7467  1FED                     	;# 
  7468  1FEE                     	;# 
  7469  1FEF                     	;# 
  7470  0000                     	;# 
  7471  0001                     	;# 
  7472  0002                     	;# 
  7473  0003                     	;# 
  7474  0004                     	;# 
  7475  0005                     	;# 
  7476  0006                     	;# 
  7477  0007                     	;# 
  7478  0008                     	;# 
  7479  0009                     	;# 
  7480  000A                     	;# 
  7481  000B                     	;# 
  7482  000C                     	;# 
  7483  000D                     	;# 
  7484  000E                     	;# 
  7485  0012                     	;# 
  7486  0013                     	;# 
  7487  0014                     	;# 
  7488  0018                     	;# 
  7489  0019                     	;# 
  7490  001A                     	;# 
  7491  008C                     	;# 
  7492  008C                     	;# 
  7493  008D                     	;# 
  7494  008E                     	;# 
  7495  008E                     	;# 
  7496  008F                     	;# 
  7497  0090                     	;# 
  7498  0090                     	;# 
  7499  0091                     	;# 
  7500  0092                     	;# 
  7501  0092                     	;# 
  7502  0093                     	;# 
  7503  0094                     	;# 
  7504  0094                     	;# 
  7505  0095                     	;# 
  7506  0096                     	;# 
  7507  0096                     	;# 
  7508  0097                     	;# 
  7509  0098                     	;# 
  7510  0099                     	;# 
  7511  009A                     	;# 
  7512  009B                     	;# 
  7513  009B                     	;# 
  7514  009C                     	;# 
  7515  009D                     	;# 
  7516  009D                     	;# 
  7517  009E                     	;# 
  7518  009F                     	;# 
  7519  010C                     	;# 
  7520  010C                     	;# 
  7521  010D                     	;# 
  7522  010E                     	;# 
  7523  010F                     	;# 
  7524  010F                     	;# 
  7525  0110                     	;# 
  7526  0111                     	;# 
  7527  0112                     	;# 
  7528  0113                     	;# 
  7529  0114                     	;# 
  7530  0115                     	;# 
  7531  0116                     	;# 
  7532  0117                     	;# 
  7533  0118                     	;# 
  7534  0119                     	;# 
  7535  0119                     	;# 
  7536  0119                     	;# 
  7537  011A                     	;# 
  7538  011A                     	;# 
  7539  011A                     	;# 
  7540  011B                     	;# 
  7541  011B                     	;# 
  7542  011B                     	;# 
  7543  011B                     	;# 
  7544  011B                     	;# 
  7545  011C                     	;# 
  7546  011C                     	;# 
  7547  011C                     	;# 
  7548  011D                     	;# 
  7549  011D                     	;# 
  7550  011D                     	;# 
  7551  011E                     	;# 
  7552  011E                     	;# 
  7553  011E                     	;# 
  7554  011F                     	;# 
  7555  011F                     	;# 
  7556  011F                     	;# 
  7557  011F                     	;# 
  7558  011F                     	;# 
  7559  018C                     	;# 
  7560  018D                     	;# 
  7561  018E                     	;# 
  7562  018F                     	;# 
  7563  0190                     	;# 
  7564  0191                     	;# 
  7565  0192                     	;# 
  7566  0196                     	;# 
  7567  0197                     	;# 
  7568  0198                     	;# 
  7569  0199                     	;# 
  7570  019A                     	;# 
  7571  019B                     	;# 
  7572  019C                     	;# 
  7573  020C                     	;# 
  7574  020D                     	;# 
  7575  020E                     	;# 
  7576  020E                     	;# 
  7577  020F                     	;# 
  7578  020F                     	;# 
  7579  0210                     	;# 
  7580  0210                     	;# 
  7581  0211                     	;# 
  7582  0211                     	;# 
  7583  0212                     	;# 
  7584  0213                     	;# 
  7585  0214                     	;# 
  7586  0214                     	;# 
  7587  0215                     	;# 
  7588  0215                     	;# 
  7589  0216                     	;# 
  7590  0216                     	;# 
  7591  0217                     	;# 
  7592  0217                     	;# 
  7593  0218                     	;# 
  7594  0219                     	;# 
  7595  021A                     	;# 
  7596  021A                     	;# 
  7597  021B                     	;# 
  7598  021B                     	;# 
  7599  021C                     	;# 
  7600  021C                     	;# 
  7601  021D                     	;# 
  7602  021D                     	;# 
  7603  021E                     	;# 
  7604  021F                     	;# 
  7605  028C                     	;# 
  7606  028C                     	;# 
  7607  028D                     	;# 
  7608  028D                     	;# 
  7609  028E                     	;# 
  7610  028F                     	;# 
  7611  0290                     	;# 
  7612  0291                     	;# 
  7613  0292                     	;# 
  7614  0292                     	;# 
  7615  0293                     	;# 
  7616  0293                     	;# 
  7617  0294                     	;# 
  7618  0295                     	;# 
  7619  0296                     	;# 
  7620  0297                     	;# 
  7621  0298                     	;# 
  7622  0298                     	;# 
  7623  0299                     	;# 
  7624  0299                     	;# 
  7625  029A                     	;# 
  7626  029B                     	;# 
  7627  029C                     	;# 
  7628  029D                     	;# 
  7629  029F                     	;# 
  7630  030C                     	;# 
  7631  030C                     	;# 
  7632  030D                     	;# 
  7633  030E                     	;# 
  7634  030F                     	;# 
  7635  0310                     	;# 
  7636  0310                     	;# 
  7637  0311                     	;# 
  7638  0312                     	;# 
  7639  0313                     	;# 
  7640  0314                     	;# 
  7641  0314                     	;# 
  7642  0315                     	;# 
  7643  0316                     	;# 
  7644  0317                     	;# 
  7645  0318                     	;# 
  7646  0318                     	;# 
  7647  0319                     	;# 
  7648  031A                     	;# 
  7649  031B                     	;# 
  7650  038C                     	;# 
  7651  038C                     	;# 
  7652  038D                     	;# 
  7653  038E                     	;# 
  7654  0390                     	;# 
  7655  0390                     	;# 
  7656  0391                     	;# 
  7657  0392                     	;# 
  7658  048C                     	;# 
  7659  048C                     	;# 
  7660  048D                     	;# 
  7661  048E                     	;# 
  7662  048F                     	;# 
  7663  048F                     	;# 
  7664  0490                     	;# 
  7665  0491                     	;# 
  7666  0492                     	;# 
  7667  0492                     	;# 
  7668  0493                     	;# 
  7669  0494                     	;# 
  7670  0495                     	;# 
  7671  0495                     	;# 
  7672  0496                     	;# 
  7673  0497                     	;# 
  7674  0498                     	;# 
  7675  0499                     	;# 
  7676  049A                     	;# 
  7677  049B                     	;# 
  7678  049C                     	;# 
  7679  049D                     	;# 
  7680  058C                     	;# 
  7681  058C                     	;# 
  7682  058D                     	;# 
  7683  058E                     	;# 
  7684  058F                     	;# 
  7685  058F                     	;# 
  7686  0590                     	;# 
  7687  0591                     	;# 
  7688  0592                     	;# 
  7689  0593                     	;# 
  7690  059C                     	;# 
  7691  059C                     	;# 
  7692  059D                     	;# 
  7693  059D                     	;# 
  7694  059E                     	;# 
  7695  059F                     	;# 
  7696  060C                     	;# 
  7697  060C                     	;# 
  7698  060D                     	;# 
  7699  060D                     	;# 
  7700  060E                     	;# 
  7701  060F                     	;# 
  7702  0610                     	;# 
  7703  0611                     	;# 
  7704  0612                     	;# 
  7705  0613                     	;# 
  7706  0614                     	;# 
  7707  0616                     	;# 
  7708  0616                     	;# 
  7709  0617                     	;# 
  7710  0617                     	;# 
  7711  0618                     	;# 
  7712  0619                     	;# 
  7713  061A                     	;# 
  7714  061B                     	;# 
  7715  061C                     	;# 
  7716  061D                     	;# 
  7717  061E                     	;# 
  7718  070C                     	;# 
  7719  070D                     	;# 
  7720  070E                     	;# 
  7721  070F                     	;# 
  7722  0710                     	;# 
  7723  0711                     	;# 
  7724  0712                     	;# 
  7725  0713                     	;# 
  7726  0714                     	;# 
  7727  0716                     	;# 
  7728  0717                     	;# 
  7729  0718                     	;# 
  7730  0719                     	;# 
  7731  071A                     	;# 
  7732  071B                     	;# 
  7733  071C                     	;# 
  7734  071D                     	;# 
  7735  071E                     	;# 
  7736  0796                     	;# 
  7737  0797                     	;# 
  7738  0798                     	;# 
  7739  0799                     	;# 
  7740  079A                     	;# 
  7741  079B                     	;# 
  7742  079C                     	;# 
  7743  079D                     	;# 
  7744  080C                     	;# 
  7745  080D                     	;# 
  7746  080E                     	;# 
  7747  080F                     	;# 
  7748  0810                     	;# 
  7749  0811                     	;# 
  7750  0812                     	;# 
  7751  0813                     	;# 
  7752  0814                     	;# 
  7753  081A                     	;# 
  7754  081A                     	;# 
  7755  081B                     	;# 
  7756  081C                     	;# 
  7757  081C                     	;# 
  7758  081D                     	;# 
  7759  081E                     	;# 
  7760  081F                     	;# 
  7761  088C                     	;# 
  7762  088D                     	;# 
  7763  088E                     	;# 
  7764  088F                     	;# 
  7765  0890                     	;# 
  7766  0891                     	;# 
  7767  0892                     	;# 
  7768  0893                     	;# 
  7769  0895                     	;# 
  7770  0896                     	;# 
  7771  0897                     	;# 
  7772  0898                     	;# 
  7773  0899                     	;# 
  7774  089A                     	;# 
  7775  089B                     	;# 
  7776  090C                     	;# 
  7777  090E                     	;# 
  7778  090F                     	;# 
  7779  091F                     	;# 
  7780  098F                     	;# 
  7781  098F                     	;# 
  7782  0990                     	;# 
  7783  0991                     	;# 
  7784  0992                     	;# 
  7785  0993                     	;# 
  7786  0994                     	;# 
  7787  0995                     	;# 
  7788  0996                     	;# 
  7789  0997                     	;# 
  7790  1E0F                     	;# 
  7791  1E10                     	;# 
  7792  1E11                     	;# 
  7793  1E12                     	;# 
  7794  1E13                     	;# 
  7795  1E14                     	;# 
  7796  1E15                     	;# 
  7797  1E16                     	;# 
  7798  1E17                     	;# 
  7799  1E18                     	;# 
  7800  1E19                     	;# 
  7801  1E1A                     	;# 
  7802  1E1B                     	;# 
  7803  1E1C                     	;# 
  7804  1E1D                     	;# 
  7805  1E1E                     	;# 
  7806  1E1F                     	;# 
  7807  1E20                     	;# 
  7808  1E21                     	;# 
  7809  1E22                     	;# 
  7810  1E23                     	;# 
  7811  1E24                     	;# 
  7812  1E25                     	;# 
  7813  1E26                     	;# 
  7814  1E27                     	;# 
  7815  1E28                     	;# 
  7816  1E29                     	;# 
  7817  1E2A                     	;# 
  7818  1E2B                     	;# 
  7819  1E2C                     	;# 
  7820  1E2D                     	;# 
  7821  1E2E                     	;# 
  7822  1E2F                     	;# 
  7823  1E30                     	;# 
  7824  1E31                     	;# 
  7825  1E32                     	;# 
  7826  1E33                     	;# 
  7827  1E34                     	;# 
  7828  1E35                     	;# 
  7829  1E36                     	;# 
  7830  1E37                     	;# 
  7831  1E8F                     	;# 
  7832  1E90                     	;# 
  7833  1E91                     	;# 
  7834  1E92                     	;# 
  7835  1E93                     	;# 
  7836  1E94                     	;# 
  7837  1E95                     	;# 
  7838  1E96                     	;# 
  7839  1E97                     	;# 
  7840  1E9C                     	;# 
  7841  1E9D                     	;# 
  7842  1E9E                     	;# 
  7843  1EA1                     	;# 
  7844  1EA2                     	;# 
  7845  1EA3                     	;# 
  7846  1EA4                     	;# 
  7847  1EA9                     	;# 
  7848  1EAA                     	;# 
  7849  1EB1                     	;# 
  7850  1EB2                     	;# 
  7851  1EB8                     	;# 
  7852  1EB9                     	;# 
  7853  1EBA                     	;# 
  7854  1EBB                     	;# 
  7855  1EBC                     	;# 
  7856  1EBD                     	;# 
  7857  1EBE                     	;# 
  7858  1EC3                     	;# 
  7859  1EC5                     	;# 
  7860  1EC6                     	;# 
  7861  1EC7                     	;# 
  7862  1EC8                     	;# 
  7863  1EC9                     	;# 
  7864  1ECA                     	;# 
  7865  1ECB                     	;# 
  7866  1ECB                     	;# 
  7867  1ECB                     	;# 
  7868  1ECC                     	;# 
  7869  1ECC                     	;# 
  7870  1ECC                     	;# 
  7871  1F10                     	;# 
  7872  1F11                     	;# 
  7873  1F12                     	;# 
  7874  1F14                     	;# 
  7875  1F15                     	;# 
  7876  1F1C                     	;# 
  7877  1F1D                     	;# 
  7878  1F1E                     	;# 
  7879  1F1F                     	;# 
  7880  1F20                     	;# 
  7881  1F21                     	;# 
  7882  1F22                     	;# 
  7883  1F23                     	;# 
  7884  1F24                     	;# 
  7885  1F25                     	;# 
  7886  1F26                     	;# 
  7887  1F27                     	;# 
  7888  1F38                     	;# 
  7889  1F39                     	;# 
  7890  1F3A                     	;# 
  7891  1F3B                     	;# 
  7892  1F3C                     	;# 
  7893  1F3D                     	;# 
  7894  1F3E                     	;# 
  7895  1F3F                     	;# 
  7896  1F43                     	;# 
  7897  1F44                     	;# 
  7898  1F45                     	;# 
  7899  1F46                     	;# 
  7900  1F47                     	;# 
  7901  1F48                     	;# 
  7902  1F49                     	;# 
  7903  1F4A                     	;# 
  7904  1F4E                     	;# 
  7905  1F4F                     	;# 
  7906  1F50                     	;# 
  7907  1F51                     	;# 
  7908  1F52                     	;# 
  7909  1F53                     	;# 
  7910  1F54                     	;# 
  7911  1F55                     	;# 
  7912  1FE4                     	;# 
  7913  1FE5                     	;# 
  7914  1FE6                     	;# 
  7915  1FE7                     	;# 
  7916  1FE8                     	;# 
  7917  1FE8                     	;# 
  7918  1FE9                     	;# 
  7919  1FEA                     	;# 
  7920  1FEB                     	;# 
  7921  1FED                     	;# 
  7922  1FEE                     	;# 
  7923  1FEF                     	;# 
  7924  0000                     	;# 
  7925  0001                     	;# 
  7926  0002                     	;# 
  7927  0003                     	;# 
  7928  0004                     	;# 
  7929  0005                     	;# 
  7930  0006                     	;# 
  7931  0007                     	;# 
  7932  0008                     	;# 
  7933  0009                     	;# 
  7934  000A                     	;# 
  7935  000B                     	;# 
  7936  000C                     	;# 
  7937  000D                     	;# 
  7938  000E                     	;# 
  7939  0012                     	;# 
  7940  0013                     	;# 
  7941  0014                     	;# 
  7942  0018                     	;# 
  7943  0019                     	;# 
  7944  001A                     	;# 
  7945  008C                     	;# 
  7946  008C                     	;# 
  7947  008D                     	;# 
  7948  008E                     	;# 
  7949  008E                     	;# 
  7950  008F                     	;# 
  7951  0090                     	;# 
  7952  0090                     	;# 
  7953  0091                     	;# 
  7954  0092                     	;# 
  7955  0092                     	;# 
  7956  0093                     	;# 
  7957  0094                     	;# 
  7958  0094                     	;# 
  7959  0095                     	;# 
  7960  0096                     	;# 
  7961  0096                     	;# 
  7962  0097                     	;# 
  7963  0098                     	;# 
  7964  0099                     	;# 
  7965  009A                     	;# 
  7966  009B                     	;# 
  7967  009B                     	;# 
  7968  009C                     	;# 
  7969  009D                     	;# 
  7970  009D                     	;# 
  7971  009E                     	;# 
  7972  009F                     	;# 
  7973  010C                     	;# 
  7974  010C                     	;# 
  7975  010D                     	;# 
  7976  010E                     	;# 
  7977  010F                     	;# 
  7978  010F                     	;# 
  7979  0110                     	;# 
  7980  0111                     	;# 
  7981  0112                     	;# 
  7982  0113                     	;# 
  7983  0114                     	;# 
  7984  0115                     	;# 
  7985  0116                     	;# 
  7986  0117                     	;# 
  7987  0118                     	;# 
  7988  0119                     	;# 
  7989  0119                     	;# 
  7990  0119                     	;# 
  7991  011A                     	;# 
  7992  011A                     	;# 
  7993  011A                     	;# 
  7994  011B                     	;# 
  7995  011B                     	;# 
  7996  011B                     	;# 
  7997  011B                     	;# 
  7998  011B                     	;# 
  7999  011C                     	;# 
  8000  011C                     	;# 
  8001  011C                     	;# 
  8002  011D                     	;# 
  8003  011D                     	;# 
  8004  011D                     	;# 
  8005  011E                     	;# 
  8006  011E                     	;# 
  8007  011E                     	;# 
  8008  011F                     	;# 
  8009  011F                     	;# 
  8010  011F                     	;# 
  8011  011F                     	;# 
  8012  011F                     	;# 
  8013  018C                     	;# 
  8014  018D                     	;# 
  8015  018E                     	;# 
  8016  018F                     	;# 
  8017  0190                     	;# 
  8018  0191                     	;# 
  8019  0192                     	;# 
  8020  0196                     	;# 
  8021  0197                     	;# 
  8022  0198                     	;# 
  8023  0199                     	;# 
  8024  019A                     	;# 
  8025  019B                     	;# 
  8026  019C                     	;# 
  8027  020C                     	;# 
  8028  020D                     	;# 
  8029  020E                     	;# 
  8030  020E                     	;# 
  8031  020F                     	;# 
  8032  020F                     	;# 
  8033  0210                     	;# 
  8034  0210                     	;# 
  8035  0211                     	;# 
  8036  0211                     	;# 
  8037  0212                     	;# 
  8038  0213                     	;# 
  8039  0214                     	;# 
  8040  0214                     	;# 
  8041  0215                     	;# 
  8042  0215                     	;# 
  8043  0216                     	;# 
  8044  0216                     	;# 
  8045  0217                     	;# 
  8046  0217                     	;# 
  8047  0218                     	;# 
  8048  0219                     	;# 
  8049  021A                     	;# 
  8050  021A                     	;# 
  8051  021B                     	;# 
  8052  021B                     	;# 
  8053  021C                     	;# 
  8054  021C                     	;# 
  8055  021D                     	;# 
  8056  021D                     	;# 
  8057  021E                     	;# 
  8058  021F                     	;# 
  8059  028C                     	;# 
  8060  028C                     	;# 
  8061  028D                     	;# 
  8062  028D                     	;# 
  8063  028E                     	;# 
  8064  028F                     	;# 
  8065  0290                     	;# 
  8066  0291                     	;# 
  8067  0292                     	;# 
  8068  0292                     	;# 
  8069  0293                     	;# 
  8070  0293                     	;# 
  8071  0294                     	;# 
  8072  0295                     	;# 
  8073  0296                     	;# 
  8074  0297                     	;# 
  8075  0298                     	;# 
  8076  0298                     	;# 
  8077  0299                     	;# 
  8078  0299                     	;# 
  8079  029A                     	;# 
  8080  029B                     	;# 
  8081  029C                     	;# 
  8082  029D                     	;# 
  8083  029F                     	;# 
  8084  030C                     	;# 
  8085  030C                     	;# 
  8086  030D                     	;# 
  8087  030E                     	;# 
  8088  030F                     	;# 
  8089  0310                     	;# 
  8090  0310                     	;# 
  8091  0311                     	;# 
  8092  0312                     	;# 
  8093  0313                     	;# 
  8094  0314                     	;# 
  8095  0314                     	;# 
  8096  0315                     	;# 
  8097  0316                     	;# 
  8098  0317                     	;# 
  8099  0318                     	;# 
  8100  0318                     	;# 
  8101  0319                     	;# 
  8102  031A                     	;# 
  8103  031B                     	;# 
  8104  038C                     	;# 
  8105  038C                     	;# 
  8106  038D                     	;# 
  8107  038E                     	;# 
  8108  0390                     	;# 
  8109  0390                     	;# 
  8110  0391                     	;# 
  8111  0392                     	;# 
  8112  048C                     	;# 
  8113  048C                     	;# 
  8114  048D                     	;# 
  8115  048E                     	;# 
  8116  048F                     	;# 
  8117  048F                     	;# 
  8118  0490                     	;# 
  8119  0491                     	;# 
  8120  0492                     	;# 
  8121  0492                     	;# 
  8122  0493                     	;# 
  8123  0494                     	;# 
  8124  0495                     	;# 
  8125  0495                     	;# 
  8126  0496                     	;# 
  8127  0497                     	;# 
  8128  0498                     	;# 
  8129  0499                     	;# 
  8130  049A                     	;# 
  8131  049B                     	;# 
  8132  049C                     	;# 
  8133  049D                     	;# 
  8134  058C                     	;# 
  8135  058C                     	;# 
  8136  058D                     	;# 
  8137  058E                     	;# 
  8138  058F                     	;# 
  8139  058F                     	;# 
  8140  0590                     	;# 
  8141  0591                     	;# 
  8142  0592                     	;# 
  8143  0593                     	;# 
  8144  059C                     	;# 
  8145  059C                     	;# 
  8146  059D                     	;# 
  8147  059D                     	;# 
  8148  059E                     	;# 
  8149  059F                     	;# 
  8150  060C                     	;# 
  8151  060C                     	;# 
  8152  060D                     	;# 
  8153  060D                     	;# 
  8154  060E                     	;# 
  8155  060F                     	;# 
  8156  0610                     	;# 
  8157  0611                     	;# 
  8158  0612                     	;# 
  8159  0613                     	;# 
  8160  0614                     	;# 
  8161  0616                     	;# 
  8162  0616                     	;# 
  8163  0617                     	;# 
  8164  0617                     	;# 
  8165  0618                     	;# 
  8166  0619                     	;# 
  8167  061A                     	;# 
  8168  061B                     	;# 
  8169  061C                     	;# 
  8170  061D                     	;# 
  8171  061E                     	;# 
  8172  070C                     	;# 
  8173  070D                     	;# 
  8174  070E                     	;# 
  8175  070F                     	;# 
  8176  0710                     	;# 
  8177  0711                     	;# 
  8178  0712                     	;# 
  8179  0713                     	;# 
  8180  0714                     	;# 
  8181  0716                     	;# 
  8182  0717                     	;# 
  8183  0718                     	;# 
  8184  0719                     	;# 
  8185  071A                     	;# 
  8186  071B                     	;# 
  8187  071C                     	;# 
  8188  071D                     	;# 
  8189  071E                     	;# 
  8190  0796                     	;# 
  8191  0797                     	;# 
  8192  0798                     	;# 
  8193  0799                     	;# 
  8194  079A                     	;# 
  8195  079B                     	;# 
  8196  079C                     	;# 
  8197  079D                     	;# 
  8198  080C                     	;# 
  8199  080D                     	;# 
  8200  080E                     	;# 
  8201  080F                     	;# 
  8202  0810                     	;# 
  8203  0811                     	;# 
  8204  0812                     	;# 
  8205  0813                     	;# 
  8206  0814                     	;# 
  8207  081A                     	;# 
  8208  081A                     	;# 
  8209  081B                     	;# 
  8210  081C                     	;# 
  8211  081C                     	;# 
  8212  081D                     	;# 
  8213  081E                     	;# 
  8214  081F                     	;# 
  8215  088C                     	;# 
  8216  088D                     	;# 
  8217  088E                     	;# 
  8218  088F                     	;# 
  8219  0890                     	;# 
  8220  0891                     	;# 
  8221  0892                     	;# 
  8222  0893                     	;# 
  8223  0895                     	;# 
  8224  0896                     	;# 
  8225  0897                     	;# 
  8226  0898                     	;# 
  8227  0899                     	;# 
  8228  089A                     	;# 
  8229  089B                     	;# 
  8230  090C                     	;# 
  8231  090E                     	;# 
  8232  090F                     	;# 
  8233  091F                     	;# 
  8234  098F                     	;# 
  8235  098F                     	;# 
  8236  0990                     	;# 
  8237  0991                     	;# 
  8238  0992                     	;# 
  8239  0993                     	;# 
  8240  0994                     	;# 
  8241  0995                     	;# 
  8242  0996                     	;# 
  8243  0997                     	;# 
  8244  1E0F                     	;# 
  8245  1E10                     	;# 
  8246  1E11                     	;# 
  8247  1E12                     	;# 
  8248  1E13                     	;# 
  8249  1E14                     	;# 
  8250  1E15                     	;# 
  8251  1E16                     	;# 
  8252  1E17                     	;# 
  8253  1E18                     	;# 
  8254  1E19                     	;# 
  8255  1E1A                     	;# 
  8256  1E1B                     	;# 
  8257  1E1C                     	;# 
  8258  1E1D                     	;# 
  8259  1E1E                     	;# 
  8260  1E1F                     	;# 
  8261  1E20                     	;# 
  8262  1E21                     	;# 
  8263  1E22                     	;# 
  8264  1E23                     	;# 
  8265  1E24                     	;# 
  8266  1E25                     	;# 
  8267  1E26                     	;# 
  8268  1E27                     	;# 
  8269  1E28                     	;# 
  8270  1E29                     	;# 
  8271  1E2A                     	;# 
  8272  1E2B                     	;# 
  8273  1E2C                     	;# 
  8274  1E2D                     	;# 
  8275  1E2E                     	;# 
  8276  1E2F                     	;# 
  8277  1E30                     	;# 
  8278  1E31                     	;# 
  8279  1E32                     	;# 
  8280  1E33                     	;# 
  8281  1E34                     	;# 
  8282  1E35                     	;# 
  8283  1E36                     	;# 
  8284  1E37                     	;# 
  8285  1E8F                     	;# 
  8286  1E90                     	;# 
  8287  1E91                     	;# 
  8288  1E92                     	;# 
  8289  1E93                     	;# 
  8290  1E94                     	;# 
  8291  1E95                     	;# 
  8292  1E96                     	;# 
  8293  1E97                     	;# 
  8294  1E9C                     	;# 
  8295  1E9D                     	;# 
  8296  1E9E                     	;# 
  8297  1EA1                     	;# 
  8298  1EA2                     	;# 
  8299  1EA3                     	;# 
  8300  1EA4                     	;# 
  8301  1EA9                     	;# 
  8302  1EAA                     	;# 
  8303  1EB1                     	;# 
  8304  1EB2                     	;# 
  8305  1EB8                     	;# 
  8306  1EB9                     	;# 
  8307  1EBA                     	;# 
  8308  1EBB                     	;# 
  8309  1EBC                     	;# 
  8310  1EBD                     	;# 
  8311  1EBE                     	;# 
  8312  1EC3                     	;# 
  8313  1EC5                     	;# 
  8314  1EC6                     	;# 
  8315  1EC7                     	;# 
  8316  1EC8                     	;# 
  8317  1EC9                     	;# 
  8318  1ECA                     	;# 
  8319  1ECB                     	;# 
  8320  1ECB                     	;# 
  8321  1ECB                     	;# 
  8322  1ECC                     	;# 
  8323  1ECC                     	;# 
  8324  1ECC                     	;# 
  8325  1F10                     	;# 
  8326  1F11                     	;# 
  8327  1F12                     	;# 
  8328  1F14                     	;# 
  8329  1F15                     	;# 
  8330  1F1C                     	;# 
  8331  1F1D                     	;# 
  8332  1F1E                     	;# 
  8333  1F1F                     	;# 
  8334  1F20                     	;# 
  8335  1F21                     	;# 
  8336  1F22                     	;# 
  8337  1F23                     	;# 
  8338  1F24                     	;# 
  8339  1F25                     	;# 
  8340  1F26                     	;# 
  8341  1F27                     	;# 
  8342  1F38                     	;# 
  8343  1F39                     	;# 
  8344  1F3A                     	;# 
  8345  1F3B                     	;# 
  8346  1F3C                     	;# 
  8347  1F3D                     	;# 
  8348  1F3E                     	;# 
  8349  1F3F                     	;# 
  8350  1F43                     	;# 
  8351  1F44                     	;# 
  8352  1F45                     	;# 
  8353  1F46                     	;# 
  8354  1F47                     	;# 
  8355  1F48                     	;# 
  8356  1F49                     	;# 
  8357  1F4A                     	;# 
  8358  1F4E                     	;# 
  8359  1F4F                     	;# 
  8360  1F50                     	;# 
  8361  1F51                     	;# 
  8362  1F52                     	;# 
  8363  1F53                     	;# 
  8364  1F54                     	;# 
  8365  1F55                     	;# 
  8366  1FE4                     	;# 
  8367  1FE5                     	;# 
  8368  1FE6                     	;# 
  8369  1FE7                     	;# 
  8370  1FE8                     	;# 
  8371  1FE8                     	;# 
  8372  1FE9                     	;# 
  8373  1FEA                     	;# 
  8374  1FEB                     	;# 
  8375  1FED                     	;# 
  8376  1FEE                     	;# 
  8377  1FEF                     	;# 
  8378  0000                     	;# 
  8379  0001                     	;# 
  8380  0002                     	;# 
  8381  0003                     	;# 
  8382  0004                     	;# 
  8383  0005                     	;# 
  8384  0006                     	;# 
  8385  0007                     	;# 
  8386  0008                     	;# 
  8387  0009                     	;# 
  8388  000A                     	;# 
  8389  000B                     	;# 
  8390  000C                     	;# 
  8391  000D                     	;# 
  8392  000E                     	;# 
  8393  0012                     	;# 
  8394  0013                     	;# 
  8395  0014                     	;# 
  8396  0018                     	;# 
  8397  0019                     	;# 
  8398  001A                     	;# 
  8399  008C                     	;# 
  8400  008C                     	;# 
  8401  008D                     	;# 
  8402  008E                     	;# 
  8403  008E                     	;# 
  8404  008F                     	;# 
  8405  0090                     	;# 
  8406  0090                     	;# 
  8407  0091                     	;# 
  8408  0092                     	;# 
  8409  0092                     	;# 
  8410  0093                     	;# 
  8411  0094                     	;# 
  8412  0094                     	;# 
  8413  0095                     	;# 
  8414  0096                     	;# 
  8415  0096                     	;# 
  8416  0097                     	;# 
  8417  0098                     	;# 
  8418  0099                     	;# 
  8419  009A                     	;# 
  8420  009B                     	;# 
  8421  009B                     	;# 
  8422  009C                     	;# 
  8423  009D                     	;# 
  8424  009D                     	;# 
  8425  009E                     	;# 
  8426  009F                     	;# 
  8427  010C                     	;# 
  8428  010C                     	;# 
  8429  010D                     	;# 
  8430  010E                     	;# 
  8431  010F                     	;# 
  8432  010F                     	;# 
  8433  0110                     	;# 
  8434  0111                     	;# 
  8435  0112                     	;# 
  8436  0113                     	;# 
  8437  0114                     	;# 
  8438  0115                     	;# 
  8439  0116                     	;# 
  8440  0117                     	;# 
  8441  0118                     	;# 
  8442  0119                     	;# 
  8443  0119                     	;# 
  8444  0119                     	;# 
  8445  011A                     	;# 
  8446  011A                     	;# 
  8447  011A                     	;# 
  8448  011B                     	;# 
  8449  011B                     	;# 
  8450  011B                     	;# 
  8451  011B                     	;# 
  8452  011B                     	;# 
  8453  011C                     	;# 
  8454  011C                     	;# 
  8455  011C                     	;# 
  8456  011D                     	;# 
  8457  011D                     	;# 
  8458  011D                     	;# 
  8459  011E                     	;# 
  8460  011E                     	;# 
  8461  011E                     	;# 
  8462  011F                     	;# 
  8463  011F                     	;# 
  8464  011F                     	;# 
  8465  011F                     	;# 
  8466  011F                     	;# 
  8467  018C                     	;# 
  8468  018D                     	;# 
  8469  018E                     	;# 
  8470  018F                     	;# 
  8471  0190                     	;# 
  8472  0191                     	;# 
  8473  0192                     	;# 
  8474  0196                     	;# 
  8475  0197                     	;# 
  8476  0198                     	;# 
  8477  0199                     	;# 
  8478  019A                     	;# 
  8479  019B                     	;# 
  8480  019C                     	;# 
  8481  020C                     	;# 
  8482  020D                     	;# 
  8483  020E                     	;# 
  8484  020E                     	;# 
  8485  020F                     	;# 
  8486  020F                     	;# 
  8487  0210                     	;# 
  8488  0210                     	;# 
  8489  0211                     	;# 
  8490  0211                     	;# 
  8491  0212                     	;# 
  8492  0213                     	;# 
  8493  0214                     	;# 
  8494  0214                     	;# 
  8495  0215                     	;# 
  8496  0215                     	;# 
  8497  0216                     	;# 
  8498  0216                     	;# 
  8499  0217                     	;# 
  8500  0217                     	;# 
  8501  0218                     	;# 
  8502  0219                     	;# 
  8503  021A                     	;# 
  8504  021A                     	;# 
  8505  021B                     	;# 
  8506  021B                     	;# 
  8507  021C                     	;# 
  8508  021C                     	;# 
  8509  021D                     	;# 
  8510  021D                     	;# 
  8511  021E                     	;# 
  8512  021F                     	;# 
  8513  028C                     	;# 
  8514  028C                     	;# 
  8515  028D                     	;# 
  8516  028D                     	;# 
  8517  028E                     	;# 
  8518  028F                     	;# 
  8519  0290                     	;# 
  8520  0291                     	;# 
  8521  0292                     	;# 
  8522  0292                     	;# 
  8523  0293                     	;# 
  8524  0293                     	;# 
  8525  0294                     	;# 
  8526  0295                     	;# 
  8527  0296                     	;# 
  8528  0297                     	;# 
  8529  0298                     	;# 
  8530  0298                     	;# 
  8531  0299                     	;# 
  8532  0299                     	;# 
  8533  029A                     	;# 
  8534  029B                     	;# 
  8535  029C                     	;# 
  8536  029D                     	;# 
  8537  029F                     	;# 
  8538  030C                     	;# 
  8539  030C                     	;# 
  8540  030D                     	;# 
  8541  030E                     	;# 
  8542  030F                     	;# 
  8543  0310                     	;# 
  8544  0310                     	;# 
  8545  0311                     	;# 
  8546  0312                     	;# 
  8547  0313                     	;# 
  8548  0314                     	;# 
  8549  0314                     	;# 
  8550  0315                     	;# 
  8551  0316                     	;# 
  8552  0317                     	;# 
  8553  0318                     	;# 
  8554  0318                     	;# 
  8555  0319                     	;# 
  8556  031A                     	;# 
  8557  031B                     	;# 
  8558  038C                     	;# 
  8559  038C                     	;# 
  8560  038D                     	;# 
  8561  038E                     	;# 
  8562  0390                     	;# 
  8563  0390                     	;# 
  8564  0391                     	;# 
  8565  0392                     	;# 
  8566  048C                     	;# 
  8567  048C                     	;# 
  8568  048D                     	;# 
  8569  048E                     	;# 
  8570  048F                     	;# 
  8571  048F                     	;# 
  8572  0490                     	;# 
  8573  0491                     	;# 
  8574  0492                     	;# 
  8575  0492                     	;# 
  8576  0493                     	;# 
  8577  0494                     	;# 
  8578  0495                     	;# 
  8579  0495                     	;# 
  8580  0496                     	;# 
  8581  0497                     	;# 
  8582  0498                     	;# 
  8583  0499                     	;# 
  8584  049A                     	;# 
  8585  049B                     	;# 
  8586  049C                     	;# 
  8587  049D                     	;# 
  8588  058C                     	;# 
  8589  058C                     	;# 
  8590  058D                     	;# 
  8591  058E                     	;# 
  8592  058F                     	;# 
  8593  058F                     	;# 
  8594  0590                     	;# 
  8595  0591                     	;# 
  8596  0592                     	;# 
  8597  0593                     	;# 
  8598  059C                     	;# 
  8599  059C                     	;# 
  8600  059D                     	;# 
  8601  059D                     	;# 
  8602  059E                     	;# 
  8603  059F                     	;# 
  8604  060C                     	;# 
  8605  060C                     	;# 
  8606  060D                     	;# 
  8607  060D                     	;# 
  8608  060E                     	;# 
  8609  060F                     	;# 
  8610  0610                     	;# 
  8611  0611                     	;# 
  8612  0612                     	;# 
  8613  0613                     	;# 
  8614  0614                     	;# 
  8615  0616                     	;# 
  8616  0616                     	;# 
  8617  0617                     	;# 
  8618  0617                     	;# 
  8619  0618                     	;# 
  8620  0619                     	;# 
  8621  061A                     	;# 
  8622  061B                     	;# 
  8623  061C                     	;# 
  8624  061D                     	;# 
  8625  061E                     	;# 
  8626  070C                     	;# 
  8627  070D                     	;# 
  8628  070E                     	;# 
  8629  070F                     	;# 
  8630  0710                     	;# 
  8631  0711                     	;# 
  8632  0712                     	;# 
  8633  0713                     	;# 
  8634  0714                     	;# 
  8635  0716                     	;# 
  8636  0717                     	;# 
  8637  0718                     	;# 
  8638  0719                     	;# 
  8639  071A                     	;# 
  8640  071B                     	;# 
  8641  071C                     	;# 
  8642  071D                     	;# 
  8643  071E                     	;# 
  8644  0796                     	;# 
  8645  0797                     	;# 
  8646  0798                     	;# 
  8647  0799                     	;# 
  8648  079A                     	;# 
  8649  079B                     	;# 
  8650  079C                     	;# 
  8651  079D                     	;# 
  8652  080C                     	;# 
  8653  080D                     	;# 
  8654  080E                     	;# 
  8655  080F                     	;# 
  8656  0810                     	;# 
  8657  0811                     	;# 
  8658  0812                     	;# 
  8659  0813                     	;# 
  8660  0814                     	;# 
  8661  081A                     	;# 
  8662  081A                     	;# 
  8663  081B                     	;# 
  8664  081C                     	;# 
  8665  081C                     	;# 
  8666  081D                     	;# 
  8667  081E                     	;# 
  8668  081F                     	;# 
  8669  088C                     	;# 
  8670  088D                     	;# 
  8671  088E                     	;# 
  8672  088F                     	;# 
  8673  0890                     	;# 
  8674  0891                     	;# 
  8675  0892                     	;# 
  8676  0893                     	;# 
  8677  0895                     	;# 
  8678  0896                     	;# 
  8679  0897                     	;# 
  8680  0898                     	;# 
  8681  0899                     	;# 
  8682  089A                     	;# 
  8683  089B                     	;# 
  8684  090C                     	;# 
  8685  090E                     	;# 
  8686  090F                     	;# 
  8687  091F                     	;# 
  8688  098F                     	;# 
  8689  098F                     	;# 
  8690  0990                     	;# 
  8691  0991                     	;# 
  8692  0992                     	;# 
  8693  0993                     	;# 
  8694  0994                     	;# 
  8695  0995                     	;# 
  8696  0996                     	;# 
  8697  0997                     	;# 
  8698  1E0F                     	;# 
  8699  1E10                     	;# 
  8700  1E11                     	;# 
  8701  1E12                     	;# 
  8702  1E13                     	;# 
  8703  1E14                     	;# 
  8704  1E15                     	;# 
  8705  1E16                     	;# 
  8706  1E17                     	;# 
  8707  1E18                     	;# 
  8708  1E19                     	;# 
  8709  1E1A                     	;# 
  8710  1E1B                     	;# 
  8711  1E1C                     	;# 
  8712  1E1D                     	;# 
  8713  1E1E                     	;# 
  8714  1E1F                     	;# 
  8715  1E20                     	;# 
  8716  1E21                     	;# 
  8717  1E22                     	;# 
  8718  1E23                     	;# 
  8719  1E24                     	;# 
  8720  1E25                     	;# 
  8721  1E26                     	;# 
  8722  1E27                     	;# 
  8723  1E28                     	;# 
  8724  1E29                     	;# 
  8725  1E2A                     	;# 
  8726  1E2B                     	;# 
  8727  1E2C                     	;# 
  8728  1E2D                     	;# 
  8729  1E2E                     	;# 
  8730  1E2F                     	;# 
  8731  1E30                     	;# 
  8732  1E31                     	;# 
  8733  1E32                     	;# 
  8734  1E33                     	;# 
  8735  1E34                     	;# 
  8736  1E35                     	;# 
  8737  1E36                     	;# 
  8738  1E37                     	;# 
  8739  1E8F                     	;# 
  8740  1E90                     	;# 
  8741  1E91                     	;# 
  8742  1E92                     	;# 
  8743  1E93                     	;# 
  8744  1E94                     	;# 
  8745  1E95                     	;# 
  8746  1E96                     	;# 
  8747  1E97                     	;# 
  8748  1E9C                     	;# 
  8749  1E9D                     	;# 
  8750  1E9E                     	;# 
  8751  1EA1                     	;# 
  8752  1EA2                     	;# 
  8753  1EA3                     	;# 
  8754  1EA4                     	;# 
  8755  1EA9                     	;# 
  8756  1EAA                     	;# 
  8757  1EB1                     	;# 
  8758  1EB2                     	;# 
  8759  1EB8                     	;# 
  8760  1EB9                     	;# 
  8761  1EBA                     	;# 
  8762  1EBB                     	;# 
  8763  1EBC                     	;# 
  8764  1EBD                     	;# 
  8765  1EBE                     	;# 
  8766  1EC3                     	;# 
  8767  1EC5                     	;# 
  8768  1EC6                     	;# 
  8769  1EC7                     	;# 
  8770  1EC8                     	;# 
  8771  1EC9                     	;# 
  8772  1ECA                     	;# 
  8773  1ECB                     	;# 
  8774  1ECB                     	;# 
  8775  1ECB                     	;# 
  8776  1ECC                     	;# 
  8777  1ECC                     	;# 
  8778  1ECC                     	;# 
  8779  1F10                     	;# 
  8780  1F11                     	;# 
  8781  1F12                     	;# 
  8782  1F14                     	;# 
  8783  1F15                     	;# 
  8784  1F1C                     	;# 
  8785  1F1D                     	;# 
  8786  1F1E                     	;# 
  8787  1F1F                     	;# 
  8788  1F20                     	;# 
  8789  1F21                     	;# 
  8790  1F22                     	;# 
  8791  1F23                     	;# 
  8792  1F24                     	;# 
  8793  1F25                     	;# 
  8794  1F26                     	;# 
  8795  1F27                     	;# 
  8796  1F38                     	;# 
  8797  1F39                     	;# 
  8798  1F3A                     	;# 
  8799  1F3B                     	;# 
  8800  1F3C                     	;# 
  8801  1F3D                     	;# 
  8802  1F3E                     	;# 
  8803  1F3F                     	;# 
  8804  1F43                     	;# 
  8805  1F44                     	;# 
  8806  1F45                     	;# 
  8807  1F46                     	;# 
  8808  1F47                     	;# 
  8809  1F48                     	;# 
  8810  1F49                     	;# 
  8811  1F4A                     	;# 
  8812  1F4E                     	;# 
  8813  1F4F                     	;# 
  8814  1F50                     	;# 
  8815  1F51                     	;# 
  8816  1F52                     	;# 
  8817  1F53                     	;# 
  8818  1F54                     	;# 
  8819  1F55                     	;# 
  8820  1FE4                     	;# 
  8821  1FE5                     	;# 
  8822  1FE6                     	;# 
  8823  1FE7                     	;# 
  8824  1FE8                     	;# 
  8825  1FE8                     	;# 
  8826  1FE9                     	;# 
  8827  1FEA                     	;# 
  8828  1FEB                     	;# 
  8829  1FED                     	;# 
  8830  1FEE                     	;# 
  8831  1FEF                     	;# 
  8832  0000                     	;# 
  8833  0001                     	;# 
  8834  0002                     	;# 
  8835  0003                     	;# 
  8836  0004                     	;# 
  8837  0005                     	;# 
  8838  0006                     	;# 
  8839  0007                     	;# 
  8840  0008                     	;# 
  8841  0009                     	;# 
  8842  000A                     	;# 
  8843  000B                     	;# 
  8844  000C                     	;# 
  8845  000D                     	;# 
  8846  000E                     	;# 
  8847  0012                     	;# 
  8848  0013                     	;# 
  8849  0014                     	;# 
  8850  0018                     	;# 
  8851  0019                     	;# 
  8852  001A                     	;# 
  8853  008C                     	;# 
  8854  008C                     	;# 
  8855  008D                     	;# 
  8856  008E                     	;# 
  8857  008E                     	;# 
  8858  008F                     	;# 
  8859  0090                     	;# 
  8860  0090                     	;# 
  8861  0091                     	;# 
  8862  0092                     	;# 
  8863  0092                     	;# 
  8864  0093                     	;# 
  8865  0094                     	;# 
  8866  0094                     	;# 
  8867  0095                     	;# 
  8868  0096                     	;# 
  8869  0096                     	;# 
  8870  0097                     	;# 
  8871  0098                     	;# 
  8872  0099                     	;# 
  8873  009A                     	;# 
  8874  009B                     	;# 
  8875  009B                     	;# 
  8876  009C                     	;# 
  8877  009D                     	;# 
  8878  009D                     	;# 
  8879  009E                     	;# 
  8880  009F                     	;# 
  8881  010C                     	;# 
  8882  010C                     	;# 
  8883  010D                     	;# 
  8884  010E                     	;# 
  8885  010F                     	;# 
  8886  010F                     	;# 
  8887  0110                     	;# 
  8888  0111                     	;# 
  8889  0112                     	;# 
  8890  0113                     	;# 
  8891  0114                     	;# 
  8892  0115                     	;# 
  8893  0116                     	;# 
  8894  0117                     	;# 
  8895  0118                     	;# 
  8896  0119                     	;# 
  8897  0119                     	;# 
  8898  0119                     	;# 
  8899  011A                     	;# 
  8900  011A                     	;# 
  8901  011A                     	;# 
  8902  011B                     	;# 
  8903  011B                     	;# 
  8904  011B                     	;# 
  8905  011B                     	;# 
  8906  011B                     	;# 
  8907  011C                     	;# 
  8908  011C                     	;# 
  8909  011C                     	;# 
  8910  011D                     	;# 
  8911  011D                     	;# 
  8912  011D                     	;# 
  8913  011E                     	;# 
  8914  011E                     	;# 
  8915  011E                     	;# 
  8916  011F                     	;# 
  8917  011F                     	;# 
  8918  011F                     	;# 
  8919  011F                     	;# 
  8920  011F                     	;# 
  8921  018C                     	;# 
  8922  018D                     	;# 
  8923  018E                     	;# 
  8924  018F                     	;# 
  8925  0190                     	;# 
  8926  0191                     	;# 
  8927  0192                     	;# 
  8928  0196                     	;# 
  8929  0197                     	;# 
  8930  0198                     	;# 
  8931  0199                     	;# 
  8932  019A                     	;# 
  8933  019B                     	;# 
  8934  019C                     	;# 
  8935  020C                     	;# 
  8936  020D                     	;# 
  8937  020E                     	;# 
  8938  020E                     	;# 
  8939  020F                     	;# 
  8940  020F                     	;# 
  8941  0210                     	;# 
  8942  0210                     	;# 
  8943  0211                     	;# 
  8944  0211                     	;# 
  8945  0212                     	;# 
  8946  0213                     	;# 
  8947  0214                     	;# 
  8948  0214                     	;# 
  8949  0215                     	;# 
  8950  0215                     	;# 
  8951  0216                     	;# 
  8952  0216                     	;# 
  8953  0217                     	;# 
  8954  0217                     	;# 
  8955  0218                     	;# 
  8956  0219                     	;# 
  8957  021A                     	;# 
  8958  021A                     	;# 
  8959  021B                     	;# 
  8960  021B                     	;# 
  8961  021C                     	;# 
  8962  021C                     	;# 
  8963  021D                     	;# 
  8964  021D                     	;# 
  8965  021E                     	;# 
  8966  021F                     	;# 
  8967  028C                     	;# 
  8968  028C                     	;# 
  8969  028D                     	;# 
  8970  028D                     	;# 
  8971  028E                     	;# 
  8972  028F                     	;# 
  8973  0290                     	;# 
  8974  0291                     	;# 
  8975  0292                     	;# 
  8976  0292                     	;# 
  8977  0293                     	;# 
  8978  0293                     	;# 
  8979  0294                     	;# 
  8980  0295                     	;# 
  8981  0296                     	;# 
  8982  0297                     	;# 
  8983  0298                     	;# 
  8984  0298                     	;# 
  8985  0299                     	;# 
  8986  0299                     	;# 
  8987  029A                     	;# 
  8988  029B                     	;# 
  8989  029C                     	;# 
  8990  029D                     	;# 
  8991  029F                     	;# 
  8992  030C                     	;# 
  8993  030C                     	;# 
  8994  030D                     	;# 
  8995  030E                     	;# 
  8996  030F                     	;# 
  8997  0310                     	;# 
  8998  0310                     	;# 
  8999  0311                     	;# 
  9000  0312                     	;# 
  9001  0313                     	;# 
  9002  0314                     	;# 
  9003  0314                     	;# 
  9004  0315                     	;# 
  9005  0316                     	;# 
  9006  0317                     	;# 
  9007  0318                     	;# 
  9008  0318                     	;# 
  9009  0319                     	;# 
  9010  031A                     	;# 
  9011  031B                     	;# 
  9012  038C                     	;# 
  9013  038C                     	;# 
  9014  038D                     	;# 
  9015  038E                     	;# 
  9016  0390                     	;# 
  9017  0390                     	;# 
  9018  0391                     	;# 
  9019  0392                     	;# 
  9020  048C                     	;# 
  9021  048C                     	;# 
  9022  048D                     	;# 
  9023  048E                     	;# 
  9024  048F                     	;# 
  9025  048F                     	;# 
  9026  0490                     	;# 
  9027  0491                     	;# 
  9028  0492                     	;# 
  9029  0492                     	;# 
  9030  0493                     	;# 
  9031  0494                     	;# 
  9032  0495                     	;# 
  9033  0495                     	;# 
  9034  0496                     	;# 
  9035  0497                     	;# 
  9036  0498                     	;# 
  9037  0499                     	;# 
  9038  049A                     	;# 
  9039  049B                     	;# 
  9040  049C                     	;# 
  9041  049D                     	;# 
  9042  058C                     	;# 
  9043  058C                     	;# 
  9044  058D                     	;# 
  9045  058E                     	;# 
  9046  058F                     	;# 
  9047  058F                     	;# 
  9048  0590                     	;# 
  9049  0591                     	;# 
  9050  0592                     	;# 
  9051  0593                     	;# 
  9052  059C                     	;# 
  9053  059C                     	;# 
  9054  059D                     	;# 
  9055  059D                     	;# 
  9056  059E                     	;# 
  9057  059F                     	;# 
  9058  060C                     	;# 
  9059  060C                     	;# 
  9060  060D                     	;# 
  9061  060D                     	;# 
  9062  060E                     	;# 
  9063  060F                     	;# 
  9064  0610                     	;# 
  9065  0611                     	;# 
  9066  0612                     	;# 
  9067  0613                     	;# 
  9068  0614                     	;# 
  9069  0616                     	;# 
  9070  0616                     	;# 
  9071  0617                     	;# 
  9072  0617                     	;# 
  9073  0618                     	;# 
  9074  0619                     	;# 
  9075  061A                     	;# 
  9076  061B                     	;# 
  9077  061C                     	;# 
  9078  061D                     	;# 
  9079  061E                     	;# 
  9080  070C                     	;# 
  9081  070D                     	;# 
  9082  070E                     	;# 
  9083  070F                     	;# 
  9084  0710                     	;# 
  9085  0711                     	;# 
  9086  0712                     	;# 
  9087  0713                     	;# 
  9088  0714                     	;# 
  9089  0716                     	;# 
  9090  0717                     	;# 
  9091  0718                     	;# 
  9092  0719                     	;# 
  9093  071A                     	;# 
  9094  071B                     	;# 
  9095  071C                     	;# 
  9096  071D                     	;# 
  9097  071E                     	;# 
  9098  0796                     	;# 
  9099  0797                     	;# 
  9100  0798                     	;# 
  9101  0799                     	;# 
  9102  079A                     	;# 
  9103  079B                     	;# 
  9104  079C                     	;# 
  9105  079D                     	;# 
  9106  080C                     	;# 
  9107  080D                     	;# 
  9108  080E                     	;# 
  9109  080F                     	;# 
  9110  0810                     	;# 
  9111  0811                     	;# 
  9112  0812                     	;# 
  9113  0813                     	;# 
  9114  0814                     	;# 
  9115  081A                     	;# 
  9116  081A                     	;# 
  9117  081B                     	;# 
  9118  081C                     	;# 
  9119  081C                     	;# 
  9120  081D                     	;# 
  9121  081E                     	;# 
  9122  081F                     	;# 
  9123  088C                     	;# 
  9124  088D                     	;# 
  9125  088E                     	;# 
  9126  088F                     	;# 
  9127  0890                     	;# 
  9128  0891                     	;# 
  9129  0892                     	;# 
  9130  0893                     	;# 
  9131  0895                     	;# 
  9132  0896                     	;# 
  9133  0897                     	;# 
  9134  0898                     	;# 
  9135  0899                     	;# 
  9136  089A                     	;# 
  9137  089B                     	;# 
  9138  090C                     	;# 
  9139  090E                     	;# 
  9140  090F                     	;# 
  9141  091F                     	;# 
  9142  098F                     	;# 
  9143  098F                     	;# 
  9144  0990                     	;# 
  9145  0991                     	;# 
  9146  0992                     	;# 
  9147  0993                     	;# 
  9148  0994                     	;# 
  9149  0995                     	;# 
  9150  0996                     	;# 
  9151  0997                     	;# 
  9152  1E0F                     	;# 
  9153  1E10                     	;# 
  9154  1E11                     	;# 
  9155  1E12                     	;# 
  9156  1E13                     	;# 
  9157  1E14                     	;# 
  9158  1E15                     	;# 
  9159  1E16                     	;# 
  9160  1E17                     	;# 
  9161  1E18                     	;# 
  9162  1E19                     	;# 
  9163  1E1A                     	;# 
  9164  1E1B                     	;# 
  9165  1E1C                     	;# 
  9166  1E1D                     	;# 
  9167  1E1E                     	;# 
  9168  1E1F                     	;# 
  9169  1E20                     	;# 
  9170  1E21                     	;# 
  9171  1E22                     	;# 
  9172  1E23                     	;# 
  9173  1E24                     	;# 
  9174  1E25                     	;# 
  9175  1E26                     	;# 
  9176  1E27                     	;# 
  9177  1E28                     	;# 
  9178  1E29                     	;# 
  9179  1E2A                     	;# 
  9180  1E2B                     	;# 
  9181  1E2C                     	;# 
  9182  1E2D                     	;# 
  9183  1E2E                     	;# 
  9184  1E2F                     	;# 
  9185  1E30                     	;# 
  9186  1E31                     	;# 
  9187  1E32                     	;# 
  9188  1E33                     	;# 
  9189  1E34                     	;# 
  9190  1E35                     	;# 
  9191  1E36                     	;# 
  9192  1E37                     	;# 
  9193  1E8F                     	;# 
  9194  1E90                     	;# 
  9195  1E91                     	;# 
  9196  1E92                     	;# 
  9197  1E93                     	;# 
  9198  1E94                     	;# 
  9199  1E95                     	;# 
  9200  1E96                     	;# 
  9201  1E97                     	;# 
  9202  1E9C                     	;# 
  9203  1E9D                     	;# 
  9204  1E9E                     	;# 
  9205  1EA1                     	;# 
  9206  1EA2                     	;# 
  9207  1EA3                     	;# 
  9208  1EA4                     	;# 
  9209  1EA9                     	;# 
  9210  1EAA                     	;# 
  9211  1EB1                     	;# 
  9212  1EB2                     	;# 
  9213  1EB8                     	;# 
  9214  1EB9                     	;# 
  9215  1EBA                     	;# 
  9216  1EBB                     	;# 
  9217  1EBC                     	;# 
  9218  1EBD                     	;# 
  9219  1EBE                     	;# 
  9220  1EC3                     	;# 
  9221  1EC5                     	;# 
  9222  1EC6                     	;# 
  9223  1EC7                     	;# 
  9224  1EC8                     	;# 
  9225  1EC9                     	;# 
  9226  1ECA                     	;# 
  9227  1ECB                     	;# 
  9228  1ECB                     	;# 
  9229  1ECB                     	;# 
  9230  1ECC                     	;# 
  9231  1ECC                     	;# 
  9232  1ECC                     	;# 
  9233  1F10                     	;# 
  9234  1F11                     	;# 
  9235  1F12                     	;# 
  9236  1F14                     	;# 
  9237  1F15                     	;# 
  9238  1F1C                     	;# 
  9239  1F1D                     	;# 
  9240  1F1E                     	;# 
  9241  1F1F                     	;# 
  9242  1F20                     	;# 
  9243  1F21                     	;# 
  9244  1F22                     	;# 
  9245  1F23                     	;# 
  9246  1F24                     	;# 
  9247  1F25                     	;# 
  9248  1F26                     	;# 
  9249  1F27                     	;# 
  9250  1F38                     	;# 
  9251  1F39                     	;# 
  9252  1F3A                     	;# 
  9253  1F3B                     	;# 
  9254  1F3C                     	;# 
  9255  1F3D                     	;# 
  9256  1F3E                     	;# 
  9257  1F3F                     	;# 
  9258  1F43                     	;# 
  9259  1F44                     	;# 
  9260  1F45                     	;# 
  9261  1F46                     	;# 
  9262  1F47                     	;# 
  9263  1F48                     	;# 
  9264  1F49                     	;# 
  9265  1F4A                     	;# 
  9266  1F4E                     	;# 
  9267  1F4F                     	;# 
  9268  1F50                     	;# 
  9269  1F51                     	;# 
  9270  1F52                     	;# 
  9271  1F53                     	;# 
  9272  1F54                     	;# 
  9273  1F55                     	;# 
  9274  1FE4                     	;# 
  9275  1FE5                     	;# 
  9276  1FE6                     	;# 
  9277  1FE7                     	;# 
  9278  1FE8                     	;# 
  9279  1FE8                     	;# 
  9280  1FE9                     	;# 
  9281  1FEA                     	;# 
  9282  1FEB                     	;# 
  9283  1FED                     	;# 
  9284  1FEE                     	;# 
  9285  1FEF                     	;# 
  9286  0000                     	;# 
  9287  0001                     	;# 
  9288  0002                     	;# 
  9289  0003                     	;# 
  9290  0004                     	;# 
  9291  0005                     	;# 
  9292  0006                     	;# 
  9293  0007                     	;# 
  9294  0008                     	;# 
  9295  0009                     	;# 
  9296  000A                     	;# 
  9297  000B                     	;# 
  9298  000C                     	;# 
  9299  000D                     	;# 
  9300  000E                     	;# 
  9301  0012                     	;# 
  9302  0013                     	;# 
  9303  0014                     	;# 
  9304  0018                     	;# 
  9305  0019                     	;# 
  9306  001A                     	;# 
  9307  008C                     	;# 
  9308  008C                     	;# 
  9309  008D                     	;# 
  9310  008E                     	;# 
  9311  008E                     	;# 
  9312  008F                     	;# 
  9313  0090                     	;# 
  9314  0090                     	;# 
  9315  0091                     	;# 
  9316  0092                     	;# 
  9317  0092                     	;# 
  9318  0093                     	;# 
  9319  0094                     	;# 
  9320  0094                     	;# 
  9321  0095                     	;# 
  9322  0096                     	;# 
  9323  0096                     	;# 
  9324  0097                     	;# 
  9325  0098                     	;# 
  9326  0099                     	;# 
  9327  009A                     	;# 
  9328  009B                     	;# 
  9329  009B                     	;# 
  9330  009C                     	;# 
  9331  009D                     	;# 
  9332  009D                     	;# 
  9333  009E                     	;# 
  9334  009F                     	;# 
  9335  010C                     	;# 
  9336  010C                     	;# 
  9337  010D                     	;# 
  9338  010E                     	;# 
  9339  010F                     	;# 
  9340  010F                     	;# 
  9341  0110                     	;# 
  9342  0111                     	;# 
  9343  0112                     	;# 
  9344  0113                     	;# 
  9345  0114                     	;# 
  9346  0115                     	;# 
  9347  0116                     	;# 
  9348  0117                     	;# 
  9349  0118                     	;# 
  9350  0119                     	;# 
  9351  0119                     	;# 
  9352  0119                     	;# 
  9353  011A                     	;# 
  9354  011A                     	;# 
  9355  011A                     	;# 
  9356  011B                     	;# 
  9357  011B                     	;# 
  9358  011B                     	;# 
  9359  011B                     	;# 
  9360  011B                     	;# 
  9361  011C                     	;# 
  9362  011C                     	;# 
  9363  011C                     	;# 
  9364  011D                     	;# 
  9365  011D                     	;# 
  9366  011D                     	;# 
  9367  011E                     	;# 
  9368  011E                     	;# 
  9369  011E                     	;# 
  9370  011F                     	;# 
  9371  011F                     	;# 
  9372  011F                     	;# 
  9373  011F                     	;# 
  9374  011F                     	;# 
  9375  018C                     	;# 
  9376  018D                     	;# 
  9377  018E                     	;# 
  9378  018F                     	;# 
  9379  0190                     	;# 
  9380  0191                     	;# 
  9381  0192                     	;# 
  9382  0196                     	;# 
  9383  0197                     	;# 
  9384  0198                     	;# 
  9385  0199                     	;# 
  9386  019A                     	;# 
  9387  019B                     	;# 
  9388  019C                     	;# 
  9389  020C                     	;# 
  9390  020D                     	;# 
  9391  020E                     	;# 
  9392  020E                     	;# 
  9393  020F                     	;# 
  9394  020F                     	;# 
  9395  0210                     	;# 
  9396  0210                     	;# 
  9397  0211                     	;# 
  9398  0211                     	;# 
  9399  0212                     	;# 
  9400  0213                     	;# 
  9401  0214                     	;# 
  9402  0214                     	;# 
  9403  0215                     	;# 
  9404  0215                     	;# 
  9405  0216                     	;# 
  9406  0216                     	;# 
  9407  0217                     	;# 
  9408  0217                     	;# 
  9409  0218                     	;# 
  9410  0219                     	;# 
  9411  021A                     	;# 
  9412  021A                     	;# 
  9413  021B                     	;# 
  9414  021B                     	;# 
  9415  021C                     	;# 
  9416  021C                     	;# 
  9417  021D                     	;# 
  9418  021D                     	;# 
  9419  021E                     	;# 
  9420  021F                     	;# 
  9421  028C                     	;# 
  9422  028C                     	;# 
  9423  028D                     	;# 
  9424  028D                     	;# 
  9425  028E                     	;# 
  9426  028F                     	;# 
  9427  0290                     	;# 
  9428  0291                     	;# 
  9429  0292                     	;# 
  9430  0292                     	;# 
  9431  0293                     	;# 
  9432  0293                     	;# 
  9433  0294                     	;# 
  9434  0295                     	;# 
  9435  0296                     	;# 
  9436  0297                     	;# 
  9437  0298                     	;# 
  9438  0298                     	;# 
  9439  0299                     	;# 
  9440  0299                     	;# 
  9441  029A                     	;# 
  9442  029B                     	;# 
  9443  029C                     	;# 
  9444  029D                     	;# 
  9445  029F                     	;# 
  9446  030C                     	;# 
  9447  030C                     	;# 
  9448  030D                     	;# 
  9449  030E                     	;# 
  9450  030F                     	;# 
  9451  0310                     	;# 
  9452  0310                     	;# 
  9453  0311                     	;# 
  9454  0312                     	;# 
  9455  0313                     	;# 
  9456  0314                     	;# 
  9457  0314                     	;# 
  9458  0315                     	;# 
  9459  0316                     	;# 
  9460  0317                     	;# 
  9461  0318                     	;# 
  9462  0318                     	;# 
  9463  0319                     	;# 
  9464  031A                     	;# 
  9465  031B                     	;# 
  9466  038C                     	;# 
  9467  038C                     	;# 
  9468  038D                     	;# 
  9469  038E                     	;# 
  9470  0390                     	;# 
  9471  0390                     	;# 
  9472  0391                     	;# 
  9473  0392                     	;# 
  9474  048C                     	;# 
  9475  048C                     	;# 
  9476  048D                     	;# 
  9477  048E                     	;# 
  9478  048F                     	;# 
  9479  048F                     	;# 
  9480  0490                     	;# 
  9481  0491                     	;# 
  9482  0492                     	;# 
  9483  0492                     	;# 
  9484  0493                     	;# 
  9485  0494                     	;# 
  9486  0495                     	;# 
  9487  0495                     	;# 
  9488  0496                     	;# 
  9489  0497                     	;# 
  9490  0498                     	;# 
  9491  0499                     	;# 
  9492  049A                     	;# 
  9493  049B                     	;# 
  9494  049C                     	;# 
  9495  049D                     	;# 
  9496  058C                     	;# 
  9497  058C                     	;# 
  9498  058D                     	;# 
  9499  058E                     	;# 
  9500  058F                     	;# 
  9501  058F                     	;# 
  9502  0590                     	;# 
  9503  0591                     	;# 
  9504  0592                     	;# 
  9505  0593                     	;# 
  9506  059C                     	;# 
  9507  059C                     	;# 
  9508  059D                     	;# 
  9509  059D                     	;# 
  9510  059E                     	;# 
  9511  059F                     	;# 
  9512  060C                     	;# 
  9513  060C                     	;# 
  9514  060D                     	;# 
  9515  060D                     	;# 
  9516  060E                     	;# 
  9517  060F                     	;# 
  9518  0610                     	;# 
  9519  0611                     	;# 
  9520  0612                     	;# 
  9521  0613                     	;# 
  9522  0614                     	;# 
  9523  0616                     	;# 
  9524  0616                     	;# 
  9525  0617                     	;# 
  9526  0617                     	;# 
  9527  0618                     	;# 
  9528  0619                     	;# 
  9529  061A                     	;# 
  9530  061B                     	;# 
  9531  061C                     	;# 
  9532  061D                     	;# 
  9533  061E                     	;# 
  9534  070C                     	;# 
  9535  070D                     	;# 
  9536  070E                     	;# 
  9537  070F                     	;# 
  9538  0710                     	;# 
  9539  0711                     	;# 
  9540  0712                     	;# 
  9541  0713                     	;# 
  9542  0714                     	;# 
  9543  0716                     	;# 
  9544  0717                     	;# 
  9545  0718                     	;# 
  9546  0719                     	;# 
  9547  071A                     	;# 
  9548  071B                     	;# 
  9549  071C                     	;# 
  9550  071D                     	;# 
  9551  071E                     	;# 
  9552  0796                     	;# 
  9553  0797                     	;# 
  9554  0798                     	;# 
  9555  0799                     	;# 
  9556  079A                     	;# 
  9557  079B                     	;# 
  9558  079C                     	;# 
  9559  079D                     	;# 
  9560  080C                     	;# 
  9561  080D                     	;# 
  9562  080E                     	;# 
  9563  080F                     	;# 
  9564  0810                     	;# 
  9565  0811                     	;# 
  9566  0812                     	;# 
  9567  0813                     	;# 
  9568  0814                     	;# 
  9569  081A                     	;# 
  9570  081A                     	;# 
  9571  081B                     	;# 
  9572  081C                     	;# 
  9573  081C                     	;# 
  9574  081D                     	;# 
  9575  081E                     	;# 
  9576  081F                     	;# 
  9577  088C                     	;# 
  9578  088D                     	;# 
  9579  088E                     	;# 
  9580  088F                     	;# 
  9581  0890                     	;# 
  9582  0891                     	;# 
  9583  0892                     	;# 
  9584  0893                     	;# 
  9585  0895                     	;# 
  9586  0896                     	;# 
  9587  0897                     	;# 
  9588  0898                     	;# 
  9589  0899                     	;# 
  9590  089A                     	;# 
  9591  089B                     	;# 
  9592  090C                     	;# 
  9593  090E                     	;# 
  9594  090F                     	;# 
  9595  091F                     	;# 
  9596  098F                     	;# 
  9597  098F                     	;# 
  9598  0990                     	;# 
  9599  0991                     	;# 
  9600  0992                     	;# 
  9601  0993                     	;# 
  9602  0994                     	;# 
  9603  0995                     	;# 
  9604  0996                     	;# 
  9605  0997                     	;# 
  9606  1E0F                     	;# 
  9607  1E10                     	;# 
  9608  1E11                     	;# 
  9609  1E12                     	;# 
  9610  1E13                     	;# 
  9611  1E14                     	;# 
  9612  1E15                     	;# 
  9613  1E16                     	;# 
  9614  1E17                     	;# 
  9615  1E18                     	;# 
  9616  1E19                     	;# 
  9617  1E1A                     	;# 
  9618  1E1B                     	;# 
  9619  1E1C                     	;# 
  9620  1E1D                     	;# 
  9621  1E1E                     	;# 
  9622  1E1F                     	;# 
  9623  1E20                     	;# 
  9624  1E21                     	;# 
  9625  1E22                     	;# 
  9626  1E23                     	;# 
  9627  1E24                     	;# 
  9628  1E25                     	;# 
  9629  1E26                     	;# 
  9630  1E27                     	;# 
  9631  1E28                     	;# 
  9632  1E29                     	;# 
  9633  1E2A                     	;# 
  9634  1E2B                     	;# 
  9635  1E2C                     	;# 
  9636  1E2D                     	;# 
  9637  1E2E                     	;# 
  9638  1E2F                     	;# 
  9639  1E30                     	;# 
  9640  1E31                     	;# 
  9641  1E32                     	;# 
  9642  1E33                     	;# 
  9643  1E34                     	;# 
  9644  1E35                     	;# 
  9645  1E36                     	;# 
  9646  1E37                     	;# 
  9647  1E8F                     	;# 
  9648  1E90                     	;# 
  9649  1E91                     	;# 
  9650  1E92                     	;# 
  9651  1E93                     	;# 
  9652  1E94                     	;# 
  9653  1E95                     	;# 
  9654  1E96                     	;# 
  9655  1E97                     	;# 
  9656  1E9C                     	;# 
  9657  1E9D                     	;# 
  9658  1E9E                     	;# 
  9659  1EA1                     	;# 
  9660  1EA2                     	;# 
  9661  1EA3                     	;# 
  9662  1EA4                     	;# 
  9663  1EA9                     	;# 
  9664  1EAA                     	;# 
  9665  1EB1                     	;# 
  9666  1EB2                     	;# 
  9667  1EB8                     	;# 
  9668  1EB9                     	;# 
  9669  1EBA                     	;# 
  9670  1EBB                     	;# 
  9671  1EBC                     	;# 
  9672  1EBD                     	;# 
  9673  1EBE                     	;# 
  9674  1EC3                     	;# 
  9675  1EC5                     	;# 
  9676  1EC6                     	;# 
  9677  1EC7                     	;# 
  9678  1EC8                     	;# 
  9679  1EC9                     	;# 
  9680  1ECA                     	;# 
  9681  1ECB                     	;# 
  9682  1ECB                     	;# 
  9683  1ECB                     	;# 
  9684  1ECC                     	;# 
  9685  1ECC                     	;# 
  9686  1ECC                     	;# 
  9687  1F10                     	;# 
  9688  1F11                     	;# 
  9689  1F12                     	;# 
  9690  1F14                     	;# 
  9691  1F15                     	;# 
  9692  1F1C                     	;# 
  9693  1F1D                     	;# 
  9694  1F1E                     	;# 
  9695  1F1F                     	;# 
  9696  1F20                     	;# 
  9697  1F21                     	;# 
  9698  1F22                     	;# 
  9699  1F23                     	;# 
  9700  1F24                     	;# 
  9701  1F25                     	;# 
  9702  1F26                     	;# 
  9703  1F27                     	;# 
  9704  1F38                     	;# 
  9705  1F39                     	;# 
  9706  1F3A                     	;# 
  9707  1F3B                     	;# 
  9708  1F3C                     	;# 
  9709  1F3D                     	;# 
  9710  1F3E                     	;# 
  9711  1F3F                     	;# 
  9712  1F43                     	;# 
  9713  1F44                     	;# 
  9714  1F45                     	;# 
  9715  1F46                     	;# 
  9716  1F47                     	;# 
  9717  1F48                     	;# 
  9718  1F49                     	;# 
  9719  1F4A                     	;# 
  9720  1F4E                     	;# 
  9721  1F4F                     	;# 
  9722  1F50                     	;# 
  9723  1F51                     	;# 
  9724  1F52                     	;# 
  9725  1F53                     	;# 
  9726  1F54                     	;# 
  9727  1F55                     	;# 
  9728  1FE4                     	;# 
  9729  1FE5                     	;# 
  9730  1FE6                     	;# 
  9731  1FE7                     	;# 
  9732  1FE8                     	;# 
  9733  1FE8                     	;# 
  9734  1FE9                     	;# 
  9735  1FEA                     	;# 
  9736  1FEB                     	;# 
  9737  1FED                     	;# 
  9738  1FEE                     	;# 
  9739  1FEF                     	;_dmxArray
  9740                           
  9741                           	psect	idataBANK1
  9742  07F8                     __pidataBANK1:	
  9743                           
  9744                           ;initializer for _incInterval
  9745  07F8  3464               	retlw	100
  9746  07F9  3400               	retlw	0
  9747                           
  9748                           ;initializer for _address
  9749  07FA  3401               	retlw	1
  9750  07FB  3400               	retlw	0
  9751                           
  9752                           ;initializer for _animationBrightness
  9753  07FC  3405               	retlw	5
  9754                           
  9755                           ;initializer for _animationModeSelected
  9756  07FD  3401               	retlw	1
  9757                           
  9758                           ;initializer for _startup
  9759  07FE  3401               	retlw	1
  9760                           
  9761                           ;initializer for _beatBrightness
  9762  07FF  3405               	retlw	5
  9763                           
  9764                           	psect	idataBANK2
  9765  1D2F                     __pidataBANK2:	
  9766                           
  9767                           ;initializer for _initial
  9768  1D2F  3401               	retlw	1
  9769  1D30  3400               	retlw	0
  9770                           
  9771                           ;initializer for _delay
  9772  1D31  340A               	retlw	10
  9773  1D32  3400               	retlw	0
  9774                           
  9775                           ;initializer for _threshold
  9776  1D33  3490               	retlw	144
  9777  1D34  3406               	retlw	6
  9778                           
  9779                           	psect	stringtext1
  9780  1800                     __pstringtext1:	
  9781  1800                     _charTable:	
  9782  1800  3400               	retlw	0
  9783  1801  3482               	retlw	130
  9784  1802  3421               	retlw	33
  9785  1803  3400               	retlw	0
  9786  1804  3400               	retlw	0
  9787  1805  3400               	retlw	0
  9788  1806  3400               	retlw	0
  9789  1807  3402               	retlw	2
  9790  1808  3439               	retlw	57
  9791  1809  340F               	retlw	15
  9792  180A  3400               	retlw	0
  9793  180B  3400               	retlw	0
  9794  180C  3400               	retlw	0
  9795  180D  3440               	retlw	64
  9796  180E  3480               	retlw	128
  9797  180F  3400               	retlw	0
  9798  1810  343F               	retlw	63
  9799  1811  3406               	retlw	6
  9800  1812  345B               	retlw	91
  9801  1813  344F               	retlw	79
  9802  1814  3466               	retlw	102
  9803  1815  346D               	retlw	109
  9804  1816  347D               	retlw	125
  9805  1817  3407               	retlw	7
  9806  1818  347F               	retlw	127
  9807  1819  346F               	retlw	111
  9808  181A  3400               	retlw	0
  9809  181B  3400               	retlw	0
  9810  181C  3400               	retlw	0
  9811  181D  3448               	retlw	72
  9812  181E  3400               	retlw	0
  9813  181F  3453               	retlw	83
  9814  1820  3400               	retlw	0
  9815  1821  3477               	retlw	119
  9816  1822  347C               	retlw	124
  9817  1823  3439               	retlw	57
  9818  1824  345E               	retlw	94
  9819  1825  3479               	retlw	121
  9820  1826  3471               	retlw	113
  9821  1827  346F               	retlw	111
  9822  1828  3476               	retlw	118
  9823  1829  3406               	retlw	6
  9824  182A  341E               	retlw	30
  9825  182B  3400               	retlw	0
  9826  182C  3438               	retlw	56
  9827  182D  3400               	retlw	0
  9828  182E  3454               	retlw	84
  9829  182F  343F               	retlw	63
  9830  1830  3473               	retlw	115
  9831  1831  3467               	retlw	103
  9832  1832  3450               	retlw	80
  9833  1833  346D               	retlw	109
  9834  1834  3478               	retlw	120
  9835  1835  343E               	retlw	62
  9836  1836  3400               	retlw	0
  9837  1837  3400               	retlw	0
  9838  1838  3400               	retlw	0
  9839  1839  346E               	retlw	110
  9840  183A  3400               	retlw	0
  9841  183B  3439               	retlw	57
  9842  183C  3400               	retlw	0
  9843  183D  340F               	retlw	15
  9844  183E  3400               	retlw	0
  9845  183F  3408               	retlw	8
  9846  1840  3463               	retlw	99
  9847  1841  345F               	retlw	95
  9848  1842  347C               	retlw	124
  9849  1843  3458               	retlw	88
  9850  1844  345E               	retlw	94
  9851  1845  347B               	retlw	123
  9852  1846  3471               	retlw	113
  9853  1847  346F               	retlw	111
  9854  1848  3474               	retlw	116
  9855  1849  3402               	retlw	2
  9856  184A  341E               	retlw	30
  9857  184B  3400               	retlw	0
  9858  184C  3406               	retlw	6
  9859  184D  3400               	retlw	0
  9860  184E  3454               	retlw	84
  9861  184F  345C               	retlw	92
  9862  1850  3473               	retlw	115
  9863  1851  3467               	retlw	103
  9864  1852  3450               	retlw	80
  9865  1853  346D               	retlw	109
  9866  1854  3478               	retlw	120
  9867  1855  341C               	retlw	28
  9868  1856  3400               	retlw	0
  9869  1857  3400               	retlw	0
  9870  1858  3400               	retlw	0
  9871  1859  346E               	retlw	110
  9872  185A  3400               	retlw	0
  9873  185B  3439               	retlw	57
  9874  185C  3430               	retlw	48
  9875  185D  340F               	retlw	15
  9876  185E  3400               	retlw	0
  9877  185F  3400               	retlw	0
  9878  1860                     __end_of_charTable:	
  9879                           
  9880                           	psect	nvBANK2
  9881  016C                     __pnvBANK2:	
  9882  016C                     _ADCC_ADTI_InterruptHandler:	
  9883  016C                     	ds	2
  9884  016E                     _TMR0_InterruptHandler:	
  9885  016E                     	ds	2
  9886                           
  9887                           	psect	nvBANK3
  9888  01E8                     __pnvBANK3:	
  9889  01E8                     _EUSART1_FramingErrorHandler:	
  9890  01E8                     	ds	2
  9891  01EA                     _EUSART1_RxDefaultInterruptHandler:	
  9892  01EA                     	ds	2
  9893                           
  9894                           	psect	nvBANK4
  9895  0264                     __pnvBANK4:	
  9896  0264                     _EUSART1_ErrorHandler:	
  9897  0264                     	ds	2
  9898  0266                     _EUSART1_OverrunErrorHandler:	
  9899  0266                     	ds	2
  9900  0014                     _TRISCbits	set	20
  9901  0012                     _TRISAbits	set	18
  9902  000B                     _INTCONbits	set	11
  9903  0014                     _TRISC	set	20
  9904  0013                     _TRISB	set	19
  9905  0012                     _TRISA	set	18
  9906  001A                     _LATC	set	26
  9907  0019                     _LATB	set	25
  9908  0018                     _LATA	set	24
  9909  000C                     _PORTA	set	12
  9910  000E                     _PORTC	set	14
  9911  00D5                     _LATC5	set	213
  9912  0090                     _ADERRL	set	144
  9913  0091                     _ADERRH	set	145
  9914  009B                     _ADPREVL	set	155
  9915  009C                     _ADPREVH	set	156
  9916  0094                     _ADFLTRL	set	148
  9917  0095                     _ADFLTRH	set	149
  9918  0096                     _ADACCL	set	150
  9919  0097                     _ADACCH	set	151
  9920  0099                     _ADCNT	set	153
  9921  009D                     _ADRESL	set	157
  9922  009E                     _ADRESH	set	158
  9923  009F                     _ADPCH	set	159
  9924  009A                     _ADRPT	set	154
  9925  0098                     _ADACCU	set	152
  9926  0093                     _ADSTPTH	set	147
  9927  0092                     _ADSTPTL	set	146
  9928  008F                     _ADUTHH	set	143
  9929  008E                     _ADUTHL	set	142
  9930  008D                     _ADLTHH	set	141
  9931  008C                     _ADLTHL	set	140
  9932  0112                     _ADCON1bits	set	274
  9933  0115                     _ADSTATbits	set	277
  9934  0113                     _ADCON2bits	set	275
  9935  0114                     _ADCON3bits	set	276
  9936  0111                     _ADCON0bits	set	273
  9937  0111                     _ADCON0	set	273
  9938  0118                     _ADCLK	set	280
  9939  0117                     _ADACT	set	279
  9940  0116                     _ADREF	set	278
  9941  0115                     _ADSTAT	set	277
  9942  0114                     _ADCON3	set	276
  9943  0113                     _ADCON2	set	275
  9944  0112                     _ADCON1	set	274
  9945  0110                     _ADPREH	set	272
  9946  010F                     _ADPREL	set	271
  9947  010E                     _ADCAP	set	270
  9948  010D                     _ADACQH	set	269
  9949  010C                     _ADACQL	set	268
  9950  0119                     _RC1REG	set	281
  9951  011D                     _RC1STAbits	set	285
  9952  011A                     _TX1REG	set	282
  9953  011E                     _TX1STAbits	set	286
  9954  011C                     _SP1BRGH	set	284
  9955  011B                     _SP1BRGL	set	283
  9956  011E                     _TX1STA	set	286
  9957  011D                     _RC1STA	set	285
  9958  011F                     _BAUD1CON	set	287
  9959  018C                     _SSP1BUF	set	396
  9960  0191                     _SSP1CON2bits	set	401
  9961  0190                     _SSP1CON1bits	set	400
  9962  018D                     _SSP1ADD	set	397
  9963  0192                     _SSP1CON3	set	402
  9964  0190                     _SSP1CON1	set	400
  9965  018F                     _SSP1STAT	set	399
  9966  021E                     _CCPTMRS0bits	set	542
  9967  028D                     _PR2	set	653
  9968  028C                     _TMR2	set	652
  9969  028E                     _T2CONbits	set	654
  9970  0291                     _T2RSTbits	set	657
  9971  028F                     _T2HLTbits	set	655
  9972  028E                     _T2CON	set	654
  9973  028C                     _T2TMR	set	652
  9974  028D                     _T2PR	set	653
  9975  0291                     _T2RST	set	657
  9976  028F                     _T2HLT	set	655
  9977  0290                     _T2CLKCON	set	656
  9978  0312                     _CCP2CONbits	set	786
  9979  0310                     _CCPR2L	set	784
  9980  0311                     _CCPR2H	set	785
  9981  0312                     _CCP2CON	set	786
  9982  030E                     _CCP1CONbits	set	782
  9983  030C                     _CCPR1L	set	780
  9984  030D                     _CCPR1H	set	781
  9985  030E                     _CCP1CON	set	782
  9986  031A                     _CCP4CONbits	set	794
  9987  0318                     _CCPR4L	set	792
  9988  0319                     _CCPR4H	set	793
  9989  031A                     _CCP4CON	set	794
  9990  0316                     _CCP3CONbits	set	790
  9991  0314                     _CCPR3L	set	788
  9992  0315                     _CCPR3H	set	789
  9993  0316                     _CCP3CON	set	790
  9994  059E                     _T0CON0bits	set	1438
  9995  059E                     _T0CON0	set	1438
  9996  059C                     _TMR0L	set	1436
  9997  059D                     _TMR0H	set	1437
  9998  059F                     _T0CON1	set	1439
  9999  070D                     _PIR1bits	set	1805
 10000  0717                     _PIE1bits	set	1815
 10001  070C                     _PIR0bits	set	1804
 10002  0716                     _PIE0bits	set	1814
 10003  070F                     _PIR3bits	set	1807
 10004  0719                     _PIE3bits	set	1817
 10005  0710                     _PIR4bits	set	1808
 10006  079D                     _PMD7	set	1949
 10007  079C                     _PMD6	set	1948
 10008  079B                     _PMD5	set	1947
 10009  079A                     _PMD4	set	1946
 10010  0799                     _PMD3	set	1945
 10011  0798                     _PMD2	set	1944
 10012  0797                     _PMD1	set	1943
 10013  0796                     _PMD0	set	1942
 10014  0892                     _OSCTUNE	set	2194
 10015  0893                     _OSCFRQ	set	2195
 10016  0891                     _OSCEN	set	2193
 10017  088F                     _OSCCON3	set	2191
 10018  088D                     _OSCCON1	set	2189
 10019  1ECB                     _RX1DTPPS	set	7883
 10020  1EC6                     _SSP1DATPPS	set	7878
 10021  1EC5                     _SSP1CLKPPS	set	7877
 10022  1F4F                     _WPUCbits	set	8015
 10023  1F4E                     _ANSELCbits	set	8014
 10024  1F39                     _WPUAbits	set	7993
 10025  1F38                     _ANSELAbits	set	7992
 10026  1F27                     _RC7PPS	set	7975
 10027  1F26                     _RC6PPS	set	7974
 10028  1F15                     _RA5PPS	set	7957
 10029  1F24                     _RC4PPS	set	7972
 10030  1F23                     _RC3PPS	set	7971
 10031  1F14                     _RA4PPS	set	7956
 10032  1F51                     _SLRCONC	set	8017
 10033  1F46                     _SLRCONB	set	8006
 10034  1F3B                     _SLRCONA	set	7995
 10035  1F50                     _ODCONC	set	8016
 10036  1F45                     _ODCONB	set	8005
 10037  1F3A                     _ODCONA	set	7994
 10038  1F4F                     _WPUC	set	8015
 10039  1F39                     _WPUA	set	7993
 10040  1F44                     _WPUB	set	8004
 10041  1F38                     _ANSELA	set	7992
 10042  1F43                     _ANSELB	set	8003
 10043  1F4E                     _ANSELC	set	8014
 10044                           
 10045                           	psect	stringtext2
 10046  2000                     __pstringtext2:	
 10047  2000                     STR_20:	
 10048  2000  3425               	retlw	37	;'%'
 10049  2001  3463               	retlw	99	;'c'
 10050  2002  3425               	retlw	37	;'%'
 10051  2003  3463               	retlw	99	;'c'
 10052  2004  3425               	retlw	37	;'%'
 10053  2005  3463               	retlw	99	;'c'
 10054  2006  3425               	retlw	37	;'%'
 10055  2007  3463               	retlw	99	;'c'
 10056  2008  340D               	retlw	13
 10057  2009  3400               	retlw	0
 10058                           
 10059                           	psect	stringtext3
 10060  200A                     __pstringtext3:	
 10061  200A                     STR_21:	
 10062  200A  3425               	retlw	37	;'%'
 10063  200B  3463               	retlw	99	;'c'
 10064  200C  3425               	retlw	37	;'%'
 10065  200D  3463               	retlw	99	;'c'
 10066  200E  3425               	retlw	37	;'%'
 10067  200F  3463               	retlw	99	;'c'
 10068  2010  3420               	retlw	32	;' '
 10069  2011  340D               	retlw	13
 10070  2012  3400               	retlw	0
 10071                           
 10072                           	psect	stringtext4
 10073  2013                     __pstringtext4:	
 10074  2013                     STR_19:	
 10075  2013  3420               	retlw	32	;' '
 10076  2014  3425               	retlw	37	;'%'
 10077  2015  3463               	retlw	99	;'c'
 10078  2016  3425               	retlw	37	;'%'
 10079  2017  3463               	retlw	99	;'c'
 10080  2018  3425               	retlw	37	;'%'
 10081  2019  3463               	retlw	99	;'c'
 10082  201A  340D               	retlw	13
 10083  201B  3400               	retlw	0
 10084                           
 10085                           	psect	stringtext5
 10086  201C                     __pstringtext5:	
 10087  201C                     STR_16:	
 10088  201C  3448               	retlw	72	;'H'
 10089  201D  3445               	retlw	69	;'E'
 10090  201E  3459               	retlw	89	;'Y'
 10091  201F  3459               	retlw	89	;'Y'
 10092  2020  3459               	retlw	89	;'Y'
 10093  2021  3459               	retlw	89	;'Y'
 10094  2022  3459               	retlw	89	;'Y'
 10095  2023  3459               	retlw	89	;'Y'
 10096  2024  3400               	retlw	0
 10097                           
 10098                           	psect	stringtext6
 10099  2025                     __pstringtext6:	
 10100  2025                     STR_22:	
 10101  2025  3425               	retlw	37	;'%'
 10102  2026  3463               	retlw	99	;'c'
 10103  2027  3425               	retlw	37	;'%'
 10104  2028  3463               	retlw	99	;'c'
 10105  2029  3420               	retlw	32	;' '
 10106  202A  3420               	retlw	32	;' '
 10107  202B  340D               	retlw	13
 10108  202C  3400               	retlw	0
 10109                           
 10110                           	psect	stringtext7
 10111  202D                     __pstringtext7:	
 10112  202D                     STR_18:	
 10113  202D  3420               	retlw	32	;' '
 10114  202E  3420               	retlw	32	;' '
 10115  202F  3425               	retlw	37	;'%'
 10116  2030  3463               	retlw	99	;'c'
 10117  2031  3425               	retlw	37	;'%'
 10118  2032  3463               	retlw	99	;'c'
 10119  2033  340D               	retlw	13
 10120  2034  3400               	retlw	0
 10121                           
 10122                           	psect	stringtext8
 10123  2035                     __pstringtext8:	
 10124  2035                     STR_23:	
 10125  2035  3425               	retlw	37	;'%'
 10126  2036  3463               	retlw	99	;'c'
 10127  2037  3420               	retlw	32	;' '
 10128  2038  3420               	retlw	32	;' '
 10129  2039  3420               	retlw	32	;' '
 10130  203A  340D               	retlw	13
 10131  203B  3400               	retlw	0
 10132                           
 10133                           	psect	stringtext9
 10134  203C                     __pstringtext9:	
 10135  203C                     STR_17:	
 10136  203C  3420               	retlw	32	;' '
 10137  203D  3420               	retlw	32	;' '
 10138  203E  3420               	retlw	32	;' '
 10139  203F  3425               	retlw	37	;'%'
 10140  2040  3463               	retlw	99	;'c'
 10141  2041  340D               	retlw	13
 10142  2042  3400               	retlw	0
 10143                           
 10144                           	psect	stringtext10
 10145  2043                     __pstringtext10:	
 10146  2043                     STR_24:	
 10147  2043  3420               	retlw	32	;' '
 10148  2044  3420               	retlw	32	;' '
 10149  2045  3420               	retlw	32	;' '
 10150  2046  3420               	retlw	32	;' '
 10151  2047  340D               	retlw	13
 10152  2048  3400               	retlw	0
 10153                           
 10154                           	psect	stringtext11
 10155  2049                     __pstringtext11:	
 10156  2049                     STR_5:	
 10157  2049  3442               	retlw	66	;'B'
 10158  204A  3420               	retlw	32	;' '
 10159  204B  3420               	retlw	32	;' '
 10160  204C  3420               	retlw	32	;' '
 10161  204D  340D               	retlw	13
 10162  204E  3400               	retlw	0
 10163                           
 10164                           	psect	stringtext12
 10165  204F                     __pstringtext12:	
 10166  204F                     STR_7:	
 10167  204F  3443               	retlw	67	;'C'
 10168  2050  3420               	retlw	32	;' '
 10169  2051  3420               	retlw	32	;' '
 10170  2052  3420               	retlw	32	;' '
 10171  2053  340D               	retlw	13
 10172  2054  3400               	retlw	0
 10173                           
 10174                           	psect	stringtext13
 10175  2055                     __pstringtext13:	
 10176  2055                     STR_1:	
 10177  2055  3450               	retlw	80	;'P'
 10178  2056  3443               	retlw	67	;'C'
 10179  2057  3420               	retlw	32	;' '
 10180  2058  3420               	retlw	32	;' '
 10181  2059  340D               	retlw	13
 10182  205A  3400               	retlw	0
 10183                           
 10184                           	psect	stringtext14
 10185  205B                     __pstringtext14:	
 10186  205B                     STR_4:	
 10187  205B  344C               	retlw	76	;'L'
 10188  205C  3445               	retlw	69	;'E'
 10189  205D  3444               	retlw	68	;'D'
 10190  205E  3420               	retlw	32	;' '
 10191  205F  340D               	retlw	13
 10192  2060  3400               	retlw	0
 10193                           
 10194                           	psect	stringtext15
 10195  2061                     __pstringtext15:	
 10196  2061                     STR_3:	
 10197  2061  3441               	retlw	65	;'A'
 10198  2062  344E               	retlw	78	;'N'
 10199  2063  3449               	retlw	73	;'I'
 10200  2064  3420               	retlw	32	;' '
 10201  2065  340D               	retlw	13
 10202  2066  3400               	retlw	0
 10203                           
 10204                           	psect	stringtext16
 10205  2067                     __pstringtext16:	
 10206  2067                     STR_8:	
 10207  2067  3441               	retlw	65	;'A'
 10208  2068  344C               	retlw	76	;'L'
 10209  2069  344C               	retlw	76	;'L'
 10210  206A  3420               	retlw	32	;' '
 10211  206B  340D               	retlw	13
 10212  206C  3400               	retlw	0
 10213                           
 10214                           	psect	stringtext17
 10215  206D                     __pstringtext17:	
 10216  206D                     STR_6:	
 10217  206D  3446               	retlw	70	;'F'
 10218  206E  3441               	retlw	65	;'A'
 10219  206F  3444               	retlw	68	;'D'
 10220  2070  3445               	retlw	69	;'E'
 10221  2071  340D               	retlw	13
 10222  2072  3400               	retlw	0
 10223                           
 10224                           	psect	stringtext18
 10225  2073                     __pstringtext18:	
 10226  2073                     STR_2:	
 10227  2073  3442               	retlw	66	;'B'
 10228  2074  3445               	retlw	69	;'E'
 10229  2075  3441               	retlw	65	;'A'
 10230  2076  3454               	retlw	84	;'T'
 10231  2077  340D               	retlw	13
 10232  2078  3400               	retlw	0
 10233                           
 10234                           	psect	stringtext19
 10235  2079                     __pstringtext19:	
 10236  2079                     STR_14:	
 10237  2079  3420               	retlw	32	;' '
 10238  207A  3420               	retlw	32	;' '
 10239  207B  3420               	retlw	32	;' '
 10240  207C  3420               	retlw	32	;' '
 10241  207D  3400               	retlw	0
 10242                           
 10243                           	psect	stringtext20
 10244  207E                     __pstringtext20:	
 10245  207E                     STR_13:	
 10246  207E  3441               	retlw	65	;'A'
 10247  207F  342D               	retlw	45	;'-'
 10248  2080  340D               	retlw	13
 10249  2081  3400               	retlw	0
 10250                           
 10251                           	psect	stringtext21
 10252  2082                     __pstringtext21:	
 10253  2082                     STR_10:	
 10254  2082  3442               	retlw	66	;'B'
 10255  2083  342D               	retlw	45	;'-'
 10256  2084  340D               	retlw	13
 10257  2085  3400               	retlw	0
 10258                           
 10259                           	psect	stringtext22
 10260  2086                     __pstringtext22:	
 10261  2086                     STR_12:	
 10262  2086  3443               	retlw	67	;'C'
 10263  2087  342D               	retlw	45	;'-'
 10264  2088  340D               	retlw	13
 10265  2089  3400               	retlw	0
 10266                           
 10267                           	psect	stringtext23
 10268  208A                     __pstringtext23:	
 10269  208A                     STR_11:	
 10270  208A  3446               	retlw	70	;'F'
 10271  208B  342D               	retlw	45	;'-'
 10272  208C  340D               	retlw	13
 10273  208D  3400               	retlw	0
 10274                           
 10275                           	psect	stringtext24
 10276  208E                     __pstringtext24:	
 10277  208E                     STR_9:	
 10278  208E  3464               	retlw	100	;'d'
 10279  208F  340D               	retlw	13
 10280  2090  3400               	retlw	0
 10281                           
 10282                           	psect	stringtext25
 10283  0000                     __pstringtext25:	
 10284  2047                     
 10285                           ; #config settings
 10286  0000                     
 10287                           	psect	cinit
 10288  0032                     start_initialization:	
 10289  0032                     __initialization:		;BIGRAM
 10290                           
 10291                           ; Initialize objects allocated to BANK1
 10292  0032  30F8               	movlw	low __pidataBANK1
 10293  0033  0084               	movwf	4
 10294  0034  3087               	movlw	(high __pidataBANK1)| (0+128)
 10295  0035  0085               	movwf	5
 10296  0036  30E7               	movlw	low __pdataBANK1
 10297  0037  0086               	movwf	6
 10298  0038  3000               	movlw	high __pdataBANK1
 10299  0039  0087               	movwf	7
 10300  003A  3000               	movlw	0
 10301  003B  00FF               	movwf	btemp+1
 10302  003C  3008               	movlw	8
 10303  003D  319D  25F6  3180   	fcall	init_ram
 10304                           
 10305                           ; Initialize objects allocated to BANK2
 10306  0040  302F               	movlw	low __pidataBANK2
 10307  0041  0084               	movwf	4
 10308  0042  309D               	movlw	(high __pidataBANK2)| (0+128)
 10309  0043  0085               	movwf	5
 10310  0044  3060               	movlw	low __pdataBANK2
 10311  0045  0086               	movwf	6
 10312  0046  3001               	movlw	high __pdataBANK2
 10313  0047  0087               	movwf	7
 10314  0048  3000               	movlw	0
 10315  0049  00FF               	movwf	btemp+1
 10316  004A  3006               	movlw	6
 10317  004B  319D  25F6  3180   	fcall	init_ram
 10318                           
 10319                           ; Clear objects allocated to BIGRAM
 10320  004E  30EE               	movlw	low (0+9198)
 10321  004F  0084               	movwf	4
 10322  0050  3023               	movlw	high (0+9198)
 10323  0051  0085               	movwf	5
 10324  0052  3002               	movlw	2
 10325  0053  00FE               	movwf	btemp
 10326  0054  3004               	movlw	4
 10327  0055  00FF               	movwf	btemp+1
 10328  0056  319D  25EA  3180   	fcall	clear_ram0
 10329                           
 10330                           ; Clear objects allocated to COMMON
 10331  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10332  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10333  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10334  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10335  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10336  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10337  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10338                           
 10339                           ; Clear objects allocated to BANK1
 10340  0060  30C5               	movlw	low __pbssBANK1
 10341  0061  0084               	movwf	4
 10342  0062  3000               	movlw	high __pbssBANK1
 10343  0063  0085               	movwf	5
 10344  0064  3022               	movlw	34
 10345  0065  00FE               	movwf	btemp
 10346  0066  3000               	movlw	0
 10347  0067  00FF               	movwf	btemp+1
 10348  0068  319D  25EA  3180   	fcall	clear_ram0
 10349                           
 10350                           ; Clear objects allocated to BANK2
 10351  006B  3020               	movlw	low __pbssBANK2
 10352  006C  0084               	movwf	4
 10353  006D  3001               	movlw	high __pbssBANK2
 10354  006E  0085               	movwf	5
 10355  006F  3040               	movlw	64
 10356  0070  00FE               	movwf	btemp
 10357  0071  3000               	movlw	0
 10358  0072  00FF               	movwf	btemp+1
 10359  0073  319D  25EA  3180   	fcall	clear_ram0
 10360                           
 10361                           ; Clear objects allocated to BANK3
 10362  0076  30A0               	movlw	low __pbssBANK3
 10363  0077  0084               	movwf	4
 10364  0078  3001               	movlw	high __pbssBANK3
 10365  0079  0085               	movwf	5
 10366  007A  3048               	movlw	72
 10367  007B  00FE               	movwf	btemp
 10368  007C  3000               	movlw	0
 10369  007D  00FF               	movwf	btemp+1
 10370  007E  319D  25EA  3180   	fcall	clear_ram0
 10371                           
 10372                           ; Clear objects allocated to BANK4
 10373  0081  3020               	movlw	low __pbssBANK4
 10374  0082  0084               	movwf	4
 10375  0083  3002               	movlw	high __pbssBANK4
 10376  0084  0085               	movwf	5
 10377  0085  3044               	movlw	68
 10378  0086  00FE               	movwf	btemp
 10379  0087  3000               	movlw	0
 10380  0088  00FF               	movwf	btemp+1
 10381  0089  319D  25EA  3180   	fcall	clear_ram0
 10382                           
 10383                           ; Clear objects allocated to BANK5
 10384  008C  30A0               	movlw	low __pbssBANK5
 10385  008D  0084               	movwf	4
 10386  008E  3002               	movlw	high __pbssBANK5
 10387  008F  0085               	movwf	5
 10388  0090  3032               	movlw	50
 10389  0091  00FE               	movwf	btemp
 10390  0092  3000               	movlw	0
 10391  0093  00FF               	movwf	btemp+1
 10392  0094  319D  25EA  3180   	fcall	clear_ram0
 10393                           
 10394                           ; Clear objects allocated to BANK6
 10395  0097  3020               	movlw	low __pbssBANK6
 10396  0098  0084               	movwf	4
 10397  0099  3003               	movlw	high __pbssBANK6
 10398  009A  0085               	movwf	5
 10399  009B  3040               	movlw	64
 10400  009C  00FE               	movwf	btemp
 10401  009D  3000               	movlw	0
 10402  009E  00FF               	movwf	btemp+1
 10403  009F  319D  25EA         	fcall	clear_ram0
 10404  00A1                     end_of_initialization:	
 10405                           ;End of C runtime variable initialization code
 10406                           
 10407  00A1                     __end_of__initialization:	
 10408  00A1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10409  00A2  0140               	movlb	0
 10410  00A3  3192  2AFE         	ljmp	_main	;jump to C main() function
 10411                           
 10412                           	psect	bssCOMMON
 10413  0070                     __pbssCOMMON:	
 10414  0070                     _animationBrightnessControl:	
 10415  0070                     	ds	1
 10416  0071                     _p_i2c1_current:	
 10417  0071                     	ds	1
 10418  0072                     _p_i2c1_trb_current:	
 10419  0072                     	ds	1
 10420  0073                     _eusart1RxTail:	
 10421  0073                     	ds	1
 10422  0074                     _eusart1RxHead:	
 10423  0074                     	ds	1
 10424  0075                     I2C1_ISR@i2c_address:	
 10425  0075                     	ds	2
 10426                           
 10427                           	psect	bssBANK1
 10428  00C5                     __pbssBANK1:	
 10429  00C5                     _i2c1_object:	
 10430  00C5                     	ds	5
 10431  00CA                     _manualColor:	
 10432  00CA                     	ds	4
 10433  00CE                     _currentState:	
 10434  00CE                     	ds	2
 10435  00D0                     _lastIncTime:	
 10436  00D0                     	ds	2
 10437  00D2                     _currentMenu:	
 10438  00D2                     	ds	2
 10439  00D4                     _lastDetected:	
 10440  00D4                     	ds	1
 10441  00D5                     _thresholdExceeded:	
 10442  00D5                     	ds	1
 10443  00D6                     _detected:	
 10444  00D6                     	ds	1
 10445  00D7                     _position:	
 10446  00D7                     	ds	1
 10447  00D8                     _currentSelection:	
 10448  00D8                     	ds	1
 10449  00D9                     _enterState:	
 10450  00D9                     	ds	1
 10451  00DA                     _menuState:	
 10452  00DA                     	ds	1
 10453  00DB                     _downState:	
 10454  00DB                     	ds	1
 10455  00DC                     _upState:	
 10456  00DC                     	ds	1
 10457  00DD                     _enter:	
 10458  00DD                     	ds	1
 10459  00DE                     _down:	
 10460  00DE                     	ds	1
 10461  00DF                     _up:	
 10462  00DF                     	ds	1
 10463  00E0                     _menu:	
 10464  00E0                     	ds	1
 10465  00E1                     I2C1_ISR@i2c_10bit_address_restart:	
 10466  00E1                     	ds	1
 10467  00E2                     I2C1_ISR@i2c_bytes_left:	
 10468  00E2                     	ds	1
 10469  00E3                     I2C1_ISR@pi2c_buf_ptr:	
 10470  00E3                     	ds	1
 10471  00E4                     _i2c1_trb_count:	
 10472  00E4                     	ds	1
 10473  00E5                     _i2c1_state:	
 10474  00E5                     	ds	1
 10475  00E6                     _eusart1RxCount:	
 10476  00E6                     	ds	1
 10477                           
 10478                           	psect	dataBANK1
 10479  00E7                     __pdataBANK1:	
 10480  00E7                     _incInterval:	
 10481  00E7                     	ds	2
 10482  00E9                     _address:	
 10483  00E9                     	ds	2
 10484  00EB                     _animationBrightness:	
 10485  00EB                     	ds	1
 10486  00EC                     _animationModeSelected:	
 10487  00EC                     	ds	1
 10488  00ED                     _startup:	
 10489  00ED                     	ds	1
 10490  00EE                     _beatBrightness:	
 10491  00EE                     	ds	1
 10492                           
 10493                           	psect	bssBANK2
 10494  0120                     __pbssBANK2:	
 10495  0120                     _nout:	
 10496  0120                     	ds	2
 10497  0122                     _width:	
 10498  0122                     	ds	2
 10499  0124                     _prec:	
 10500  0124                     	ds	2
 10501  0126                     _flags:	
 10502  0126                     	ds	2
 10503  0128                     _lastLedActiveTime:	
 10504  0128                     	ds	2
 10505  012A                     _arrayIndex:	
 10506  012A                     	ds	2
 10507  012C                     _thresholdCount:	
 10508  012C                     	ds	2
 10509  012E                     _lastRun:	
 10510  012E                     	ds	2
 10511  0130                     _bpm:	
 10512  0130                     	ds	2
 10513  0132                     _lastBeat:	
 10514  0132                     	ds	2
 10515  0134                     _lastActiveTime:	
 10516  0134                     	ds	2
 10517  0136                     _previousTask:	
 10518  0136                     	ds	2
 10519  0138                     _currentTime:	
 10520  0138                     	ds	2
 10521  013A                     _lastTime:	
 10522  013A                     	ds	2
 10523  013C                     _startTime:	
 10524  013C                     	ds	2
 10525  013E                     _tm1650_status:	
 10526  013E                     	ds	1
 10527  013F                     _colorModeSelected:	
 10528  013F                     	ds	1
 10529  0140                     _beatHold:	
 10530  0140                     	ds	1
 10531  0141                     _enterPressed:	
 10532  0141                     	ds	1
 10533  0142                     _menuPressed:	
 10534  0142                     	ds	1
 10535  0143                     _menuSelected:	
 10536  0143                     	ds	1
 10537  0144                     _eusart1RxLastError:	
 10538  0144                     	ds	1
 10539  0145                     _manual:	
 10540  0145                     	ds	10
 10541  014F                     _beat:	
 10542  014F                     	ds	10
 10543  0159                     I2C1_MasterWrite@trBlock:	
 10544  0159                     	ds	4
 10545  015D                     _i2c1_tr_queue:	
 10546  015D                     	ds	3
 10547                           
 10548                           	psect	dataBANK2
 10549  0160                     __pdataBANK2:	
 10550  0160                     _initial:	
 10551  0160                     	ds	2
 10552  0162                     _delay:	
 10553  0162                     	ds	2
 10554  0164                     _threshold:	
 10555  0164                     	ds	2
 10556                           
 10557                           	psect	bssBANK3
 10558  01A0                     __pbssBANK3:	
 10559  01A0                     _eusart1RxStatusBuffer:	
 10560  01A0                     	ds	8
 10561  01A8                     _manualRed:	
 10562  01A8                     	ds	10
 10563  01B2                     _animationBrightnessCtrl:	
 10564  01B2                     	ds	10
 10565  01BC                     _animationType:	
 10566  01BC                     	ds	10
 10567  01C6                     _beatStrobe:	
 10568  01C6                     	ds	10
 10569  01D0                     _animation:	
 10570  01D0                     	ds	10
 10571  01DA                     _dmx:	
 10572  01DA                     	ds	10
 10573  01E4                     I2C1_MasterRead@trBlock:	
 10574  01E4                     	ds	4
 10575                           
 10576                           	psect	bssBANK4
 10577  0220                     __pbssBANK4:	
 10578  0220                     _eusart1RxBuffer:	
 10579  0220                     	ds	8
 10580  0228                     _manualWhite:	
 10581  0228                     	ds	10
 10582  0232                     _manualBlue:	
 10583  0232                     	ds	10
 10584  023C                     _manualGreen:	
 10585  023C                     	ds	10
 10586  0246                     _beatCont:	
 10587  0246                     	ds	10
 10588  0250                     _beatFade:	
 10589  0250                     	ds	10
 10590  025A                     _dmx_task:	
 10591  025A                     	ds	10
 10592                           
 10593                           	psect	bssBANK5
 10594  02A0                     __pbssBANK5:	
 10595  02A0                     _beatMixedTask:	
 10596  02A0                     	ds	10
 10597  02AA                     _beatContTask:	
 10598  02AA                     	ds	10
 10599  02B4                     _beatFadeTask:	
 10600  02B4                     	ds	10
 10601  02BE                     _beatStrobeTask:	
 10602  02BE                     	ds	10
 10603  02C8                     _beatMixed:	
 10604  02C8                     	ds	10
 10605                           
 10606                           	psect	bssBANK6
 10607  0320                     __pbssBANK6:	
 10608  0320                     _dbuf:	
 10609  0320                     	ds	32
 10610  0340                     _buttons:	
 10611  0340                     	ds	32
 10612                           
 10613                           	psect	inittext
 10614  1DF6                     init_ram:	
 10615  1DF6  00FE               	movwf	126
 10616  1DF7                     initloop:	
 10617  1DF7  0012               	moviw fsr0++
 10618  1DF8  001E               	movwi fsr1++
 10619  1DF9  3001               	movlw	1
 10620  1DFA  02FE               	subwf	126,f
 10621  1DFB  3000               	movlw	0
 10622  1DFC  3BFF               	subwfb	127,f
 10623  1DFD  087F               	movf	127,w
 10624  1DFE  047E               	iorwf	126,w
 10625  1DFF  1903               	btfsc	3,2
 10626  1E00  3400               	retlw	0
 10627  1E01  2DF7               	goto	initloop
 10628                           
 10629                           	psect	clrtext
 10630  1DEA                     clear_ram0:	
 10631                           ;	Called with FSR0 containing the base address, and
 10632                           ;	btemp/btemp+1 has the size to clear
 10633                           
 10634  1DEA  0064               	clrwdt	;clear the watchdog before getting into this loop
 10635  1DEB                     clrloop0:	
 10636  1DEB  0180               	clrf	0	;clear RAM location pointed to by FSR
 10637  1DEC  3101               	addfsr 0,1
 10638  1DED  3001               	movlw	1
 10639  1DEE  02FE               	subwf	126,f
 10640  1DEF  3000               	movlw	0
 10641  1DF0  3BFF               	subwfb	127,f
 10642  1DF1  087F               	movf	127,w
 10643  1DF2  047E               	iorwf	126,w
 10644  1DF3  1903               	btfsc	3,2
 10645  1DF4  3400               	retlw	0	;all done for this memory range, return
 10646  1DF5  2DEB               	goto	clrloop0	;have we reached the end yet?
 10647                           
 10648                           	psect	cstackBANK2
 10649  0166                     __pcstackBANK2:	
 10650  0166                     LED_task_DMX@dmx:	
 10651                           
 10652                           ; 4 bytes @ 0x0
 10653  0166                     	ds	4
 10654  016A                     ??_main:	
 10655                           
 10656                           ; 1 bytes @ 0x4
 10657  016A                     	ds	2
 10658                           
 10659                           	psect	cstackBANK1
 10660  00A0                     __pcstackBANK1:	
 10661  00A0                     ?_PWM3_LoadDutyValue:	
 10662  00A0                     ?_PWM4_LoadDutyValue:	
 10663                           ; 1 bytes @ 0x0
 10664                           
 10665  00A0                     ?_PWM1_LoadDutyValue:	
 10666                           ; 1 bytes @ 0x0
 10667                           
 10668  00A0                     ?_PWM2_LoadDutyValue:	
 10669                           ; 1 bytes @ 0x0
 10670                           
 10671  00A0                     ?_printf:	
 10672                           ; 1 bytes @ 0x0
 10673                           
 10674  00A0                     ?_beatBrightnessCalculation:	
 10675                           ; 2 bytes @ 0x0
 10676                           
 10677  00A0                     PWM3_LoadDutyValue@dutyValue:	
 10678                           ; 4 bytes @ 0x0
 10679                           
 10680  00A0                     PWM4_LoadDutyValue@dutyValue:	
 10681                           ; 2 bytes @ 0x0
 10682                           
 10683  00A0                     PWM1_LoadDutyValue@dutyValue:	
 10684                           ; 2 bytes @ 0x0
 10685                           
 10686  00A0                     PWM2_LoadDutyValue@dutyValue:	
 10687                           ; 2 bytes @ 0x0
 10688                           
 10689  00A0                     printf@fmt:	
 10690                           ; 2 bytes @ 0x0
 10691                           
 10692                           
 10693                           ; 2 bytes @ 0x0
 10694  00A0                     	ds	4
 10695  00A4                     ??_beatBrightnessCalculation:	
 10696                           
 10697                           ; 1 bytes @ 0x4
 10698  00A4                     	ds	5
 10699  00A9                     ?_beatColorCreator:	
 10700  00A9                     beatColorCreator@inGreen:	
 10701                           ; 4 bytes @ 0x9
 10702                           
 10703                           
 10704                           ; 1 bytes @ 0x9
 10705  00A9                     	ds	1
 10706  00AA                     ??_CONTROL_DMX:	
 10707  00AA                     beatColorCreator@inBlue:	
 10708                           ; 1 bytes @ 0xA
 10709                           
 10710                           
 10711                           ; 1 bytes @ 0xA
 10712  00AA                     	ds	1
 10713  00AB                     beatColorCreator@inWhite:	
 10714                           
 10715                           ; 1 bytes @ 0xB
 10716  00AB                     	ds	2
 10717  00AD                     beatColorCreator@inRed:	
 10718                           
 10719                           ; 1 bytes @ 0xD
 10720  00AD                     	ds	1
 10721  00AE                     _beatColorCreator$4107:	
 10722                           
 10723                           ; 4 bytes @ 0xE
 10724  00AE                     	ds	4
 10725  00B2                     beatColorCreator@tempColor:	
 10726                           
 10727                           ; 4 bytes @ 0x12
 10728  00B2                     	ds	4
 10729  00B6                     ?_LED_setColor:	
 10730  00B6                     LED_setColor@input:	
 10731                           ; 1 bytes @ 0x16
 10732                           
 10733                           
 10734                           ; 4 bytes @ 0x16
 10735  00B6                     	ds	4
 10736  00BA                     ??_LED_setColor:	
 10737                           
 10738                           ; 1 bytes @ 0x1A
 10739  00BA                     	ds	4
 10740  00BE                     ??_LED_task_BEAT_STROBE:	
 10741  00BE                     ??_LED_task_DMX:	
 10742                           ; 1 bytes @ 0x1E
 10743                           
 10744                           
 10745                           ; 1 bytes @ 0x1E
 10746  00BE                     	ds	2
 10747  00C0                     ??_CONTROL_BEAT:	
 10748                           
 10749                           ; 1 bytes @ 0x20
 10750  00C0                     	ds	2
 10751  00C2                     ??_CONTROLLER_task:	
 10752                           
 10753                           ; 1 bytes @ 0x22
 10754  00C2                     	ds	1
 10755  00C3                     ??_LED_task:	
 10756                           
 10757                           ; 1 bytes @ 0x23
 10758  00C3                     	ds	2
 10759                           
 10760                           	psect	cstackCOMMON
 10761  0077                     __pcstackCOMMON:	
 10762  0077                     ?_PMD_Initialize:	
 10763  0077                     ?_PIN_MANAGER_Initialize:	
 10764                           ; 1 bytes @ 0x0
 10765                           
 10766  0077                     ?_OSCILLATOR_Initialize:	
 10767                           ; 1 bytes @ 0x0
 10768                           
 10769  0077                     ?_I2C1_Initialize:	
 10770                           ; 1 bytes @ 0x0
 10771                           
 10772  0077                     ?_PWM1_Initialize:	
 10773                           ; 1 bytes @ 0x0
 10774                           
 10775  0077                     ?_PWM2_Initialize:	
 10776                           ; 1 bytes @ 0x0
 10777                           
 10778  0077                     ?_ADCC_Initialize:	
 10779                           ; 1 bytes @ 0x0
 10780                           
 10781  0077                     ?_PWM4_Initialize:	
 10782                           ; 1 bytes @ 0x0
 10783                           
 10784  0077                     ?_PWM3_Initialize:	
 10785                           ; 1 bytes @ 0x0
 10786                           
 10787  0077                     ?_TMR2_Initialize:	
 10788                           ; 1 bytes @ 0x0
 10789                           
 10790  0077                     ?_TMR0_Initialize:	
 10791                           ; 1 bytes @ 0x0
 10792                           
 10793  0077                     ?_EUSART1_Initialize:	
 10794                           ; 1 bytes @ 0x0
 10795                           
 10796  0077                     ?_EUSART1_Receive_ISR:	
 10797                           ; 1 bytes @ 0x0
 10798                           
 10799  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10800                           ; 1 bytes @ 0x0
 10801                           
 10802  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10803                           ; 1 bytes @ 0x0
 10804                           
 10805  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10806                           ; 1 bytes @ 0x0
 10807                           
 10808  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10809                           ; 1 bytes @ 0x0
 10810                           
 10811  0077                     ?_EUSART1_DefaultErrorHandler:	
 10812                           ; 1 bytes @ 0x0
 10813                           
 10814  0077                     ?_EUSART1_RxDataHandler:	
 10815                           ; 1 bytes @ 0x0
 10816                           
 10817  0077                     ??_EUSART1_RxDataHandler:	
 10818                           ; 1 bytes @ 0x0
 10819                           
 10820  0077                     ?_TMR0_ISR:	
 10821                           ; 1 bytes @ 0x0
 10822                           
 10823  0077                     ??_TMR0_ISR:	
 10824                           ; 1 bytes @ 0x0
 10825                           
 10826  0077                     ?_I2C1_BusCollisionISR:	
 10827                           ; 1 bytes @ 0x0
 10828                           
 10829  0077                     ??_I2C1_BusCollisionISR:	
 10830                           ; 1 bytes @ 0x0
 10831                           
 10832  0077                     ?_I2C1_ISR:	
 10833                           ; 1 bytes @ 0x0
 10834                           
 10835  0077                     ?_ADCC_ThresholdISR:	
 10836                           ; 1 bytes @ 0x0
 10837                           
 10838  0077                     ??_ADCC_ThresholdISR:	
 10839                           ; 1 bytes @ 0x0
 10840                           
 10841  0077                     ?_TMR0_DefaultInterruptHandler:	
 10842                           ; 1 bytes @ 0x0
 10843                           
 10844  0077                     ??_TMR0_DefaultInterruptHandler:	
 10845                           ; 1 bytes @ 0x0
 10846                           
 10847  0077                     ?_I2C1_Stop:	
 10848                           ; 1 bytes @ 0x0
 10849                           
 10850  0077                     ??_I2C1_Stop:	
 10851                           ; 1 bytes @ 0x0
 10852                           
 10853  0077                     ?_I2C1_FunctionComplete:	
 10854                           ; 1 bytes @ 0x0
 10855                           
 10856  0077                     ??_I2C1_FunctionComplete:	
 10857                           ; 1 bytes @ 0x0
 10858                           
 10859  0077                     ?_ADCC_DefaultInterruptHandler:	
 10860                           ; 1 bytes @ 0x0
 10861                           
 10862  0077                     ??_ADCC_DefaultInterruptHandler:	
 10863                           ; 1 bytes @ 0x0
 10864                           
 10865  0077                     ?_CLOCK_init:	
 10866                           ; 1 bytes @ 0x0
 10867                           
 10868  0077                     ?_BUTTONS_init:	
 10869                           ; 1 bytes @ 0x0
 10870                           
 10871  0077                     ?_BEAT_init:	
 10872                           ; 1 bytes @ 0x0
 10873                           
 10874  0077                     ?_LED_init:	
 10875                           ; 1 bytes @ 0x0
 10876                           
 10877  0077                     ?_CONTROLLER_init:	
 10878                           ; 1 bytes @ 0x0
 10879                           
 10880  0077                     ?_TM1650_init:	
 10881                           ; 1 bytes @ 0x0
 10882                           
 10883  0077                     ?_DMX_init:	
 10884                           ; 1 bytes @ 0x0
 10885                           
 10886  0077                     ?_BUTTONS_task:	
 10887                           ; 1 bytes @ 0x0
 10888                           
 10889  0077                     ?_CONTROLLER_task:	
 10890                           ; 1 bytes @ 0x0
 10891                           
 10892  0077                     ?_BEAT_task:	
 10893                           ; 1 bytes @ 0x0
 10894                           
 10895  0077                     ?_LED_task:	
 10896                           ; 1 bytes @ 0x0
 10897                           
 10898  0077                     ?_GPIO_init:	
 10899                           ; 1 bytes @ 0x0
 10900                           
 10901  0077                     ?_CLOCK_timerCallback:	
 10902                           ; 1 bytes @ 0x0
 10903                           
 10904  0077                     ??_CLOCK_timerCallback:	
 10905                           ; 1 bytes @ 0x0
 10906                           
 10907  0077                     ?_CONTROL_DMX:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910  0077                     ?_LED_task_ANIMATION:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913  0077                     ?_LED_task_MANUAL:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916  0077                     ?_CONTROL_BEAT:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919  0077                     ?_DMX_getAddress:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922  0077                     ?_address_inc:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925  0077                     ?_address_dec:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928  0077                     ?_LED_task_BEAT_STROBE:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931  0077                     ?_LED_task_BEAT_FADE:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934  0077                     ?_LED_task_BEAT_MIXED:	
 10935                           ; 1 bytes @ 0x0
 10936                           
 10937  0077                     ?_TM1650_fastPrintNum_2digit:	
 10938                           ; 1 bytes @ 0x0
 10939                           
 10940  0077                     ?_DMX_interrupt:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943  0077                     ??_DMX_interrupt:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946  0077                     ?_LED_task_BEAT_CONTINUOUS:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949  0077                     ?_SYSTEM_Initialize:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952  0077                     ?_INTERRUPT_InterruptManager:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958  0077                     ?_ADCC_StartConversion:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961  0077                     ?_main:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964  0077                     ?_BUTTONS_isClicked:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967  0077                     ?_BUTTONS_isHeld:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970  0077                     ?_getMode:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973  0077                     ?_getIsHold:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976  0077                     ?_TM1650_enable:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979  0077                     ?_putch:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982  0077                     ?_adcThresholdHandler:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985  0077                     ??_adcThresholdHandler:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988  0077                     ?_BEAT_detected:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991  0077                     ?_LED_task_DMX:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994                           
 10995                           ; 1 bytes @ 0x0
 10996  0077                     	ds	1
 10997  0078                     ??_EUSART1_Receive_ISR:	
 10998  0078                     ??_EUSART1_DefaultErrorHandler:	
 10999                           ; 1 bytes @ 0x1
 11000                           
 11001  0078                     I2C1_Stop@completion_code:	
 11002                           ; 1 bytes @ 0x1
 11003                           
 11004                           
 11005                           ; 1 bytes @ 0x1
 11006  0078                     	ds	1
 11007  0079                     ??_I2C1_ISR:	
 11008                           
 11009                           ; 1 bytes @ 0x2
 11010  0079                     	ds	4
 11011  007D                     DMX_interrupt@dummy:	
 11012                           
 11013                           ; 1 bytes @ 0x6
 11014  007D                     	ds	1
 11015  007E                     ??_INTERRUPT_InterruptManager:	
 11016                           
 11017                           	psect	cstackBANK0
 11018  0020                     __pcstackBANK0:	
 11019                           ; 1 bytes @ 0x7
 11020                           
 11021  0020                     ??_PMD_Initialize:	
 11022  0020                     ??_PIN_MANAGER_Initialize:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025  0020                     ??_OSCILLATOR_Initialize:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028  0020                     ??_I2C1_Initialize:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031  0020                     ??_PWM1_Initialize:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034  0020                     ??_PWM2_Initialize:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037  0020                     ??_PWM4_Initialize:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040  0020                     ??_PWM3_Initialize:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043  0020                     ??_TMR2_Initialize:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046  0020                     ?_EUSART1_SetRxInterruptHandler:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049  0020                     ?_EUSART1_SetFramingErrorHandler:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055  0020                     ?_EUSART1_SetErrorHandler:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058  0020                     ?_TMR0_SetInterruptHandler:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061  0020                     ?_I2C1_MasterWriteTRBBuild:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064  0020                     ?_I2C1_MasterTRBInsert:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067  0020                     ?_ADCC_SetADTIInterruptHandler:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070  0020                     ??_LED_init:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073  0020                     ??_CONTROLLER_init:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076  0020                     ??_GPIO_init:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079  0020                     ??_LED_task_ANIMATION:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082  0020                     ??_DMX_getAddress:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085  0020                     ??_address_inc:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088  0020                     ??_address_dec:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091  0020                     ??_LED_task_BEAT_FADE:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094  0020                     ??_LED_task_BEAT_MIXED:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103  0020                     ??_ADCC_StartConversion:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106  0020                     ?_ADCC_SetUpperThreshold:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109  0020                     ?_init:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112  0020                     ??_BUTTONS_isClicked:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115  0020                     ??_BUTTONS_isHeld:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118  0020                     ??_getMode:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121  0020                     ??_getIsHold:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124  0020                     ??_BEAT_detected:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127  0020                     ?_CLOCK_getTime:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130  0020                     ?_strlen:	
 11131                           ; 2 bytes @ 0x0
 11132                           
 11133  0020                     ?__Umul8_16:	
 11134                           ; 2 bytes @ 0x0
 11135                           
 11136  0020                     ?___awdiv:	
 11137                           ; 2 bytes @ 0x0
 11138                           
 11139  0020                     ?___lwdiv:	
 11140                           ; 2 bytes @ 0x0
 11141                           
 11142  0020                     ?___xxtofl:	
 11143                           ; 2 bytes @ 0x0
 11144                           
 11145  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11146                           ; 4 bytes @ 0x0
 11147                           
 11148  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151  0020                     ADCC_StartConversion@channel:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154  0020                     BUTTONS_isClicked@button:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157  0020                     BUTTONS_isHeld@button:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160  0020                     __Umul8_16@multiplicand:	
 11161                           ; 1 bytes @ 0x0
 11162                           
 11163  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11164                           ; 1 bytes @ 0x0
 11165                           
 11166  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11167                           ; 2 bytes @ 0x0
 11168                           
 11169  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11170                           ; 2 bytes @ 0x0
 11171                           
 11172  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11173                           ; 2 bytes @ 0x0
 11174                           
 11175  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11176                           ; 2 bytes @ 0x0
 11177                           
 11178  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11179                           ; 2 bytes @ 0x0
 11180                           
 11181  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11182                           ; 2 bytes @ 0x0
 11183                           
 11184  0020                     init@port:	
 11185                           ; 2 bytes @ 0x0
 11186                           
 11187  0020                     ___awdiv@divisor:	
 11188                           ; 2 bytes @ 0x0
 11189                           
 11190  0020                     ___lwdiv@divisor:	
 11191                           ; 2 bytes @ 0x0
 11192                           
 11193  0020                     strlen@s:	
 11194                           ; 2 bytes @ 0x0
 11195                           
 11196  0020                     ___xxtofl@val:	
 11197                           ; 2 bytes @ 0x0
 11198                           
 11199                           
 11200                           ; 4 bytes @ 0x0
 11201  0020                     	ds	1
 11202  0021                     I2C1_MasterTRBInsert@pflag:	
 11203  0021                     I2C1_MasterWriteTRBBuild@length:	
 11204                           ; 1 bytes @ 0x1
 11205                           
 11206                           
 11207                           ; 1 bytes @ 0x1
 11208  0021                     	ds	1
 11209  0022                     ??_ADCC_Initialize:	
 11210  0022                     ??_TMR0_Initialize:	
 11211                           ; 1 bytes @ 0x2
 11212                           
 11213  0022                     ??_EUSART1_Initialize:	
 11214                           ; 1 bytes @ 0x2
 11215                           
 11216  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11217                           ; 1 bytes @ 0x2
 11218                           
 11219  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11220                           ; 1 bytes @ 0x2
 11221                           
 11222  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11223                           ; 1 bytes @ 0x2
 11224                           
 11225  0022                     ??_EUSART1_SetErrorHandler:	
 11226                           ; 1 bytes @ 0x2
 11227                           
 11228  0022                     ??_TMR0_SetInterruptHandler:	
 11229                           ; 1 bytes @ 0x2
 11230                           
 11231  0022                     ??_I2C1_MasterTRBInsert:	
 11232                           ; 1 bytes @ 0x2
 11233                           
 11234  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11235                           ; 1 bytes @ 0x2
 11236                           
 11237  0022                     ??_CLOCK_init:	
 11238                           ; 1 bytes @ 0x2
 11239                           
 11240  0022                     ??_BEAT_init:	
 11241                           ; 1 bytes @ 0x2
 11242                           
 11243  0022                     ??_CLOCK_getTime:	
 11244                           ; 1 bytes @ 0x2
 11245                           
 11246  0022                     ??_BUTTONS_task:	
 11247                           ; 1 bytes @ 0x2
 11248                           
 11249  0022                     ??_strlen:	
 11250                           ; 1 bytes @ 0x2
 11251                           
 11252  0022                     ??__Umul8_16:	
 11253                           ; 1 bytes @ 0x2
 11254                           
 11255  0022                     ??_SYSTEM_Initialize:	
 11256                           ; 1 bytes @ 0x2
 11257                           
 11258  0022                     ??_ADCC_SetUpperThreshold:	
 11259                           ; 1 bytes @ 0x2
 11260                           
 11261  0022                     init@pin:	
 11262                           ; 1 bytes @ 0x2
 11263                           
 11264  0022                     I2C1_MasterWriteTRBBuild@address:	
 11265                           ; 1 bytes @ 0x2
 11266                           
 11267  0022                     ___awdiv@dividend:	
 11268                           ; 2 bytes @ 0x2
 11269                           
 11270  0022                     ___lwdiv@dividend:	
 11271                           ; 2 bytes @ 0x2
 11272                           
 11273                           
 11274                           ; 2 bytes @ 0x2
 11275  0022                     	ds	1
 11276  0023                     ??_init:	
 11277  0023                     I2C1_MasterTRBInsert@count:	
 11278                           ; 1 bytes @ 0x3
 11279                           
 11280  0023                     strlen@a:	
 11281                           ; 1 bytes @ 0x3
 11282                           
 11283                           
 11284                           ; 2 bytes @ 0x3
 11285  0023                     	ds	1
 11286  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11287  0024                     ??___awdiv:	
 11288                           ; 1 bytes @ 0x4
 11289                           
 11290  0024                     ??___lwdiv:	
 11291                           ; 1 bytes @ 0x4
 11292                           
 11293  0024                     ??___xxtofl:	
 11294                           ; 1 bytes @ 0x4
 11295                           
 11296  0024                     init@btn:	
 11297                           ; 1 bytes @ 0x4
 11298                           
 11299  0024                     __Umul8_16@product:	
 11300                           ; 1 bytes @ 0x4
 11301                           
 11302                           
 11303                           ; 2 bytes @ 0x4
 11304  0024                     	ds	1
 11305  0025                     ??_BUTTONS_init:	
 11306  0025                     BUTTONS_task@i:	
 11307                           ; 1 bytes @ 0x5
 11308                           
 11309  0025                     ___awdiv@counter:	
 11310                           ; 1 bytes @ 0x5
 11311                           
 11312  0025                     ___lwdiv@counter:	
 11313                           ; 1 bytes @ 0x5
 11314                           
 11315                           
 11316                           ; 1 bytes @ 0x5
 11317  0025                     	ds	1
 11318  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11319  0026                     ___awdiv@sign:	
 11320                           ; 1 bytes @ 0x6
 11321                           
 11322  0026                     BUTTONS_task@time:	
 11323                           ; 1 bytes @ 0x6
 11324                           
 11325  0026                     ___lwdiv@quotient:	
 11326                           ; 2 bytes @ 0x6
 11327                           
 11328  0026                     __Umul8_16@word_mpld:	
 11329                           ; 2 bytes @ 0x6
 11330                           
 11331                           
 11332                           ; 2 bytes @ 0x6
 11333  0026                     	ds	1
 11334  0027                     ?_I2C1_MasterWrite:	
 11335  0027                     I2C1_MasterWrite@length:	
 11336                           ; 1 bytes @ 0x7
 11337                           
 11338  0027                     ___awdiv@quotient:	
 11339                           ; 1 bytes @ 0x7
 11340                           
 11341                           
 11342                           ; 2 bytes @ 0x7
 11343  0027                     	ds	1
 11344  0028                     ??_BEAT_task:	
 11345  0028                     ?___lwmod:	
 11346                           ; 1 bytes @ 0x8
 11347                           
 11348  0028                     BUTTONS_task@btn:	
 11349                           ; 2 bytes @ 0x8
 11350                           
 11351  0028                     ___xxtofl@sign:	
 11352                           ; 1 bytes @ 0x8
 11353                           
 11354  0028                     __Umul8_16@multiplier:	
 11355                           ; 1 bytes @ 0x8
 11356                           
 11357  0028                     I2C1_MasterWrite@address:	
 11358                           ; 1 bytes @ 0x8
 11359                           
 11360  0028                     ___lwmod@divisor:	
 11361                           ; 2 bytes @ 0x8
 11362                           
 11363                           
 11364                           ; 2 bytes @ 0x8
 11365  0028                     	ds	1
 11366  0029                     ?___awmod:	
 11367  0029                     ___xxtofl@exp:	
 11368                           ; 2 bytes @ 0x9
 11369                           
 11370  0029                     ___awmod@divisor:	
 11371                           ; 1 bytes @ 0x9
 11372                           
 11373                           
 11374                           ; 2 bytes @ 0x9
 11375  0029                     	ds	1
 11376  002A                     I2C1_MasterWrite@pflag:	
 11377  002A                     BEAT_task@offset:	
 11378                           ; 1 bytes @ 0xA
 11379                           
 11380  002A                     ___lwmod@dividend:	
 11381                           ; 2 bytes @ 0xA
 11382                           
 11383  002A                     ___xxtofl@arg:	
 11384                           ; 2 bytes @ 0xA
 11385                           
 11386                           
 11387                           ; 4 bytes @ 0xA
 11388  002A                     	ds	1
 11389  002B                     ??_I2C1_MasterWrite:	
 11390  002B                     ___awmod@dividend:	
 11391                           ; 1 bytes @ 0xB
 11392                           
 11393                           
 11394                           ; 2 bytes @ 0xB
 11395  002B                     	ds	1
 11396  002C                     ??___lwmod:	
 11397                           
 11398                           ; 1 bytes @ 0xC
 11399  002C                     	ds	1
 11400  002D                     ??___awmod:	
 11401  002D                     I2C1_MasterWrite@pdata:	
 11402                           ; 1 bytes @ 0xD
 11403                           
 11404  002D                     ___lwmod@counter:	
 11405                           ; 1 bytes @ 0xD
 11406                           
 11407                           
 11408                           ; 1 bytes @ 0xD
 11409  002D                     	ds	1
 11410  002E                     ?___fldiv:	
 11411  002E                     ___awmod@counter:	
 11412                           ; 4 bytes @ 0xE
 11413                           
 11414  002E                     ___fldiv@a:	
 11415                           ; 1 bytes @ 0xE
 11416                           
 11417                           
 11418                           ; 4 bytes @ 0xE
 11419  002E                     	ds	1
 11420  002F                     ___awmod@sign:	
 11421                           
 11422                           ; 1 bytes @ 0xF
 11423  002F                     	ds	1
 11424  0030                     ?_writeData:	
 11425  0030                     writeData@data:	
 11426                           ; 1 bytes @ 0x10
 11427                           
 11428                           
 11429                           ; 1 bytes @ 0x10
 11430  0030                     	ds	1
 11431  0031                     ??_writeData:	
 11432                           
 11433                           ; 1 bytes @ 0x11
 11434  0031                     	ds	1
 11435  0032                     ___fldiv@b:	
 11436                           
 11437                           ; 4 bytes @ 0x12
 11438  0032                     	ds	2
 11439  0034                     writeData@address:	
 11440                           
 11441                           ; 1 bytes @ 0x14
 11442  0034                     	ds	1
 11443  0035                     writeData@status:	
 11444                           
 11445                           ; 1 bytes @ 0x15
 11446  0035                     	ds	1
 11447  0036                     ?_TM1650_fastPrintNum_3digit:	
 11448  0036                     ??_TM1650_fastPrintNum_2digit:	
 11449                           ; 1 bytes @ 0x16
 11450                           
 11451  0036                     ??_TM1650_enable:	
 11452                           ; 1 bytes @ 0x16
 11453                           
 11454  0036                     ?_TM1650_setDigit:	
 11455                           ; 1 bytes @ 0x16
 11456                           
 11457  0036                     ?_TM1650_fastPrintNum:	
 11458                           ; 1 bytes @ 0x16
 11459                           
 11460  0036                     ??___fldiv:	
 11461                           ; 1 bytes @ 0x16
 11462                           
 11463  0036                     TM1650_enable@enable:	
 11464                           ; 1 bytes @ 0x16
 11465                           
 11466  0036                     TM1650_setDigit@data:	
 11467                           ; 1 bytes @ 0x16
 11468                           
 11469  0036                     TM1650_fastPrintNum@num:	
 11470                           ; 1 bytes @ 0x16
 11471                           
 11472  0036                     TM1650_fastPrintNum_3digit@num:	
 11473                           ; 2 bytes @ 0x16
 11474                           
 11475                           
 11476                           ; 2 bytes @ 0x16
 11477  0036                     	ds	1
 11478  0037                     ??_TM1650_setDigit:	
 11479                           
 11480                           ; 1 bytes @ 0x17
 11481  0037                     	ds	1
 11482  0038                     ??_TM1650_fastPrintNum_3digit:	
 11483  0038                     ??_TM1650_fastPrintNum:	
 11484                           ; 1 bytes @ 0x18
 11485                           
 11486  0038                     TM1650_setDigit@digit:	
 11487                           ; 1 bytes @ 0x18
 11488                           
 11489                           
 11490                           ; 1 bytes @ 0x18
 11491  0038                     	ds	1
 11492  0039                     ??_DMX_init:	
 11493  0039                     ??_putch:	
 11494                           ; 1 bytes @ 0x19
 11495                           
 11496  0039                     TM1650_fastPrintNum_2digit@num:	
 11497                           ; 1 bytes @ 0x19
 11498                           
 11499                           
 11500                           ; 1 bytes @ 0x19
 11501  0039                     	ds	1
 11502  003A                     putch@n:	
 11503                           
 11504                           ; 1 bytes @ 0x1A
 11505  003A                     	ds	1
 11506  003B                     ?_fputc:	
 11507  003B                     fputc@c:	
 11508                           ; 2 bytes @ 0x1B
 11509                           
 11510  003B                     ___fldiv@rem:	
 11511                           ; 2 bytes @ 0x1B
 11512                           
 11513                           
 11514                           ; 4 bytes @ 0x1B
 11515  003B                     	ds	2
 11516  003D                     fputc@fp:	
 11517                           
 11518                           ; 1 bytes @ 0x1D
 11519  003D                     	ds	1
 11520  003E                     ??_fputc:	
 11521                           
 11522                           ; 1 bytes @ 0x1E
 11523  003E                     	ds	1
 11524  003F                     ___fldiv@sign:	
 11525                           
 11526                           ; 1 bytes @ 0x1F
 11527  003F                     	ds	1
 11528  0040                     ___fldiv@new_exp:	
 11529                           
 11530                           ; 2 bytes @ 0x20
 11531  0040                     	ds	2
 11532  0042                     ___fldiv@grs:	
 11533                           
 11534                           ; 4 bytes @ 0x22
 11535  0042                     	ds	1
 11536  0043                     ?_fputs:	
 11537  0043                     fputs@fp:	
 11538                           ; 2 bytes @ 0x23
 11539                           
 11540                           
 11541                           ; 1 bytes @ 0x23
 11542  0043                     	ds	1
 11543  0044                     ??_fputs:	
 11544                           
 11545                           ; 1 bytes @ 0x24
 11546  0044                     	ds	2
 11547  0046                     ___fldiv@bexp:	
 11548                           
 11549                           ; 1 bytes @ 0x26
 11550  0046                     	ds	1
 11551  0047                     ___fldiv@aexp:	
 11552  0047                     fputs@c:	
 11553                           ; 1 bytes @ 0x27
 11554                           
 11555                           
 11556                           ; 1 bytes @ 0x27
 11557  0047                     	ds	1
 11558  0048                     ?___flmul:	
 11559  0048                     fputs@i:	
 11560                           ; 4 bytes @ 0x28
 11561                           
 11562  0048                     ___flmul@b:	
 11563                           ; 2 bytes @ 0x28
 11564                           
 11565                           
 11566                           ; 4 bytes @ 0x28
 11567  0048                     	ds	2
 11568  004A                     fputs@s:	
 11569                           
 11570                           ; 1 bytes @ 0x2A
 11571  004A                     	ds	1
 11572  004B                     ?_pad:	
 11573  004B                     pad@buf:	
 11574                           ; 2 bytes @ 0x2B
 11575                           
 11576                           
 11577                           ; 1 bytes @ 0x2B
 11578  004B                     	ds	1
 11579  004C                     pad@p:	
 11580  004C                     ___flmul@a:	
 11581                           ; 2 bytes @ 0x2C
 11582                           
 11583                           
 11584                           ; 4 bytes @ 0x2C
 11585  004C                     	ds	2
 11586  004E                     ??_pad:	
 11587                           
 11588                           ; 1 bytes @ 0x2E
 11589  004E                     	ds	1
 11590  004F                     pad@i:	
 11591                           
 11592                           ; 2 bytes @ 0x2F
 11593  004F                     	ds	1
 11594  0050                     ??___flmul:	
 11595                           
 11596                           ; 1 bytes @ 0x30
 11597  0050                     	ds	1
 11598  0051                     pad@w:	
 11599                           
 11600                           ; 2 bytes @ 0x31
 11601  0051                     	ds	2
 11602  0053                     pad@fp:	
 11603                           
 11604                           ; 1 bytes @ 0x33
 11605  0053                     	ds	1
 11606  0054                     ?_ctoa:	
 11607  0054                     ctoa@c:	
 11608                           ; 2 bytes @ 0x34
 11609                           
 11610                           
 11611                           ; 1 bytes @ 0x34
 11612  0054                     	ds	1
 11613  0055                     ___flmul@sign:	
 11614                           
 11615                           ; 1 bytes @ 0x35
 11616  0055                     	ds	1
 11617  0056                     ??_ctoa:	
 11618  0056                     ___flmul@aexp:	
 11619                           ; 1 bytes @ 0x36
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0x36
 11623  0056                     	ds	1
 11624  0057                     ___flmul@bexp:	
 11625  0057                     ctoa@w:	
 11626                           ; 1 bytes @ 0x37
 11627                           
 11628                           
 11629                           ; 2 bytes @ 0x37
 11630  0057                     	ds	1
 11631  0058                     ___flmul@grs:	
 11632                           
 11633                           ; 4 bytes @ 0x38
 11634  0058                     	ds	1
 11635  0059                     ctoa@fp:	
 11636                           
 11637                           ; 1 bytes @ 0x39
 11638  0059                     	ds	1
 11639  005A                     ?_vfpfcnvrt:	
 11640  005A                     vfpfcnvrt@fmt:	
 11641                           ; 2 bytes @ 0x3A
 11642                           
 11643                           
 11644                           ; 1 bytes @ 0x3A
 11645  005A                     	ds	1
 11646  005B                     vfpfcnvrt@ap:	
 11647                           
 11648                           ; 1 bytes @ 0x3B
 11649  005B                     	ds	1
 11650  005C                     ??_vfpfcnvrt:	
 11651  005C                     ___flmul@prod:	
 11652                           ; 1 bytes @ 0x3C
 11653                           
 11654                           
 11655                           ; 4 bytes @ 0x3C
 11656  005C                     	ds	4
 11657  0060                     ___flmul@temp:	
 11658                           
 11659                           ; 2 bytes @ 0x40
 11660  0060                     	ds	1
 11661  0061                     vfpfcnvrt@c:	
 11662                           
 11663                           ; 1 bytes @ 0x41
 11664  0061                     	ds	1
 11665  0062                     ?___fltol:	
 11666  0062                     vfpfcnvrt@fp:	
 11667                           ; 4 bytes @ 0x42
 11668                           
 11669  0062                     ___fltol@f1:	
 11670                           ; 1 bytes @ 0x42
 11671                           
 11672                           
 11673                           ; 4 bytes @ 0x42
 11674  0062                     	ds	1
 11675  0063                     ?_vfprintf:	
 11676  0063                     vfprintf@fmt:	
 11677                           ; 2 bytes @ 0x43
 11678                           
 11679                           
 11680                           ; 2 bytes @ 0x43
 11681  0063                     	ds	2
 11682  0065                     vfprintf@ap:	
 11683                           
 11684                           ; 1 bytes @ 0x45
 11685  0065                     	ds	1
 11686  0066                     ??_vfprintf:	
 11687  0066                     ??___fltol:	
 11688                           ; 1 bytes @ 0x46
 11689                           
 11690                           
 11691                           ; 1 bytes @ 0x46
 11692  0066                     	ds	2
 11693  0068                     vfprintf@fp:	
 11694                           
 11695                           ; 1 bytes @ 0x48
 11696  0068                     	ds	1
 11697  0069                     vfprintf@cfmt:	
 11698                           
 11699                           ; 2 bytes @ 0x49
 11700  0069                     	ds	2
 11701  006B                     ??_printf:	
 11702  006B                     ___fltol@sign1:	
 11703                           ; 1 bytes @ 0x4B
 11704                           
 11705                           
 11706                           ; 1 bytes @ 0x4B
 11707  006B                     	ds	1
 11708  006C                     ___fltol@exp1:	
 11709                           
 11710                           ; 1 bytes @ 0x4C
 11711  006C                     	ds	1
 11712  006D                     ??_PWM3_LoadDutyValue:	
 11713  006D                     ??_PWM4_LoadDutyValue:	
 11714                           ; 1 bytes @ 0x4D
 11715                           
 11716  006D                     ??_PWM1_LoadDutyValue:	
 11717                           ; 1 bytes @ 0x4D
 11718                           
 11719  006D                     ??_PWM2_LoadDutyValue:	
 11720                           ; 1 bytes @ 0x4D
 11721                           
 11722  006D                     beatBrightnessCalculation@temp:	
 11723                           ; 1 bytes @ 0x4D
 11724                           
 11725                           
 11726                           ; 1 bytes @ 0x4D
 11727  006D                     	ds	1
 11728  006E                     ??_beatColorCreator:	
 11729  006E                     printf@ap:	
 11730                           ; 1 bytes @ 0x4E
 11731                           
 11732                           
 11733                           ; 1 bytes @ 0x4E
 11734  006E                     	ds	1
 11735  006F                     ??_TM1650_init:	
 11736  006F                     ??_LED_task_MANUAL:	
 11737                           ; 1 bytes @ 0x4F
 11738                           
 11739  006F                     LED_task_BEAT_STROBE@beatState:	
 11740                           ; 1 bytes @ 0x4F
 11741                           
 11742                           
 11743                           ; 1 bytes @ 0x4F
 11744  006F                     	ds	1
 11745                           
 11746                           	psect	maintext
 11747  12FE                     __pmaintext:	
 11748 ;;
 11749 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11750 ;;
 11751 ;; *************** function _main *****************
 11752 ;; Defined at:
 11753 ;;		line 58 in file "main.c"
 11754 ;; Parameters:    Size  Location     Type
 11755 ;;		None
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;		None
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : B3F/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11769 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11770 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11771 ;;Total ram usage:        2 bytes
 11772 ;; Hardware stack levels required when called:   19
 11773 ;; This function calls:
 11774 ;;		_BEAT_init
 11775 ;;		_BEAT_task
 11776 ;;		_BUTTONS_init
 11777 ;;		_BUTTONS_task
 11778 ;;		_CLOCK_getTime
 11779 ;;		_CLOCK_init
 11780 ;;		_CONTROLLER_init
 11781 ;;		_CONTROLLER_task
 11782 ;;		_DMX_init
 11783 ;;		_LED_init
 11784 ;;		_LED_task
 11785 ;;		_SYSTEM_Initialize
 11786 ;;		_TM1650_init
 11787 ;; This function is called by:
 11788 ;;		Startup code after reset
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           
 11793                           ;psect for function _main
 11794  12FE                     _main:	
 11795                           
 11796                           ;main.c: 61:     SYSTEM_Initialize();
 11797                           
 11798                           ;incstack = 0
 11799 ;; hardware stack exceeded
 11800                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11801  12FE  3190  209E  3192   	fcall	_SYSTEM_Initialize
 11802                           
 11803                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11804  1301  3015               	movlw	21
 11805  1302  0142               	movlb	2	; select bank2
 11806  1303  00EB               	movwf	(??_main^(0+256)+1)
 11807  1304  304B               	movlw	75
 11808  1305  00EA               	movwf	??_main^(0+256)
 11809  1306  30BE               	movlw	190
 11810  1307                     u10137:	
 11811  1307  0B89               	decfsz	9,f
 11812  1308  2B07               	goto	u10137
 11813  1309  0BEA               	decfsz	??_main^(0+256),f
 11814  130A  2B07               	goto	u10137
 11815  130B  0BEB               	decfsz	(??_main^(0+256)+1),f
 11816  130C  2B07               	goto	u10137
 11817  130D  0000               	nop
 11818                           
 11819                           ;main.c: 63:     CLOCK_init();
 11820  130E  319D  2535  3192   	fcall	_CLOCK_init
 11821                           
 11822                           ;main.c: 64:     BUTTONS_init();
 11823  1311  3188  2000  3192   	fcall	_BUTTONS_init
 11824                           
 11825                           ;main.c: 65:     BEAT_init();
 11826  1314  3190  2000  3192   	fcall	_BEAT_init
 11827                           
 11828                           ;main.c: 66:     LED_init();
 11829  1317  319D  253D  3192   	fcall	_LED_init
 11830                           
 11831                           ;main.c: 67:     CONTROLLER_init();
 11832  131A  3182  22D1  3192   	fcall	_CONTROLLER_init
 11833                           
 11834                           ;main.c: 69:     (INTCONbits.GIE = 1);
 11835  131D  178B               	bsf	11,7	;volatile
 11836                           
 11837                           ;main.c: 70:     (INTCONbits.PEIE = 1);
 11838  131E  170B               	bsf	11,6	;volatile
 11839                           
 11840                           ;main.c: 72:     TM1650_init();
 11841  131F  319E  26C7  3192   	fcall	_TM1650_init
 11842                           
 11843                           ;main.c: 73:     DMX_init();
 11844  1322  319E  268C  3192   	fcall	_DMX_init
 11845                           
 11846                           ;main.c: 74:     startTime = CLOCK_getTime();
 11847  1325  319D  2560  3192   	fcall	_CLOCK_getTime
 11848  1328  0140               	movlb	0	; select bank0
 11849  1329  0821               	movf	?_CLOCK_getTime+1,w
 11850  132A  0142               	movlb	2	; select bank2
 11851  132B  00BD               	movwf	(_startTime+1)^(0+256)
 11852  132C  0140               	movlb	0	; select bank0
 11853  132D  0820               	movf	?_CLOCK_getTime,w
 11854  132E  0142               	movlb	2	; select bank2
 11855  132F  00BC               	movwf	_startTime^(0+256)
 11856  1330                     l10006:	
 11857                           
 11858                           ;main.c: 79:     {;main.c: 80:         BUTTONS_task();
 11859  1330  318D  25C0  3192   	fcall	_BUTTONS_task
 11860                           
 11861                           ;main.c: 81:         CONTROLLER_task();
 11862  1333  318C  2403  3192   	fcall	_CONTROLLER_task
 11863                           
 11864                           ;main.c: 82:         BEAT_task();
 11865  1336  318B  2331  3192   	fcall	_BEAT_task
 11866                           
 11867                           ;main.c: 83:         LED_task();
 11868  1339  3189  21B4  3192   	fcall	_LED_task
 11869  133C  2B30               	goto	l10006
 11870  133D                     __end_of_main:	
 11871                           
 11872                           	psect	text1
 11873  1EC7                     __ptext1:	
 11874 ;; *************** function _TM1650_init *****************
 11875 ;; Defined at:
 11876 ;;		line 51 in file "tm1650.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11894 ;;Total ram usage:        0 bytes
 11895 ;; Hardware stack levels used:    1
 11896 ;; Hardware stack levels required when called:   17
 11897 ;; This function calls:
 11898 ;;		_TM1650_enable
 11899 ;;		_printf
 11900 ;; This function is called by:
 11901 ;;		_main
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           
 11906                           ;psect for function _TM1650_init
 11907  1EC7                     _TM1650_init:	
 11908                           
 11909                           ;tm1650.c: 53:     TM1650_enable(1);
 11910                           
 11911                           ;incstack = 0
 11912 ;; hardware stack exceeded
 11913                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11914  1EC7  3001               	movlw	1
 11915  1EC8  319E  26F0  319E   	fcall	_TM1650_enable
 11916                           
 11917                           ;tm1650.c: 54:     printf("    ");
 11918  1ECB  3079               	movlw	low (STR_14| (0+32768))
 11919  1ECC  0141               	movlb	1	; select bank1
 11920  1ECD  00A0               	movwf	printf@fmt^(0+128)
 11921  1ECE  30A0               	movlw	high (STR_14| (0+32768))
 11922  1ECF  00A1               	movwf	(printf@fmt^(0+128)+1)
 11923  1ED0  319E  26DB  319E   	fcall	_printf
 11924                           
 11925                           ;tm1650.c: 55:     printf("\r");
 11926  1ED3  3047               	movlw	low ((STR_24+4)| (0+32768))
 11927  1ED4  0141               	movlb	1	; select bank1
 11928  1ED5  00A0               	movwf	printf@fmt^(0+128)
 11929  1ED6  30A0               	movlw	high ((STR_24+4)| (0+32768))
 11930  1ED7  00A1               	movwf	(printf@fmt^(0+128)+1)
 11931  1ED8  319E  26DB         	fcall	_printf
 11932  1EDA  0008               	return
 11933  1EDB                     __end_of_TM1650_init:	
 11934                           
 11935                           	psect	text2
 11936  1EF0                     __ptext2:	
 11937 ;; *************** function _TM1650_enable *****************
 11938 ;; Defined at:
 11939 ;;		line 41 in file "tm1650.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  enable          1    wreg     _Bool 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;  enable          1   22[BANK0 ] _Bool 
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  1    wreg      void 
 11946 ;; Registers used:
 11947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;Total ram usage:        1 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; Hardware stack levels required when called:    8
 11960 ;; This function calls:
 11961 ;;		_writeData
 11962 ;; This function is called by:
 11963 ;;		_TM1650_init
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           
 11968                           ;psect for function _TM1650_enable
 11969  1EF0                     _TM1650_enable:	
 11970                           
 11971                           ;incstack = 0
 11972                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11973                           ;TM1650_enable@enable stored from wreg
 11974  1EF0  0140               	movlb	0	; select bank0
 11975  1EF1  00B6               	movwf	TM1650_enable@enable
 11976                           
 11977                           ;tm1650.c: 42:     if(enable){
 11978  1EF2  0836               	movf	TM1650_enable@enable,w
 11979  1EF3  1903               	btfsc	3,2
 11980  1EF4  2EFE               	goto	l8294
 11981                           
 11982                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 11983  1EF5  01B0               	clrf	writeData@data
 11984  1EF6  0AB0               	incf	writeData@data,f
 11985  1EF7  3024               	movlw	36
 11986  1EF8  319F  276B         	fcall	_writeData
 11987                           
 11988                           ;tm1650.c: 44:         tm1650_status = 1;
 11989  1EFA  0142               	movlb	2	; select bank2
 11990  1EFB  01BE               	clrf	_tm1650_status^(0+256)
 11991  1EFC  0ABE               	incf	_tm1650_status^(0+256),f
 11992                           
 11993                           ;tm1650.c: 45:     } else {
 11994  1EFD  0008               	return
 11995  1EFE                     l8294:	
 11996                           
 11997                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 11998  1EFE  01B0               	clrf	writeData@data
 11999  1EFF  3024               	movlw	36
 12000  1F00  319F  276B         	fcall	_writeData
 12001                           
 12002                           ;tm1650.c: 47:         tm1650_status = 0;
 12003  1F02  0142               	movlb	2	; select bank2
 12004  1F03  01BE               	clrf	_tm1650_status^(0+256)
 12005  1F04  0008               	return
 12006  1F05                     __end_of_TM1650_enable:	
 12007                           
 12008                           	psect	text3
 12009  109E                     __ptext3:	
 12010 ;; *************** function _SYSTEM_Initialize *****************
 12011 ;; Defined at:
 12012 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;		None
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;		None
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  1    wreg      void 
 12019 ;; Registers used:
 12020 ;;		wreg, status,2, status,0, pclath, cstack
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12030 ;;Total ram usage:        0 bytes
 12031 ;; Hardware stack levels used:    1
 12032 ;; Hardware stack levels required when called:    6
 12033 ;; This function calls:
 12034 ;;		_ADCC_Initialize
 12035 ;;		_EUSART1_Initialize
 12036 ;;		_I2C1_Initialize
 12037 ;;		_OSCILLATOR_Initialize
 12038 ;;		_PIN_MANAGER_Initialize
 12039 ;;		_PMD_Initialize
 12040 ;;		_PWM1_Initialize
 12041 ;;		_PWM2_Initialize
 12042 ;;		_PWM3_Initialize
 12043 ;;		_PWM4_Initialize
 12044 ;;		_TMR0_Initialize
 12045 ;;		_TMR2_Initialize
 12046 ;; This function is called by:
 12047 ;;		_main
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _SYSTEM_Initialize
 12053  109E                     _SYSTEM_Initialize:	
 12054                           
 12055                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12059  109E  319D  25A8  3190   	fcall	_PMD_Initialize
 12060                           
 12061                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12062  10A1  3191  21F5  3190   	fcall	_PIN_MANAGER_Initialize
 12063                           
 12064                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12065  10A4  319D  259F  3190   	fcall	_OSCILLATOR_Initialize
 12066                           
 12067                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 12068  10A7  319F  274F  3190   	fcall	_I2C1_Initialize
 12069                           
 12070                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 12071  10AA  319D  25B2  3190   	fcall	_PWM1_Initialize
 12072                           
 12073                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 12074  10AD  319D  25BD  3190   	fcall	_PWM2_Initialize
 12075                           
 12076                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12077  10B0  3190  20E8  3190   	fcall	_ADCC_Initialize
 12078                           
 12079                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12080  10B3  319D  25D3  3190   	fcall	_PWM4_Initialize
 12081                           
 12082                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12083  10B6  319D  25C8  3190   	fcall	_PWM3_Initialize
 12084                           
 12085                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12086  10B9  319E  261C  3190   	fcall	_TMR2_Initialize
 12087                           
 12088                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12089  10BC  319E  26B3  3190   	fcall	_TMR0_Initialize
 12090                           
 12091                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12092  10BF  3192  2228         	fcall	_EUSART1_Initialize
 12093  10C1  0008               	return
 12094  10C2                     __end_of_SYSTEM_Initialize:	
 12095                           
 12096                           	psect	text4
 12097  1E1C                     __ptext4:	
 12098 ;; *************** function _TMR2_Initialize *****************
 12099 ;; Defined at:
 12100 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, status,2
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    4
 12121 ;; This function calls:
 12122 ;;		Nothing
 12123 ;; This function is called by:
 12124 ;;		_SYSTEM_Initialize
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           
 12129                           ;psect for function _TMR2_Initialize
 12130  1E1C                     _TMR2_Initialize:	
 12131                           
 12132                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12133                           
 12134                           ;incstack = 0
 12135                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12136  1E1C  3001               	movlw	1
 12137  1E1D  0145               	movlb	5	; select bank5
 12138  1E1E  0090               	movwf	16	;volatile
 12139                           
 12140                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12141  1E1F  018F               	clrf	15	;volatile
 12142                           
 12143                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12144  1E20  0191               	clrf	17	;volatile
 12145                           
 12146                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12147  1E21  30FF               	movlw	255
 12148  1E22  008D               	movwf	13	;volatile
 12149                           
 12150                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12151  1E23  018C               	clrf	12	;volatile
 12152                           
 12153                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12154  1E24  014E               	movlb	14	; select bank14
 12155  1E25  1090               	bcf	16,1	;volatile
 12156                           
 12157                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12158  1E26  30F0               	movlw	240
 12159  1E27  0145               	movlb	5	; select bank5
 12160  1E28  008E               	movwf	14	;volatile
 12161  1E29  0008               	return
 12162  1E2A                     __end_of_TMR2_Initialize:	
 12163                           
 12164                           	psect	text5
 12165  1EB3                     __ptext5:	
 12166 ;; *************** function _TMR0_Initialize *****************
 12167 ;; Defined at:
 12168 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;		None
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0, pclath, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12186 ;;Total ram usage:        0 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; Hardware stack levels required when called:    5
 12189 ;; This function calls:
 12190 ;;		_TMR0_SetInterruptHandler
 12191 ;; This function is called by:
 12192 ;;		_SYSTEM_Initialize
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196                           
 12197                           ;psect for function _TMR0_Initialize
 12198  1EB3                     _TMR0_Initialize:	
 12199                           
 12200                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12201                           
 12202                           ;incstack = 0
 12203                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12204  1EB3  3045               	movlw	69
 12205  1EB4  014B               	movlb	11	; select bank11
 12206  1EB5  009F               	movwf	31	;volatile
 12207                           
 12208                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12209  1EB6  30F9               	movlw	249
 12210  1EB7  009D               	movwf	29	;volatile
 12211                           
 12212                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12213  1EB8  019C               	clrf	28	;volatile
 12214                           
 12215                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12216  1EB9  014E               	movlb	14	; select bank14
 12217  1EBA  128C               	bcf	12,5	;volatile
 12218                           
 12219                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12220  1EBB  1696               	bsf	22,5	;volatile
 12221                           
 12222                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12223  1EBC  300B               	movlw	low _TMR0_DefaultInterruptHandler
 12224  1EBD  0140               	movlb	0	; select bank0
 12225  1EBE  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12226  1EBF  301D               	movlw	high _TMR0_DefaultInterruptHandler
 12227  1EC0  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12228  1EC1  319D  2569         	fcall	_TMR0_SetInterruptHandler
 12229                           
 12230                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12231  1EC3  3080               	movlw	128
 12232  1EC4  014B               	movlb	11	; select bank11
 12233  1EC5  009E               	movwf	30	;volatile
 12234  1EC6  0008               	return
 12235  1EC7                     __end_of_TMR0_Initialize:	
 12236                           
 12237                           	psect	text6
 12238  1DD3                     __ptext6:	
 12239 ;; *************** function _PWM4_Initialize *****************
 12240 ;; Defined at:
 12241 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;		None
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg, status,2, status,0
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;Total ram usage:        0 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    4
 12262 ;; This function calls:
 12263 ;;		Nothing
 12264 ;; This function is called by:
 12265 ;;		_SYSTEM_Initialize
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           
 12270                           ;psect for function _PWM4_Initialize
 12271  1DD3                     _PWM4_Initialize:	
 12272                           
 12273                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12274                           
 12275                           ;incstack = 0
 12276                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12277  1DD3  308C               	movlw	140
 12278  1DD4  0146               	movlb	6	; select bank6
 12279  1DD5  009A               	movwf	26	;volatile
 12280                           
 12281                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12282  1DD6  0199               	clrf	25	;volatile
 12283                           
 12284                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12285  1DD7  0198               	clrf	24	;volatile
 12286                           
 12287                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12288  1DD8  0144               	movlb	4	; select bank4
 12289  1DD9  081E               	movf	30,w	;volatile
 12290  1DDA  393F               	andlw	-193
 12291  1DDB  3840               	iorlw	64
 12292  1DDC  009E               	movwf	30	;volatile
 12293  1DDD  0008               	return
 12294  1DDE                     __end_of_PWM4_Initialize:	
 12295                           
 12296                           	psect	text7
 12297  1DC8                     __ptext7:	
 12298 ;; *************** function _PWM3_Initialize *****************
 12299 ;; Defined at:
 12300 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12318 ;;Total ram usage:        0 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:    4
 12321 ;; This function calls:
 12322 ;;		Nothing
 12323 ;; This function is called by:
 12324 ;;		_SYSTEM_Initialize
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           
 12329                           ;psect for function _PWM3_Initialize
 12330  1DC8                     _PWM3_Initialize:	
 12331                           
 12332                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12333                           
 12334                           ;incstack = 0
 12335                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12336  1DC8  308C               	movlw	140
 12337  1DC9  0146               	movlb	6	; select bank6
 12338  1DCA  0096               	movwf	22	;volatile
 12339                           
 12340                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12341  1DCB  0195               	clrf	21	;volatile
 12342                           
 12343                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12344  1DCC  0194               	clrf	20	;volatile
 12345                           
 12346                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12347  1DCD  0144               	movlb	4	; select bank4
 12348  1DCE  081E               	movf	30,w	;volatile
 12349  1DCF  39CF               	andlw	-49
 12350  1DD0  3810               	iorlw	16
 12351  1DD1  009E               	movwf	30	;volatile
 12352  1DD2  0008               	return
 12353  1DD3                     __end_of_PWM3_Initialize:	
 12354                           
 12355                           	psect	text8
 12356  1DBD                     __ptext8:	
 12357 ;; *************** function _PWM2_Initialize *****************
 12358 ;; Defined at:
 12359 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, status,0
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    4
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_SYSTEM_Initialize
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           
 12388                           ;psect for function _PWM2_Initialize
 12389  1DBD                     _PWM2_Initialize:	
 12390                           
 12391                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12392                           
 12393                           ;incstack = 0
 12394                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12395  1DBD  308C               	movlw	140
 12396  1DBE  0146               	movlb	6	; select bank6
 12397  1DBF  0092               	movwf	18	;volatile
 12398                           
 12399                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12400  1DC0  0191               	clrf	17	;volatile
 12401                           
 12402                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12403  1DC1  0190               	clrf	16	;volatile
 12404                           
 12405                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12406  1DC2  0144               	movlb	4	; select bank4
 12407  1DC3  081E               	movf	30,w	;volatile
 12408  1DC4  39F3               	andlw	-13
 12409  1DC5  3804               	iorlw	4
 12410  1DC6  009E               	movwf	30	;volatile
 12411  1DC7  0008               	return
 12412  1DC8                     __end_of_PWM2_Initialize:	
 12413                           
 12414                           	psect	text9
 12415  1DB2                     __ptext9:	
 12416 ;; *************** function _PWM1_Initialize *****************
 12417 ;; Defined at:
 12418 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;		None
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;		None
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  1    wreg      void 
 12425 ;; Registers used:
 12426 ;;		wreg, status,2, status,0
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12436 ;;Total ram usage:        0 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; Hardware stack levels required when called:    4
 12439 ;; This function calls:
 12440 ;;		Nothing
 12441 ;; This function is called by:
 12442 ;;		_SYSTEM_Initialize
 12443 ;; This function uses a non-reentrant model
 12444 ;;
 12445                           
 12446                           
 12447                           ;psect for function _PWM1_Initialize
 12448  1DB2                     _PWM1_Initialize:	
 12449                           
 12450                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12451                           
 12452                           ;incstack = 0
 12453                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12454  1DB2  308C               	movlw	140
 12455  1DB3  0146               	movlb	6	; select bank6
 12456  1DB4  008E               	movwf	14	;volatile
 12457                           
 12458                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12459  1DB5  018D               	clrf	13	;volatile
 12460                           
 12461                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12462  1DB6  018C               	clrf	12	;volatile
 12463                           
 12464                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12465  1DB7  0144               	movlb	4	; select bank4
 12466  1DB8  081E               	movf	30,w	;volatile
 12467  1DB9  39FC               	andlw	-4
 12468  1DBA  3801               	iorlw	1
 12469  1DBB  009E               	movwf	30	;volatile
 12470  1DBC  0008               	return
 12471  1DBD                     __end_of_PWM1_Initialize:	
 12472                           
 12473                           	psect	text10
 12474  1DA8                     __ptext10:	
 12475 ;; *************** function _PMD_Initialize *****************
 12476 ;; Defined at:
 12477 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;		None
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;		None
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1    wreg      void 
 12484 ;; Registers used:
 12485 ;;		status,2
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12495 ;;Total ram usage:        0 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    4
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_SYSTEM_Initialize
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           
 12506                           ;psect for function _PMD_Initialize
 12507  1DA8                     _PMD_Initialize:	
 12508                           
 12509                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12510                           
 12511                           ;incstack = 0
 12512                           ; Regs used in _PMD_Initialize: [status,2]
 12513  1DA8  014F               	movlb	15	; select bank15
 12514  1DA9  0196               	clrf	22	;volatile
 12515                           
 12516                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12517  1DAA  0197               	clrf	23	;volatile
 12518                           
 12519                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12520  1DAB  0198               	clrf	24	;volatile
 12521                           
 12522                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12523  1DAC  0199               	clrf	25	;volatile
 12524                           
 12525                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12526  1DAD  019A               	clrf	26	;volatile
 12527                           
 12528                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12529  1DAE  019B               	clrf	27	;volatile
 12530                           
 12531                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12532  1DAF  019C               	clrf	28	;volatile
 12533                           
 12534                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12535  1DB0  019D               	clrf	29	;volatile
 12536  1DB1  0008               	return
 12537  1DB2                     __end_of_PMD_Initialize:	
 12538                           
 12539                           	psect	text11
 12540  11F5                     __ptext11:	
 12541 ;; *************** function _PIN_MANAGER_Initialize *****************
 12542 ;; Defined at:
 12543 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;		None
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      void 
 12550 ;; Registers used:
 12551 ;;		wreg, status,2
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12561 ;;Total ram usage:        0 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; Hardware stack levels required when called:    4
 12564 ;; This function calls:
 12565 ;;		Nothing
 12566 ;; This function is called by:
 12567 ;;		_SYSTEM_Initialize
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           
 12572                           ;psect for function _PIN_MANAGER_Initialize
 12573  11F5                     _PIN_MANAGER_Initialize:	
 12574                           
 12575                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12576                           
 12577                           ;incstack = 0
 12578                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12579  11F5  0140               	movlb	0	; select bank0
 12580  11F6  0198               	clrf	24	;volatile
 12581                           
 12582                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12583  11F7  0199               	clrf	25	;volatile
 12584                           
 12585                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12586  11F8  019A               	clrf	26	;volatile
 12587                           
 12588                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12589  11F9  303F               	movlw	63
 12590  11FA  0092               	movwf	18	;volatile
 12591                           
 12592                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12593  11FB  30F0               	movlw	240
 12594  11FC  0093               	movwf	19	;volatile
 12595                           
 12596                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12597  11FD  3026               	movlw	38
 12598  11FE  0094               	movwf	20	;volatile
 12599                           
 12600                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12601  11FF  30FF               	movlw	255
 12602  1200  017E               	movlb	62	; select bank62
 12603  1201  00CE               	movwf	78	;volatile
 12604                           
 12605                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12606  1202  30E0               	movlw	224
 12607  1203  00C3               	movwf	67	;volatile
 12608                           
 12609                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12610  1204  3007               	movlw	7
 12611  1205  00B8               	movwf	56	;volatile
 12612                           
 12613                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12614  1206  01C4               	clrf	68	;volatile
 12615                           
 12616                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12617  1207  01B9               	clrf	57	;volatile
 12618                           
 12619                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12620  1208  01CF               	clrf	79	;volatile
 12621                           
 12622                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12623  1209  01BA               	clrf	58	;volatile
 12624                           
 12625                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12626  120A  01C5               	clrf	69	;volatile
 12627                           
 12628                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12629  120B  01D0               	clrf	80	;volatile
 12630                           
 12631                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12632  120C  3037               	movlw	55
 12633  120D  00BB               	movwf	59	;volatile
 12634                           
 12635                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12636  120E  30F0               	movlw	240
 12637  120F  00C6               	movwf	70	;volatile
 12638                           
 12639                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12640  1210  30FF               	movlw	255
 12641  1211  00D1               	movwf	81	;volatile
 12642                           
 12643                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12644  1212  3005               	movlw	5
 12645  1213  017D               	movlb	61	; select bank61
 12646  1214  00C5               	movwf	69	;volatile
 12647                           
 12648                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12649  1215  3014               	movlw	20
 12650  1216  017E               	movlb	62	; select bank62
 12651  1217  0094               	movwf	20	;volatile
 12652                           
 12653                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12654  1218  300B               	movlw	11
 12655  1219  00A3               	movwf	35	;volatile
 12656                           
 12657                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12658  121A  300C               	movlw	12
 12659  121B  00A4               	movwf	36	;volatile
 12660                           
 12661                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12662  121C  3013               	movlw	19
 12663  121D  0095               	movwf	21	;volatile
 12664                           
 12665                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12666  121E  300A               	movlw	10
 12667  121F  00A6               	movwf	38	;volatile
 12668                           
 12669                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12670  1220  3009               	movlw	9
 12671  1221  00A7               	movwf	39	;volatile
 12672                           
 12673                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12674  1222  3004               	movlw	4
 12675  1223  017D               	movlb	61	; select bank61
 12676  1224  00C6               	movwf	70	;volatile
 12677                           
 12678                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12679  1225  300C               	movlw	12
 12680  1226  00CB               	movwf	75	;volatile
 12681  1227  0008               	return
 12682  1228                     __end_of_PIN_MANAGER_Initialize:	
 12683                           
 12684                           	psect	text12
 12685  1D9F                     __ptext12:	
 12686 ;; *************** function _OSCILLATOR_Initialize *****************
 12687 ;; Defined at:
 12688 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;		None
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1    wreg      void 
 12695 ;; Registers used:
 12696 ;;		wreg, status,2
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12706 ;;Total ram usage:        0 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; Hardware stack levels required when called:    4
 12709 ;; This function calls:
 12710 ;;		Nothing
 12711 ;; This function is called by:
 12712 ;;		_SYSTEM_Initialize
 12713 ;; This function uses a non-reentrant model
 12714 ;;
 12715                           
 12716                           
 12717                           ;psect for function _OSCILLATOR_Initialize
 12718  1D9F                     _OSCILLATOR_Initialize:	
 12719                           
 12720                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12721                           
 12722                           ;incstack = 0
 12723                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12724  1D9F  3060               	movlw	96
 12725  1DA0  0151               	movlb	17	; select bank17
 12726  1DA1  008D               	movwf	13	;volatile
 12727                           
 12728                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12729  1DA2  018F               	clrf	15	;volatile
 12730                           
 12731                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12732  1DA3  0191               	clrf	17	;volatile
 12733                           
 12734                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12735  1DA4  3006               	movlw	6
 12736  1DA5  0093               	movwf	19	;volatile
 12737                           
 12738                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12739  1DA6  0192               	clrf	18	;volatile
 12740  1DA7  0008               	return
 12741  1DA8                     __end_of_OSCILLATOR_Initialize:	
 12742                           
 12743                           	psect	text13
 12744  1F4F                     __ptext13:	
 12745 ;; *************** function _I2C1_Initialize *****************
 12746 ;; Defined at:
 12747 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;		None
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  1    wreg      void 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12765 ;;Total ram usage:        1 bytes
 12766 ;; Hardware stack levels used:    1
 12767 ;; Hardware stack levels required when called:    4
 12768 ;; This function calls:
 12769 ;;		Nothing
 12770 ;; This function is called by:
 12771 ;;		_SYSTEM_Initialize
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           
 12776                           ;psect for function _I2C1_Initialize
 12777  1F4F                     _I2C1_Initialize:	
 12778                           
 12779                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12780                           
 12781                           ;incstack = 0
 12782                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12783  1F4F  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12784  1F50  0140               	movlb	0	; select bank0
 12785  1F51  00A0               	movwf	??_I2C1_Initialize
 12786  1F52  0820               	movf	??_I2C1_Initialize,w
 12787  1F53  0141               	movlb	1	; select bank1
 12788  1F54  00C6               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12789                           
 12790                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12791  1F55  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12792  1F56  0140               	movlb	0	; select bank0
 12793  1F57  00A0               	movwf	??_I2C1_Initialize
 12794  1F58  0820               	movf	??_I2C1_Initialize,w
 12795  1F59  0141               	movlb	1	; select bank1
 12796  1F5A  00C5               	movwf	_i2c1_object^(0+128)
 12797                           
 12798                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12799  1F5B  14C7               	bsf	(_i2c1_object^(0+128)+2),1
 12800                           
 12801                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12802  1F5C  1047               	bcf	(_i2c1_object^(0+128)+2),0
 12803                           
 12804                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12805  1F5D  01C9               	clrf	(_i2c1_object^(0+128)+4)
 12806                           
 12807                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12808  1F5E  0143               	movlb	3	; select bank3
 12809  1F5F  018F               	clrf	15	;volatile
 12810                           
 12811                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12812  1F60  3028               	movlw	40
 12813  1F61  0090               	movwf	16	;volatile
 12814                           
 12815                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12816  1F62  0192               	clrf	18	;volatile
 12817                           
 12818                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12819  1F63  304F               	movlw	79
 12820  1F64  008D               	movwf	13	;volatile
 12821                           
 12822                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12823  1F65  014E               	movlb	14	; select bank14
 12824  1F66  100F               	bcf	15,0	;volatile
 12825                           
 12826                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12827  1F67  108F               	bcf	15,1	;volatile
 12828                           
 12829                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12830  1F68  1419               	bsf	25,0	;volatile
 12831                           
 12832                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12833  1F69  1499               	bsf	25,1	;volatile
 12834  1F6A  0008               	return
 12835  1F6B                     __end_of_I2C1_Initialize:	
 12836                           
 12837                           	psect	text14
 12838  1228                     __ptext14:	
 12839 ;; *************** function _EUSART1_Initialize *****************
 12840 ;; Defined at:
 12841 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;		None
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      void 
 12848 ;; Registers used:
 12849 ;;		wreg, status,2, status,0, pclath, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12859 ;;Total ram usage:        0 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:    5
 12862 ;; This function calls:
 12863 ;;		_EUSART1_SetErrorHandler
 12864 ;;		_EUSART1_SetFramingErrorHandler
 12865 ;;		_EUSART1_SetOverrunErrorHandler
 12866 ;;		_EUSART1_SetRxInterruptHandler
 12867 ;; This function is called by:
 12868 ;;		_SYSTEM_Initialize
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           
 12873                           ;psect for function _EUSART1_Initialize
 12874  1228                     _EUSART1_Initialize:	
 12875                           
 12876                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12877                           
 12878                           ;incstack = 0
 12879                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12880  1228  014E               	movlb	14	; select bank14
 12881  1229  1299               	bcf	25,5	;volatile
 12882                           
 12883                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12884  122A  3091               	movlw	low _EUSART1_Receive_ISR
 12885  122B  0140               	movlb	0	; select bank0
 12886  122C  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12887  122D  3012               	movlw	high _EUSART1_Receive_ISR
 12888  122E  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12889  122F  319D  257B  3192   	fcall	_EUSART1_SetRxInterruptHandler
 12890                           
 12891                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12892  1232  3008               	movlw	8
 12893  1233  0142               	movlb	2	; select bank2
 12894  1234  009F               	movwf	31	;volatile
 12895                           
 12896                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12897  1235  3090               	movlw	144
 12898  1236  009D               	movwf	29	;volatile
 12899                           
 12900                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12901  1237  3004               	movlw	4
 12902  1238  009E               	movwf	30	;volatile
 12903                           
 12904                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12905  1239  301F               	movlw	31
 12906  123A  009B               	movwf	27	;volatile
 12907                           
 12908                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12909  123B  019C               	clrf	28	;volatile
 12910                           
 12911                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12912  123C  300A               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12913  123D  0140               	movlb	0	; select bank0
 12914  123E  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12915  123F  301D               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12916  1240  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12917  1241  319D  258D  3192   	fcall	_EUSART1_SetFramingErrorHandler
 12918                           
 12919                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12920  1244  3020               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12921  1245  0140               	movlb	0	; select bank0
 12922  1246  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12923  1247  301D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12924  1248  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12925  1249  319D  2596  3192   	fcall	_EUSART1_SetOverrunErrorHandler
 12926                           
 12927                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12928  124C  3010               	movlw	low _EUSART1_DefaultErrorHandler
 12929  124D  0140               	movlb	0	; select bank0
 12930  124E  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12931  124F  301D               	movlw	high _EUSART1_DefaultErrorHandler
 12932  1250  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12933  1251  319D  2584         	fcall	_EUSART1_SetErrorHandler
 12934                           
 12935                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12936  1253  0142               	movlb	2	; select bank2
 12937  1254  01C4               	clrf	_eusart1RxLastError^(0+256)	;volatile
 12938                           
 12939                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12940  1255  01F4               	clrf	_eusart1RxHead	;volatile
 12941                           
 12942                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12943  1256  01F3               	clrf	_eusart1RxTail	;volatile
 12944                           
 12945                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12946  1257  0141               	movlb	1	; select bank1
 12947  1258  01E6               	clrf	_eusart1RxCount^(0+128)	;volatile
 12948                           
 12949                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12950  1259  014E               	movlb	14	; select bank14
 12951  125A  1699               	bsf	25,5	;volatile
 12952  125B  0008               	return
 12953  125C                     __end_of_EUSART1_Initialize:	
 12954                           
 12955                           	psect	text15
 12956  1D96                     __ptext15:	
 12957 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12958 ;; Defined at:
 12959 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12962 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12963 ;; Auto vars:     Size  Location     Type
 12964 ;;		None
 12965 ;; Return value:  Size  Location     Type
 12966 ;;                  1    wreg      void 
 12967 ;; Registers used:
 12968 ;;		wreg
 12969 ;; Tracked objects:
 12970 ;;		On entry : 0/0
 12971 ;;		On exit  : 0/0
 12972 ;;		Unchanged: 0/0
 12973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12977 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;Total ram usage:        2 bytes
 12979 ;; Hardware stack levels used:    1
 12980 ;; Hardware stack levels required when called:    4
 12981 ;; This function calls:
 12982 ;;		Nothing
 12983 ;; This function is called by:
 12984 ;;		_EUSART1_Initialize
 12985 ;; This function uses a non-reentrant model
 12986 ;;
 12987                           
 12988                           
 12989                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12990  1D96                     _EUSART1_SetOverrunErrorHandler:	
 12991                           
 12992                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12993                           
 12994                           ;incstack = 0
 12995                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12996  1D96  0140               	movlb	0	; select bank0
 12997  1D97  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12998  1D98  0144               	movlb	4	; select bank4
 12999  1D99  00E7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+512)
 13000  1D9A  0140               	movlb	0	; select bank0
 13001  1D9B  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13002  1D9C  0144               	movlb	4	; select bank4
 13003  1D9D  00E6               	movwf	_EUSART1_OverrunErrorHandler^(0+512)
 13004  1D9E  0008               	return
 13005  1D9F                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13006                           
 13007                           	psect	text16
 13008  1D8D                     __ptext16:	
 13009 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13010 ;; Defined at:
 13011 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13014 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      void 
 13019 ;; Registers used:
 13020 ;;		wreg
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13030 ;;Total ram usage:        2 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    4
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_EUSART1_Initialize
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           
 13041                           ;psect for function _EUSART1_SetFramingErrorHandler
 13042  1D8D                     _EUSART1_SetFramingErrorHandler:	
 13043                           
 13044                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 13045                           
 13046                           ;incstack = 0
 13047                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13048  1D8D  0140               	movlb	0	; select bank0
 13049  1D8E  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13050  1D8F  0143               	movlb	3	; select bank3
 13051  1D90  00E9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
 13052  1D91  0140               	movlb	0	; select bank0
 13053  1D92  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13054  1D93  0143               	movlb	3	; select bank3
 13055  1D94  00E8               	movwf	_EUSART1_FramingErrorHandler^(0+384)
 13056  1D95  0008               	return
 13057  1D96                     __end_of_EUSART1_SetFramingErrorHandler:	
 13058                           
 13059                           	psect	text17
 13060  1D84                     __ptext17:	
 13061 ;; *************** function _EUSART1_SetErrorHandler *****************
 13062 ;; Defined at:
 13063 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13066 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      void 
 13071 ;; Registers used:
 13072 ;;		wreg
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13082 ;;Total ram usage:        2 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    4
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_EUSART1_Initialize
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           
 13093                           ;psect for function _EUSART1_SetErrorHandler
 13094  1D84                     _EUSART1_SetErrorHandler:	
 13095                           
 13096                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 13097                           
 13098                           ;incstack = 0
 13099                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13100  1D84  0140               	movlb	0	; select bank0
 13101  1D85  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13102  1D86  0144               	movlb	4	; select bank4
 13103  1D87  00E5               	movwf	(_EUSART1_ErrorHandler+1)^(0+512)
 13104  1D88  0140               	movlb	0	; select bank0
 13105  1D89  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13106  1D8A  0144               	movlb	4	; select bank4
 13107  1D8B  00E4               	movwf	_EUSART1_ErrorHandler^(0+512)
 13108  1D8C  0008               	return
 13109  1D8D                     __end_of_EUSART1_SetErrorHandler:	
 13110                           
 13111                           	psect	text18
 13112  10E8                     __ptext18:	
 13113 ;; *************** function _ADCC_Initialize *****************
 13114 ;; Defined at:
 13115 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2, status,0, pclath, cstack
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13133 ;;Total ram usage:        0 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    5
 13136 ;; This function calls:
 13137 ;;		_ADCC_SetADTIInterruptHandler
 13138 ;; This function is called by:
 13139 ;;		_SYSTEM_Initialize
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           
 13144                           ;psect for function _ADCC_Initialize
 13145  10E8                     _ADCC_Initialize:	
 13146                           
 13147                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13148                           
 13149                           ;incstack = 0
 13150                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13151  10E8  0141               	movlb	1	; select bank1
 13152  10E9  018C               	clrf	12	;volatile
 13153                           
 13154                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13155  10EA  018D               	clrf	13	;volatile
 13156                           
 13157                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13158  10EB  018E               	clrf	14	;volatile
 13159                           
 13160                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13161  10EC  018F               	clrf	15	;volatile
 13162                           
 13163                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13164  10ED  0192               	clrf	18	;volatile
 13165                           
 13166                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13167  10EE  0193               	clrf	19	;volatile
 13168                           
 13169                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13170  10EF  0198               	clrf	24	;volatile
 13171                           
 13172                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13173  10F0  019A               	clrf	26	;volatile
 13174                           
 13175                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13176  10F1  019F               	clrf	31	;volatile
 13177                           
 13178                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13179  10F2  0142               	movlb	2	; select bank2
 13180  10F3  018C               	clrf	12	;volatile
 13181                           
 13182                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13183  10F4  018D               	clrf	13	;volatile
 13184                           
 13185                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13186  10F5  018E               	clrf	14	;volatile
 13187                           
 13188                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13189  10F6  018F               	clrf	15	;volatile
 13190                           
 13191                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13192  10F7  0190               	clrf	16	;volatile
 13193                           
 13194                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13195  10F8  0192               	clrf	18	;volatile
 13196                           
 13197                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13198  10F9  3054               	movlw	84
 13199  10FA  0093               	movwf	19	;volatile
 13200                           
 13201                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13202  10FB  3056               	movlw	86
 13203  10FC  0094               	movwf	20	;volatile
 13204                           
 13205                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13206  10FD  0195               	clrf	21	;volatile
 13207                           
 13208                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13209  10FE  0196               	clrf	22	;volatile
 13210                           
 13211                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13212  10FF  0197               	clrf	23	;volatile
 13213                           
 13214                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13215  1100  0198               	clrf	24	;volatile
 13216                           
 13217                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13218  1101  30D4               	movlw	212
 13219  1102  0091               	movwf	17	;volatile
 13220                           
 13221                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13222  1103  014E               	movlb	14	; select bank14
 13223  1104  108D               	bcf	13,1	;volatile
 13224                           
 13225                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13226  1105  1497               	bsf	23,1	;volatile
 13227                           
 13228                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13229  1106  3009               	movlw	low _ADCC_DefaultInterruptHandler
 13230  1107  0140               	movlb	0	; select bank0
 13231  1108  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13232  1109  301D               	movlw	high _ADCC_DefaultInterruptHandler
 13233  110A  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13234  110B  319D  2545         	fcall	_ADCC_SetADTIInterruptHandler
 13235  110D  0008               	return
 13236  110E                     __end_of_ADCC_Initialize:	
 13237                           
 13238                           	psect	text19
 13239  09B4                     __ptext19:	
 13240 ;; *************** function _LED_task *****************
 13241 ;; Defined at:
 13242 ;;		line 56 in file "led.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;		None
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;		None
 13247 ;; Return value:  Size  Location     Type
 13248 ;;                  1    wreg      void 
 13249 ;; Registers used:
 13250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13258 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;Total ram usage:        2 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    9
 13263 ;; This function calls:
 13264 ;;		_LED_setColor
 13265 ;;		_LED_task_ANIMATION
 13266 ;;		_LED_task_BEAT_CONTINUOUS
 13267 ;;		_LED_task_BEAT_FADE
 13268 ;;		_LED_task_BEAT_MIXED
 13269 ;;		_LED_task_BEAT_STROBE
 13270 ;;		_LED_task_DMX
 13271 ;;		_LED_task_MANUAL
 13272 ;;		_beatColorCreator
 13273 ;;		_getIsHold
 13274 ;;		_getMode
 13275 ;; This function is called by:
 13276 ;;		_main
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           
 13281                           ;psect for function _LED_task
 13282  09B4                     _LED_task:	
 13283                           
 13284                           ;led.c: 58:     switch(getMode()) {
 13285                           
 13286                           ;incstack = 0
 13287                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13288  09B4  2A4C               	goto	l9974
 13289  09B5                     l9938:	
 13290                           
 13291                           ;led.c: 60:             LED_task_DMX();
 13292  09B5  3195  2547         	fcall	_LED_task_DMX
 13293                           
 13294                           ;led.c: 61:             break;
 13295  09B7  0008               	return
 13296  09B8                     l9940:	
 13297                           
 13298                           ;led.c: 64:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13299  09B8  3180  2002  3189   	fcall	_getIsHold
 13300  09BB  3A00               	xorlw	0
 13301  09BC  1903               	skipnz
 13302  09BD  29D2               	goto	l9944
 13303  09BE  0141               	movlb	1	; select bank1
 13304  09BF  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13305  09C0  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13306  09C1  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13307  09C2  3000               	movlw	0
 13308  09C3  3188  204E  3189   	fcall	_beatColorCreator
 13309  09C6  0141               	movlb	1	; select bank1
 13310  09C7  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13311  09C8  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13312  09C9  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13313  09CA  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13314  09CB  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13315  09CC  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13316  09CD  0829               	movf	?_beatColorCreator^(0+128),w
 13317  09CE  00B6               	movwf	LED_setColor@input^(0+128)
 13318  09CF  3186  2618         	fcall	_LED_setColor
 13319  09D1  0008               	return
 13320  09D2                     l9944:	
 13321  09D2  318C  24E1         	fcall	_LED_task_BEAT_STROBE
 13322  09D4  0008               	return
 13323  09D5                     l9946:	
 13324                           
 13325                           ;led.c: 69:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13326  09D5  3180  2002  3189   	fcall	_getIsHold
 13327  09D8  3A00               	xorlw	0
 13328  09D9  1903               	skipnz
 13329  09DA  29EF               	goto	l9950
 13330  09DB  0141               	movlb	1	; select bank1
 13331  09DC  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13332  09DD  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13333  09DE  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13334  09DF  3000               	movlw	0
 13335  09E0  3188  204E  3189   	fcall	_beatColorCreator
 13336  09E3  0141               	movlb	1	; select bank1
 13337  09E4  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13338  09E5  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13339  09E6  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13340  09E7  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13341  09E8  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13342  09E9  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13343  09EA  0829               	movf	?_beatColorCreator^(0+128),w
 13344  09EB  00B6               	movwf	LED_setColor@input^(0+128)
 13345  09EC  3186  2618         	fcall	_LED_setColor
 13346  09EE  0008               	return
 13347  09EF                     l9950:	
 13348  09EF  319D  250C         	fcall	_LED_task_BEAT_FADE
 13349  09F1  0008               	return
 13350  09F2                     l9952:	
 13351                           
 13352                           ;led.c: 74:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13353  09F2  3180  2002  3189   	fcall	_getIsHold
 13354  09F5  3A00               	xorlw	0
 13355  09F6  1903               	skipnz
 13356  09F7  2A0C               	goto	l9956
 13357  09F8  0141               	movlb	1	; select bank1
 13358  09F9  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13359  09FA  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13360  09FB  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13361  09FC  3000               	movlw	0
 13362  09FD  3188  204E  3189   	fcall	_beatColorCreator
 13363  0A00  0141               	movlb	1	; select bank1
 13364  0A01  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13365  0A02  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13366  0A03  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13367  0A04  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13368  0A05  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13369  0A06  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13370  0A07  0829               	movf	?_beatColorCreator^(0+128),w
 13371  0A08  00B6               	movwf	LED_setColor@input^(0+128)
 13372  0A09  3186  2618         	fcall	_LED_setColor
 13373  0A0B  0008               	return
 13374  0A0C                     l9956:	
 13375  0A0C  319D  250F         	fcall	_LED_task_BEAT_CONTINUOUS
 13376  0A0E  0008               	return
 13377  0A0F                     l9958:	
 13378                           
 13379                           ;led.c: 79:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13380  0A0F  3180  2002  3189   	fcall	_getIsHold
 13381  0A12  3A00               	xorlw	0
 13382  0A13  1903               	skipnz
 13383  0A14  2A29               	goto	l9962
 13384  0A15  0141               	movlb	1	; select bank1
 13385  0A16  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13386  0A17  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13387  0A18  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13388  0A19  3000               	movlw	0
 13389  0A1A  3188  204E  3189   	fcall	_beatColorCreator
 13390  0A1D  0141               	movlb	1	; select bank1
 13391  0A1E  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13392  0A1F  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13393  0A20  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13394  0A21  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13395  0A22  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13396  0A23  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13397  0A24  0829               	movf	?_beatColorCreator^(0+128),w
 13398  0A25  00B6               	movwf	LED_setColor@input^(0+128)
 13399  0A26  3186  2618         	fcall	_LED_setColor
 13400  0A28  0008               	return
 13401  0A29                     l9962:	
 13402  0A29  319D  250D         	fcall	_LED_task_BEAT_MIXED
 13403  0A2B  0008               	return
 13404  0A2C                     l9964:	
 13405                           
 13406                           ;led.c: 84:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13407  0A2C  3180  2002  3189   	fcall	_getIsHold
 13408  0A2F  3A00               	xorlw	0
 13409  0A30  1903               	skipnz
 13410  0A31  2A46               	goto	l9968
 13411  0A32  0141               	movlb	1	; select bank1
 13412  0A33  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13413  0A34  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13414  0A35  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13415  0A36  3000               	movlw	0
 13416  0A37  3188  204E  3189   	fcall	_beatColorCreator
 13417  0A3A  0141               	movlb	1	; select bank1
 13418  0A3B  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13419  0A3C  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13420  0A3D  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13421  0A3E  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13422  0A3F  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13423  0A40  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13424  0A41  0829               	movf	?_beatColorCreator^(0+128),w
 13425  0A42  00B6               	movwf	LED_setColor@input^(0+128)
 13426  0A43  3186  2618         	fcall	_LED_setColor
 13427  0A45  0008               	return
 13428  0A46                     l9968:	
 13429  0A46  319D  250E         	fcall	_LED_task_ANIMATION
 13430  0A48  0008               	return
 13431  0A49                     l9970:	
 13432                           
 13433                           ;led.c: 89:             LED_task_MANUAL();
 13434  0A49  319D  25DE         	fcall	_LED_task_MANUAL
 13435                           
 13436                           ;led.c: 90:             break;
 13437  0A4B  0008               	return
 13438  0A4C                     l9974:	
 13439  0A4C  319D  2519  3189   	fcall	_getMode
 13440  0A4F  0141               	movlb	1	; select bank1
 13441  0A50  00C3               	movwf	??_LED_task^(0+128)
 13442  0A51  01C4               	clrf	(??_LED_task^(0+128)+1)
 13443                           
 13444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13445                           ; Switch size 1, requested type "simple"
 13446                           ; Number of cases is 1, Range of values is 0 to 0
 13447                           ; switch strategies available:
 13448                           ; Name         Instructions Cycles
 13449                           ; simple_byte            4     3 (average)
 13450                           ; direct_byte            8     6 (fixed)
 13451                           ; jumptable            260     6 (fixed)
 13452                           ;	Chosen strategy is simple_byte
 13453  0A52  0844               	movf	(??_LED_task+1)^(0+128),w
 13454  0A53  3A00               	xorlw	0	; case 0
 13455  0A54  1903               	skipnz
 13456  0A55  2A57               	goto	l10134
 13457  0A56  2A6E               	goto	l1422
 13458  0A57                     l10134:	
 13459                           
 13460                           ; Switch size 1, requested type "simple"
 13461                           ; Number of cases is 7, Range of values is 0 to 6
 13462                           ; switch strategies available:
 13463                           ; Name         Instructions Cycles
 13464                           ; direct_byte           20     6 (fixed)
 13465                           ; simple_byte           22    12 (average)
 13466                           ; jumptable            260     6 (fixed)
 13467                           ;	Chosen strategy is simple_byte
 13468  0A57  0843               	movf	??_LED_task^(0+128),w
 13469  0A58  3A00               	xorlw	0	; case 0
 13470  0A59  1903               	skipnz
 13471  0A5A  29B5               	goto	l9938
 13472  0A5B  3A01               	xorlw	1	; case 1
 13473  0A5C  1903               	skipnz
 13474  0A5D  29B8               	goto	l9940
 13475  0A5E  3A03               	xorlw	3	; case 2
 13476  0A5F  1903               	skipnz
 13477  0A60  2A2C               	goto	l9964
 13478  0A61  3A01               	xorlw	1	; case 3
 13479  0A62  1903               	skipnz
 13480  0A63  2A49               	goto	l9970
 13481  0A64  3A07               	xorlw	7	; case 4
 13482  0A65  1903               	skipnz
 13483  0A66  29D5               	goto	l9946
 13484  0A67  3A01               	xorlw	1	; case 5
 13485  0A68  1903               	skipnz
 13486  0A69  29F2               	goto	l9952
 13487  0A6A  3A03               	xorlw	3	; case 6
 13488  0A6B  1903               	skipnz
 13489  0A6C  2A0F               	goto	l9958
 13490  0A6D  2A6E               	goto	l1422
 13491  0A6E                     l1422:	
 13492  0A6E  0008               	return
 13493  0A6F                     __end_of_LED_task:	
 13494                           
 13495                           	psect	text20
 13496  1D19                     __ptext20:	
 13497 ;; *************** function _getMode *****************
 13498 ;; Defined at:
 13499 ;;		line 454 in file "controller.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;		None
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      enum E11209
 13506 ;; Registers used:
 13507 ;;		wreg
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13517 ;;Total ram usage:        0 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    4
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_LED_task
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           
 13528                           ;psect for function _getMode
 13529  1D19                     _getMode:	
 13530                           
 13531                           ;controller.c: 455:     return currentSelection;
 13532                           
 13533                           ;incstack = 0
 13534                           ; Regs used in _getMode: [wreg]
 13535  1D19  0141               	movlb	1	; select bank1
 13536  1D1A  0858               	movf	_currentSelection^(0+128),w
 13537  1D1B  0008               	return
 13538  1D1C                     __end_of_getMode:	
 13539                           
 13540                           	psect	text21
 13541  0002                     __ptext21:	
 13542 ;; *************** function _getIsHold *****************
 13543 ;; Defined at:
 13544 ;;		line 543 in file "controller.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;		None
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;		None
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1    wreg      _Bool 
 13551 ;; Registers used:
 13552 ;;		wreg
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13562 ;;Total ram usage:        0 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:    4
 13565 ;; This function calls:
 13566 ;;		Nothing
 13567 ;; This function is called by:
 13568 ;;		_LED_task
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572                           
 13573                           ;psect for function _getIsHold
 13574  0002                     _getIsHold:	
 13575                           
 13576                           ;controller.c: 544:     return 0;
 13577                           
 13578                           ;incstack = 0
 13579                           ; Regs used in _getIsHold: [wreg]
 13580  0002  3000               	movlw	0
 13581  0003  0008               	return
 13582  0004                     __end_of_getIsHold:	
 13583                           
 13584                           	psect	text22
 13585  1547                     __ptext22:	
 13586 ;; *************** function _LED_task_DMX *****************
 13587 ;; Defined at:
 13588 ;;		line 35 in file "led.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;		None
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;  dmx             4    0[BANK2 ] struct .
 13593 ;; Return value:  Size  Location     Type
 13594 ;;                  1    wreg      void 
 13595 ;; Registers used:
 13596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13597 ;; Tracked objects:
 13598 ;;		On entry : 0/0
 13599 ;;		On exit  : 0/0
 13600 ;;		Unchanged: 0/0
 13601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13603 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13604 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13605 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13606 ;;Total ram usage:        9 bytes
 13607 ;; Hardware stack levels used:    1
 13608 ;; Hardware stack levels required when called:    7
 13609 ;; This function calls:
 13610 ;;		_DMX_getAddress
 13611 ;;		_LED_setColor
 13612 ;; This function is called by:
 13613 ;;		_LED_task
 13614 ;; This function uses a non-reentrant model
 13615 ;;
 13616                           
 13617                           
 13618                           ;psect for function _LED_task_DMX
 13619  1547                     _LED_task_DMX:	
 13620                           
 13621                           ;led.c: 37:     color_t dmx;;led.c: 39:     dmx.red = dmxArray[DMX_getAddress()];
 13622                           
 13623                           ;incstack = 0
 13624                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13625  1547  319D  2516  3195   	fcall	_DMX_getAddress
 13626  154A  0141               	movlb	1	; select bank1
 13627  154B  00BE               	movwf	??_LED_task_DMX^(0+128)
 13628  154C  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13629  154D  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13630  154E  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13631  154F  30EE               	movlw	238
 13632  1550  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13633  1551  3023               	movlw	35
 13634  1552  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13635  1553  083E               	movf	??_LED_task_DMX^(0+128),w
 13636  1554  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13637  1555  0086               	movwf	6
 13638  1556  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13639  1557  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13640  1558  0087               	movwf	7
 13641  1559  0801               	movf	1,w
 13642  155A  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13643  155B  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13644  155C  0142               	movlb	2	; select bank2
 13645  155D  00E7               	movwf	(LED_task_DMX@dmx^(0+256)+1)
 13646                           
 13647                           ;led.c: 40:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13648  155E  319D  2516  3195   	fcall	_DMX_getAddress
 13649  1561  0141               	movlb	1	; select bank1
 13650  1562  00BE               	movwf	??_LED_task_DMX^(0+128)
 13651  1563  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13652  1564  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13653  1565  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13654  1566  30F0               	movlw	240
 13655  1567  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13656  1568  3023               	movlw	35
 13657  1569  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13658  156A  083E               	movf	??_LED_task_DMX^(0+128),w
 13659  156B  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13660  156C  0086               	movwf	6
 13661  156D  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13662  156E  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13663  156F  0087               	movwf	7
 13664  1570  0801               	movf	1,w
 13665  1571  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13666  1572  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13667  1573  0142               	movlb	2	; select bank2
 13668  1574  00E8               	movwf	(LED_task_DMX@dmx^(0+256)+2)
 13669                           
 13670                           ;led.c: 41:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13671  1575  319D  2516  3195   	fcall	_DMX_getAddress
 13672  1578  0141               	movlb	1	; select bank1
 13673  1579  00BE               	movwf	??_LED_task_DMX^(0+128)
 13674  157A  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13675  157B  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13676  157C  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13677  157D  30F2               	movlw	242
 13678  157E  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13679  157F  3023               	movlw	35
 13680  1580  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13681  1581  083E               	movf	??_LED_task_DMX^(0+128),w
 13682  1582  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13683  1583  0086               	movwf	6
 13684  1584  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13685  1585  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13686  1586  0087               	movwf	7
 13687  1587  0801               	movf	1,w
 13688  1588  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13689  1589  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13690  158A  0142               	movlb	2	; select bank2
 13691  158B  00E9               	movwf	(LED_task_DMX@dmx^(0+256)+3)
 13692                           
 13693                           ;led.c: 42:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13694  158C  319D  2516  3195   	fcall	_DMX_getAddress
 13695  158F  0141               	movlb	1	; select bank1
 13696  1590  00BE               	movwf	??_LED_task_DMX^(0+128)
 13697  1591  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13698  1592  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13699  1593  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13700  1594  30F4               	movlw	244
 13701  1595  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13702  1596  3023               	movlw	35
 13703  1597  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13704  1598  083E               	movf	??_LED_task_DMX^(0+128),w
 13705  1599  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13706  159A  0086               	movwf	6
 13707  159B  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13708  159C  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13709  159D  0087               	movwf	7
 13710  159E  0801               	movf	1,w
 13711  159F  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13712  15A0  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13713  15A1  0142               	movlb	2	; select bank2
 13714  15A2  00E6               	movwf	LED_task_DMX@dmx^(0+256)
 13715                           
 13716                           ;led.c: 44:     LED_setColor(dmx);
 13717  15A3  0869               	movf	(LED_task_DMX@dmx+3)^(0+256),w
 13718  15A4  0141               	movlb	1	; select bank1
 13719  15A5  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13720  15A6  0142               	movlb	2	; select bank2
 13721  15A7  0868               	movf	(LED_task_DMX@dmx+2)^(0+256),w
 13722  15A8  0141               	movlb	1	; select bank1
 13723  15A9  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13724  15AA  0142               	movlb	2	; select bank2
 13725  15AB  0867               	movf	(LED_task_DMX@dmx+1)^(0+256),w
 13726  15AC  0141               	movlb	1	; select bank1
 13727  15AD  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13728  15AE  0142               	movlb	2	; select bank2
 13729  15AF  0866               	movf	LED_task_DMX@dmx^(0+256),w
 13730  15B0  0141               	movlb	1	; select bank1
 13731  15B1  00B6               	movwf	LED_setColor@input^(0+128)
 13732  15B2  3186  2618         	fcall	_LED_setColor
 13733  15B4  0008               	return
 13734  15B5                     __end_of_LED_task_DMX:	
 13735                           
 13736                           	psect	text23
 13737  1D0F                     __ptext23:	
 13738 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 13739 ;; Defined at:
 13740 ;;		line 212 in file "led.c"
 13741 ;; Parameters:    Size  Location     Type
 13742 ;;		None
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;		None
 13745 ;; Return value:  Size  Location     Type
 13746 ;;                  1    wreg      void 
 13747 ;; Registers used:
 13748 ;;		None
 13749 ;; Tracked objects:
 13750 ;;		On entry : 0/0
 13751 ;;		On exit  : 0/0
 13752 ;;		Unchanged: 0/0
 13753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13758 ;;Total ram usage:        0 bytes
 13759 ;; Hardware stack levels used:    1
 13760 ;; Hardware stack levels required when called:    4
 13761 ;; This function calls:
 13762 ;;		Nothing
 13763 ;; This function is called by:
 13764 ;;		_LED_task
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           
 13769                           ;psect for function _LED_task_BEAT_CONTINUOUS
 13770  1D0F                     _LED_task_BEAT_CONTINUOUS:	
 13771                           
 13772                           ;incstack = 0
 13773                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 13774  1D0F  0008               	return
 13775  1D10                     __end_of_LED_task_BEAT_CONTINUOUS:	
 13776                           
 13777                           	psect	text24
 13778  1D3D                     __ptext24:	
 13779 ;; *************** function _LED_init *****************
 13780 ;; Defined at:
 13781 ;;		line 48 in file "led.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;		None
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;		None
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      void 
 13788 ;; Registers used:
 13789 ;;		status,2
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13799 ;;Total ram usage:        0 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:    4
 13802 ;; This function calls:
 13803 ;;		Nothing
 13804 ;; This function is called by:
 13805 ;;		_main
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           
 13810                           ;psect for function _LED_init
 13811  1D3D                     _LED_init:	
 13812                           
 13813                           ;led.c: 49:     manualColor.red = 0;
 13814                           
 13815                           ;incstack = 0
 13816                           ; Regs used in _LED_init: [status,2]
 13817  1D3D  0141               	movlb	1	; select bank1
 13818  1D3E  01CB               	clrf	(_manualColor^(0+128)+1)
 13819                           
 13820                           ;led.c: 50:     manualColor.green = 0;
 13821  1D3F  01CC               	clrf	(_manualColor^(0+128)+2)
 13822                           
 13823                           ;led.c: 51:     manualColor.blue = 0;
 13824  1D40  01CD               	clrf	(_manualColor^(0+128)+3)
 13825                           
 13826                           ;led.c: 52:     manualColor.white = 0;
 13827  1D41  01CA               	clrf	_manualColor^(0+128)
 13828                           
 13829                           ;led.c: 53:     TRISCbits.TRISC5 = 0;
 13830  1D42  0140               	movlb	0	; select bank0
 13831  1D43  1294               	bcf	20,5	;volatile
 13832  1D44  0008               	return
 13833  1D45                     __end_of_LED_init:	
 13834                           
 13835                           	psect	text25
 13836  1E8C                     __ptext25:	
 13837 ;; *************** function _DMX_init *****************
 13838 ;; Defined at:
 13839 ;;		line 21 in file "dmx.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;		None
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13857 ;;Total ram usage:        0 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:    9
 13860 ;; This function calls:
 13861 ;;		_EUSART1_SetRxInterruptHandler
 13862 ;;		_TM1650_fastPrintNum
 13863 ;; This function is called by:
 13864 ;;		_main
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           
 13869                           ;psect for function _DMX_init
 13870  1E8C                     _DMX_init:	
 13871                           
 13872                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13873                           
 13874                           ;incstack = 0
 13875                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13876  1E8C  30C4               	movlw	low _DMX_interrupt
 13877  1E8D  0140               	movlb	0	; select bank0
 13878  1E8E  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13879  1E8F  3011               	movlw	high _DMX_interrupt
 13880  1E90  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13881  1E91  319D  257B  319E   	fcall	_EUSART1_SetRxInterruptHandler
 13882                           
 13883                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 13884  1E94  0141               	movlb	1	; select bank1
 13885  1E95  086A               	movf	(_address+1)^(0+128),w
 13886  1E96  0140               	movlb	0	; select bank0
 13887  1E97  00B7               	movwf	TM1650_fastPrintNum@num+1
 13888  1E98  0141               	movlb	1	; select bank1
 13889  1E99  0869               	movf	_address^(0+128),w
 13890  1E9A  0140               	movlb	0	; select bank0
 13891  1E9B  00B6               	movwf	TM1650_fastPrintNum@num
 13892  1E9C  318A  226F         	fcall	_TM1650_fastPrintNum
 13893  1E9E  0008               	return
 13894  1E9F                     __end_of_DMX_init:	
 13895                           
 13896                           	psect	text26
 13897  0A6F                     __ptext26:	
 13898 ;; *************** function _TM1650_fastPrintNum *****************
 13899 ;; Defined at:
 13900 ;;		line 101 in file "tm1650.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  num             2   22[BANK0 ] unsigned short 
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  1    wreg      void 
 13907 ;; Registers used:
 13908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13914 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13917 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13918 ;;Total ram usage:        3 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    8
 13921 ;; This function calls:
 13922 ;;		___lwdiv
 13923 ;;		___lwmod
 13924 ;;		_writeData
 13925 ;; This function is called by:
 13926 ;;		_DMX_init
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           
 13931                           ;psect for function _TM1650_fastPrintNum
 13932  0A6F                     _TM1650_fastPrintNum:	
 13933                           
 13934                           ;tm1650.c: 103:     if(num > 9999){
 13935                           
 13936                           ;incstack = 0
 13937                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13938  0A6F  3027               	movlw	39
 13939  0A70  0140               	movlb	0	; select bank0
 13940  0A71  0237               	subwf	TM1650_fastPrintNum@num+1,w
 13941  0A72  3010               	movlw	16
 13942  0A73  1903               	skipnz
 13943  0A74  0236               	subwf	TM1650_fastPrintNum@num,w
 13944  0A75  1C03               	skipc
 13945  0A76  2A9A               	goto	l8304
 13946                           
 13947                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 13948  0A77  3079               	movlw	121
 13949  0A78  00B8               	movwf	??_TM1650_fastPrintNum
 13950  0A79  0838               	movf	??_TM1650_fastPrintNum,w
 13951  0A7A  00B0               	movwf	writeData@data
 13952  0A7B  3034               	movlw	52
 13953  0A7C  319F  276B  318A   	fcall	_writeData
 13954                           
 13955                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 13956  0A7F  3079               	movlw	121
 13957  0A80  0140               	movlb	0	; select bank0
 13958  0A81  00B8               	movwf	??_TM1650_fastPrintNum
 13959  0A82  0838               	movf	??_TM1650_fastPrintNum,w
 13960  0A83  00B0               	movwf	writeData@data
 13961  0A84  3035               	movlw	53
 13962  0A85  319F  276B  318A   	fcall	_writeData
 13963                           
 13964                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 13965  0A88  3079               	movlw	121
 13966  0A89  0140               	movlb	0	; select bank0
 13967  0A8A  00B8               	movwf	??_TM1650_fastPrintNum
 13968  0A8B  0838               	movf	??_TM1650_fastPrintNum,w
 13969  0A8C  00B0               	movwf	writeData@data
 13970  0A8D  3036               	movlw	54
 13971  0A8E  319F  276B  318A   	fcall	_writeData
 13972                           
 13973                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 13974  0A91  3079               	movlw	121
 13975  0A92  0140               	movlb	0	; select bank0
 13976  0A93  00B8               	movwf	??_TM1650_fastPrintNum
 13977  0A94  0838               	movf	??_TM1650_fastPrintNum,w
 13978  0A95  00B0               	movwf	writeData@data
 13979  0A96  3037               	movlw	55
 13980  0A97  319F  276B         	fcall	_writeData
 13981  0A99  0008               	return
 13982  0A9A                     l8304:	
 13983                           
 13984                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 13985  0A9A  300A               	movlw	10
 13986  0A9B  00A8               	movwf	___lwmod@divisor
 13987  0A9C  3000               	movlw	0
 13988  0A9D  00A9               	movwf	___lwmod@divisor+1
 13989  0A9E  0837               	movf	TM1650_fastPrintNum@num+1,w
 13990  0A9F  00AB               	movwf	___lwmod@dividend+1
 13991  0AA0  0836               	movf	TM1650_fastPrintNum@num,w
 13992  0AA1  00AA               	movwf	___lwmod@dividend
 13993  0AA2  3191  2138  318A   	fcall	___lwmod
 13994  0AA5  0140               	movlb	0	; select bank0
 13995  0AA6  0829               	movf	?___lwmod+1,w
 13996  0AA7  0085               	movwf	5
 13997  0AA8  0828               	movf	?___lwmod,w
 13998  0AA9  0084               	movwf	4
 13999  0AAA  3010               	movlw	low ((_charTable+16)| (0+32768))
 14000  0AAB  0784               	addwf	4,f
 14001  0AAC  3098               	movlw	high ((_charTable+16)| (0+32768))
 14002  0AAD  3D85               	addwfc	5,f
 14003  0AAE  0800               	movf	0,w	;code access
 14004  0AAF  00B8               	movwf	??_TM1650_fastPrintNum
 14005  0AB0  0838               	movf	??_TM1650_fastPrintNum,w
 14006  0AB1  00B0               	movwf	writeData@data
 14007  0AB2  3037               	movlw	55
 14008  0AB3  319F  276B  318A   	fcall	_writeData
 14009                           
 14010                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 14011  0AB6  300A               	movlw	10
 14012  0AB7  0140               	movlb	0	; select bank0
 14013  0AB8  00A8               	movwf	___lwmod@divisor
 14014  0AB9  3000               	movlw	0
 14015  0ABA  00A9               	movwf	___lwmod@divisor+1
 14016  0ABB  300A               	movlw	10
 14017  0ABC  00A0               	movwf	___lwdiv@divisor
 14018  0ABD  3000               	movlw	0
 14019  0ABE  00A1               	movwf	___lwdiv@divisor+1
 14020  0ABF  0837               	movf	TM1650_fastPrintNum@num+1,w
 14021  0AC0  00A3               	movwf	___lwdiv@dividend+1
 14022  0AC1  0836               	movf	TM1650_fastPrintNum@num,w
 14023  0AC2  00A2               	movwf	___lwdiv@dividend
 14024  0AC3  3192  225C  318A   	fcall	___lwdiv
 14025  0AC6  0140               	movlb	0	; select bank0
 14026  0AC7  0821               	movf	?___lwdiv+1,w
 14027  0AC8  00AB               	movwf	___lwmod@dividend+1
 14028  0AC9  0820               	movf	?___lwdiv,w
 14029  0ACA  00AA               	movwf	___lwmod@dividend
 14030  0ACB  3191  2138  318A   	fcall	___lwmod
 14031  0ACE  0140               	movlb	0	; select bank0
 14032  0ACF  0829               	movf	?___lwmod+1,w
 14033  0AD0  0085               	movwf	5
 14034  0AD1  0828               	movf	?___lwmod,w
 14035  0AD2  0084               	movwf	4
 14036  0AD3  3010               	movlw	low ((_charTable+16)| (0+32768))
 14037  0AD4  0784               	addwf	4,f
 14038  0AD5  3098               	movlw	high ((_charTable+16)| (0+32768))
 14039  0AD6  3D85               	addwfc	5,f
 14040  0AD7  0800               	movf	0,w	;code access
 14041  0AD8  00B8               	movwf	??_TM1650_fastPrintNum
 14042  0AD9  0838               	movf	??_TM1650_fastPrintNum,w
 14043  0ADA  00B0               	movwf	writeData@data
 14044  0ADB  3036               	movlw	54
 14045  0ADC  319F  276B  318A   	fcall	_writeData
 14046                           
 14047                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 14048  0ADF  300A               	movlw	10
 14049  0AE0  0140               	movlb	0	; select bank0
 14050  0AE1  00A8               	movwf	___lwmod@divisor
 14051  0AE2  3000               	movlw	0
 14052  0AE3  00A9               	movwf	___lwmod@divisor+1
 14053  0AE4  3064               	movlw	100
 14054  0AE5  00A0               	movwf	___lwdiv@divisor
 14055  0AE6  3000               	movlw	0
 14056  0AE7  00A1               	movwf	___lwdiv@divisor+1
 14057  0AE8  0837               	movf	TM1650_fastPrintNum@num+1,w
 14058  0AE9  00A3               	movwf	___lwdiv@dividend+1
 14059  0AEA  0836               	movf	TM1650_fastPrintNum@num,w
 14060  0AEB  00A2               	movwf	___lwdiv@dividend
 14061  0AEC  3192  225C  318A   	fcall	___lwdiv
 14062  0AEF  0140               	movlb	0	; select bank0
 14063  0AF0  0821               	movf	?___lwdiv+1,w
 14064  0AF1  00AB               	movwf	___lwmod@dividend+1
 14065  0AF2  0820               	movf	?___lwdiv,w
 14066  0AF3  00AA               	movwf	___lwmod@dividend
 14067  0AF4  3191  2138  318A   	fcall	___lwmod
 14068  0AF7  0140               	movlb	0	; select bank0
 14069  0AF8  0829               	movf	?___lwmod+1,w
 14070  0AF9  0085               	movwf	5
 14071  0AFA  0828               	movf	?___lwmod,w
 14072  0AFB  0084               	movwf	4
 14073  0AFC  3010               	movlw	low ((_charTable+16)| (0+32768))
 14074  0AFD  0784               	addwf	4,f
 14075  0AFE  3098               	movlw	high ((_charTable+16)| (0+32768))
 14076  0AFF  3D85               	addwfc	5,f
 14077  0B00  0800               	movf	0,w	;code access
 14078  0B01  00B8               	movwf	??_TM1650_fastPrintNum
 14079  0B02  0838               	movf	??_TM1650_fastPrintNum,w
 14080  0B03  00B0               	movwf	writeData@data
 14081  0B04  3035               	movlw	53
 14082  0B05  319F  276B  318A   	fcall	_writeData
 14083                           
 14084                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 14085  0B08  300A               	movlw	10
 14086  0B09  0140               	movlb	0	; select bank0
 14087  0B0A  00A8               	movwf	___lwmod@divisor
 14088  0B0B  3000               	movlw	0
 14089  0B0C  00A9               	movwf	___lwmod@divisor+1
 14090  0B0D  30E8               	movlw	232
 14091  0B0E  00A0               	movwf	___lwdiv@divisor
 14092  0B0F  3003               	movlw	3
 14093  0B10  00A1               	movwf	___lwdiv@divisor+1
 14094  0B11  0837               	movf	TM1650_fastPrintNum@num+1,w
 14095  0B12  00A3               	movwf	___lwdiv@dividend+1
 14096  0B13  0836               	movf	TM1650_fastPrintNum@num,w
 14097  0B14  00A2               	movwf	___lwdiv@dividend
 14098  0B15  3192  225C  318A   	fcall	___lwdiv
 14099  0B18  0140               	movlb	0	; select bank0
 14100  0B19  0821               	movf	?___lwdiv+1,w
 14101  0B1A  00AB               	movwf	___lwmod@dividend+1
 14102  0B1B  0820               	movf	?___lwdiv,w
 14103  0B1C  00AA               	movwf	___lwmod@dividend
 14104  0B1D  3191  2138  318A   	fcall	___lwmod
 14105  0B20  0140               	movlb	0	; select bank0
 14106  0B21  0829               	movf	?___lwmod+1,w
 14107  0B22  0085               	movwf	5
 14108  0B23  0828               	movf	?___lwmod,w
 14109  0B24  0084               	movwf	4
 14110  0B25  3010               	movlw	low ((_charTable+16)| (0+32768))
 14111  0B26  0784               	addwf	4,f
 14112  0B27  3098               	movlw	high ((_charTable+16)| (0+32768))
 14113  0B28  3D85               	addwfc	5,f
 14114  0B29  0800               	movf	0,w	;code access
 14115  0B2A  00B8               	movwf	??_TM1650_fastPrintNum
 14116  0B2B  0838               	movf	??_TM1650_fastPrintNum,w
 14117  0B2C  00B0               	movwf	writeData@data
 14118  0B2D  3034               	movlw	52
 14119  0B2E  319F  276B         	fcall	_writeData
 14120  0B30  0008               	return
 14121  0B31                     __end_of_TM1650_fastPrintNum:	
 14122                           
 14123                           	psect	text27
 14124  1D7B                     __ptext27:	
 14125 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 14126 ;; Defined at:
 14127 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 14130 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      void 
 14135 ;; Registers used:
 14136 ;;		wreg
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14146 ;;Total ram usage:        2 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    4
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_EUSART1_Initialize
 14153 ;;		_DMX_init
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           
 14158                           ;psect for function _EUSART1_SetRxInterruptHandler
 14159  1D7B                     _EUSART1_SetRxInterruptHandler:	
 14160                           
 14161                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 14162                           
 14163                           ;incstack = 0
 14164                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 14165  1D7B  0140               	movlb	0	; select bank0
 14166  1D7C  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 14167  1D7D  0143               	movlb	3	; select bank3
 14168  1D7E  00EB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
 14169  1D7F  0140               	movlb	0	; select bank0
 14170  1D80  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 14171  1D81  0143               	movlb	3	; select bank3
 14172  1D82  00EA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
 14173  1D83  0008               	return
 14174  1D84                     __end_of_EUSART1_SetRxInterruptHandler:	
 14175                           
 14176                           	psect	text28
 14177  0C03                     __ptext28:	
 14178 ;; *************** function _CONTROLLER_task *****************
 14179 ;; Defined at:
 14180 ;;		line 226 in file "controller.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;		None
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;		None
 14185 ;; Return value:  Size  Location     Type
 14186 ;;                  1    wreg      void 
 14187 ;; Registers used:
 14188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14189 ;; Tracked objects:
 14190 ;;		On entry : 0/0
 14191 ;;		On exit  : 0/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14196 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14197 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14198 ;;Total ram usage:        2 bytes
 14199 ;; Hardware stack levels used:    1
 14200 ;; Hardware stack levels required when called:   18
 14201 ;; This function calls:
 14202 ;;		_BUTTONS_isClicked
 14203 ;;		_CONTROL_BEAT
 14204 ;;		_CONTROL_DMX
 14205 ;;		_LED_task_ANIMATION
 14206 ;;		_LED_task_MANUAL
 14207 ;;		_printf
 14208 ;; This function is called by:
 14209 ;;		_main
 14210 ;; This function uses a non-reentrant model
 14211 ;;
 14212                           
 14213                           
 14214                           ;psect for function _CONTROLLER_task
 14215  0C03                     _CONTROLLER_task:	
 14216                           
 14217                           ;controller.c: 228:     if(startup == 1){
 14218                           
 14219                           ;incstack = 0
 14220 ;; hardware stack exceeded
 14221                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14222  0C03  0141               	movlb	1	; select bank1
 14223  0C04  036D               	decf	_startup^(0+128),w
 14224  0C05  1D03               	btfss	3,2
 14225  0C06  2C0C               	goto	l9878
 14226                           
 14227                           ;controller.c: 229:         currentMenu = &dmx;
 14228  0C07  30DA               	movlw	low _dmx
 14229  0C08  00D2               	movwf	_currentMenu^(0+128)
 14230  0C09  3001               	movlw	high _dmx
 14231  0C0A  00D3               	movwf	(_currentMenu+1)^(0+128)
 14232                           
 14233                           ;controller.c: 230:         startup = 0;
 14234  0C0B  01ED               	clrf	_startup^(0+128)
 14235  0C0C                     l9878:	
 14236                           
 14237                           ;controller.c: 233:     upState = BUTTONS_isClicked(up);
 14238  0C0C  085F               	movf	_up^(0+128),w
 14239  0C0D  319E  269F  318C   	fcall	_BUTTONS_isClicked
 14240  0C10  0141               	movlb	1	; select bank1
 14241  0C11  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14242  0C12  0842               	movf	??_CONTROLLER_task^(0+128),w
 14243  0C13  00DC               	movwf	_upState^(0+128)
 14244                           
 14245                           ;controller.c: 234:     downState = BUTTONS_isClicked(down);
 14246  0C14  085E               	movf	_down^(0+128),w
 14247  0C15  319E  269F  318C   	fcall	_BUTTONS_isClicked
 14248  0C18  0141               	movlb	1	; select bank1
 14249  0C19  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14250  0C1A  0842               	movf	??_CONTROLLER_task^(0+128),w
 14251  0C1B  00DB               	movwf	_downState^(0+128)
 14252                           
 14253                           ;controller.c: 235:     menuState = BUTTONS_isClicked(menu);
 14254  0C1C  0860               	movf	_menu^(0+128),w
 14255  0C1D  319E  269F  318C   	fcall	_BUTTONS_isClicked
 14256  0C20  0141               	movlb	1	; select bank1
 14257  0C21  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14258  0C22  0842               	movf	??_CONTROLLER_task^(0+128),w
 14259  0C23  00DA               	movwf	_menuState^(0+128)
 14260                           
 14261                           ;controller.c: 236:     enterState = BUTTONS_isClicked(enter);
 14262  0C24  085D               	movf	_enter^(0+128),w
 14263  0C25  319E  269F  318C   	fcall	_BUTTONS_isClicked
 14264  0C28  0141               	movlb	1	; select bank1
 14265  0C29  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14266  0C2A  0842               	movf	??_CONTROLLER_task^(0+128),w
 14267  0C2B  00D9               	movwf	_enterState^(0+128)
 14268                           
 14269                           ;controller.c: 238:     if(menuState){
 14270  0C2C  085A               	movf	_menuState^(0+128),w
 14271  0C2D  1903               	btfsc	3,2
 14272  0C2E  2C38               	goto	l9890
 14273                           
 14274                           ;controller.c: 239:         currentMenu = currentMenu->parent;
 14275  0C2F  0852               	movf	_currentMenu^(0+128),w
 14276  0C30  0086               	movwf	6
 14277  0C31  0853               	movf	(_currentMenu+1)^(0+128),w
 14278  0C32  0087               	movwf	7
 14279  0C33  3146               	addfsr 1,6
 14280  0C34  0801               	movf	1,w
 14281  0C35  00D2               	movwf	_currentMenu^(0+128)
 14282  0C36  3001               	movlw	1
 14283  0C37  2C74               	goto	L3
 14284  0C38                     l9890:	
 14285                           ;controller.c: 240:     } else if(upState && currentMenu->nextItem != ((void*)0)){
 14286                           
 14287  0C38  085C               	movf	_upState^(0+128),w
 14288  0C39  1903               	btfsc	3,2
 14289  0C3A  2C4B               	goto	l9896
 14290  0C3B  0852               	movf	_currentMenu^(0+128),w
 14291  0C3C  0086               	movwf	6
 14292  0C3D  0853               	movf	(_currentMenu+1)^(0+128),w
 14293  0C3E  0087               	movwf	7
 14294  0C3F  0016               	moviw fsr1++
 14295  0C40  0401               	iorwf	1,w
 14296  0C41  1903               	btfsc	3,2
 14297  0C42  2C4B               	goto	l9896
 14298                           
 14299                           ;controller.c: 241:         currentMenu = currentMenu->nextItem;
 14300  0C43  0852               	movf	_currentMenu^(0+128),w
 14301  0C44  0086               	movwf	6
 14302  0C45  0853               	movf	(_currentMenu+1)^(0+128),w
 14303  0C46  0087               	movwf	7
 14304  0C47  3F40               	moviw [0]fsr1
 14305  0C48  00D2               	movwf	_currentMenu^(0+128)
 14306  0C49  3F41               	moviw [1]fsr1
 14307  0C4A  2C74               	goto	L3
 14308  0C4B                     l9896:	
 14309                           ;controller.c: 242:     } else if(downState && currentMenu->prevItem != ((void*)0)){
 14310                           
 14311  0C4B  085B               	movf	_downState^(0+128),w
 14312  0C4C  1903               	btfsc	3,2
 14313  0C4D  2C60               	goto	l9902
 14314  0C4E  0852               	movf	_currentMenu^(0+128),w
 14315  0C4F  0086               	movwf	6
 14316  0C50  0853               	movf	(_currentMenu+1)^(0+128),w
 14317  0C51  0087               	movwf	7
 14318  0C52  3142               	addfsr 1,2
 14319  0C53  0016               	moviw fsr1++
 14320  0C54  0401               	iorwf	1,w
 14321  0C55  1903               	btfsc	3,2
 14322  0C56  2C60               	goto	l9902
 14323                           
 14324                           ;controller.c: 243:         currentMenu = currentMenu->prevItem;
 14325  0C57  0852               	movf	_currentMenu^(0+128),w
 14326  0C58  0086               	movwf	6
 14327  0C59  0853               	movf	(_currentMenu+1)^(0+128),w
 14328  0C5A  0087               	movwf	7
 14329  0C5B  3142               	addfsr 1,2
 14330  0C5C  3F40               	moviw [0]fsr1
 14331  0C5D  00D2               	movwf	_currentMenu^(0+128)
 14332  0C5E  3F41               	moviw [1]fsr1
 14333  0C5F  2C74               	goto	L3
 14334  0C60                     l9902:	
 14335                           ;controller.c: 244:     } else if(enterState && currentMenu->config != ((void*)0)){
 14336                           
 14337  0C60  0859               	movf	_enterState^(0+128),w
 14338  0C61  1903               	btfsc	3,2
 14339  0C62  2CB9               	goto	l9928
 14340  0C63  0852               	movf	_currentMenu^(0+128),w
 14341  0C64  0086               	movwf	6
 14342  0C65  0853               	movf	(_currentMenu+1)^(0+128),w
 14343  0C66  0087               	movwf	7
 14344  0C67  3144               	addfsr 1,4
 14345  0C68  0016               	moviw fsr1++
 14346  0C69  0401               	iorwf	1,w
 14347  0C6A  1903               	btfsc	3,2
 14348  0C6B  2CB9               	goto	l9928
 14349                           
 14350                           ;controller.c: 245:         currentMenu = currentMenu->config;
 14351  0C6C  0852               	movf	_currentMenu^(0+128),w
 14352  0C6D  0086               	movwf	6
 14353  0C6E  0853               	movf	(_currentMenu+1)^(0+128),w
 14354  0C6F  0087               	movwf	7
 14355  0C70  3144               	addfsr 1,4
 14356  0C71  3F40               	moviw [0]fsr1
 14357  0C72  00D2               	movwf	_currentMenu^(0+128)
 14358  0C73  3F41               	moviw [1]fsr1
 14359  0C74                     L3:	
 14360  0C74  00D3               	movwf	(_currentMenu+1)^(0+128)
 14361                           
 14362                           ;controller.c: 248:     switch(currentMenu->name){
 14363  0C75  2CB9               	goto	l9928
 14364  0C76                     l9908:	
 14365                           
 14366                           ;controller.c: 250:             printf("PC  \r");
 14367  0C76  3055               	movlw	low (STR_1| (0+32768))
 14368  0C77  00A0               	movwf	printf@fmt^(0+128)
 14369  0C78  30A0               	movlw	high (STR_1| (0+32768))
 14370  0C79  00A1               	movwf	(printf@fmt^(0+128)+1)
 14371  0C7A  319E  26DB         	fcall	_printf
 14372                           
 14373                           ;controller.c: 251:             break;
 14374  0C7C  0008               	return
 14375  0C7D                     l9910:	
 14376                           
 14377                           ;controller.c: 254:             printf("BEAT\r");
 14378  0C7D  3073               	movlw	low (STR_2| (0+32768))
 14379  0C7E  00A0               	movwf	printf@fmt^(0+128)
 14380  0C7F  30A0               	movlw	high (STR_2| (0+32768))
 14381  0C80  00A1               	movwf	(printf@fmt^(0+128)+1)
 14382  0C81  319E  26DB         	fcall	_printf
 14383                           
 14384                           ;controller.c: 255:             break;
 14385  0C83  0008               	return
 14386  0C84                     l9912:	
 14387                           
 14388                           ;controller.c: 258:             printf("ANI \r");
 14389  0C84  3061               	movlw	low (STR_3| (0+32768))
 14390  0C85  00A0               	movwf	printf@fmt^(0+128)
 14391  0C86  30A0               	movlw	high (STR_3| (0+32768))
 14392  0C87  00A1               	movwf	(printf@fmt^(0+128)+1)
 14393  0C88  319E  26DB         	fcall	_printf
 14394                           
 14395                           ;controller.c: 259:             break;
 14396  0C8A  0008               	return
 14397  0C8B                     l9914:	
 14398                           
 14399                           ;controller.c: 262:             printf("LED \r");
 14400  0C8B  305B               	movlw	low (STR_4| (0+32768))
 14401  0C8C  00A0               	movwf	printf@fmt^(0+128)
 14402  0C8D  30A0               	movlw	high (STR_4| (0+32768))
 14403  0C8E  00A1               	movwf	(printf@fmt^(0+128)+1)
 14404  0C8F  319E  26DB         	fcall	_printf
 14405                           
 14406                           ;controller.c: 263:             break;
 14407  0C91  0008               	return
 14408  0C92                     l9916:	
 14409                           
 14410                           ;controller.c: 266:             printf("B   \r");
 14411  0C92  3049               	movlw	low (STR_5| (0+32768))
 14412  0C93  00A0               	movwf	printf@fmt^(0+128)
 14413  0C94  30A0               	movlw	high (STR_5| (0+32768))
 14414  0C95  00A1               	movwf	(printf@fmt^(0+128)+1)
 14415  0C96  319E  26DB         	fcall	_printf
 14416                           
 14417                           ;controller.c: 267:             break;
 14418  0C98  0008               	return
 14419  0C99                     l9918:	
 14420                           
 14421                           ;controller.c: 270:             printf("FADE\r");
 14422  0C99  306D               	movlw	low (STR_6| (0+32768))
 14423  0C9A  00A0               	movwf	printf@fmt^(0+128)
 14424  0C9B  30A0               	movlw	high (STR_6| (0+32768))
 14425  0C9C  00A1               	movwf	(printf@fmt^(0+128)+1)
 14426  0C9D  319E  26DB         	fcall	_printf
 14427                           
 14428                           ;controller.c: 271:             break;
 14429  0C9F  0008               	return
 14430  0CA0                     l9920:	
 14431                           
 14432                           ;controller.c: 274:             printf("C   \r");
 14433  0CA0  304F               	movlw	low (STR_7| (0+32768))
 14434  0CA1  00A0               	movwf	printf@fmt^(0+128)
 14435  0CA2  30A0               	movlw	high (STR_7| (0+32768))
 14436  0CA3  00A1               	movwf	(printf@fmt^(0+128)+1)
 14437  0CA4  319E  26DB         	fcall	_printf
 14438                           
 14439                           ;controller.c: 275:             break;
 14440  0CA6  0008               	return
 14441  0CA7                     l9922:	
 14442                           
 14443                           ;controller.c: 278:             printf("ALL \r");
 14444  0CA7  3067               	movlw	low (STR_8| (0+32768))
 14445  0CA8  00A0               	movwf	printf@fmt^(0+128)
 14446  0CA9  30A0               	movlw	high (STR_8| (0+32768))
 14447  0CAA  00A1               	movwf	(printf@fmt^(0+128)+1)
 14448  0CAB  319E  26DB         	fcall	_printf
 14449                           
 14450                           ;controller.c: 279:             break;
 14451  0CAD  0008               	return
 14452  0CAE                     l9924:	
 14453                           
 14454                           ;controller.c: 282:             currentMenu->task();
 14455  0CAE  0852               	movf	_currentMenu^(0+128),w
 14456  0CAF  0086               	movwf	6
 14457  0CB0  0853               	movf	(_currentMenu+1)^(0+128),w
 14458  0CB1  0087               	movwf	7
 14459  0CB2  3148               	addfsr 1,8
 14460  0CB3  3F41               	moviw [1]fsr1
 14461  0CB4  008A               	movwf	10
 14462  0CB5  3F40               	moviw [0]fsr1
 14463  0CB6  000A               	callw
 14464  0CB7  318C               	pagesel	$
 14465                           
 14466                           ;controller.c: 283:             break;
 14467  0CB8  0008               	return
 14468  0CB9                     l9928:	
 14469  0CB9  0852               	movf	_currentMenu^(0+128),w
 14470  0CBA  0086               	movwf	6
 14471  0CBB  0853               	movf	(_currentMenu+1)^(0+128),w
 14472  0CBC  0087               	movwf	7
 14473  0CBD  3147               	addfsr 1,7
 14474  0CBE  0801               	movf	1,w
 14475  0CBF  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14476  0CC0  01C3               	clrf	(??_CONTROLLER_task^(0+128)+1)
 14477                           
 14478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14479                           ; Switch size 1, requested type "simple"
 14480                           ; Number of cases is 1, Range of values is 0 to 0
 14481                           ; switch strategies available:
 14482                           ; Name         Instructions Cycles
 14483                           ; simple_byte            4     3 (average)
 14484                           ; direct_byte            8     6 (fixed)
 14485                           ; jumptable            260     6 (fixed)
 14486                           ;	Chosen strategy is simple_byte
 14487  0CC1  0843               	movf	(??_CONTROLLER_task+1)^(0+128),w
 14488  0CC2  3A00               	xorlw	0	; case 0
 14489  0CC3  1903               	skipnz
 14490  0CC4  2CC6               	goto	l10136
 14491  0CC5  2CAE               	goto	l9924
 14492  0CC6                     l10136:	
 14493                           
 14494                           ; Switch size 1, requested type "simple"
 14495                           ; Number of cases is 8, Range of values is 0 to 8
 14496                           ; switch strategies available:
 14497                           ; Name         Instructions Cycles
 14498                           ; direct_byte           24     6 (fixed)
 14499                           ; simple_byte           25    13 (average)
 14500                           ; jumptable            260     6 (fixed)
 14501                           ;	Chosen strategy is simple_byte
 14502  0CC6  0842               	movf	??_CONTROLLER_task^(0+128),w
 14503  0CC7  3A00               	xorlw	0	; case 0
 14504  0CC8  1903               	skipnz
 14505  0CC9  2C76               	goto	l9908
 14506  0CCA  3A01               	xorlw	1	; case 1
 14507  0CCB  1903               	skipnz
 14508  0CCC  2C7D               	goto	l9910
 14509  0CCD  3A03               	xorlw	3	; case 2
 14510  0CCE  1903               	skipnz
 14511  0CCF  2C84               	goto	l9912
 14512  0CD0  3A01               	xorlw	1	; case 3
 14513  0CD1  1903               	skipnz
 14514  0CD2  2C8B               	goto	l9914
 14515  0CD3  3A06               	xorlw	6	; case 5
 14516  0CD4  1903               	skipnz
 14517  0CD5  2C92               	goto	l9916
 14518  0CD6  3A03               	xorlw	3	; case 6
 14519  0CD7  1903               	skipnz
 14520  0CD8  2C99               	goto	l9918
 14521  0CD9  3A01               	xorlw	1	; case 7
 14522  0CDA  1903               	skipnz
 14523  0CDB  2CA0               	goto	l9920
 14524  0CDC  3A0F               	xorlw	15	; case 8
 14525  0CDD  1903               	skipnz
 14526  0CDE  2CA7               	goto	l9922
 14527  0CDF  2CAE               	goto	l9924
 14528  0CE0  0008               	return
 14529  0CE1                     __end_of_CONTROLLER_task:	
 14530                           
 14531                           	psect	text29
 14532  147D                     __ptext29:	
 14533 ;; *************** function _CONTROL_BEAT *****************
 14534 ;; Defined at:
 14535 ;;		line 490 in file "controller.c"
 14536 ;; Parameters:    Size  Location     Type
 14537 ;;		None
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;		None
 14540 ;; Return value:  Size  Location     Type
 14541 ;;                  1    wreg      void 
 14542 ;; Registers used:
 14543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14551 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14552 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14553 ;;Total ram usage:        2 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; Hardware stack levels required when called:   17
 14556 ;; This function calls:
 14557 ;;		_LED_task_BEAT_FADE
 14558 ;;		_LED_task_BEAT_MIXED
 14559 ;;		_LED_task_BEAT_STROBE
 14560 ;;		_TM1650_fastPrintNum_2digit
 14561 ;;		_printf
 14562 ;; This function is called by:
 14563 ;;		_CONTROLLER_init
 14564 ;;		_CONTROLLER_task
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           
 14568                           
 14569                           ;psect for function _CONTROL_BEAT
 14570  147D                     _CONTROL_BEAT:	
 14571                           
 14572                           ;controller.c: 492:     switch(currentMenu->name){
 14573                           
 14574                           ;incstack = 0
 14575 ;; hardware stack exceeded
 14576                           ; Regs used in _CONTROL_BEAT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14577  147D  2CA3               	goto	l9672
 14578  147E                     l9654:	
 14579                           
 14580                           ;controller.c: 495:             printf("B-\r");
 14581  147E  3082               	movlw	low (STR_10| (0+32768))
 14582  147F  00A0               	movwf	printf@fmt^(0+128)
 14583  1480  30A0               	movlw	high (STR_10| (0+32768))
 14584  1481  00A1               	movwf	(printf@fmt^(0+128)+1)
 14585  1482  319E  26DB  3194   	fcall	_printf
 14586                           
 14587                           ;controller.c: 496:             LED_task_BEAT_STROBE();
 14588  1485  318C  24E1  3194   	fcall	_LED_task_BEAT_STROBE
 14589                           
 14590                           ;controller.c: 497:             break;
 14591  1488  2CBF               	goto	l9674
 14592  1489                     l9658:	
 14593                           
 14594                           ;controller.c: 500:             printf("F-\r");
 14595  1489  308A               	movlw	low (STR_11| (0+32768))
 14596  148A  00A0               	movwf	printf@fmt^(0+128)
 14597  148B  30A0               	movlw	high (STR_11| (0+32768))
 14598  148C                     L4:	
 14599  148C  00A1               	movwf	(printf@fmt^(0+128)+1)
 14600  148D  319E  26DB  3194   	fcall	_printf
 14601                           
 14602                           ;controller.c: 501:             LED_task_BEAT_FADE();
 14603  1490  319D  250C  3194   	fcall	_LED_task_BEAT_FADE
 14604                           
 14605                           ;controller.c: 502:             break;
 14606  1493  2CBF               	goto	l9674
 14607  1494                     l9662:	
 14608                           
 14609                           ;controller.c: 505:             printf("C-\r");
 14610  1494  3086               	movlw	low (STR_12| (0+32768))
 14611  1495  00A0               	movwf	printf@fmt^(0+128)
 14612  1496  30A0               	movlw	high (STR_12| (0+32768))
 14613  1497  2C8C               	goto	L4
 14614  1498                     l9666:	
 14615                           
 14616                           ;controller.c: 510:             printf("A-\r");
 14617  1498  307E               	movlw	low (STR_13| (0+32768))
 14618  1499  00A0               	movwf	printf@fmt^(0+128)
 14619  149A  30A0               	movlw	high (STR_13| (0+32768))
 14620  149B  00A1               	movwf	(printf@fmt^(0+128)+1)
 14621  149C  319E  26DB  3194   	fcall	_printf
 14622                           
 14623                           ;controller.c: 511:             LED_task_BEAT_MIXED();
 14624  149F  319D  250D  3194   	fcall	_LED_task_BEAT_MIXED
 14625                           
 14626                           ;controller.c: 512:             break;
 14627  14A2  2CBF               	goto	l9674
 14628  14A3                     l9672:	
 14629  14A3  0141               	movlb	1	; select bank1
 14630  14A4  0852               	movf	_currentMenu^(0+128),w
 14631  14A5  0086               	movwf	6
 14632  14A6  0853               	movf	(_currentMenu+1)^(0+128),w
 14633  14A7  0087               	movwf	7
 14634  14A8  3147               	addfsr 1,7
 14635  14A9  0801               	movf	1,w
 14636  14AA  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14637  14AB  01C1               	clrf	(??_CONTROL_BEAT^(0+128)+1)
 14638                           
 14639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14640                           ; Switch size 1, requested type "simple"
 14641                           ; Number of cases is 1, Range of values is 0 to 0
 14642                           ; switch strategies available:
 14643                           ; Name         Instructions Cycles
 14644                           ; simple_byte            4     3 (average)
 14645                           ; direct_byte            8     6 (fixed)
 14646                           ; jumptable            260     6 (fixed)
 14647                           ;	Chosen strategy is simple_byte
 14648  14AC  0841               	movf	(??_CONTROL_BEAT+1)^(0+128),w
 14649  14AD  3A00               	xorlw	0	; case 0
 14650  14AE  1903               	skipnz
 14651  14AF  2CB1               	goto	l10138
 14652  14B0  2CBF               	goto	l9674
 14653  14B1                     l10138:	
 14654                           
 14655                           ; Switch size 1, requested type "simple"
 14656                           ; Number of cases is 4, Range of values is 9 to 12
 14657                           ; switch strategies available:
 14658                           ; Name         Instructions Cycles
 14659                           ; simple_byte           13     7 (average)
 14660                           ; direct_byte           17     9 (fixed)
 14661                           ; jumptable            263     9 (fixed)
 14662                           ;	Chosen strategy is simple_byte
 14663  14B1  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14664  14B2  3A09               	xorlw	9	; case 9
 14665  14B3  1903               	skipnz
 14666  14B4  2C7E               	goto	l9654
 14667  14B5  3A03               	xorlw	3	; case 10
 14668  14B6  1903               	skipnz
 14669  14B7  2C89               	goto	l9658
 14670  14B8  3A01               	xorlw	1	; case 11
 14671  14B9  1903               	skipnz
 14672  14BA  2C94               	goto	l9662
 14673  14BB  3A07               	xorlw	7	; case 12
 14674  14BC  1903               	skipnz
 14675  14BD  2C98               	goto	l9666
 14676  14BE  2CBF               	goto	l9674
 14677  14BF                     l9674:	
 14678                           
 14679                           ;controller.c: 516:     TM1650_fastPrintNum_2digit(beatBrightness);
 14680  14BF  0141               	movlb	1	; select bank1
 14681  14C0  086E               	movf	_beatBrightness^(0+128),w
 14682  14C1  3195  25B5  3194   	fcall	_TM1650_fastPrintNum_2digit
 14683                           
 14684                           ;controller.c: 518:     if (upState) {
 14685  14C4  0141               	movlb	1	; select bank1
 14686  14C5  085C               	movf	_upState^(0+128),w
 14687  14C6  1903               	btfsc	3,2
 14688  14C7  2CD6               	goto	l9684
 14689                           
 14690                           ;controller.c: 519:         if(beatBrightness < 9){
 14691  14C8  3009               	movlw	9
 14692  14C9  026E               	subwf	_beatBrightness^(0+128),w
 14693  14CA  1803               	skipnc
 14694  14CB  2CD1               	goto	l9682
 14695                           
 14696                           ;controller.c: 520:             beatBrightness++;
 14697  14CC  3001               	movlw	1
 14698  14CD  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14699  14CE  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14700  14CF  07EE               	addwf	_beatBrightness^(0+128),f
 14701                           
 14702                           ;controller.c: 521:         } else {
 14703  14D0  0008               	return
 14704  14D1                     l9682:	
 14705                           
 14706                           ;controller.c: 522:             beatBrightness = 9;
 14707  14D1  3009               	movlw	9
 14708  14D2  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14709  14D3  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14710  14D4  00EE               	movwf	_beatBrightness^(0+128)
 14711  14D5  0008               	return
 14712  14D6                     l9684:	
 14713  14D6  085B               	movf	_downState^(0+128),w
 14714  14D7  1903               	btfsc	3,2
 14715  14D8  0008               	return
 14716                           
 14717                           ;controller.c: 525:         if(beatBrightness > 0){
 14718  14D9  086E               	movf	_beatBrightness^(0+128),w
 14719  14DA  1903               	btfsc	3,2
 14720  14DB  2CDF               	goto	l9690
 14721                           
 14722                           ;controller.c: 526:             beatBrightness--;
 14723  14DC  3001               	movlw	1
 14724  14DD  02EE               	subwf	_beatBrightness^(0+128),f
 14725                           
 14726                           ;controller.c: 527:         } else {
 14727  14DE  0008               	return
 14728  14DF                     l9690:	
 14729                           
 14730                           ;controller.c: 528:             beatBrightness = 0;
 14731  14DF  01EE               	clrf	_beatBrightness^(0+128)
 14732  14E0  0008               	return
 14733  14E1                     __end_of_CONTROL_BEAT:	
 14734                           
 14735                           	psect	text30
 14736  1D0E                     __ptext30:	
 14737 ;; *************** function _LED_task_ANIMATION *****************
 14738 ;; Defined at:
 14739 ;;		line 208 in file "led.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;		None
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;		None
 14744 ;; Return value:  Size  Location     Type
 14745 ;;                  1    wreg      void 
 14746 ;; Registers used:
 14747 ;;		None
 14748 ;; Tracked objects:
 14749 ;;		On entry : 0/0
 14750 ;;		On exit  : 0/0
 14751 ;;		Unchanged: 0/0
 14752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14757 ;;Total ram usage:        0 bytes
 14758 ;; Hardware stack levels used:    1
 14759 ;; Hardware stack levels required when called:    4
 14760 ;; This function calls:
 14761 ;;		Nothing
 14762 ;; This function is called by:
 14763 ;;		_CONTROLLER_init
 14764 ;;		_LED_task
 14765 ;;		_CONTROLLER_task
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769                           
 14770                           ;psect for function _LED_task_ANIMATION
 14771  1D0E                     _LED_task_ANIMATION:	
 14772                           
 14773                           ;incstack = 0
 14774                           ; Regs used in _LED_task_ANIMATION: []
 14775  1D0E  0008               	return
 14776  1D0F                     __end_of_LED_task_ANIMATION:	
 14777                           
 14778                           	psect	text31
 14779  08FD                     __ptext31:	
 14780 ;; *************** function _CONTROL_DMX *****************
 14781 ;; Defined at:
 14782 ;;		line 458 in file "controller.c"
 14783 ;; Parameters:    Size  Location     Type
 14784 ;;		None
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;		None
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  1    wreg      void 
 14789 ;; Registers used:
 14790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14791 ;; Tracked objects:
 14792 ;;		On entry : 0/0
 14793 ;;		On exit  : 0/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14798 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14800 ;;Total ram usage:        2 bytes
 14801 ;; Hardware stack levels used:    1
 14802 ;; Hardware stack levels required when called:   17
 14803 ;; This function calls:
 14804 ;;		_BUTTONS_isHeld
 14805 ;;		_CLOCK_getTime
 14806 ;;		_DMX_getAddress
 14807 ;;		_TM1650_fastPrintNum_3digit
 14808 ;;		_address_dec
 14809 ;;		_address_inc
 14810 ;;		_printf
 14811 ;; This function is called by:
 14812 ;;		_CONTROLLER_init
 14813 ;;		_CONTROLLER_task
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           
 14818                           ;psect for function _CONTROL_DMX
 14819  08FD                     _CONTROL_DMX:	
 14820                           
 14821                           ;controller.c: 460:     printf("d\r");
 14822                           
 14823                           ;incstack = 0
 14824 ;; hardware stack exceeded
 14825                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14826  08FD  308E               	movlw	low (STR_9| (0+32768))
 14827  08FE  0141               	movlb	1	; select bank1
 14828  08FF  00A0               	movwf	printf@fmt^(0+128)
 14829  0900  30A0               	movlw	high (STR_9| (0+32768))
 14830  0901  00A1               	movwf	(printf@fmt^(0+128)+1)
 14831  0902  319E  26DB  3188   	fcall	_printf
 14832                           
 14833                           ;controller.c: 461:     TM1650_fastPrintNum_3digit(DMX_getAddress());
 14834  0905  319D  2516  3188   	fcall	_DMX_getAddress
 14835  0908  0141               	movlb	1	; select bank1
 14836  0909  00AA               	movwf	??_CONTROL_DMX^(0+128)
 14837  090A  01AB               	clrf	(??_CONTROL_DMX^(0+128)+1)
 14838  090B  082A               	movf	??_CONTROL_DMX^(0+128),w
 14839  090C  0140               	movlb	0	; select bank0
 14840  090D  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14841  090E  0141               	movlb	1	; select bank1
 14842  090F  082B               	movf	(??_CONTROL_DMX+1)^(0+128),w
 14843  0910  0140               	movlb	0	; select bank0
 14844  0911  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14845  0912  3196  26BF  3188   	fcall	_TM1650_fastPrintNum_3digit
 14846                           
 14847                           ;controller.c: 463:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 14848  0915  0141               	movlb	1	; select bank1
 14849  0916  085F               	movf	_up^(0+128),w
 14850  0917  319E  262A  3188   	fcall	_BUTTONS_isHeld
 14851  091A  3A00               	xorlw	0
 14852  091B  1903               	skipnz
 14853  091C  296C               	goto	l9616
 14854  091D  319D  2560  3188   	fcall	_CLOCK_getTime
 14855  0920  0141               	movlb	1	; select bank1
 14856  0921  0850               	movf	_lastIncTime^(0+128),w
 14857  0922  0140               	movlb	0	; select bank0
 14858  0923  0220               	subwf	?_CLOCK_getTime,w
 14859  0924  0141               	movlb	1	; select bank1
 14860  0925  00AA               	movwf	??_CONTROL_DMX^(0+128)
 14861  0926  0851               	movf	(_lastIncTime+1)^(0+128),w
 14862  0927  0140               	movlb	0	; select bank0
 14863  0928  3B21               	subwfb	?_CLOCK_getTime+1,w
 14864  0929  0141               	movlb	1	; select bank1
 14865  092A  00AB               	movwf	(??_CONTROL_DMX+1)^(0+128)
 14866  092B  082B               	movf	(??_CONTROL_DMX+1)^(0+128),w
 14867  092C  0268               	subwf	(_incInterval+1)^(0+128),w
 14868  092D  1D03               	skipz
 14869  092E  2931               	goto	u9845
 14870  092F  082A               	movf	??_CONTROL_DMX^(0+128),w
 14871  0930  0267               	subwf	_incInterval^(0+128),w
 14872  0931                     u9845:	
 14873  0931  1803               	skipnc
 14874  0932  296C               	goto	l9616
 14875                           
 14876                           ;controller.c: 464:         address_inc();
 14877  0933  319E  2648  3188   	fcall	_address_inc
 14878  0936  2950               	goto	L5
 14879  0937                     l9618:	
 14880                           ;controller.c: 466:         if(incInterval > 20){
 14881                           
 14882                           ;controller.c: 465:         lastIncTime = CLOCK_getTime();
 14883                           
 14884  0937  319D  2560  3188   	fcall	_CLOCK_getTime
 14885  093A  0141               	movlb	1	; select bank1
 14886  093B  0850               	movf	_lastIncTime^(0+128),w
 14887  093C  0140               	movlb	0	; select bank0
 14888  093D  0220               	subwf	?_CLOCK_getTime,w
 14889  093E  0141               	movlb	1	; select bank1
 14890  093F  00AA               	movwf	??_CONTROL_DMX^(0+128)
 14891  0940  0851               	movf	(_lastIncTime+1)^(0+128),w
 14892  0941  0140               	movlb	0	; select bank0
 14893  0942  3B21               	subwfb	?_CLOCK_getTime+1,w
 14894  0943  0141               	movlb	1	; select bank1
 14895  0944  00AB               	movwf	(??_CONTROL_DMX+1)^(0+128)
 14896  0945  082B               	movf	(??_CONTROL_DMX+1)^(0+128),w
 14897  0946  0268               	subwf	(_incInterval+1)^(0+128),w
 14898  0947  1D03               	skipz
 14899  0948  294B               	goto	u9875
 14900  0949  082A               	movf	??_CONTROL_DMX^(0+128),w
 14901  094A  0267               	subwf	_incInterval^(0+128),w
 14902  094B                     u9875:	
 14903  094B  1803               	skipnc
 14904  094C  2974               	goto	l9628
 14905                           
 14906                           ;controller.c: 470:         address_dec();
 14907  094D  319E  2639  3188   	fcall	_address_dec
 14908  0950                     L5:	
 14909                           
 14910                           ;controller.c: 471:         lastIncTime = CLOCK_getTime();
 14911  0950  319D  2560  3188   	fcall	_CLOCK_getTime
 14912  0953  0140               	movlb	0	; select bank0
 14913  0954  0821               	movf	?_CLOCK_getTime+1,w
 14914  0955  0141               	movlb	1	; select bank1
 14915  0956  00D1               	movwf	(_lastIncTime+1)^(0+128)
 14916  0957  0140               	movlb	0	; select bank0
 14917  0958  0820               	movf	?_CLOCK_getTime,w
 14918  0959  0141               	movlb	1	; select bank1
 14919  095A  00D0               	movwf	_lastIncTime^(0+128)
 14920                           
 14921                           ;controller.c: 472:         if(incInterval > 20){
 14922  095B  0868               	movf	(_incInterval+1)^(0+128),w
 14923  095C  3A80               	xorlw	128
 14924  095D  00AA               	movwf	??_CONTROL_DMX^(0+128)
 14925  095E  3080               	movlw	128
 14926  095F  022A               	subwf	??_CONTROL_DMX^(0+128),w
 14927  0960  1D03               	skipz
 14928  0961  2964               	goto	u9885
 14929  0962  3015               	movlw	21
 14930  0963  0267               	subwf	_incInterval^(0+128),w
 14931  0964                     u9885:	
 14932  0964  1C03               	skipc
 14933  0965  0008               	return
 14934                           
 14935                           ;controller.c: 467:             incInterval-=1;
 14936  0966  30FF               	movlw	255
 14937  0967  0141               	movlb	1	; select bank1
 14938  0968  07E7               	addwf	_incInterval^(0+128),f
 14939  0969  30FF               	movlw	255
 14940  096A  3DE8               	addwfc	(_incInterval+1)^(0+128),f
 14941  096B  0008               	return
 14942  096C                     l9616:	
 14943  096C  0141               	movlb	1	; select bank1
 14944  096D  085E               	movf	_down^(0+128),w
 14945  096E  319E  262A  3188   	fcall	_BUTTONS_isHeld
 14946  0971  3A00               	xorlw	0
 14947  0972  1D03               	btfss	3,2
 14948  0973  2937               	goto	l9618
 14949  0974                     l9628:	
 14950  0974  0141               	movlb	1	; select bank1
 14951  0975  085D               	movf	_enter^(0+128),w
 14952  0976  319E  262A  3188   	fcall	_BUTTONS_isHeld
 14953  0979  3A00               	xorlw	0
 14954  097A  1903               	skipnz
 14955  097B  2982               	goto	l9632
 14956                           
 14957                           ;controller.c: 476:         address = 1;
 14958  097C  3001               	movlw	1
 14959  097D  0141               	movlb	1	; select bank1
 14960  097E  00E9               	movwf	_address^(0+128)
 14961  097F  3000               	movlw	0
 14962  0980  00EA               	movwf	(_address^(0+128)+1)
 14963                           
 14964                           ;controller.c: 477:     } else if (upState) {
 14965  0981  0008               	return
 14966  0982                     l9632:	
 14967  0982  0141               	movlb	1	; select bank1
 14968  0983  085C               	movf	_upState^(0+128),w
 14969  0984  1903               	btfsc	3,2
 14970  0985  2994               	goto	l9638
 14971                           
 14972                           ;controller.c: 478:         address_inc();
 14973  0986  319E  2648  3188   	fcall	_address_inc
 14974                           
 14975                           ;controller.c: 479:         lastActiveTime = CLOCK_getTime();
 14976  0989  319D  2560         	fcall	_CLOCK_getTime
 14977  098B  0140               	movlb	0	; select bank0
 14978  098C  0821               	movf	?_CLOCK_getTime+1,w
 14979  098D  0142               	movlb	2	; select bank2
 14980  098E  00B5               	movwf	(_lastActiveTime+1)^(0+256)
 14981  098F  0140               	movlb	0	; select bank0
 14982  0990  0820               	movf	?_CLOCK_getTime,w
 14983  0991  0142               	movlb	2	; select bank2
 14984  0992  00B4               	movwf	_lastActiveTime^(0+256)
 14985                           
 14986                           ;controller.c: 480:     } else if (downState) {
 14987  0993  0008               	return
 14988  0994                     l9638:	
 14989  0994  085B               	movf	_downState^(0+128),w
 14990  0995  1903               	btfsc	3,2
 14991  0996  299A               	goto	l9642
 14992                           
 14993                           ;controller.c: 481:         address_dec();
 14994  0997  319E  2639         	fcall	_address_dec
 14995                           
 14996                           ;controller.c: 482:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 14997  0999  0008               	return
 14998  099A                     l9642:	
 14999  099A  085C               	movf	_upState^(0+128),w
 15000  099B  1D03               	btfss	3,2
 15001  099C  085B               	movf	_downState^(0+128),w
 15002  099D  1D03               	btfss	3,2
 15003  099E  0008               	return
 15004  099F  085E               	movf	_down^(0+128),w
 15005  09A0  319E  262A  3188   	fcall	_BUTTONS_isHeld
 15006  09A3  3A00               	xorlw	0
 15007  09A4  1D03               	skipz
 15008  09A5  0008               	return
 15009  09A6  0141               	movlb	1	; select bank1
 15010  09A7  085F               	movf	_up^(0+128),w
 15011  09A8  319E  262A  3188   	fcall	_BUTTONS_isHeld
 15012  09AB  3A00               	xorlw	0
 15013  09AC  1D03               	skipz
 15014  09AD  0008               	return
 15015                           
 15016                           ;controller.c: 483:         incInterval = 100;
 15017  09AE  3064               	movlw	100
 15018  09AF  0141               	movlb	1	; select bank1
 15019  09B0  00E7               	movwf	_incInterval^(0+128)
 15020  09B1  3000               	movlw	0
 15021  09B2  00E8               	movwf	(_incInterval^(0+128)+1)
 15022                           
 15023                           ;controller.c: 484:     } else {
 15024  09B3  0008               	return
 15025  09B4                     __end_of_CONTROL_DMX:	
 15026                           
 15027                           	psect	text32
 15028  1DDE                     __ptext32:	
 15029 ;; *************** function _LED_task_MANUAL *****************
 15030 ;; Defined at:
 15031 ;;		line 95 in file "led.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;		None
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;		None
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		wreg, status,2, status,0, pclath, cstack
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15049 ;;Total ram usage:        0 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:    7
 15052 ;; This function calls:
 15053 ;;		_LED_setColor
 15054 ;; This function is called by:
 15055 ;;		_CONTROLLER_init
 15056 ;;		_LED_task
 15057 ;;		_CONTROLLER_task
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           
 15062                           ;psect for function _LED_task_MANUAL
 15063  1DDE                     _LED_task_MANUAL:	
 15064                           
 15065                           ;led.c: 97:     LED_setColor(manualColor);
 15066                           
 15067                           ;incstack = 0
 15068                           ; Regs used in _LED_task_MANUAL: [wreg+status,2+status,0+pclath+cstack]
 15069  1DDE  0141               	movlb	1	; select bank1
 15070  1DDF  084D               	movf	(_manualColor+3)^(0+128),w
 15071  1DE0  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 15072  1DE1  084C               	movf	(_manualColor+2)^(0+128),w
 15073  1DE2  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 15074  1DE3  084B               	movf	(_manualColor+1)^(0+128),w
 15075  1DE4  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 15076  1DE5  084A               	movf	_manualColor^(0+128),w
 15077  1DE6  00B6               	movwf	LED_setColor@input^(0+128)
 15078  1DE7  3186  2618         	fcall	_LED_setColor
 15079  1DE9  0008               	return
 15080  1DEA                     __end_of_LED_task_MANUAL:	
 15081                           
 15082                           	psect	text33
 15083  1E48                     __ptext33:	
 15084 ;; *************** function _address_inc *****************
 15085 ;; Defined at:
 15086 ;;		line 29 in file "dmx.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;		None
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;		None
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  1    wreg      void 
 15093 ;; Registers used:
 15094 ;;		wreg, status,2, status,0
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15104 ;;Total ram usage:        0 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:    4
 15107 ;; This function calls:
 15108 ;;		Nothing
 15109 ;; This function is called by:
 15110 ;;		_CONTROL_DMX
 15111 ;; This function uses a non-reentrant model
 15112 ;;
 15113                           
 15114                           
 15115                           ;psect for function _address_inc
 15116  1E48                     _address_inc:	
 15117                           
 15118                           ;dmx.c: 31:     if(address == 512)
 15119                           
 15120                           ;incstack = 0
 15121                           ; Regs used in _address_inc: [wreg+status,2+status,0]
 15122  1E48  3002               	movlw	2
 15123  1E49  0141               	movlb	1	; select bank1
 15124  1E4A  066A               	xorwf	(_address+1)^(0+128),w
 15125  1E4B  0469               	iorwf	_address^(0+128),w
 15126  1E4C  1D03               	btfss	3,2
 15127  1E4D  2E53               	goto	l7896
 15128                           
 15129                           ;dmx.c: 32:         address = 1;
 15130  1E4E  3001               	movlw	1
 15131  1E4F  00E9               	movwf	_address^(0+128)
 15132  1E50  3000               	movlw	0
 15133  1E51  00EA               	movwf	(_address^(0+128)+1)
 15134  1E52  0008               	return
 15135  1E53                     l7896:	
 15136                           
 15137                           ;dmx.c: 34:         address++;
 15138  1E53  3001               	movlw	1
 15139  1E54  07E9               	addwf	_address^(0+128),f
 15140  1E55  3000               	movlw	0
 15141  1E56  3DEA               	addwfc	(_address+1)^(0+128),f
 15142  1E57  0008               	return
 15143  1E58                     __end_of_address_inc:	
 15144                           
 15145                           	psect	text34
 15146  1E39                     __ptext34:	
 15147 ;; *************** function _address_dec *****************
 15148 ;; Defined at:
 15149 ;;		line 43 in file "dmx.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;		None
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;		None
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  1    wreg      void 
 15156 ;; Registers used:
 15157 ;;		wreg, status,2, status,0
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/0
 15160 ;;		On exit  : 0/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15167 ;;Total ram usage:        0 bytes
 15168 ;; Hardware stack levels used:    1
 15169 ;; Hardware stack levels required when called:    4
 15170 ;; This function calls:
 15171 ;;		Nothing
 15172 ;; This function is called by:
 15173 ;;		_CONTROL_DMX
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           
 15178                           ;psect for function _address_dec
 15179  1E39                     _address_dec:	
 15180                           
 15181                           ;dmx.c: 45:     if(address == 1)
 15182                           
 15183                           ;incstack = 0
 15184                           ; Regs used in _address_dec: [wreg+status,2+status,0]
 15185  1E39  0141               	movlb	1	; select bank1
 15186  1E3A  0369               	decf	_address^(0+128),w
 15187  1E3B  046A               	iorwf	(_address+1)^(0+128),w
 15188  1E3C  1D03               	btfss	3,2
 15189  1E3D  2E43               	goto	l7902
 15190                           
 15191                           ;dmx.c: 46:         address = 512;
 15192  1E3E  3000               	movlw	0
 15193  1E3F  00E9               	movwf	_address^(0+128)
 15194  1E40  3002               	movlw	2
 15195  1E41  00EA               	movwf	(_address^(0+128)+1)
 15196  1E42  0008               	return
 15197  1E43                     l7902:	
 15198                           
 15199                           ;dmx.c: 48:         address--;
 15200  1E43  3001               	movlw	1
 15201  1E44  02E9               	subwf	_address^(0+128),f
 15202  1E45  3000               	movlw	0
 15203  1E46  3BEA               	subwfb	(_address+1)^(0+128),f
 15204  1E47  0008               	return
 15205  1E48                     __end_of_address_dec:	
 15206                           
 15207                           	psect	text35
 15208  16BF                     __ptext35:	
 15209 ;; *************** function _TM1650_fastPrintNum_3digit *****************
 15210 ;; Defined at:
 15211 ;;		line 120 in file "tm1650.c"
 15212 ;; Parameters:    Size  Location     Type
 15213 ;;  num             2   22[BANK0 ] unsigned short 
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;		None
 15216 ;; Return value:  Size  Location     Type
 15217 ;;                  1    wreg      void 
 15218 ;; Registers used:
 15219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15225 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15228 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15229 ;;Total ram usage:        3 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; Hardware stack levels required when called:    8
 15232 ;; This function calls:
 15233 ;;		___lwdiv
 15234 ;;		___lwmod
 15235 ;;		_writeData
 15236 ;; This function is called by:
 15237 ;;		_CONTROL_DMX
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           
 15242                           ;psect for function _TM1650_fastPrintNum_3digit
 15243  16BF                     _TM1650_fastPrintNum_3digit:	
 15244                           
 15245                           ;tm1650.c: 122:     if(num > 999){
 15246                           
 15247                           ;incstack = 0
 15248                           ; Regs used in _TM1650_fastPrintNum_3digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15249  16BF  3003               	movlw	3
 15250  16C0  0140               	movlb	0	; select bank0
 15251  16C1  0237               	subwf	TM1650_fastPrintNum_3digit@num+1,w
 15252  16C2  30E8               	movlw	232
 15253  16C3  1903               	skipnz
 15254  16C4  0236               	subwf	TM1650_fastPrintNum_3digit@num,w
 15255  16C5  1C03               	skipc
 15256  16C6  2EEA               	goto	l7890
 15257                           
 15258                           ;tm1650.c: 123:         writeData(0x34, 0x79);
 15259  16C7  3079               	movlw	121
 15260  16C8  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15261  16C9  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15262  16CA  00B0               	movwf	writeData@data
 15263  16CB  3034               	movlw	52
 15264  16CC  319F  276B  3196   	fcall	_writeData
 15265                           
 15266                           ;tm1650.c: 124:         writeData(0x35, 0x79);
 15267  16CF  3079               	movlw	121
 15268  16D0  0140               	movlb	0	; select bank0
 15269  16D1  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15270  16D2  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15271  16D3  00B0               	movwf	writeData@data
 15272  16D4  3035               	movlw	53
 15273  16D5  319F  276B  3196   	fcall	_writeData
 15274                           
 15275                           ;tm1650.c: 125:         writeData(0x36, 0x79);
 15276  16D8  3079               	movlw	121
 15277  16D9  0140               	movlb	0	; select bank0
 15278  16DA  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15279  16DB  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15280  16DC  00B0               	movwf	writeData@data
 15281  16DD  3036               	movlw	54
 15282  16DE  319F  276B  3196   	fcall	_writeData
 15283                           
 15284                           ;tm1650.c: 126:         writeData(0x37, 0x79);
 15285  16E1  3079               	movlw	121
 15286  16E2  0140               	movlb	0	; select bank0
 15287  16E3  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15288  16E4  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15289  16E5  00B0               	movwf	writeData@data
 15290  16E6  3037               	movlw	55
 15291  16E7  319F  276B         	fcall	_writeData
 15292  16E9  0008               	return
 15293  16EA                     l7890:	
 15294                           
 15295                           ;tm1650.c: 130:     writeData(0x37, charTable[(num % 10) + 16]);
 15296  16EA  300A               	movlw	10
 15297  16EB  00A8               	movwf	___lwmod@divisor
 15298  16EC  3000               	movlw	0
 15299  16ED  00A9               	movwf	___lwmod@divisor+1
 15300  16EE  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 15301  16EF  00AB               	movwf	___lwmod@dividend+1
 15302  16F0  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 15303  16F1  00AA               	movwf	___lwmod@dividend
 15304  16F2  3191  2138  3196   	fcall	___lwmod
 15305  16F5  0140               	movlb	0	; select bank0
 15306  16F6  0829               	movf	?___lwmod+1,w
 15307  16F7  0085               	movwf	5
 15308  16F8  0828               	movf	?___lwmod,w
 15309  16F9  0084               	movwf	4
 15310  16FA  3010               	movlw	low ((_charTable+16)| (0+32768))
 15311  16FB  0784               	addwf	4,f
 15312  16FC  3098               	movlw	high ((_charTable+16)| (0+32768))
 15313  16FD  3D85               	addwfc	5,f
 15314  16FE  0800               	movf	0,w	;code access
 15315  16FF  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15316  1700  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15317  1701  00B0               	movwf	writeData@data
 15318  1702  3037               	movlw	55
 15319  1703  319F  276B  3196   	fcall	_writeData
 15320                           
 15321                           ;tm1650.c: 131:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 15322  1706  300A               	movlw	10
 15323  1707  0140               	movlb	0	; select bank0
 15324  1708  00A8               	movwf	___lwmod@divisor
 15325  1709  3000               	movlw	0
 15326  170A  00A9               	movwf	___lwmod@divisor+1
 15327  170B  300A               	movlw	10
 15328  170C  00A0               	movwf	___lwdiv@divisor
 15329  170D  3000               	movlw	0
 15330  170E  00A1               	movwf	___lwdiv@divisor+1
 15331  170F  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 15332  1710  00A3               	movwf	___lwdiv@dividend+1
 15333  1711  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 15334  1712  00A2               	movwf	___lwdiv@dividend
 15335  1713  3192  225C  3196   	fcall	___lwdiv
 15336  1716  0140               	movlb	0	; select bank0
 15337  1717  0821               	movf	?___lwdiv+1,w
 15338  1718  00AB               	movwf	___lwmod@dividend+1
 15339  1719  0820               	movf	?___lwdiv,w
 15340  171A  00AA               	movwf	___lwmod@dividend
 15341  171B  3191  2138  3196   	fcall	___lwmod
 15342  171E  0140               	movlb	0	; select bank0
 15343  171F  0829               	movf	?___lwmod+1,w
 15344  1720  0085               	movwf	5
 15345  1721  0828               	movf	?___lwmod,w
 15346  1722  0084               	movwf	4
 15347  1723  3010               	movlw	low ((_charTable+16)| (0+32768))
 15348  1724  0784               	addwf	4,f
 15349  1725  3098               	movlw	high ((_charTable+16)| (0+32768))
 15350  1726  3D85               	addwfc	5,f
 15351  1727  0800               	movf	0,w	;code access
 15352  1728  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15353  1729  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15354  172A  00B0               	movwf	writeData@data
 15355  172B  3036               	movlw	54
 15356  172C  319F  276B  3196   	fcall	_writeData
 15357                           
 15358                           ;tm1650.c: 132:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 15359  172F  300A               	movlw	10
 15360  1730  0140               	movlb	0	; select bank0
 15361  1731  00A8               	movwf	___lwmod@divisor
 15362  1732  3000               	movlw	0
 15363  1733  00A9               	movwf	___lwmod@divisor+1
 15364  1734  3064               	movlw	100
 15365  1735  00A0               	movwf	___lwdiv@divisor
 15366  1736  3000               	movlw	0
 15367  1737  00A1               	movwf	___lwdiv@divisor+1
 15368  1738  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 15369  1739  00A3               	movwf	___lwdiv@dividend+1
 15370  173A  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 15371  173B  00A2               	movwf	___lwdiv@dividend
 15372  173C  3192  225C  3196   	fcall	___lwdiv
 15373  173F  0140               	movlb	0	; select bank0
 15374  1740  0821               	movf	?___lwdiv+1,w
 15375  1741  00AB               	movwf	___lwmod@dividend+1
 15376  1742  0820               	movf	?___lwdiv,w
 15377  1743  00AA               	movwf	___lwmod@dividend
 15378  1744  3191  2138  3196   	fcall	___lwmod
 15379  1747  0140               	movlb	0	; select bank0
 15380  1748  0829               	movf	?___lwmod+1,w
 15381  1749  0085               	movwf	5
 15382  174A  0828               	movf	?___lwmod,w
 15383  174B  0084               	movwf	4
 15384  174C  3010               	movlw	low ((_charTable+16)| (0+32768))
 15385  174D  0784               	addwf	4,f
 15386  174E  3098               	movlw	high ((_charTable+16)| (0+32768))
 15387  174F  3D85               	addwfc	5,f
 15388  1750  0800               	movf	0,w	;code access
 15389  1751  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15390  1752  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15391  1753  00B0               	movwf	writeData@data
 15392  1754  3035               	movlw	53
 15393  1755  319F  276B         	fcall	_writeData
 15394  1757  0008               	return
 15395  1758                     __end_of_TM1650_fastPrintNum_3digit:	
 15396                           
 15397                           	psect	text36
 15398  1138                     __ptext36:	
 15399 ;; *************** function ___lwmod *****************
 15400 ;; Defined at:
 15401 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;  divisor         2    8[BANK0 ] unsigned int 
 15404 ;;  dividend        2   10[BANK0 ] unsigned int 
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;  counter         1   13[BANK0 ] unsigned char 
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  2    8[BANK0 ] unsigned int 
 15409 ;; Registers used:
 15410 ;;		wreg, status,2, status,0
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15416 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15417 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15419 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;Total ram usage:        6 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; Hardware stack levels required when called:    4
 15423 ;; This function calls:
 15424 ;;		Nothing
 15425 ;; This function is called by:
 15426 ;;		_TM1650_fastPrintNum
 15427 ;;		_TM1650_fastPrintNum_3digit
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           
 15432                           ;psect for function ___lwmod
 15433  1138                     ___lwmod:	
 15434                           
 15435                           ;incstack = 0
 15436                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15437  1138  0140               	movlb	0	; select bank0
 15438  1139  0828               	movf	___lwmod@divisor,w
 15439  113A  0429               	iorwf	___lwmod@divisor+1,w
 15440  113B  1903               	btfsc	3,2
 15441  113C  2960               	goto	l7848
 15442  113D  01AD               	clrf	___lwmod@counter
 15443  113E  0AAD               	incf	___lwmod@counter,f
 15444  113F                     l7838:	
 15445  113F  1BA9               	btfsc	___lwmod@divisor+1,7
 15446  1140  294B               	goto	l7840
 15447  1141  3001               	movlw	1
 15448  1142                     u7705:	
 15449  1142  35A8               	lslf	___lwmod@divisor,f
 15450  1143  0DA9               	rlf	___lwmod@divisor+1,f
 15451  1144  0B89               	decfsz	9,f
 15452  1145  2942               	goto	u7705
 15453  1146  3001               	movlw	1
 15454  1147  00AC               	movwf	??___lwmod
 15455  1148  082C               	movf	??___lwmod,w
 15456  1149  07AD               	addwf	___lwmod@counter,f
 15457  114A  293F               	goto	l7838
 15458  114B                     l7840:	
 15459  114B  0829               	movf	___lwmod@divisor+1,w
 15460  114C  022B               	subwf	___lwmod@dividend+1,w
 15461  114D  1D03               	skipz
 15462  114E  2951               	goto	u7725
 15463  114F  0828               	movf	___lwmod@divisor,w
 15464  1150  022A               	subwf	___lwmod@dividend,w
 15465  1151                     u7725:	
 15466  1151  1C03               	skipc
 15467  1152  2957               	goto	l7844
 15468  1153  0828               	movf	___lwmod@divisor,w
 15469  1154  02AA               	subwf	___lwmod@dividend,f
 15470  1155  0829               	movf	___lwmod@divisor+1,w
 15471  1156  3BAB               	subwfb	___lwmod@dividend+1,f
 15472  1157                     l7844:	
 15473  1157  3001               	movlw	1
 15474  1158                     u7735:	
 15475  1158  36A9               	lsrf	___lwmod@divisor+1,f
 15476  1159  0CA8               	rrf	___lwmod@divisor,f
 15477  115A  0B89               	decfsz	9,f
 15478  115B  2958               	goto	u7735
 15479  115C  3001               	movlw	1
 15480  115D  02AD               	subwf	___lwmod@counter,f
 15481  115E  1D03               	btfss	3,2
 15482  115F  294B               	goto	l7840
 15483  1160                     l7848:	
 15484  1160  082B               	movf	___lwmod@dividend+1,w
 15485  1161  00A9               	movwf	?___lwmod+1
 15486  1162  082A               	movf	___lwmod@dividend,w
 15487  1163  00A8               	movwf	?___lwmod
 15488  1164  0008               	return
 15489  1165                     __end_of___lwmod:	
 15490                           
 15491                           	psect	text37
 15492  1D16                     __ptext37:	
 15493 ;; *************** function _DMX_getAddress *****************
 15494 ;; Defined at:
 15495 ;;		line 73 in file "dmx.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;		None
 15498 ;; Auto vars:     Size  Location     Type
 15499 ;;		None
 15500 ;; Return value:  Size  Location     Type
 15501 ;;                  1    wreg      unsigned char 
 15502 ;; Registers used:
 15503 ;;		wreg
 15504 ;; Tracked objects:
 15505 ;;		On entry : 0/0
 15506 ;;		On exit  : 0/0
 15507 ;;		Unchanged: 0/0
 15508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15513 ;;Total ram usage:        0 bytes
 15514 ;; Hardware stack levels used:    1
 15515 ;; Hardware stack levels required when called:    4
 15516 ;; This function calls:
 15517 ;;		Nothing
 15518 ;; This function is called by:
 15519 ;;		_CONTROL_DMX
 15520 ;;		_LED_task_DMX
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           
 15525                           ;psect for function _DMX_getAddress
 15526  1D16                     _DMX_getAddress:	
 15527                           
 15528                           ;dmx.c: 74:     return address;
 15529                           
 15530                           ;incstack = 0
 15531                           ; Regs used in _DMX_getAddress: [wreg]
 15532  1D16  0141               	movlb	1	; select bank1
 15533  1D17  0869               	movf	_address^(0+128),w
 15534  1D18  0008               	return
 15535  1D19                     __end_of_DMX_getAddress:	
 15536                           
 15537                           	psect	text38
 15538  1E2A                     __ptext38:	
 15539 ;; *************** function _BUTTONS_isHeld *****************
 15540 ;; Defined at:
 15541 ;;		line 106 in file "buttons.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;  button          1    wreg     PTR struct .
 15544 ;;		 -> buttons(32), NULL(0), 
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;  button          1    0[BANK0 ] PTR struct .
 15547 ;;		 -> buttons(32), NULL(0), 
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  1    wreg      _Bool 
 15550 ;; Registers used:
 15551 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15561 ;;Total ram usage:        1 bytes
 15562 ;; Hardware stack levels used:    1
 15563 ;; Hardware stack levels required when called:    4
 15564 ;; This function calls:
 15565 ;;		Nothing
 15566 ;; This function is called by:
 15567 ;;		_CONTROL_DMX
 15568 ;;		_CONTROL_MANUAL
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           
 15573                           ;psect for function _BUTTONS_isHeld
 15574  1E2A                     _BUTTONS_isHeld:	
 15575                           
 15576                           ;incstack = 0
 15577                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 15578                           ;BUTTONS_isHeld@button stored from wreg
 15579  1E2A  0140               	movlb	0	; select bank0
 15580  1E2B  00A0               	movwf	BUTTONS_isHeld@button
 15581                           
 15582                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 15583  1E2C  0820               	movf	BUTTONS_isHeld@button,w
 15584  1E2D  3E07               	addlw	7
 15585  1E2E  0086               	movwf	6
 15586  1E2F  3003               	movlw	3	; select bank6/7
 15587  1E30  0087               	movwf	7
 15588  1E31  3003               	movlw	3
 15589  1E32  0601               	xorwf	1,w
 15590  1E33  1D03               	btfss	3,2
 15591  1E34  2E37               	goto	l7870
 15592                           
 15593                           ;buttons.c: 108:         return 1;
 15594  1E35  3001               	movlw	1
 15595  1E36  0008               	return
 15596  1E37                     l7870:	
 15597                           
 15598                           ;buttons.c: 111:     return 0;
 15599  1E37  3000               	movlw	0
 15600  1E38  0008               	return
 15601  1E39                     __end_of_BUTTONS_isHeld:	
 15602                           
 15603                           	psect	text39
 15604  1EDB                     __ptext39:	
 15605 ;; *************** function _printf *****************
 15606 ;; Defined at:
 15607 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 15608 ;; Parameters:    Size  Location     Type
 15609 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 15610 ;;		 -> STR_24(6), STR_23(7), STR_22(8), STR_21(9), 
 15611 ;;		 -> STR_20(10), STR_19(9), STR_18(8), STR_17(7), 
 15612 ;;		 -> STR_15(2), STR_14(5), STR_13(4), STR_12(4), 
 15613 ;;		 -> STR_11(4), STR_10(4), STR_9(3), STR_8(6), 
 15614 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 15615 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 15616 ;; Auto vars:     Size  Location     Type
 15617 ;;  ret             2    0        int 
 15618 ;;  ap              1   78[BANK0 ] PTR void [1]
 15619 ;;		 -> ?_printf(2), 
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  2    0[BANK1 ] int 
 15622 ;; Registers used:
 15623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15629 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15630 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15632 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15633 ;;Total ram usage:       14 bytes
 15634 ;; Hardware stack levels used:    1
 15635 ;; Hardware stack levels required when called:   16
 15636 ;; This function calls:
 15637 ;;		_vfprintf
 15638 ;; This function is called by:
 15639 ;;		_CONTROLLER_task
 15640 ;;		_CONTROL_DMX
 15641 ;;		_CONTROL_BEAT
 15642 ;;		_TM1650_init
 15643 ;;		_TM1650_scrollPrint
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           
 15648                           ;psect for function _printf
 15649  1EDB                     _printf:	
 15650                           
 15651                           ;incstack = 0
 15652 ;; hardware stack exceeded
 15653                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15654  1EDB  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 15655  1EDC  0140               	movlb	0	; select bank0
 15656  1EDD  00EB               	movwf	??_printf
 15657  1EDE  086B               	movf	??_printf,w
 15658  1EDF  00EE               	movwf	printf@ap
 15659  1EE0  0141               	movlb	1	; select bank1
 15660  1EE1  0821               	movf	(printf@fmt+1)^(0+128),w
 15661  1EE2  0140               	movlb	0	; select bank0
 15662  1EE3  00E4               	movwf	vfprintf@fmt+1
 15663  1EE4  0141               	movlb	1	; select bank1
 15664  1EE5  0820               	movf	printf@fmt^(0+128),w
 15665  1EE6  0140               	movlb	0	; select bank0
 15666  1EE7  00E3               	movwf	vfprintf@fmt
 15667  1EE8  306E               	movlw	(low (printf@ap| 0))& (0+255)
 15668  1EE9  00EB               	movwf	??_printf
 15669  1EEA  086B               	movf	??_printf,w
 15670  1EEB  00E5               	movwf	vfprintf@ap
 15671  1EEC  3000               	movlw	0
 15672  1EED  3191  2165         	fcall	_vfprintf
 15673  1EEF  0008               	return
 15674  1EF0                     __end_of_printf:	
 15675                           
 15676                           	psect	text40
 15677  1165                     __ptext40:	
 15678 ;; *************** function _vfprintf *****************
 15679 ;; Defined at:
 15680 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  fp              1    wreg     PTR struct _IO_FILE
 15683 ;;		 -> NULL(0), 
 15684 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 15685 ;;		 -> STR_24(6), STR_23(7), STR_22(8), STR_21(9), 
 15686 ;;		 -> STR_20(10), STR_19(9), STR_18(8), STR_17(7), 
 15687 ;;		 -> STR_15(2), STR_14(5), STR_13(4), STR_12(4), 
 15688 ;;		 -> STR_11(4), STR_10(4), STR_9(3), STR_8(6), 
 15689 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 15690 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 15691 ;;  ap              1   69[BANK0 ] PTR PTR void 
 15692 ;;		 -> printf@ap(1), 
 15693 ;; Auto vars:     Size  Location     Type
 15694 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
 15695 ;;		 -> NULL(0), 
 15696 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
 15697 ;;		 -> STR_24(6), STR_23(7), STR_22(8), STR_21(9), 
 15698 ;;		 -> STR_20(10), STR_19(9), STR_18(8), STR_17(7), 
 15699 ;;		 -> STR_15(2), STR_14(5), STR_13(4), STR_12(4), 
 15700 ;;		 -> STR_11(4), STR_10(4), STR_9(3), STR_8(6), 
 15701 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 15702 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 15703 ;; Return value:  Size  Location     Type
 15704 ;;                  2   67[BANK0 ] int 
 15705 ;; Registers used:
 15706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15707 ;; Tracked objects:
 15708 ;;		On entry : 0/0
 15709 ;;		On exit  : 0/0
 15710 ;;		Unchanged: 0/0
 15711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15712 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15713 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15714 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15715 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15716 ;;Total ram usage:        8 bytes
 15717 ;; Hardware stack levels used:    1
 15718 ;; Hardware stack levels required when called:   15
 15719 ;; This function calls:
 15720 ;;		_vfpfcnvrt
 15721 ;; This function is called by:
 15722 ;;		_printf
 15723 ;; This function uses a non-reentrant model
 15724 ;;
 15725                           
 15726                           
 15727                           ;psect for function _vfprintf
 15728  1165                     _vfprintf:	
 15729                           
 15730                           ;incstack = 0
 15731 ;; hardware stack exceeded
 15732                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15733                           ;vfprintf@fp stored from wreg
 15734  1165  0140               	movlb	0	; select bank0
 15735  1166  00E8               	movwf	vfprintf@fp
 15736                           
 15737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 15738  1167  0864               	movf	vfprintf@fmt+1,w
 15739  1168  00EA               	movwf	vfprintf@cfmt+1
 15740  1169  0863               	movf	vfprintf@fmt,w
 15741  116A  00E9               	movwf	vfprintf@cfmt
 15742                           
 15743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 15744  116B  0142               	movlb	2	; select bank2
 15745  116C  01A0               	clrf	_nout^(0+256)
 15746  116D  01A1               	clrf	(_nout+1)^(0+256)
 15747  116E                     l7716:	
 15748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15749                           
 15750                           
 15751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15752  116E  0140               	movlb	0	; select bank0
 15753  116F  0869               	movf	vfprintf@cfmt,w
 15754  1170  0084               	movwf	4
 15755  1171  086A               	movf	vfprintf@cfmt+1,w
 15756  1172  0085               	movwf	5
 15757  1173  0012               	moviw fsr0++
 15758  1174  1903               	btfsc	3,2
 15759  1175  298B               	goto	l7718
 15760                           
 15761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 15762  1176  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 15763  1177  00E6               	movwf	??_vfprintf
 15764  1178  0866               	movf	??_vfprintf,w
 15765  1179  00DA               	movwf	vfpfcnvrt@fmt
 15766  117A  0865               	movf	vfprintf@ap,w
 15767  117B  00E7               	movwf	??_vfprintf+1
 15768  117C  0867               	movf	??_vfprintf+1,w
 15769  117D  00DB               	movwf	vfpfcnvrt@ap
 15770  117E  0868               	movf	vfprintf@fp,w
 15771  117F  3197  2758  3191   	fcall	_vfpfcnvrt
 15772  1182  0140               	movlb	0	; select bank0
 15773  1183  085A               	movf	?_vfpfcnvrt,w
 15774  1184  0142               	movlb	2	; select bank2
 15775  1185  07A0               	addwf	_nout^(0+256),f
 15776  1186  0140               	movlb	0	; select bank0
 15777  1187  085B               	movf	?_vfpfcnvrt+1,w
 15778  1188  0142               	movlb	2	; select bank2
 15779  1189  3DA1               	addwfc	(_nout+1)^(0+256),f
 15780  118A  296E               	goto	l7716
 15781  118B                     l7718:	
 15782                           
 15783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 15784  118B  0142               	movlb	2	; select bank2
 15785  118C  0821               	movf	(_nout+1)^(0+256),w
 15786  118D  0140               	movlb	0	; select bank0
 15787  118E  00E4               	movwf	?_vfprintf+1
 15788  118F  0142               	movlb	2	; select bank2
 15789  1190  0820               	movf	_nout^(0+256),w
 15790  1191  0140               	movlb	0	; select bank0
 15791  1192  00E3               	movwf	?_vfprintf
 15792  1193  0008               	return
 15793  1194                     __end_of_vfprintf:	
 15794                           
 15795                           	psect	text41
 15796  1758                     __ptext41:	
 15797 ;; *************** function _vfpfcnvrt *****************
 15798 ;; Defined at:
 15799 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  fp              1    wreg     PTR struct _IO_FILE
 15802 ;;		 -> NULL(0), 
 15803 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 15804 ;;		 -> vfprintf@cfmt(2), 
 15805 ;;  ap              1   59[BANK0 ] PTR PTR void 
 15806 ;;		 -> printf@ap(1), 
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 15809 ;;		 -> NULL(0), 
 15810 ;;  llu             8    0        unsigned long long 
 15811 ;;  ll              8    0        long long 
 15812 ;;  f               4    0        long long 
 15813 ;;  ct              3    0        unsigned char [3]
 15814 ;;  vp              2    0        PTR void 
 15815 ;;  i               2    0        int 
 15816 ;;  done            2    0        int 
 15817 ;;  cp              2    0        PTR unsigned char 
 15818 ;;  c               1   65[BANK0 ] unsigned char 
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  2   58[BANK0 ] int 
 15821 ;; Registers used:
 15822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15823 ;; Tracked objects:
 15824 ;;		On entry : 0/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15829 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15830 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15831 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15832 ;;Total ram usage:        9 bytes
 15833 ;; Hardware stack levels used:    1
 15834 ;; Hardware stack levels required when called:   14
 15835 ;; This function calls:
 15836 ;;		_ctoa
 15837 ;;		_fputc
 15838 ;; This function is called by:
 15839 ;;		_vfprintf
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           
 15844                           ;psect for function _vfpfcnvrt
 15845  1758                     _vfpfcnvrt:	
 15846                           
 15847                           ;incstack = 0
 15848 ;; hardware stack exceeded
 15849                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15850                           ;vfpfcnvrt@fp stored from wreg
 15851  1758  0140               	movlb	0	; select bank0
 15852  1759  00E2               	movwf	vfpfcnvrt@fp
 15853                           
 15854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 15855  175A  085A               	movf	vfpfcnvrt@fmt,w
 15856  175B  0086               	movwf	6
 15857  175C  0187               	clrf	7
 15858  175D  3F40               	moviw [0]fsr1
 15859  175E  00DC               	movwf	??_vfpfcnvrt
 15860  175F  3F41               	moviw [1]fsr1
 15861  1760  00DD               	movwf	??_vfpfcnvrt+1
 15862  1761  085C               	movf	??_vfpfcnvrt,w
 15863  1762  0084               	movwf	4
 15864  1763  085D               	movf	??_vfpfcnvrt+1,w
 15865  1764  0085               	movwf	5
 15866  1765  0012               	moviw fsr0++
 15867  1766  3A25               	xorlw	37
 15868  1767  1D03               	btfss	3,2
 15869  1768  2FDD               	goto	l7654
 15870                           
 15871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 15872  1769  085A               	movf	vfpfcnvrt@fmt,w
 15873  176A  0086               	movwf	6
 15874  176B  0187               	clrf	7
 15875  176C  3001               	movlw	1
 15876  176D  0781               	addwf	1,f
 15877  176E  3141               	addfsr 1,1
 15878  176F  1803               	skipnc
 15879  1770  0A81               	incf	1,f
 15880                           
 15881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 15882  1771  0142               	movlb	2	; select bank2
 15883  1772  01A2               	clrf	_width^(0+256)
 15884  1773  01A3               	clrf	(_width+1)^(0+256)
 15885  1774  01A6               	clrf	_flags^(0+256)
 15886  1775  01A7               	clrf	(_flags+1)^(0+256)
 15887                           
 15888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 15889  1776  30FF               	movlw	255
 15890  1777  00A4               	movwf	_prec^(0+256)
 15891  1778  30FF               	movlw	255
 15892  1779  00A5               	movwf	(_prec^(0+256)+1)
 15893                           
 15894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 15895  177A  0140               	movlb	0	; select bank0
 15896  177B  085A               	movf	vfpfcnvrt@fmt,w
 15897  177C  0086               	movwf	6
 15898  177D  0187               	clrf	7
 15899  177E  3F40               	moviw [0]fsr1
 15900  177F  00DC               	movwf	??_vfpfcnvrt
 15901  1780  3F41               	moviw [1]fsr1
 15902  1781  00DD               	movwf	??_vfpfcnvrt+1
 15903  1782  085C               	movf	??_vfpfcnvrt,w
 15904  1783  0084               	movwf	4
 15905  1784  085D               	movf	??_vfpfcnvrt+1,w
 15906  1785  0085               	movwf	5
 15907  1786  0012               	moviw fsr0++
 15908  1787  3A63               	xorlw	99
 15909  1788  1D03               	btfss	3,2
 15910  1789  2FAB               	goto	l7638
 15911                           
 15912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 15913  178A  085A               	movf	vfpfcnvrt@fmt,w
 15914  178B  0086               	movwf	6
 15915  178C  0187               	clrf	7
 15916  178D  3001               	movlw	1
 15917  178E  0781               	addwf	1,f
 15918  178F  3141               	addfsr 1,1
 15919  1790  1803               	skipnc
 15920  1791  0A81               	incf	1,f
 15921                           
 15922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15923  1792  085B               	movf	vfpfcnvrt@ap,w
 15924  1793  0086               	movwf	6
 15925  1794  0187               	clrf	7
 15926  1795  0801               	movf	1,w
 15927  1796  0084               	movwf	4
 15928  1797  0185               	clrf	5
 15929  1798  3002               	movlw	2
 15930  1799  0781               	addwf	1,f
 15931  179A  0800               	movf	0,w
 15932  179B  00DC               	movwf	??_vfpfcnvrt
 15933  179C  085C               	movf	??_vfpfcnvrt,w
 15934  179D  00E1               	movwf	vfpfcnvrt@c
 15935                           
 15936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 15937  179E  0861               	movf	vfpfcnvrt@c,w
 15938  179F  00DC               	movwf	??_vfpfcnvrt
 15939  17A0  085C               	movf	??_vfpfcnvrt,w
 15940  17A1  00D4               	movwf	ctoa@c
 15941  17A2  0862               	movf	vfpfcnvrt@fp,w
 15942  17A3  3191  2194         	fcall	_ctoa
 15943  17A5  0140               	movlb	0	; select bank0
 15944  17A6  0855               	movf	?_ctoa+1,w
 15945  17A7  00DB               	movwf	?_vfpfcnvrt+1
 15946  17A8  0854               	movf	?_ctoa,w
 15947  17A9  00DA               	movwf	?_vfpfcnvrt
 15948  17AA  0008               	return
 15949  17AB                     l7638:	
 15950                           
 15951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 15952  17AB  085A               	movf	vfpfcnvrt@fmt,w
 15953  17AC  0086               	movwf	6
 15954  17AD  0187               	clrf	7
 15955  17AE  3F40               	moviw [0]fsr1
 15956  17AF  00DC               	movwf	??_vfpfcnvrt
 15957  17B0  3F41               	moviw [1]fsr1
 15958  17B1  00DD               	movwf	??_vfpfcnvrt+1
 15959  17B2  085C               	movf	??_vfpfcnvrt,w
 15960  17B3  0084               	movwf	4
 15961  17B4  085D               	movf	??_vfpfcnvrt+1,w
 15962  17B5  0085               	movwf	5
 15963  17B6  0012               	moviw fsr0++
 15964  17B7  3A25               	xorlw	37
 15965  17B8  1D03               	btfss	3,2
 15966  17B9  2FD2               	goto	l7648
 15967                           
 15968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 15969  17BA  085A               	movf	vfpfcnvrt@fmt,w
 15970  17BB  0086               	movwf	6
 15971  17BC  0187               	clrf	7
 15972  17BD  3001               	movlw	1
 15973  17BE  0781               	addwf	1,f
 15974  17BF  3141               	addfsr 1,1
 15975  17C0  1803               	skipnc
 15976  17C1  0A81               	incf	1,f
 15977                           
 15978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 15979  17C2  3025               	movlw	37
 15980  17C3  00BB               	movwf	fputc@c
 15981  17C4  3000               	movlw	0
 15982  17C5  00BC               	movwf	fputc@c+1
 15983  17C6  0862               	movf	vfpfcnvrt@fp,w
 15984  17C7  00DC               	movwf	??_vfpfcnvrt
 15985  17C8  085C               	movf	??_vfpfcnvrt,w
 15986  17C9  00BD               	movwf	fputc@fp
 15987  17CA  3192  22C7         	fcall	_fputc
 15988  17CC                     l7644:	
 15989                           
 15990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 15991  17CC  3001               	movlw	1
 15992  17CD  0140               	movlb	0	; select bank0
 15993  17CE  00DA               	movwf	?_vfpfcnvrt
 15994  17CF  3000               	movlw	0
 15995  17D0  00DB               	movwf	?_vfpfcnvrt+1
 15996  17D1  0008               	return
 15997  17D2                     l7648:	
 15998                           
 15999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 16000  17D2  085A               	movf	vfpfcnvrt@fmt,w
 16001  17D3  0086               	movwf	6
 16002  17D4  0187               	clrf	7
 16003  17D5  3001               	movlw	1
 16004  17D6  0781               	addwf	1,f
 16005  17D7  3141               	addfsr 1,1
 16006  17D8  1803               	skipnc
 16007  17D9  0A81               	incf	1,f
 16008                           
 16009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 16010  17DA  01DA               	clrf	?_vfpfcnvrt
 16011  17DB  01DB               	clrf	?_vfpfcnvrt+1
 16012  17DC  0008               	return
 16013  17DD                     l7654:	
 16014                           
 16015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 16016  17DD  085A               	movf	vfpfcnvrt@fmt,w
 16017  17DE  0086               	movwf	6
 16018  17DF  0187               	clrf	7
 16019  17E0  3F40               	moviw [0]fsr1
 16020  17E1  00DC               	movwf	??_vfpfcnvrt
 16021  17E2  3F41               	moviw [1]fsr1
 16022  17E3  00DD               	movwf	??_vfpfcnvrt+1
 16023  17E4  085C               	movf	??_vfpfcnvrt,w
 16024  17E5  0084               	movwf	4
 16025  17E6  085D               	movf	??_vfpfcnvrt+1,w
 16026  17E7  0085               	movwf	5
 16027  17E8  0800               	movf	0,w	;code access
 16028  17E9  00DE               	movwf	??_vfpfcnvrt+2
 16029  17EA  01DF               	clrf	??_vfpfcnvrt+3
 16030  17EB  085E               	movf	??_vfpfcnvrt+2,w
 16031  17EC  00BB               	movwf	fputc@c
 16032  17ED  085F               	movf	??_vfpfcnvrt+3,w
 16033  17EE  00BC               	movwf	fputc@c+1
 16034  17EF  0862               	movf	vfpfcnvrt@fp,w
 16035  17F0  00E0               	movwf	??_vfpfcnvrt+4
 16036  17F1  0860               	movf	??_vfpfcnvrt+4,w
 16037  17F2  00BD               	movwf	fputc@fp
 16038  17F3  3192  22C7  3197   	fcall	_fputc
 16039                           
 16040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 16041  17F6  0140               	movlb	0	; select bank0
 16042  17F7  085A               	movf	vfpfcnvrt@fmt,w
 16043  17F8  0086               	movwf	6
 16044  17F9  0187               	clrf	7
 16045  17FA  3001               	movlw	1
 16046  17FB  0781               	addwf	1,f
 16047  17FC  3141               	addfsr 1,1
 16048  17FD  1803               	skipnc
 16049  17FE  0A81               	incf	1,f
 16050  17FF  2FCC               	goto	l7644
 16051  1800                     __end_of_vfpfcnvrt:	
 16052                           
 16053                           	psect	text42
 16054  1194                     __ptext42:	
 16055 ;; *************** function _ctoa *****************
 16056 ;; Defined at:
 16057 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;  fp              1    wreg     PTR struct _IO_FILE
 16060 ;;		 -> NULL(0), 
 16061 ;;  c               1   52[BANK0 ] unsigned char 
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;  fp              1   57[BANK0 ] PTR struct _IO_FILE
 16064 ;;		 -> NULL(0), 
 16065 ;;  w               2   55[BANK0 ] int 
 16066 ;;  l               2    0        int 
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  2   52[BANK0 ] int 
 16069 ;; Registers used:
 16070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16077 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16079 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16080 ;;Total ram usage:        6 bytes
 16081 ;; Hardware stack levels used:    1
 16082 ;; Hardware stack levels required when called:   13
 16083 ;; This function calls:
 16084 ;;		_pad
 16085 ;; This function is called by:
 16086 ;;		_vfpfcnvrt
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           
 16091                           ;psect for function _ctoa
 16092  1194                     _ctoa:	
 16093                           
 16094                           ;incstack = 0
 16095 ;; hardware stack exceeded
 16096                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16097                           ;ctoa@fp stored from wreg
 16098  1194  0140               	movlb	0	; select bank0
 16099  1195  00D9               	movwf	ctoa@fp
 16100                           
 16101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 16102  1196  0142               	movlb	2	; select bank2
 16103  1197  0822               	movf	_width^(0+256),w
 16104  1198  0423               	iorwf	(_width+1)^(0+256),w
 16105  1199  1D03               	btfss	3,2
 16106  119A  29A3               	goto	l7182
 16107  119B  0823               	movf	(_width+1)^(0+256),w
 16108  119C  0140               	movlb	0	; select bank0
 16109  119D  00D8               	movwf	ctoa@w+1
 16110  119E  0142               	movlb	2	; select bank2
 16111  119F  0822               	movf	_width^(0+256),w
 16112  11A0  0140               	movlb	0	; select bank0
 16113  11A1  00D7               	movwf	ctoa@w
 16114  11A2  29AC               	goto	l7184
 16115  11A3                     l7182:	
 16116  11A3  0822               	movf	_width^(0+256),w
 16117  11A4  3EFF               	addlw	255
 16118  11A5  0140               	movlb	0	; select bank0
 16119  11A6  00D7               	movwf	ctoa@w
 16120  11A7  30FF               	movlw	255
 16121  11A8  0142               	movlb	2	; select bank2
 16122  11A9  3D23               	addwfc	(_width+1)^(0+256),w
 16123  11AA  0140               	movlb	0	; select bank0
 16124  11AB  00D8               	movwf	ctoa@w+1
 16125  11AC                     l7184:	
 16126                           
 16127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 16128  11AC  0854               	movf	ctoa@c,w
 16129  11AD  00D6               	movwf	??_ctoa
 16130  11AE  0856               	movf	??_ctoa,w
 16131  11AF  0146               	movlb	6	; select bank6
 16132  11B0  00A0               	movwf	_dbuf^(0+768)
 16133                           
 16134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 16135  11B1  01A1               	clrf	(_dbuf^(0+768)+1)
 16136                           
 16137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 16138  11B2  3020               	movlw	(low (_dbuf| (0+768)))& (0+255)
 16139  11B3  0140               	movlb	0	; select bank0
 16140  11B4  00D6               	movwf	??_ctoa
 16141  11B5  0856               	movf	??_ctoa,w
 16142  11B6  00CB               	movwf	pad@buf
 16143  11B7  0858               	movf	ctoa@w+1,w
 16144  11B8  00CD               	movwf	pad@p+1
 16145  11B9  0857               	movf	ctoa@w,w
 16146  11BA  00CC               	movwf	pad@p
 16147  11BB  0859               	movf	ctoa@fp,w
 16148  11BC  3193  23D5         	fcall	_pad
 16149  11BE  0140               	movlb	0	; select bank0
 16150  11BF  084C               	movf	?_pad+1,w
 16151  11C0  00D5               	movwf	?_ctoa+1
 16152  11C1  084B               	movf	?_pad,w
 16153  11C2  00D4               	movwf	?_ctoa
 16154  11C3  0008               	return
 16155  11C4                     __end_of_ctoa:	
 16156                           
 16157                           	psect	text43
 16158  13D5                     __ptext43:	
 16159 ;; *************** function _pad *****************
 16160 ;; Defined at:
 16161 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16162 ;; Parameters:    Size  Location     Type
 16163 ;;  fp              1    wreg     PTR struct _IO_FILE
 16164 ;;		 -> NULL(0), 
 16165 ;;  buf             1   43[BANK0 ] PTR unsigned char 
 16166 ;;		 -> dbuf(32), 
 16167 ;;  p               2   44[BANK0 ] int 
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
 16170 ;;		 -> NULL(0), 
 16171 ;;  w               2   49[BANK0 ] int 
 16172 ;;  i               2   47[BANK0 ] int 
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  2   43[BANK0 ] int 
 16175 ;; Registers used:
 16176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16182 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;Total ram usage:        9 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:   12
 16189 ;; This function calls:
 16190 ;;		_fputc
 16191 ;;		_fputs
 16192 ;;		_strlen
 16193 ;; This function is called by:
 16194 ;;		_ctoa
 16195 ;; This function uses a non-reentrant model
 16196 ;;
 16197                           
 16198                           
 16199                           ;psect for function _pad
 16200  13D5                     _pad:	
 16201                           
 16202                           ;incstack = 0
 16203 ;; hardware stack exceeded
 16204                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16205                           ;pad@fp stored from wreg
 16206  13D5  0140               	movlb	0	; select bank0
 16207  13D6  00D3               	movwf	pad@fp
 16208                           
 16209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 16210  13D7  0142               	movlb	2	; select bank2
 16211  13D8  1C26               	btfss	_flags^(0+256),0
 16212  13D9  2BE3               	goto	l7146
 16213                           
 16214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 16215  13DA  0140               	movlb	0	; select bank0
 16216  13DB  0853               	movf	pad@fp,w
 16217  13DC  00CE               	movwf	??_pad
 16218  13DD  084E               	movf	??_pad,w
 16219  13DE  00C3               	movwf	fputs@fp
 16220  13DF  084B               	movf	pad@buf,w
 16221  13E0  3190  20C2  3193   	fcall	_fputs
 16222  13E3                     l7146:	
 16223                           
 16224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 16225  13E3  0140               	movlb	0	; select bank0
 16226  13E4  1BCD               	btfsc	pad@p+1,7
 16227  13E5  2BEB               	goto	l7150
 16228  13E6  084D               	movf	pad@p+1,w
 16229  13E7  00D2               	movwf	pad@w+1
 16230  13E8  084C               	movf	pad@p,w
 16231  13E9  00D1               	movwf	pad@w
 16232  13EA  2BED               	goto	l1695
 16233  13EB                     l7150:	
 16234  13EB  01D1               	clrf	pad@w
 16235  13EC  01D2               	clrf	pad@w+1
 16236  13ED                     l1695:	
 16237                           
 16238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 16239  13ED  01CF               	clrf	pad@i
 16240  13EE  01D0               	clrf	pad@i+1
 16241  13EF                     l7156:	
 16242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16243                           
 16244                           
 16245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16246  13EF  0850               	movf	pad@i+1,w
 16247  13F0  3A80               	xorlw	128
 16248  13F1  00CE               	movwf	??_pad
 16249  13F2  0852               	movf	pad@w+1,w
 16250  13F3  3A80               	xorlw	128
 16251  13F4  024E               	subwf	??_pad,w
 16252  13F5  1D03               	skipz
 16253  13F6  2BF9               	goto	u6365
 16254  13F7  0851               	movf	pad@w,w
 16255  13F8  024F               	subwf	pad@i,w
 16256  13F9                     u6365:	
 16257  13F9  1803               	btfsc	3,0
 16258  13FA  2C0D               	goto	l1698
 16259                           
 16260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 16261  13FB  3020               	movlw	32
 16262  13FC  0140               	movlb	0	; select bank0
 16263  13FD  00BB               	movwf	fputc@c
 16264  13FE  3000               	movlw	0
 16265  13FF  00BC               	movwf	fputc@c+1
 16266  1400  0853               	movf	pad@fp,w
 16267  1401  00CE               	movwf	??_pad
 16268  1402  084E               	movf	??_pad,w
 16269  1403  00BD               	movwf	fputc@fp
 16270  1404  3192  22C7  3193   	fcall	_fputc
 16271                           
 16272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 16273  1407  3001               	movlw	1
 16274  1408  0140               	movlb	0	; select bank0
 16275  1409  07CF               	addwf	pad@i,f
 16276  140A  3000               	movlw	0
 16277  140B  3DD0               	addwfc	pad@i+1,f
 16278  140C  2BEF               	goto	l7156
 16279  140D                     l1698:	
 16280                           
 16281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 16282  140D  0142               	movlb	2	; select bank2
 16283  140E  1826               	btfsc	_flags^(0+256),0
 16284  140F  2C19               	goto	l7160
 16285                           
 16286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 16287  1410  0140               	movlb	0	; select bank0
 16288  1411  0853               	movf	pad@fp,w
 16289  1412  00CE               	movwf	??_pad
 16290  1413  084E               	movf	??_pad,w
 16291  1414  00C3               	movwf	fputs@fp
 16292  1415  084B               	movf	pad@buf,w
 16293  1416  3190  20C2  3193   	fcall	_fputs
 16294  1419                     l7160:	
 16295                           
 16296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 16297  1419  0140               	movlb	0	; select bank0
 16298  141A  084B               	movf	pad@buf,w
 16299  141B  00A0               	movwf	strlen@s
 16300  141C  3003               	movlw	3
 16301  141D  00A1               	movwf	strlen@s+1
 16302  141E  319F  271D         	fcall	_strlen
 16303  1420  0140               	movlb	0	; select bank0
 16304  1421  0851               	movf	pad@w,w
 16305  1422  0720               	addwf	?_strlen,w
 16306  1423  00CB               	movwf	?_pad
 16307  1424  0852               	movf	pad@w+1,w
 16308  1425  3D21               	addwfc	?_strlen+1,w
 16309  1426  00CC               	movwf	?_pad+1
 16310  1427  0008               	return
 16311  1428                     __end_of_pad:	
 16312                           
 16313                           	psect	text44
 16314  1F1D                     __ptext44:	
 16315 ;; *************** function _strlen *****************
 16316 ;; Defined at:
 16317 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 16320 ;;		 -> dbuf(32), STR_16(9), 
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 16323 ;;		 -> dbuf(32), STR_16(9), 
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  2    0[BANK0 ] unsigned int 
 16326 ;; Registers used:
 16327 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16336 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16337 ;;Total ram usage:        5 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; Hardware stack levels required when called:    4
 16340 ;; This function calls:
 16341 ;;		Nothing
 16342 ;; This function is called by:
 16343 ;;		_pad
 16344 ;;		_TM1650_scrollPrint
 16345 ;; This function uses a non-reentrant model
 16346 ;;
 16347                           
 16348                           
 16349                           ;psect for function _strlen
 16350  1F1D                     _strlen:	
 16351                           
 16352                           ;incstack = 0
 16353                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 16354  1F1D  0140               	movlb	0	; select bank0
 16355  1F1E  0821               	movf	strlen@s+1,w
 16356  1F1F  00A4               	movwf	strlen@a+1
 16357  1F20  0820               	movf	strlen@s,w
 16358  1F21  00A3               	movwf	strlen@a
 16359  1F22                     l7128:	
 16360  1F22  0820               	movf	strlen@s,w
 16361  1F23  0084               	movwf	4
 16362  1F24  0821               	movf	strlen@s+1,w
 16363  1F25  0085               	movwf	5
 16364  1F26  0012               	moviw fsr0++
 16365  1F27  1903               	btfsc	3,2
 16366  1F28  2F2E               	goto	l7130
 16367  1F29  3001               	movlw	1
 16368  1F2A  07A0               	addwf	strlen@s,f
 16369  1F2B  3000               	movlw	0
 16370  1F2C  3DA1               	addwfc	strlen@s+1,f
 16371  1F2D  2F22               	goto	l7128
 16372  1F2E                     l7130:	
 16373  1F2E  0823               	movf	strlen@a,w
 16374  1F2F  0220               	subwf	strlen@s,w
 16375  1F30  00A0               	movwf	?_strlen
 16376  1F31  0824               	movf	strlen@a+1,w
 16377  1F32  3B21               	subwfb	strlen@s+1,w
 16378  1F33  00A1               	movwf	?_strlen+1
 16379  1F34  0008               	return
 16380  1F35                     __end_of_strlen:	
 16381                           
 16382                           	psect	text45
 16383  10C2                     __ptext45:	
 16384 ;; *************** function _fputs *****************
 16385 ;; Defined at:
 16386 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 16387 ;; Parameters:    Size  Location     Type
 16388 ;;  s               1    wreg     PTR const unsigned char 
 16389 ;;		 -> dbuf(32), 
 16390 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
 16391 ;;		 -> NULL(0), 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  s               1   42[BANK0 ] PTR const unsigned char 
 16394 ;;		 -> dbuf(32), 
 16395 ;;  i               2   40[BANK0 ] int 
 16396 ;;  c               1   39[BANK0 ] unsigned char 
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  2   35[BANK0 ] int 
 16399 ;; Registers used:
 16400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16406 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16408 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16410 ;;Total ram usage:        8 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; Hardware stack levels required when called:   11
 16413 ;; This function calls:
 16414 ;;		_fputc
 16415 ;; This function is called by:
 16416 ;;		_pad
 16417 ;; This function uses a non-reentrant model
 16418 ;;
 16419                           
 16420                           
 16421                           ;psect for function _fputs
 16422  10C2                     _fputs:	
 16423                           
 16424                           ;incstack = 0
 16425 ;; hardware stack exceeded
 16426                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16427                           ;fputs@s stored from wreg
 16428  10C2  0140               	movlb	0	; select bank0
 16429  10C3  00CA               	movwf	fputs@s
 16430  10C4  01C8               	clrf	fputs@i
 16431  10C5  01C9               	clrf	fputs@i+1
 16432  10C6                     l7140:	
 16433  10C6  0848               	movf	fputs@i,w
 16434  10C7  074A               	addwf	fputs@s,w
 16435  10C8  00C4               	movwf	??_fputs
 16436  10C9  0844               	movf	??_fputs,w
 16437  10CA  0086               	movwf	6
 16438  10CB  3003               	movlw	3	; select bank6/7
 16439  10CC  0087               	movwf	7
 16440  10CD  0801               	movf	1,w
 16441  10CE  00C5               	movwf	??_fputs+1
 16442  10CF  0845               	movf	??_fputs+1,w
 16443  10D0  00C7               	movwf	fputs@c
 16444  10D1  0847               	movf	fputs@c,w
 16445  10D2  1903               	btfsc	3,2
 16446  10D3  0008               	return
 16447  10D4  0847               	movf	fputs@c,w
 16448  10D5  00C4               	movwf	??_fputs
 16449  10D6  01C5               	clrf	??_fputs+1
 16450  10D7  0844               	movf	??_fputs,w
 16451  10D8  00BB               	movwf	fputc@c
 16452  10D9  0845               	movf	??_fputs+1,w
 16453  10DA  00BC               	movwf	fputc@c+1
 16454  10DB  0843               	movf	fputs@fp,w
 16455  10DC  00C6               	movwf	??_fputs+2
 16456  10DD  0846               	movf	??_fputs+2,w
 16457  10DE  00BD               	movwf	fputc@fp
 16458  10DF  3192  22C7  3190   	fcall	_fputc
 16459  10E2  3001               	movlw	1
 16460  10E3  0140               	movlb	0	; select bank0
 16461  10E4  07C8               	addwf	fputs@i,f
 16462  10E5  3000               	movlw	0
 16463  10E6  3DC9               	addwfc	fputs@i+1,f
 16464  10E7  28C6               	goto	l7140
 16465  10E8                     __end_of_fputs:	
 16466                           
 16467                           	psect	text46
 16468  12C7                     __ptext46:	
 16469 ;; *************** function _fputc *****************
 16470 ;; Defined at:
 16471 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;  c               2   27[BANK0 ] int 
 16474 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 16475 ;;		 -> NULL(0), 
 16476 ;; Auto vars:     Size  Location     Type
 16477 ;;		None
 16478 ;; Return value:  Size  Location     Type
 16479 ;;                  2   27[BANK0 ] int 
 16480 ;; Registers used:
 16481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16482 ;; Tracked objects:
 16483 ;;		On entry : 0/0
 16484 ;;		On exit  : 0/0
 16485 ;;		Unchanged: 0/0
 16486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16489 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16491 ;;Total ram usage:        8 bytes
 16492 ;; Hardware stack levels used:    1
 16493 ;; Hardware stack levels required when called:   10
 16494 ;; This function calls:
 16495 ;;		_putch
 16496 ;; This function is called by:
 16497 ;;		_pad
 16498 ;;		_vfpfcnvrt
 16499 ;;		_fputs
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           
 16504                           ;psect for function _fputc
 16505  12C7                     _fputc:	
 16506                           
 16507                           ;incstack = 0
 16508                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16509  12C7  0140               	movlb	0	; select bank0
 16510  12C8  083D               	movf	fputc@fp,w
 16511  12C9  1D03               	btfss	3,2
 16512  12CA  083D               	movf	fputc@fp,w
 16513  12CB  1D03               	btfss	3,2
 16514  12CC  2AD1               	goto	l7116
 16515  12CD  083B               	movf	fputc@c,w
 16516  12CE  3190  207A         	fcall	_putch
 16517  12D0  0008               	return
 16518  12D1                     l7116:	
 16519  12D1  083D               	movf	fputc@fp,w
 16520  12D2  3E03               	addlw	3
 16521  12D3  0086               	movwf	6
 16522  12D4  0187               	clrf	7
 16523  12D5  0016               	moviw fsr1++
 16524  12D6  0401               	iorwf	1,w
 16525  12D7  1903               	btfsc	3,2
 16526  12D8  2AF4               	goto	l7120
 16527  12D9  083D               	movf	fputc@fp,w
 16528  12DA  3E03               	addlw	3
 16529  12DB  0086               	movwf	6
 16530  12DC  0187               	clrf	7
 16531  12DD  3F40               	moviw [0]fsr1
 16532  12DE  00BE               	movwf	??_fputc
 16533  12DF  3F41               	moviw [1]fsr1
 16534  12E0  00BF               	movwf	??_fputc+1
 16535  12E1  0A3D               	incf	fputc@fp,w
 16536  12E2  0086               	movwf	6
 16537  12E3  0187               	clrf	7
 16538  12E4  3F40               	moviw [0]fsr1
 16539  12E5  00C0               	movwf	??_fputc+2
 16540  12E6  3F41               	moviw [1]fsr1
 16541  12E7  00C1               	movwf	??_fputc+3
 16542  12E8  0841               	movf	??_fputc+3,w
 16543  12E9  3A80               	xorlw	128
 16544  12EA  00C2               	movwf	??_fputc+4
 16545  12EB  083F               	movf	??_fputc+1,w
 16546  12EC  3A80               	xorlw	128
 16547  12ED  0242               	subwf	??_fputc+4,w
 16548  12EE  1D03               	skipz
 16549  12EF  2AF2               	goto	u6315
 16550  12F0  083E               	movf	??_fputc,w
 16551  12F1  0240               	subwf	??_fputc+2,w
 16552  12F2                     u6315:	
 16553  12F2  1803               	skipnc
 16554  12F3  0008               	return
 16555  12F4                     l7120:	
 16556  12F4  0140               	movlb	0	; select bank0
 16557  12F5  0A3D               	incf	fputc@fp,w
 16558  12F6  0086               	movwf	6
 16559  12F7  0187               	clrf	7
 16560  12F8  3001               	movlw	1
 16561  12F9  0781               	addwf	1,f
 16562  12FA  3141               	addfsr 1,1
 16563  12FB  1803               	skipnc
 16564  12FC  0A81               	incf	1,f
 16565  12FD  0008               	return
 16566  12FE                     __end_of_fputc:	
 16567                           
 16568                           	psect	text47
 16569  107A                     __ptext47:	
 16570 ;; *************** function _putch *****************
 16571 ;; Defined at:
 16572 ;;		line 166 in file "tm1650.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  n               1    wreg     unsigned char 
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;  n               1   26[BANK0 ] unsigned char 
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      void 
 16579 ;; Registers used:
 16580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;Total ram usage:        2 bytes
 16591 ;; Hardware stack levels used:    1
 16592 ;; Hardware stack levels required when called:    9
 16593 ;; This function calls:
 16594 ;;		_TM1650_setDigit
 16595 ;; This function is called by:
 16596 ;;		_fputc
 16597 ;; This function uses a non-reentrant model
 16598 ;;
 16599                           
 16600                           
 16601                           ;psect for function _putch
 16602  107A                     _putch:	
 16603                           
 16604                           ;incstack = 0
 16605                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16606                           ;putch@n stored from wreg
 16607  107A  0140               	movlb	0	; select bank0
 16608  107B  00BA               	movwf	putch@n
 16609                           
 16610                           ;tm1650.c: 168:     if(position > 3 || n == '\r' || n == '\0')
 16611  107C  3004               	movlw	4
 16612  107D  0141               	movlb	1	; select bank1
 16613  107E  0257               	subwf	_position^(0+128),w
 16614  107F  1803               	skipnc
 16615  1080  2888               	goto	l7102
 16616  1081  300D               	movlw	13
 16617  1082  0140               	movlb	0	; select bank0
 16618  1083  063A               	xorwf	putch@n,w
 16619  1084  1D03               	btfss	3,2
 16620  1085  083A               	movf	putch@n,w
 16621  1086  1D03               	btfss	3,2
 16622  1087  288A               	goto	l7104
 16623  1088                     l7102:	
 16624                           
 16625                           ;tm1650.c: 169:         position = 0;
 16626  1088  0141               	movlb	1	; select bank1
 16627  1089  01D7               	clrf	_position^(0+128)
 16628  108A                     l7104:	
 16629                           
 16630                           ;tm1650.c: 171:     if(n != '\r'){
 16631  108A  300D               	movlw	13
 16632  108B  0140               	movlb	0	; select bank0
 16633  108C  063A               	xorwf	putch@n,w
 16634  108D  1903               	btfsc	3,2
 16635  108E  0008               	return
 16636                           
 16637                           ;tm1650.c: 172:         TM1650_setDigit(position, n);
 16638  108F  083A               	movf	putch@n,w
 16639  1090  00B9               	movwf	??_putch
 16640  1091  0839               	movf	??_putch,w
 16641  1092  00B6               	movwf	TM1650_setDigit@data
 16642  1093  0141               	movlb	1	; select bank1
 16643  1094  0857               	movf	_position^(0+128),w
 16644  1095  319E  267A         	fcall	_TM1650_setDigit
 16645                           
 16646                           ;tm1650.c: 173:         position++;
 16647  1097  3001               	movlw	1
 16648  1098  0140               	movlb	0	; select bank0
 16649  1099  00B9               	movwf	??_putch
 16650  109A  0839               	movf	??_putch,w
 16651  109B  0141               	movlb	1	; select bank1
 16652  109C  07D7               	addwf	_position^(0+128),f
 16653  109D  0008               	return
 16654  109E                     __end_of_putch:	
 16655                           
 16656                           	psect	text48
 16657  1E7A                     __ptext48:	
 16658 ;; *************** function _TM1650_setDigit *****************
 16659 ;; Defined at:
 16660 ;;		line 95 in file "tm1650.c"
 16661 ;; Parameters:    Size  Location     Type
 16662 ;;  digit           1    wreg     unsigned char 
 16663 ;;  data            1   22[BANK0 ] unsigned char 
 16664 ;; Auto vars:     Size  Location     Type
 16665 ;;  digit           1   24[BANK0 ] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  1    wreg      void 
 16668 ;; Registers used:
 16669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16675 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16679 ;;Total ram usage:        3 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; Hardware stack levels required when called:    8
 16682 ;; This function calls:
 16683 ;;		_writeData
 16684 ;; This function is called by:
 16685 ;;		_putch
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           
 16690                           ;psect for function _TM1650_setDigit
 16691  1E7A                     _TM1650_setDigit:	
 16692                           
 16693                           ;incstack = 0
 16694                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16695                           ;TM1650_setDigit@digit stored from wreg
 16696  1E7A  0140               	movlb	0	; select bank0
 16697  1E7B  00B8               	movwf	TM1650_setDigit@digit
 16698                           
 16699                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 16700  1E7C  0836               	movf	TM1650_setDigit@data,w
 16701  1E7D  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 16702  1E7E  0084               	movwf	4
 16703  1E7F  3097               	movlw	high ((_charTable+65504)| (0+32768))
 16704  1E80  1803               	skipnc
 16705  1E81  3E01               	addlw	1
 16706  1E82  0085               	movwf	5
 16707  1E83  0800               	movf	0,w	;code access
 16708  1E84  00B7               	movwf	??_TM1650_setDigit
 16709  1E85  0837               	movf	??_TM1650_setDigit,w
 16710  1E86  00B0               	movwf	writeData@data
 16711  1E87  0838               	movf	TM1650_setDigit@digit,w
 16712  1E88  3E34               	addlw	52
 16713  1E89  319F  276B         	fcall	_writeData
 16714  1E8B  0008               	return
 16715  1E8C                     __end_of_TM1650_setDigit:	
 16716                           
 16717                           	psect	text49
 16718  15B5                     __ptext49:	
 16719 ;; *************** function _TM1650_fastPrintNum_2digit *****************
 16720 ;; Defined at:
 16721 ;;		line 136 in file "tm1650.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  num             1    wreg     unsigned char 
 16724 ;; Auto vars:     Size  Location     Type
 16725 ;;  num             1   25[BANK0 ] unsigned char 
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  1    wreg      void 
 16728 ;; Registers used:
 16729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16730 ;; Tracked objects:
 16731 ;;		On entry : 0/0
 16732 ;;		On exit  : 0/0
 16733 ;;		Unchanged: 0/0
 16734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16737 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16739 ;;Total ram usage:        4 bytes
 16740 ;; Hardware stack levels used:    1
 16741 ;; Hardware stack levels required when called:    8
 16742 ;; This function calls:
 16743 ;;		___awdiv
 16744 ;;		___awmod
 16745 ;;		_writeData
 16746 ;; This function is called by:
 16747 ;;		_CONTROL_BEAT
 16748 ;; This function uses a non-reentrant model
 16749 ;;
 16750                           
 16751                           
 16752                           ;psect for function _TM1650_fastPrintNum_2digit
 16753  15B5                     _TM1650_fastPrintNum_2digit:	
 16754                           
 16755                           ;incstack = 0
 16756                           ; Regs used in _TM1650_fastPrintNum_2digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16757                           ;TM1650_fastPrintNum_2digit@num stored from wreg
 16758  15B5  0140               	movlb	0	; select bank0
 16759  15B6  00B9               	movwf	TM1650_fastPrintNum_2digit@num
 16760                           
 16761                           ;tm1650.c: 138:     if(num > 99){
 16762  15B7  3064               	movlw	100
 16763  15B8  0239               	subwf	TM1650_fastPrintNum_2digit@num,w
 16764  15B9  1C03               	skipc
 16765  15BA  2DDE               	goto	l8010
 16766                           
 16767                           ;tm1650.c: 139:         writeData(0x34, 0x79);
 16768  15BB  3079               	movlw	121
 16769  15BC  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 16770  15BD  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 16771  15BE  00B0               	movwf	writeData@data
 16772  15BF  3034               	movlw	52
 16773  15C0  319F  276B  3195   	fcall	_writeData
 16774                           
 16775                           ;tm1650.c: 140:         writeData(0x35, 0x79);
 16776  15C3  3079               	movlw	121
 16777  15C4  0140               	movlb	0	; select bank0
 16778  15C5  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 16779  15C6  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 16780  15C7  00B0               	movwf	writeData@data
 16781  15C8  3035               	movlw	53
 16782  15C9  319F  276B  3195   	fcall	_writeData
 16783                           
 16784                           ;tm1650.c: 141:         writeData(0x36, 0x79);
 16785  15CC  3079               	movlw	121
 16786  15CD  0140               	movlb	0	; select bank0
 16787  15CE  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 16788  15CF  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 16789  15D0  00B0               	movwf	writeData@data
 16790  15D1  3036               	movlw	54
 16791  15D2  319F  276B  3195   	fcall	_writeData
 16792                           
 16793                           ;tm1650.c: 142:         writeData(0x37, 0x79);
 16794  15D5  3079               	movlw	121
 16795  15D6  0140               	movlb	0	; select bank0
 16796  15D7  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 16797  15D8  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 16798  15D9  00B0               	movwf	writeData@data
 16799  15DA  3037               	movlw	55
 16800  15DB  319F  276B         	fcall	_writeData
 16801  15DD  0008               	return
 16802  15DE                     l8010:	
 16803                           
 16804                           ;tm1650.c: 146:     writeData(0x37, charTable[(num % 10) + 16]);
 16805  15DE  300A               	movlw	10
 16806  15DF  00A9               	movwf	___awmod@divisor
 16807  15E0  3000               	movlw	0
 16808  15E1  00AA               	movwf	___awmod@divisor+1
 16809  15E2  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 16810  15E3  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 16811  15E4  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 16812  15E5  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 16813  15E6  00AB               	movwf	___awmod@dividend
 16814  15E7  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 16815  15E8  00AC               	movwf	___awmod@dividend+1
 16816  15E9  3193  233D  3195   	fcall	___awmod
 16817  15EC  0140               	movlb	0	; select bank0
 16818  15ED  082A               	movf	?___awmod+1,w
 16819  15EE  0085               	movwf	5
 16820  15EF  0829               	movf	?___awmod,w
 16821  15F0  0084               	movwf	4
 16822  15F1  3010               	movlw	low ((_charTable+16)| (0+32768))
 16823  15F2  0784               	addwf	4,f
 16824  15F3  3098               	movlw	high ((_charTable+16)| (0+32768))
 16825  15F4  3D85               	addwfc	5,f
 16826  15F5  0800               	movf	0,w	;code access
 16827  15F6  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 16828  15F7  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 16829  15F8  00B0               	movwf	writeData@data
 16830  15F9  3037               	movlw	55
 16831  15FA  319F  276B  3195   	fcall	_writeData
 16832                           
 16833                           ;tm1650.c: 147:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 16834  15FD  300A               	movlw	10
 16835  15FE  0140               	movlb	0	; select bank0
 16836  15FF  00A9               	movwf	___awmod@divisor
 16837  1600  3000               	movlw	0
 16838  1601  00AA               	movwf	___awmod@divisor+1
 16839  1602  300A               	movlw	10
 16840  1603  00A0               	movwf	___awdiv@divisor
 16841  1604  3000               	movlw	0
 16842  1605  00A1               	movwf	___awdiv@divisor+1
 16843  1606  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 16844  1607  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 16845  1608  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 16846  1609  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 16847  160A  00A2               	movwf	___awdiv@dividend
 16848  160B  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 16849  160C  00A3               	movwf	___awdiv@dividend+1
 16850  160D  3193  2383  3195   	fcall	___awdiv
 16851  1610  0140               	movlb	0	; select bank0
 16852  1611  0821               	movf	?___awdiv+1,w
 16853  1612  00AC               	movwf	___awmod@dividend+1
 16854  1613  0820               	movf	?___awdiv,w
 16855  1614  00AB               	movwf	___awmod@dividend
 16856  1615  3193  233D  3195   	fcall	___awmod
 16857  1618  0140               	movlb	0	; select bank0
 16858  1619  082A               	movf	?___awmod+1,w
 16859  161A  0085               	movwf	5
 16860  161B  0829               	movf	?___awmod,w
 16861  161C  0084               	movwf	4
 16862  161D  3010               	movlw	low ((_charTable+16)| (0+32768))
 16863  161E  0784               	addwf	4,f
 16864  161F  3098               	movlw	high ((_charTable+16)| (0+32768))
 16865  1620  3D85               	addwfc	5,f
 16866  1621  0800               	movf	0,w	;code access
 16867  1622  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 16868  1623  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 16869  1624  00B0               	movwf	writeData@data
 16870  1625  3036               	movlw	54
 16871  1626  319F  276B         	fcall	_writeData
 16872  1628  0008               	return
 16873  1629                     __end_of_TM1650_fastPrintNum_2digit:	
 16874                           
 16875                           	psect	text50
 16876  1F6B                     __ptext50:	
 16877 ;; *************** function _writeData *****************
 16878 ;; Defined at:
 16879 ;;		line 31 in file "tm1650.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  address         1    wreg     unsigned char 
 16882 ;;  data            1   16[BANK0 ] unsigned char 
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;  address         1   20[BANK0 ] unsigned char 
 16885 ;;  status          1   21[BANK0 ] enum E11376
 16886 ;; Return value:  Size  Location     Type
 16887 ;;                  1    wreg      void 
 16888 ;; Registers used:
 16889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16890 ;; Tracked objects:
 16891 ;;		On entry : 0/0
 16892 ;;		On exit  : 0/0
 16893 ;;		Unchanged: 0/0
 16894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16895 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16897 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16898 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16899 ;;Total ram usage:        6 bytes
 16900 ;; Hardware stack levels used:    1
 16901 ;; Hardware stack levels required when called:    7
 16902 ;; This function calls:
 16903 ;;		_I2C1_MasterWrite
 16904 ;; This function is called by:
 16905 ;;		_TM1650_enable
 16906 ;;		_TM1650_setDigit
 16907 ;;		_TM1650_fastPrintNum
 16908 ;;		_TM1650_fastPrintNum_3digit
 16909 ;;		_TM1650_fastPrintNum_2digit
 16910 ;;		_TM1650_brightness
 16911 ;;		_TM1650_fastPrintNum_1digit
 16912 ;; This function uses a non-reentrant model
 16913 ;;
 16914                           
 16915                           
 16916                           ;psect for function _writeData
 16917  1F6B                     _writeData:	
 16918                           
 16919                           ;incstack = 0
 16920                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16921                           ;writeData@address stored from wreg
 16922  1F6B  0140               	movlb	0	; select bank0
 16923  1F6C  00B4               	movwf	writeData@address
 16924                           
 16925                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 16926  1F6D  3002               	movlw	2
 16927  1F6E  00B1               	movwf	??_writeData
 16928  1F6F  0831               	movf	??_writeData,w
 16929  1F70  00B5               	movwf	writeData@status
 16930                           
 16931                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 16932  1F71  01A7               	clrf	I2C1_MasterWrite@length
 16933  1F72  0AA7               	incf	I2C1_MasterWrite@length,f
 16934  1F73  0834               	movf	writeData@address,w
 16935  1F74  00B1               	movwf	??_writeData
 16936  1F75  01B2               	clrf	??_writeData+1
 16937  1F76  0831               	movf	??_writeData,w
 16938  1F77  00A8               	movwf	I2C1_MasterWrite@address
 16939  1F78  0832               	movf	??_writeData+1,w
 16940  1F79  00A9               	movwf	I2C1_MasterWrite@address+1
 16941  1F7A  3035               	movlw	(low (writeData@status| 0))& (0+255)
 16942  1F7B  00B3               	movwf	??_writeData+2
 16943  1F7C  0833               	movf	??_writeData+2,w
 16944  1F7D  00AA               	movwf	I2C1_MasterWrite@pflag
 16945  1F7E  3030               	movlw	(low (writeData@data| 0))& (0+255)
 16946  1F7F  3191  210E  319F   	fcall	_I2C1_MasterWrite
 16947  1F82                     l7092:	
 16948                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 16949                           
 16950  1F82  3002               	movlw	2
 16951  1F83  0140               	movlb	0	; select bank0
 16952  1F84  0635               	xorwf	writeData@status,w
 16953  1F85  1D03               	btfss	3,2
 16954  1F86  0008               	return
 16955  1F87  2F82               	goto	l7092
 16956  1F88                     __end_of_writeData:	
 16957                           
 16958                           	psect	text51
 16959  110E                     __ptext51:	
 16960 ;; *************** function _I2C1_MasterWrite *****************
 16961 ;; Defined at:
 16962 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 16963 ;; Parameters:    Size  Location     Type
 16964 ;;  pdata           1    wreg     PTR unsigned char 
 16965 ;;		 -> writeData@data(1), 
 16966 ;;  length          1    7[BANK0 ] unsigned char 
 16967 ;;  address         2    8[BANK0 ] unsigned short 
 16968 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 16969 ;;		 -> writeData@status(1), 
 16970 ;; Auto vars:     Size  Location     Type
 16971 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 16972 ;;		 -> writeData@data(1), 
 16973 ;; Return value:  Size  Location     Type
 16974 ;;                  1    wreg      void 
 16975 ;; Registers used:
 16976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16985 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16986 ;;Total ram usage:        7 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; Hardware stack levels required when called:    6
 16989 ;; This function calls:
 16990 ;;		_I2C1_MasterTRBInsert
 16991 ;;		_I2C1_MasterWriteTRBBuild
 16992 ;; This function is called by:
 16993 ;;		_writeData
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           
 16998                           ;psect for function _I2C1_MasterWrite
 16999  110E                     _I2C1_MasterWrite:	
 17000                           
 17001                           ;incstack = 0
 17002                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17003                           ;I2C1_MasterWrite@pdata stored from wreg
 17004  110E  0140               	movlb	0	; select bank0
 17005  110F  00AD               	movwf	I2C1_MasterWrite@pdata
 17006                           
 17007                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 17008  1110  0141               	movlb	1	; select bank1
 17009  1111  1847               	btfsc	(_i2c1_object^(0+128)+2),0
 17010  1112  2931               	goto	l7086
 17011                           
 17012                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 17013  1113  0140               	movlb	0	; select bank0
 17014  1114  082D               	movf	I2C1_MasterWrite@pdata,w
 17015  1115  00AB               	movwf	??_I2C1_MasterWrite
 17016  1116  082B               	movf	??_I2C1_MasterWrite,w
 17017  1117  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 17018  1118  0827               	movf	I2C1_MasterWrite@length,w
 17019  1119  00AC               	movwf	??_I2C1_MasterWrite+1
 17020  111A  082C               	movf	??_I2C1_MasterWrite+1,w
 17021  111B  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 17022  111C  0829               	movf	I2C1_MasterWrite@address+1,w
 17023  111D  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 17024  111E  0828               	movf	I2C1_MasterWrite@address,w
 17025  111F  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 17026  1120  3059               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 17027  1121  3190  2057  3191   	fcall	_I2C1_MasterWriteTRBBuild
 17028                           
 17029                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 17030  1124  3059               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 17031  1125  0140               	movlb	0	; select bank0
 17032  1126  00AB               	movwf	??_I2C1_MasterWrite
 17033  1127  082B               	movf	??_I2C1_MasterWrite,w
 17034  1128  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 17035  1129  082A               	movf	I2C1_MasterWrite@pflag,w
 17036  112A  00AC               	movwf	??_I2C1_MasterWrite+1
 17037  112B  082C               	movf	??_I2C1_MasterWrite+1,w
 17038  112C  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 17039  112D  3001               	movlw	1
 17040  112E  3194  2428         	fcall	_I2C1_MasterTRBInsert
 17041                           
 17042                           ;mcc_generated_files/i2c1.c: 613:     }
 17043  1130  0008               	return
 17044  1131                     l7086:	
 17045                           
 17046                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 17047  1131  0140               	movlb	0	; select bank0
 17048  1132  082A               	movf	I2C1_MasterWrite@pflag,w
 17049  1133  0086               	movwf	6
 17050  1134  0187               	clrf	7
 17051  1135  0181               	clrf	1
 17052  1136  0A81               	incf	1,f
 17053  1137  0008               	return
 17054  1138                     __end_of_I2C1_MasterWrite:	
 17055                           
 17056                           	psect	text52
 17057  1057                     __ptext52:	
 17058 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 17059 ;; Defined at:
 17060 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;  ptrb            1    wreg     PTR struct .
 17063 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 17064 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 17065 ;;		 -> writeData@data(1), 
 17066 ;;  length          1    1[BANK0 ] unsigned char 
 17067 ;;  address         2    2[BANK0 ] unsigned short 
 17068 ;; Auto vars:     Size  Location     Type
 17069 ;;  ptrb            1    6[BANK0 ] PTR struct .
 17070 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 17071 ;; Return value:  Size  Location     Type
 17072 ;;                  1    wreg      void 
 17073 ;; Registers used:
 17074 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17075 ;; Tracked objects:
 17076 ;;		On entry : 0/0
 17077 ;;		On exit  : 0/0
 17078 ;;		Unchanged: 0/0
 17079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17083 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17084 ;;Total ram usage:        7 bytes
 17085 ;; Hardware stack levels used:    1
 17086 ;; Hardware stack levels required when called:    4
 17087 ;; This function calls:
 17088 ;;		Nothing
 17089 ;; This function is called by:
 17090 ;;		_I2C1_MasterWrite
 17091 ;; This function uses a non-reentrant model
 17092 ;;
 17093                           
 17094                           
 17095                           ;psect for function _I2C1_MasterWriteTRBBuild
 17096  1057                     _I2C1_MasterWriteTRBBuild:	
 17097                           
 17098                           ;incstack = 0
 17099                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 17100                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 17101  1057  0140               	movlb	0	; select bank0
 17102  1058  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 17103                           
 17104                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 17105  1059  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 17106  105A  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 17107  105B  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 17108  105C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 17109  105D  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 17110  105E  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 17111  105F  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 17112  1060  0086               	movwf	6
 17113  1061  3001               	movlw	1	; select bank2/3
 17114  1062  0087               	movwf	7
 17115  1063  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 17116  1064  3FC0               	movwi [0]fsr1
 17117  1065  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 17118  1066  3FC1               	movwi [1]fsr1
 17119                           
 17120                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 17121  1067  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 17122  1068  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 17123  1069  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 17124  106A  3E02               	addlw	2
 17125  106B  0086               	movwf	6
 17126  106C  3001               	movlw	1	; select bank2/3
 17127  106D  0087               	movwf	7
 17128  106E  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 17129  106F  0081               	movwf	1
 17130                           
 17131                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 17132  1070  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 17133  1071  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 17134  1072  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 17135  1073  3E03               	addlw	3
 17136  1074  0086               	movwf	6
 17137  1075  3001               	movlw	1	; select bank2/3
 17138  1076  0087               	movwf	7
 17139  1077  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 17140  1078  0081               	movwf	1
 17141  1079  0008               	return
 17142  107A                     __end_of_I2C1_MasterWriteTRBBuild:	
 17143                           
 17144                           	psect	text53
 17145  1428                     __ptext53:	
 17146 ;; *************** function _I2C1_MasterTRBInsert *****************
 17147 ;; Defined at:
 17148 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;  count           1    wreg     unsigned char 
 17151 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 17152 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 17153 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 17154 ;;		 -> writeData@status(1), 
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;  count           1    3[BANK0 ] unsigned char 
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  1    wreg      void 
 17159 ;; Registers used:
 17160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 0/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17170 ;;Total ram usage:        4 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; Hardware stack levels required when called:    5
 17173 ;; This function calls:
 17174 ;;		_I2C1_WaitForLastPacketToComplete
 17175 ;; This function is called by:
 17176 ;;		_I2C1_MasterWrite
 17177 ;;		_I2C1_MasterRead
 17178 ;; This function uses a non-reentrant model
 17179 ;;
 17180                           
 17181                           
 17182                           ;psect for function _I2C1_MasterTRBInsert
 17183  1428                     _I2C1_MasterTRBInsert:	
 17184                           
 17185                           ;incstack = 0
 17186                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17187                           ;I2C1_MasterTRBInsert@count stored from wreg
 17188  1428  0140               	movlb	0	; select bank0
 17189  1429  00A3               	movwf	I2C1_MasterTRBInsert@count
 17190                           
 17191                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 17192  142A  0141               	movlb	1	; select bank1
 17193  142B  1847               	btfsc	(_i2c1_object^(0+128)+2),0
 17194  142C  2C6A               	goto	l7074
 17195                           
 17196                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 17197  142D  3002               	movlw	2
 17198  142E  0140               	movlb	0	; select bank0
 17199  142F  00A2               	movwf	??_I2C1_MasterTRBInsert
 17200  1430  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 17201  1431  0086               	movwf	6
 17202  1432  0187               	clrf	7
 17203  1433  0822               	movf	??_I2C1_MasterTRBInsert,w
 17204  1434  0081               	movwf	1
 17205                           
 17206                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 17207  1435  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 17208  1436  00A2               	movwf	??_I2C1_MasterTRBInsert
 17209  1437  0141               	movlb	1	; select bank1
 17210  1438  0A45               	incf	_i2c1_object^(0+128),w
 17211  1439  0086               	movwf	6
 17212  143A  3001               	movlw	1	; select bank2/3
 17213  143B  0087               	movwf	7
 17214  143C  0140               	movlb	0	; select bank0
 17215  143D  0822               	movf	??_I2C1_MasterTRBInsert,w
 17216  143E  0081               	movwf	1
 17217                           
 17218                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 17219  143F  0823               	movf	I2C1_MasterTRBInsert@count,w
 17220  1440  00A2               	movwf	??_I2C1_MasterTRBInsert
 17221  1441  0141               	movlb	1	; select bank1
 17222  1442  0845               	movf	_i2c1_object^(0+128),w
 17223  1443  0086               	movwf	6
 17224  1444  3001               	movlw	1	; select bank2/3
 17225  1445  0087               	movwf	7
 17226  1446  0140               	movlb	0	; select bank0
 17227  1447  0822               	movf	??_I2C1_MasterTRBInsert,w
 17228  1448  0081               	movwf	1
 17229                           
 17230                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 17231  1449  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 17232  144A  00A2               	movwf	??_I2C1_MasterTRBInsert
 17233  144B  0141               	movlb	1	; select bank1
 17234  144C  0845               	movf	_i2c1_object^(0+128),w
 17235  144D  3E02               	addlw	2
 17236  144E  0086               	movwf	6
 17237  144F  3001               	movlw	1	; select bank2/3
 17238  1450  0087               	movwf	7
 17239  1451  0140               	movlb	0	; select bank0
 17240  1452  0822               	movf	??_I2C1_MasterTRBInsert,w
 17241  1453  0081               	movwf	1
 17242                           
 17243                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 17244  1454  3003               	movlw	3
 17245  1455  00A2               	movwf	??_I2C1_MasterTRBInsert
 17246  1456  0822               	movf	??_I2C1_MasterTRBInsert,w
 17247  1457  0141               	movlb	1	; select bank1
 17248  1458  07C5               	addwf	_i2c1_object^(0+128),f
 17249                           
 17250                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 17251  1459  0845               	movf	_i2c1_object^(0+128),w
 17252  145A  3A60               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 17253  145B  1D03               	skipz
 17254  145C  2C63               	goto	l7070
 17255                           
 17256                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 17257  145D  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 17258  145E  0140               	movlb	0	; select bank0
 17259  145F  00A2               	movwf	??_I2C1_MasterTRBInsert
 17260  1460  0822               	movf	??_I2C1_MasterTRBInsert,w
 17261  1461  0141               	movlb	1	; select bank1
 17262  1462  00C5               	movwf	_i2c1_object^(0+128)
 17263  1463                     l7070:	
 17264                           
 17265                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 17266  1463  10C7               	bcf	(_i2c1_object^(0+128)+2),1
 17267                           
 17268                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 17269  1464  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 17270  1465  0645               	xorwf	_i2c1_object^(0+128),w
 17271  1466  1D03               	skipz
 17272  1467  2C70               	goto	l7076
 17273                           
 17274                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 17275  1468  1447               	bsf	(_i2c1_object^(0+128)+2),0
 17276  1469  2C70               	goto	l7076
 17277  146A                     l7074:	
 17278                           
 17279                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 17280  146A  0140               	movlb	0	; select bank0
 17281  146B  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 17282  146C  0086               	movwf	6
 17283  146D  0187               	clrf	7
 17284  146E  0181               	clrf	1
 17285  146F  0A81               	incf	1,f
 17286  1470                     l7076:	
 17287                           
 17288                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 17289  1470  0140               	movlb	0	; select bank0
 17290  1471  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 17291  1472  0086               	movwf	6
 17292  1473  0187               	clrf	7
 17293  1474  3002               	movlw	2
 17294  1475  0601               	xorwf	1,w
 17295  1476  1D03               	btfss	3,2
 17296  1477  0008               	return
 17297                           
 17298                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 17299  1478  319D  2524         	fcall	_I2C1_WaitForLastPacketToComplete
 17300                           
 17301                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 17302  147A  014E               	movlb	14	; select bank14
 17303  147B  140F               	bsf	15,0	;volatile
 17304  147C  0008               	return
 17305  147D                     __end_of_I2C1_MasterTRBInsert:	
 17306                           
 17307                           	psect	text54
 17308  1D24                     __ptext54:	
 17309 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 17310 ;; Defined at:
 17311 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 17312 ;; Parameters:    Size  Location     Type
 17313 ;;		None
 17314 ;; Auto vars:     Size  Location     Type
 17315 ;;		None
 17316 ;; Return value:  Size  Location     Type
 17317 ;;                  1    wreg      void 
 17318 ;; Registers used:
 17319 ;;		wreg, status,2, status,0
 17320 ;; Tracked objects:
 17321 ;;		On entry : 0/0
 17322 ;;		On exit  : 0/0
 17323 ;;		Unchanged: 0/0
 17324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17329 ;;Total ram usage:        0 bytes
 17330 ;; Hardware stack levels used:    1
 17331 ;; Hardware stack levels required when called:    4
 17332 ;; This function calls:
 17333 ;;		Nothing
 17334 ;; This function is called by:
 17335 ;;		_I2C1_MasterTRBInsert
 17336 ;; This function uses a non-reentrant model
 17337 ;;
 17338                           
 17339                           
 17340                           ;psect for function _I2C1_WaitForLastPacketToComplete
 17341  1D24                     _I2C1_WaitForLastPacketToComplete:	
 17342  1D24                     l7056:	
 17343                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 17344                           
 17345                           ;incstack = 0
 17346                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 17347                           
 17348                           
 17349                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 17350  1D24  0141               	movlb	1	; select bank1
 17351  1D25  0865               	movf	_i2c1_state^(0+128),w
 17352  1D26  1903               	btfsc	3,2
 17353  1D27  0008               	return
 17354  1D28  2D24               	goto	l7056
 17355  1D29                     __end_of_I2C1_WaitForLastPacketToComplete:	
 17356                           
 17357                           	psect	text55
 17358  133D                     __ptext55:	
 17359 ;; *************** function ___awmod *****************
 17360 ;; Defined at:
 17361 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 17362 ;; Parameters:    Size  Location     Type
 17363 ;;  divisor         2    9[BANK0 ] int 
 17364 ;;  dividend        2   11[BANK0 ] int 
 17365 ;; Auto vars:     Size  Location     Type
 17366 ;;  sign            1   15[BANK0 ] unsigned char 
 17367 ;;  counter         1   14[BANK0 ] unsigned char 
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  2    9[BANK0 ] int 
 17370 ;; Registers used:
 17371 ;;		wreg, status,2, status,0
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17378 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17380 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17381 ;;Total ram usage:        7 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:    4
 17384 ;; This function calls:
 17385 ;;		Nothing
 17386 ;; This function is called by:
 17387 ;;		_TM1650_fastPrintNum_2digit
 17388 ;; This function uses a non-reentrant model
 17389 ;;
 17390                           
 17391                           
 17392                           ;psect for function ___awmod
 17393  133D                     ___awmod:	
 17394                           
 17395                           ;incstack = 0
 17396                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 17397  133D  0140               	movlb	0	; select bank0
 17398  133E  01AF               	clrf	___awmod@sign
 17399  133F  1FAC               	btfss	___awmod@dividend+1,7
 17400  1340  2B48               	goto	l7774
 17401  1341  09AB               	comf	___awmod@dividend,f
 17402  1342  09AC               	comf	___awmod@dividend+1,f
 17403  1343  0AAB               	incf	___awmod@dividend,f
 17404  1344  1903               	skipnz
 17405  1345  0AAC               	incf	___awmod@dividend+1,f
 17406  1346  01AF               	clrf	___awmod@sign
 17407  1347  0AAF               	incf	___awmod@sign,f
 17408  1348                     l7774:	
 17409  1348  1FAA               	btfss	___awmod@divisor+1,7
 17410  1349  2B4F               	goto	l7778
 17411  134A  09A9               	comf	___awmod@divisor,f
 17412  134B  09AA               	comf	___awmod@divisor+1,f
 17413  134C  0AA9               	incf	___awmod@divisor,f
 17414  134D  1903               	skipnz
 17415  134E  0AAA               	incf	___awmod@divisor+1,f
 17416  134F                     l7778:	
 17417  134F  0829               	movf	___awmod@divisor,w
 17418  1350  042A               	iorwf	___awmod@divisor+1,w
 17419  1351  1903               	btfsc	3,2
 17420  1352  2B76               	goto	l7796
 17421  1353  01AE               	clrf	___awmod@counter
 17422  1354  0AAE               	incf	___awmod@counter,f
 17423  1355                     l7786:	
 17424  1355  1BAA               	btfsc	___awmod@divisor+1,7
 17425  1356  2B61               	goto	l7788
 17426  1357  3001               	movlw	1
 17427  1358                     u7565:	
 17428  1358  35A9               	lslf	___awmod@divisor,f
 17429  1359  0DAA               	rlf	___awmod@divisor+1,f
 17430  135A  0B89               	decfsz	9,f
 17431  135B  2B58               	goto	u7565
 17432  135C  3001               	movlw	1
 17433  135D  00AD               	movwf	??___awmod
 17434  135E  082D               	movf	??___awmod,w
 17435  135F  07AE               	addwf	___awmod@counter,f
 17436  1360  2B55               	goto	l7786
 17437  1361                     l7788:	
 17438  1361  082A               	movf	___awmod@divisor+1,w
 17439  1362  022C               	subwf	___awmod@dividend+1,w
 17440  1363  1D03               	skipz
 17441  1364  2B67               	goto	u7585
 17442  1365  0829               	movf	___awmod@divisor,w
 17443  1366  022B               	subwf	___awmod@dividend,w
 17444  1367                     u7585:	
 17445  1367  1C03               	skipc
 17446  1368  2B6D               	goto	l7792
 17447  1369  0829               	movf	___awmod@divisor,w
 17448  136A  02AB               	subwf	___awmod@dividend,f
 17449  136B  082A               	movf	___awmod@divisor+1,w
 17450  136C  3BAC               	subwfb	___awmod@dividend+1,f
 17451  136D                     l7792:	
 17452  136D  3001               	movlw	1
 17453  136E                     u7595:	
 17454  136E  36AA               	lsrf	___awmod@divisor+1,f
 17455  136F  0CA9               	rrf	___awmod@divisor,f
 17456  1370  0B89               	decfsz	9,f
 17457  1371  2B6E               	goto	u7595
 17458  1372  3001               	movlw	1
 17459  1373  02AE               	subwf	___awmod@counter,f
 17460  1374  1D03               	btfss	3,2
 17461  1375  2B61               	goto	l7788
 17462  1376                     l7796:	
 17463  1376  082F               	movf	___awmod@sign,w
 17464  1377  1903               	btfsc	3,2
 17465  1378  2B7E               	goto	l7800
 17466  1379  09AB               	comf	___awmod@dividend,f
 17467  137A  09AC               	comf	___awmod@dividend+1,f
 17468  137B  0AAB               	incf	___awmod@dividend,f
 17469  137C  1903               	skipnz
 17470  137D  0AAC               	incf	___awmod@dividend+1,f
 17471  137E                     l7800:	
 17472  137E  082C               	movf	___awmod@dividend+1,w
 17473  137F  00AA               	movwf	?___awmod+1
 17474  1380  082B               	movf	___awmod@dividend,w
 17475  1381  00A9               	movwf	?___awmod
 17476  1382  0008               	return
 17477  1383                     __end_of___awmod:	
 17478                           
 17479                           	psect	text56
 17480  1383                     __ptext56:	
 17481 ;; *************** function ___awdiv *****************
 17482 ;; Defined at:
 17483 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 17484 ;; Parameters:    Size  Location     Type
 17485 ;;  divisor         2    0[BANK0 ] int 
 17486 ;;  dividend        2    2[BANK0 ] int 
 17487 ;; Auto vars:     Size  Location     Type
 17488 ;;  quotient        2    7[BANK0 ] int 
 17489 ;;  sign            1    6[BANK0 ] unsigned char 
 17490 ;;  counter         1    5[BANK0 ] unsigned char 
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  2    0[BANK0 ] int 
 17493 ;; Registers used:
 17494 ;;		wreg, status,2, status,0
 17495 ;; Tracked objects:
 17496 ;;		On entry : 0/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17501 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17503 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17504 ;;Total ram usage:        9 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:    4
 17507 ;; This function calls:
 17508 ;;		Nothing
 17509 ;; This function is called by:
 17510 ;;		_TM1650_fastPrintNum_2digit
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514                           
 17515                           ;psect for function ___awdiv
 17516  1383                     ___awdiv:	
 17517                           
 17518                           ;incstack = 0
 17519                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 17520  1383  0140               	movlb	0	; select bank0
 17521  1384  01A6               	clrf	___awdiv@sign
 17522  1385  1FA1               	btfss	___awdiv@divisor+1,7
 17523  1386  2B8E               	goto	l7730
 17524  1387  09A0               	comf	___awdiv@divisor,f
 17525  1388  09A1               	comf	___awdiv@divisor+1,f
 17526  1389  0AA0               	incf	___awdiv@divisor,f
 17527  138A  1903               	skipnz
 17528  138B  0AA1               	incf	___awdiv@divisor+1,f
 17529  138C  01A6               	clrf	___awdiv@sign
 17530  138D  0AA6               	incf	___awdiv@sign,f
 17531  138E                     l7730:	
 17532  138E  1FA3               	btfss	___awdiv@dividend+1,7
 17533  138F  2B99               	goto	l7736
 17534  1390  09A2               	comf	___awdiv@dividend,f
 17535  1391  09A3               	comf	___awdiv@dividend+1,f
 17536  1392  0AA2               	incf	___awdiv@dividend,f
 17537  1393  1903               	skipnz
 17538  1394  0AA3               	incf	___awdiv@dividend+1,f
 17539  1395  3001               	movlw	1
 17540  1396  00A4               	movwf	??___awdiv
 17541  1397  0824               	movf	??___awdiv,w
 17542  1398  06A6               	xorwf	___awdiv@sign,f
 17543  1399                     l7736:	
 17544  1399  01A7               	clrf	___awdiv@quotient
 17545  139A  01A8               	clrf	___awdiv@quotient+1
 17546  139B  0820               	movf	___awdiv@divisor,w
 17547  139C  0421               	iorwf	___awdiv@divisor+1,w
 17548  139D  1903               	btfsc	3,2
 17549  139E  2BC8               	goto	l7758
 17550  139F  01A5               	clrf	___awdiv@counter
 17551  13A0  0AA5               	incf	___awdiv@counter,f
 17552  13A1                     l7746:	
 17553  13A1  1BA1               	btfsc	___awdiv@divisor+1,7
 17554  13A2  2BAD               	goto	l7748
 17555  13A3  3001               	movlw	1
 17556  13A4                     u7465:	
 17557  13A4  35A0               	lslf	___awdiv@divisor,f
 17558  13A5  0DA1               	rlf	___awdiv@divisor+1,f
 17559  13A6  0B89               	decfsz	9,f
 17560  13A7  2BA4               	goto	u7465
 17561  13A8  3001               	movlw	1
 17562  13A9  00A4               	movwf	??___awdiv
 17563  13AA  0824               	movf	??___awdiv,w
 17564  13AB  07A5               	addwf	___awdiv@counter,f
 17565  13AC  2BA1               	goto	l7746
 17566  13AD                     l7748:	
 17567  13AD  3001               	movlw	1
 17568  13AE                     u7485:	
 17569  13AE  35A7               	lslf	___awdiv@quotient,f
 17570  13AF  0DA8               	rlf	___awdiv@quotient+1,f
 17571  13B0  0B89               	decfsz	9,f
 17572  13B1  2BAE               	goto	u7485
 17573  13B2  0821               	movf	___awdiv@divisor+1,w
 17574  13B3  0223               	subwf	___awdiv@dividend+1,w
 17575  13B4  1D03               	skipz
 17576  13B5  2BB8               	goto	u7495
 17577  13B6  0820               	movf	___awdiv@divisor,w
 17578  13B7  0222               	subwf	___awdiv@dividend,w
 17579  13B8                     u7495:	
 17580  13B8  1C03               	skipc
 17581  13B9  2BBF               	goto	l7754
 17582  13BA  0820               	movf	___awdiv@divisor,w
 17583  13BB  02A2               	subwf	___awdiv@dividend,f
 17584  13BC  0821               	movf	___awdiv@divisor+1,w
 17585  13BD  3BA3               	subwfb	___awdiv@dividend+1,f
 17586  13BE  1427               	bsf	___awdiv@quotient,0
 17587  13BF                     l7754:	
 17588  13BF  3001               	movlw	1
 17589  13C0                     u7505:	
 17590  13C0  36A1               	lsrf	___awdiv@divisor+1,f
 17591  13C1  0CA0               	rrf	___awdiv@divisor,f
 17592  13C2  0B89               	decfsz	9,f
 17593  13C3  2BC0               	goto	u7505
 17594  13C4  3001               	movlw	1
 17595  13C5  02A5               	subwf	___awdiv@counter,f
 17596  13C6  1D03               	btfss	3,2
 17597  13C7  2BAD               	goto	l7748
 17598  13C8                     l7758:	
 17599  13C8  0826               	movf	___awdiv@sign,w
 17600  13C9  1903               	btfsc	3,2
 17601  13CA  2BD0               	goto	l7762
 17602  13CB  09A7               	comf	___awdiv@quotient,f
 17603  13CC  09A8               	comf	___awdiv@quotient+1,f
 17604  13CD  0AA7               	incf	___awdiv@quotient,f
 17605  13CE  1903               	skipnz
 17606  13CF  0AA8               	incf	___awdiv@quotient+1,f
 17607  13D0                     l7762:	
 17608  13D0  0828               	movf	___awdiv@quotient+1,w
 17609  13D1  00A1               	movwf	?___awdiv+1
 17610  13D2  0827               	movf	___awdiv@quotient,w
 17611  13D3  00A0               	movwf	?___awdiv
 17612  13D4  0008               	return
 17613  13D5                     __end_of___awdiv:	
 17614                           
 17615                           	psect	text57
 17616  0CE1                     __ptext57:	
 17617 ;; *************** function _LED_task_BEAT_STROBE *****************
 17618 ;; Defined at:
 17619 ;;		line 100 in file "led.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;		None
 17622 ;; Auto vars:     Size  Location     Type
 17623 ;;  beatState       1   79[BANK0 ] _Bool 
 17624 ;; Return value:  Size  Location     Type
 17625 ;;                  1    wreg      void 
 17626 ;; Registers used:
 17627 ;;		wreg, status,2, status,0, pclath, cstack
 17628 ;; Tracked objects:
 17629 ;;		On entry : 0/0
 17630 ;;		On exit  : 0/0
 17631 ;;		Unchanged: 0/0
 17632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17635 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17636 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17637 ;;Total ram usage:        3 bytes
 17638 ;; Hardware stack levels used:    1
 17639 ;; Hardware stack levels required when called:    8
 17640 ;; This function calls:
 17641 ;;		_BEAT_detected
 17642 ;;		_CLOCK_getTime
 17643 ;;		_LED_setColor
 17644 ;;		_beatColorCreator
 17645 ;; This function is called by:
 17646 ;;		_CONTROL_BEAT
 17647 ;;		_LED_task
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           
 17652                           ;psect for function _LED_task_BEAT_STROBE
 17653  0CE1                     _LED_task_BEAT_STROBE:	
 17654                           
 17655                           ;led.c: 102:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 17656                           
 17657                           ;incstack = 0
 17658                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 17659  0CE1  319D  2560  318C   	fcall	_CLOCK_getTime
 17660  0CE4  0142               	movlb	2	; select bank2
 17661  0CE5  0828               	movf	_lastLedActiveTime^(0+256),w
 17662  0CE6  0140               	movlb	0	; select bank0
 17663  0CE7  0220               	subwf	?_CLOCK_getTime,w
 17664  0CE8  0141               	movlb	1	; select bank1
 17665  0CE9  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 17666  0CEA  0142               	movlb	2	; select bank2
 17667  0CEB  0829               	movf	(_lastLedActiveTime+1)^(0+256),w
 17668  0CEC  0140               	movlb	0	; select bank0
 17669  0CED  3B21               	subwfb	?_CLOCK_getTime+1,w
 17670  0CEE  0141               	movlb	1	; select bank1
 17671  0CEF  00BF               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 17672  0CF0  3000               	movlw	0
 17673  0CF1  023F               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 17674  0CF2  3032               	movlw	50
 17675  0CF3  1903               	skipnz
 17676  0CF4  023E               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 17677  0CF5  1C03               	btfss	3,0
 17678  0CF6  0008               	return
 17679                           
 17680                           ;led.c: 106:     lastLedActiveTime = CLOCK_getTime();
 17681  0CF7  319D  2560  318C   	fcall	_CLOCK_getTime
 17682  0CFA  0140               	movlb	0	; select bank0
 17683  0CFB  0821               	movf	?_CLOCK_getTime+1,w
 17684  0CFC  0142               	movlb	2	; select bank2
 17685  0CFD  00A9               	movwf	(_lastLedActiveTime+1)^(0+256)
 17686  0CFE  0140               	movlb	0	; select bank0
 17687  0CFF  0820               	movf	?_CLOCK_getTime,w
 17688  0D00  0142               	movlb	2	; select bank2
 17689  0D01  00A8               	movwf	_lastLedActiveTime^(0+256)
 17690                           
 17691                           ;led.c: 108:     LATC5 = 0;
 17692  0D02  0140               	movlb	0	; select bank0
 17693  0D03  129A               	bcf	26,5	;volatile
 17694                           
 17695                           ;led.c: 109:     _Bool beatState = BEAT_detected();
 17696  0D04  319D  2572  318C   	fcall	_BEAT_detected
 17697  0D07  0141               	movlb	1	; select bank1
 17698  0D08  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 17699  0D09  083E               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 17700  0D0A  0140               	movlb	0	; select bank0
 17701  0D0B  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 17702                           
 17703                           ;led.c: 111:     if (beatState) {
 17704  0D0C  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 17705  0D0D  1D03               	btfss	3,2
 17706                           
 17707                           ;led.c: 112:         LATC5 = 1;
 17708  0D0E  169A               	bsf	26,5	;volatile
 17709                           
 17710                           ;led.c: 115:      if(!beatState){
 17711  0D0F  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 17712  0D10  1D03               	btfss	3,2
 17713  0D11  2D26               	goto	l9520
 17714                           
 17715                           ;led.c: 116:          LED_setColor(beatColorCreator(0,0,0,0));
 17716  0D12  0141               	movlb	1	; select bank1
 17717  0D13  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17718  0D14  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17719  0D15  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 17720  0D16  3000               	movlw	0
 17721  0D17  3188  204E  318C   	fcall	_beatColorCreator
 17722  0D1A  0141               	movlb	1	; select bank1
 17723  0D1B  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 17724  0D1C  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 17725  0D1D  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 17726  0D1E  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 17727  0D1F  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 17728  0D20  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 17729  0D21  0829               	movf	?_beatColorCreator^(0+128),w
 17730  0D22  00B6               	movwf	LED_setColor@input^(0+128)
 17731  0D23  3186  2618         	fcall	_LED_setColor
 17732                           
 17733                           ;led.c: 117:     } else if (currentState == 1){
 17734  0D25  0008               	return
 17735  0D26                     l9520:	
 17736  0D26  0141               	movlb	1	; select bank1
 17737  0D27  034E               	decf	_currentState^(0+128),w
 17738  0D28  044F               	iorwf	(_currentState+1)^(0+128),w
 17739  0D29  1D03               	btfss	3,2
 17740  0D2A  2D69               	goto	l9526
 17741                           
 17742                           ;led.c: 118:         LED_setColor(beatColorCreator(0,0,0,1));
 17743  0D2B  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17744  0D2C  2D51               	goto	L6
 17745  0D2D                     l9540:	
 17746                           ;led.c: 124:          LED_setColor(beatColorCreator(0,1,1,0));
 17747                           
 17748                           ;led.c: 121:          LED_setColor(beatColorCreator(0,1,0,1));
 17749                           
 17750                           
 17751                           ;led.c: 127:          LED_setColor(beatColorCreator(1,0,1,1));
 17752  0D2D  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17753  0D2E  2D49               	goto	L18
 17754  0D2F                     l9546:	
 17755                           
 17756                           ;led.c: 130:         LED_setColor(beatColorCreator(0,1,1,0));
 17757  0D2F  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17758  0D30  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 17759  0D31  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17760  0D32  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 17761  0D33  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 17762  0D34  2D54               	goto	L7
 17763  0D35                     l9552:	
 17764                           
 17765                           ;led.c: 133:         LED_setColor(beatColorCreator(1,1,1,0));
 17766  0D35  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17767  0D36  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 17768  0D37  2D40               	goto	L15
 17769  0D38                     l9558:	
 17770                           
 17771                           ;led.c: 136:         LED_setColor(beatColorCreator(1,1,0,1));
 17772  0D38  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17773  0D39  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 17774  0D3A  2D45               	goto	L17
 17775  0D3B                     l9570:	
 17776                           ;led.c: 139:          LED_setColor(beatColorCreator(0,1,0,1));
 17777                           
 17778                           
 17779                           ;led.c: 142:          LED_setColor(beatColorCreator(0,0,1,1));
 17780  0D3B  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17781  0D3C  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17782  0D3D  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 17783  0D3E  2D52               	goto	L14
 17784  0D3F                     l9576:	
 17785                           
 17786                           ;led.c: 145:          LED_setColor(beatColorCreator(1,0,1,0));
 17787  0D3F  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17788  0D40                     L15:	
 17789  0D40  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17790  0D41  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 17791  0D42  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 17792  0D43  2D4D               	goto	L13
 17793  0D44                     l9582:	
 17794                           
 17795                           ;led.c: 148:         LED_setColor(beatColorCreator(1,0,0,1));
 17796  0D44  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17797  0D45                     L17:	
 17798  0D45  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17799  0D46  2D4B               	goto	L16
 17800  0D47                     l9588:	
 17801                           
 17802                           ;led.c: 151:         LED_setColor(beatColorCreator(1,1,1,1));
 17803  0D47  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17804  0D48  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 17805  0D49                     L18:	
 17806  0D49  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17807  0D4A  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 17808  0D4B                     L16:	
 17809  0D4B  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 17810  0D4C  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 17811  0D4D                     L13:	
 17812  0D4D  3001               	movlw	1
 17813  0D4E  2D55               	goto	L8
 17814  0D4F                     l9594:	
 17815                           
 17816                           ;led.c: 154:         LED_setColor(beatColorCreator(0,1,0,1));
 17817  0D4F  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17818  0D50  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 17819  0D51                     L6:	
 17820  0D51  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17821  0D52                     L14:	
 17822  0D52  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 17823  0D53  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 17824  0D54                     L7:	
 17825  0D54  3000               	movlw	0
 17826  0D55                     L8:	
 17827  0D55  3188  204E  318C   	fcall	_beatColorCreator
 17828  0D58  0141               	movlb	1	; select bank1
 17829  0D59  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 17830  0D5A  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 17831  0D5B  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 17832  0D5C  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 17833  0D5D  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 17834  0D5E  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 17835  0D5F  0829               	movf	?_beatColorCreator^(0+128),w
 17836  0D60  00B6               	movwf	LED_setColor@input^(0+128)
 17837  0D61  3186  2618         	fcall	_LED_setColor
 17838                           
 17839                           ;led.c: 119:         currentState++;
 17840  0D63  3001               	movlw	1
 17841  0D64  0141               	movlb	1	; select bank1
 17842  0D65  07CE               	addwf	_currentState^(0+128),f
 17843  0D66  3000               	movlw	0
 17844  0D67  3DCF               	addwfc	(_currentState+1)^(0+128),f
 17845                           
 17846                           ;led.c: 120:     } else if(currentState == 2){
 17847  0D68  0008               	return
 17848  0D69                     l9526:	
 17849  0D69  3002               	movlw	2
 17850  0D6A  064E               	xorwf	_currentState^(0+128),w
 17851  0D6B  044F               	iorwf	(_currentState+1)^(0+128),w
 17852  0D6C  1903               	btfsc	3,2
 17853  0D6D  2D4F               	goto	l9594
 17854  0D6E  3003               	movlw	3
 17855  0D6F  064E               	xorwf	_currentState^(0+128),w
 17856  0D70  044F               	iorwf	(_currentState+1)^(0+128),w
 17857  0D71  1903               	btfsc	3,2
 17858  0D72  2D2F               	goto	l9546
 17859  0D73  3004               	movlw	4
 17860  0D74  064E               	xorwf	_currentState^(0+128),w
 17861  0D75  044F               	iorwf	(_currentState+1)^(0+128),w
 17862  0D76  1903               	btfsc	3,2
 17863  0D77  2D2D               	goto	l9540
 17864  0D78  3005               	movlw	5
 17865  0D79  064E               	xorwf	_currentState^(0+128),w
 17866  0D7A  044F               	iorwf	(_currentState+1)^(0+128),w
 17867  0D7B  1903               	btfsc	3,2
 17868  0D7C  2D2F               	goto	l9546
 17869  0D7D  3006               	movlw	6
 17870  0D7E  064E               	xorwf	_currentState^(0+128),w
 17871  0D7F  044F               	iorwf	(_currentState+1)^(0+128),w
 17872  0D80  1903               	btfsc	3,2
 17873  0D81  2D35               	goto	l9552
 17874  0D82  3008               	movlw	8
 17875  0D83  064E               	xorwf	_currentState^(0+128),w
 17876  0D84  044F               	iorwf	(_currentState+1)^(0+128),w
 17877  0D85  1903               	btfsc	3,2
 17878  0D86  2D38               	goto	l9558
 17879  0D87  3009               	movlw	9
 17880  0D88  064E               	xorwf	_currentState^(0+128),w
 17881  0D89  044F               	iorwf	(_currentState+1)^(0+128),w
 17882  0D8A  1903               	btfsc	3,2
 17883  0D8B  2D4F               	goto	l9594
 17884  0D8C  300A               	movlw	10
 17885  0D8D  064E               	xorwf	_currentState^(0+128),w
 17886  0D8E  044F               	iorwf	(_currentState+1)^(0+128),w
 17887  0D8F  1903               	btfsc	3,2
 17888  0D90  2D3B               	goto	l9570
 17889  0D91  300B               	movlw	11
 17890  0D92  064E               	xorwf	_currentState^(0+128),w
 17891  0D93  044F               	iorwf	(_currentState+1)^(0+128),w
 17892  0D94  1903               	btfsc	3,2
 17893  0D95  2D3F               	goto	l9576
 17894  0D96  300C               	movlw	12
 17895  0D97  064E               	xorwf	_currentState^(0+128),w
 17896  0D98  044F               	iorwf	(_currentState+1)^(0+128),w
 17897  0D99  1903               	btfsc	3,2
 17898  0D9A  2D44               	goto	l9582
 17899  0D9B  300D               	movlw	13
 17900  0D9C  064E               	xorwf	_currentState^(0+128),w
 17901  0D9D  044F               	iorwf	(_currentState+1)^(0+128),w
 17902  0D9E  1903               	btfsc	3,2
 17903  0D9F  2D47               	goto	l9588
 17904  0DA0  300E               	movlw	14
 17905  0DA1  064E               	xorwf	_currentState^(0+128),w
 17906  0DA2  044F               	iorwf	(_currentState+1)^(0+128),w
 17907  0DA3  1903               	btfsc	3,2
 17908  0DA4  2D4F               	goto	l9594
 17909                           
 17910                           ;led.c: 157:         LED_setColor(beatColorCreator(0,1,1,1));
 17911  0DA5  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 17912  0DA6  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 17913  0DA7  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 17914  0DA8  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 17915  0DA9  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 17916  0DAA  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 17917  0DAB  3000               	movlw	0
 17918  0DAC  3188  204E  318C   	fcall	_beatColorCreator
 17919  0DAF  0141               	movlb	1	; select bank1
 17920  0DB0  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 17921  0DB1  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 17922  0DB2  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 17923  0DB3  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 17924  0DB4  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 17925  0DB5  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 17926  0DB6  0829               	movf	?_beatColorCreator^(0+128),w
 17927  0DB7  00B6               	movwf	LED_setColor@input^(0+128)
 17928  0DB8  3186  2618         	fcall	_LED_setColor
 17929                           
 17930                           ;led.c: 158:         currentState = 1;
 17931  0DBA  3001               	movlw	1
 17932  0DBB  0141               	movlb	1	; select bank1
 17933  0DBC  00CE               	movwf	_currentState^(0+128)
 17934  0DBD  3000               	movlw	0
 17935  0DBE  00CF               	movwf	(_currentState^(0+128)+1)
 17936  0DBF  0008               	return
 17937  0DC0                     __end_of_LED_task_BEAT_STROBE:	
 17938                           
 17939                           	psect	text58
 17940  084E                     __ptext58:	
 17941 ;; *************** function _beatColorCreator *****************
 17942 ;; Defined at:
 17943 ;;		line 178 in file "led.c"
 17944 ;; Parameters:    Size  Location     Type
 17945 ;;  inRed           1    wreg     _Bool 
 17946 ;;  inGreen         1    9[BANK1 ] _Bool 
 17947 ;;  inBlue          1   10[BANK1 ] _Bool 
 17948 ;;  inWhite         1   11[BANK1 ] _Bool 
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;  inRed           1   13[BANK1 ] _Bool 
 17951 ;;  tempColor       4   18[BANK1 ] struct .
 17952 ;; Return value:  Size  Location     Type
 17953 ;;                  4    9[BANK1 ] struct .
 17954 ;; Registers used:
 17955 ;;		wreg, status,2, status,0, pclath, cstack
 17956 ;; Tracked objects:
 17957 ;;		On entry : 0/0
 17958 ;;		On exit  : 0/0
 17959 ;;		Unchanged: 0/0
 17960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17961 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17962 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17964 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17965 ;;Total ram usage:       14 bytes
 17966 ;; Hardware stack levels used:    1
 17967 ;; Hardware stack levels required when called:    7
 17968 ;; This function calls:
 17969 ;;		___fltol
 17970 ;;		_beatBrightnessCalculation
 17971 ;; This function is called by:
 17972 ;;		_LED_task
 17973 ;;		_LED_task_BEAT_STROBE
 17974 ;; This function uses a non-reentrant model
 17975 ;;
 17976                           
 17977                           
 17978                           ;psect for function _beatColorCreator
 17979  084E                     _beatColorCreator:	
 17980                           
 17981                           ;incstack = 0
 17982                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 17983                           ;beatColorCreator@inRed stored from wreg
 17984  084E  0141               	movlb	1	; select bank1
 17985  084F  00AD               	movwf	beatColorCreator@inRed^(0+128)
 17986                           
 17987                           ;led.c: 179:     color_t tempColor;;led.c: 181:     if(inRed)
 17988  0850  082D               	movf	beatColorCreator@inRed^(0+128),w
 17989  0851  1903               	btfsc	3,2
 17990  0852  2878               	goto	l9474
 17991                           
 17992                           ;led.c: 182:         tempColor.red = beatBrightnessCalculation();
 17993  0853  3187  277B  3188   	fcall	_beatBrightnessCalculation
 17994  0856  0141               	movlb	1	; select bank1
 17995  0857  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 17996  0858  00B1               	movwf	(_beatColorCreator$4107+3)^(0+128)
 17997  0859  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 17998  085A  00B0               	movwf	(_beatColorCreator$4107+2)^(0+128)
 17999  085B  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18000  085C  00AF               	movwf	(_beatColorCreator$4107+1)^(0+128)
 18001  085D  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18002  085E  00AE               	movwf	_beatColorCreator$4107^(0+128)
 18003                           
 18004                           ;led.c: 182:         tempColor.red = beatBrightnessCalculation();
 18005  085F  0831               	movf	(_beatColorCreator$4107+3)^(0+128),w
 18006  0860  0140               	movlb	0	; select bank0
 18007  0861  00E5               	movwf	___fltol@f1+3
 18008  0862  0141               	movlb	1	; select bank1
 18009  0863  0830               	movf	(_beatColorCreator$4107+2)^(0+128),w
 18010  0864  0140               	movlb	0	; select bank0
 18011  0865  00E4               	movwf	___fltol@f1+2
 18012  0866  0141               	movlb	1	; select bank1
 18013  0867  082F               	movf	(_beatColorCreator$4107+1)^(0+128),w
 18014  0868  0140               	movlb	0	; select bank0
 18015  0869  00E3               	movwf	___fltol@f1+1
 18016  086A  0141               	movlb	1	; select bank1
 18017  086B  082E               	movf	_beatColorCreator$4107^(0+128),w
 18018  086C  0140               	movlb	0	; select bank0
 18019  086D  00E2               	movwf	___fltol@f1
 18020  086E  3194  24E1  3188   	fcall	___fltol
 18021  0871  0140               	movlb	0	; select bank0
 18022  0872  0862               	movf	?___fltol,w
 18023  0873  00EE               	movwf	??_beatColorCreator
 18024  0874  086E               	movf	??_beatColorCreator,w
 18025  0875  0141               	movlb	1	; select bank1
 18026  0876  00B3               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 18027  0877  2879               	goto	l9476
 18028  0878                     l9474:	
 18029                           
 18030                           ;led.c: 184:         tempColor.red = 0;
 18031  0878  01B3               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 18032  0879                     l9476:	
 18033                           
 18034                           ;led.c: 186:     if(inBlue)
 18035  0879  082A               	movf	beatColorCreator@inBlue^(0+128),w
 18036  087A  1903               	btfsc	3,2
 18037  087B  28A1               	goto	l9480
 18038                           
 18039                           ;led.c: 187:         tempColor.blue = beatBrightnessCalculation();
 18040  087C  3187  277B  3188   	fcall	_beatBrightnessCalculation
 18041  087F  0141               	movlb	1	; select bank1
 18042  0880  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18043  0881  00B1               	movwf	(_beatColorCreator$4107+3)^(0+128)
 18044  0882  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18045  0883  00B0               	movwf	(_beatColorCreator$4107+2)^(0+128)
 18046  0884  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18047  0885  00AF               	movwf	(_beatColorCreator$4107+1)^(0+128)
 18048  0886  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18049  0887  00AE               	movwf	_beatColorCreator$4107^(0+128)
 18050                           
 18051                           ;led.c: 187:         tempColor.blue = beatBrightnessCalculation();
 18052  0888  0831               	movf	(_beatColorCreator$4107+3)^(0+128),w
 18053  0889  0140               	movlb	0	; select bank0
 18054  088A  00E5               	movwf	___fltol@f1+3
 18055  088B  0141               	movlb	1	; select bank1
 18056  088C  0830               	movf	(_beatColorCreator$4107+2)^(0+128),w
 18057  088D  0140               	movlb	0	; select bank0
 18058  088E  00E4               	movwf	___fltol@f1+2
 18059  088F  0141               	movlb	1	; select bank1
 18060  0890  082F               	movf	(_beatColorCreator$4107+1)^(0+128),w
 18061  0891  0140               	movlb	0	; select bank0
 18062  0892  00E3               	movwf	___fltol@f1+1
 18063  0893  0141               	movlb	1	; select bank1
 18064  0894  082E               	movf	_beatColorCreator$4107^(0+128),w
 18065  0895  0140               	movlb	0	; select bank0
 18066  0896  00E2               	movwf	___fltol@f1
 18067  0897  3194  24E1  3188   	fcall	___fltol
 18068  089A  0140               	movlb	0	; select bank0
 18069  089B  0862               	movf	?___fltol,w
 18070  089C  00EE               	movwf	??_beatColorCreator
 18071  089D  086E               	movf	??_beatColorCreator,w
 18072  089E  0141               	movlb	1	; select bank1
 18073  089F  00B5               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 18074  08A0  28A2               	goto	l9482
 18075  08A1                     l9480:	
 18076                           
 18077                           ;led.c: 189:         tempColor.blue = 0;
 18078  08A1  01B5               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 18079  08A2                     l9482:	
 18080                           
 18081                           ;led.c: 191:     if(inGreen)
 18082  08A2  0829               	movf	beatColorCreator@inGreen^(0+128),w
 18083  08A3  1903               	btfsc	3,2
 18084  08A4  28CA               	goto	l9486
 18085                           
 18086                           ;led.c: 192:         tempColor.green = beatBrightnessCalculation();
 18087  08A5  3187  277B  3188   	fcall	_beatBrightnessCalculation
 18088  08A8  0141               	movlb	1	; select bank1
 18089  08A9  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18090  08AA  00B1               	movwf	(_beatColorCreator$4107+3)^(0+128)
 18091  08AB  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18092  08AC  00B0               	movwf	(_beatColorCreator$4107+2)^(0+128)
 18093  08AD  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18094  08AE  00AF               	movwf	(_beatColorCreator$4107+1)^(0+128)
 18095  08AF  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18096  08B0  00AE               	movwf	_beatColorCreator$4107^(0+128)
 18097                           
 18098                           ;led.c: 192:         tempColor.green = beatBrightnessCalculation();
 18099  08B1  0831               	movf	(_beatColorCreator$4107+3)^(0+128),w
 18100  08B2  0140               	movlb	0	; select bank0
 18101  08B3  00E5               	movwf	___fltol@f1+3
 18102  08B4  0141               	movlb	1	; select bank1
 18103  08B5  0830               	movf	(_beatColorCreator$4107+2)^(0+128),w
 18104  08B6  0140               	movlb	0	; select bank0
 18105  08B7  00E4               	movwf	___fltol@f1+2
 18106  08B8  0141               	movlb	1	; select bank1
 18107  08B9  082F               	movf	(_beatColorCreator$4107+1)^(0+128),w
 18108  08BA  0140               	movlb	0	; select bank0
 18109  08BB  00E3               	movwf	___fltol@f1+1
 18110  08BC  0141               	movlb	1	; select bank1
 18111  08BD  082E               	movf	_beatColorCreator$4107^(0+128),w
 18112  08BE  0140               	movlb	0	; select bank0
 18113  08BF  00E2               	movwf	___fltol@f1
 18114  08C0  3194  24E1  3188   	fcall	___fltol
 18115  08C3  0140               	movlb	0	; select bank0
 18116  08C4  0862               	movf	?___fltol,w
 18117  08C5  00EE               	movwf	??_beatColorCreator
 18118  08C6  086E               	movf	??_beatColorCreator,w
 18119  08C7  0141               	movlb	1	; select bank1
 18120  08C8  00B4               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 18121  08C9  28CB               	goto	l9488
 18122  08CA                     l9486:	
 18123                           
 18124                           ;led.c: 194:         tempColor.green = 0;
 18125  08CA  01B4               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 18126  08CB                     l9488:	
 18127                           
 18128                           ;led.c: 196:     if(inWhite)
 18129  08CB  082B               	movf	beatColorCreator@inWhite^(0+128),w
 18130  08CC  1903               	btfsc	3,2
 18131  08CD  28F3               	goto	l9492
 18132                           
 18133                           ;led.c: 197:         tempColor.white = beatBrightnessCalculation();
 18134  08CE  3187  277B  3188   	fcall	_beatBrightnessCalculation
 18135  08D1  0141               	movlb	1	; select bank1
 18136  08D2  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18137  08D3  00B1               	movwf	(_beatColorCreator$4107+3)^(0+128)
 18138  08D4  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18139  08D5  00B0               	movwf	(_beatColorCreator$4107+2)^(0+128)
 18140  08D6  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18141  08D7  00AF               	movwf	(_beatColorCreator$4107+1)^(0+128)
 18142  08D8  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18143  08D9  00AE               	movwf	_beatColorCreator$4107^(0+128)
 18144                           
 18145                           ;led.c: 197:         tempColor.white = beatBrightnessCalculation();
 18146  08DA  0831               	movf	(_beatColorCreator$4107+3)^(0+128),w
 18147  08DB  0140               	movlb	0	; select bank0
 18148  08DC  00E5               	movwf	___fltol@f1+3
 18149  08DD  0141               	movlb	1	; select bank1
 18150  08DE  0830               	movf	(_beatColorCreator$4107+2)^(0+128),w
 18151  08DF  0140               	movlb	0	; select bank0
 18152  08E0  00E4               	movwf	___fltol@f1+2
 18153  08E1  0141               	movlb	1	; select bank1
 18154  08E2  082F               	movf	(_beatColorCreator$4107+1)^(0+128),w
 18155  08E3  0140               	movlb	0	; select bank0
 18156  08E4  00E3               	movwf	___fltol@f1+1
 18157  08E5  0141               	movlb	1	; select bank1
 18158  08E6  082E               	movf	_beatColorCreator$4107^(0+128),w
 18159  08E7  0140               	movlb	0	; select bank0
 18160  08E8  00E2               	movwf	___fltol@f1
 18161  08E9  3194  24E1  3188   	fcall	___fltol
 18162  08EC  0140               	movlb	0	; select bank0
 18163  08ED  0862               	movf	?___fltol,w
 18164  08EE  00EE               	movwf	??_beatColorCreator
 18165  08EF  086E               	movf	??_beatColorCreator,w
 18166  08F0  0141               	movlb	1	; select bank1
 18167  08F1  00B2               	movwf	beatColorCreator@tempColor^(0+128)
 18168  08F2  28F4               	goto	l9494
 18169  08F3                     l9492:	
 18170                           
 18171                           ;led.c: 199:         tempColor.white = 0;
 18172  08F3  01B2               	clrf	beatColorCreator@tempColor^(0+128)
 18173  08F4                     l9494:	
 18174                           
 18175                           ;led.c: 201:     return tempColor;
 18176  08F4  0835               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 18177  08F5  00AC               	movwf	(?_beatColorCreator+3)^(0+128)
 18178  08F6  0834               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 18179  08F7  00AB               	movwf	(?_beatColorCreator+2)^(0+128)
 18180  08F8  0833               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 18181  08F9  00AA               	movwf	(?_beatColorCreator+1)^(0+128)
 18182  08FA  0832               	movf	beatColorCreator@tempColor^(0+128),w
 18183  08FB  00A9               	movwf	?_beatColorCreator^(0+128)
 18184  08FC  0008               	return
 18185  08FD                     __end_of_beatColorCreator:	
 18186                           
 18187                           	psect	text59
 18188  077B                     __ptext59:	
 18189 ;; *************** function _beatBrightnessCalculation *****************
 18190 ;; Defined at:
 18191 ;;		line 163 in file "led.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;		None
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;  temp            1   77[BANK0 ] unsigned char 
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  4    0[BANK1 ] float 
 18198 ;; Registers used:
 18199 ;;		wreg, status,2, status,0, pclath, cstack
 18200 ;; Tracked objects:
 18201 ;;		On entry : 0/0
 18202 ;;		On exit  : 0/0
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18205 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18207 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18208 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18209 ;;Total ram usage:       10 bytes
 18210 ;; Hardware stack levels used:    1
 18211 ;; Hardware stack levels required when called:    6
 18212 ;; This function calls:
 18213 ;;		___fldiv
 18214 ;;		___flmul
 18215 ;;		___fltol
 18216 ;;		___xxtofl
 18217 ;; This function is called by:
 18218 ;;		_beatColorCreator
 18219 ;; This function uses a non-reentrant model
 18220 ;;
 18221                           
 18222                           
 18223                           ;psect for function _beatBrightnessCalculation
 18224  077B                     _beatBrightnessCalculation:	
 18225                           
 18226                           ;led.c: 164:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 18227                           
 18228                           ;incstack = 0
 18229                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 18230  077B  0141               	movlb	1	; select bank1
 18231  077C  086E               	movf	_beatBrightness^(0+128),w
 18232  077D  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 18233  077E  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 18234  077F  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 18235  0780  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 18236  0781  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 18237  0782  0140               	movlb	0	; select bank0
 18238  0783  00A3               	movwf	___xxtofl@val+3
 18239  0784  0141               	movlb	1	; select bank1
 18240  0785  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 18241  0786  0140               	movlb	0	; select bank0
 18242  0787  00A2               	movwf	___xxtofl@val+2
 18243  0788  0141               	movlb	1	; select bank1
 18244  0789  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 18245  078A  0140               	movlb	0	; select bank0
 18246  078B  00A1               	movwf	___xxtofl@val+1
 18247  078C  0141               	movlb	1	; select bank1
 18248  078D  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 18249  078E  0140               	movlb	0	; select bank0
 18250  078F  00A0               	movwf	___xxtofl@val
 18251  0790  3001               	movlw	1
 18252  0791  3196  2629  3187   	fcall	___xxtofl
 18253  0794  0140               	movlb	0	; select bank0
 18254  0795  0823               	movf	?___xxtofl+3,w
 18255  0796  00B5               	movwf	___fldiv@b+3
 18256  0797  0822               	movf	?___xxtofl+2,w
 18257  0798  00B4               	movwf	___fldiv@b+2
 18258  0799  0821               	movf	?___xxtofl+1,w
 18259  079A  00B3               	movwf	___fldiv@b+1
 18260  079B  0820               	movf	?___xxtofl,w
 18261  079C  00B2               	movwf	___fldiv@b
 18262  079D  3041               	movlw	65
 18263  079E  00B1               	movwf	___fldiv@a+3
 18264  079F  3010               	movlw	16
 18265  07A0  00B0               	movwf	___fldiv@a+2
 18266  07A1  3000               	movlw	0
 18267  07A2  00AF               	movwf	___fldiv@a+1
 18268  07A3  3000               	movlw	0
 18269  07A4  00AE               	movwf	___fldiv@a
 18270  07A5  3184  249E  3187   	fcall	___fldiv
 18271  07A8  0140               	movlb	0	; select bank0
 18272  07A9  0831               	movf	?___fldiv+3,w
 18273  07AA  00CF               	movwf	___flmul@a+3
 18274  07AB  0830               	movf	?___fldiv+2,w
 18275  07AC  00CE               	movwf	___flmul@a+2
 18276  07AD  082F               	movf	?___fldiv+1,w
 18277  07AE  00CD               	movwf	___flmul@a+1
 18278  07AF  082E               	movf	?___fldiv,w
 18279  07B0  00CC               	movwf	___flmul@a
 18280  07B1  3043               	movlw	67
 18281  07B2  00CB               	movwf	___flmul@b+3
 18282  07B3  307F               	movlw	127
 18283  07B4  00CA               	movwf	___flmul@b+2
 18284  07B5  3000               	movlw	0
 18285  07B6  00C9               	movwf	___flmul@b+1
 18286  07B7  3000               	movlw	0
 18287  07B8  00C8               	movwf	___flmul@b
 18288  07B9  3180  20A5  3187   	fcall	___flmul
 18289  07BC  0140               	movlb	0	; select bank0
 18290  07BD  084B               	movf	?___flmul+3,w
 18291  07BE  00E5               	movwf	___fltol@f1+3
 18292  07BF  084A               	movf	?___flmul+2,w
 18293  07C0  00E4               	movwf	___fltol@f1+2
 18294  07C1  0849               	movf	?___flmul+1,w
 18295  07C2  00E3               	movwf	___fltol@f1+1
 18296  07C3  0848               	movf	?___flmul,w
 18297  07C4  00E2               	movwf	___fltol@f1
 18298  07C5  3194  24E1  3187   	fcall	___fltol
 18299  07C8  0140               	movlb	0	; select bank0
 18300  07C9  0862               	movf	?___fltol,w
 18301  07CA  0141               	movlb	1	; select bank1
 18302  07CB  00A8               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 18303  07CC  0828               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 18304  07CD  0140               	movlb	0	; select bank0
 18305  07CE  00ED               	movwf	beatBrightnessCalculation@temp
 18306                           
 18307                           ;led.c: 165:     return temp;
 18308  07CF  086D               	movf	beatBrightnessCalculation@temp,w
 18309  07D0  0141               	movlb	1	; select bank1
 18310  07D1  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 18311  07D2  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 18312  07D3  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 18313  07D4  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 18314  07D5  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 18315  07D6  0140               	movlb	0	; select bank0
 18316  07D7  00A3               	movwf	___xxtofl@val+3
 18317  07D8  0141               	movlb	1	; select bank1
 18318  07D9  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 18319  07DA  0140               	movlb	0	; select bank0
 18320  07DB  00A2               	movwf	___xxtofl@val+2
 18321  07DC  0141               	movlb	1	; select bank1
 18322  07DD  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 18323  07DE  0140               	movlb	0	; select bank0
 18324  07DF  00A1               	movwf	___xxtofl@val+1
 18325  07E0  0141               	movlb	1	; select bank1
 18326  07E1  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 18327  07E2  0140               	movlb	0	; select bank0
 18328  07E3  00A0               	movwf	___xxtofl@val
 18329  07E4  3000               	movlw	0
 18330  07E5  3196  2629         	fcall	___xxtofl
 18331  07E7  0140               	movlb	0	; select bank0
 18332  07E8  0823               	movf	?___xxtofl+3,w
 18333  07E9  0141               	movlb	1	; select bank1
 18334  07EA  00A3               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 18335  07EB  0140               	movlb	0	; select bank0
 18336  07EC  0822               	movf	?___xxtofl+2,w
 18337  07ED  0141               	movlb	1	; select bank1
 18338  07EE  00A2               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 18339  07EF  0140               	movlb	0	; select bank0
 18340  07F0  0821               	movf	?___xxtofl+1,w
 18341  07F1  0141               	movlb	1	; select bank1
 18342  07F2  00A1               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 18343  07F3  0140               	movlb	0	; select bank0
 18344  07F4  0820               	movf	?___xxtofl,w
 18345  07F5  0141               	movlb	1	; select bank1
 18346  07F6  00A0               	movwf	?_beatBrightnessCalculation^(0+128)
 18347  07F7  0008               	return
 18348  07F8                     __end_of_beatBrightnessCalculation:	
 18349                           
 18350                           	psect	text60
 18351  0618                     __ptext60:	
 18352 ;; *************** function _LED_setColor *****************
 18353 ;; Defined at:
 18354 ;;		line 26 in file "led.c"
 18355 ;; Parameters:    Size  Location     Type
 18356 ;;  input           4   22[BANK1 ] struct .
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;		None
 18359 ;; Return value:  Size  Location     Type
 18360 ;;                  1    wreg      void 
 18361 ;; Registers used:
 18362 ;;		wreg, status,2, status,0, pclath, cstack
 18363 ;; Tracked objects:
 18364 ;;		On entry : 0/0
 18365 ;;		On exit  : 0/0
 18366 ;;		Unchanged: 0/0
 18367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18368 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18370 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18371 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18372 ;;Total ram usage:        8 bytes
 18373 ;; Hardware stack levels used:    1
 18374 ;; Hardware stack levels required when called:    6
 18375 ;; This function calls:
 18376 ;;		_PWM1_LoadDutyValue
 18377 ;;		_PWM2_LoadDutyValue
 18378 ;;		_PWM3_LoadDutyValue
 18379 ;;		_PWM4_LoadDutyValue
 18380 ;;		___fldiv
 18381 ;;		___flmul
 18382 ;;		___fltol
 18383 ;;		___xxtofl
 18384 ;; This function is called by:
 18385 ;;		_LED_task_DMX
 18386 ;;		_LED_task
 18387 ;;		_LED_task_MANUAL
 18388 ;;		_LED_task_BEAT_STROBE
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           
 18393                           ;psect for function _LED_setColor
 18394  0618                     _LED_setColor:	
 18395                           
 18396                           ;led.c: 27:     if(!startup){
 18397                           
 18398                           ;incstack = 0
 18399                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 18400  0618  0141               	movlb	1	; select bank1
 18401  0619  086D               	movf	_startup^(0+128),w
 18402  061A  1D03               	btfss	3,2
 18403  061B  0008               	return
 18404                           
 18405                           ;led.c: 28:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 18406  061C  0837               	movf	(LED_setColor@input^(0+128)+1),w
 18407  061D  00BA               	movwf	??_LED_setColor^(0+128)
 18408  061E  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 18409  061F  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 18410  0620  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 18411  0621  083D               	movf	(??_LED_setColor+3)^(0+128),w
 18412  0622  0140               	movlb	0	; select bank0
 18413  0623  00A3               	movwf	___xxtofl@val+3
 18414  0624  0141               	movlb	1	; select bank1
 18415  0625  083C               	movf	(??_LED_setColor+2)^(0+128),w
 18416  0626  0140               	movlb	0	; select bank0
 18417  0627  00A2               	movwf	___xxtofl@val+2
 18418  0628  0141               	movlb	1	; select bank1
 18419  0629  083B               	movf	(??_LED_setColor+1)^(0+128),w
 18420  062A  0140               	movlb	0	; select bank0
 18421  062B  00A1               	movwf	___xxtofl@val+1
 18422  062C  0141               	movlb	1	; select bank1
 18423  062D  083A               	movf	??_LED_setColor^(0+128),w
 18424  062E  0140               	movlb	0	; select bank0
 18425  062F  00A0               	movwf	___xxtofl@val
 18426  0630  3001               	movlw	1
 18427  0631  3196  2629  3186   	fcall	___xxtofl
 18428  0634  0140               	movlb	0	; select bank0
 18429  0635  0823               	movf	?___xxtofl+3,w
 18430  0636  00B5               	movwf	___fldiv@b+3
 18431  0637  0822               	movf	?___xxtofl+2,w
 18432  0638  00B4               	movwf	___fldiv@b+2
 18433  0639  0821               	movf	?___xxtofl+1,w
 18434  063A  00B3               	movwf	___fldiv@b+1
 18435  063B  0820               	movf	?___xxtofl,w
 18436  063C  00B2               	movwf	___fldiv@b
 18437  063D  3043               	movlw	67
 18438  063E  00B1               	movwf	___fldiv@a+3
 18439  063F  307F               	movlw	127
 18440  0640  00B0               	movwf	___fldiv@a+2
 18441  0641  3000               	movlw	0
 18442  0642  00AF               	movwf	___fldiv@a+1
 18443  0643  3000               	movlw	0
 18444  0644  00AE               	movwf	___fldiv@a
 18445  0645  3184  249E  3186   	fcall	___fldiv
 18446  0648  0140               	movlb	0	; select bank0
 18447  0649  0831               	movf	?___fldiv+3,w
 18448  064A  00CF               	movwf	___flmul@a+3
 18449  064B  0830               	movf	?___fldiv+2,w
 18450  064C  00CE               	movwf	___flmul@a+2
 18451  064D  082F               	movf	?___fldiv+1,w
 18452  064E  00CD               	movwf	___flmul@a+1
 18453  064F  082E               	movf	?___fldiv,w
 18454  0650  00CC               	movwf	___flmul@a
 18455  0651  3042               	movlw	66
 18456  0652  00CB               	movwf	___flmul@b+3
 18457  0653  30FE               	movlw	254
 18458  0654  00CA               	movwf	___flmul@b+2
 18459  0655  3000               	movlw	0
 18460  0656  00C9               	movwf	___flmul@b+1
 18461  0657  3000               	movlw	0
 18462  0658  00C8               	movwf	___flmul@b
 18463  0659  3180  20A5  3186   	fcall	___flmul
 18464  065C  0140               	movlb	0	; select bank0
 18465  065D  084B               	movf	?___flmul+3,w
 18466  065E  00E5               	movwf	___fltol@f1+3
 18467  065F  084A               	movf	?___flmul+2,w
 18468  0660  00E4               	movwf	___fltol@f1+2
 18469  0661  0849               	movf	?___flmul+1,w
 18470  0662  00E3               	movwf	___fltol@f1+1
 18471  0663  0848               	movf	?___flmul,w
 18472  0664  00E2               	movwf	___fltol@f1
 18473  0665  3194  24E1  3186   	fcall	___fltol
 18474  0668  0140               	movlb	0	; select bank0
 18475  0669  0863               	movf	?___fltol+1,w
 18476  066A  0141               	movlb	1	; select bank1
 18477  066B  00A1               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 18478  066C  0140               	movlb	0	; select bank0
 18479  066D  0862               	movf	?___fltol,w
 18480  066E  0141               	movlb	1	; select bank1
 18481  066F  00A0               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 18482  0670  319F  2788  3186   	fcall	_PWM1_LoadDutyValue
 18483                           
 18484                           ;led.c: 29:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 18485  0673  0141               	movlb	1	; select bank1
 18486  0674  0838               	movf	(LED_setColor@input^(0+128)+2),w
 18487  0675  00BA               	movwf	??_LED_setColor^(0+128)
 18488  0676  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 18489  0677  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 18490  0678  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 18491  0679  083D               	movf	(??_LED_setColor+3)^(0+128),w
 18492  067A  0140               	movlb	0	; select bank0
 18493  067B  00A3               	movwf	___xxtofl@val+3
 18494  067C  0141               	movlb	1	; select bank1
 18495  067D  083C               	movf	(??_LED_setColor+2)^(0+128),w
 18496  067E  0140               	movlb	0	; select bank0
 18497  067F  00A2               	movwf	___xxtofl@val+2
 18498  0680  0141               	movlb	1	; select bank1
 18499  0681  083B               	movf	(??_LED_setColor+1)^(0+128),w
 18500  0682  0140               	movlb	0	; select bank0
 18501  0683  00A1               	movwf	___xxtofl@val+1
 18502  0684  0141               	movlb	1	; select bank1
 18503  0685  083A               	movf	??_LED_setColor^(0+128),w
 18504  0686  0140               	movlb	0	; select bank0
 18505  0687  00A0               	movwf	___xxtofl@val
 18506  0688  3001               	movlw	1
 18507  0689  3196  2629  3186   	fcall	___xxtofl
 18508  068C  0140               	movlb	0	; select bank0
 18509  068D  0823               	movf	?___xxtofl+3,w
 18510  068E  00B5               	movwf	___fldiv@b+3
 18511  068F  0822               	movf	?___xxtofl+2,w
 18512  0690  00B4               	movwf	___fldiv@b+2
 18513  0691  0821               	movf	?___xxtofl+1,w
 18514  0692  00B3               	movwf	___fldiv@b+1
 18515  0693  0820               	movf	?___xxtofl,w
 18516  0694  00B2               	movwf	___fldiv@b
 18517  0695  3043               	movlw	67
 18518  0696  00B1               	movwf	___fldiv@a+3
 18519  0697  307F               	movlw	127
 18520  0698  00B0               	movwf	___fldiv@a+2
 18521  0699  3000               	movlw	0
 18522  069A  00AF               	movwf	___fldiv@a+1
 18523  069B  3000               	movlw	0
 18524  069C  00AE               	movwf	___fldiv@a
 18525  069D  3184  249E  3186   	fcall	___fldiv
 18526  06A0  0140               	movlb	0	; select bank0
 18527  06A1  0831               	movf	?___fldiv+3,w
 18528  06A2  00CF               	movwf	___flmul@a+3
 18529  06A3  0830               	movf	?___fldiv+2,w
 18530  06A4  00CE               	movwf	___flmul@a+2
 18531  06A5  082F               	movf	?___fldiv+1,w
 18532  06A6  00CD               	movwf	___flmul@a+1
 18533  06A7  082E               	movf	?___fldiv,w
 18534  06A8  00CC               	movwf	___flmul@a
 18535  06A9  3042               	movlw	66
 18536  06AA  00CB               	movwf	___flmul@b+3
 18537  06AB  30FE               	movlw	254
 18538  06AC  00CA               	movwf	___flmul@b+2
 18539  06AD  3000               	movlw	0
 18540  06AE  00C9               	movwf	___flmul@b+1
 18541  06AF  3000               	movlw	0
 18542  06B0  00C8               	movwf	___flmul@b
 18543  06B1  3180  20A5  3186   	fcall	___flmul
 18544  06B4  0140               	movlb	0	; select bank0
 18545  06B5  084B               	movf	?___flmul+3,w
 18546  06B6  00E5               	movwf	___fltol@f1+3
 18547  06B7  084A               	movf	?___flmul+2,w
 18548  06B8  00E4               	movwf	___fltol@f1+2
 18549  06B9  0849               	movf	?___flmul+1,w
 18550  06BA  00E3               	movwf	___fltol@f1+1
 18551  06BB  0848               	movf	?___flmul,w
 18552  06BC  00E2               	movwf	___fltol@f1
 18553  06BD  3194  24E1  3186   	fcall	___fltol
 18554  06C0  0140               	movlb	0	; select bank0
 18555  06C1  0863               	movf	?___fltol+1,w
 18556  06C2  0141               	movlb	1	; select bank1
 18557  06C3  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 18558  06C4  0140               	movlb	0	; select bank0
 18559  06C5  0862               	movf	?___fltol,w
 18560  06C6  0141               	movlb	1	; select bank1
 18561  06C7  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 18562  06C8  319F  27A6  3186   	fcall	_PWM2_LoadDutyValue
 18563                           
 18564                           ;led.c: 30:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 18565  06CB  0141               	movlb	1	; select bank1
 18566  06CC  0839               	movf	(LED_setColor@input^(0+128)+3),w
 18567  06CD  00BA               	movwf	??_LED_setColor^(0+128)
 18568  06CE  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 18569  06CF  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 18570  06D0  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 18571  06D1  083D               	movf	(??_LED_setColor+3)^(0+128),w
 18572  06D2  0140               	movlb	0	; select bank0
 18573  06D3  00A3               	movwf	___xxtofl@val+3
 18574  06D4  0141               	movlb	1	; select bank1
 18575  06D5  083C               	movf	(??_LED_setColor+2)^(0+128),w
 18576  06D6  0140               	movlb	0	; select bank0
 18577  06D7  00A2               	movwf	___xxtofl@val+2
 18578  06D8  0141               	movlb	1	; select bank1
 18579  06D9  083B               	movf	(??_LED_setColor+1)^(0+128),w
 18580  06DA  0140               	movlb	0	; select bank0
 18581  06DB  00A1               	movwf	___xxtofl@val+1
 18582  06DC  0141               	movlb	1	; select bank1
 18583  06DD  083A               	movf	??_LED_setColor^(0+128),w
 18584  06DE  0140               	movlb	0	; select bank0
 18585  06DF  00A0               	movwf	___xxtofl@val
 18586  06E0  3001               	movlw	1
 18587  06E1  3196  2629  3186   	fcall	___xxtofl
 18588  06E4  0140               	movlb	0	; select bank0
 18589  06E5  0823               	movf	?___xxtofl+3,w
 18590  06E6  00B5               	movwf	___fldiv@b+3
 18591  06E7  0822               	movf	?___xxtofl+2,w
 18592  06E8  00B4               	movwf	___fldiv@b+2
 18593  06E9  0821               	movf	?___xxtofl+1,w
 18594  06EA  00B3               	movwf	___fldiv@b+1
 18595  06EB  0820               	movf	?___xxtofl,w
 18596  06EC  00B2               	movwf	___fldiv@b
 18597  06ED  3043               	movlw	67
 18598  06EE  00B1               	movwf	___fldiv@a+3
 18599  06EF  307F               	movlw	127
 18600  06F0  00B0               	movwf	___fldiv@a+2
 18601  06F1  3000               	movlw	0
 18602  06F2  00AF               	movwf	___fldiv@a+1
 18603  06F3  3000               	movlw	0
 18604  06F4  00AE               	movwf	___fldiv@a
 18605  06F5  3184  249E  3186   	fcall	___fldiv
 18606  06F8  0140               	movlb	0	; select bank0
 18607  06F9  0831               	movf	?___fldiv+3,w
 18608  06FA  00CF               	movwf	___flmul@a+3
 18609  06FB  0830               	movf	?___fldiv+2,w
 18610  06FC  00CE               	movwf	___flmul@a+2
 18611  06FD  082F               	movf	?___fldiv+1,w
 18612  06FE  00CD               	movwf	___flmul@a+1
 18613  06FF  082E               	movf	?___fldiv,w
 18614  0700  00CC               	movwf	___flmul@a
 18615  0701  3042               	movlw	66
 18616  0702  00CB               	movwf	___flmul@b+3
 18617  0703  30FE               	movlw	254
 18618  0704  00CA               	movwf	___flmul@b+2
 18619  0705  3000               	movlw	0
 18620  0706  00C9               	movwf	___flmul@b+1
 18621  0707  3000               	movlw	0
 18622  0708  00C8               	movwf	___flmul@b
 18623  0709  3180  20A5  3186   	fcall	___flmul
 18624  070C  0140               	movlb	0	; select bank0
 18625  070D  084B               	movf	?___flmul+3,w
 18626  070E  00E5               	movwf	___fltol@f1+3
 18627  070F  084A               	movf	?___flmul+2,w
 18628  0710  00E4               	movwf	___fltol@f1+2
 18629  0711  0849               	movf	?___flmul+1,w
 18630  0712  00E3               	movwf	___fltol@f1+1
 18631  0713  0848               	movf	?___flmul,w
 18632  0714  00E2               	movwf	___fltol@f1
 18633  0715  3194  24E1  3186   	fcall	___fltol
 18634  0718  0140               	movlb	0	; select bank0
 18635  0719  0863               	movf	?___fltol+1,w
 18636  071A  0141               	movlb	1	; select bank1
 18637  071B  00A1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 18638  071C  0140               	movlb	0	; select bank0
 18639  071D  0862               	movf	?___fltol,w
 18640  071E  0141               	movlb	1	; select bank1
 18641  071F  00A0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 18642  0720  319F  27C4  3186   	fcall	_PWM3_LoadDutyValue
 18643                           
 18644                           ;led.c: 31:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 18645  0723  0141               	movlb	1	; select bank1
 18646  0724  0836               	movf	LED_setColor@input^(0+128),w
 18647  0725  00BA               	movwf	??_LED_setColor^(0+128)
 18648  0726  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 18649  0727  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 18650  0728  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 18651  0729  083D               	movf	(??_LED_setColor+3)^(0+128),w
 18652  072A  0140               	movlb	0	; select bank0
 18653  072B  00A3               	movwf	___xxtofl@val+3
 18654  072C  0141               	movlb	1	; select bank1
 18655  072D  083C               	movf	(??_LED_setColor+2)^(0+128),w
 18656  072E  0140               	movlb	0	; select bank0
 18657  072F  00A2               	movwf	___xxtofl@val+2
 18658  0730  0141               	movlb	1	; select bank1
 18659  0731  083B               	movf	(??_LED_setColor+1)^(0+128),w
 18660  0732  0140               	movlb	0	; select bank0
 18661  0733  00A1               	movwf	___xxtofl@val+1
 18662  0734  0141               	movlb	1	; select bank1
 18663  0735  083A               	movf	??_LED_setColor^(0+128),w
 18664  0736  0140               	movlb	0	; select bank0
 18665  0737  00A0               	movwf	___xxtofl@val
 18666  0738  3001               	movlw	1
 18667  0739  3196  2629  3186   	fcall	___xxtofl
 18668  073C  0140               	movlb	0	; select bank0
 18669  073D  0823               	movf	?___xxtofl+3,w
 18670  073E  00B5               	movwf	___fldiv@b+3
 18671  073F  0822               	movf	?___xxtofl+2,w
 18672  0740  00B4               	movwf	___fldiv@b+2
 18673  0741  0821               	movf	?___xxtofl+1,w
 18674  0742  00B3               	movwf	___fldiv@b+1
 18675  0743  0820               	movf	?___xxtofl,w
 18676  0744  00B2               	movwf	___fldiv@b
 18677  0745  3043               	movlw	67
 18678  0746  00B1               	movwf	___fldiv@a+3
 18679  0747  307F               	movlw	127
 18680  0748  00B0               	movwf	___fldiv@a+2
 18681  0749  3000               	movlw	0
 18682  074A  00AF               	movwf	___fldiv@a+1
 18683  074B  3000               	movlw	0
 18684  074C  00AE               	movwf	___fldiv@a
 18685  074D  3184  249E  3186   	fcall	___fldiv
 18686  0750  0140               	movlb	0	; select bank0
 18687  0751  0831               	movf	?___fldiv+3,w
 18688  0752  00CF               	movwf	___flmul@a+3
 18689  0753  0830               	movf	?___fldiv+2,w
 18690  0754  00CE               	movwf	___flmul@a+2
 18691  0755  082F               	movf	?___fldiv+1,w
 18692  0756  00CD               	movwf	___flmul@a+1
 18693  0757  082E               	movf	?___fldiv,w
 18694  0758  00CC               	movwf	___flmul@a
 18695  0759  3042               	movlw	66
 18696  075A  00CB               	movwf	___flmul@b+3
 18697  075B  30FE               	movlw	254
 18698  075C  00CA               	movwf	___flmul@b+2
 18699  075D  3000               	movlw	0
 18700  075E  00C9               	movwf	___flmul@b+1
 18701  075F  3000               	movlw	0
 18702  0760  00C8               	movwf	___flmul@b
 18703  0761  3180  20A5  3186   	fcall	___flmul
 18704  0764  0140               	movlb	0	; select bank0
 18705  0765  084B               	movf	?___flmul+3,w
 18706  0766  00E5               	movwf	___fltol@f1+3
 18707  0767  084A               	movf	?___flmul+2,w
 18708  0768  00E4               	movwf	___fltol@f1+2
 18709  0769  0849               	movf	?___flmul+1,w
 18710  076A  00E3               	movwf	___fltol@f1+1
 18711  076B  0848               	movf	?___flmul,w
 18712  076C  00E2               	movwf	___fltol@f1
 18713  076D  3194  24E1  3186   	fcall	___fltol
 18714  0770  0140               	movlb	0	; select bank0
 18715  0771  0863               	movf	?___fltol+1,w
 18716  0772  0141               	movlb	1	; select bank1
 18717  0773  00A1               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 18718  0774  0140               	movlb	0	; select bank0
 18719  0775  0862               	movf	?___fltol,w
 18720  0776  0141               	movlb	1	; select bank1
 18721  0777  00A0               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 18722  0778  319F  27E2         	fcall	_PWM4_LoadDutyValue
 18723  077A  0008               	return
 18724  077B                     __end_of_LED_setColor:	
 18725                           
 18726                           	psect	text61
 18727  1629                     __ptext61:	
 18728 ;; *************** function ___xxtofl *****************
 18729 ;; Defined at:
 18730 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18731 ;; Parameters:    Size  Location     Type
 18732 ;;  sign            1    wreg     unsigned char 
 18733 ;;  val             4    0[BANK0 ] long 
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;  sign            1    8[BANK0 ] unsigned char 
 18736 ;;  arg             4   10[BANK0 ] unsigned long 
 18737 ;;  exp             1    9[BANK0 ] unsigned char 
 18738 ;; Return value:  Size  Location     Type
 18739 ;;                  4    0[BANK0 ] unsigned char 
 18740 ;; Registers used:
 18741 ;;		wreg, status,2, status,0
 18742 ;; Tracked objects:
 18743 ;;		On entry : 0/0
 18744 ;;		On exit  : 0/0
 18745 ;;		Unchanged: 0/0
 18746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18748 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18749 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18750 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18751 ;;Total ram usage:       14 bytes
 18752 ;; Hardware stack levels used:    1
 18753 ;; Hardware stack levels required when called:    4
 18754 ;; This function calls:
 18755 ;;		Nothing
 18756 ;; This function is called by:
 18757 ;;		_LED_setColor
 18758 ;;		_beatBrightnessCalculation
 18759 ;; This function uses a non-reentrant model
 18760 ;;
 18761                           
 18762                           
 18763                           ;psect for function ___xxtofl
 18764  1629                     ___xxtofl:	
 18765                           
 18766                           ;incstack = 0
 18767                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18768                           ;___xxtofl@sign stored from wreg
 18769  1629  0140               	movlb	0	; select bank0
 18770  162A  00A8               	movwf	___xxtofl@sign
 18771  162B  0828               	movf	___xxtofl@sign,w
 18772  162C  1D03               	btfss	3,2
 18773  162D  1FA3               	btfss	___xxtofl@val+3,7
 18774  162E  2E3F               	goto	l9360
 18775  162F  0920               	comf	___xxtofl@val,w
 18776  1630  00AA               	movwf	___xxtofl@arg
 18777  1631  0921               	comf	___xxtofl@val+1,w
 18778  1632  00AB               	movwf	___xxtofl@arg+1
 18779  1633  0922               	comf	___xxtofl@val+2,w
 18780  1634  00AC               	movwf	___xxtofl@arg+2
 18781  1635  0923               	comf	___xxtofl@val+3,w
 18782  1636  00AD               	movwf	___xxtofl@arg+3
 18783  1637  0AAA               	incf	___xxtofl@arg,f
 18784  1638  1903               	skipnz
 18785  1639  0AAB               	incf	___xxtofl@arg+1,f
 18786  163A  1903               	skipnz
 18787  163B  0AAC               	incf	___xxtofl@arg+2,f
 18788  163C  1903               	skipnz
 18789  163D  0AAD               	incf	___xxtofl@arg+3,f
 18790  163E  2E47               	goto	l2158
 18791  163F                     l9360:	
 18792  163F  0823               	movf	___xxtofl@val+3,w
 18793  1640  00AD               	movwf	___xxtofl@arg+3
 18794  1641  0822               	movf	___xxtofl@val+2,w
 18795  1642  00AC               	movwf	___xxtofl@arg+2
 18796  1643  0821               	movf	___xxtofl@val+1,w
 18797  1644  00AB               	movwf	___xxtofl@arg+1
 18798  1645  0820               	movf	___xxtofl@val,w
 18799  1646  00AA               	movwf	___xxtofl@arg
 18800  1647                     l2158:	
 18801  1647  0823               	movf	___xxtofl@val+3,w
 18802  1648  0422               	iorwf	___xxtofl@val+2,w
 18803  1649  0421               	iorwf	___xxtofl@val+1,w
 18804  164A  0420               	iorwf	___xxtofl@val,w
 18805  164B  1D03               	skipz
 18806  164C  2E56               	goto	l9366
 18807  164D  3000               	movlw	0
 18808  164E  00A3               	movwf	?___xxtofl+3
 18809  164F  3000               	movlw	0
 18810  1650  00A2               	movwf	?___xxtofl+2
 18811  1651  3000               	movlw	0
 18812  1652  00A1               	movwf	?___xxtofl+1
 18813  1653  3000               	movlw	0
 18814  1654  00A0               	movwf	?___xxtofl
 18815  1655  0008               	return
 18816  1656                     l9366:	
 18817  1656  3096               	movlw	150
 18818  1657  00A4               	movwf	??___xxtofl
 18819  1658  0824               	movf	??___xxtofl,w
 18820  1659  00A9               	movwf	___xxtofl@exp
 18821  165A                     l9370:	
 18822  165A  30FE               	movlw	254
 18823  165B  052D               	andwf	___xxtofl@arg+3,w
 18824  165C  1903               	btfsc	3,2
 18825  165D  2E7D               	goto	l2164
 18826  165E  3001               	movlw	1
 18827  165F  00A4               	movwf	??___xxtofl
 18828  1660  0824               	movf	??___xxtofl,w
 18829  1661  07A9               	addwf	___xxtofl@exp,f
 18830  1662  3001               	movlw	1
 18831  1663                     u9395:	
 18832  1663  36AD               	lsrf	___xxtofl@arg+3,f
 18833  1664  0CAC               	rrf	___xxtofl@arg+2,f
 18834  1665  0CAB               	rrf	___xxtofl@arg+1,f
 18835  1666  0CAA               	rrf	___xxtofl@arg,f
 18836  1667  0B89               	decfsz	9,f
 18837  1668  2E63               	goto	u9395
 18838  1669  2E5A               	goto	l9370
 18839  166A                     l9372:	
 18840  166A  3001               	movlw	1
 18841  166B  00A4               	movwf	??___xxtofl
 18842  166C  0824               	movf	??___xxtofl,w
 18843  166D  07A9               	addwf	___xxtofl@exp,f
 18844  166E  3001               	movlw	1
 18845  166F  07AA               	addwf	___xxtofl@arg,f
 18846  1670  3000               	movlw	0
 18847  1671  3DAB               	addwfc	___xxtofl@arg+1,f
 18848  1672  3000               	movlw	0
 18849  1673  3DAC               	addwfc	___xxtofl@arg+2,f
 18850  1674  3000               	movlw	0
 18851  1675  3DAD               	addwfc	___xxtofl@arg+3,f
 18852  1676  3001               	movlw	1
 18853  1677                     u9415:	
 18854  1677  36AD               	lsrf	___xxtofl@arg+3,f
 18855  1678  0CAC               	rrf	___xxtofl@arg+2,f
 18856  1679  0CAB               	rrf	___xxtofl@arg+1,f
 18857  167A  0CAA               	rrf	___xxtofl@arg,f
 18858  167B  0B89               	decfsz	9,f
 18859  167C  2E77               	goto	u9415
 18860  167D                     l2164:	
 18861  167D  30FF               	movlw	255
 18862  167E  052D               	andwf	___xxtofl@arg+3,w
 18863  167F  1903               	btfsc	3,2
 18864  1680  2E8F               	goto	l9380
 18865  1681  2E6A               	goto	l9372
 18866  1682                     l9382:	
 18867  1682  3002               	movlw	2
 18868  1683  0229               	subwf	___xxtofl@exp,w
 18869  1684  1C03               	btfss	3,0
 18870  1685  2E91               	goto	l2171
 18871  1686  3001               	movlw	1
 18872  1687  02A9               	subwf	___xxtofl@exp,f
 18873  1688  3001               	movlw	1
 18874  1689                     u9435:	
 18875  1689  35AA               	lslf	___xxtofl@arg,f
 18876  168A  0DAB               	rlf	___xxtofl@arg+1,f
 18877  168B  0DAC               	rlf	___xxtofl@arg+2,f
 18878  168C  0DAD               	rlf	___xxtofl@arg+3,f
 18879  168D  0B89               	decfsz	9,f
 18880  168E  2E89               	goto	u9435
 18881  168F                     l9380:	
 18882  168F  1FAC               	btfss	___xxtofl@arg+2,7
 18883  1690  2E82               	goto	l9382
 18884  1691                     l2171:	
 18885  1691  1829               	btfsc	___xxtofl@exp,0
 18886  1692  2E9B               	goto	l2172
 18887  1693  30FF               	movlw	255
 18888  1694  05AA               	andwf	___xxtofl@arg,f
 18889  1695  30FF               	movlw	255
 18890  1696  05AB               	andwf	___xxtofl@arg+1,f
 18891  1697  307F               	movlw	127
 18892  1698  05AC               	andwf	___xxtofl@arg+2,f
 18893  1699  30FF               	movlw	255
 18894  169A  05AD               	andwf	___xxtofl@arg+3,f
 18895  169B                     l2172:	
 18896  169B  1003               	clrc
 18897  169C  0CA9               	rrf	___xxtofl@exp,f
 18898  169D  0829               	movf	___xxtofl@exp,w
 18899  169E  00A4               	movwf	??___xxtofl
 18900  169F  01A5               	clrf	??___xxtofl+1
 18901  16A0  01A6               	clrf	??___xxtofl+2
 18902  16A1  01A7               	clrf	??___xxtofl+3
 18903  16A2  3018               	movlw	24
 18904  16A3                     u9475:	
 18905  16A3  35A4               	lslf	??___xxtofl,f
 18906  16A4  0DA5               	rlf	??___xxtofl+1,f
 18907  16A5  0DA6               	rlf	??___xxtofl+2,f
 18908  16A6  0DA7               	rlf	??___xxtofl+3,f
 18909  16A7  0B89               	decfsz	9,f
 18910  16A8  2EA3               	goto	u9475
 18911  16A9  0824               	movf	??___xxtofl,w
 18912  16AA  04AA               	iorwf	___xxtofl@arg,f
 18913  16AB  0825               	movf	??___xxtofl+1,w
 18914  16AC  04AB               	iorwf	___xxtofl@arg+1,f
 18915  16AD  0826               	movf	??___xxtofl+2,w
 18916  16AE  04AC               	iorwf	___xxtofl@arg+2,f
 18917  16AF  0827               	movf	??___xxtofl+3,w
 18918  16B0  04AD               	iorwf	___xxtofl@arg+3,f
 18919  16B1  0828               	movf	___xxtofl@sign,w
 18920  16B2  1D03               	btfss	3,2
 18921  16B3  1FA3               	btfss	___xxtofl@val+3,7
 18922  16B4  2EB6               	goto	l9394
 18923  16B5  17AD               	bsf	___xxtofl@arg+3,7
 18924  16B6                     l9394:	
 18925  16B6  082D               	movf	___xxtofl@arg+3,w
 18926  16B7  00A3               	movwf	?___xxtofl+3
 18927  16B8  082C               	movf	___xxtofl@arg+2,w
 18928  16B9  00A2               	movwf	?___xxtofl+2
 18929  16BA  082B               	movf	___xxtofl@arg+1,w
 18930  16BB  00A1               	movwf	?___xxtofl+1
 18931  16BC  082A               	movf	___xxtofl@arg,w
 18932  16BD  00A0               	movwf	?___xxtofl
 18933  16BE  0008               	return
 18934  16BF                     __end_of___xxtofl:	
 18935                           
 18936                           	psect	text62
 18937  14E1                     __ptext62:	
 18938 ;; *************** function ___fltol *****************
 18939 ;; Defined at:
 18940 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18941 ;; Parameters:    Size  Location     Type
 18942 ;;  f1              4   66[BANK0 ] unsigned char 
 18943 ;; Auto vars:     Size  Location     Type
 18944 ;;  exp1            1   76[BANK0 ] unsigned char 
 18945 ;;  sign1           1   75[BANK0 ] unsigned char 
 18946 ;; Return value:  Size  Location     Type
 18947 ;;                  4   66[BANK0 ] long 
 18948 ;; Registers used:
 18949 ;;		wreg, status,2, status,0
 18950 ;; Tracked objects:
 18951 ;;		On entry : 0/0
 18952 ;;		On exit  : 0/0
 18953 ;;		Unchanged: 0/0
 18954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18957 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18958 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18959 ;;Total ram usage:       11 bytes
 18960 ;; Hardware stack levels used:    1
 18961 ;; Hardware stack levels required when called:    4
 18962 ;; This function calls:
 18963 ;;		Nothing
 18964 ;; This function is called by:
 18965 ;;		_LED_setColor
 18966 ;;		_beatColorCreator
 18967 ;;		_beatBrightnessCalculation
 18968 ;; This function uses a non-reentrant model
 18969 ;;
 18970                           
 18971                           
 18972                           ;psect for function ___fltol
 18973  14E1                     ___fltol:	
 18974                           
 18975                           ;incstack = 0
 18976                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18977  14E1  1003               	clrc
 18978  14E2  0140               	movlb	0	; select bank0
 18979  14E3  0D64               	rlf	___fltol@f1+2,w
 18980  14E4  0D65               	rlf	___fltol@f1+3,w
 18981  14E5  00E6               	movwf	??___fltol
 18982  14E6  0866               	movf	??___fltol,w
 18983  14E7  00EC               	movwf	___fltol@exp1
 18984  14E8  086C               	movf	___fltol@exp1,w
 18985  14E9  1D03               	btfss	3,2
 18986  14EA  2CF4               	goto	l9044
 18987  14EB                     l9040:	
 18988  14EB  3000               	movlw	0
 18989  14EC  00E5               	movwf	?___fltol+3
 18990  14ED  3000               	movlw	0
 18991  14EE  00E4               	movwf	?___fltol+2
 18992  14EF  3000               	movlw	0
 18993  14F0  00E3               	movwf	?___fltol+1
 18994  14F1  3000               	movlw	0
 18995  14F2  00E2               	movwf	?___fltol
 18996  14F3  0008               	return
 18997  14F4                     l9044:	
 18998  14F4  0862               	movf	___fltol@f1,w
 18999  14F5  00E6               	movwf	??___fltol
 19000  14F6  0863               	movf	___fltol@f1+1,w
 19001  14F7  00E7               	movwf	??___fltol+1
 19002  14F8  0864               	movf	___fltol@f1+2,w
 19003  14F9  00E8               	movwf	??___fltol+2
 19004  14FA  0865               	movf	___fltol@f1+3,w
 19005  14FB  00E9               	movwf	??___fltol+3
 19006  14FC  301F               	movlw	31
 19007  14FD                     u8725:	
 19008  14FD  36E9               	lsrf	??___fltol+3,f
 19009  14FE  0CE8               	rrf	??___fltol+2,f
 19010  14FF  0CE7               	rrf	??___fltol+1,f
 19011  1500  0CE6               	rrf	??___fltol,f
 19012  1501  0B89               	decfsz	9,f
 19013  1502  2CFD               	goto	u8725
 19014  1503  0866               	movf	??___fltol,w
 19015  1504  00EA               	movwf	??___fltol+4
 19016  1505  086A               	movf	??___fltol+4,w
 19017  1506  00EB               	movwf	___fltol@sign1
 19018  1507  17E4               	bsf	___fltol@f1+2,7
 19019  1508  30FF               	movlw	255
 19020  1509  05E2               	andwf	___fltol@f1,f
 19021  150A  30FF               	movlw	255
 19022  150B  05E3               	andwf	___fltol@f1+1,f
 19023  150C  30FF               	movlw	255
 19024  150D  05E4               	andwf	___fltol@f1+2,f
 19025  150E  3000               	movlw	0
 19026  150F  05E5               	andwf	___fltol@f1+3,f
 19027  1510  3096               	movlw	150
 19028  1511  02EC               	subwf	___fltol@exp1,f
 19029  1512  1FEC               	btfss	___fltol@exp1,7
 19030  1513  2D27               	goto	l9062
 19031  1514  086C               	movf	___fltol@exp1,w
 19032  1515  3A80               	xorlw	128
 19033  1516  3E97               	addlw	151
 19034  1517  1C03               	btfss	3,0
 19035  1518  2CEB               	goto	l9040
 19036  1519                     l9060:	
 19037  1519  3001               	movlw	1
 19038  151A                     u8755:	
 19039  151A  36E5               	lsrf	___fltol@f1+3,f
 19040  151B  0CE4               	rrf	___fltol@f1+2,f
 19041  151C  0CE3               	rrf	___fltol@f1+1,f
 19042  151D  0CE2               	rrf	___fltol@f1,f
 19043  151E  0B89               	decfsz	9,f
 19044  151F  2D1A               	goto	u8755
 19045  1520  3001               	movlw	1
 19046  1521  00E6               	movwf	??___fltol
 19047  1522  0866               	movf	??___fltol,w
 19048  1523  07EC               	addwf	___fltol@exp1,f
 19049  1524  1903               	btfsc	3,2
 19050  1525  2D38               	goto	l9070
 19051  1526  2D19               	goto	l9060
 19052  1527                     l9062:	
 19053  1527  3020               	movlw	32
 19054  1528  026C               	subwf	___fltol@exp1,w
 19055  1529  1803               	btfsc	3,0
 19056  152A  2CEB               	goto	l9040
 19057  152B                     l1924:	
 19058  152B  086C               	movf	___fltol@exp1,w
 19059  152C  1903               	btfsc	3,2
 19060  152D  2D38               	goto	l9070
 19061  152E  3001               	movlw	1
 19062  152F                     u8785:	
 19063  152F  35E2               	lslf	___fltol@f1,f
 19064  1530  0DE3               	rlf	___fltol@f1+1,f
 19065  1531  0DE4               	rlf	___fltol@f1+2,f
 19066  1532  0DE5               	rlf	___fltol@f1+3,f
 19067  1533  0B89               	decfsz	9,f
 19068  1534  2D2F               	goto	u8785
 19069  1535  3001               	movlw	1
 19070  1536  02EC               	subwf	___fltol@exp1,f
 19071  1537  2D2B               	goto	l1924
 19072  1538                     l9070:	
 19073  1538  086B               	movf	___fltol@sign1,w
 19074  1539  1903               	btfsc	3,2
 19075  153A  0008               	return
 19076  153B  09E2               	comf	___fltol@f1,f
 19077  153C  09E3               	comf	___fltol@f1+1,f
 19078  153D  09E4               	comf	___fltol@f1+2,f
 19079  153E  09E5               	comf	___fltol@f1+3,f
 19080  153F  0AE2               	incf	___fltol@f1,f
 19081  1540  1903               	skipnz
 19082  1541  0AE3               	incf	___fltol@f1+1,f
 19083  1542  1903               	skipnz
 19084  1543  0AE4               	incf	___fltol@f1+2,f
 19085  1544  1903               	skipnz
 19086  1545  0AE5               	incf	___fltol@f1+3,f
 19087  1546  0008               	return
 19088  1547                     __end_of___fltol:	
 19089                           
 19090                           	psect	text63
 19091  00A5                     __ptext63:	
 19092 ;; *************** function ___flmul *****************
 19093 ;; Defined at:
 19094 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 19095 ;; Parameters:    Size  Location     Type
 19096 ;;  b               4   40[BANK0 ] long 
 19097 ;;  a               4   44[BANK0 ] long 
 19098 ;; Auto vars:     Size  Location     Type
 19099 ;;  prod            4   60[BANK0 ] struct .
 19100 ;;  grs             4   56[BANK0 ] unsigned long 
 19101 ;;  temp            2   64[BANK0 ] struct .
 19102 ;;  bexp            1   55[BANK0 ] unsigned char 
 19103 ;;  aexp            1   54[BANK0 ] unsigned char 
 19104 ;;  sign            1   53[BANK0 ] unsigned char 
 19105 ;; Return value:  Size  Location     Type
 19106 ;;                  4   40[BANK0 ] unsigned char 
 19107 ;; Registers used:
 19108 ;;		wreg, status,2, status,0, pclath, cstack
 19109 ;; Tracked objects:
 19110 ;;		On entry : 0/0
 19111 ;;		On exit  : 0/0
 19112 ;;		Unchanged: 0/0
 19113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19114 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19115 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19116 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19117 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19118 ;;Total ram usage:       26 bytes
 19119 ;; Hardware stack levels used:    1
 19120 ;; Hardware stack levels required when called:    5
 19121 ;; This function calls:
 19122 ;;		__Umul8_16
 19123 ;; This function is called by:
 19124 ;;		_LED_setColor
 19125 ;;		_beatBrightnessCalculation
 19126 ;; This function uses a non-reentrant model
 19127 ;;
 19128                           
 19129                           
 19130                           ;psect for function ___flmul
 19131  00A5                     ___flmul:	
 19132                           
 19133                           ;incstack = 0
 19134                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 19135  00A5  0140               	movlb	0	; select bank0
 19136  00A6  084B               	movf	___flmul@b+3,w
 19137  00A7  3980               	andlw	128
 19138  00A8  00D0               	movwf	??___flmul
 19139  00A9  0850               	movf	??___flmul,w
 19140  00AA  00D5               	movwf	___flmul@sign
 19141  00AB  354B               	lslf	___flmul@b+3,w
 19142  00AC  00D0               	movwf	??___flmul
 19143  00AD  0850               	movf	??___flmul,w
 19144  00AE  00D7               	movwf	___flmul@bexp
 19145  00AF  1BCA               	btfsc	___flmul@b+2,7
 19146  00B0  1457               	bsf	___flmul@bexp,0
 19147  00B1  0857               	movf	___flmul@bexp,w
 19148  00B2  1903               	btfsc	3,2
 19149  00B3  28C1               	goto	l9230
 19150  00B4  0A57               	incf	___flmul@bexp,w
 19151  00B5  1D03               	btfss	3,2
 19152  00B6  28BF               	goto	l9228
 19153  00B7  3000               	movlw	0
 19154  00B8  00CB               	movwf	___flmul@b+3
 19155  00B9  3000               	movlw	0
 19156  00BA  00CA               	movwf	___flmul@b+2
 19157  00BB  3000               	movlw	0
 19158  00BC  00C9               	movwf	___flmul@b+1
 19159  00BD  3000               	movlw	0
 19160  00BE  00C8               	movwf	___flmul@b
 19161  00BF                     l9228:	
 19162  00BF  17CA               	bsf	___flmul@b+2,7
 19163  00C0  28C9               	goto	l9232
 19164  00C1                     l9230:	
 19165  00C1  3000               	movlw	0
 19166  00C2  00CB               	movwf	___flmul@b+3
 19167  00C3  3000               	movlw	0
 19168  00C4  00CA               	movwf	___flmul@b+2
 19169  00C5  3000               	movlw	0
 19170  00C6  00C9               	movwf	___flmul@b+1
 19171  00C7  3000               	movlw	0
 19172  00C8  00C8               	movwf	___flmul@b
 19173  00C9                     l9232:	
 19174  00C9  084F               	movf	___flmul@a+3,w
 19175  00CA  3980               	andlw	128
 19176  00CB  00D0               	movwf	??___flmul
 19177  00CC  0850               	movf	??___flmul,w
 19178  00CD  06D5               	xorwf	___flmul@sign,f
 19179  00CE  354F               	lslf	___flmul@a+3,w
 19180  00CF  00D0               	movwf	??___flmul
 19181  00D0  0850               	movf	??___flmul,w
 19182  00D1  00D6               	movwf	___flmul@aexp
 19183  00D2  1BCE               	btfsc	___flmul@a+2,7
 19184  00D3  1456               	bsf	___flmul@aexp,0
 19185  00D4  0856               	movf	___flmul@aexp,w
 19186  00D5  1903               	btfsc	3,2
 19187  00D6  28E4               	goto	l9248
 19188  00D7  0A56               	incf	___flmul@aexp,w
 19189  00D8  1D03               	btfss	3,2
 19190  00D9  28E2               	goto	l9246
 19191  00DA  3000               	movlw	0
 19192  00DB  00CF               	movwf	___flmul@a+3
 19193  00DC  3000               	movlw	0
 19194  00DD  00CE               	movwf	___flmul@a+2
 19195  00DE  3000               	movlw	0
 19196  00DF  00CD               	movwf	___flmul@a+1
 19197  00E0  3000               	movlw	0
 19198  00E1  00CC               	movwf	___flmul@a
 19199  00E2                     l9246:	
 19200  00E2  17CE               	bsf	___flmul@a+2,7
 19201  00E3  28EC               	goto	l9250
 19202  00E4                     l9248:	
 19203  00E4  3000               	movlw	0
 19204  00E5  00CF               	movwf	___flmul@a+3
 19205  00E6  3000               	movlw	0
 19206  00E7  00CE               	movwf	___flmul@a+2
 19207  00E8  3000               	movlw	0
 19208  00E9  00CD               	movwf	___flmul@a+1
 19209  00EA  3000               	movlw	0
 19210  00EB  00CC               	movwf	___flmul@a
 19211  00EC                     l9250:	
 19212  00EC  0856               	movf	___flmul@aexp,w
 19213  00ED  1D03               	btfss	3,2
 19214  00EE  0857               	movf	___flmul@bexp,w
 19215  00EF  1D03               	btfss	3,2
 19216  00F0  28FA               	goto	l9258
 19217  00F1  3000               	movlw	0
 19218  00F2  00CB               	movwf	?___flmul+3
 19219  00F3  3000               	movlw	0
 19220  00F4  00CA               	movwf	?___flmul+2
 19221  00F5  3000               	movlw	0
 19222  00F6  00C9               	movwf	?___flmul+1
 19223  00F7  3000               	movlw	0
 19224  00F8  00C8               	movwf	?___flmul
 19225  00F9  0008               	return
 19226  00FA                     l9258:	
 19227  00FA  0848               	movf	___flmul@b,w
 19228  00FB  00D0               	movwf	??___flmul
 19229  00FC  0850               	movf	??___flmul,w
 19230  00FD  00A0               	movwf	__Umul8_16@multiplicand
 19231  00FE  084E               	movf	___flmul@a+2,w
 19232  00FF  3190  2037  3180   	fcall	__Umul8_16
 19233  0102  0140               	movlb	0	; select bank0
 19234  0103  0821               	movf	?__Umul8_16+1,w
 19235  0104  00E1               	movwf	___flmul@temp+1
 19236  0105  0820               	movf	?__Umul8_16,w
 19237  0106  00E0               	movwf	___flmul@temp
 19238  0107  0860               	movf	___flmul@temp,w
 19239  0108  00D0               	movwf	??___flmul
 19240  0109  01D1               	clrf	??___flmul+1
 19241  010A  01D2               	clrf	??___flmul+2
 19242  010B  01D3               	clrf	??___flmul+3
 19243  010C  0853               	movf	??___flmul+3,w
 19244  010D  00DB               	movwf	___flmul@grs+3
 19245  010E  0852               	movf	??___flmul+2,w
 19246  010F  00DA               	movwf	___flmul@grs+2
 19247  0110  0851               	movf	??___flmul+1,w
 19248  0111  00D9               	movwf	___flmul@grs+1
 19249  0112  0850               	movf	??___flmul,w
 19250  0113  00D8               	movwf	___flmul@grs
 19251  0114  0861               	movf	___flmul@temp+1,w
 19252  0115  00D0               	movwf	??___flmul
 19253  0116  01D1               	clrf	??___flmul+1
 19254  0117  01D2               	clrf	??___flmul+2
 19255  0118  01D3               	clrf	??___flmul+3
 19256  0119  0853               	movf	??___flmul+3,w
 19257  011A  00DF               	movwf	___flmul@prod+3
 19258  011B  0852               	movf	??___flmul+2,w
 19259  011C  00DE               	movwf	___flmul@prod+2
 19260  011D  0851               	movf	??___flmul+1,w
 19261  011E  00DD               	movwf	___flmul@prod+1
 19262  011F  0850               	movf	??___flmul,w
 19263  0120  00DC               	movwf	___flmul@prod
 19264  0121  0849               	movf	___flmul@b+1,w
 19265  0122  00D0               	movwf	??___flmul
 19266  0123  0850               	movf	??___flmul,w
 19267  0124  00A0               	movwf	__Umul8_16@multiplicand
 19268  0125  084D               	movf	___flmul@a+1,w
 19269  0126  3190  2037  3180   	fcall	__Umul8_16
 19270  0129  0140               	movlb	0	; select bank0
 19271  012A  0821               	movf	?__Umul8_16+1,w
 19272  012B  00E1               	movwf	___flmul@temp+1
 19273  012C  0820               	movf	?__Umul8_16,w
 19274  012D  00E0               	movwf	___flmul@temp
 19275  012E  0860               	movf	___flmul@temp,w
 19276  012F  00D0               	movwf	??___flmul
 19277  0130  01D1               	clrf	??___flmul+1
 19278  0131  01D2               	clrf	??___flmul+2
 19279  0132  01D3               	clrf	??___flmul+3
 19280  0133  0850               	movf	??___flmul,w
 19281  0134  07D8               	addwf	___flmul@grs,f
 19282  0135  0851               	movf	??___flmul+1,w
 19283  0136  3DD9               	addwfc	___flmul@grs+1,f
 19284  0137  0852               	movf	??___flmul+2,w
 19285  0138  3DDA               	addwfc	___flmul@grs+2,f
 19286  0139  0853               	movf	??___flmul+3,w
 19287  013A  3DDB               	addwfc	___flmul@grs+3,f
 19288  013B  0861               	movf	___flmul@temp+1,w
 19289  013C  00D0               	movwf	??___flmul
 19290  013D  01D1               	clrf	??___flmul+1
 19291  013E  01D2               	clrf	??___flmul+2
 19292  013F  01D3               	clrf	??___flmul+3
 19293  0140  0850               	movf	??___flmul,w
 19294  0141  07DC               	addwf	___flmul@prod,f
 19295  0142  0851               	movf	??___flmul+1,w
 19296  0143  3DDD               	addwfc	___flmul@prod+1,f
 19297  0144  0852               	movf	??___flmul+2,w
 19298  0145  3DDE               	addwfc	___flmul@prod+2,f
 19299  0146  0853               	movf	??___flmul+3,w
 19300  0147  3DDF               	addwfc	___flmul@prod+3,f
 19301  0148  084A               	movf	___flmul@b+2,w
 19302  0149  00D0               	movwf	??___flmul
 19303  014A  0850               	movf	??___flmul,w
 19304  014B  00A0               	movwf	__Umul8_16@multiplicand
 19305  014C  084C               	movf	___flmul@a,w
 19306  014D  3190  2037  3180   	fcall	__Umul8_16
 19307  0150  0140               	movlb	0	; select bank0
 19308  0151  0821               	movf	?__Umul8_16+1,w
 19309  0152  00E1               	movwf	___flmul@temp+1
 19310  0153  0820               	movf	?__Umul8_16,w
 19311  0154  00E0               	movwf	___flmul@temp
 19312  0155  0860               	movf	___flmul@temp,w
 19313  0156  00D0               	movwf	??___flmul
 19314  0157  01D1               	clrf	??___flmul+1
 19315  0158  01D2               	clrf	??___flmul+2
 19316  0159  01D3               	clrf	??___flmul+3
 19317  015A  0850               	movf	??___flmul,w
 19318  015B  07D8               	addwf	___flmul@grs,f
 19319  015C  0851               	movf	??___flmul+1,w
 19320  015D  3DD9               	addwfc	___flmul@grs+1,f
 19321  015E  0852               	movf	??___flmul+2,w
 19322  015F  3DDA               	addwfc	___flmul@grs+2,f
 19323  0160  0853               	movf	??___flmul+3,w
 19324  0161  3DDB               	addwfc	___flmul@grs+3,f
 19325  0162  0861               	movf	___flmul@temp+1,w
 19326  0163  00D0               	movwf	??___flmul
 19327  0164  01D1               	clrf	??___flmul+1
 19328  0165  01D2               	clrf	??___flmul+2
 19329  0166  01D3               	clrf	??___flmul+3
 19330  0167  0850               	movf	??___flmul,w
 19331  0168  07DC               	addwf	___flmul@prod,f
 19332  0169  0851               	movf	??___flmul+1,w
 19333  016A  3DDD               	addwfc	___flmul@prod+1,f
 19334  016B  0852               	movf	??___flmul+2,w
 19335  016C  3DDE               	addwfc	___flmul@prod+2,f
 19336  016D  0853               	movf	??___flmul+3,w
 19337  016E  3DDF               	addwfc	___flmul@prod+3,f
 19338  016F  3008               	movlw	8
 19339  0170                     u9185:	
 19340  0170  35D8               	lslf	___flmul@grs,f
 19341  0171  0DD9               	rlf	___flmul@grs+1,f
 19342  0172  0DDA               	rlf	___flmul@grs+2,f
 19343  0173  0DDB               	rlf	___flmul@grs+3,f
 19344  0174  0B89               	decfsz	9,f
 19345  0175  2970               	goto	u9185
 19346  0176  0849               	movf	___flmul@b+1,w
 19347  0177  00D0               	movwf	??___flmul
 19348  0178  0850               	movf	??___flmul,w
 19349  0179  00A0               	movwf	__Umul8_16@multiplicand
 19350  017A  084C               	movf	___flmul@a,w
 19351  017B  3190  2037  3180   	fcall	__Umul8_16
 19352  017E  0140               	movlb	0	; select bank0
 19353  017F  0821               	movf	?__Umul8_16+1,w
 19354  0180  00E1               	movwf	___flmul@temp+1
 19355  0181  0820               	movf	?__Umul8_16,w
 19356  0182  00E0               	movwf	___flmul@temp
 19357  0183  0860               	movf	___flmul@temp,w
 19358  0184  07D8               	addwf	___flmul@grs,f
 19359  0185  0861               	movf	___flmul@temp+1,w
 19360  0186  3DD9               	addwfc	___flmul@grs+1,f
 19361  0187  3000               	movlw	0
 19362  0188  3DDA               	addwfc	___flmul@grs+2,f
 19363  0189  3DDB               	addwfc	___flmul@grs+3,f
 19364  018A  0848               	movf	___flmul@b,w
 19365  018B  00D0               	movwf	??___flmul
 19366  018C  0850               	movf	??___flmul,w
 19367  018D  00A0               	movwf	__Umul8_16@multiplicand
 19368  018E  084D               	movf	___flmul@a+1,w
 19369  018F  3190  2037  3180   	fcall	__Umul8_16
 19370  0192  0140               	movlb	0	; select bank0
 19371  0193  0821               	movf	?__Umul8_16+1,w
 19372  0194  00E1               	movwf	___flmul@temp+1
 19373  0195  0820               	movf	?__Umul8_16,w
 19374  0196  00E0               	movwf	___flmul@temp
 19375  0197  0860               	movf	___flmul@temp,w
 19376  0198  07D8               	addwf	___flmul@grs,f
 19377  0199  0861               	movf	___flmul@temp+1,w
 19378  019A  3DD9               	addwfc	___flmul@grs+1,f
 19379  019B  3000               	movlw	0
 19380  019C  3DDA               	addwfc	___flmul@grs+2,f
 19381  019D  3DDB               	addwfc	___flmul@grs+3,f
 19382  019E  3008               	movlw	8
 19383  019F                     u9195:	
 19384  019F  35D8               	lslf	___flmul@grs,f
 19385  01A0  0DD9               	rlf	___flmul@grs+1,f
 19386  01A1  0DDA               	rlf	___flmul@grs+2,f
 19387  01A2  0DDB               	rlf	___flmul@grs+3,f
 19388  01A3  0B89               	decfsz	9,f
 19389  01A4  299F               	goto	u9195
 19390  01A5  0848               	movf	___flmul@b,w
 19391  01A6  00D0               	movwf	??___flmul
 19392  01A7  0850               	movf	??___flmul,w
 19393  01A8  00A0               	movwf	__Umul8_16@multiplicand
 19394  01A9  084C               	movf	___flmul@a,w
 19395  01AA  3190  2037  3180   	fcall	__Umul8_16
 19396  01AD  0140               	movlb	0	; select bank0
 19397  01AE  0821               	movf	?__Umul8_16+1,w
 19398  01AF  00E1               	movwf	___flmul@temp+1
 19399  01B0  0820               	movf	?__Umul8_16,w
 19400  01B1  00E0               	movwf	___flmul@temp
 19401  01B2  0860               	movf	___flmul@temp,w
 19402  01B3  07D8               	addwf	___flmul@grs,f
 19403  01B4  0861               	movf	___flmul@temp+1,w
 19404  01B5  3DD9               	addwfc	___flmul@grs+1,f
 19405  01B6  3000               	movlw	0
 19406  01B7  3DDA               	addwfc	___flmul@grs+2,f
 19407  01B8  3DDB               	addwfc	___flmul@grs+3,f
 19408  01B9  0849               	movf	___flmul@b+1,w
 19409  01BA  00D0               	movwf	??___flmul
 19410  01BB  0850               	movf	??___flmul,w
 19411  01BC  00A0               	movwf	__Umul8_16@multiplicand
 19412  01BD  084E               	movf	___flmul@a+2,w
 19413  01BE  3190  2037  3180   	fcall	__Umul8_16
 19414  01C1  0140               	movlb	0	; select bank0
 19415  01C2  0821               	movf	?__Umul8_16+1,w
 19416  01C3  00E1               	movwf	___flmul@temp+1
 19417  01C4  0820               	movf	?__Umul8_16,w
 19418  01C5  00E0               	movwf	___flmul@temp
 19419  01C6  0860               	movf	___flmul@temp,w
 19420  01C7  07DC               	addwf	___flmul@prod,f
 19421  01C8  0861               	movf	___flmul@temp+1,w
 19422  01C9  3DDD               	addwfc	___flmul@prod+1,f
 19423  01CA  3000               	movlw	0
 19424  01CB  3DDE               	addwfc	___flmul@prod+2,f
 19425  01CC  3DDF               	addwfc	___flmul@prod+3,f
 19426  01CD  084A               	movf	___flmul@b+2,w
 19427  01CE  00D0               	movwf	??___flmul
 19428  01CF  0850               	movf	??___flmul,w
 19429  01D0  00A0               	movwf	__Umul8_16@multiplicand
 19430  01D1  084D               	movf	___flmul@a+1,w
 19431  01D2  3190  2037  3180   	fcall	__Umul8_16
 19432  01D5  0140               	movlb	0	; select bank0
 19433  01D6  0821               	movf	?__Umul8_16+1,w
 19434  01D7  00E1               	movwf	___flmul@temp+1
 19435  01D8  0820               	movf	?__Umul8_16,w
 19436  01D9  00E0               	movwf	___flmul@temp
 19437  01DA  0860               	movf	___flmul@temp,w
 19438  01DB  07DC               	addwf	___flmul@prod,f
 19439  01DC  0861               	movf	___flmul@temp+1,w
 19440  01DD  3DDD               	addwfc	___flmul@prod+1,f
 19441  01DE  3000               	movlw	0
 19442  01DF  3DDE               	addwfc	___flmul@prod+2,f
 19443  01E0  3DDF               	addwfc	___flmul@prod+3,f
 19444  01E1  084A               	movf	___flmul@b+2,w
 19445  01E2  00D0               	movwf	??___flmul
 19446  01E3  0850               	movf	??___flmul,w
 19447  01E4  00A0               	movwf	__Umul8_16@multiplicand
 19448  01E5  084E               	movf	___flmul@a+2,w
 19449  01E6  3190  2037  3180   	fcall	__Umul8_16
 19450  01E9  0140               	movlb	0	; select bank0
 19451  01EA  0821               	movf	?__Umul8_16+1,w
 19452  01EB  00E1               	movwf	___flmul@temp+1
 19453  01EC  0820               	movf	?__Umul8_16,w
 19454  01ED  00E0               	movwf	___flmul@temp
 19455  01EE  0860               	movf	___flmul@temp,w
 19456  01EF  00D0               	movwf	??___flmul
 19457  01F0  0861               	movf	___flmul@temp+1,w
 19458  01F1  00D1               	movwf	??___flmul+1
 19459  01F2  01D2               	clrf	??___flmul+2
 19460  01F3  01D3               	clrf	??___flmul+3
 19461  01F4  3008               	movlw	8
 19462  01F5                     u9205:	
 19463  01F5  35D0               	lslf	??___flmul,f
 19464  01F6  0DD1               	rlf	??___flmul+1,f
 19465  01F7  0DD2               	rlf	??___flmul+2,f
 19466  01F8  0DD3               	rlf	??___flmul+3,f
 19467  01F9  0B89               	decfsz	9,f
 19468  01FA  29F5               	goto	u9205
 19469  01FB  0850               	movf	??___flmul,w
 19470  01FC  07DC               	addwf	___flmul@prod,f
 19471  01FD  0851               	movf	??___flmul+1,w
 19472  01FE  3DDD               	addwfc	___flmul@prod+1,f
 19473  01FF  0852               	movf	??___flmul+2,w
 19474  0200  3DDE               	addwfc	___flmul@prod+2,f
 19475  0201  0853               	movf	??___flmul+3,w
 19476  0202  3DDF               	addwfc	___flmul@prod+3,f
 19477  0203  0858               	movf	___flmul@grs,w
 19478  0204  00D0               	movwf	??___flmul
 19479  0205  0859               	movf	___flmul@grs+1,w
 19480  0206  00D1               	movwf	??___flmul+1
 19481  0207  085A               	movf	___flmul@grs+2,w
 19482  0208  00D2               	movwf	??___flmul+2
 19483  0209  085B               	movf	___flmul@grs+3,w
 19484  020A  00D3               	movwf	??___flmul+3
 19485  020B  3018               	movlw	24
 19486  020C                     u9215:	
 19487  020C  36D3               	lsrf	??___flmul+3,f
 19488  020D  0CD2               	rrf	??___flmul+2,f
 19489  020E  0CD1               	rrf	??___flmul+1,f
 19490  020F  0CD0               	rrf	??___flmul,f
 19491  0210  0B89               	decfsz	9,f
 19492  0211  2A0C               	goto	u9215
 19493  0212  0850               	movf	??___flmul,w
 19494  0213  07DC               	addwf	___flmul@prod,f
 19495  0214  0851               	movf	??___flmul+1,w
 19496  0215  3DDD               	addwfc	___flmul@prod+1,f
 19497  0216  0852               	movf	??___flmul+2,w
 19498  0217  3DDE               	addwfc	___flmul@prod+2,f
 19499  0218  0853               	movf	??___flmul+3,w
 19500  0219  3DDF               	addwfc	___flmul@prod+3,f
 19501  021A  3008               	movlw	8
 19502  021B                     u9225:	
 19503  021B  35D8               	lslf	___flmul@grs,f
 19504  021C  0DD9               	rlf	___flmul@grs+1,f
 19505  021D  0DDA               	rlf	___flmul@grs+2,f
 19506  021E  0DDB               	rlf	___flmul@grs+3,f
 19507  021F  0B89               	decfsz	9,f
 19508  0220  2A1B               	goto	u9225
 19509  0221  0857               	movf	___flmul@bexp,w
 19510  0222  0756               	addwf	___flmul@aexp,w
 19511  0223  00D0               	movwf	??___flmul
 19512  0224  01D1               	clrf	??___flmul+1
 19513  0225  0DD1               	rlf	??___flmul+1,f
 19514  0226  0850               	movf	??___flmul,w
 19515  0227  3E82               	addlw	130
 19516  0228  00E0               	movwf	___flmul@temp
 19517  0229  30FF               	movlw	255
 19518  022A  3D51               	addwfc	??___flmul+1,w
 19519  022B  00E1               	movwf	___flmul@temp+1
 19520  022C                     l9310:	
 19521  022C  1BDE               	btfsc	___flmul@prod+2,7
 19522  022D  2A43               	goto	l9312
 19523  022E  3001               	movlw	1
 19524  022F                     u9235:	
 19525  022F  35DC               	lslf	___flmul@prod,f
 19526  0230  0DDD               	rlf	___flmul@prod+1,f
 19527  0231  0DDE               	rlf	___flmul@prod+2,f
 19528  0232  0DDF               	rlf	___flmul@prod+3,f
 19529  0233  0B89               	decfsz	9,f
 19530  0234  2A2F               	goto	u9235
 19531  0235  1BDB               	btfsc	___flmul@grs+3,7
 19532  0236  145C               	bsf	___flmul@prod,0
 19533  0237  3001               	movlw	1
 19534  0238                     u9255:	
 19535  0238  35D8               	lslf	___flmul@grs,f
 19536  0239  0DD9               	rlf	___flmul@grs+1,f
 19537  023A  0DDA               	rlf	___flmul@grs+2,f
 19538  023B  0DDB               	rlf	___flmul@grs+3,f
 19539  023C  0B89               	decfsz	9,f
 19540  023D  2A38               	goto	u9255
 19541  023E  30FF               	movlw	255
 19542  023F  07E0               	addwf	___flmul@temp,f
 19543  0240  30FF               	movlw	255
 19544  0241  3DE1               	addwfc	___flmul@temp+1,f
 19545  0242  2A2C               	goto	l9310
 19546  0243                     l9312:	
 19547  0243  01D6               	clrf	___flmul@aexp
 19548  0244  1FDB               	btfss	___flmul@grs+3,7
 19549  0245  2A5C               	goto	l9322
 19550  0246  30FF               	movlw	255
 19551  0247  0558               	andwf	___flmul@grs,w
 19552  0248  00D0               	movwf	??___flmul
 19553  0249  30FF               	movlw	255
 19554  024A  0559               	andwf	___flmul@grs+1,w
 19555  024B  00D1               	movwf	??___flmul+1
 19556  024C  30FF               	movlw	255
 19557  024D  055A               	andwf	___flmul@grs+2,w
 19558  024E  00D2               	movwf	??___flmul+2
 19559  024F  307F               	movlw	127
 19560  0250  055B               	andwf	___flmul@grs+3,w
 19561  0251  00D3               	movwf	??___flmul+3
 19562  0252  0853               	movf	??___flmul+3,w
 19563  0253  0452               	iorwf	??___flmul+2,w
 19564  0254  0451               	iorwf	??___flmul+1,w
 19565  0255  0450               	iorwf	??___flmul,w
 19566  0256  1903               	skipnz
 19567  0257  185C               	btfsc	___flmul@prod,0
 19568  0258  2A5A               	goto	l9318
 19569  0259  2A5C               	goto	l9322
 19570  025A                     l9318:	
 19571  025A  01D6               	clrf	___flmul@aexp
 19572  025B  0AD6               	incf	___flmul@aexp,f
 19573  025C                     l9322:	
 19574  025C  0856               	movf	___flmul@aexp,w
 19575  025D  1903               	btfsc	3,2
 19576  025E  2A85               	goto	l9332
 19577  025F  3001               	movlw	1
 19578  0260  07DC               	addwf	___flmul@prod,f
 19579  0261  3000               	movlw	0
 19580  0262  3DDD               	addwfc	___flmul@prod+1,f
 19581  0263  3000               	movlw	0
 19582  0264  3DDE               	addwfc	___flmul@prod+2,f
 19583  0265  3000               	movlw	0
 19584  0266  3DDF               	addwfc	___flmul@prod+3,f
 19585  0267  1C5F               	btfss	___flmul@prod+3,0
 19586  0268  2A85               	goto	l9332
 19587  0269  085C               	movf	___flmul@prod,w
 19588  026A  00D0               	movwf	??___flmul
 19589  026B  085D               	movf	___flmul@prod+1,w
 19590  026C  00D1               	movwf	??___flmul+1
 19591  026D  085E               	movf	___flmul@prod+2,w
 19592  026E  00D2               	movwf	??___flmul+2
 19593  026F  085F               	movf	___flmul@prod+3,w
 19594  0270  00D3               	movwf	??___flmul+3
 19595  0271  3001               	movlw	1
 19596  0272  00D4               	movwf	??___flmul+4
 19597  0273                     u9325:	
 19598  0273  37D3               	asrf	??___flmul+3,f
 19599  0274  0CD2               	rrf	??___flmul+2,f
 19600  0275  0CD1               	rrf	??___flmul+1,f
 19601  0276  0CD0               	rrf	??___flmul,f
 19602  0277  0BD4               	decfsz	??___flmul+4,f
 19603  0278  2A73               	goto	u9325
 19604  0279  0853               	movf	??___flmul+3,w
 19605  027A  00DF               	movwf	___flmul@prod+3
 19606  027B  0852               	movf	??___flmul+2,w
 19607  027C  00DE               	movwf	___flmul@prod+2
 19608  027D  0851               	movf	??___flmul+1,w
 19609  027E  00DD               	movwf	___flmul@prod+1
 19610  027F  0850               	movf	??___flmul,w
 19611  0280  00DC               	movwf	___flmul@prod
 19612  0281  3001               	movlw	1
 19613  0282  07E0               	addwf	___flmul@temp,f
 19614  0283  3000               	movlw	0
 19615  0284  3DE1               	addwfc	___flmul@temp+1,f
 19616  0285                     l9332:	
 19617  0285  0861               	movf	___flmul@temp+1,w
 19618  0286  3A80               	xorlw	128
 19619  0287  00D0               	movwf	??___flmul
 19620  0288  3080               	movlw	128
 19621  0289  0250               	subwf	??___flmul,w
 19622  028A  1D03               	skipz
 19623  028B  2A8E               	goto	u9335
 19624  028C  30FF               	movlw	255
 19625  028D  0260               	subwf	___flmul@temp,w
 19626  028E                     u9335:	
 19627  028E  1C03               	skipc
 19628  028F  2A9A               	goto	l9336
 19629  0290  307F               	movlw	127
 19630  0291  0140               	movlb	0	; select bank0
 19631  0292  00DF               	movwf	___flmul@prod+3
 19632  0293  3080               	movlw	128
 19633  0294  00DE               	movwf	___flmul@prod+2
 19634  0295  3000               	movlw	0
 19635  0296  00DD               	movwf	___flmul@prod+1
 19636  0297  3000               	movlw	0
 19637  0298  00DC               	movwf	___flmul@prod
 19638  0299  2AC4               	goto	l2132
 19639  029A                     l9336:	
 19640  029A  0140               	movlb	0	; select bank0
 19641  029B  0861               	movf	___flmul@temp+1,w
 19642  029C  3A80               	xorlw	128
 19643  029D  00D0               	movwf	??___flmul
 19644  029E  3080               	movlw	128
 19645  029F  0250               	subwf	??___flmul,w
 19646  02A0  1D03               	skipz
 19647  02A1  2AA4               	goto	u9345
 19648  02A2  3001               	movlw	1
 19649  02A3  0260               	subwf	___flmul@temp,w
 19650  02A4                     u9345:	
 19651  02A4  1803               	skipnc
 19652  02A5  2AB1               	goto	l9342
 19653  02A6  3000               	movlw	0
 19654  02A7  0140               	movlb	0	; select bank0
 19655  02A8  00DF               	movwf	___flmul@prod+3
 19656  02A9  3000               	movlw	0
 19657  02AA  00DE               	movwf	___flmul@prod+2
 19658  02AB  3000               	movlw	0
 19659  02AC  00DD               	movwf	___flmul@prod+1
 19660  02AD  3000               	movlw	0
 19661  02AE  00DC               	movwf	___flmul@prod
 19662  02AF  01D5               	clrf	___flmul@sign
 19663  02B0  2AC4               	goto	l2132
 19664  02B1                     l9342:	
 19665  02B1  0140               	movlb	0	; select bank0
 19666  02B2  0860               	movf	___flmul@temp,w
 19667  02B3  00D0               	movwf	??___flmul
 19668  02B4  0850               	movf	??___flmul,w
 19669  02B5  00D7               	movwf	___flmul@bexp
 19670  02B6  30FF               	movlw	255
 19671  02B7  05DC               	andwf	___flmul@prod,f
 19672  02B8  30FF               	movlw	255
 19673  02B9  05DD               	andwf	___flmul@prod+1,f
 19674  02BA  307F               	movlw	127
 19675  02BB  05DE               	andwf	___flmul@prod+2,f
 19676  02BC  3000               	movlw	0
 19677  02BD  05DF               	andwf	___flmul@prod+3,f
 19678  02BE  1857               	btfsc	___flmul@bexp,0
 19679  02BF  17DE               	bsf	___flmul@prod+2,7
 19680  02C0  3657               	lsrf	___flmul@bexp,w
 19681  02C1  00D0               	movwf	??___flmul
 19682  02C2  0850               	movf	??___flmul,w
 19683  02C3  00DF               	movwf	___flmul@prod+3
 19684  02C4                     l2132:	
 19685  02C4  0855               	movf	___flmul@sign,w
 19686  02C5  00D0               	movwf	??___flmul
 19687  02C6  0850               	movf	??___flmul,w
 19688  02C7  04DF               	iorwf	___flmul@prod+3,f
 19689  02C8  085F               	movf	___flmul@prod+3,w
 19690  02C9  00CB               	movwf	?___flmul+3
 19691  02CA  085E               	movf	___flmul@prod+2,w
 19692  02CB  00CA               	movwf	?___flmul+2
 19693  02CC  085D               	movf	___flmul@prod+1,w
 19694  02CD  00C9               	movwf	?___flmul+1
 19695  02CE  085C               	movf	___flmul@prod,w
 19696  02CF  00C8               	movwf	?___flmul
 19697  02D0  0008               	return
 19698  02D1                     __end_of___flmul:	
 19699                           
 19700                           	psect	text64
 19701  1037                     __ptext64:	
 19702 ;; *************** function __Umul8_16 *****************
 19703 ;; Defined at:
 19704 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19705 ;; Parameters:    Size  Location     Type
 19706 ;;  multiplier      1    wreg     unsigned char 
 19707 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;  multiplier      1    8[BANK0 ] unsigned char 
 19710 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 19711 ;;  product         2    4[BANK0 ] unsigned int 
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  2    0[BANK0 ] unsigned int 
 19714 ;; Registers used:
 19715 ;;		wreg, status,2, status,0
 19716 ;; Tracked objects:
 19717 ;;		On entry : 0/0
 19718 ;;		On exit  : 0/0
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;Total ram usage:        9 bytes
 19726 ;; Hardware stack levels used:    1
 19727 ;; Hardware stack levels required when called:    4
 19728 ;; This function calls:
 19729 ;;		Nothing
 19730 ;; This function is called by:
 19731 ;;		___flmul
 19732 ;; This function uses a non-reentrant model
 19733 ;;
 19734                           
 19735                           
 19736                           ;psect for function __Umul8_16
 19737  1037                     __Umul8_16:	
 19738                           
 19739                           ;incstack = 0
 19740                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19741                           ;__Umul8_16@multiplier stored from wreg
 19742  1037  0140               	movlb	0	; select bank0
 19743  1038  00A8               	movwf	__Umul8_16@multiplier
 19744  1039  01A4               	clrf	__Umul8_16@product
 19745  103A  01A5               	clrf	__Umul8_16@product+1
 19746  103B  0820               	movf	__Umul8_16@multiplicand,w
 19747  103C  00A2               	movwf	??__Umul8_16
 19748  103D  01A3               	clrf	??__Umul8_16+1
 19749  103E  0822               	movf	??__Umul8_16,w
 19750  103F  00A6               	movwf	__Umul8_16@word_mpld
 19751  1040  0823               	movf	??__Umul8_16+1,w
 19752  1041  00A7               	movwf	__Umul8_16@word_mpld+1
 19753  1042                     l9028:	
 19754  1042  1C28               	btfss	__Umul8_16@multiplier,0
 19755  1043  2848               	goto	l2210
 19756  1044  0826               	movf	__Umul8_16@word_mpld,w
 19757  1045  07A4               	addwf	__Umul8_16@product,f
 19758  1046  0827               	movf	__Umul8_16@word_mpld+1,w
 19759  1047  3DA5               	addwfc	__Umul8_16@product+1,f
 19760  1048                     l2210:	
 19761  1048  3001               	movlw	1
 19762  1049                     u8695:	
 19763  1049  35A6               	lslf	__Umul8_16@word_mpld,f
 19764  104A  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 19765  104B  0B89               	decfsz	9,f
 19766  104C  2849               	goto	u8695
 19767  104D  1003               	clrc
 19768  104E  0CA8               	rrf	__Umul8_16@multiplier,f
 19769  104F  0828               	movf	__Umul8_16@multiplier,w
 19770  1050  1D03               	btfss	3,2
 19771  1051  2842               	goto	l9028
 19772  1052  0825               	movf	__Umul8_16@product+1,w
 19773  1053  00A1               	movwf	?__Umul8_16+1
 19774  1054  0824               	movf	__Umul8_16@product,w
 19775  1055  00A0               	movwf	?__Umul8_16
 19776  1056  0008               	return
 19777  1057                     __end_of__Umul8_16:	
 19778                           
 19779                           	psect	text65
 19780  049E                     __ptext65:	
 19781 ;; *************** function ___fldiv *****************
 19782 ;; Defined at:
 19783 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19784 ;; Parameters:    Size  Location     Type
 19785 ;;  a               4   14[BANK0 ] unsigned int 
 19786 ;;  b               4   18[BANK0 ] unsigned int 
 19787 ;; Auto vars:     Size  Location     Type
 19788 ;;  grs             4   34[BANK0 ] unsigned long 
 19789 ;;  rem             4   27[BANK0 ] unsigned long 
 19790 ;;  new_exp         2   32[BANK0 ] int 
 19791 ;;  aexp            1   39[BANK0 ] unsigned char 
 19792 ;;  bexp            1   38[BANK0 ] unsigned char 
 19793 ;;  sign            1   31[BANK0 ] unsigned char 
 19794 ;; Return value:  Size  Location     Type
 19795 ;;                  4   14[BANK0 ] unsigned char 
 19796 ;; Registers used:
 19797 ;;		wreg, status,2, status,0
 19798 ;; Tracked objects:
 19799 ;;		On entry : 0/0
 19800 ;;		On exit  : 0/0
 19801 ;;		Unchanged: 0/0
 19802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19803 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19804 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19805 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19806 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19807 ;;Total ram usage:       26 bytes
 19808 ;; Hardware stack levels used:    1
 19809 ;; Hardware stack levels required when called:    4
 19810 ;; This function calls:
 19811 ;;		Nothing
 19812 ;; This function is called by:
 19813 ;;		_LED_setColor
 19814 ;;		_beatBrightnessCalculation
 19815 ;; This function uses a non-reentrant model
 19816 ;;
 19817                           
 19818                           
 19819                           ;psect for function ___fldiv
 19820  049E                     ___fldiv:	
 19821                           
 19822                           ;incstack = 0
 19823                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19824  049E  0140               	movlb	0	; select bank0
 19825  049F  0835               	movf	___fldiv@b+3,w
 19826  04A0  3980               	andlw	128
 19827  04A1  00B6               	movwf	??___fldiv
 19828  04A2  0836               	movf	??___fldiv,w
 19829  04A3  00BF               	movwf	___fldiv@sign
 19830  04A4  3535               	lslf	___fldiv@b+3,w
 19831  04A5  00B6               	movwf	??___fldiv
 19832  04A6  0836               	movf	??___fldiv,w
 19833  04A7  00C6               	movwf	___fldiv@bexp
 19834  04A8  1BB4               	btfsc	___fldiv@b+2,7
 19835  04A9  1446               	bsf	___fldiv@bexp,0
 19836  04AA  0846               	movf	___fldiv@bexp,w
 19837  04AB  1903               	btfsc	3,2
 19838  04AC  2CBB               	goto	l9092
 19839  04AD  0A46               	incf	___fldiv@bexp,w
 19840  04AE  1D03               	btfss	3,2
 19841  04AF  2CB8               	goto	l9088
 19842  04B0  3000               	movlw	0
 19843  04B1  00B5               	movwf	___fldiv@b+3
 19844  04B2  3000               	movlw	0
 19845  04B3  00B4               	movwf	___fldiv@b+2
 19846  04B4  3000               	movlw	0
 19847  04B5  00B3               	movwf	___fldiv@b+1
 19848  04B6  3000               	movlw	0
 19849  04B7  00B2               	movwf	___fldiv@b
 19850  04B8                     l9088:	
 19851  04B8  17B4               	bsf	___fldiv@b+2,7
 19852  04B9  01B5               	clrf	___fldiv@b+3
 19853  04BA  2CC3               	goto	l9094
 19854  04BB                     l9092:	
 19855  04BB  3000               	movlw	0
 19856  04BC  00B5               	movwf	___fldiv@b+3
 19857  04BD  3000               	movlw	0
 19858  04BE  00B4               	movwf	___fldiv@b+2
 19859  04BF  3000               	movlw	0
 19860  04C0  00B3               	movwf	___fldiv@b+1
 19861  04C1  3000               	movlw	0
 19862  04C2  00B2               	movwf	___fldiv@b
 19863  04C3                     l9094:	
 19864  04C3  0831               	movf	___fldiv@a+3,w
 19865  04C4  3980               	andlw	128
 19866  04C5  00B6               	movwf	??___fldiv
 19867  04C6  0836               	movf	??___fldiv,w
 19868  04C7  06BF               	xorwf	___fldiv@sign,f
 19869  04C8  3531               	lslf	___fldiv@a+3,w
 19870  04C9  00B6               	movwf	??___fldiv
 19871  04CA  0836               	movf	??___fldiv,w
 19872  04CB  00C7               	movwf	___fldiv@aexp
 19873  04CC  1BB0               	btfsc	___fldiv@a+2,7
 19874  04CD  1447               	bsf	___fldiv@aexp,0
 19875  04CE  0847               	movf	___fldiv@aexp,w
 19876  04CF  1903               	btfsc	3,2
 19877  04D0  2CDF               	goto	l9112
 19878  04D1  0A47               	incf	___fldiv@aexp,w
 19879  04D2  1D03               	btfss	3,2
 19880  04D3  2CDC               	goto	l9108
 19881  04D4  3000               	movlw	0
 19882  04D5  00B1               	movwf	___fldiv@a+3
 19883  04D6  3000               	movlw	0
 19884  04D7  00B0               	movwf	___fldiv@a+2
 19885  04D8  3000               	movlw	0
 19886  04D9  00AF               	movwf	___fldiv@a+1
 19887  04DA  3000               	movlw	0
 19888  04DB  00AE               	movwf	___fldiv@a
 19889  04DC                     l9108:	
 19890  04DC  17B0               	bsf	___fldiv@a+2,7
 19891  04DD  01B1               	clrf	___fldiv@a+3
 19892  04DE  2CE7               	goto	l2080
 19893  04DF                     l9112:	
 19894  04DF  3000               	movlw	0
 19895  04E0  00B1               	movwf	___fldiv@a+3
 19896  04E1  3000               	movlw	0
 19897  04E2  00B0               	movwf	___fldiv@a+2
 19898  04E3  3000               	movlw	0
 19899  04E4  00AF               	movwf	___fldiv@a+1
 19900  04E5  3000               	movlw	0
 19901  04E6  00AE               	movwf	___fldiv@a
 19902  04E7                     l2080:	
 19903  04E7  0831               	movf	___fldiv@a+3,w
 19904  04E8  0430               	iorwf	___fldiv@a+2,w
 19905  04E9  042F               	iorwf	___fldiv@a+1,w
 19906  04EA  042E               	iorwf	___fldiv@a,w
 19907  04EB  1D03               	skipz
 19908  04EC  2D06               	goto	l9122
 19909  04ED  3000               	movlw	0
 19910  04EE  00B5               	movwf	___fldiv@b+3
 19911  04EF  3000               	movlw	0
 19912  04F0  00B4               	movwf	___fldiv@b+2
 19913  04F1  3000               	movlw	0
 19914  04F2  00B3               	movwf	___fldiv@b+1
 19915  04F3  3000               	movlw	0
 19916  04F4  00B2               	movwf	___fldiv@b
 19917  04F5  3080               	movlw	128
 19918  04F6  04B4               	iorwf	___fldiv@b+2,f
 19919  04F7  307F               	movlw	127
 19920  04F8  04B5               	iorwf	___fldiv@b+3,f
 19921  04F9                     L19:	
 19922  04F9  083F               	movf	___fldiv@sign,w
 19923  04FA  00B6               	movwf	??___fldiv
 19924  04FB  0836               	movf	??___fldiv,w
 19925  04FC  04B5               	iorwf	___fldiv@b+3,f
 19926  04FD  0835               	movf	___fldiv@b+3,w
 19927  04FE  00B1               	movwf	?___fldiv+3
 19928  04FF  0834               	movf	___fldiv@b+2,w
 19929  0500  00B0               	movwf	?___fldiv+2
 19930  0501  0833               	movf	___fldiv@b+1,w
 19931  0502  00AF               	movwf	?___fldiv+1
 19932  0503  0832               	movf	___fldiv@b,w
 19933  0504  00AE               	movwf	?___fldiv
 19934  0505  0008               	return
 19935  0506                     l9122:	
 19936  0506  0846               	movf	___fldiv@bexp,w
 19937  0507  1D03               	btfss	3,2
 19938  0508  2D12               	goto	l9128
 19939  0509  3000               	movlw	0
 19940  050A  00B1               	movwf	?___fldiv+3
 19941  050B  3000               	movlw	0
 19942  050C  00B0               	movwf	?___fldiv+2
 19943  050D  3000               	movlw	0
 19944  050E  00AF               	movwf	?___fldiv+1
 19945  050F  3000               	movlw	0
 19946  0510  00AE               	movwf	?___fldiv
 19947  0511  0008               	return
 19948  0512                     l9128:	
 19949  0512  0846               	movf	___fldiv@bexp,w
 19950  0513  00B6               	movwf	??___fldiv
 19951  0514  01B7               	clrf	??___fldiv+1
 19952  0515  0837               	movf	??___fldiv+1,w
 19953  0516  00B9               	movwf	??___fldiv+3
 19954  0517  0847               	movf	___fldiv@aexp,w
 19955  0518  0236               	subwf	??___fldiv,w
 19956  0519  00B8               	movwf	??___fldiv+2
 19957  051A  1C03               	skipc
 19958  051B  03B9               	decf	??___fldiv+3,f
 19959  051C  0838               	movf	??___fldiv+2,w
 19960  051D  3E7F               	addlw	127
 19961  051E  00C0               	movwf	___fldiv@new_exp
 19962  051F  3000               	movlw	0
 19963  0520  3D39               	addwfc	??___fldiv+3,w
 19964  0521  00C1               	movwf	___fldiv@new_exp+1
 19965  0522  0835               	movf	___fldiv@b+3,w
 19966  0523  00BE               	movwf	___fldiv@rem+3
 19967  0524  0834               	movf	___fldiv@b+2,w
 19968  0525  00BD               	movwf	___fldiv@rem+2
 19969  0526  0833               	movf	___fldiv@b+1,w
 19970  0527  00BC               	movwf	___fldiv@rem+1
 19971  0528  0832               	movf	___fldiv@b,w
 19972  0529  00BB               	movwf	___fldiv@rem
 19973  052A  3000               	movlw	0
 19974  052B  00B5               	movwf	___fldiv@b+3
 19975  052C  3000               	movlw	0
 19976  052D  00B4               	movwf	___fldiv@b+2
 19977  052E  3000               	movlw	0
 19978  052F  00B3               	movwf	___fldiv@b+1
 19979  0530  3000               	movlw	0
 19980  0531  00B2               	movwf	___fldiv@b
 19981  0532  3000               	movlw	0
 19982  0533  00C5               	movwf	___fldiv@grs+3
 19983  0534  3000               	movlw	0
 19984  0535  00C4               	movwf	___fldiv@grs+2
 19985  0536  3000               	movlw	0
 19986  0537  00C3               	movwf	___fldiv@grs+1
 19987  0538  3000               	movlw	0
 19988  0539  00C2               	movwf	___fldiv@grs
 19989  053A  01C7               	clrf	___fldiv@aexp
 19990  053B                     l9156:	
 19991  053B  301A               	movlw	26
 19992  053C  0247               	subwf	___fldiv@aexp,w
 19993  053D  1803               	btfsc	3,0
 19994  053E  2D77               	goto	l9158
 19995  053F  0847               	movf	___fldiv@aexp,w
 19996  0540  1903               	btfsc	3,2
 19997  0541  2D59               	goto	l9148
 19998  0542  3001               	movlw	1
 19999  0543                     u8905:	
 20000  0543  35BB               	lslf	___fldiv@rem,f
 20001  0544  0DBC               	rlf	___fldiv@rem+1,f
 20002  0545  0DBD               	rlf	___fldiv@rem+2,f
 20003  0546  0DBE               	rlf	___fldiv@rem+3,f
 20004  0547  0B89               	decfsz	9,f
 20005  0548  2D43               	goto	u8905
 20006  0549  3001               	movlw	1
 20007  054A                     u8915:	
 20008  054A  35B2               	lslf	___fldiv@b,f
 20009  054B  0DB3               	rlf	___fldiv@b+1,f
 20010  054C  0DB4               	rlf	___fldiv@b+2,f
 20011  054D  0DB5               	rlf	___fldiv@b+3,f
 20012  054E  0B89               	decfsz	9,f
 20013  054F  2D4A               	goto	u8915
 20014  0550  1BC5               	btfsc	___fldiv@grs+3,7
 20015  0551  1432               	bsf	___fldiv@b,0
 20016  0552  3001               	movlw	1
 20017  0553                     u8935:	
 20018  0553  35C2               	lslf	___fldiv@grs,f
 20019  0554  0DC3               	rlf	___fldiv@grs+1,f
 20020  0555  0DC4               	rlf	___fldiv@grs+2,f
 20021  0556  0DC5               	rlf	___fldiv@grs+3,f
 20022  0557  0B89               	decfsz	9,f
 20023  0558  2D53               	goto	u8935
 20024  0559                     l9148:	
 20025  0559  0831               	movf	___fldiv@a+3,w
 20026  055A  023E               	subwf	___fldiv@rem+3,w
 20027  055B  1D03               	skipz
 20028  055C  2D67               	goto	u8945
 20029  055D  0830               	movf	___fldiv@a+2,w
 20030  055E  023D               	subwf	___fldiv@rem+2,w
 20031  055F  1D03               	skipz
 20032  0560  2D67               	goto	u8945
 20033  0561  082F               	movf	___fldiv@a+1,w
 20034  0562  023C               	subwf	___fldiv@rem+1,w
 20035  0563  1D03               	skipz
 20036  0564  2D67               	goto	u8945
 20037  0565  082E               	movf	___fldiv@a,w
 20038  0566  023B               	subwf	___fldiv@rem,w
 20039  0567                     u8945:	
 20040  0567  1C03               	skipc
 20041  0568  2D72               	goto	l9154
 20042  0569  1745               	bsf	___fldiv@grs+3,6
 20043  056A  082E               	movf	___fldiv@a,w
 20044  056B  02BB               	subwf	___fldiv@rem,f
 20045  056C  082F               	movf	___fldiv@a+1,w
 20046  056D  3BBC               	subwfb	___fldiv@rem+1,f
 20047  056E  0830               	movf	___fldiv@a+2,w
 20048  056F  3BBD               	subwfb	___fldiv@rem+2,f
 20049  0570  0831               	movf	___fldiv@a+3,w
 20050  0571  3BBE               	subwfb	___fldiv@rem+3,f
 20051  0572                     l9154:	
 20052  0572  3001               	movlw	1
 20053  0573  00B6               	movwf	??___fldiv
 20054  0574  0836               	movf	??___fldiv,w
 20055  0575  07C7               	addwf	___fldiv@aexp,f
 20056  0576  2D3B               	goto	l9156
 20057  0577                     l9158:	
 20058  0577  083E               	movf	___fldiv@rem+3,w
 20059  0578  043D               	iorwf	___fldiv@rem+2,w
 20060  0579  043C               	iorwf	___fldiv@rem+1,w
 20061  057A  043B               	iorwf	___fldiv@rem,w
 20062  057B  1D03               	btfss	3,2
 20063  057C  1442               	bsf	___fldiv@grs,0
 20064  057D                     l9172:	
 20065  057D  1BB4               	btfsc	___fldiv@b+2,7
 20066  057E  2D94               	goto	l9174
 20067  057F  3001               	movlw	1
 20068  0580                     u8975:	
 20069  0580  35B2               	lslf	___fldiv@b,f
 20070  0581  0DB3               	rlf	___fldiv@b+1,f
 20071  0582  0DB4               	rlf	___fldiv@b+2,f
 20072  0583  0DB5               	rlf	___fldiv@b+3,f
 20073  0584  0B89               	decfsz	9,f
 20074  0585  2D80               	goto	u8975
 20075  0586  1BC5               	btfsc	___fldiv@grs+3,7
 20076  0587  1432               	bsf	___fldiv@b,0
 20077  0588  3001               	movlw	1
 20078  0589                     u8995:	
 20079  0589  35C2               	lslf	___fldiv@grs,f
 20080  058A  0DC3               	rlf	___fldiv@grs+1,f
 20081  058B  0DC4               	rlf	___fldiv@grs+2,f
 20082  058C  0DC5               	rlf	___fldiv@grs+3,f
 20083  058D  0B89               	decfsz	9,f
 20084  058E  2D89               	goto	u8995
 20085  058F  30FF               	movlw	255
 20086  0590  07C0               	addwf	___fldiv@new_exp,f
 20087  0591  30FF               	movlw	255
 20088  0592  3DC1               	addwfc	___fldiv@new_exp+1,f
 20089  0593  2D7D               	goto	l9172
 20090  0594                     l9174:	
 20091  0594  01C7               	clrf	___fldiv@aexp
 20092  0595  1FC5               	btfss	___fldiv@grs+3,7
 20093  0596  2DAD               	goto	l9184
 20094  0597  30FF               	movlw	255
 20095  0598  0542               	andwf	___fldiv@grs,w
 20096  0599  00B6               	movwf	??___fldiv
 20097  059A  30FF               	movlw	255
 20098  059B  0543               	andwf	___fldiv@grs+1,w
 20099  059C  00B7               	movwf	??___fldiv+1
 20100  059D  30FF               	movlw	255
 20101  059E  0544               	andwf	___fldiv@grs+2,w
 20102  059F  00B8               	movwf	??___fldiv+2
 20103  05A0  307F               	movlw	127
 20104  05A1  0545               	andwf	___fldiv@grs+3,w
 20105  05A2  00B9               	movwf	??___fldiv+3
 20106  05A3  0839               	movf	??___fldiv+3,w
 20107  05A4  0438               	iorwf	??___fldiv+2,w
 20108  05A5  0437               	iorwf	??___fldiv+1,w
 20109  05A6  0436               	iorwf	??___fldiv,w
 20110  05A7  1903               	skipnz
 20111  05A8  1832               	btfsc	___fldiv@b,0
 20112  05A9  2DAB               	goto	l9180
 20113  05AA  2DAD               	goto	l9184
 20114  05AB                     l9180:	
 20115  05AB  01C7               	clrf	___fldiv@aexp
 20116  05AC  0AC7               	incf	___fldiv@aexp,f
 20117  05AD                     l9184:	
 20118  05AD  0847               	movf	___fldiv@aexp,w
 20119  05AE  1903               	btfsc	3,2
 20120  05AF  2DD6               	goto	l9194
 20121  05B0  3001               	movlw	1
 20122  05B1  07B2               	addwf	___fldiv@b,f
 20123  05B2  3000               	movlw	0
 20124  05B3  3DB3               	addwfc	___fldiv@b+1,f
 20125  05B4  3000               	movlw	0
 20126  05B5  3DB4               	addwfc	___fldiv@b+2,f
 20127  05B6  3000               	movlw	0
 20128  05B7  3DB5               	addwfc	___fldiv@b+3,f
 20129  05B8  1C35               	btfss	___fldiv@b+3,0
 20130  05B9  2DD6               	goto	l9194
 20131  05BA  0832               	movf	___fldiv@b,w
 20132  05BB  00B6               	movwf	??___fldiv
 20133  05BC  0833               	movf	___fldiv@b+1,w
 20134  05BD  00B7               	movwf	??___fldiv+1
 20135  05BE  0834               	movf	___fldiv@b+2,w
 20136  05BF  00B8               	movwf	??___fldiv+2
 20137  05C0  0835               	movf	___fldiv@b+3,w
 20138  05C1  00B9               	movwf	??___fldiv+3
 20139  05C2  3001               	movlw	1
 20140  05C3  00BA               	movwf	??___fldiv+4
 20141  05C4                     u9065:	
 20142  05C4  37B9               	asrf	??___fldiv+3,f
 20143  05C5  0CB8               	rrf	??___fldiv+2,f
 20144  05C6  0CB7               	rrf	??___fldiv+1,f
 20145  05C7  0CB6               	rrf	??___fldiv,f
 20146  05C8  0BBA               	decfsz	??___fldiv+4,f
 20147  05C9  2DC4               	goto	u9065
 20148  05CA  0839               	movf	??___fldiv+3,w
 20149  05CB  00B5               	movwf	___fldiv@b+3
 20150  05CC  0838               	movf	??___fldiv+2,w
 20151  05CD  00B4               	movwf	___fldiv@b+2
 20152  05CE  0837               	movf	??___fldiv+1,w
 20153  05CF  00B3               	movwf	___fldiv@b+1
 20154  05D0  0836               	movf	??___fldiv,w
 20155  05D1  00B2               	movwf	___fldiv@b
 20156  05D2  3001               	movlw	1
 20157  05D3  07C0               	addwf	___fldiv@new_exp,f
 20158  05D4  3000               	movlw	0
 20159  05D5  3DC1               	addwfc	___fldiv@new_exp+1,f
 20160  05D6                     l9194:	
 20161  05D6  0841               	movf	___fldiv@new_exp+1,w
 20162  05D7  3A80               	xorlw	128
 20163  05D8  00B6               	movwf	??___fldiv
 20164  05D9  3080               	movlw	128
 20165  05DA  0236               	subwf	??___fldiv,w
 20166  05DB  1D03               	skipz
 20167  05DC  2DDF               	goto	u9075
 20168  05DD  30FF               	movlw	255
 20169  05DE  0240               	subwf	___fldiv@new_exp,w
 20170  05DF                     u9075:	
 20171  05DF  1C03               	skipc
 20172  05E0  2DEE               	goto	l2101
 20173  05E1  30FF               	movlw	255
 20174  05E2  0140               	movlb	0	; select bank0
 20175  05E3  00C0               	movwf	___fldiv@new_exp
 20176  05E4  3000               	movlw	0
 20177  05E5  00C1               	movwf	___fldiv@new_exp+1
 20178  05E6  3000               	movlw	0
 20179  05E7  00B5               	movwf	___fldiv@b+3
 20180  05E8  3000               	movlw	0
 20181  05E9  00B4               	movwf	___fldiv@b+2
 20182  05EA  3000               	movlw	0
 20183  05EB  00B3               	movwf	___fldiv@b+1
 20184  05EC  3000               	movlw	0
 20185  05ED  00B2               	movwf	___fldiv@b
 20186  05EE                     l2101:	
 20187  05EE  0140               	movlb	0	; select bank0
 20188  05EF  0841               	movf	___fldiv@new_exp+1,w
 20189  05F0  3A80               	xorlw	128
 20190  05F1  00B6               	movwf	??___fldiv
 20191  05F2  3080               	movlw	128
 20192  05F3  0236               	subwf	??___fldiv,w
 20193  05F4  1D03               	skipz
 20194  05F5  2DF8               	goto	u9085
 20195  05F6  3001               	movlw	1
 20196  05F7  0240               	subwf	___fldiv@new_exp,w
 20197  05F8                     u9085:	
 20198  05F8  1803               	skipnc
 20199  05F9  2E06               	goto	l2102
 20200  05FA  0140               	movlb	0	; select bank0
 20201  05FB  01C0               	clrf	___fldiv@new_exp
 20202  05FC  01C1               	clrf	___fldiv@new_exp+1
 20203  05FD  3000               	movlw	0
 20204  05FE  00B5               	movwf	___fldiv@b+3
 20205  05FF  3000               	movlw	0
 20206  0600  00B4               	movwf	___fldiv@b+2
 20207  0601  3000               	movlw	0
 20208  0602  00B3               	movwf	___fldiv@b+1
 20209  0603  3000               	movlw	0
 20210  0604  00B2               	movwf	___fldiv@b
 20211  0605  01BF               	clrf	___fldiv@sign
 20212  0606                     l2102:	
 20213  0606  0140               	movlb	0	; select bank0
 20214  0607  0840               	movf	___fldiv@new_exp,w
 20215  0608  00B6               	movwf	??___fldiv
 20216  0609  0836               	movf	??___fldiv,w
 20217  060A  00C6               	movwf	___fldiv@bexp
 20218  060B  1C46               	btfss	___fldiv@bexp,0
 20219  060C  2E0F               	goto	l9208
 20220  060D  17B4               	bsf	___fldiv@b+2,7
 20221  060E  2E13               	goto	l2104
 20222  060F                     l9208:	
 20223  060F  307F               	movlw	127
 20224  0610  00B6               	movwf	??___fldiv
 20225  0611  0836               	movf	??___fldiv,w
 20226  0612  05B4               	andwf	___fldiv@b+2,f
 20227  0613                     l2104:	
 20228  0613  3646               	lsrf	___fldiv@bexp,w
 20229  0614  00B6               	movwf	??___fldiv
 20230  0615  0836               	movf	??___fldiv,w
 20231  0616  00B5               	movwf	___fldiv@b+3
 20232  0617  2CF9               	goto	L19
 20233  0618                     __end_of___fldiv:	
 20234                           
 20235                           	psect	text66
 20236  1FE2                     __ptext66:	
 20237 ;; *************** function _PWM4_LoadDutyValue *****************
 20238 ;; Defined at:
 20239 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 20242 ;; Auto vars:     Size  Location     Type
 20243 ;;		None
 20244 ;; Return value:  Size  Location     Type
 20245 ;;                  1    wreg      void 
 20246 ;; Registers used:
 20247 ;;		wreg, status,2
 20248 ;; Tracked objects:
 20249 ;;		On entry : 0/0
 20250 ;;		On exit  : 0/0
 20251 ;;		Unchanged: 0/0
 20252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20253 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20256 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20257 ;;Total ram usage:        2 bytes
 20258 ;; Hardware stack levels used:    1
 20259 ;; Hardware stack levels required when called:    4
 20260 ;; This function calls:
 20261 ;;		Nothing
 20262 ;; This function is called by:
 20263 ;;		_LED_setColor
 20264 ;; This function uses a non-reentrant model
 20265 ;;
 20266                           
 20267                           
 20268                           ;psect for function _PWM4_LoadDutyValue
 20269  1FE2                     _PWM4_LoadDutyValue:	
 20270                           
 20271                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 20272                           
 20273                           ;incstack = 0
 20274                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 20275  1FE2  3000               	movlw	0
 20276  1FE3  0141               	movlb	1	; select bank1
 20277  1FE4  0221               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 20278  1FE5  3080               	movlw	128
 20279  1FE6  1903               	skipnz
 20280  1FE7  0220               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 20281  1FE8  1803               	skipnc
 20282  1FE9  0008               	return
 20283                           
 20284                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 20285  1FEA  30FF               	movlw	255
 20286  1FEB  05A0               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 20287  1FEC  3003               	movlw	3
 20288  1FED  05A1               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 20289                           
 20290                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 20291  1FEE  0146               	movlb	6	; select bank6
 20292  1FEF  1E1A               	btfss	26,4	;volatile
 20293  1FF0  2FF7               	goto	l9422
 20294                           
 20295                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 20296  1FF1  3006               	movlw	6
 20297  1FF2  0141               	movlb	1	; select bank1
 20298  1FF3                     u9555:	
 20299  1FF3  35A0               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 20300  1FF4  0DA1               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 20301  1FF5  0B89               	decfsz	9,f
 20302  1FF6  2FF3               	goto	u9555
 20303  1FF7                     l9422:	
 20304                           
 20305                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 20306  1FF7  0141               	movlb	1	; select bank1
 20307  1FF8  0821               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 20308  1FF9  0146               	movlb	6	; select bank6
 20309  1FFA  0099               	movwf	25	;volatile
 20310                           
 20311                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 20312  1FFB  0141               	movlb	1	; select bank1
 20313  1FFC  0820               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 20314  1FFD  0146               	movlb	6	; select bank6
 20315  1FFE  0098               	movwf	24	;volatile
 20316                           
 20317                           ;mcc_generated_files/pwm4.c: 93:         }
 20318  1FFF  0008               	return
 20319  2000                     __end_of_PWM4_LoadDutyValue:	
 20320                           
 20321                           	psect	text67
 20322  1FC4                     __ptext67:	
 20323 ;; *************** function _PWM3_LoadDutyValue *****************
 20324 ;; Defined at:
 20325 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 20326 ;; Parameters:    Size  Location     Type
 20327 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 20328 ;; Auto vars:     Size  Location     Type
 20329 ;;		None
 20330 ;; Return value:  Size  Location     Type
 20331 ;;                  1    wreg      void 
 20332 ;; Registers used:
 20333 ;;		wreg, status,2
 20334 ;; Tracked objects:
 20335 ;;		On entry : 0/0
 20336 ;;		On exit  : 0/0
 20337 ;;		Unchanged: 0/0
 20338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20339 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20342 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20343 ;;Total ram usage:        2 bytes
 20344 ;; Hardware stack levels used:    1
 20345 ;; Hardware stack levels required when called:    4
 20346 ;; This function calls:
 20347 ;;		Nothing
 20348 ;; This function is called by:
 20349 ;;		_LED_setColor
 20350 ;; This function uses a non-reentrant model
 20351 ;;
 20352                           
 20353                           
 20354                           ;psect for function _PWM3_LoadDutyValue
 20355  1FC4                     _PWM3_LoadDutyValue:	
 20356                           
 20357                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 20358                           
 20359                           ;incstack = 0
 20360                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 20361  1FC4  3000               	movlw	0
 20362  1FC5  0141               	movlb	1	; select bank1
 20363  1FC6  0221               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 20364  1FC7  3080               	movlw	128
 20365  1FC8  1903               	skipnz
 20366  1FC9  0220               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 20367  1FCA  1803               	skipnc
 20368  1FCB  0008               	return
 20369                           
 20370                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 20371  1FCC  30FF               	movlw	255
 20372  1FCD  05A0               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 20373  1FCE  3003               	movlw	3
 20374  1FCF  05A1               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 20375                           
 20376                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 20377  1FD0  0146               	movlb	6	; select bank6
 20378  1FD1  1E16               	btfss	22,4	;volatile
 20379  1FD2  2FD9               	goto	l9406
 20380                           
 20381                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 20382  1FD3  3006               	movlw	6
 20383  1FD4  0141               	movlb	1	; select bank1
 20384  1FD5                     u9525:	
 20385  1FD5  35A0               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 20386  1FD6  0DA1               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 20387  1FD7  0B89               	decfsz	9,f
 20388  1FD8  2FD5               	goto	u9525
 20389  1FD9                     l9406:	
 20390                           
 20391                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 20392  1FD9  0141               	movlb	1	; select bank1
 20393  1FDA  0821               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 20394  1FDB  0146               	movlb	6	; select bank6
 20395  1FDC  0095               	movwf	21	;volatile
 20396                           
 20397                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 20398  1FDD  0141               	movlb	1	; select bank1
 20399  1FDE  0820               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 20400  1FDF  0146               	movlb	6	; select bank6
 20401  1FE0  0094               	movwf	20	;volatile
 20402                           
 20403                           ;mcc_generated_files/pwm3.c: 93:         }
 20404  1FE1  0008               	return
 20405  1FE2                     __end_of_PWM3_LoadDutyValue:	
 20406                           
 20407                           	psect	text68
 20408  1FA6                     __ptext68:	
 20409 ;; *************** function _PWM2_LoadDutyValue *****************
 20410 ;; Defined at:
 20411 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 20412 ;; Parameters:    Size  Location     Type
 20413 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 20414 ;; Auto vars:     Size  Location     Type
 20415 ;;		None
 20416 ;; Return value:  Size  Location     Type
 20417 ;;                  1    wreg      void 
 20418 ;; Registers used:
 20419 ;;		wreg, status,2
 20420 ;; Tracked objects:
 20421 ;;		On entry : 0/0
 20422 ;;		On exit  : 0/0
 20423 ;;		Unchanged: 0/0
 20424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20425 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20428 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20429 ;;Total ram usage:        2 bytes
 20430 ;; Hardware stack levels used:    1
 20431 ;; Hardware stack levels required when called:    4
 20432 ;; This function calls:
 20433 ;;		Nothing
 20434 ;; This function is called by:
 20435 ;;		_LED_setColor
 20436 ;; This function uses a non-reentrant model
 20437 ;;
 20438                           
 20439                           
 20440                           ;psect for function _PWM2_LoadDutyValue
 20441  1FA6                     _PWM2_LoadDutyValue:	
 20442                           
 20443                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 20444                           
 20445                           ;incstack = 0
 20446                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 20447  1FA6  3000               	movlw	0
 20448  1FA7  0141               	movlb	1	; select bank1
 20449  1FA8  0221               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 20450  1FA9  3080               	movlw	128
 20451  1FAA  1903               	skipnz
 20452  1FAB  0220               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 20453  1FAC  1803               	skipnc
 20454  1FAD  0008               	return
 20455                           
 20456                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 20457  1FAE  30FF               	movlw	255
 20458  1FAF  05A0               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 20459  1FB0  3003               	movlw	3
 20460  1FB1  05A1               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 20461                           
 20462                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 20463  1FB2  0146               	movlb	6	; select bank6
 20464  1FB3  1E12               	btfss	18,4	;volatile
 20465  1FB4  2FBB               	goto	l9454
 20466                           
 20467                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 20468  1FB5  3006               	movlw	6
 20469  1FB6  0141               	movlb	1	; select bank1
 20470  1FB7                     u9615:	
 20471  1FB7  35A0               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 20472  1FB8  0DA1               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 20473  1FB9  0B89               	decfsz	9,f
 20474  1FBA  2FB7               	goto	u9615
 20475  1FBB                     l9454:	
 20476                           
 20477                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 20478  1FBB  0141               	movlb	1	; select bank1
 20479  1FBC  0821               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 20480  1FBD  0146               	movlb	6	; select bank6
 20481  1FBE  0091               	movwf	17	;volatile
 20482                           
 20483                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 20484  1FBF  0141               	movlb	1	; select bank1
 20485  1FC0  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 20486  1FC1  0146               	movlb	6	; select bank6
 20487  1FC2  0090               	movwf	16	;volatile
 20488                           
 20489                           ;mcc_generated_files/pwm2.c: 93:         }
 20490  1FC3  0008               	return
 20491  1FC4                     __end_of_PWM2_LoadDutyValue:	
 20492                           
 20493                           	psect	text69
 20494  1F88                     __ptext69:	
 20495 ;; *************** function _PWM1_LoadDutyValue *****************
 20496 ;; Defined at:
 20497 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 20498 ;; Parameters:    Size  Location     Type
 20499 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 20500 ;; Auto vars:     Size  Location     Type
 20501 ;;		None
 20502 ;; Return value:  Size  Location     Type
 20503 ;;                  1    wreg      void 
 20504 ;; Registers used:
 20505 ;;		wreg, status,2
 20506 ;; Tracked objects:
 20507 ;;		On entry : 0/0
 20508 ;;		On exit  : 0/0
 20509 ;;		Unchanged: 0/0
 20510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20511 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20514 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20515 ;;Total ram usage:        2 bytes
 20516 ;; Hardware stack levels used:    1
 20517 ;; Hardware stack levels required when called:    4
 20518 ;; This function calls:
 20519 ;;		Nothing
 20520 ;; This function is called by:
 20521 ;;		_LED_setColor
 20522 ;; This function uses a non-reentrant model
 20523 ;;
 20524                           
 20525                           
 20526                           ;psect for function _PWM1_LoadDutyValue
 20527  1F88                     _PWM1_LoadDutyValue:	
 20528                           
 20529                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 20530                           
 20531                           ;incstack = 0
 20532                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 20533  1F88  3000               	movlw	0
 20534  1F89  0141               	movlb	1	; select bank1
 20535  1F8A  0221               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 20536  1F8B  3080               	movlw	128
 20537  1F8C  1903               	skipnz
 20538  1F8D  0220               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 20539  1F8E  1803               	skipnc
 20540  1F8F  0008               	return
 20541                           
 20542                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 20543  1F90  30FF               	movlw	255
 20544  1F91  05A0               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 20545  1F92  3003               	movlw	3
 20546  1F93  05A1               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 20547                           
 20548                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 20549  1F94  0146               	movlb	6	; select bank6
 20550  1F95  1E0E               	btfss	14,4	;volatile
 20551  1F96  2F9D               	goto	l9438
 20552                           
 20553                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 20554  1F97  3006               	movlw	6
 20555  1F98  0141               	movlb	1	; select bank1
 20556  1F99                     u9585:	
 20557  1F99  35A0               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 20558  1F9A  0DA1               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 20559  1F9B  0B89               	decfsz	9,f
 20560  1F9C  2F99               	goto	u9585
 20561  1F9D                     l9438:	
 20562                           
 20563                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 20564  1F9D  0141               	movlb	1	; select bank1
 20565  1F9E  0821               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 20566  1F9F  0146               	movlb	6	; select bank6
 20567  1FA0  008D               	movwf	13	;volatile
 20568                           
 20569                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 20570  1FA1  0141               	movlb	1	; select bank1
 20571  1FA2  0820               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 20572  1FA3  0146               	movlb	6	; select bank6
 20573  1FA4  008C               	movwf	12	;volatile
 20574                           
 20575                           ;mcc_generated_files/pwm1.c: 93:         }
 20576  1FA5  0008               	return
 20577  1FA6                     __end_of_PWM1_LoadDutyValue:	
 20578                           
 20579                           	psect	text70
 20580  1D72                     __ptext70:	
 20581 ;; *************** function _BEAT_detected *****************
 20582 ;; Defined at:
 20583 ;;		line 49 in file "beat.c"
 20584 ;; Parameters:    Size  Location     Type
 20585 ;;		None
 20586 ;; Auto vars:     Size  Location     Type
 20587 ;;		None
 20588 ;; Return value:  Size  Location     Type
 20589 ;;                  1    wreg      _Bool 
 20590 ;; Registers used:
 20591 ;;		wreg, status,2, status,0
 20592 ;; Tracked objects:
 20593 ;;		On entry : 0/0
 20594 ;;		On exit  : 0/0
 20595 ;;		Unchanged: 0/0
 20596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20601 ;;Total ram usage:        0 bytes
 20602 ;; Hardware stack levels used:    1
 20603 ;; Hardware stack levels required when called:    4
 20604 ;; This function calls:
 20605 ;;		Nothing
 20606 ;; This function is called by:
 20607 ;;		_LED_task_BEAT_STROBE
 20608 ;; This function uses a non-reentrant model
 20609 ;;
 20610                           
 20611                           
 20612                           ;psect for function _BEAT_detected
 20613  1D72                     _BEAT_detected:	
 20614                           
 20615                           ;beat.c: 50:     if (detected) {
 20616                           
 20617                           ;incstack = 0
 20618                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 20619  1D72  0141               	movlb	1	; select bank1
 20620  1D73  0856               	movf	_detected^(0+128),w
 20621  1D74  1903               	btfsc	3,2
 20622  1D75  2D79               	goto	l7674
 20623                           
 20624                           ;beat.c: 51:         detected = 0;
 20625  1D76  01D6               	clrf	_detected^(0+128)
 20626                           
 20627                           ;beat.c: 52:         return 1;
 20628  1D77  3001               	movlw	1
 20629  1D78  0008               	return
 20630  1D79                     l7674:	
 20631                           
 20632                           ;beat.c: 55:     return 0;
 20633  1D79  3000               	movlw	0
 20634  1D7A  0008               	return
 20635  1D7B                     __end_of_BEAT_detected:	
 20636                           
 20637                           	psect	text71
 20638  1D0D                     __ptext71:	
 20639 ;; *************** function _LED_task_BEAT_MIXED *****************
 20640 ;; Defined at:
 20641 ;;		line 216 in file "led.c"
 20642 ;; Parameters:    Size  Location     Type
 20643 ;;		None
 20644 ;; Auto vars:     Size  Location     Type
 20645 ;;		None
 20646 ;; Return value:  Size  Location     Type
 20647 ;;                  1    wreg      void 
 20648 ;; Registers used:
 20649 ;;		None
 20650 ;; Tracked objects:
 20651 ;;		On entry : 0/0
 20652 ;;		On exit  : 0/0
 20653 ;;		Unchanged: 0/0
 20654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20659 ;;Total ram usage:        0 bytes
 20660 ;; Hardware stack levels used:    1
 20661 ;; Hardware stack levels required when called:    4
 20662 ;; This function calls:
 20663 ;;		Nothing
 20664 ;; This function is called by:
 20665 ;;		_CONTROL_BEAT
 20666 ;;		_LED_task
 20667 ;; This function uses a non-reentrant model
 20668 ;;
 20669                           
 20670                           
 20671                           ;psect for function _LED_task_BEAT_MIXED
 20672  1D0D                     _LED_task_BEAT_MIXED:	
 20673                           
 20674                           ;incstack = 0
 20675                           ; Regs used in _LED_task_BEAT_MIXED: []
 20676  1D0D  0008               	return
 20677  1D0E                     __end_of_LED_task_BEAT_MIXED:	
 20678                           
 20679                           	psect	text72
 20680  1D0C                     __ptext72:	
 20681 ;; *************** function _LED_task_BEAT_FADE *****************
 20682 ;; Defined at:
 20683 ;;		line 204 in file "led.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;		None
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;		None
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  1    wreg      void 
 20690 ;; Registers used:
 20691 ;;		None
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20701 ;;Total ram usage:        0 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:    4
 20704 ;; This function calls:
 20705 ;;		Nothing
 20706 ;; This function is called by:
 20707 ;;		_CONTROL_BEAT
 20708 ;;		_LED_task
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           
 20713                           ;psect for function _LED_task_BEAT_FADE
 20714  1D0C                     _LED_task_BEAT_FADE:	
 20715                           
 20716                           ;incstack = 0
 20717                           ; Regs used in _LED_task_BEAT_FADE: []
 20718  1D0C  0008               	return
 20719  1D0D                     __end_of_LED_task_BEAT_FADE:	
 20720                           
 20721                           	psect	text73
 20722  1E9F                     __ptext73:	
 20723 ;; *************** function _BUTTONS_isClicked *****************
 20724 ;; Defined at:
 20725 ;;		line 97 in file "buttons.c"
 20726 ;; Parameters:    Size  Location     Type
 20727 ;;  button          1    wreg     PTR struct .
 20728 ;;		 -> buttons(32), NULL(0), 
 20729 ;; Auto vars:     Size  Location     Type
 20730 ;;  button          1    0[BANK0 ] PTR struct .
 20731 ;;		 -> buttons(32), NULL(0), 
 20732 ;; Return value:  Size  Location     Type
 20733 ;;                  1    wreg      _Bool 
 20734 ;; Registers used:
 20735 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20736 ;; Tracked objects:
 20737 ;;		On entry : 0/0
 20738 ;;		On exit  : 0/0
 20739 ;;		Unchanged: 0/0
 20740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20745 ;;Total ram usage:        1 bytes
 20746 ;; Hardware stack levels used:    1
 20747 ;; Hardware stack levels required when called:    4
 20748 ;; This function calls:
 20749 ;;		Nothing
 20750 ;; This function is called by:
 20751 ;;		_CONTROLLER_task
 20752 ;; This function uses a non-reentrant model
 20753 ;;
 20754                           
 20755                           
 20756                           ;psect for function _BUTTONS_isClicked
 20757  1E9F                     _BUTTONS_isClicked:	
 20758                           
 20759                           ;incstack = 0
 20760                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 20761                           ;BUTTONS_isClicked@button stored from wreg
 20762  1E9F  0140               	movlb	0	; select bank0
 20763  1EA0  00A0               	movwf	BUTTONS_isClicked@button
 20764                           
 20765                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 20766  1EA1  0820               	movf	BUTTONS_isClicked@button,w
 20767  1EA2  3E07               	addlw	7
 20768  1EA3  0086               	movwf	6
 20769  1EA4  3003               	movlw	3	; select bank6/7
 20770  1EA5  0087               	movwf	7
 20771  1EA6  0301               	decf	1,w
 20772  1EA7  1D03               	btfss	3,2
 20773  1EA8  2EB1               	goto	l8180
 20774                           
 20775                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 20776  1EA9  0820               	movf	BUTTONS_isClicked@button,w
 20777  1EAA  3E07               	addlw	7
 20778  1EAB  0086               	movwf	6
 20779  1EAC  3003               	movlw	3	; select bank6/7
 20780  1EAD  0087               	movwf	7
 20781  1EAE  0181               	clrf	1
 20782                           
 20783                           ;buttons.c: 100:         return 1;
 20784  1EAF  3001               	movlw	1
 20785  1EB0  0008               	return
 20786  1EB1                     l8180:	
 20787                           
 20788                           ;buttons.c: 103:     return 0;
 20789  1EB1  3000               	movlw	0
 20790  1EB2  0008               	return
 20791  1EB3                     __end_of_BUTTONS_isClicked:	
 20792                           
 20793                           	psect	text74
 20794  02D1                     __ptext74:	
 20795 ;; *************** function _CONTROLLER_init *****************
 20796 ;; Defined at:
 20797 ;;		line 79 in file "controller.c"
 20798 ;; Parameters:    Size  Location     Type
 20799 ;;		None
 20800 ;; Auto vars:     Size  Location     Type
 20801 ;;		None
 20802 ;; Return value:  Size  Location     Type
 20803 ;;                  1    wreg      void 
 20804 ;; Registers used:
 20805 ;;		wreg, status,2, status,0
 20806 ;; Tracked objects:
 20807 ;;		On entry : 0/0
 20808 ;;		On exit  : 0/0
 20809 ;;		Unchanged: 0/0
 20810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20813 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20815 ;;Total ram usage:        1 bytes
 20816 ;; Hardware stack levels used:    1
 20817 ;; Hardware stack levels required when called:    4
 20818 ;; This function calls:
 20819 ;;		Nothing
 20820 ;; This function is called by:
 20821 ;;		_main
 20822 ;; This function uses a non-reentrant model
 20823 ;;
 20824                           
 20825                           
 20826                           ;psect for function _CONTROLLER_init
 20827  02D1                     _CONTROLLER_init:	
 20828                           
 20829                           ;controller.c: 82:     dmx.nextItem = &beat;
 20830                           
 20831                           ;incstack = 0
 20832                           ; Regs used in _CONTROLLER_init: [wreg+status,2+status,0]
 20833  02D1  304F               	movlw	low _beat
 20834  02D2  0143               	movlb	3	; select bank3
 20835  02D3  00DA               	movwf	_dmx^(0+384)
 20836  02D4  3001               	movlw	high _beat
 20837  02D5  00DB               	movwf	(_dmx+1)^(0+384)
 20838                           
 20839                           ;controller.c: 83:     dmx.prevItem = &manual;
 20840  02D6  3045               	movlw	low _manual
 20841  02D7  00DC               	movwf	(low ((_dmx| (0+256)+2)))^(0+128)
 20842  02D8  3001               	movlw	high _manual
 20843  02D9  00DD               	movwf	((low ((_dmx| (0+256)+2))+1))^(0+128)
 20844                           
 20845                           ;controller.c: 84:     dmx.config = &dmx_task;
 20846  02DA  305A               	movlw	low _dmx_task
 20847  02DB  00DE               	movwf	(low ((_dmx| (0+256)+4)))^(0+128)
 20848  02DC  3002               	movlw	high _dmx_task
 20849  02DD  00DF               	movwf	((low ((_dmx| (0+256)+4))+1))^(0+128)
 20850                           
 20851                           ;controller.c: 86:     dmx.name = DMX;
 20852  02DE  01E1               	clrf	(_dmx^(0+384)+7)
 20853                           
 20854                           ;controller.c: 87:     dmx.parent = &dmx;
 20855  02DF  30DA               	movlw	(low (_dmx| (0+256)))& (0+255)
 20856  02E0  0140               	movlb	0	; select bank0
 20857  02E1  00A0               	movwf	??_CONTROLLER_init
 20858  02E2  0820               	movf	??_CONTROLLER_init,w
 20859  02E3  0143               	movlb	3	; select bank3
 20860  02E4  00E0               	movwf	(low ((_dmx| (0+256)+6)))^(0+128)
 20861                           
 20862                           ;controller.c: 89:     beat.nextItem = &animation;
 20863  02E5  30D0               	movlw	low _animation
 20864  02E6  0142               	movlb	2	; select bank2
 20865  02E7  00CF               	movwf	_beat^(0+256)
 20866  02E8  3001               	movlw	high _animation
 20867  02E9  00D0               	movwf	(_beat+1)^(0+256)
 20868                           
 20869                           ;controller.c: 90:     beat.prevItem = &dmx;
 20870  02EA  30DA               	movlw	low _dmx
 20871  02EB  00D1               	movwf	(low ((_beat| (0+256)+2)))^0
 20872  02EC  3001               	movlw	high _dmx
 20873  02ED  00D2               	movwf	((low ((_beat| (0+256)+2))+1))^0
 20874                           
 20875                           ;controller.c: 91:     beat.config = &beatStrobe;
 20876  02EE  30C6               	movlw	low _beatStrobe
 20877  02EF  00D3               	movwf	(low ((_beat| (0+256)+4)))^0
 20878  02F0  3001               	movlw	high _beatStrobe
 20879  02F1  00D4               	movwf	((low ((_beat| (0+256)+4))+1))^0
 20880                           
 20881                           ;controller.c: 93:     beat.name = BEAT;
 20882  02F2  01D6               	clrf	(_beat^(0+256)+7)
 20883  02F3  0AD6               	incf	(_beat^(0+256)+7),f
 20884                           
 20885                           ;controller.c: 94:     beat.parent = &beat;
 20886  02F4  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 20887  02F5  0140               	movlb	0	; select bank0
 20888  02F6  00A0               	movwf	??_CONTROLLER_init
 20889  02F7  0820               	movf	??_CONTROLLER_init,w
 20890  02F8  0142               	movlb	2	; select bank2
 20891  02F9  00D5               	movwf	(low ((_beat| (0+256)+6)))^0
 20892                           
 20893                           ;controller.c: 96:     animation.nextItem = &manual;
 20894  02FA  3045               	movlw	low _manual
 20895  02FB  0143               	movlb	3	; select bank3
 20896  02FC  00D0               	movwf	_animation^(0+384)
 20897  02FD  3001               	movlw	high _manual
 20898  02FE  00D1               	movwf	(_animation+1)^(0+384)
 20899                           
 20900                           ;controller.c: 97:     animation.prevItem = &beat;
 20901  02FF  304F               	movlw	low _beat
 20902  0300  00D2               	movwf	(low ((_animation| (0+256)+2)))^(0+128)
 20903  0301  3001               	movlw	high _beat
 20904  0302  00D3               	movwf	((low ((_animation| (0+256)+2))+1))^(0+128)
 20905                           
 20906                           ;controller.c: 98:     animation.config = &animationBrightnessCtrl;
 20907  0303  30B2               	movlw	low _animationBrightnessCtrl
 20908  0304  00D4               	movwf	(low ((_animation| (0+256)+4)))^(0+128)
 20909  0305  3001               	movlw	high _animationBrightnessCtrl
 20910  0306  00D5               	movwf	((low ((_animation| (0+256)+4))+1))^(0+128)
 20911                           
 20912                           ;controller.c: 100:     animation.name = ANIMATION;
 20913  0307  3002               	movlw	2
 20914  0308  0140               	movlb	0	; select bank0
 20915  0309  00A0               	movwf	??_CONTROLLER_init
 20916  030A  0820               	movf	??_CONTROLLER_init,w
 20917  030B  0143               	movlb	3	; select bank3
 20918  030C  00D7               	movwf	(_animation^(0+384)+7)
 20919                           
 20920                           ;controller.c: 101:     animation.parent = &animation;
 20921  030D  30D0               	movlw	(low (_animation| (0+256)))& (0+255)
 20922  030E  0140               	movlb	0	; select bank0
 20923  030F  00A0               	movwf	??_CONTROLLER_init
 20924  0310  0820               	movf	??_CONTROLLER_init,w
 20925  0311  0143               	movlb	3	; select bank3
 20926  0312  00D6               	movwf	(low ((_animation| (0+256)+6)))^(0+128)
 20927                           
 20928                           ;controller.c: 103:     manual.nextItem = &dmx;
 20929  0313  30DA               	movlw	low _dmx
 20930  0314  0142               	movlb	2	; select bank2
 20931  0315  00C5               	movwf	_manual^(0+256)
 20932  0316  3001               	movlw	high _dmx
 20933  0317  00C6               	movwf	(_manual+1)^(0+256)
 20934                           
 20935                           ;controller.c: 104:     manual.prevItem = &animation;
 20936  0318  30D0               	movlw	low _animation
 20937  0319  00C7               	movwf	(low ((_manual| (0+256)+2)))^0
 20938  031A  3001               	movlw	high _animation
 20939  031B  00C8               	movwf	((low ((_manual| (0+256)+2))+1))^0
 20940                           
 20941                           ;controller.c: 105:     manual.config = &manualRed;
 20942  031C  30A8               	movlw	low _manualRed
 20943  031D  00C9               	movwf	(low ((_manual| (0+256)+4)))^0
 20944  031E  3001               	movlw	high _manualRed
 20945  031F  00CA               	movwf	((low ((_manual| (0+256)+4))+1))^0
 20946                           
 20947                           ;controller.c: 107:     manual.name = MANUAL;
 20948  0320  3003               	movlw	3
 20949  0321  0140               	movlb	0	; select bank0
 20950  0322  00A0               	movwf	??_CONTROLLER_init
 20951  0323  0820               	movf	??_CONTROLLER_init,w
 20952  0324  0142               	movlb	2	; select bank2
 20953  0325  00CC               	movwf	(_manual^(0+256)+7)
 20954                           
 20955                           ;controller.c: 108:     manual.parent = &manual;
 20956  0326  3045               	movlw	(low (_manual| (0+256)))& (0+255)
 20957  0327  0140               	movlb	0	; select bank0
 20958  0328  00A0               	movwf	??_CONTROLLER_init
 20959  0329  0820               	movf	??_CONTROLLER_init,w
 20960  032A  0142               	movlb	2	; select bank2
 20961  032B  00CB               	movwf	(low ((_manual| (0+256)+6)))^0
 20962                           
 20963                           ;controller.c: 113:     dmx_task.nextItem = ((void*)0);
 20964  032C  0144               	movlb	4	; select bank4
 20965  032D  01DA               	clrf	_dmx_task^(0+512)
 20966  032E  01DB               	clrf	(_dmx_task+1)^(0+512)
 20967                           
 20968                           ;controller.c: 114:     dmx_task.prevItem = ((void*)0);
 20969  032F  01DC               	clrf	(low ((_dmx_task| (0+512)+2)))^0
 20970  0330  01DD               	clrf	((low ((_dmx_task| (0+512)+2))+1))^0
 20971                           
 20972                           ;controller.c: 115:     dmx_task.config = ((void*)0);
 20973  0331  01DE               	clrf	(low ((_dmx_task| (0+512)+4)))^0
 20974  0332  01DF               	clrf	((low ((_dmx_task| (0+512)+4))+1))^0
 20975                           
 20976                           ;controller.c: 116:     dmx_task.task = CONTROL_DMX;
 20977  0333  30FD               	movlw	low _CONTROL_DMX
 20978  0334  00E2               	movwf	(low ((_dmx_task| (0+512)+8)))^0
 20979  0335  3008               	movlw	high _CONTROL_DMX
 20980  0336  00E3               	movwf	((low ((_dmx_task| (0+512)+8)))^0+1)
 20981                           
 20982                           ;controller.c: 117:     dmx_task.name = DMX_TASK;
 20983  0337  3004               	movlw	4
 20984  0338  0140               	movlb	0	; select bank0
 20985  0339  00A0               	movwf	??_CONTROLLER_init
 20986  033A  0820               	movf	??_CONTROLLER_init,w
 20987  033B  0144               	movlb	4	; select bank4
 20988  033C  00E1               	movwf	(_dmx_task^(0+512)+7)
 20989                           
 20990                           ;controller.c: 118:     dmx_task.parent = &dmx;
 20991  033D  30DA               	movlw	(low (_dmx| (0+256)))& (0+255)
 20992  033E  0140               	movlb	0	; select bank0
 20993  033F  00A0               	movwf	??_CONTROLLER_init
 20994  0340  0820               	movf	??_CONTROLLER_init,w
 20995  0341  0144               	movlb	4	; select bank4
 20996  0342  00E0               	movwf	(low ((_dmx_task| (0+512)+6)))^0
 20997                           
 20998                           ;controller.c: 121:     beatStrobe.nextItem = &beatFade;
 20999  0343  3050               	movlw	low _beatFade
 21000  0344  0143               	movlb	3	; select bank3
 21001  0345  00C6               	movwf	_beatStrobe^(0+384)
 21002  0346  3002               	movlw	high _beatFade
 21003  0347  00C7               	movwf	(_beatStrobe+1)^(0+384)
 21004                           
 21005                           ;controller.c: 122:     beatStrobe.prevItem = &beatMixed;
 21006  0348  30C8               	movlw	low _beatMixed
 21007  0349  00C8               	movwf	(low ((_beatStrobe| (0+256)+2)))^(0+128)
 21008  034A  3002               	movlw	high _beatMixed
 21009  034B  00C9               	movwf	((low ((_beatStrobe| (0+256)+2))+1))^(0+128)
 21010                           
 21011                           ;controller.c: 123:     beatStrobe.config = &beatStrobeTask;
 21012  034C  30BE               	movlw	low _beatStrobeTask
 21013  034D  00CA               	movwf	(low ((_beatStrobe| (0+256)+4)))^(0+128)
 21014  034E  3002               	movlw	high _beatStrobeTask
 21015  034F  00CB               	movwf	((low ((_beatStrobe| (0+256)+4))+1))^(0+128)
 21016                           
 21017                           ;controller.c: 125:     beatStrobe.name = B_STROBE;
 21018  0350  3005               	movlw	5
 21019  0351  0140               	movlb	0	; select bank0
 21020  0352  00A0               	movwf	??_CONTROLLER_init
 21021  0353  0820               	movf	??_CONTROLLER_init,w
 21022  0354  0143               	movlb	3	; select bank3
 21023  0355  00CD               	movwf	(_beatStrobe^(0+384)+7)
 21024                           
 21025                           ;controller.c: 126:     beatStrobe.parent = &beat;
 21026  0356  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21027  0357  0140               	movlb	0	; select bank0
 21028  0358  00A0               	movwf	??_CONTROLLER_init
 21029  0359  0820               	movf	??_CONTROLLER_init,w
 21030  035A  0143               	movlb	3	; select bank3
 21031  035B  00CC               	movwf	(low ((_beatStrobe| (0+256)+6)))^(0+128)
 21032                           
 21033                           ;controller.c: 128:     beatFade.nextItem = &beatCont;
 21034  035C  3046               	movlw	low _beatCont
 21035  035D  0144               	movlb	4	; select bank4
 21036  035E  00D0               	movwf	_beatFade^(0+512)
 21037  035F  3002               	movlw	high _beatCont
 21038  0360  00D1               	movwf	(_beatFade+1)^(0+512)
 21039                           
 21040                           ;controller.c: 129:     beatFade.prevItem = &beatStrobe;
 21041  0361  30C6               	movlw	low _beatStrobe
 21042  0362  00D2               	movwf	(low ((_beatFade| (0+512)+2)))^0
 21043  0363  3001               	movlw	high _beatStrobe
 21044  0364  00D3               	movwf	((low ((_beatFade| (0+512)+2))+1))^0
 21045                           
 21046                           ;controller.c: 130:     beatFade.config = &beatFadeTask;
 21047  0365  30B4               	movlw	low _beatFadeTask
 21048  0366  00D4               	movwf	(low ((_beatFade| (0+512)+4)))^0
 21049  0367  3002               	movlw	high _beatFadeTask
 21050  0368  00D5               	movwf	((low ((_beatFade| (0+512)+4))+1))^0
 21051                           
 21052                           ;controller.c: 132:     beatFade.name = B_FADE;
 21053  0369  3006               	movlw	6
 21054  036A  0140               	movlb	0	; select bank0
 21055  036B  00A0               	movwf	??_CONTROLLER_init
 21056  036C  0820               	movf	??_CONTROLLER_init,w
 21057  036D  0144               	movlb	4	; select bank4
 21058  036E  00D7               	movwf	(_beatFade^(0+512)+7)
 21059                           
 21060                           ;controller.c: 133:     beatFade.parent = &beat;
 21061  036F  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21062  0370  0140               	movlb	0	; select bank0
 21063  0371  00A0               	movwf	??_CONTROLLER_init
 21064  0372  0820               	movf	??_CONTROLLER_init,w
 21065  0373  0144               	movlb	4	; select bank4
 21066  0374  00D6               	movwf	(low ((_beatFade| (0+512)+6)))^0
 21067                           
 21068                           ;controller.c: 135:     beatCont.nextItem = &beatMixed;
 21069  0375  30C8               	movlw	low _beatMixed
 21070  0376  00C6               	movwf	_beatCont^(0+512)
 21071  0377  3002               	movlw	high _beatMixed
 21072  0378  00C7               	movwf	(_beatCont+1)^(0+512)
 21073                           
 21074                           ;controller.c: 136:     beatCont.prevItem = &beatFade;
 21075  0379  3050               	movlw	low _beatFade
 21076  037A  00C8               	movwf	(low ((_beatCont| (0+512)+2)))^0
 21077  037B  3002               	movlw	high _beatFade
 21078  037C  00C9               	movwf	((low ((_beatCont| (0+512)+2))+1))^0
 21079                           
 21080                           ;controller.c: 137:     beatCont.config = &beatContTask;
 21081  037D  30AA               	movlw	low _beatContTask
 21082  037E  00CA               	movwf	(low ((_beatCont| (0+512)+4)))^0
 21083  037F  3002               	movlw	high _beatContTask
 21084  0380  00CB               	movwf	((low ((_beatCont| (0+512)+4))+1))^0
 21085                           
 21086                           ;controller.c: 139:     beatCont.name = B_CONT;
 21087  0381  3007               	movlw	7
 21088  0382  0140               	movlb	0	; select bank0
 21089  0383  00A0               	movwf	??_CONTROLLER_init
 21090  0384  0820               	movf	??_CONTROLLER_init,w
 21091  0385  0144               	movlb	4	; select bank4
 21092  0386  00CD               	movwf	(_beatCont^(0+512)+7)
 21093                           
 21094                           ;controller.c: 140:     beatCont.parent = &beat;
 21095  0387  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21096  0388  0140               	movlb	0	; select bank0
 21097  0389  00A0               	movwf	??_CONTROLLER_init
 21098  038A  0820               	movf	??_CONTROLLER_init,w
 21099  038B  0144               	movlb	4	; select bank4
 21100  038C  00CC               	movwf	(low ((_beatCont| (0+512)+6)))^0
 21101                           
 21102                           ;controller.c: 142:     beatMixed.nextItem = &beatStrobe;
 21103  038D  30C6               	movlw	low _beatStrobe
 21104  038E  0145               	movlb	5	; select bank5
 21105  038F  00C8               	movwf	_beatMixed^(0+640)
 21106  0390  3001               	movlw	high _beatStrobe
 21107  0391  00C9               	movwf	(_beatMixed+1)^(0+640)
 21108                           
 21109                           ;controller.c: 143:     beatMixed.prevItem = &beatCont;
 21110  0392  3046               	movlw	low _beatCont
 21111  0393  00CA               	movwf	(low ((_beatMixed| (0+512)+2)))^(0+128)
 21112  0394  3002               	movlw	high _beatCont
 21113  0395  00CB               	movwf	((low ((_beatMixed| (0+512)+2))+1))^(0+128)
 21114                           
 21115                           ;controller.c: 144:     beatMixed.config = &beatMixedTask;
 21116  0396  30A0               	movlw	low _beatMixedTask
 21117  0397  00CC               	movwf	(low ((_beatMixed| (0+512)+4)))^(0+128)
 21118  0398  3002               	movlw	high _beatMixedTask
 21119  0399  00CD               	movwf	((low ((_beatMixed| (0+512)+4))+1))^(0+128)
 21120                           
 21121                           ;controller.c: 146:     beatMixed.name = B_MIXED;
 21122  039A  3008               	movlw	8
 21123  039B  0140               	movlb	0	; select bank0
 21124  039C  00A0               	movwf	??_CONTROLLER_init
 21125  039D  0820               	movf	??_CONTROLLER_init,w
 21126  039E  0145               	movlb	5	; select bank5
 21127  039F  00CF               	movwf	(_beatMixed^(0+640)+7)
 21128                           
 21129                           ;controller.c: 147:     beatMixed.parent = &beat;
 21130  03A0  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21131  03A1  0140               	movlb	0	; select bank0
 21132  03A2  00A0               	movwf	??_CONTROLLER_init
 21133  03A3  0820               	movf	??_CONTROLLER_init,w
 21134  03A4  0145               	movlb	5	; select bank5
 21135  03A5  00CE               	movwf	(low ((_beatMixed| (0+512)+6)))^(0+128)
 21136                           
 21137                           ;controller.c: 151:     animationType.nextItem = &animationBrightnessCtrl;
 21138  03A6  30B2               	movlw	low _animationBrightnessCtrl
 21139  03A7  0143               	movlb	3	; select bank3
 21140  03A8  00BC               	movwf	_animationType^(0+384)
 21141  03A9  3001               	movlw	high _animationBrightnessCtrl
 21142  03AA  00BD               	movwf	(_animationType+1)^(0+384)
 21143                           
 21144                           ;controller.c: 152:     animationType.prevItem = &animationBrightnessCtrl;
 21145  03AB  30B2               	movlw	low _animationBrightnessCtrl
 21146  03AC  00BE               	movwf	(low ((_animationType| (0+256)+2)))^(0+128)
 21147  03AD  3001               	movlw	high _animationBrightnessCtrl
 21148  03AE  00BF               	movwf	((low ((_animationType| (0+256)+2))+1))^(0+128)
 21149                           
 21150                           ;controller.c: 153:     animationType.config = ((void*)0);
 21151  03AF  01C0               	clrf	(low ((_animationType| (0+256)+4)))^(0+128)
 21152  03B0  01C1               	clrf	((low ((_animationType| (0+256)+4))+1))^(0+128)
 21153                           
 21154                           ;controller.c: 154:     animationType.task = LED_task_ANIMATION;
 21155  03B1  300E               	movlw	low _LED_task_ANIMATION
 21156  03B2  00C4               	movwf	(low ((_animationType| (0+256)+8)))^(0+128)
 21157  03B3  301D               	movlw	high _LED_task_ANIMATION
 21158  03B4  00C5               	movwf	((low ((_animationType| (0+256)+8)))^(0+128)+1)
 21159                           
 21160                           ;controller.c: 155:     animationType.name = A_SELECTION;
 21161  03B5  3012               	movlw	18
 21162  03B6  0140               	movlb	0	; select bank0
 21163  03B7  00A0               	movwf	??_CONTROLLER_init
 21164  03B8  0820               	movf	??_CONTROLLER_init,w
 21165  03B9  0143               	movlb	3	; select bank3
 21166  03BA  00C3               	movwf	(_animationType^(0+384)+7)
 21167                           
 21168                           ;controller.c: 156:     animationType.parent = &animation;
 21169  03BB  30D0               	movlw	(low (_animation| (0+256)))& (0+255)
 21170  03BC  0140               	movlb	0	; select bank0
 21171  03BD  00A0               	movwf	??_CONTROLLER_init
 21172  03BE  0820               	movf	??_CONTROLLER_init,w
 21173  03BF  0143               	movlb	3	; select bank3
 21174  03C0  00C2               	movwf	(low ((_animationType| (0+256)+6)))^(0+128)
 21175                           
 21176                           ;controller.c: 158:     animationBrightnessCtrl.nextItem = &animationType;
 21177  03C1  30BC               	movlw	low _animationType
 21178  03C2  00B2               	movwf	_animationBrightnessCtrl^(0+384)
 21179  03C3  3001               	movlw	high _animationType
 21180  03C4  00B3               	movwf	(_animationBrightnessCtrl+1)^(0+384)
 21181                           
 21182                           ;controller.c: 159:     animationBrightnessCtrl.prevItem = &animationType;
 21183  03C5  30BC               	movlw	low _animationType
 21184  03C6  00B4               	movwf	(low ((_animationBrightnessCtrl| (0+256)+2)))^(0+128)
 21185  03C7  3001               	movlw	high _animationType
 21186  03C8  00B5               	movwf	((low ((_animationBrightnessCtrl| (0+256)+2))+1))^(0+128)
 21187                           
 21188                           ;controller.c: 160:     animationBrightnessCtrl.config = ((void*)0);
 21189  03C9  01B6               	clrf	(low ((_animationBrightnessCtrl| (0+256)+4)))^(0+128)
 21190  03CA  01B7               	clrf	((low ((_animationBrightnessCtrl| (0+256)+4))+1))^(0+128)
 21191                           
 21192                           ;controller.c: 161:     animationBrightnessCtrl.task = LED_task_ANIMATION;
 21193  03CB  300E               	movlw	low _LED_task_ANIMATION
 21194  03CC  00BA               	movwf	(low ((_animationBrightnessCtrl| (0+256)+8)))^(0+128)
 21195  03CD  301D               	movlw	high _LED_task_ANIMATION
 21196  03CE  00BB               	movwf	((low ((_animationBrightnessCtrl| (0+256)+8)))^(0+128)+1)
 21197                           
 21198                           ;controller.c: 162:     animationBrightnessCtrl.name = A_BRIGHTNESS;
 21199  03CF  3011               	movlw	17
 21200  03D0  0140               	movlb	0	; select bank0
 21201  03D1  00A0               	movwf	??_CONTROLLER_init
 21202  03D2  0820               	movf	??_CONTROLLER_init,w
 21203  03D3  0143               	movlb	3	; select bank3
 21204  03D4  00B9               	movwf	(_animationBrightnessCtrl^(0+384)+7)
 21205                           
 21206                           ;controller.c: 163:     animationBrightnessCtrl.parent = &animation;
 21207  03D5  30D0               	movlw	(low (_animation| (0+256)))& (0+255)
 21208  03D6  0140               	movlb	0	; select bank0
 21209  03D7  00A0               	movwf	??_CONTROLLER_init
 21210  03D8  0820               	movf	??_CONTROLLER_init,w
 21211  03D9  0143               	movlb	3	; select bank3
 21212  03DA  00B8               	movwf	(low ((_animationBrightnessCtrl| (0+256)+6)))^(0+128)
 21213                           
 21214                           ;controller.c: 167:     manualRed.nextItem = &manualGreen;
 21215  03DB  303C               	movlw	low _manualGreen
 21216  03DC  00A8               	movwf	_manualRed^(0+384)
 21217  03DD  3002               	movlw	high _manualGreen
 21218  03DE  00A9               	movwf	(_manualRed+1)^(0+384)
 21219                           
 21220                           ;controller.c: 168:     manualRed.prevItem = &manualWhite;
 21221  03DF  3028               	movlw	low _manualWhite
 21222  03E0  00AA               	movwf	(low ((_manualRed| (0+256)+2)))^(0+128)
 21223  03E1  3002               	movlw	high _manualWhite
 21224  03E2  00AB               	movwf	((low ((_manualRed| (0+256)+2))+1))^(0+128)
 21225                           
 21226                           ;controller.c: 169:     manualRed.config = ((void*)0);
 21227  03E3  01AC               	clrf	(low ((_manualRed| (0+256)+4)))^(0+128)
 21228  03E4  01AD               	clrf	((low ((_manualRed| (0+256)+4))+1))^(0+128)
 21229                           
 21230                           ;controller.c: 170:     manualRed.task = LED_task_MANUAL;
 21231  03E5  30DE               	movlw	low _LED_task_MANUAL
 21232  03E6  00B0               	movwf	(low ((_manualRed| (0+256)+8)))^(0+128)
 21233  03E7  301D               	movlw	high _LED_task_MANUAL
 21234  03E8  00B1               	movwf	((low ((_manualRed| (0+256)+8)))^(0+128)+1)
 21235                           
 21236                           ;controller.c: 171:     manualRed.name = MANUAL_RED;
 21237  03E9  300D               	movlw	13
 21238  03EA  0140               	movlb	0	; select bank0
 21239  03EB  00A0               	movwf	??_CONTROLLER_init
 21240  03EC  0820               	movf	??_CONTROLLER_init,w
 21241  03ED  0143               	movlb	3	; select bank3
 21242  03EE  00AF               	movwf	(_manualRed^(0+384)+7)
 21243                           
 21244                           ;controller.c: 172:     manualRed.parent = &manual;
 21245  03EF  3045               	movlw	(low (_manual| (0+256)))& (0+255)
 21246  03F0  0140               	movlb	0	; select bank0
 21247  03F1  00A0               	movwf	??_CONTROLLER_init
 21248  03F2  0820               	movf	??_CONTROLLER_init,w
 21249  03F3  0143               	movlb	3	; select bank3
 21250  03F4  00AE               	movwf	(low ((_manualRed| (0+256)+6)))^(0+128)
 21251                           
 21252                           ;controller.c: 174:     manualGreen.nextItem = &manualBlue;
 21253  03F5  3032               	movlw	low _manualBlue
 21254  03F6  0144               	movlb	4	; select bank4
 21255  03F7  00BC               	movwf	_manualGreen^(0+512)
 21256  03F8  3002               	movlw	high _manualBlue
 21257  03F9  00BD               	movwf	(_manualGreen+1)^(0+512)
 21258                           
 21259                           ;controller.c: 175:     manualGreen.prevItem = &manualRed;
 21260  03FA  30A8               	movlw	low _manualRed
 21261  03FB  00BE               	movwf	(low ((_manualGreen| (0+512)+2)))^0
 21262  03FC  3001               	movlw	high _manualRed
 21263  03FD  00BF               	movwf	((low ((_manualGreen| (0+512)+2))+1))^0
 21264                           
 21265                           ;controller.c: 176:     manualGreen.config = ((void*)0);
 21266  03FE  01C0               	clrf	(low ((_manualGreen| (0+512)+4)))^0
 21267  03FF  01C1               	clrf	((low ((_manualGreen| (0+512)+4))+1))^0
 21268                           
 21269                           ;controller.c: 177:     manualGreen.task = LED_task_MANUAL;
 21270  0400  30DE               	movlw	low _LED_task_MANUAL
 21271  0401  00C4               	movwf	(low ((_manualGreen| (0+512)+8)))^0
 21272  0402  301D               	movlw	high _LED_task_MANUAL
 21273  0403  00C5               	movwf	((low ((_manualGreen| (0+512)+8)))^0+1)
 21274                           
 21275                           ;controller.c: 178:     manualGreen.name = MANUAL_GREEN;
 21276  0404  300E               	movlw	14
 21277  0405  0140               	movlb	0	; select bank0
 21278  0406  00A0               	movwf	??_CONTROLLER_init
 21279  0407  0820               	movf	??_CONTROLLER_init,w
 21280  0408  0144               	movlb	4	; select bank4
 21281  0409  00C3               	movwf	(_manualGreen^(0+512)+7)
 21282                           
 21283                           ;controller.c: 179:     manualGreen.parent = &manual;
 21284  040A  3045               	movlw	(low (_manual| (0+256)))& (0+255)
 21285  040B  0140               	movlb	0	; select bank0
 21286  040C  00A0               	movwf	??_CONTROLLER_init
 21287  040D  0820               	movf	??_CONTROLLER_init,w
 21288  040E  0144               	movlb	4	; select bank4
 21289  040F  00C2               	movwf	(low ((_manualGreen| (0+512)+6)))^0
 21290                           
 21291                           ;controller.c: 181:     manualBlue.nextItem = &manualWhite;
 21292  0410  3028               	movlw	low _manualWhite
 21293  0411  00B2               	movwf	_manualBlue^(0+512)
 21294  0412  3002               	movlw	high _manualWhite
 21295  0413  00B3               	movwf	(_manualBlue+1)^(0+512)
 21296                           
 21297                           ;controller.c: 182:     manualBlue.prevItem = &manualGreen;
 21298  0414  303C               	movlw	low _manualGreen
 21299  0415  00B4               	movwf	(low ((_manualBlue| (0+512)+2)))^0
 21300  0416  3002               	movlw	high _manualGreen
 21301  0417  00B5               	movwf	((low ((_manualBlue| (0+512)+2))+1))^0
 21302                           
 21303                           ;controller.c: 183:     manualBlue.config = ((void*)0);
 21304  0418  01B6               	clrf	(low ((_manualBlue| (0+512)+4)))^0
 21305  0419  01B7               	clrf	((low ((_manualBlue| (0+512)+4))+1))^0
 21306                           
 21307                           ;controller.c: 184:     manualBlue.task = LED_task_MANUAL;
 21308  041A  30DE               	movlw	low _LED_task_MANUAL
 21309  041B  00BA               	movwf	(low ((_manualBlue| (0+512)+8)))^0
 21310  041C  301D               	movlw	high _LED_task_MANUAL
 21311  041D  00BB               	movwf	((low ((_manualBlue| (0+512)+8)))^0+1)
 21312                           
 21313                           ;controller.c: 185:     manualBlue.name = MANUAL_BLUE;
 21314  041E  300F               	movlw	15
 21315  041F  0140               	movlb	0	; select bank0
 21316  0420  00A0               	movwf	??_CONTROLLER_init
 21317  0421  0820               	movf	??_CONTROLLER_init,w
 21318  0422  0144               	movlb	4	; select bank4
 21319  0423  00B9               	movwf	(_manualBlue^(0+512)+7)
 21320                           
 21321                           ;controller.c: 186:     manualBlue.parent = &manual;
 21322  0424  3045               	movlw	(low (_manual| (0+256)))& (0+255)
 21323  0425  0140               	movlb	0	; select bank0
 21324  0426  00A0               	movwf	??_CONTROLLER_init
 21325  0427  0820               	movf	??_CONTROLLER_init,w
 21326  0428  0144               	movlb	4	; select bank4
 21327  0429  00B8               	movwf	(low ((_manualBlue| (0+512)+6)))^0
 21328                           
 21329                           ;controller.c: 188:     manualWhite.nextItem = &manualRed;
 21330  042A  30A8               	movlw	low _manualRed
 21331  042B  00A8               	movwf	_manualWhite^(0+512)
 21332  042C  3001               	movlw	high _manualRed
 21333  042D  00A9               	movwf	(_manualWhite+1)^(0+512)
 21334                           
 21335                           ;controller.c: 189:     manualWhite.prevItem = &manualBlue;
 21336  042E  3032               	movlw	low _manualBlue
 21337  042F  00AA               	movwf	(low ((_manualWhite| (0+512)+2)))^0
 21338  0430  3002               	movlw	high _manualBlue
 21339  0431  00AB               	movwf	((low ((_manualWhite| (0+512)+2))+1))^0
 21340                           
 21341                           ;controller.c: 190:     manualWhite.config = ((void*)0);
 21342  0432  01AC               	clrf	(low ((_manualWhite| (0+512)+4)))^0
 21343  0433  01AD               	clrf	((low ((_manualWhite| (0+512)+4))+1))^0
 21344                           
 21345                           ;controller.c: 191:     manualWhite.task = LED_task_MANUAL;
 21346  0434  30DE               	movlw	low _LED_task_MANUAL
 21347  0435  00B0               	movwf	(low ((_manualWhite| (0+512)+8)))^0
 21348  0436  301D               	movlw	high _LED_task_MANUAL
 21349  0437  00B1               	movwf	((low ((_manualWhite| (0+512)+8)))^0+1)
 21350                           
 21351                           ;controller.c: 192:     manualWhite.name = MANUAL_WHITE;
 21352  0438  3010               	movlw	16
 21353  0439  0140               	movlb	0	; select bank0
 21354  043A  00A0               	movwf	??_CONTROLLER_init
 21355  043B  0820               	movf	??_CONTROLLER_init,w
 21356  043C  0144               	movlb	4	; select bank4
 21357  043D  00AF               	movwf	(_manualWhite^(0+512)+7)
 21358                           
 21359                           ;controller.c: 193:     manualWhite.parent = &manual;
 21360  043E  3045               	movlw	(low (_manual| (0+256)))& (0+255)
 21361  043F  0140               	movlb	0	; select bank0
 21362  0440  00A0               	movwf	??_CONTROLLER_init
 21363  0441  0820               	movf	??_CONTROLLER_init,w
 21364  0442  0144               	movlb	4	; select bank4
 21365  0443  00AE               	movwf	(low ((_manualWhite| (0+512)+6)))^0
 21366                           
 21367                           ;controller.c: 196:     beatStrobeTask.nextItem = ((void*)0);
 21368  0444  0145               	movlb	5	; select bank5
 21369  0445  01BE               	clrf	_beatStrobeTask^(0+640)
 21370  0446  01BF               	clrf	(_beatStrobeTask+1)^(0+640)
 21371                           
 21372                           ;controller.c: 197:     beatStrobeTask.prevItem = ((void*)0);
 21373  0447  01C0               	clrf	(low ((_beatStrobeTask| (0+512)+2)))^(0+128)
 21374  0448  01C1               	clrf	((low ((_beatStrobeTask| (0+512)+2))+1))^(0+128)
 21375                           
 21376                           ;controller.c: 198:     beatStrobeTask.config = ((void*)0);
 21377  0449  01C2               	clrf	(low ((_beatStrobeTask| (0+512)+4)))^(0+128)
 21378  044A  01C3               	clrf	((low ((_beatStrobeTask| (0+512)+4))+1))^(0+128)
 21379                           
 21380                           ;controller.c: 199:     beatStrobeTask.task = CONTROL_BEAT;
 21381  044B  307D               	movlw	low _CONTROL_BEAT
 21382  044C  00C6               	movwf	(low ((_beatStrobeTask| (0+512)+8)))^(0+128)
 21383  044D  3014               	movlw	high _CONTROL_BEAT
 21384  044E  00C7               	movwf	((low ((_beatStrobeTask| (0+512)+8)))^(0+128)+1)
 21385                           
 21386                           ;controller.c: 200:     beatStrobeTask.name = B_STROBE_TASK;
 21387  044F  3009               	movlw	9
 21388  0450  0140               	movlb	0	; select bank0
 21389  0451  00A0               	movwf	??_CONTROLLER_init
 21390  0452  0820               	movf	??_CONTROLLER_init,w
 21391  0453  0145               	movlb	5	; select bank5
 21392  0454  00C5               	movwf	(_beatStrobeTask^(0+640)+7)
 21393                           
 21394                           ;controller.c: 201:     beatStrobeTask.parent = &beat;
 21395  0455  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21396  0456  0140               	movlb	0	; select bank0
 21397  0457  00A0               	movwf	??_CONTROLLER_init
 21398  0458  0820               	movf	??_CONTROLLER_init,w
 21399  0459  0145               	movlb	5	; select bank5
 21400  045A  00C4               	movwf	(low ((_beatStrobeTask| (0+512)+6)))^(0+128)
 21401                           
 21402                           ;controller.c: 203:     beatFadeTask.nextItem = ((void*)0);
 21403  045B  01B4               	clrf	_beatFadeTask^(0+640)
 21404  045C  01B5               	clrf	(_beatFadeTask+1)^(0+640)
 21405                           
 21406                           ;controller.c: 204:     beatFadeTask.prevItem = ((void*)0);
 21407  045D  01B6               	clrf	(low ((_beatFadeTask| (0+512)+2)))^(0+128)
 21408  045E  01B7               	clrf	((low ((_beatFadeTask| (0+512)+2))+1))^(0+128)
 21409                           
 21410                           ;controller.c: 205:     beatFadeTask.config = ((void*)0);
 21411  045F  01B8               	clrf	(low ((_beatFadeTask| (0+512)+4)))^(0+128)
 21412  0460  01B9               	clrf	((low ((_beatFadeTask| (0+512)+4))+1))^(0+128)
 21413                           
 21414                           ;controller.c: 206:     beatFadeTask.task = CONTROL_BEAT;
 21415  0461  307D               	movlw	low _CONTROL_BEAT
 21416  0462  00BC               	movwf	(low ((_beatFadeTask| (0+512)+8)))^(0+128)
 21417  0463  3014               	movlw	high _CONTROL_BEAT
 21418  0464  00BD               	movwf	((low ((_beatFadeTask| (0+512)+8)))^(0+128)+1)
 21419                           
 21420                           ;controller.c: 207:     beatFadeTask.name = B_FADE_TASK;
 21421  0465  300A               	movlw	10
 21422  0466  0140               	movlb	0	; select bank0
 21423  0467  00A0               	movwf	??_CONTROLLER_init
 21424  0468  0820               	movf	??_CONTROLLER_init,w
 21425  0469  0145               	movlb	5	; select bank5
 21426  046A  00BB               	movwf	(_beatFadeTask^(0+640)+7)
 21427                           
 21428                           ;controller.c: 208:     beatFadeTask.parent = &beat;
 21429  046B  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21430  046C  0140               	movlb	0	; select bank0
 21431  046D  00A0               	movwf	??_CONTROLLER_init
 21432  046E  0820               	movf	??_CONTROLLER_init,w
 21433  046F  0145               	movlb	5	; select bank5
 21434  0470  00BA               	movwf	(low ((_beatFadeTask| (0+512)+6)))^(0+128)
 21435                           
 21436                           ;controller.c: 210:     beatContTask.nextItem = ((void*)0);
 21437  0471  01AA               	clrf	_beatContTask^(0+640)
 21438  0472  01AB               	clrf	(_beatContTask+1)^(0+640)
 21439                           
 21440                           ;controller.c: 211:     beatContTask.prevItem = ((void*)0);
 21441  0473  01AC               	clrf	(low ((_beatContTask| (0+512)+2)))^(0+128)
 21442  0474  01AD               	clrf	((low ((_beatContTask| (0+512)+2))+1))^(0+128)
 21443                           
 21444                           ;controller.c: 212:     beatContTask.config = ((void*)0);
 21445  0475  01AE               	clrf	(low ((_beatContTask| (0+512)+4)))^(0+128)
 21446  0476  01AF               	clrf	((low ((_beatContTask| (0+512)+4))+1))^(0+128)
 21447                           
 21448                           ;controller.c: 213:     beatContTask.task = CONTROL_BEAT;
 21449  0477  307D               	movlw	low _CONTROL_BEAT
 21450  0478  00B2               	movwf	(low ((_beatContTask| (0+512)+8)))^(0+128)
 21451  0479  3014               	movlw	high _CONTROL_BEAT
 21452  047A  00B3               	movwf	((low ((_beatContTask| (0+512)+8)))^(0+128)+1)
 21453                           
 21454                           ;controller.c: 214:     beatContTask.name = B_CONT_TASK;
 21455  047B  300B               	movlw	11
 21456  047C  0140               	movlb	0	; select bank0
 21457  047D  00A0               	movwf	??_CONTROLLER_init
 21458  047E  0820               	movf	??_CONTROLLER_init,w
 21459  047F  0145               	movlb	5	; select bank5
 21460  0480  00B1               	movwf	(_beatContTask^(0+640)+7)
 21461                           
 21462                           ;controller.c: 215:     beatContTask.parent = &beat;
 21463  0481  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21464  0482  0140               	movlb	0	; select bank0
 21465  0483  00A0               	movwf	??_CONTROLLER_init
 21466  0484  0820               	movf	??_CONTROLLER_init,w
 21467  0485  0145               	movlb	5	; select bank5
 21468  0486  00B0               	movwf	(low ((_beatContTask| (0+512)+6)))^(0+128)
 21469                           
 21470                           ;controller.c: 217:     beatMixedTask.nextItem = ((void*)0);
 21471  0487  01A0               	clrf	_beatMixedTask^(0+640)
 21472  0488  01A1               	clrf	(_beatMixedTask+1)^(0+640)
 21473                           
 21474                           ;controller.c: 218:     beatMixedTask.prevItem = ((void*)0);
 21475  0489  01A2               	clrf	(low ((_beatMixedTask| (0+512)+2)))^(0+128)
 21476  048A  01A3               	clrf	((low ((_beatMixedTask| (0+512)+2))+1))^(0+128)
 21477                           
 21478                           ;controller.c: 219:     beatMixedTask.config = ((void*)0);
 21479  048B  01A4               	clrf	(low ((_beatMixedTask| (0+512)+4)))^(0+128)
 21480  048C  01A5               	clrf	((low ((_beatMixedTask| (0+512)+4))+1))^(0+128)
 21481                           
 21482                           ;controller.c: 220:     beatMixedTask.task = CONTROL_BEAT;
 21483  048D  307D               	movlw	low _CONTROL_BEAT
 21484  048E  00A8               	movwf	(low ((_beatMixedTask| (0+512)+8)))^(0+128)
 21485  048F  3014               	movlw	high _CONTROL_BEAT
 21486  0490  00A9               	movwf	((low ((_beatMixedTask| (0+512)+8)))^(0+128)+1)
 21487                           
 21488                           ;controller.c: 221:     beatMixedTask.name = B_MIXED_TASK;
 21489  0491  300C               	movlw	12
 21490  0492  0140               	movlb	0	; select bank0
 21491  0493  00A0               	movwf	??_CONTROLLER_init
 21492  0494  0820               	movf	??_CONTROLLER_init,w
 21493  0495  0145               	movlb	5	; select bank5
 21494  0496  00A7               	movwf	(_beatMixedTask^(0+640)+7)
 21495                           
 21496                           ;controller.c: 222:     beatMixedTask.parent = &beat;
 21497  0497  304F               	movlw	(low (_beat| (0+256)))& (0+255)
 21498  0498  0140               	movlb	0	; select bank0
 21499  0499  00A0               	movwf	??_CONTROLLER_init
 21500  049A  0820               	movf	??_CONTROLLER_init,w
 21501  049B  0145               	movlb	5	; select bank5
 21502  049C  00A6               	movwf	(low ((_beatMixedTask| (0+512)+6)))^(0+128)
 21503  049D  0008               	return
 21504  049E                     __end_of_CONTROLLER_init:	
 21505                           
 21506                           	psect	text75
 21507  1D35                     __ptext75:	
 21508 ;; *************** function _CLOCK_init *****************
 21509 ;; Defined at:
 21510 ;;		line 8 in file "clock.c"
 21511 ;; Parameters:    Size  Location     Type
 21512 ;;		None
 21513 ;; Auto vars:     Size  Location     Type
 21514 ;;		None
 21515 ;; Return value:  Size  Location     Type
 21516 ;;                  1    wreg      void 
 21517 ;; Registers used:
 21518 ;;		wreg, status,2, status,0, pclath, cstack
 21519 ;; Tracked objects:
 21520 ;;		On entry : 0/0
 21521 ;;		On exit  : 0/0
 21522 ;;		Unchanged: 0/0
 21523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21528 ;;Total ram usage:        0 bytes
 21529 ;; Hardware stack levels used:    1
 21530 ;; Hardware stack levels required when called:    5
 21531 ;; This function calls:
 21532 ;;		_TMR0_SetInterruptHandler
 21533 ;; This function is called by:
 21534 ;;		_main
 21535 ;; This function uses a non-reentrant model
 21536 ;;
 21537                           
 21538                           
 21539                           ;psect for function _CLOCK_init
 21540  1D35                     _CLOCK_init:	
 21541                           
 21542                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 21543                           
 21544                           ;incstack = 0
 21545                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 21546  1D35  3029               	movlw	low _CLOCK_timerCallback
 21547  1D36  0140               	movlb	0	; select bank0
 21548  1D37  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 21549  1D38  301D               	movlw	high _CLOCK_timerCallback
 21550  1D39  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 21551  1D3A  319D  2569         	fcall	_TMR0_SetInterruptHandler
 21552  1D3C  0008               	return
 21553  1D3D                     __end_of_CLOCK_init:	
 21554                           
 21555                           	psect	text76
 21556  1D69                     __ptext76:	
 21557 ;; *************** function _TMR0_SetInterruptHandler *****************
 21558 ;; Defined at:
 21559 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 21560 ;; Parameters:    Size  Location     Type
 21561 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21562 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  1    wreg      void 
 21567 ;; Registers used:
 21568 ;;		wreg
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 0/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21577 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21578 ;;Total ram usage:        2 bytes
 21579 ;; Hardware stack levels used:    1
 21580 ;; Hardware stack levels required when called:    4
 21581 ;; This function calls:
 21582 ;;		Nothing
 21583 ;; This function is called by:
 21584 ;;		_TMR0_Initialize
 21585 ;;		_CLOCK_init
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           
 21590                           ;psect for function _TMR0_SetInterruptHandler
 21591  1D69                     _TMR0_SetInterruptHandler:	
 21592                           
 21593                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 21594                           
 21595                           ;incstack = 0
 21596                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 21597  1D69  0140               	movlb	0	; select bank0
 21598  1D6A  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 21599  1D6B  0142               	movlb	2	; select bank2
 21600  1D6C  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 21601  1D6D  0140               	movlb	0	; select bank0
 21602  1D6E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 21603  1D6F  0142               	movlb	2	; select bank2
 21604  1D70  00EE               	movwf	_TMR0_InterruptHandler^(0+256)
 21605  1D71  0008               	return
 21606  1D72                     __end_of_TMR0_SetInterruptHandler:	
 21607                           
 21608                           	psect	text77
 21609  0DC0                     __ptext77:	
 21610 ;; *************** function _BUTTONS_task *****************
 21611 ;; Defined at:
 21612 ;;		line 56 in file "buttons.c"
 21613 ;; Parameters:    Size  Location     Type
 21614 ;;		None
 21615 ;; Auto vars:     Size  Location     Type
 21616 ;;  btn             1    8[BANK0 ] PTR struct .
 21617 ;;		 -> buttons(32), 
 21618 ;;  i               1    5[BANK0 ] unsigned char 
 21619 ;;  time            2    6[BANK0 ] unsigned short 
 21620 ;; Return value:  Size  Location     Type
 21621 ;;                  1    wreg      void 
 21622 ;; Registers used:
 21623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21624 ;; Tracked objects:
 21625 ;;		On entry : 0/0
 21626 ;;		On exit  : 0/0
 21627 ;;		Unchanged: 0/0
 21628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21630 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21631 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21632 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21633 ;;Total ram usage:        7 bytes
 21634 ;; Hardware stack levels used:    1
 21635 ;; Hardware stack levels required when called:    5
 21636 ;; This function calls:
 21637 ;;		_CLOCK_getTime
 21638 ;; This function is called by:
 21639 ;;		_main
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643                           
 21644                           ;psect for function _BUTTONS_task
 21645  0DC0                     _BUTTONS_task:	
 21646                           
 21647                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 21648                           
 21649                           ;incstack = 0
 21650                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21651  0DC0  319D  2560  318D   	fcall	_CLOCK_getTime
 21652  0DC3  0140               	movlb	0	; select bank0
 21653  0DC4  0821               	movf	?_CLOCK_getTime+1,w
 21654  0DC5  00A7               	movwf	BUTTONS_task@time+1
 21655  0DC6  0820               	movf	?_CLOCK_getTime,w
 21656  0DC7  00A6               	movwf	BUTTONS_task@time
 21657                           
 21658                           ;buttons.c: 61:     if (time - lastTime < 10)
 21659  0DC8  0142               	movlb	2	; select bank2
 21660  0DC9  083A               	movf	_lastTime^(0+256),w
 21661  0DCA  0140               	movlb	0	; select bank0
 21662  0DCB  0226               	subwf	BUTTONS_task@time,w
 21663  0DCC  00A2               	movwf	??_BUTTONS_task
 21664  0DCD  0142               	movlb	2	; select bank2
 21665  0DCE  083B               	movf	(_lastTime+1)^(0+256),w
 21666  0DCF  0140               	movlb	0	; select bank0
 21667  0DD0  3B27               	subwfb	BUTTONS_task@time+1,w
 21668  0DD1  00A3               	movwf	??_BUTTONS_task+1
 21669  0DD2  3000               	movlw	0
 21670  0DD3  0223               	subwf	??_BUTTONS_task+1,w
 21671  0DD4  300A               	movlw	10
 21672  0DD5  1903               	skipnz
 21673  0DD6  0222               	subwf	??_BUTTONS_task,w
 21674  0DD7  1C03               	btfss	3,0
 21675  0DD8  0008               	return
 21676                           
 21677                           ;buttons.c: 64:     lastTime = time;
 21678  0DD9  0827               	movf	BUTTONS_task@time+1,w
 21679  0DDA  0142               	movlb	2	; select bank2
 21680  0DDB  00BB               	movwf	(_lastTime+1)^(0+256)
 21681  0DDC  0140               	movlb	0	; select bank0
 21682  0DDD  0826               	movf	BUTTONS_task@time,w
 21683  0DDE  0142               	movlb	2	; select bank2
 21684  0DDF  00BA               	movwf	_lastTime^(0+256)
 21685                           
 21686                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 21687  0DE0  0140               	movlb	0	; select bank0
 21688  0DE1  01A5               	clrf	BUTTONS_task@i
 21689  0DE2                     l8548:	
 21690                           
 21691                           ;buttons.c: 68:         button_t* btn = buttons + i;
 21692  0DE2  0825               	movf	BUTTONS_task@i,w
 21693  0DE3  00A2               	movwf	??_BUTTONS_task
 21694  0DE4  3002               	movlw	2
 21695  0DE5                     u8175:	
 21696  0DE5  35A2               	lslf	??_BUTTONS_task,f
 21697  0DE6  3EFF               	addlw	-1
 21698  0DE7  1D03               	skipz
 21699  0DE8  2DE5               	goto	u8175
 21700  0DE9  3522               	lslf	??_BUTTONS_task,w
 21701  0DEA  3E40               	addlw	(low (_buttons| (0+768)))& (0+255)
 21702  0DEB  00A3               	movwf	??_BUTTONS_task+1
 21703  0DEC  0823               	movf	??_BUTTONS_task+1,w
 21704  0DED  00A8               	movwf	BUTTONS_task@btn
 21705                           
 21706                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 21707  0DEE  0828               	movf	BUTTONS_task@btn,w
 21708  0DEF  0086               	movwf	6
 21709  0DF0  3003               	movlw	3	; select bank6/7
 21710  0DF1  0087               	movwf	7
 21711  0DF2  3F40               	moviw [0]fsr1
 21712  0DF3  00A2               	movwf	??_BUTTONS_task
 21713  0DF4  3F41               	moviw [1]fsr1
 21714  0DF5  00A3               	movwf	??_BUTTONS_task+1
 21715  0DF6  0822               	movf	??_BUTTONS_task,w
 21716  0DF7  0086               	movwf	6
 21717  0DF8  0823               	movf	??_BUTTONS_task+1,w
 21718  0DF9  0087               	movwf	7
 21719  0DFA  3001               	movlw	1
 21720  0DFB  00A4               	movwf	??_BUTTONS_task+2
 21721  0DFC  0828               	movf	BUTTONS_task@btn,w
 21722  0DFD  3E02               	addlw	2
 21723  0DFE  0084               	movwf	4
 21724  0DFF  3003               	movlw	3	; select bank6/7
 21725  0E00  0085               	movwf	5
 21726  0E01  0A00               	incf	0,w
 21727  0E02  2E04               	goto	u8184
 21728  0E03                     u8185:	
 21729  0E03  35A4               	lslf	??_BUTTONS_task+2,f
 21730  0E04                     u8184:	
 21731  0E04  0B89               	decfsz	9,f
 21732  0E05  2E03               	goto	u8185
 21733  0E06  0824               	movf	??_BUTTONS_task+2,w
 21734  0E07  0501               	andwf	1,w
 21735  0E08  1D03               	btfss	3,2
 21736  0E09  2E23               	goto	l8556
 21737                           
 21738                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 21739  0E0A  0828               	movf	BUTTONS_task@btn,w
 21740  0E0B  3E03               	addlw	3
 21741  0E0C  0086               	movwf	6
 21742  0E0D  3003               	movlw	3	; select bank6/7
 21743  0E0E  0087               	movwf	7
 21744  0E0F  0181               	clrf	1
 21745  0E10  0A81               	incf	1,f
 21746                           
 21747                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 21748  0E11  0828               	movf	BUTTONS_task@btn,w
 21749  0E12  3E07               	addlw	7
 21750  0E13  0086               	movwf	6
 21751  0E14  3003               	movlw	3	; select bank6/7
 21752  0E15  0087               	movwf	7
 21753  0E16  0801               	movf	1,w
 21754  0E17  1D03               	btfss	3,2
 21755  0E18  2E29               	goto	l911
 21756                           
 21757                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 21758  0E19  0828               	movf	BUTTONS_task@btn,w
 21759  0E1A  3E05               	addlw	5
 21760  0E1B  0086               	movwf	6
 21761  0E1C  3003               	movlw	3	; select bank6/7
 21762  0E1D  0087               	movwf	7
 21763  0E1E  0826               	movf	BUTTONS_task@time,w
 21764  0E1F  3FC0               	movwi [0]fsr1
 21765  0E20  0827               	movf	BUTTONS_task@time+1,w
 21766  0E21  3FC1               	movwi [1]fsr1
 21767  0E22  2E29               	goto	l911
 21768  0E23                     l8556:	
 21769                           
 21770                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 21771  0E23  0828               	movf	BUTTONS_task@btn,w
 21772  0E24  3E03               	addlw	3
 21773  0E25  0086               	movwf	6
 21774  0E26  3003               	movlw	3	; select bank6/7
 21775  0E27  0087               	movwf	7
 21776  0E28  0181               	clrf	1
 21777  0E29                     l911:	
 21778                           ;buttons.c: 78:         }
 21779                           
 21780                           
 21781                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 21782  0E29  0828               	movf	BUTTONS_task@btn,w
 21783  0E2A  3E03               	addlw	3
 21784  0E2B  0086               	movwf	6
 21785  0E2C  3003               	movlw	3	; select bank6/7
 21786  0E2D  0087               	movwf	7
 21787  0E2E  0801               	movf	1,w
 21788  0E2F  1D03               	btfss	3,2
 21789  0E30  2E41               	goto	l8562
 21790  0E31  0828               	movf	BUTTONS_task@btn,w
 21791  0E32  3E04               	addlw	4
 21792  0E33  0086               	movwf	6
 21793  0E34  3003               	movlw	3	; select bank6/7
 21794  0E35  0087               	movwf	7
 21795  0E36  0301               	decf	1,w
 21796  0E37  1D03               	btfss	3,2
 21797  0E38  2E41               	goto	l8562
 21798                           
 21799                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 21800  0E39  0828               	movf	BUTTONS_task@btn,w
 21801  0E3A  3E07               	addlw	7
 21802  0E3B  0086               	movwf	6
 21803  0E3C  3003               	movlw	3	; select bank6/7
 21804  0E3D  0087               	movwf	7
 21805  0E3E  0181               	clrf	1
 21806  0E3F  0A81               	incf	1,f
 21807                           
 21808                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 21809  0E40  2E97               	goto	l913
 21810  0E41                     l8562:	
 21811  0E41  0828               	movf	BUTTONS_task@btn,w
 21812  0E42  3E03               	addlw	3
 21813  0E43  0086               	movwf	6
 21814  0E44  3003               	movlw	3	; select bank6/7
 21815  0E45  0087               	movwf	7
 21816  0E46  0301               	decf	1,w
 21817  0E47  1D03               	btfss	3,2
 21818  0E48  2E78               	goto	l8574
 21819  0E49  0828               	movf	BUTTONS_task@btn,w
 21820  0E4A  3E04               	addlw	4
 21821  0E4B  0086               	movwf	6
 21822  0E4C  3003               	movlw	3	; select bank6/7
 21823  0E4D  0087               	movwf	7
 21824  0E4E  0301               	decf	1,w
 21825  0E4F  1D03               	btfss	3,2
 21826  0E50  2E78               	goto	l8574
 21827                           
 21828                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 21829  0E51  0828               	movf	BUTTONS_task@btn,w
 21830  0E52  3E05               	addlw	5
 21831  0E53  0086               	movwf	6
 21832  0E54  3003               	movlw	3	; select bank6/7
 21833  0E55  0087               	movwf	7
 21834  0E56  3F40               	moviw [0]fsr1
 21835  0E57  0226               	subwf	BUTTONS_task@time,w
 21836  0E58  00A2               	movwf	??_BUTTONS_task
 21837  0E59  3F41               	moviw [1]fsr1
 21838  0E5A  3B27               	subwfb	BUTTONS_task@time+1,w
 21839  0E5B  00A3               	movwf	??_BUTTONS_task+1
 21840  0E5C  3000               	movlw	0
 21841  0E5D  0223               	subwf	??_BUTTONS_task+1,w
 21842  0E5E  30C9               	movlw	201
 21843  0E5F  1903               	skipnz
 21844  0E60  0222               	subwf	??_BUTTONS_task,w
 21845  0E61  1C03               	skipc
 21846  0E62  2E65               	goto	l8570
 21847                           
 21848                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 21849  0E63  3003               	movlw	3
 21850  0E64  2E6F               	goto	L20
 21851  0E65                     l8570:	
 21852                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 21853                           
 21854  0E65  0828               	movf	BUTTONS_task@btn,w
 21855  0E66  3E07               	addlw	7
 21856  0E67  0086               	movwf	6
 21857  0E68  3003               	movlw	3	; select bank6/7
 21858  0E69  0087               	movwf	7
 21859  0E6A  3003               	movlw	3
 21860  0E6B  0601               	xorwf	1,w
 21861  0E6C  1903               	btfsc	3,2
 21862  0E6D  2E97               	goto	l913
 21863                           
 21864                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 21865  0E6E  3002               	movlw	2
 21866  0E6F                     L20:	
 21867  0E6F  00A2               	movwf	??_BUTTONS_task
 21868  0E70  0828               	movf	BUTTONS_task@btn,w
 21869  0E71  3E07               	addlw	7
 21870  0E72  0086               	movwf	6
 21871  0E73  3003               	movlw	3	; select bank6/7
 21872  0E74  0087               	movwf	7
 21873  0E75  0822               	movf	??_BUTTONS_task,w
 21874  0E76  0081               	movwf	1
 21875  0E77  2E97               	goto	l913
 21876  0E78                     l8574:	
 21877  0E78  0828               	movf	BUTTONS_task@btn,w
 21878  0E79  3E03               	addlw	3
 21879  0E7A  0086               	movwf	6
 21880  0E7B  3003               	movlw	3	; select bank6/7
 21881  0E7C  0087               	movwf	7
 21882  0E7D  0801               	movf	1,w
 21883  0E7E  1D03               	btfss	3,2
 21884  0E7F  2E97               	goto	l913
 21885  0E80  0828               	movf	BUTTONS_task@btn,w
 21886  0E81  3E04               	addlw	4
 21887  0E82  0086               	movwf	6
 21888  0E83  3003               	movlw	3	; select bank6/7
 21889  0E84  0087               	movwf	7
 21890  0E85  0301               	decf	1,w
 21891  0E86  1D03               	btfss	3,2
 21892  0E87  2E97               	goto	l913
 21893  0E88  0828               	movf	BUTTONS_task@btn,w
 21894  0E89  3E07               	addlw	7
 21895  0E8A  0086               	movwf	6
 21896  0E8B  3003               	movlw	3	; select bank6/7
 21897  0E8C  0087               	movwf	7
 21898  0E8D  3003               	movlw	3
 21899  0E8E  0601               	xorwf	1,w
 21900  0E8F  1D03               	btfss	3,2
 21901  0E90  2E97               	goto	l913
 21902                           
 21903                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 21904  0E91  0828               	movf	BUTTONS_task@btn,w
 21905  0E92  3E07               	addlw	7
 21906  0E93  0086               	movwf	6
 21907  0E94  3003               	movlw	3	; select bank6/7
 21908  0E95  0087               	movwf	7
 21909  0E96  0181               	clrf	1
 21910  0E97                     l913:	
 21911                           
 21912                           ;buttons.c: 93:         btn->lastState = btn->state;
 21913  0E97  0828               	movf	BUTTONS_task@btn,w
 21914  0E98  3E03               	addlw	3
 21915  0E99  0086               	movwf	6
 21916  0E9A  3003               	movlw	3	; select bank6/7
 21917  0E9B  0087               	movwf	7
 21918  0E9C  0801               	movf	1,w
 21919  0E9D  00A2               	movwf	??_BUTTONS_task
 21920  0E9E  0828               	movf	BUTTONS_task@btn,w
 21921  0E9F  3E04               	addlw	4
 21922  0EA0  0086               	movwf	6
 21923  0EA1  3003               	movlw	3	; select bank6/7
 21924  0EA2  0087               	movwf	7
 21925  0EA3  0822               	movf	??_BUTTONS_task,w
 21926  0EA4  0081               	movwf	1
 21927                           
 21928                           ;buttons.c: 94:     }
 21929  0EA5  3001               	movlw	1
 21930  0EA6  00A2               	movwf	??_BUTTONS_task
 21931  0EA7  0822               	movf	??_BUTTONS_task,w
 21932  0EA8  07A5               	addwf	BUTTONS_task@i,f
 21933  0EA9  3004               	movlw	4
 21934  0EAA  0225               	subwf	BUTTONS_task@i,w
 21935  0EAB  1803               	btfsc	3,0
 21936  0EAC  0008               	return
 21937  0EAD  2DE2               	goto	l8548
 21938  0EAE                     __end_of_BUTTONS_task:	
 21939                           
 21940                           	psect	text78
 21941  0800                     __ptext78:	
 21942 ;; *************** function _BUTTONS_init *****************
 21943 ;; Defined at:
 21944 ;;		line 23 in file "buttons.c"
 21945 ;; Parameters:    Size  Location     Type
 21946 ;;		None
 21947 ;; Auto vars:     Size  Location     Type
 21948 ;;		None
 21949 ;; Return value:  Size  Location     Type
 21950 ;;                  1    wreg      void 
 21951 ;; Registers used:
 21952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21953 ;; Tracked objects:
 21954 ;;		On entry : 0/0
 21955 ;;		On exit  : 0/0
 21956 ;;		Unchanged: 0/0
 21957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21962 ;;Total ram usage:        1 bytes
 21963 ;; Hardware stack levels used:    1
 21964 ;; Hardware stack levels required when called:    5
 21965 ;; This function calls:
 21966 ;;		_GPIO_init
 21967 ;;		_init
 21968 ;; This function is called by:
 21969 ;;		_main
 21970 ;; This function uses a non-reentrant model
 21971 ;;
 21972                           
 21973                           
 21974                           ;psect for function _BUTTONS_init
 21975  0800                     _BUTTONS_init:	
 21976                           
 21977                           ;buttons.c: 24:     menu = &buttons[0];
 21978                           
 21979                           ;incstack = 0
 21980                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21981  0800  3040               	movlw	(low (_buttons| (0+768)))& (0+255)
 21982  0801  0140               	movlb	0	; select bank0
 21983  0802  00A5               	movwf	??_BUTTONS_init
 21984  0803  0825               	movf	??_BUTTONS_init,w
 21985  0804  0141               	movlb	1	; select bank1
 21986  0805  00E0               	movwf	_menu^(0+128)
 21987                           
 21988                           ;buttons.c: 25:     up = &buttons[1];
 21989  0806  3048               	movlw	(low ((_buttons| (0+768)+8)))& (0+255)
 21990  0807  0140               	movlb	0	; select bank0
 21991  0808  00A5               	movwf	??_BUTTONS_init
 21992  0809  0825               	movf	??_BUTTONS_init,w
 21993  080A  0141               	movlb	1	; select bank1
 21994  080B  00DF               	movwf	_up^(0+128)
 21995                           
 21996                           ;buttons.c: 26:     down = &buttons[2];
 21997  080C  3050               	movlw	(low ((_buttons| (0+768)+16)))& (0+255)
 21998  080D  0140               	movlb	0	; select bank0
 21999  080E  00A5               	movwf	??_BUTTONS_init
 22000  080F  0825               	movf	??_BUTTONS_init,w
 22001  0810  0141               	movlb	1	; select bank1
 22002  0811  00DE               	movwf	_down^(0+128)
 22003                           
 22004                           ;buttons.c: 27:     enter = &buttons[3];
 22005  0812  3058               	movlw	(low ((_buttons| (0+768)+24)))& (0+255)
 22006  0813  0140               	movlb	0	; select bank0
 22007  0814  00A5               	movwf	??_BUTTONS_init
 22008  0815  0825               	movf	??_BUTTONS_init,w
 22009  0816  0141               	movlb	1	; select bank1
 22010  0817  00DD               	movwf	_enter^(0+128)
 22011                           
 22012                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 22013  0818  300E               	movlw	14
 22014  0819  0140               	movlb	0	; select bank0
 22015  081A  00A0               	movwf	init@port
 22016  081B  3000               	movlw	0
 22017  081C  00A1               	movwf	init@port+1
 22018  081D  3002               	movlw	2
 22019  081E  00A5               	movwf	??_BUTTONS_init
 22020  081F  0825               	movf	??_BUTTONS_init,w
 22021  0820  00A2               	movwf	init@pin
 22022  0821  0141               	movlb	1	; select bank1
 22023  0822  0860               	movf	_menu^(0+128),w
 22024  0823  3190  2017  3188   	fcall	_init
 22025                           
 22026                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 22027  0826  300C               	movlw	12
 22028  0827  0140               	movlb	0	; select bank0
 22029  0828  00A0               	movwf	init@port
 22030  0829  3000               	movlw	0
 22031  082A  00A1               	movwf	init@port+1
 22032  082B  3002               	movlw	2
 22033  082C  00A5               	movwf	??_BUTTONS_init
 22034  082D  0825               	movf	??_BUTTONS_init,w
 22035  082E  00A2               	movwf	init@pin
 22036  082F  0141               	movlb	1	; select bank1
 22037  0830  085D               	movf	_enter^(0+128),w
 22038  0831  3190  2017  3188   	fcall	_init
 22039                           
 22040                           ;buttons.c: 31:     init(down, &PORTC, 0);
 22041  0834  300E               	movlw	14
 22042  0835  0140               	movlb	0	; select bank0
 22043  0836  00A0               	movwf	init@port
 22044  0837  3000               	movlw	0
 22045  0838  00A1               	movwf	init@port+1
 22046  0839  01A2               	clrf	init@pin
 22047  083A  0141               	movlb	1	; select bank1
 22048  083B  085E               	movf	_down^(0+128),w
 22049  083C  3190  2017  3188   	fcall	_init
 22050                           
 22051                           ;buttons.c: 32:     init(up, &PORTC, 1);
 22052  083F  300E               	movlw	14
 22053  0840  0140               	movlb	0	; select bank0
 22054  0841  00A0               	movwf	init@port
 22055  0842  3000               	movlw	0
 22056  0843  00A1               	movwf	init@port+1
 22057  0844  01A2               	clrf	init@pin
 22058  0845  0AA2               	incf	init@pin,f
 22059  0846  0141               	movlb	1	; select bank1
 22060  0847  085F               	movf	_up^(0+128),w
 22061  0848  3190  2017  3188   	fcall	_init
 22062                           
 22063                           ;buttons.c: 34:     GPIO_init();
 22064  084B  319E  2669         	fcall	_GPIO_init
 22065  084D  0008               	return
 22066  084E                     __end_of_BUTTONS_init:	
 22067                           
 22068                           	psect	text79
 22069  1017                     __ptext79:	
 22070 ;; *************** function _init *****************
 22071 ;; Defined at:
 22072 ;;		line 16 in file "buttons.c"
 22073 ;; Parameters:    Size  Location     Type
 22074 ;;  btn             1    wreg     PTR struct .
 22075 ;;		 -> buttons(32), NULL(0), 
 22076 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 22077 ;;		 -> PORTA(1), PORTC(1), 
 22078 ;;  pin             1    2[BANK0 ] unsigned char 
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;  btn             1    4[BANK0 ] PTR struct .
 22081 ;;		 -> buttons(32), NULL(0), 
 22082 ;; Return value:  Size  Location     Type
 22083 ;;                  1    wreg      void 
 22084 ;; Registers used:
 22085 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22086 ;; Tracked objects:
 22087 ;;		On entry : 0/0
 22088 ;;		On exit  : 0/0
 22089 ;;		Unchanged: 0/0
 22090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22094 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22095 ;;Total ram usage:        5 bytes
 22096 ;; Hardware stack levels used:    1
 22097 ;; Hardware stack levels required when called:    4
 22098 ;; This function calls:
 22099 ;;		Nothing
 22100 ;; This function is called by:
 22101 ;;		_BUTTONS_init
 22102 ;; This function uses a non-reentrant model
 22103 ;;
 22104                           
 22105                           
 22106                           ;psect for function _init
 22107  1017                     _init:	
 22108                           
 22109                           ;incstack = 0
 22110                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 22111                           ;init@btn stored from wreg
 22112  1017  0140               	movlb	0	; select bank0
 22113  1018  00A4               	movwf	init@btn
 22114                           
 22115                           ;buttons.c: 17:     btn->port = port;
 22116  1019  0824               	movf	init@btn,w
 22117  101A  0086               	movwf	6
 22118  101B  3003               	movlw	3	; select bank6/7
 22119  101C  0087               	movwf	7
 22120  101D  0820               	movf	init@port,w
 22121  101E  3FC0               	movwi [0]fsr1
 22122  101F  0821               	movf	init@port+1,w
 22123  1020  3FC1               	movwi [1]fsr1
 22124                           
 22125                           ;buttons.c: 18:     btn->pin = pin;
 22126  1021  0822               	movf	init@pin,w
 22127  1022  00A3               	movwf	??_init
 22128  1023  0824               	movf	init@btn,w
 22129  1024  3E02               	addlw	2
 22130  1025  0086               	movwf	6
 22131  1026  3003               	movlw	3	; select bank6/7
 22132  1027  0087               	movwf	7
 22133  1028  0823               	movf	??_init,w
 22134  1029  0081               	movwf	1
 22135                           
 22136                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 22137  102A  0824               	movf	init@btn,w
 22138  102B  3E03               	addlw	3
 22139  102C  0086               	movwf	6
 22140  102D  3003               	movlw	3	; select bank6/7
 22141  102E  0087               	movwf	7
 22142  102F  0181               	clrf	1
 22143                           
 22144                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 22145  1030  0824               	movf	init@btn,w
 22146  1031  3E07               	addlw	7
 22147  1032  0086               	movwf	6
 22148  1033  3003               	movlw	3	; select bank6/7
 22149  1034  0087               	movwf	7
 22150  1035  0181               	clrf	1
 22151  1036  0008               	return
 22152  1037                     __end_of_init:	
 22153                           
 22154                           	psect	text80
 22155  1E69                     __ptext80:	
 22156 ;; *************** function _GPIO_init *****************
 22157 ;; Defined at:
 22158 ;;		line 38 in file "buttons.c"
 22159 ;; Parameters:    Size  Location     Type
 22160 ;;		None
 22161 ;; Auto vars:     Size  Location     Type
 22162 ;;		None
 22163 ;; Return value:  Size  Location     Type
 22164 ;;                  1    wreg      void 
 22165 ;; Registers used:
 22166 ;;		None
 22167 ;; Tracked objects:
 22168 ;;		On entry : 0/0
 22169 ;;		On exit  : 0/0
 22170 ;;		Unchanged: 0/0
 22171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22176 ;;Total ram usage:        0 bytes
 22177 ;; Hardware stack levels used:    1
 22178 ;; Hardware stack levels required when called:    4
 22179 ;; This function calls:
 22180 ;;		Nothing
 22181 ;; This function is called by:
 22182 ;;		_BUTTONS_init
 22183 ;; This function uses a non-reentrant model
 22184 ;;
 22185                           
 22186                           
 22187                           ;psect for function _GPIO_init
 22188  1E69                     _GPIO_init:	
 22189                           
 22190                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 22191                           
 22192                           ;incstack = 0
 22193                           ; Regs used in _GPIO_init: []
 22194  1E69  0140               	movlb	0	; select bank0
 22195  1E6A  1512               	bsf	18,2	;volatile
 22196                           
 22197                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 22198  1E6B  017E               	movlb	62	; select bank62
 22199  1E6C  1138               	bcf	56,2	;volatile
 22200                           
 22201                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 22202  1E6D  1539               	bsf	57,2	;volatile
 22203                           
 22204                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 22205  1E6E  0140               	movlb	0	; select bank0
 22206  1E6F  1414               	bsf	20,0	;volatile
 22207                           
 22208                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 22209  1E70  1494               	bsf	20,1	;volatile
 22210                           
 22211                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 22212  1E71  1514               	bsf	20,2	;volatile
 22213                           
 22214                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 22215  1E72  017E               	movlb	62	; select bank62
 22216  1E73  104E               	bcf	78,0	;volatile
 22217                           
 22218                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 22219  1E74  10CE               	bcf	78,1	;volatile
 22220                           
 22221                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 22222  1E75  114E               	bcf	78,2	;volatile
 22223                           
 22224                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 22225  1E76  144F               	bsf	79,0	;volatile
 22226                           
 22227                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 22228  1E77  14CF               	bsf	79,1	;volatile
 22229                           
 22230                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 22231  1E78  154F               	bsf	79,2	;volatile
 22232  1E79  0008               	return
 22233  1E7A                     __end_of_GPIO_init:	
 22234                           
 22235                           	psect	text81
 22236  0B31                     __ptext81:	
 22237 ;; *************** function _BEAT_task *****************
 22238 ;; Defined at:
 22239 ;;		line 65 in file "beat.c"
 22240 ;; Parameters:    Size  Location     Type
 22241 ;;		None
 22242 ;; Auto vars:     Size  Location     Type
 22243 ;;  offset          2   10[BANK0 ] unsigned short 
 22244 ;; Return value:  Size  Location     Type
 22245 ;;                  1    wreg      void 
 22246 ;; Registers used:
 22247 ;;		wreg, status,2, status,0, pclath, cstack
 22248 ;; Tracked objects:
 22249 ;;		On entry : 0/0
 22250 ;;		On exit  : 0/0
 22251 ;;		Unchanged: 0/0
 22252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22254 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22256 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22257 ;;Total ram usage:        4 bytes
 22258 ;; Hardware stack levels used:    1
 22259 ;; Hardware stack levels required when called:    5
 22260 ;; This function calls:
 22261 ;;		_ADCC_SetUpperThreshold
 22262 ;;		_CLOCK_getTime
 22263 ;;		___lwdiv
 22264 ;; This function is called by:
 22265 ;;		_main
 22266 ;; This function uses a non-reentrant model
 22267 ;;
 22268                           
 22269                           
 22270                           ;psect for function _BEAT_task
 22271  0B31                     _BEAT_task:	
 22272                           
 22273                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 22274                           
 22275                           ;incstack = 0
 22276                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 22277  0B31  319D  2560  318B   	fcall	_CLOCK_getTime
 22278  0B34  0142               	movlb	2	; select bank2
 22279  0B35  082E               	movf	_lastRun^(0+256),w
 22280  0B36  0140               	movlb	0	; select bank0
 22281  0B37  0220               	subwf	?_CLOCK_getTime,w
 22282  0B38  00A8               	movwf	??_BEAT_task
 22283  0B39  0142               	movlb	2	; select bank2
 22284  0B3A  082F               	movf	(_lastRun+1)^(0+256),w
 22285  0B3B  0140               	movlb	0	; select bank0
 22286  0B3C  3B21               	subwfb	?_CLOCK_getTime+1,w
 22287  0B3D  00A9               	movwf	??_BEAT_task+1
 22288  0B3E  0142               	movlb	2	; select bank2
 22289  0B3F  0863               	movf	(_delay+1)^(0+256),w
 22290  0B40  0140               	movlb	0	; select bank0
 22291  0B41  0229               	subwf	??_BEAT_task+1,w
 22292  0B42  1D03               	skipz
 22293  0B43  2B48               	goto	u8395
 22294  0B44  0142               	movlb	2	; select bank2
 22295  0B45  0862               	movf	_delay^(0+256),w
 22296  0B46  0140               	movlb	0	; select bank0
 22297  0B47  0228               	subwf	??_BEAT_task,w
 22298  0B48                     u8395:	
 22299  0B48  1C03               	btfss	3,0
 22300  0B49  0008               	return
 22301                           
 22302                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 22303  0B4A  319D  2560  318B   	fcall	_CLOCK_getTime
 22304  0B4D  0140               	movlb	0	; select bank0
 22305  0B4E  0821               	movf	?_CLOCK_getTime+1,w
 22306  0B4F  0142               	movlb	2	; select bank2
 22307  0B50  00AF               	movwf	(_lastRun+1)^(0+256)
 22308  0B51  0140               	movlb	0	; select bank0
 22309  0B52  0820               	movf	?_CLOCK_getTime,w
 22310  0B53  0142               	movlb	2	; select bank2
 22311  0B54  00AE               	movwf	_lastRun^(0+256)
 22312                           
 22313                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 22314  0B55  0141               	movlb	1	; select bank1
 22315  0B56  0355               	decf	_thresholdExceeded^(0+128),w
 22316  0B57  1D03               	btfss	3,2
 22317  0B58  2B5F               	goto	l8660
 22318                           
 22319                           ;beat.c: 77:         thresholdCount++;
 22320  0B59  3001               	movlw	1
 22321  0B5A  0142               	movlb	2	; select bank2
 22322  0B5B  07AC               	addwf	_thresholdCount^(0+256),f
 22323  0B5C  3000               	movlw	0
 22324  0B5D  3DAD               	addwfc	(_thresholdCount+1)^(0+256),f
 22325                           
 22326                           ;beat.c: 78:     } else {
 22327  0B5E  2B66               	goto	l8664
 22328  0B5F                     l8660:	
 22329                           
 22330                           ;beat.c: 80:         thresholdCount = 0;
 22331  0B5F  0142               	movlb	2	; select bank2
 22332  0B60  01AC               	clrf	_thresholdCount^(0+256)
 22333  0B61  01AD               	clrf	(_thresholdCount+1)^(0+256)
 22334                           
 22335                           ;beat.c: 81:         delay = 30;
 22336  0B62  301E               	movlw	30
 22337  0B63  00E2               	movwf	_delay^(0+256)
 22338  0B64  3000               	movlw	0
 22339  0B65  00E3               	movwf	(_delay^(0+256)+1)
 22340  0B66                     l8664:	
 22341                           
 22342                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 22343  0B66  0141               	movlb	1	; select bank1
 22344  0B67  0355               	decf	_thresholdExceeded^(0+128),w
 22345  0B68  1D03               	btfss	3,2
 22346  0B69  2BAD               	goto	l8682
 22347  0B6A  0854               	movf	_lastDetected^(0+128),w
 22348  0B6B  1D03               	btfss	3,2
 22349  0B6C  2BAD               	goto	l8682
 22350                           
 22351                           ;beat.c: 89:         detected = 1;
 22352  0B6D  01D6               	clrf	_detected^(0+128)
 22353  0B6E  0AD6               	incf	_detected^(0+128),f
 22354                           
 22355                           ;beat.c: 92:         delay = 50;
 22356  0B6F  3032               	movlw	50
 22357  0B70  0142               	movlb	2	; select bank2
 22358  0B71  00E2               	movwf	_delay^(0+256)
 22359  0B72  3000               	movlw	0
 22360  0B73  00E3               	movwf	(_delay^(0+256)+1)
 22361                           
 22362                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 22363  0B74  319D  2560  318B   	fcall	_CLOCK_getTime
 22364  0B77  0142               	movlb	2	; select bank2
 22365  0B78  0832               	movf	_lastBeat^(0+256),w
 22366  0B79  0140               	movlb	0	; select bank0
 22367  0B7A  0220               	subwf	?_CLOCK_getTime,w
 22368  0B7B  00AA               	movwf	BEAT_task@offset
 22369  0B7C  0142               	movlb	2	; select bank2
 22370  0B7D  0833               	movf	(_lastBeat+1)^(0+256),w
 22371  0B7E  0140               	movlb	0	; select bank0
 22372  0B7F  3B21               	subwfb	?_CLOCK_getTime+1,w
 22373  0B80  00AB               	movwf	BEAT_task@offset+1
 22374                           
 22375                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 22376  0B81  319D  2560  318B   	fcall	_CLOCK_getTime
 22377  0B84  0140               	movlb	0	; select bank0
 22378  0B85  0821               	movf	?_CLOCK_getTime+1,w
 22379  0B86  0142               	movlb	2	; select bank2
 22380  0B87  00B3               	movwf	(_lastBeat+1)^(0+256)
 22381  0B88  0140               	movlb	0	; select bank0
 22382  0B89  0820               	movf	?_CLOCK_getTime,w
 22383  0B8A  0142               	movlb	2	; select bank2
 22384  0B8B  00B2               	movwf	_lastBeat^(0+256)
 22385                           
 22386                           ;beat.c: 99:         if (offset < 150)
 22387  0B8C  3000               	movlw	0
 22388  0B8D  0140               	movlb	0	; select bank0
 22389  0B8E  022B               	subwf	BEAT_task@offset+1,w
 22390  0B8F  3096               	movlw	150
 22391  0B90  1903               	skipnz
 22392  0B91  022A               	subwf	BEAT_task@offset,w
 22393  0B92  1803               	skipnc
 22394  0B93  2B9A               	goto	l8680
 22395                           
 22396                           ;beat.c: 100:             bpm = 400;
 22397  0B94  3090               	movlw	144
 22398  0B95  0142               	movlb	2	; select bank2
 22399  0B96  00B0               	movwf	_bpm^(0+256)
 22400  0B97  3001               	movlw	1
 22401  0B98  00B1               	movwf	(_bpm^(0+256)+1)
 22402  0B99  2BAD               	goto	l8682
 22403  0B9A                     l8680:	
 22404                           
 22405                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 22406  0B9A  082B               	movf	BEAT_task@offset+1,w
 22407  0B9B  00A1               	movwf	___lwdiv@divisor+1
 22408  0B9C  082A               	movf	BEAT_task@offset,w
 22409  0B9D  00A0               	movwf	___lwdiv@divisor
 22410  0B9E  3060               	movlw	96
 22411  0B9F  00A2               	movwf	___lwdiv@dividend
 22412  0BA0  30EA               	movlw	234
 22413  0BA1  00A3               	movwf	___lwdiv@dividend+1
 22414  0BA2  3192  225C  318B   	fcall	___lwdiv
 22415  0BA5  0140               	movlb	0	; select bank0
 22416  0BA6  0821               	movf	?___lwdiv+1,w
 22417  0BA7  0142               	movlb	2	; select bank2
 22418  0BA8  00B1               	movwf	(_bpm+1)^(0+256)
 22419  0BA9  0140               	movlb	0	; select bank0
 22420  0BAA  0820               	movf	?___lwdiv,w
 22421  0BAB  0142               	movlb	2	; select bank2
 22422  0BAC  00B0               	movwf	_bpm^(0+256)
 22423  0BAD                     l8682:	
 22424                           
 22425                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 22426  0BAD  0141               	movlb	1	; select bank1
 22427  0BAE  0855               	movf	_thresholdExceeded^(0+128),w
 22428  0BAF  0140               	movlb	0	; select bank0
 22429  0BB0  00A8               	movwf	??_BEAT_task
 22430  0BB1  0828               	movf	??_BEAT_task,w
 22431  0BB2  0141               	movlb	1	; select bank1
 22432  0BB3  00D4               	movwf	_lastDetected^(0+128)
 22433                           
 22434                           ;beat.c: 109:     thresholdExceeded = 0;
 22435  0BB4  01D5               	clrf	_thresholdExceeded^(0+128)
 22436                           
 22437                           ;beat.c: 111:     if (thresholdCount > 3) {
 22438  0BB5  0142               	movlb	2	; select bank2
 22439  0BB6  082D               	movf	(_thresholdCount+1)^(0+256),w
 22440  0BB7  3A80               	xorlw	128
 22441  0BB8  0140               	movlb	0	; select bank0
 22442  0BB9  00A8               	movwf	??_BEAT_task
 22443  0BBA  3080               	movlw	128
 22444  0BBB  0228               	subwf	??_BEAT_task,w
 22445  0BBC  1D03               	skipz
 22446  0BBD  2BC1               	goto	u8445
 22447  0BBE  3004               	movlw	4
 22448  0BBF  0142               	movlb	2	; select bank2
 22449  0BC0  022C               	subwf	_thresholdCount^(0+256),w
 22450  0BC1                     u8445:	
 22451  0BC1  1C03               	skipc
 22452  0BC2  2BE0               	goto	l8696
 22453                           
 22454                           ;beat.c: 112:         threshold += 1;
 22455  0BC3  3001               	movlw	1
 22456  0BC4  0142               	movlb	2	; select bank2
 22457  0BC5  07E4               	addwf	_threshold^(0+256),f
 22458  0BC6  3000               	movlw	0
 22459  0BC7  3DE5               	addwfc	(_threshold+1)^(0+256),f
 22460                           
 22461                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 22462  0BC8  0865               	movf	(_threshold+1)^(0+256),w
 22463  0BC9  0140               	movlb	0	; select bank0
 22464  0BCA  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22465  0BCB  0142               	movlb	2	; select bank2
 22466  0BCC  0864               	movf	_threshold^(0+256),w
 22467  0BCD  0140               	movlb	0	; select bank0
 22468  0BCE  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22469  0BCF  319D  254E  318B   	fcall	_ADCC_SetUpperThreshold
 22470                           
 22471                           ;beat.c: 114:         thresholdCount = 0;
 22472  0BD2  0142               	movlb	2	; select bank2
 22473  0BD3  01AC               	clrf	_thresholdCount^(0+256)
 22474  0BD4  01AD               	clrf	(_thresholdCount+1)^(0+256)
 22475                           
 22476                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 22477  0BD5  319D  2560         	fcall	_CLOCK_getTime
 22478  0BD7  0140               	movlb	0	; select bank0
 22479  0BD8  0821               	movf	?_CLOCK_getTime+1,w
 22480  0BD9  0142               	movlb	2	; select bank2
 22481  0BDA  00B3               	movwf	(_lastBeat+1)^(0+256)
 22482  0BDB  0140               	movlb	0	; select bank0
 22483  0BDC  0820               	movf	?_CLOCK_getTime,w
 22484  0BDD  0142               	movlb	2	; select bank2
 22485  0BDE  00B2               	movwf	_lastBeat^(0+256)
 22486                           
 22487                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 22488  0BDF  0008               	return
 22489  0BE0                     l8696:	
 22490  0BE0  319D  2560  318B   	fcall	_CLOCK_getTime
 22491  0BE3  0142               	movlb	2	; select bank2
 22492  0BE4  0832               	movf	_lastBeat^(0+256),w
 22493  0BE5  0140               	movlb	0	; select bank0
 22494  0BE6  0220               	subwf	?_CLOCK_getTime,w
 22495  0BE7  00A8               	movwf	??_BEAT_task
 22496  0BE8  0142               	movlb	2	; select bank2
 22497  0BE9  0833               	movf	(_lastBeat+1)^(0+256),w
 22498  0BEA  0140               	movlb	0	; select bank0
 22499  0BEB  3B21               	subwfb	?_CLOCK_getTime+1,w
 22500  0BEC  00A9               	movwf	??_BEAT_task+1
 22501  0BED  3003               	movlw	3
 22502  0BEE  0229               	subwf	??_BEAT_task+1,w
 22503  0BEF  30E9               	movlw	233
 22504  0BF0  1903               	skipnz
 22505  0BF1  0228               	subwf	??_BEAT_task,w
 22506  0BF2  1C03               	skipc
 22507  0BF3  0008               	return
 22508                           
 22509                           ;beat.c: 119:         threshold -= 1;
 22510  0BF4  3001               	movlw	1
 22511  0BF5  0142               	movlb	2	; select bank2
 22512  0BF6  02E4               	subwf	_threshold^(0+256),f
 22513  0BF7  3000               	movlw	0
 22514  0BF8  3BE5               	subwfb	(_threshold+1)^(0+256),f
 22515                           
 22516                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 22517  0BF9  0865               	movf	(_threshold+1)^(0+256),w
 22518  0BFA  0140               	movlb	0	; select bank0
 22519  0BFB  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22520  0BFC  0142               	movlb	2	; select bank2
 22521  0BFD  0864               	movf	_threshold^(0+256),w
 22522  0BFE  0140               	movlb	0	; select bank0
 22523  0BFF  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22524  0C00  319D  254E         	fcall	_ADCC_SetUpperThreshold
 22525  0C02  0008               	return
 22526  0C03                     __end_of_BEAT_task:	
 22527                           
 22528                           	psect	text82
 22529  125C                     __ptext82:	
 22530 ;; *************** function ___lwdiv *****************
 22531 ;; Defined at:
 22532 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 22533 ;; Parameters:    Size  Location     Type
 22534 ;;  divisor         2    0[BANK0 ] unsigned int 
 22535 ;;  dividend        2    2[BANK0 ] unsigned int 
 22536 ;; Auto vars:     Size  Location     Type
 22537 ;;  quotient        2    6[BANK0 ] unsigned int 
 22538 ;;  counter         1    5[BANK0 ] unsigned char 
 22539 ;; Return value:  Size  Location     Type
 22540 ;;                  2    0[BANK0 ] unsigned int 
 22541 ;; Registers used:
 22542 ;;		wreg, status,2, status,0
 22543 ;; Tracked objects:
 22544 ;;		On entry : 0/0
 22545 ;;		On exit  : 0/0
 22546 ;;		Unchanged: 0/0
 22547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22549 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22551 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22552 ;;Total ram usage:        8 bytes
 22553 ;; Hardware stack levels used:    1
 22554 ;; Hardware stack levels required when called:    4
 22555 ;; This function calls:
 22556 ;;		Nothing
 22557 ;; This function is called by:
 22558 ;;		_TM1650_fastPrintNum
 22559 ;;		_TM1650_fastPrintNum_3digit
 22560 ;;		_BEAT_task
 22561 ;; This function uses a non-reentrant model
 22562 ;;
 22563                           
 22564                           
 22565                           ;psect for function ___lwdiv
 22566  125C                     ___lwdiv:	
 22567                           
 22568                           ;incstack = 0
 22569                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22570  125C  0140               	movlb	0	; select bank0
 22571  125D  01A6               	clrf	___lwdiv@quotient
 22572  125E  01A7               	clrf	___lwdiv@quotient+1
 22573  125F  0820               	movf	___lwdiv@divisor,w
 22574  1260  0421               	iorwf	___lwdiv@divisor+1,w
 22575  1261  1903               	btfsc	3,2
 22576  1262  2A8C               	goto	l7826
 22577  1263  01A5               	clrf	___lwdiv@counter
 22578  1264  0AA5               	incf	___lwdiv@counter,f
 22579  1265                     l7814:	
 22580  1265  1BA1               	btfsc	___lwdiv@divisor+1,7
 22581  1266  2A71               	goto	l7816
 22582  1267  3001               	movlw	1
 22583  1268                     u7635:	
 22584  1268  35A0               	lslf	___lwdiv@divisor,f
 22585  1269  0DA1               	rlf	___lwdiv@divisor+1,f
 22586  126A  0B89               	decfsz	9,f
 22587  126B  2A68               	goto	u7635
 22588  126C  3001               	movlw	1
 22589  126D  00A4               	movwf	??___lwdiv
 22590  126E  0824               	movf	??___lwdiv,w
 22591  126F  07A5               	addwf	___lwdiv@counter,f
 22592  1270  2A65               	goto	l7814
 22593  1271                     l7816:	
 22594  1271  3001               	movlw	1
 22595  1272                     u7655:	
 22596  1272  35A6               	lslf	___lwdiv@quotient,f
 22597  1273  0DA7               	rlf	___lwdiv@quotient+1,f
 22598  1274  0B89               	decfsz	9,f
 22599  1275  2A72               	goto	u7655
 22600  1276  0821               	movf	___lwdiv@divisor+1,w
 22601  1277  0223               	subwf	___lwdiv@dividend+1,w
 22602  1278  1D03               	skipz
 22603  1279  2A7C               	goto	u7665
 22604  127A  0820               	movf	___lwdiv@divisor,w
 22605  127B  0222               	subwf	___lwdiv@dividend,w
 22606  127C                     u7665:	
 22607  127C  1C03               	skipc
 22608  127D  2A83               	goto	l7822
 22609  127E  0820               	movf	___lwdiv@divisor,w
 22610  127F  02A2               	subwf	___lwdiv@dividend,f
 22611  1280  0821               	movf	___lwdiv@divisor+1,w
 22612  1281  3BA3               	subwfb	___lwdiv@dividend+1,f
 22613  1282  1426               	bsf	___lwdiv@quotient,0
 22614  1283                     l7822:	
 22615  1283  3001               	movlw	1
 22616  1284                     u7675:	
 22617  1284  36A1               	lsrf	___lwdiv@divisor+1,f
 22618  1285  0CA0               	rrf	___lwdiv@divisor,f
 22619  1286  0B89               	decfsz	9,f
 22620  1287  2A84               	goto	u7675
 22621  1288  3001               	movlw	1
 22622  1289  02A5               	subwf	___lwdiv@counter,f
 22623  128A  1D03               	btfss	3,2
 22624  128B  2A71               	goto	l7816
 22625  128C                     l7826:	
 22626  128C  0827               	movf	___lwdiv@quotient+1,w
 22627  128D  00A1               	movwf	?___lwdiv+1
 22628  128E  0826               	movf	___lwdiv@quotient,w
 22629  128F  00A0               	movwf	?___lwdiv
 22630  1290  0008               	return
 22631  1291                     __end_of___lwdiv:	
 22632                           
 22633                           	psect	text83
 22634  1D60                     __ptext83:	
 22635 ;; *************** function _CLOCK_getTime *****************
 22636 ;; Defined at:
 22637 ;;		line 16 in file "clock.c"
 22638 ;; Parameters:    Size  Location     Type
 22639 ;;		None
 22640 ;; Auto vars:     Size  Location     Type
 22641 ;;		None
 22642 ;; Return value:  Size  Location     Type
 22643 ;;                  2    0[BANK0 ] unsigned short 
 22644 ;; Registers used:
 22645 ;;		wreg
 22646 ;; Tracked objects:
 22647 ;;		On entry : 0/0
 22648 ;;		On exit  : 0/0
 22649 ;;		Unchanged: 0/0
 22650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22655 ;;Total ram usage:        2 bytes
 22656 ;; Hardware stack levels used:    1
 22657 ;; Hardware stack levels required when called:    4
 22658 ;; This function calls:
 22659 ;;		Nothing
 22660 ;; This function is called by:
 22661 ;;		_main
 22662 ;;		_BUTTONS_task
 22663 ;;		_CONTROL_DMX
 22664 ;;		_BEAT_task
 22665 ;;		_LED_task_BEAT_STROBE
 22666 ;;		_CONTROL_MANUAL
 22667 ;; This function uses a non-reentrant model
 22668 ;;
 22669                           
 22670                           
 22671                           ;psect for function _CLOCK_getTime
 22672  1D60                     _CLOCK_getTime:	
 22673                           
 22674                           ;clock.c: 17:     return currentTime;
 22675                           
 22676                           ;incstack = 0
 22677                           ; Regs used in _CLOCK_getTime: [wreg]
 22678  1D60  0142               	movlb	2	; select bank2
 22679  1D61  0839               	movf	(_currentTime+1)^(0+256),w
 22680  1D62  0140               	movlb	0	; select bank0
 22681  1D63  00A1               	movwf	?_CLOCK_getTime+1
 22682  1D64  0142               	movlb	2	; select bank2
 22683  1D65  0838               	movf	_currentTime^(0+256),w
 22684  1D66  0140               	movlb	0	; select bank0
 22685  1D67  00A0               	movwf	?_CLOCK_getTime
 22686  1D68  0008               	return
 22687  1D69                     __end_of_CLOCK_getTime:	
 22688                           
 22689                           	psect	text84
 22690  1000                     __ptext84:	
 22691 ;; *************** function _BEAT_init *****************
 22692 ;; Defined at:
 22693 ;;		line 39 in file "beat.c"
 22694 ;; Parameters:    Size  Location     Type
 22695 ;;		None
 22696 ;; Auto vars:     Size  Location     Type
 22697 ;;		None
 22698 ;; Return value:  Size  Location     Type
 22699 ;;                  1    wreg      void 
 22700 ;; Registers used:
 22701 ;;		wreg, status,2, status,0, pclath, cstack
 22702 ;; Tracked objects:
 22703 ;;		On entry : 0/0
 22704 ;;		On exit  : 0/0
 22705 ;;		Unchanged: 0/0
 22706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22711 ;;Total ram usage:        0 bytes
 22712 ;; Hardware stack levels used:    1
 22713 ;; Hardware stack levels required when called:    5
 22714 ;; This function calls:
 22715 ;;		_ADCC_SetADTIInterruptHandler
 22716 ;;		_ADCC_SetUpperThreshold
 22717 ;;		_ADCC_StartConversion
 22718 ;; This function is called by:
 22719 ;;		_main
 22720 ;; This function uses a non-reentrant model
 22721 ;;
 22722                           
 22723                           
 22724                           ;psect for function _BEAT_init
 22725  1000                     _BEAT_init:	
 22726                           
 22727                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 22728                           
 22729                           ;incstack = 0
 22730                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 22731  1000  0142               	movlb	2	; select bank2
 22732  1001  0865               	movf	(_threshold+1)^(0+256),w
 22733  1002  0140               	movlb	0	; select bank0
 22734  1003  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22735  1004  0142               	movlb	2	; select bank2
 22736  1005  0864               	movf	_threshold^(0+256),w
 22737  1006  0140               	movlb	0	; select bank0
 22738  1007  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22739  1008  319D  254E  3190   	fcall	_ADCC_SetUpperThreshold
 22740                           
 22741                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 22742  100B  301C               	movlw	low _adcThresholdHandler
 22743  100C  0140               	movlb	0	; select bank0
 22744  100D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 22745  100E  301D               	movlw	high _adcThresholdHandler
 22746  100F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 22747  1010  319D  2545  3190   	fcall	_ADCC_SetADTIInterruptHandler
 22748                           
 22749                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 22750  1013  300F               	movlw	15
 22751  1014  319D  2557         	fcall	_ADCC_StartConversion
 22752  1016  0008               	return
 22753  1017                     __end_of_BEAT_init:	
 22754                           
 22755                           	psect	text85
 22756  1D57                     __ptext85:	
 22757 ;; *************** function _ADCC_StartConversion *****************
 22758 ;; Defined at:
 22759 ;;		line 121 in file "mcc_generated_files/adcc.c"
 22760 ;; Parameters:    Size  Location     Type
 22761 ;;  channel         1    wreg     enum E10867
 22762 ;; Auto vars:     Size  Location     Type
 22763 ;;  channel         1    0[BANK0 ] enum E10867
 22764 ;; Return value:  Size  Location     Type
 22765 ;;                  1    wreg      void 
 22766 ;; Registers used:
 22767 ;;		wreg
 22768 ;; Tracked objects:
 22769 ;;		On entry : 0/0
 22770 ;;		On exit  : 0/0
 22771 ;;		Unchanged: 0/0
 22772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22776 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22777 ;;Total ram usage:        1 bytes
 22778 ;; Hardware stack levels used:    1
 22779 ;; Hardware stack levels required when called:    4
 22780 ;; This function calls:
 22781 ;;		Nothing
 22782 ;; This function is called by:
 22783 ;;		_BEAT_init
 22784 ;; This function uses a non-reentrant model
 22785 ;;
 22786                           
 22787                           
 22788                           ;psect for function _ADCC_StartConversion
 22789  1D57                     _ADCC_StartConversion:	
 22790                           
 22791                           ;incstack = 0
 22792                           ; Regs used in _ADCC_StartConversion: [wreg]
 22793                           ;ADCC_StartConversion@channel stored from wreg
 22794  1D57  0140               	movlb	0	; select bank0
 22795  1D58  00A0               	movwf	ADCC_StartConversion@channel
 22796                           
 22797                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 22798  1D59  0820               	movf	ADCC_StartConversion@channel,w
 22799  1D5A  0141               	movlb	1	; select bank1
 22800  1D5B  009F               	movwf	31	;volatile
 22801                           
 22802                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 22803  1D5C  0142               	movlb	2	; select bank2
 22804  1D5D  1791               	bsf	17,7	;volatile
 22805                           
 22806                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 22807  1D5E  1411               	bsf	17,0	;volatile
 22808  1D5F  0008               	return
 22809  1D60                     __end_of_ADCC_StartConversion:	
 22810                           
 22811                           	psect	text86
 22812  1D4E                     __ptext86:	
 22813 ;; *************** function _ADCC_SetUpperThreshold *****************
 22814 ;; Defined at:
 22815 ;;		line 251 in file "mcc_generated_files/adcc.c"
 22816 ;; Parameters:    Size  Location     Type
 22817 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 22818 ;; Auto vars:     Size  Location     Type
 22819 ;;		None
 22820 ;; Return value:  Size  Location     Type
 22821 ;;                  1    wreg      void 
 22822 ;; Registers used:
 22823 ;;		wreg, status,2
 22824 ;; Tracked objects:
 22825 ;;		On entry : 0/0
 22826 ;;		On exit  : 0/0
 22827 ;;		Unchanged: 0/0
 22828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22833 ;;Total ram usage:        2 bytes
 22834 ;; Hardware stack levels used:    1
 22835 ;; Hardware stack levels required when called:    4
 22836 ;; This function calls:
 22837 ;;		Nothing
 22838 ;; This function is called by:
 22839 ;;		_BEAT_init
 22840 ;;		_BEAT_task
 22841 ;; This function uses a non-reentrant model
 22842 ;;
 22843                           
 22844                           
 22845                           ;psect for function _ADCC_SetUpperThreshold
 22846  1D4E                     _ADCC_SetUpperThreshold:	
 22847                           
 22848                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 22849                           
 22850                           ;incstack = 0
 22851                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 22852  1D4E  0140               	movlb	0	; select bank0
 22853  1D4F  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 22854  1D50  0141               	movlb	1	; select bank1
 22855  1D51  008F               	movwf	15	;volatile
 22856                           
 22857                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 22858  1D52  0140               	movlb	0	; select bank0
 22859  1D53  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 22860  1D54  0141               	movlb	1	; select bank1
 22861  1D55  008E               	movwf	14	;volatile
 22862  1D56  0008               	return
 22863  1D57                     __end_of_ADCC_SetUpperThreshold:	
 22864                           
 22865                           	psect	text87
 22866  1D45                     __ptext87:	
 22867 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22868 ;; Defined at:
 22869 ;;		line 317 in file "mcc_generated_files/adcc.c"
 22870 ;; Parameters:    Size  Location     Type
 22871 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22872 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 22873 ;; Auto vars:     Size  Location     Type
 22874 ;;		None
 22875 ;; Return value:  Size  Location     Type
 22876 ;;                  1    wreg      void 
 22877 ;; Registers used:
 22878 ;;		wreg
 22879 ;; Tracked objects:
 22880 ;;		On entry : 0/0
 22881 ;;		On exit  : 0/0
 22882 ;;		Unchanged: 0/0
 22883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22888 ;;Total ram usage:        2 bytes
 22889 ;; Hardware stack levels used:    1
 22890 ;; Hardware stack levels required when called:    4
 22891 ;; This function calls:
 22892 ;;		Nothing
 22893 ;; This function is called by:
 22894 ;;		_ADCC_Initialize
 22895 ;;		_BEAT_init
 22896 ;; This function uses a non-reentrant model
 22897 ;;
 22898                           
 22899                           
 22900                           ;psect for function _ADCC_SetADTIInterruptHandler
 22901  1D45                     _ADCC_SetADTIInterruptHandler:	
 22902                           
 22903                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22904                           
 22905                           ;incstack = 0
 22906                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 22907  1D45  0140               	movlb	0	; select bank0
 22908  1D46  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 22909  1D47  0142               	movlb	2	; select bank2
 22910  1D48  00ED               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 22911  1D49  0140               	movlb	0	; select bank0
 22912  1D4A  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 22913  1D4B  0142               	movlb	2	; select bank2
 22914  1D4C  00EC               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 22915  1D4D  0008               	return
 22916  1D4E                     __end_of_ADCC_SetADTIInterruptHandler:	
 22917                           
 22918                           	psect	intentry
 22919  0004                     __pintentry:	
 22920 ;; *************** function _INTERRUPT_InterruptManager *****************
 22921 ;; Defined at:
 22922 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22923 ;; Parameters:    Size  Location     Type
 22924 ;;		None
 22925 ;; Auto vars:     Size  Location     Type
 22926 ;;		None
 22927 ;; Return value:  Size  Location     Type
 22928 ;;                  1    wreg      void 
 22929 ;; Registers used:
 22930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22931 ;; Tracked objects:
 22932 ;;		On entry : 0/0
 22933 ;;		On exit  : 0/0
 22934 ;;		Unchanged: 0/0
 22935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22940 ;;Total ram usage:        0 bytes
 22941 ;; Hardware stack levels used:    1
 22942 ;; Hardware stack levels required when called:    3
 22943 ;; This function calls:
 22944 ;;		Absolute function
 22945 ;;		_ADCC_ThresholdISR
 22946 ;;		_DMX_interrupt
 22947 ;;		_EUSART1_Receive_ISR
 22948 ;;		_I2C1_BusCollisionISR
 22949 ;;		_I2C1_ISR
 22950 ;;		_TMR0_ISR
 22951 ;; This function is called by:
 22952 ;;		Interrupt level 1
 22953 ;; This function uses a non-reentrant model
 22954 ;;
 22955                           
 22956  0004                     _INTERRUPT_InterruptManager:	
 22957                           
 22958                           ;incstack = 0
 22959 ;; hardware stack exceeded
 22960  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22961                           
 22962                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22963  0005  3180               	pagesel	$
 22964                           
 22965                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 22966  0006  014E               	movlb	14	; select bank14
 22967  0007  1A96               	btfsc	22,5	;volatile
 22968  0008  1E8C               	btfss	12,5	;volatile
 22969  0009  280E               	goto	i1l427
 22970                           
 22971                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 22972  000A  319E  260F  3180   	fcall	_TMR0_ISR
 22973                           
 22974                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22975  000D  282E               	goto	i1l439
 22976  000E                     i1l427:	
 22977                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22978                           
 22979  000E  1F0B               	btfss	11,6	;volatile
 22980  000F  282E               	goto	i1l439
 22981                           
 22982                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22983  0010  1899               	btfsc	25,1	;volatile
 22984  0011  1C8F               	btfss	15,1	;volatile
 22985  0012  2817               	goto	i1l430
 22986                           
 22987                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 22988  0013  319D  2513  3180   	fcall	_I2C1_BusCollisionISR
 22989                           
 22990                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 22991  0016  282E               	goto	i1l439
 22992  0017                     i1l430:	
 22993                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22994                           
 22995  0017  1819               	btfsc	25,0	;volatile
 22996  0018  1C0F               	btfss	15,0	;volatile
 22997  0019  281E               	goto	i1l432
 22998                           
 22999                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 23000  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 23001                           
 23002                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 23003  001D  282E               	goto	i1l439
 23004  001E                     i1l432:	
 23005                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 23006                           
 23007  001E  1897               	btfsc	23,1	;volatile
 23008  001F  1C8D               	btfss	13,1	;volatile
 23009  0020  2825               	goto	i1l434
 23010                           
 23011                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 23012  0021  319E  2602  3180   	fcall	_ADCC_ThresholdISR
 23013                           
 23014                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 23015  0024  282E               	goto	i1l439
 23016  0025                     i1l434:	
 23017                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 23018                           
 23019  0025  1A99               	btfsc	25,5	;volatile
 23020  0026  1E8F               	btfss	15,5	;volatile
 23021  0027  282E               	goto	i1l439
 23022                           
 23023                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 23024  0028  0143               	movlb	3	; select bank3
 23025  0029  086B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 23026  002A  008A               	movwf	10
 23027  002B  086A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 23028  002C  000A               	callw
 23029  002D  3180               	pagesel	$
 23030  002E                     i1l439:	
 23031                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 23032                           
 23033  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23034  002F  0009               	retfie
 23035  0030                     __end_of_INTERRUPT_InterruptManager:	
 23036                           
 23037                           	psect	text89
 23038  1E0F                     __ptext89:	
 23039 ;; *************** function _TMR0_ISR *****************
 23040 ;; Defined at:
 23041 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23042 ;; Parameters:    Size  Location     Type
 23043 ;;		None
 23044 ;; Auto vars:     Size  Location     Type
 23045 ;;		None
 23046 ;; Return value:  Size  Location     Type
 23047 ;;                  1    wreg      void 
 23048 ;; Registers used:
 23049 ;;		wreg, status,2, status,0, pclath, cstack
 23050 ;; Tracked objects:
 23051 ;;		On entry : 0/0
 23052 ;;		On exit  : 0/0
 23053 ;;		Unchanged: 0/0
 23054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23059 ;;Total ram usage:        0 bytes
 23060 ;; Hardware stack levels used:    1
 23061 ;; Hardware stack levels required when called:    1
 23062 ;; This function calls:
 23063 ;;		Absolute function
 23064 ;;		_CLOCK_timerCallback
 23065 ;;		_TMR0_DefaultInterruptHandler
 23066 ;; This function is called by:
 23067 ;;		_INTERRUPT_InterruptManager
 23068 ;; This function uses a non-reentrant model
 23069 ;;
 23070                           
 23071                           
 23072                           ;psect for function _TMR0_ISR
 23073  1E0F                     _TMR0_ISR:	
 23074                           
 23075                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23076                           
 23077                           ;incstack = 0
 23078 ;; hardware stack exceeded
 23079                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23080  1E0F  014E               	movlb	14	; select bank14
 23081  1E10  128C               	bcf	12,5	;volatile
 23082                           
 23083                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23084  1E11  0142               	movlb	2	; select bank2
 23085  1E12  086E               	movf	_TMR0_InterruptHandler^(0+256),w
 23086  1E13  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 23087  1E14  1903               	btfsc	3,2
 23088  1E15  0008               	return
 23089                           
 23090                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23091  1E16  086F               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 23092  1E17  008A               	movwf	10
 23093  1E18  086E               	movf	_TMR0_InterruptHandler^(0+256),w
 23094  1E19  000A               	callw
 23095  1E1A  319E               	pagesel	$
 23096  1E1B  0008               	return
 23097  1E1C                     __end_of_TMR0_ISR:	
 23098                           
 23099                           	psect	text90
 23100  1D29                     __ptext90:	
 23101 ;; *************** function _CLOCK_timerCallback *****************
 23102 ;; Defined at:
 23103 ;;		line 20 in file "clock.c"
 23104 ;; Parameters:    Size  Location     Type
 23105 ;;		None
 23106 ;; Auto vars:     Size  Location     Type
 23107 ;;		None
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  1    wreg      void 
 23110 ;; Registers used:
 23111 ;;		wreg
 23112 ;; Tracked objects:
 23113 ;;		On entry : 0/0
 23114 ;;		On exit  : 0/0
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23121 ;;Total ram usage:        0 bytes
 23122 ;; Hardware stack levels used:    1
 23123 ;; This function calls:
 23124 ;;		Nothing
 23125 ;; This function is called by:
 23126 ;;		_CLOCK_init
 23127 ;;		_TMR0_ISR
 23128 ;; This function uses a non-reentrant model
 23129 ;;
 23130                           
 23131                           
 23132                           ;psect for function _CLOCK_timerCallback
 23133  1D29                     _CLOCK_timerCallback:	
 23134                           
 23135                           ;clock.c: 21:     currentTime++;
 23136                           
 23137                           ;incstack = 0
 23138 ;; hardware stack exceeded
 23139                           ; Regs used in _CLOCK_timerCallback: [wreg]
 23140  1D29  3001               	movlw	1
 23141  1D2A  0142               	movlb	2	; select bank2
 23142  1D2B  07B8               	addwf	_currentTime^(0+256),f
 23143  1D2C  3000               	movlw	0
 23144  1D2D  3DB9               	addwfc	(_currentTime+1)^(0+256),f
 23145  1D2E  0008               	return
 23146  1D2F                     __end_of_CLOCK_timerCallback:	
 23147                           
 23148                           	psect	text91
 23149  1D0B                     __ptext91:	
 23150 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23151 ;; Defined at:
 23152 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23153 ;; Parameters:    Size  Location     Type
 23154 ;;		None
 23155 ;; Auto vars:     Size  Location     Type
 23156 ;;		None
 23157 ;; Return value:  Size  Location     Type
 23158 ;;                  1    wreg      void 
 23159 ;; Registers used:
 23160 ;;		None
 23161 ;; Tracked objects:
 23162 ;;		On entry : 0/0
 23163 ;;		On exit  : 0/0
 23164 ;;		Unchanged: 0/0
 23165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23170 ;;Total ram usage:        0 bytes
 23171 ;; Hardware stack levels used:    1
 23172 ;; This function calls:
 23173 ;;		Nothing
 23174 ;; This function is called by:
 23175 ;;		_TMR0_Initialize
 23176 ;;		_TMR0_ISR
 23177 ;; This function uses a non-reentrant model
 23178 ;;
 23179                           
 23180                           
 23181                           ;psect for function _TMR0_DefaultInterruptHandler
 23182  1D0B                     _TMR0_DefaultInterruptHandler:	
 23183                           
 23184                           ;incstack = 0
 23185 ;; hardware stack exceeded
 23186                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23187  1D0B  0008               	return
 23188  1D0C                     __end_of_TMR0_DefaultInterruptHandler:	
 23189                           
 23190                           	psect	text92
 23191  0EAE                     __ptext92:	
 23192 ;; *************** function _I2C1_ISR *****************
 23193 ;; Defined at:
 23194 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 23195 ;; Parameters:    Size  Location     Type
 23196 ;;		None
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;		None
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  1    wreg      void 
 23201 ;; Registers used:
 23202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23203 ;; Tracked objects:
 23204 ;;		On entry : 0/0
 23205 ;;		On exit  : 0/0
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23210 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23212 ;;Total ram usage:        4 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:    1
 23215 ;; This function calls:
 23216 ;;		_I2C1_FunctionComplete
 23217 ;;		_I2C1_Stop
 23218 ;; This function is called by:
 23219 ;;		_INTERRUPT_InterruptManager
 23220 ;; This function uses a non-reentrant model
 23221 ;;
 23222                           
 23223                           
 23224                           ;psect for function _I2C1_ISR
 23225  0EAE                     _I2C1_ISR:	
 23226                           
 23227                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 23228                           
 23229                           ;incstack = 0
 23230 ;; hardware stack exceeded
 23231                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23232  0EAE  014E               	movlb	14	; select bank14
 23233  0EAF  100F               	bcf	15,0	;volatile
 23234                           
 23235                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 23236  0EB0  0143               	movlb	3	; select bank3
 23237  0EB1  1F90               	btfss	16,7	;volatile
 23238  0EB2  2FD3               	goto	i1l6192
 23239                           
 23240                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 23241  0EB3  1390               	bcf	16,7	;volatile
 23242                           
 23243                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 23244  0EB4  0141               	movlb	1	; select bank1
 23245  0EB5  01E5               	clrf	_i2c1_state^(0+128)
 23246                           
 23247                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 23248  0EB6  0871               	movf	_p_i2c1_current,w
 23249  0EB7  3E02               	addlw	2
 23250  0EB8  0086               	movwf	6
 23251  0EB9  3001               	movlw	1	; select bank2/3
 23252  0EBA  0087               	movwf	7
 23253  0EBB  0801               	movf	1,w
 23254  0EBC  0086               	movwf	6
 23255  0EBD  0187               	clrf	7
 23256  0EBE  0181               	clrf	1
 23257  0EBF  0A81               	incf	1,f
 23258                           
 23259                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 23260  0EC0  01F1               	clrf	_p_i2c1_current
 23261  0EC1  0008               	return
 23262  0EC2                     i1l547:	
 23263                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 23264                           
 23265                           
 23266                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 23267  0EC2  18C7               	btfsc	(_i2c1_object^(0+128)+2),1
 23268  0EC3  0008               	return
 23269                           
 23270                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 23271  0EC4  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23272  0EC5  00F9               	movwf	??_I2C1_ISR
 23273  0EC6  0879               	movf	??_I2C1_ISR,w
 23274  0EC7  00F1               	movwf	_p_i2c1_current
 23275                           
 23276                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 23277  0EC8  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23278  0EC9  0086               	movwf	6
 23279  0ECA  3001               	movlw	1	; select bank2/3
 23280  0ECB  0087               	movwf	7
 23281  0ECC  0801               	movf	1,w
 23282  0ECD  00F9               	movwf	??_I2C1_ISR
 23283  0ECE  0879               	movf	??_I2C1_ISR,w
 23284  0ECF  00E4               	movwf	_i2c1_trb_count^(0+128)
 23285                           
 23286                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 23287  0ED0  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23288  0ED1  0086               	movwf	6
 23289  0ED2  3001               	movlw	1	; select bank2/3
 23290  0ED3  0087               	movwf	7
 23291  0ED4  3001               	movlw	1	; select bank2/3
 23292  0ED5  3F41               	moviw [1]fsr1
 23293  0ED6  00F2               	movwf	_p_i2c1_trb_current
 23294                           
 23295                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 23296  0ED7  3003               	movlw	3
 23297  0ED8  00F9               	movwf	??_I2C1_ISR
 23298  0ED9  0879               	movf	??_I2C1_ISR,w
 23299  0EDA  07C6               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 23300                           
 23301                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 23302  0EDB  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23303  0EDC  3A60               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 23304  0EDD  1D03               	skipz
 23305  0EDE  2EE3               	goto	i1l6080
 23306                           
 23307                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 23308  0EDF  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 23309  0EE0  00F9               	movwf	??_I2C1_ISR
 23310  0EE1  0879               	movf	??_I2C1_ISR,w
 23311  0EE2  00C6               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 23312  0EE3                     i1l6080:	
 23313                           
 23314                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 23315  0EE3  1047               	bcf	(_i2c1_object^(0+128)+2),0
 23316                           
 23317                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 23318  0EE4  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23319  0EE5  0645               	xorwf	_i2c1_object^(0+128),w
 23320  0EE6  1903               	btfsc	3,2
 23321                           
 23322                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 23323  0EE7  14C7               	bsf	(_i2c1_object^(0+128)+2),1
 23324                           
 23325                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 23326                           
 23327                           ;mcc_generated_files/i2c1.c: 290:                 }
 23328  0EE8  0143               	movlb	3	; select bank3
 23329  0EE9  1411               	bsf	17,0	;volatile
 23330  0EEA                     i1l6084:	
 23331                           
 23332                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 23333  0EEA  3002               	movlw	2
 23334  0EEB  00F9               	movwf	??_I2C1_ISR
 23335  0EEC  0879               	movf	??_I2C1_ISR,w
 23336  0EED  0141               	movlb	1	; select bank1
 23337  0EEE  00E5               	movwf	_i2c1_state^(0+128)
 23338  0EEF  0008               	return
 23339  0EF0                     i1l552:	
 23340                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 23341                           
 23342  0EF0  2F7C               	goto	i1l573
 23343  0EF1                     i1l553:	
 23344                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 23345                           
 23346                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 23347                           
 23348                           
 23349                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 23350  0EF1  0143               	movlb	3	; select bank3
 23351  0EF2  1F11               	btfss	17,6	;volatile
 23352  0EF3  2EFD               	goto	i1l6092
 23353                           
 23354                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 23355  0EF4  3001               	movlw	1
 23356  0EF5  00F9               	movwf	??_I2C1_ISR
 23357  0EF6  0879               	movf	??_I2C1_ISR,w
 23358  0EF7  0141               	movlb	1	; select bank1
 23359  0EF8  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 23360                           
 23361                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23362  0EF9  3004               	movlw	4
 23363  0EFA  319F  2735         	fcall	_I2C1_Stop
 23364                           
 23365                           ;mcc_generated_files/i2c1.c: 319:             }
 23366  0EFC  0008               	return
 23367  0EFD                     i1l6092:	
 23368                           
 23369                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 23370  0EFD  0876               	movf	I2C1_ISR@i2c_address+1,w
 23371  0EFE  00FA               	movwf	??_I2C1_ISR+1
 23372  0EFF  0875               	movf	I2C1_ISR@i2c_address,w
 23373  0F00  00F9               	movwf	??_I2C1_ISR
 23374  0F01  36FA               	lsrf	??_I2C1_ISR+1,f
 23375  0F02  0CF9               	rrf	??_I2C1_ISR,f
 23376  0F03  0879               	movf	??_I2C1_ISR,w
 23377  0F04  008C               	movwf	12	;volatile
 23378                           
 23379                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 23380  0F05  1C75               	btfss	I2C1_ISR@i2c_address,0
 23381  0F06  2F0D               	goto	i1l6098
 23382                           
 23383                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 23384  0F07  300B               	movlw	11
 23385  0F08  00F9               	movwf	??_I2C1_ISR
 23386  0F09  0879               	movf	??_I2C1_ISR,w
 23387  0F0A  0141               	movlb	1	; select bank1
 23388  0F0B  00E5               	movwf	_i2c1_state^(0+128)
 23389                           
 23390                           ;mcc_generated_files/i2c1.c: 331:                 }
 23391  0F0C  0008               	return
 23392  0F0D                     i1l6098:	
 23393                           
 23394                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 23395  0F0D  3003               	movlw	3
 23396  0F0E  00F9               	movwf	??_I2C1_ISR
 23397  0F0F  0879               	movf	??_I2C1_ISR,w
 23398  0F10  0141               	movlb	1	; select bank1
 23399  0F11  00E5               	movwf	_i2c1_state^(0+128)
 23400  0F12  0008               	return
 23401  0F13                     i1l558:	
 23402                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 23403                           
 23404                           
 23405                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 23406  0F13  0143               	movlb	3	; select bank3
 23407  0F14  1F11               	btfss	17,6	;volatile
 23408  0F15  2F1F               	goto	i1l559
 23409                           
 23410                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 23411  0F16  3001               	movlw	1
 23412  0F17  00F9               	movwf	??_I2C1_ISR
 23413  0F18  0879               	movf	??_I2C1_ISR,w
 23414  0F19  0141               	movlb	1	; select bank1
 23415  0F1A  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 23416                           
 23417                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23418  0F1B  3004               	movlw	4
 23419  0F1C  319F  2735         	fcall	_I2C1_Stop
 23420                           
 23421                           ;mcc_generated_files/i2c1.c: 347:             }
 23422  0F1E  0008               	return
 23423  0F1F                     i1l559:	
 23424                           ;mcc_generated_files/i2c1.c: 348:             else
 23425                           
 23426                           
 23427                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 23428  0F1F  1491               	bsf	17,1	;volatile
 23429                           
 23430                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 23431  0F20  0876               	movf	I2C1_ISR@i2c_address+1,w
 23432  0F21  00FA               	movwf	??_I2C1_ISR+1
 23433  0F22  0875               	movf	I2C1_ISR@i2c_address,w
 23434  0F23  00F9               	movwf	??_I2C1_ISR
 23435  0F24  087A               	movf	??_I2C1_ISR+1,w
 23436  0F25  00F9               	movwf	??_I2C1_ISR
 23437  0F26  01FA               	clrf	??_I2C1_ISR+1
 23438  0F27  3006               	movlw	6
 23439  0F28  0579               	andwf	??_I2C1_ISR,w
 23440  0F29  00FB               	movwf	??_I2C1_ISR+2
 23441  0F2A  3000               	movlw	0
 23442  0F2B  057A               	andwf	??_I2C1_ISR+1,w
 23443  0F2C  00FC               	movwf	??_I2C1_ISR+3
 23444  0F2D  30F0               	movlw	240
 23445  0F2E  047B               	iorwf	??_I2C1_ISR+2,w
 23446  0F2F  00F5               	movwf	I2C1_ISR@i2c_address
 23447  0F30  3000               	movlw	0
 23448  0F31  047C               	iorwf	??_I2C1_ISR+3,w
 23449  0F32  00F6               	movwf	I2C1_ISR@i2c_address+1
 23450                           
 23451                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 23452  0F33  1475               	bsf	I2C1_ISR@i2c_address,0
 23453                           
 23454                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 23455  0F34  0141               	movlb	1	; select bank1
 23456  0F35  01E1               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 23457  0F36  0AE1               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 23458  0F37  2EEA               	goto	i1l6084
 23459  0F38                     i1l6112:	
 23460                           
 23461                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 23462  0F38  0361               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 23463  0F39  1903               	btfsc	3,2
 23464  0F3A  2F51               	goto	i1l6132
 23465                           
 23466                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 23467  0F3B  0872               	movf	_p_i2c1_trb_current,w
 23468  0F3C  0086               	movwf	6
 23469  0F3D  3001               	movlw	1	; select bank2/3
 23470  0F3E  0087               	movwf	7
 23471  0F3F  3F40               	moviw [0]fsr1
 23472  0F40  00F5               	movwf	I2C1_ISR@i2c_address
 23473  0F41  3F41               	moviw [1]fsr1
 23474  0F42  00F6               	movwf	I2C1_ISR@i2c_address+1
 23475                           
 23476                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 23477  0F43  0872               	movf	_p_i2c1_trb_current,w
 23478  0F44  0086               	movwf	6
 23479  0F45  3001               	movlw	1	; select bank2/3
 23480  0F46  0087               	movwf	7
 23481  0F47  3001               	movlw	1	; select bank2/3
 23482  0F48  3F43               	moviw [3]fsr1
 23483  0F49  00E3               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 23484                           
 23485                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 23486  0F4A  0872               	movf	_p_i2c1_trb_current,w
 23487  0F4B  0086               	movwf	6
 23488  0F4C  3001               	movlw	1	; select bank2/3
 23489  0F4D  0087               	movwf	7
 23490  0F4E  3001               	movlw	1	; select bank2/3
 23491  0F4F  3F42               	moviw [2]fsr1
 23492  0F50  00E2               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 23493  0F51                     i1l6132:	
 23494                           
 23495                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 23496  0F51  0875               	movf	I2C1_ISR@i2c_address,w
 23497  0F52  0143               	movlb	3	; select bank3
 23498  0F53  008C               	movwf	12	;volatile
 23499                           
 23500                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 23501  0F54  1C75               	btfss	I2C1_ISR@i2c_address,0
 23502  0F55  2F0D               	goto	i1l6098
 23503                           
 23504                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 23505  0F56  3005               	movlw	5
 23506  0F57  00F9               	movwf	??_I2C1_ISR
 23507  0F58  0879               	movf	??_I2C1_ISR,w
 23508  0F59  0141               	movlb	1	; select bank1
 23509  0F5A  00E5               	movwf	_i2c1_state^(0+128)
 23510                           
 23511                           ;mcc_generated_files/i2c1.c: 419:                 }
 23512  0F5B  0008               	return
 23513  0F5C                     i1l569:	
 23514                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 23515                           
 23516                           
 23517                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 23518  0F5C  0143               	movlb	3	; select bank3
 23519  0F5D  1F11               	btfss	17,6	;volatile
 23520  0F5E  2F6A               	goto	i1l6146
 23521                           
 23522                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 23523  0F5F  3001               	movlw	1
 23524  0F60  00F9               	movwf	??_I2C1_ISR
 23525  0F61  0879               	movf	??_I2C1_ISR,w
 23526  0F62  0141               	movlb	1	; select bank1
 23527  0F63  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 23528                           
 23529                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 23530  0F64  0143               	movlb	3	; select bank3
 23531  0F65  1311               	bcf	17,6	;volatile
 23532                           
 23533                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 23534  0F66  3005               	movlw	5
 23535  0F67  319F  2735         	fcall	_I2C1_Stop
 23536                           
 23537                           ;mcc_generated_files/i2c1.c: 442:             }
 23538  0F69  0008               	return
 23539  0F6A                     i1l6146:	
 23540                           
 23541                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 23542  0F6A  3001               	movlw	1
 23543  0F6B  0141               	movlb	1	; select bank1
 23544  0F6C  02E2               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23545  0F6D  0A62               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 23546  0F6E  1D03               	btfss	3,2
 23547  0F6F  2F7F               	goto	i1l6154
 23548                           
 23549                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 23550  0F70  3004               	movlw	4
 23551  0F71  00F9               	movwf	??_I2C1_ISR
 23552  0F72  0879               	movf	??_I2C1_ISR,w
 23553  0F73  07F2               	addwf	_p_i2c1_trb_current,f
 23554                           
 23555                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 23556  0F74  3001               	movlw	1
 23557  0F75  02E4               	subwf	_i2c1_trb_count^(0+128),f
 23558  0F76  1D03               	btfss	3,2
 23559  0F77  2F7C               	goto	i1l573
 23560                           
 23561                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23562  0F78  3000               	movlw	0
 23563  0F79  319F  2735         	fcall	_I2C1_Stop
 23564                           
 23565                           ;mcc_generated_files/i2c1.c: 457:                     }
 23566  0F7B  0008               	return
 23567  0F7C                     i1l573:	
 23568                           ;mcc_generated_files/i2c1.c: 458:                     else
 23569                           
 23570                           
 23571                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 23572  0F7C  0143               	movlb	3	; select bank3
 23573  0F7D  1491               	bsf	17,1	;volatile
 23574  0F7E  2EEA               	goto	i1l6084
 23575  0F7F                     i1l6154:	
 23576                           
 23577                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 23578  0F7F  0863               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23579  0F80  0086               	movwf	6
 23580  0F81  0187               	clrf	7
 23581  0F82  0801               	movf	1,w
 23582  0F83  0143               	movlb	3	; select bank3
 23583  0F84  008C               	movwf	12	;volatile
 23584  0F85  3001               	movlw	1
 23585  0F86  00F9               	movwf	??_I2C1_ISR
 23586  0F87  0879               	movf	??_I2C1_ISR,w
 23587  0F88  0141               	movlb	1	; select bank1
 23588  0F89  07E3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23589  0F8A  0008               	return
 23590  0F8B                     i1l576:	
 23591                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 23592                           
 23593                           
 23594                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 23595  0F8B  0143               	movlb	3	; select bank3
 23596  0F8C  1F11               	btfss	17,6	;volatile
 23597  0F8D  2F99               	goto	i1l577
 23598                           
 23599                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 23600  0F8E  3001               	movlw	1
 23601  0F8F  00F9               	movwf	??_I2C1_ISR
 23602  0F90  0879               	movf	??_I2C1_ISR,w
 23603  0F91  0141               	movlb	1	; select bank1
 23604  0F92  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 23605                           
 23606                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23607  0F93  3004               	movlw	4
 23608  0F94  319F  2735         	fcall	_I2C1_Stop
 23609                           
 23610                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 23611  0F96  0143               	movlb	3	; select bank3
 23612  0F97  1311               	bcf	17,6	;volatile
 23613                           
 23614                           ;mcc_generated_files/i2c1.c: 495:             }
 23615  0F98  0008               	return
 23616  0F99                     i1l577:	
 23617                           ;mcc_generated_files/i2c1.c: 496:             else
 23618                           
 23619                           
 23620                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 23621  0F99  1591               	bsf	17,3	;volatile
 23622                           
 23623                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 23624  0F9A  3008               	movlw	8
 23625  0F9B  00F9               	movwf	??_I2C1_ISR
 23626  0F9C  0879               	movf	??_I2C1_ISR,w
 23627  0F9D  0141               	movlb	1	; select bank1
 23628  0F9E  00E5               	movwf	_i2c1_state^(0+128)
 23629  0F9F  0008               	return
 23630  0FA0                     i1l6166:	
 23631                           
 23632                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 23633  0FA0  3008               	movlw	8
 23634  0FA1  00F9               	movwf	??_I2C1_ISR
 23635  0FA2  0879               	movf	??_I2C1_ISR,w
 23636  0FA3  00E5               	movwf	_i2c1_state^(0+128)
 23637                           
 23638                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 23639  0FA4  0143               	movlb	3	; select bank3
 23640  0FA5  1591               	bsf	17,3	;volatile
 23641                           
 23642                           ;mcc_generated_files/i2c1.c: 513:             break;
 23643  0FA6  0008               	return
 23644  0FA7                     i1l6170:	
 23645                           
 23646                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 23647  0FA7  0143               	movlb	3	; select bank3
 23648  0FA8  080C               	movf	12,w	;volatile
 23649  0FA9  00F9               	movwf	??_I2C1_ISR
 23650  0FAA  0141               	movlb	1	; select bank1
 23651  0FAB  0863               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23652  0FAC  0086               	movwf	6
 23653  0FAD  0187               	clrf	7
 23654  0FAE  0879               	movf	??_I2C1_ISR,w
 23655  0FAF  0081               	movwf	1
 23656  0FB0  3001               	movlw	1
 23657  0FB1  00F9               	movwf	??_I2C1_ISR
 23658  0FB2  0879               	movf	??_I2C1_ISR,w
 23659  0FB3  07E3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23660                           
 23661                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 23662  0FB4  3001               	movlw	1
 23663  0FB5  02E2               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23664  0FB6  1903               	btfsc	3,2
 23665  0FB7  2FC0               	goto	i1l581
 23666                           
 23667                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 23668  0FB8  0143               	movlb	3	; select bank3
 23669  0FB9  1291               	bcf	17,5	;volatile
 23670                           
 23671                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 23672  0FBA  3006               	movlw	6
 23673  0FBB  00F9               	movwf	??_I2C1_ISR
 23674  0FBC  0879               	movf	??_I2C1_ISR,w
 23675  0FBD  0141               	movlb	1	; select bank1
 23676  0FBE  00E5               	movwf	_i2c1_state^(0+128)
 23677                           
 23678                           ;mcc_generated_files/i2c1.c: 532:             }
 23679  0FBF  2FC4               	goto	i1l6182
 23680  0FC0                     i1l581:	
 23681                           ;mcc_generated_files/i2c1.c: 533:             else
 23682                           
 23683                           
 23684                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 23685  0FC0  0143               	movlb	3	; select bank3
 23686  0FC1  1691               	bsf	17,5	;volatile
 23687                           
 23688                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 23689  0FC2  319E  2658         	fcall	_I2C1_FunctionComplete
 23690  0FC4                     i1l6182:	
 23691                           
 23692                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 23693  0FC4  0143               	movlb	3	; select bank3
 23694  0FC5  1611               	bsf	17,4	;volatile
 23695                           
 23696                           ;mcc_generated_files/i2c1.c: 545:             break;
 23697  0FC6  0008               	return
 23698  0FC7                     i1l6184:	
 23699                           
 23700                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23701  0FC7  3000               	movlw	0
 23702  0FC8  319F  2735         	fcall	_I2C1_Stop
 23703                           
 23704                           ;mcc_generated_files/i2c1.c: 552:             break;
 23705  0FCA  0008               	return
 23706  0FCB                     i1l6186:	
 23707                           
 23708                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 23709  0FCB  3001               	movlw	1
 23710  0FCC  00F9               	movwf	??_I2C1_ISR
 23711  0FCD  0879               	movf	??_I2C1_ISR,w
 23712  0FCE  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 23713                           
 23714                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 23715  0FCF  3006               	movlw	6
 23716  0FD0  319F  2735         	fcall	_I2C1_Stop
 23717                           
 23718                           ;mcc_generated_files/i2c1.c: 560:             break;
 23719  0FD2  0008               	return
 23720  0FD3                     i1l6192:	
 23721  0FD3  0141               	movlb	1	; select bank1
 23722  0FD4  0865               	movf	_i2c1_state^(0+128),w
 23723  0FD5  00F9               	movwf	??_I2C1_ISR
 23724  0FD6  01FA               	clrf	??_I2C1_ISR+1
 23725                           
 23726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23727                           ; Switch size 1, requested type "simple"
 23728                           ; Number of cases is 1, Range of values is 0 to 0
 23729                           ; switch strategies available:
 23730                           ; Name         Instructions Cycles
 23731                           ; simple_byte            4     3 (average)
 23732                           ; direct_byte            8     6 (fixed)
 23733                           ; jumptable            260     6 (fixed)
 23734                           ;	Chosen strategy is simple_byte
 23735  0FD7  087A               	movf	??_I2C1_ISR+1,w
 23736  0FD8  3A00               	xorlw	0	; case 0
 23737  0FD9  1903               	skipnz
 23738  0FDA  2FDC               	goto	i1l10140
 23739  0FDB  2FCB               	goto	i1l6186
 23740  0FDC                     i1l10140:	
 23741                           
 23742                           ; Switch size 1, requested type "simple"
 23743                           ; Number of cases is 11, Range of values is 0 to 11
 23744                           ; switch strategies available:
 23745                           ; Name         Instructions Cycles
 23746                           ; direct_byte           30     6 (fixed)
 23747                           ; simple_byte           34    18 (average)
 23748                           ; jumptable            260     6 (fixed)
 23749                           ;	Chosen strategy is simple_byte
 23750  0FDC  0879               	movf	??_I2C1_ISR,w
 23751  0FDD  3A00               	xorlw	0	; case 0
 23752  0FDE  1903               	skipnz
 23753  0FDF  2EC2               	goto	i1l547
 23754  0FE0  3A01               	xorlw	1	; case 1
 23755  0FE1  1903               	skipnz
 23756  0FE2  2EF0               	goto	i1l552
 23757  0FE3  3A03               	xorlw	3	; case 2
 23758  0FE4  1903               	skipnz
 23759  0FE5  2F38               	goto	i1l6112
 23760  0FE6  3A01               	xorlw	1	; case 3
 23761  0FE7  1903               	skipnz
 23762  0FE8  2F5C               	goto	i1l569
 23763  0FE9  3A07               	xorlw	7	; case 4
 23764  0FEA  1903               	skipnz
 23765  0FEB  2FC7               	goto	i1l6184
 23766  0FEC  3A01               	xorlw	1	; case 5
 23767  0FED  1903               	skipnz
 23768  0FEE  2F8B               	goto	i1l576
 23769  0FEF  3A03               	xorlw	3	; case 6
 23770  0FF0  1903               	skipnz
 23771  0FF1  2FA0               	goto	i1l6166
 23772  0FF2  3A01               	xorlw	1	; case 7
 23773  0FF3  1903               	skipnz
 23774  0FF4  2FC7               	goto	i1l6184
 23775  0FF5  3A0F               	xorlw	15	; case 8
 23776  0FF6  1903               	skipnz
 23777  0FF7  2FA7               	goto	i1l6170
 23778  0FF8  3A02               	xorlw	2	; case 10
 23779  0FF9  1903               	skipnz
 23780  0FFA  2EF1               	goto	i1l553
 23781  0FFB  3A01               	xorlw	1	; case 11
 23782  0FFC  1903               	skipnz
 23783  0FFD  2F13               	goto	i1l558
 23784  0FFE  2FCB               	goto	i1l6186
 23785  0FFF  0008               	return
 23786  1000                     __end_of_I2C1_ISR:	
 23787                           
 23788                           	psect	text93
 23789  1F35                     __ptext93:	
 23790 ;; *************** function _I2C1_Stop *****************
 23791 ;; Defined at:
 23792 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 23793 ;; Parameters:    Size  Location     Type
 23794 ;;  completion_c    1    wreg     enum E10866
 23795 ;; Auto vars:     Size  Location     Type
 23796 ;;  completion_c    1    1[COMMON] enum E10866
 23797 ;; Return value:  Size  Location     Type
 23798 ;;                  1    wreg      void 
 23799 ;; Registers used:
 23800 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23801 ;; Tracked objects:
 23802 ;;		On entry : 0/0
 23803 ;;		On exit  : 0/0
 23804 ;;		Unchanged: 0/0
 23805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23810 ;;Total ram usage:        2 bytes
 23811 ;; Hardware stack levels used:    1
 23812 ;; This function calls:
 23813 ;;		Nothing
 23814 ;; This function is called by:
 23815 ;;		_I2C1_ISR
 23816 ;; This function uses a non-reentrant model
 23817 ;;
 23818                           
 23819                           
 23820                           ;psect for function _I2C1_Stop
 23821  1F35                     _I2C1_Stop:	
 23822                           
 23823                           ;incstack = 0
 23824 ;; hardware stack exceeded
 23825                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 23826                           ;I2C1_Stop@completion_code stored from wreg
 23827  1F35  00F8               	movwf	I2C1_Stop@completion_code
 23828                           
 23829                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 23830  1F36  0143               	movlb	3	; select bank3
 23831  1F37  1511               	bsf	17,2	;volatile
 23832                           
 23833                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 23834  1F38  0871               	movf	_p_i2c1_current,w
 23835  1F39  3E02               	addlw	2
 23836  1F3A  0086               	movwf	6
 23837  1F3B  3001               	movlw	1	; select bank2/3
 23838  1F3C  0087               	movwf	7
 23839  1F3D  0801               	movf	1,w
 23840  1F3E  1903               	btfsc	3,2
 23841  1F3F  2F4C               	goto	i1l5834
 23842                           
 23843                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 23844  1F40  0878               	movf	I2C1_Stop@completion_code,w
 23845  1F41  00F7               	movwf	??_I2C1_Stop
 23846  1F42  0871               	movf	_p_i2c1_current,w
 23847  1F43  3E02               	addlw	2
 23848  1F44  0086               	movwf	6
 23849  1F45  3001               	movlw	1	; select bank2/3
 23850  1F46  0087               	movwf	7
 23851  1F47  0801               	movf	1,w
 23852  1F48  0086               	movwf	6
 23853  1F49  0187               	clrf	7
 23854  1F4A  0877               	movf	??_I2C1_Stop,w
 23855  1F4B  0081               	movwf	1
 23856  1F4C                     i1l5834:	
 23857                           
 23858                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 23859  1F4C  0141               	movlb	1	; select bank1
 23860  1F4D  01E5               	clrf	_i2c1_state^(0+128)
 23861  1F4E  0008               	return
 23862  1F4F                     __end_of_I2C1_Stop:	
 23863                           
 23864                           	psect	text94
 23865  1E58                     __ptext94:	
 23866 ;; *************** function _I2C1_FunctionComplete *****************
 23867 ;; Defined at:
 23868 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 23869 ;; Parameters:    Size  Location     Type
 23870 ;;		None
 23871 ;; Auto vars:     Size  Location     Type
 23872 ;;		None
 23873 ;; Return value:  Size  Location     Type
 23874 ;;                  1    wreg      void 
 23875 ;; Registers used:
 23876 ;;		wreg, status,2, status,0
 23877 ;; Tracked objects:
 23878 ;;		On entry : 0/0
 23879 ;;		On exit  : 0/0
 23880 ;;		Unchanged: 0/0
 23881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23886 ;;Total ram usage:        1 bytes
 23887 ;; Hardware stack levels used:    1
 23888 ;; This function calls:
 23889 ;;		Nothing
 23890 ;; This function is called by:
 23891 ;;		_I2C1_ISR
 23892 ;; This function uses a non-reentrant model
 23893 ;;
 23894                           
 23895                           
 23896                           ;psect for function _I2C1_FunctionComplete
 23897  1E58                     _I2C1_FunctionComplete:	
 23898                           
 23899                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 23900                           
 23901                           ;incstack = 0
 23902 ;; hardware stack exceeded
 23903                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 23904  1E58  3004               	movlw	4
 23905  1E59  00F7               	movwf	??_I2C1_FunctionComplete
 23906  1E5A  0877               	movf	??_I2C1_FunctionComplete,w
 23907  1E5B  07F2               	addwf	_p_i2c1_trb_current,f
 23908                           
 23909                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 23910  1E5C  3001               	movlw	1
 23911  1E5D  0141               	movlb	1	; select bank1
 23912  1E5E  02E4               	subwf	_i2c1_trb_count^(0+128),f
 23913  1E5F  1D03               	btfss	3,2
 23914  1E60  2E66               	goto	i1l588
 23915                           
 23916                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 23917  1E61  3004               	movlw	4
 23918  1E62  00F7               	movwf	??_I2C1_FunctionComplete
 23919  1E63  0877               	movf	??_I2C1_FunctionComplete,w
 23920  1E64  00E5               	movwf	_i2c1_state^(0+128)
 23921                           
 23922                           ;mcc_generated_files/i2c1.c: 575:     }
 23923  1E65  0008               	return
 23924  1E66                     i1l588:	
 23925                           ;mcc_generated_files/i2c1.c: 576:     else
 23926                           
 23927                           
 23928                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 23929  1E66  01E5               	clrf	_i2c1_state^(0+128)
 23930  1E67  0AE5               	incf	_i2c1_state^(0+128),f
 23931  1E68  0008               	return
 23932  1E69                     __end_of_I2C1_FunctionComplete:	
 23933                           
 23934                           	psect	text95
 23935  1D13                     __ptext95:	
 23936 ;; *************** function _I2C1_BusCollisionISR *****************
 23937 ;; Defined at:
 23938 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 23939 ;; Parameters:    Size  Location     Type
 23940 ;;		None
 23941 ;; Auto vars:     Size  Location     Type
 23942 ;;		None
 23943 ;; Return value:  Size  Location     Type
 23944 ;;                  1    wreg      void 
 23945 ;; Registers used:
 23946 ;;		None
 23947 ;; Tracked objects:
 23948 ;;		On entry : 0/0
 23949 ;;		On exit  : 0/0
 23950 ;;		Unchanged: 0/0
 23951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23956 ;;Total ram usage:        0 bytes
 23957 ;; Hardware stack levels used:    1
 23958 ;; This function calls:
 23959 ;;		Nothing
 23960 ;; This function is called by:
 23961 ;;		_INTERRUPT_InterruptManager
 23962 ;; This function uses a non-reentrant model
 23963 ;;
 23964                           
 23965                           
 23966                           ;psect for function _I2C1_BusCollisionISR
 23967  1D13                     _I2C1_BusCollisionISR:	
 23968                           
 23969                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 23970                           
 23971                           ;incstack = 0
 23972 ;; hardware stack exceeded
 23973                           ; Regs used in _I2C1_BusCollisionISR: []
 23974  1D13  014E               	movlb	14	; select bank14
 23975  1D14  108F               	bcf	15,1	;volatile
 23976  1D15  0008               	return
 23977  1D16                     __end_of_I2C1_BusCollisionISR:	
 23978                           
 23979                           	psect	text96
 23980  11C4                     __ptext96:	
 23981 ;; *************** function _DMX_interrupt *****************
 23982 ;; Defined at:
 23983 ;;		line 54 in file "dmx.c"
 23984 ;; Parameters:    Size  Location     Type
 23985 ;;		None
 23986 ;; Auto vars:     Size  Location     Type
 23987 ;;  dummy           1    6[COMMON] volatile unsigned char 
 23988 ;; Return value:  Size  Location     Type
 23989 ;;                  1    wreg      void 
 23990 ;; Registers used:
 23991 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23992 ;; Tracked objects:
 23993 ;;		On entry : 0/0
 23994 ;;		On exit  : 0/0
 23995 ;;		Unchanged: 0/0
 23996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23999 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24000 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24001 ;;Total ram usage:        7 bytes
 24002 ;; Hardware stack levels used:    1
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_DMX_init
 24007 ;;		_INTERRUPT_InterruptManager
 24008 ;; This function uses a non-reentrant model
 24009 ;;
 24010                           
 24011                           
 24012                           ;psect for function _DMX_interrupt
 24013  11C4                     _DMX_interrupt:	
 24014                           
 24015                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 24016                           
 24017                           ;incstack = 0
 24018 ;; hardware stack exceeded
 24019                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 24020  11C4  0142               	movlb	2	; select bank2
 24021  11C5  1C9D               	btfss	29,1	;volatile
 24022  11C6  29C9               	goto	i1l6622
 24023                           
 24024                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 24025  11C7  121D               	bcf	29,4	;volatile
 24026                           
 24027                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 24028  11C8  161D               	bsf	29,4	;volatile
 24029  11C9                     i1l6622:	
 24030                           
 24031                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 24032  11C9  0860               	movf	_initial^(0+256),w
 24033  11CA  0461               	iorwf	(_initial+1)^(0+256),w
 24034  11CB  1903               	btfsc	3,2
 24035  11CC  191D               	btfsc	29,2	;volatile
 24036  11CD  29EA               	goto	i1l6630
 24037                           
 24038                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 24039  11CE  0819               	movf	25,w	;volatile
 24040  11CF  00F7               	movwf	??_DMX_interrupt
 24041  11D0  01F8               	clrf	??_DMX_interrupt+1
 24042  11D1  082B               	movf	(_arrayIndex+1)^(0+256),w
 24043  11D2  00FA               	movwf	??_DMX_interrupt+3
 24044  11D3  082A               	movf	_arrayIndex^(0+256),w
 24045  11D4  00F9               	movwf	??_DMX_interrupt+2
 24046  11D5  35F9               	lslf	??_DMX_interrupt+2,f
 24047  11D6  0DFA               	rlf	??_DMX_interrupt+3,f
 24048  11D7  30EE               	movlw	238
 24049  11D8  00FB               	movwf	??_DMX_interrupt+4
 24050  11D9  3023               	movlw	35
 24051  11DA  00FC               	movwf	??_DMX_interrupt+5
 24052  11DB  0879               	movf	??_DMX_interrupt+2,w
 24053  11DC  077B               	addwf	??_DMX_interrupt+4,w
 24054  11DD  0086               	movwf	6
 24055  11DE  087A               	movf	??_DMX_interrupt+3,w
 24056  11DF  3D7C               	addwfc	??_DMX_interrupt+5,w
 24057  11E0  0087               	movwf	7
 24058  11E1  0877               	movf	??_DMX_interrupt,w
 24059  11E2  3FC0               	movwi [0]fsr1
 24060  11E3  0878               	movf	??_DMX_interrupt+1,w
 24061  11E4  3FC1               	movwi [1]fsr1
 24062                           
 24063                           ;dmx.c: 63:         arrayIndex += 1;
 24064  11E5  3001               	movlw	1
 24065  11E6  07AA               	addwf	_arrayIndex^(0+256),f
 24066  11E7  3000               	movlw	0
 24067  11E8  3DAB               	addwfc	(_arrayIndex+1)^(0+256),f
 24068                           
 24069                           ;dmx.c: 64:     } else {
 24070  11E9  29F2               	goto	i1l6634
 24071  11EA                     i1l6630:	
 24072                           
 24073                           ;dmx.c: 65:         arrayIndex = 0;
 24074  11EA  01AA               	clrf	_arrayIndex^(0+256)
 24075  11EB  01AB               	clrf	(_arrayIndex+1)^(0+256)
 24076                           
 24077                           ;dmx.c: 66:         initial = 0;
 24078  11EC  01E0               	clrf	_initial^(0+256)
 24079  11ED  01E1               	clrf	(_initial+1)^(0+256)
 24080                           
 24081                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 24082  11EE  0819               	movf	25,w	;volatile
 24083  11EF  00F7               	movwf	??_DMX_interrupt
 24084  11F0  0877               	movf	??_DMX_interrupt,w
 24085  11F1  00FD               	movwf	DMX_interrupt@dummy	;volatile
 24086  11F2                     i1l6634:	
 24087                           
 24088                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 24089  11F2  014E               	movlb	14	; select bank14
 24090  11F3  128F               	bcf	15,5	;volatile
 24091  11F4  0008               	return
 24092  11F5                     __end_of_DMX_interrupt:	
 24093                           
 24094                           	psect	text97
 24095  1291                     __ptext97:	
 24096 ;; *************** function _EUSART1_Receive_ISR *****************
 24097 ;; Defined at:
 24098 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 24099 ;; Parameters:    Size  Location     Type
 24100 ;;		None
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;		None
 24103 ;; Return value:  Size  Location     Type
 24104 ;;                  1    wreg      void 
 24105 ;; Registers used:
 24106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 0/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24116 ;;Total ram usage:        0 bytes
 24117 ;; Hardware stack levels used:    1
 24118 ;; Hardware stack levels required when called:    2
 24119 ;; This function calls:
 24120 ;;		Absolute function
 24121 ;;		_EUSART1_DefaultErrorHandler
 24122 ;;		_EUSART1_DefaultFramingErrorHandler
 24123 ;;		_EUSART1_DefaultOverrunErrorHandler
 24124 ;;		_EUSART1_RxDataHandler
 24125 ;; This function is called by:
 24126 ;;		_EUSART1_Initialize
 24127 ;;		_INTERRUPT_InterruptManager
 24128 ;; This function uses a non-reentrant model
 24129 ;;
 24130                           
 24131                           
 24132                           ;psect for function _EUSART1_Receive_ISR
 24133  1291                     _EUSART1_Receive_ISR:	
 24134                           
 24135                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24136                           
 24137                           ;incstack = 0
 24138 ;; hardware stack exceeded
 24139                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24140  1291  0874               	movf	_eusart1RxHead,w	;volatile
 24141  1292  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24142  1293  0086               	movwf	6
 24143  1294  3001               	movlw	1	; select bank3/4
 24144  1295  0087               	movwf	7
 24145  1296  0181               	clrf	1
 24146                           
 24147                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 24148  1297  0142               	movlb	2	; select bank2
 24149  1298  1D1D               	btfss	29,2	;volatile
 24150  1299  2AA6               	goto	i1l6036
 24151                           
 24152                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24153  129A  0874               	movf	_eusart1RxHead,w	;volatile
 24154  129B  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24155  129C  0086               	movwf	6
 24156  129D  3001               	movlw	1	; select bank3/4
 24157  129E  0087               	movwf	7
 24158  129F  1481               	bsf	1,1
 24159                           
 24160                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 24161  12A0  0143               	movlb	3	; select bank3
 24162  12A1  0869               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 24163  12A2  008A               	movwf	10
 24164  12A3  0868               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 24165  12A4  000A               	callw
 24166  12A5  3192               	pagesel	$
 24167  12A6                     i1l6036:	
 24168                           
 24169                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 24170  12A6  0142               	movlb	2	; select bank2
 24171  12A7  1C9D               	btfss	29,1	;volatile
 24172  12A8  2AB5               	goto	i1l6042
 24173                           
 24174                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24175  12A9  0874               	movf	_eusart1RxHead,w	;volatile
 24176  12AA  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24177  12AB  0086               	movwf	6
 24178  12AC  3001               	movlw	1	; select bank3/4
 24179  12AD  0087               	movwf	7
 24180  12AE  1501               	bsf	1,2
 24181                           
 24182                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 24183  12AF  0144               	movlb	4	; select bank4
 24184  12B0  0867               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+512),w
 24185  12B1  008A               	movwf	10
 24186  12B2  0866               	movf	_EUSART1_OverrunErrorHandler^(0+512),w
 24187  12B3  000A               	callw
 24188  12B4  3192               	pagesel	$
 24189  12B5                     i1l6042:	
 24190                           
 24191                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24192  12B5  0874               	movf	_eusart1RxHead,w	;volatile
 24193  12B6  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24194  12B7  0086               	movwf	6
 24195  12B8  3001               	movlw	1	; select bank3/4
 24196  12B9  0087               	movwf	7
 24197  12BA  0801               	movf	1,w
 24198  12BB  1903               	btfsc	3,2
 24199  12BC  2AC4               	goto	i1l6046
 24200                           
 24201                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 24202  12BD  0144               	movlb	4	; select bank4
 24203  12BE  0865               	movf	(_EUSART1_ErrorHandler+1)^(0+512),w
 24204  12BF  008A               	movwf	10
 24205  12C0  0864               	movf	_EUSART1_ErrorHandler^(0+512),w
 24206  12C1  000A               	callw
 24207  12C2  3192               	pagesel	$
 24208                           
 24209                           ;mcc_generated_files/eusart1.c: 188:     } else {
 24210  12C3  0008               	return
 24211  12C4                     i1l6046:	
 24212                           
 24213                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 24214  12C4  319F  2705         	fcall	_EUSART1_RxDataHandler
 24215  12C6  0008               	return
 24216  12C7                     __end_of_EUSART1_Receive_ISR:	
 24217                           
 24218                           	psect	text98
 24219  1D20                     __ptext98:	
 24220 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24221 ;; Defined at:
 24222 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 24223 ;; Parameters:    Size  Location     Type
 24224 ;;		None
 24225 ;; Auto vars:     Size  Location     Type
 24226 ;;		None
 24227 ;; Return value:  Size  Location     Type
 24228 ;;                  1    wreg      void 
 24229 ;; Registers used:
 24230 ;;		None
 24231 ;; Tracked objects:
 24232 ;;		On entry : 0/0
 24233 ;;		On exit  : 0/0
 24234 ;;		Unchanged: 0/0
 24235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24240 ;;Total ram usage:        0 bytes
 24241 ;; Hardware stack levels used:    1
 24242 ;; This function calls:
 24243 ;;		Nothing
 24244 ;; This function is called by:
 24245 ;;		_EUSART1_Initialize
 24246 ;;		_EUSART1_Receive_ISR
 24247 ;; This function uses a non-reentrant model
 24248 ;;
 24249                           
 24250                           
 24251                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 24252  1D20                     _EUSART1_DefaultOverrunErrorHandler:	
 24253                           
 24254                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 24255                           
 24256                           ;incstack = 0
 24257 ;; hardware stack exceeded
 24258                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 24259  1D20  0142               	movlb	2	; select bank2
 24260  1D21  121D               	bcf	29,4	;volatile
 24261                           
 24262                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 24263  1D22  161D               	bsf	29,4	;volatile
 24264  1D23  0008               	return
 24265  1D24                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 24266                           
 24267                           	psect	text99
 24268  1D0A                     __ptext99:	
 24269 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 24270 ;; Defined at:
 24271 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 24272 ;; Parameters:    Size  Location     Type
 24273 ;;		None
 24274 ;; Auto vars:     Size  Location     Type
 24275 ;;		None
 24276 ;; Return value:  Size  Location     Type
 24277 ;;                  1    wreg      void 
 24278 ;; Registers used:
 24279 ;;		None
 24280 ;; Tracked objects:
 24281 ;;		On entry : 0/0
 24282 ;;		On exit  : 0/0
 24283 ;;		Unchanged: 0/0
 24284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24289 ;;Total ram usage:        0 bytes
 24290 ;; Hardware stack levels used:    1
 24291 ;; This function calls:
 24292 ;;		Nothing
 24293 ;; This function is called by:
 24294 ;;		_EUSART1_Initialize
 24295 ;;		_EUSART1_Receive_ISR
 24296 ;; This function uses a non-reentrant model
 24297 ;;
 24298                           
 24299                           
 24300                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 24301  1D0A                     _EUSART1_DefaultFramingErrorHandler:	
 24302                           
 24303                           ;incstack = 0
 24304 ;; hardware stack exceeded
 24305                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 24306  1D0A  0008               	return
 24307  1D0B                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 24308                           
 24309                           	psect	text100
 24310  1D10                     __ptext100:	
 24311 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 24312 ;; Defined at:
 24313 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 24314 ;; Parameters:    Size  Location     Type
 24315 ;;		None
 24316 ;; Auto vars:     Size  Location     Type
 24317 ;;		None
 24318 ;; Return value:  Size  Location     Type
 24319 ;;                  1    wreg      void 
 24320 ;; Registers used:
 24321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24322 ;; Tracked objects:
 24323 ;;		On entry : 0/0
 24324 ;;		On exit  : 0/0
 24325 ;;		Unchanged: 0/0
 24326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24331 ;;Total ram usage:        0 bytes
 24332 ;; Hardware stack levels used:    1
 24333 ;; Hardware stack levels required when called:    1
 24334 ;; This function calls:
 24335 ;;		_EUSART1_RxDataHandler
 24336 ;; This function is called by:
 24337 ;;		_EUSART1_Initialize
 24338 ;;		_EUSART1_Receive_ISR
 24339 ;; This function uses a non-reentrant model
 24340 ;;
 24341                           
 24342                           
 24343                           ;psect for function _EUSART1_DefaultErrorHandler
 24344  1D10                     _EUSART1_DefaultErrorHandler:	
 24345                           
 24346                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 24347                           
 24348                           ;incstack = 0
 24349 ;; hardware stack exceeded
 24350                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24351  1D10  319F  2705         	fcall	_EUSART1_RxDataHandler
 24352  1D12  0008               	return
 24353  1D13                     __end_of_EUSART1_DefaultErrorHandler:	
 24354                           
 24355                           	psect	text101
 24356  1F05                     __ptext101:	
 24357 ;; *************** function _EUSART1_RxDataHandler *****************
 24358 ;; Defined at:
 24359 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 24360 ;; Parameters:    Size  Location     Type
 24361 ;;		None
 24362 ;; Auto vars:     Size  Location     Type
 24363 ;;		None
 24364 ;; Return value:  Size  Location     Type
 24365 ;;                  1    wreg      void 
 24366 ;; Registers used:
 24367 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24368 ;; Tracked objects:
 24369 ;;		On entry : 0/0
 24370 ;;		On exit  : 0/0
 24371 ;;		Unchanged: 0/0
 24372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24377 ;;Total ram usage:        1 bytes
 24378 ;; Hardware stack levels used:    1
 24379 ;; This function calls:
 24380 ;;		Nothing
 24381 ;; This function is called by:
 24382 ;;		_EUSART1_Receive_ISR
 24383 ;;		_EUSART1_DefaultErrorHandler
 24384 ;; This function uses a non-reentrant model
 24385 ;;
 24386                           
 24387                           
 24388                           ;psect for function _EUSART1_RxDataHandler
 24389  1F05                     _EUSART1_RxDataHandler:	
 24390                           
 24391                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 24392                           
 24393                           ;incstack = 0
 24394 ;; hardware stack exceeded
 24395                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24396  1F05  0142               	movlb	2	; select bank2
 24397  1F06  0819               	movf	25,w	;volatile
 24398  1F07  00F7               	movwf	??_EUSART1_RxDataHandler
 24399  1F08  0874               	movf	_eusart1RxHead,w
 24400  1F09  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 24401  1F0A  0086               	movwf	6
 24402  1F0B  3002               	movlw	2	; select bank4/5
 24403  1F0C  0087               	movwf	7
 24404  1F0D  0877               	movf	??_EUSART1_RxDataHandler,w
 24405  1F0E  0081               	movwf	1
 24406  1F0F  3001               	movlw	1
 24407  1F10  00F7               	movwf	??_EUSART1_RxDataHandler
 24408  1F11  0877               	movf	??_EUSART1_RxDataHandler,w
 24409  1F12  07F4               	addwf	_eusart1RxHead,f	;volatile
 24410                           
 24411                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 24412  1F13  3008               	movlw	8
 24413  1F14  0274               	subwf	_eusart1RxHead,w	;volatile
 24414  1F15  1803               	btfsc	3,0
 24415                           
 24416                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 24417  1F16  01F4               	clrf	_eusart1RxHead	;volatile
 24418                           
 24419                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 24420  1F17  3001               	movlw	1
 24421  1F18  00F7               	movwf	??_EUSART1_RxDataHandler
 24422  1F19  0877               	movf	??_EUSART1_RxDataHandler,w
 24423  1F1A  0141               	movlb	1	; select bank1
 24424  1F1B  07E6               	addwf	_eusart1RxCount^(0+128),f	;volatile
 24425  1F1C  0008               	return
 24426  1F1D                     __end_of_EUSART1_RxDataHandler:	
 24427                           
 24428                           	psect	text102
 24429  1E02                     __ptext102:	
 24430 ;; *************** function _ADCC_ThresholdISR *****************
 24431 ;; Defined at:
 24432 ;;		line 308 in file "mcc_generated_files/adcc.c"
 24433 ;; Parameters:    Size  Location     Type
 24434 ;;		None
 24435 ;; Auto vars:     Size  Location     Type
 24436 ;;		None
 24437 ;; Return value:  Size  Location     Type
 24438 ;;                  1    wreg      void 
 24439 ;; Registers used:
 24440 ;;		wreg, status,2, status,0, pclath, cstack
 24441 ;; Tracked objects:
 24442 ;;		On entry : 0/0
 24443 ;;		On exit  : 0/0
 24444 ;;		Unchanged: 0/0
 24445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24450 ;;Total ram usage:        0 bytes
 24451 ;; Hardware stack levels used:    1
 24452 ;; Hardware stack levels required when called:    1
 24453 ;; This function calls:
 24454 ;;		Absolute function
 24455 ;;		_ADCC_DefaultInterruptHandler
 24456 ;;		_adcThresholdHandler
 24457 ;; This function is called by:
 24458 ;;		_INTERRUPT_InterruptManager
 24459 ;; This function uses a non-reentrant model
 24460 ;;
 24461                           
 24462                           
 24463                           ;psect for function _ADCC_ThresholdISR
 24464  1E02                     _ADCC_ThresholdISR:	
 24465                           
 24466                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 24467                           
 24468                           ;incstack = 0
 24469 ;; hardware stack exceeded
 24470                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 24471  1E02  014E               	movlb	14	; select bank14
 24472  1E03  108D               	bcf	13,1	;volatile
 24473                           
 24474                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 24475  1E04  0142               	movlb	2	; select bank2
 24476  1E05  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24477  1E06  046D               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24478  1E07  1903               	btfsc	3,2
 24479  1E08  0008               	return
 24480                           
 24481                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 24482  1E09  086D               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24483  1E0A  008A               	movwf	10
 24484  1E0B  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24485  1E0C  000A               	callw
 24486  1E0D  319E               	pagesel	$
 24487  1E0E  0008               	return
 24488  1E0F                     __end_of_ADCC_ThresholdISR:	
 24489                           
 24490                           	psect	text103
 24491  1D09                     __ptext103:	
 24492 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24493 ;; Defined at:
 24494 ;;		line 320 in file "mcc_generated_files/adcc.c"
 24495 ;; Parameters:    Size  Location     Type
 24496 ;;		None
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;		None
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1    wreg      void 
 24501 ;; Registers used:
 24502 ;;		None
 24503 ;; Tracked objects:
 24504 ;;		On entry : 0/0
 24505 ;;		On exit  : 0/0
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24512 ;;Total ram usage:        0 bytes
 24513 ;; Hardware stack levels used:    1
 24514 ;; This function calls:
 24515 ;;		Nothing
 24516 ;; This function is called by:
 24517 ;;		_ADCC_Initialize
 24518 ;;		_ADCC_ThresholdISR
 24519 ;; This function uses a non-reentrant model
 24520 ;;
 24521                           
 24522                           
 24523                           ;psect for function _ADCC_DefaultInterruptHandler
 24524  1D09                     _ADCC_DefaultInterruptHandler:	
 24525                           
 24526                           ;incstack = 0
 24527 ;; hardware stack exceeded
 24528                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 24529  1D09  0008               	return
 24530  1D0A                     __end_of_ADCC_DefaultInterruptHandler:	
 24531                           
 24532                           	psect	text104
 24533  1D1C                     __ptext104:	
 24534 ;; *************** function _adcThresholdHandler *****************
 24535 ;; Defined at:
 24536 ;;		line 35 in file "beat.c"
 24537 ;; Parameters:    Size  Location     Type
 24538 ;;		None
 24539 ;; Auto vars:     Size  Location     Type
 24540 ;;		None
 24541 ;; Return value:  Size  Location     Type
 24542 ;;                  1    wreg      void 
 24543 ;; Registers used:
 24544 ;;		None
 24545 ;; Tracked objects:
 24546 ;;		On entry : 0/0
 24547 ;;		On exit  : 0/0
 24548 ;;		Unchanged: 0/0
 24549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24554 ;;Total ram usage:        0 bytes
 24555 ;; Hardware stack levels used:    1
 24556 ;; This function calls:
 24557 ;;		Nothing
 24558 ;; This function is called by:
 24559 ;;		_BEAT_init
 24560 ;;		_ADCC_ThresholdISR
 24561 ;; This function uses a non-reentrant model
 24562 ;;
 24563                           
 24564                           
 24565                           ;psect for function _adcThresholdHandler
 24566  1D1C                     _adcThresholdHandler:	
 24567                           
 24568                           ;beat.c: 36:     thresholdExceeded = 1;
 24569                           
 24570                           ;incstack = 0
 24571 ;; hardware stack exceeded
 24572                           ; Regs used in _adcThresholdHandler: []
 24573  1D1C  0141               	movlb	1	; select bank1
 24574  1D1D  01D5               	clrf	_thresholdExceeded^(0+128)
 24575  1D1E  0AD5               	incf	_thresholdExceeded^(0+128),f
 24576  1D1F  0008               	return
 24577  1D20                     __end_of_adcThresholdHandler:	
 24578  007E                     btemp	set	126	;btemp
 24579  007E                     int$flags	set	126
 24580  007E                     wtemp0	set	126


Data Sizes:
    Strings     145
    Constant    96
    Data        14
    BSS         359
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      79
    BANK2            80      6      80
    BANK3            80      0      76
    BANK4            80      0      72
    BANK5            80      0      50
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    previousTask	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), STR_16(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), STR_16(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[6]), STR_23(CODE[7]), STR_22(CODE[8]), STR_21(CODE[9]), 
		 -> STR_20(CODE[10]), STR_19(CODE[9]), STR_18(CODE[8]), STR_17(CODE[7]), 
		 -> STR_15(CODE[2]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK6[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3630_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[6]), STR_23(CODE[7]), STR_22(CODE[8]), STR_21(CODE[9]), 
		 -> STR_20(CODE[10]), STR_19(CODE[9]), STR_18(CODE[8]), STR_17(CODE[7]), 
		 -> STR_15(CODE[2]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[6]), STR_23(CODE[7]), STR_22(CODE[8]), STR_21(CODE[9]), 
		 -> STR_20(CODE[10]), STR_19(CODE[9]), STR_18(CODE[8]), STR_17(CODE[7]), 
		 -> STR_15(CODE[2]), STR_14(CODE[5]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK6[32]), 

    currentMenu.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    currentMenu.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    currentMenu.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    currentMenu.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    currentMenu.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    currentMenu	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatCont(BANK4[10]), 
		 -> beatStrobeTask(BANK5[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), dmx_task(BANK4[10]), 
		 -> manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixedTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixedTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatContTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatContTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatContTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFadeTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFadeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobeTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualRed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualRed.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualRed.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationType.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationType.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationType.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatCont.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFade.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx_task.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx_task.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manual.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manual.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animation.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animation.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beat.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beat.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manualRed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animationType.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixedTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixedTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatContTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatContTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatContTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFadeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFadeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx_task.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx_task.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx_task.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    manual.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    animation.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    beat.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    S2244menuItem$task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    S2244menuItem$parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    S2244menuItem$config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    dmx.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK5[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), 
		 -> NULL(NULL[0]), 

    S2244menuItem$prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    S2244menuItem$nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK5[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    S1997$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _TM1650_enable->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_task_BEAT_STROBE
    _DMX_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _CONTROL_DMX->_printf
    _TM1650_fastPrintNum_3digit->_writeData
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_LED_task_BEAT_STROBE
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_fastPrintNum_2digit->_writeData
    _writeData->___awmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___awmod->___awdiv
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _CONTROLLER_task->_CONTROL_BEAT
    _LED_task_MANUAL->_LED_setColor
    _CONTROL_DMX->_printf
    _CONTROL_BEAT->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  269495
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   26669
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    4420
                                             22 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   99450
                                             35 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                    _LED_task_MANUAL
                   _beatColorCreator
                          _getIsHold
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsHold                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   15234
                                             30 BANK1      5     5      0
                                              0 BANK2      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    7658
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    7447
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      2     2      0  130289
                                             34 BANK1      2     2      0
                  _BUTTONS_isClicked
                       _CONTROL_BEAT *
                        _CONTROL_DMX *
                 _LED_task_ANIMATION *
                    _LED_task_MANUAL *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LED_task_MANUAL                                      0     0      0   15024
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   30020
                                             10 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                     _DMX_getAddress
         _TM1650_fastPrintNum_3digit
                        _address_dec
                        _address_inc
                             _printf
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_3digit                           3     1      2    7416
                                             22 BANK0      3     1      2
                     _DMX_getAddress (ARG)
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1492
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     355
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         2     2      0   62790
                                             32 BANK1      2     2      0
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
         _TM1650_fastPrintNum_2digit
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   22249
                                             75 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   20098
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   19663
                                             58 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   13382
                                             52 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   13138
                                             43 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     940
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    6001
                                             35 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    5609
                                             27 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    4665
                                             25 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    4541
                                             22 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_2digit                           4     4      0    5900
                                             22 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    4389
                                             16 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     793
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 3     3      0   34641
                                             79 BANK0      1     1      0
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (2) _beatColorCreator                                    14    10      4   19527
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (3) _beatBrightnessCalculation                           10     6      4   11242
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   15024
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1211
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1331
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5380
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2    1194
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3272
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     328
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     328
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     328
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     328
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     880
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1718
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1321
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CONTROL_BEAT *
       _LED_task_BEAT_FADE
       _LED_task_BEAT_MIXED
       _LED_task_BEAT_STROBE
         _BEAT_detected
         _CLOCK_getTime
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
         _beatColorCreator
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_DMX *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _DMX_getAddress
       _TM1650_fastPrintNum_3digit
         _DMX_getAddress (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         _writeData (ARG)
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _address_dec
       _address_inc
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _LED_task_ANIMATION *
     _LED_task_MANUAL *
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _printf *
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _LED_task_MANUAL
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _beatColorCreator
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _beatBrightnessCalculation
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getIsHold
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     203       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4C      12       95.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      48      14       90.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      32      16       62.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      40      18       80.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     203      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 18:11:49 2019

                       __end_of_LED_task_MANUAL 1DEA                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                    ___awdiv@sign 0026  
                                            _up 00DF                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D2                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1D1C  
                                           l911 0E29                                             l913 0E97  
                                           _PR2 028D                                             _bpm 0130  
                                           _dmx 01DA                                             _pad 13D5  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 002F  
                               _TMR2_Initialize 1E1C                                 _PWM4_Initialize 1DD3  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 0057  
                            _LED_task_BEAT_FADE 1D0C                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                 __CFG_BBEN$OFF 0000                             _animationBrightness 00EB  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l2101 05EE                                            l2102 0606  
                                          l2104 0613                                            l2210 1048  
                                          l2132 02C4                                            l1422 0A6E  
                                          l2080 04E7                                            l2171 1691  
                                          l2172 169B                                            l2164 167D  
                                          l2158 1647                                            l1924 152B  
                          _ADCC_StartConversion 1D57                                            l1695 13ED  
                                          l1698 140D                                            l7102 1088  
                                          ?_pad 004B                                            l7104 108A  
                                          l7120 12F4                                            l8010 15DE  
                                          l7130 1F2E                                            l7116 12D1  
                                          l7140 10C6                                            l7070 1463  
                                          l7150 13EB                                            l7056 1D24  
                                          l7128 1F22                                            l7160 1419  
                                          l7074 146A                                            l7146 13E3  
                                          l7076 1470                                            l7092 1F82  
                                          l7156 13EF                                            l7086 1131  
                                          l7182 11A3                                            l9112 04DF  
                                          l9040 14EB                                            l7184 11AC  
                                          l8304 0A9A                                            l9122 0506  
                                          l8180 1EB1                                            l9108 04DC  
                                          l9028 1042                                            l9060 1519  
                                          l9044 14F4                                            l9310 022C  
                                          l9230 00C1                                            l9070 1538  
                                          l9062 1527                                            l9208 060F  
                                          l9128 0512                                            l9312 0243  
                                          l9232 00C9                                            l7800 137E  
                                          l9154 0572                                            l9322 025C  
                                          l9250 00EC                                            l7730 138E  
                                          l9180 05AB                                            l9172 057D  
                                          l9148 0559                                            l9156 053B  
                                          l9092 04BB                                            l9332 0285  
                                          l9228 00BF                                            l7644 17CC  
                                          l7716 116E                                            l7822 1283  
                                          l7814 1265                                            l9406 1FD9  
                                          l9422 1FF7                                            l9174 0594  
                                          l9158 0577                                            l9094 04C3  
                                          l9342 02B1                                            l9318 025A  
                                          l9246 00E2                                            l7638 17AB  
                                          l7654 17DD                                            l7718 118B  
                                          l7902 1E43                                            l8294 1EFE  
                                          l7816 1271                                            l9184 05AD  
                                          l9088 04B8                                            l9336 029A  
                                          l9248 00E4                                            l9360 163F  
                                          l9520 0D26                                            l7736 1399  
                                          l7648 17D2                                            l7840 114B  
                                          l7826 128C                                            l8570 0E65  
                                          l8562 0E41                                            l7674 1D79  
                                          l9194 05D6                                            l9258 00FA  
                                          l9370 165A                                            l7762 13D0  
                                          l7754 13BF                                            l7746 13A1  
                                          l8660 0B5F                                            l8556 0E23  
                                          l8548 0DE2                                            l9380 168F  
                                          l9372 166A                                            l9540 0D2D  
                                          l7748 13AD                                            l7844 1157  
                                          l8574 0E78                                            l9438 1F9D  
                                          l9454 1FBB                                            l9382 1682  
                                          l9366 1656                                            l9526 0D69  
                                          l7758 13C8                                            l7774 1348  
                                          l7870 1E37                                            l7838 113F  
                                          l8680 0B9A                                            l8664 0B66  
                                          l9480 08A1                                            l9552 0D35  
                                          l7792 136D                                            l7848 1160  
                                          l9632 0982                                            l9616 096C  
                                          l8682 0BAD                                            l9394 16B6  
                                          l9482 08A2                                            l9474 0878  
                                          l9570 0D3B                                            l9546 0D2F  
                                          l7786 1355                                            l7778 134F  
                                          l7890 16EA                                            l9642 099A  
                                          l9618 0937                                            l9492 08F3  
                                          l9476 0879                                            l7788 1361  
                                          l7796 1376                                            l9628 0974  
                                          l9494 08F4                                            l9486 08CA  
                                          l9582 0D44                                            l9558 0D38  
                                          l9638 0994                                            l9662 1494  
                                          l9654 147E                                            l9910 0C7D  
                                          l9902 0C60                                            l8696 0BE0  
                                          l9488 08CB                                            l9576 0D3F  
                                          l7896 1E53                                            l9672 14A3  
                                          l9920 0CA0                                            l9912 0C84  
                                          l9594 0D4F                                            l9690 14DF  
                                          l9682 14D1                                            l9666 1498  
                                          l9658 1489                                            l9674 14BF  
                                          l9922 0CA7                                            l9914 0C8B  
                                          l9588 0D47                                            l9684 14D6  
                                          l9924 0CAE                                            l9916 0C92  
                                          l9908 0C76                                            l9940 09B8  
                                ?_TM1650_enable 0077                                            l9918 0C99  
                                          l9950 09EF                                            STR_1 2055  
                                          l9928 0CB9                                            l9952 09F2  
                                          l9944 09D2                                            STR_2 2073  
                                          STR_3 2061                                            l9890 0C38  
                                          l9970 0A49                                            l9962 0A29  
                                          l9946 09D5                                            l9938 09B5  
                                          STR_4 205B                                            STR_5 2049  
                                          l9964 0A2C                                            l9956 0A0C  
                                          STR_6 206D                                            STR_7 204F  
                                          l9878 0C0C                                            l9958 0A0F  
                                          l9974 0A4C                                            STR_8 2067  
                                          STR_9 208E                                            l9896 0C4B  
                                          l9968 0A46                         __end_of_PWM1_Initialize 1DBD  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _T2PR 028D  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            u6315 12F2  
                                          _PMD7 079D                                            u6365 13F9  
                                          u7505 13C0                                            u9205 01F5  
                                          u8175 0DE5                                            u9215 020C  
                                          u8184 0E04                                            u8185 0E03  
                                          u9065 05C4                                            u9225 021B  
                                          u7465 13A4                                            u7705 1142  
                                          u7635 1268                                            u9075 05DF  
                                          u9235 022F                                            u8445 0BC1  
                                          u9085 05F8                                            u9325 0273  
                                          u7485 13AE                                            u7565 1358  
                                          u7725 1151                      ?_beatBrightnessCalculation 00A0  
                                          u7655 1272                                            u9335 028E  
                                          u9255 0238                                            u9415 1677  
                                          u7495 13B8                                            u7735 1158  
                                          u7665 127C                                            u9345 02A4  
                                          u9185 0170                                            u7585 1367  
                                          u7675 1284                                            u8395 0B48  
                                          u9195 019F                                            u9435 1689  
                                          u7595 136E                                            u9525 1FD5  
                                          u8725 14FD                                            u9615 1FB7  
                                          u8905 0543                                            u9555 1FF3  
                                          u8915 054A                                            u8755 151A  
                                          u9475 16A3                                            u9395 1663  
                                          u8935 0553                                            u8695 1049  
                                          u9585 1F99                                            u8945 0567  
                                          u8785 152F                                            u9845 0931  
                                          u8975 0580                                            _TMR2 028C  
                                          u8995 0589                                            u9875 094B  
                                          u9885 0964                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                            _LED_task_ANIMATION 1D0E                                   __CFG_FCMEN$ON 0000  
                           ?_LED_task_BEAT_FADE 0077                                   ?_BUTTONS_init 0077  
                                 ?_BUTTONS_task 0077                                            _beat 014F  
                                          _dbuf 0320                            ?_adcThresholdHandler 0077  
                                          _ctoa 1194                                            _main 12FE  
                                          _down 00DE                                            _init 1017  
                                          _menu 00E0                                            _prec 0124  
                                          _nout 0120                                            pad@i 004F  
                                          pad@p 004C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 0051  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1E8C  
                           ?_LED_task_ANIMATION 0077                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 000F  
                          __size_of_address_inc 0010                  I2C1_MasterWriteTRBBuild@length 0021  
                           _LED_task_BEAT_MIXED 1D0D                                  _BUTTONS_isHeld 1E2A  
                                         ??_pad 004E                         __end_of_PWM2_Initialize 1DC8  
                       __end_of_TMR0_Initialize 1EC7                                      _i2c1_state 00E5  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1DA8                                           l10006 1330  
                                         l10134 0A57                                           l10136 0CC6  
                                         l10138 14B1                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 01A0                                __end_of_LED_init 1D45  
                                 ___fltol@sign1 006B                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0054  
                              __end_of_LED_task 0A6F                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 0618                                           _ADREF 0116  
                               __end_of___awdiv 13D5                               __end_of_I2C1_Stop 1F4F  
                                         STR_10 2082                                           STR_11 208A  
                                         STR_12 2086                                           STR_20 2000  
                                         STR_13 207E                                           STR_21 200A  
                                         STR_14 2079                                           STR_22 2025  
                                         STR_15 2047                                           STR_23 2035  
                                         STR_24 2043                                           STR_16 201C  
                                         STR_17 203C                                   __CFG_WDTE$OFF 0000  
                                         STR_18 202D                                           STR_19 2013  
                               __end_of___awmod 1383                                __end_of_DMX_init 1E9F  
                                         _ADRPT 009A                                 __end_of___flmul 02D1  
                               __end_of___fltol 1547                                           u10137 1307  
                               ___awdiv@divisor 0020                                           _T2CON 028E  
                                         _LATC5 00D5                                           _T2HLT 028F  
                               __end_of___lwdiv 1291                      _ADCC_ADTI_InterruptHandler 016C  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l430 0017                                           i1l432 001E  
                               __end_of___lwmod 1165                                           i1l434 0025  
                                         i1l427 000E                                           i1l439 002E  
                                         i1l552 0EF0                                           i1l553 0EF1  
                                         i1l547 0EC2                                           i1l581 0FC0  
                                         i1l573 0F7C                                           i1l558 0F13  
                                         i1l559 0F1F                                           i1l576 0F8B  
                                         i1l577 0F99                                           i1l569 0F5C  
                                         i1l588 1E66                                 ___awdiv@counter 0025  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 005A  
                            _PWM4_LoadDutyValue 1FE2                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                __end_of_LED_task_BEAT_CONTINUOUS 1D10  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1D16                            ??_LED_task_ANIMATION 0020  
                     ?_TMR0_SetInterruptHandler 0020                                 __end_of_getMode 1D1C  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 1E1C  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 0162  
                          ?_LED_task_BEAT_MIXED 0077                                           _flags 0126  
                                         _enter 00DD                           ?_ADCC_StartConversion 0077  
                                         _fputc 12C7                                           _fputs 10C2  
                           ?_PWM4_LoadDutyValue 00A0                       __size_of_beatColorCreator 00AF  
                                         pad@fp 0053                                           _width 0122  
                                         ctoa@c 0054                                           _putch 107A  
                                         ctoa@w 0057                         __end_of_PWM3_Initialize 1DD3  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0077  
                             __end_of_BEAT_init 1017                               __end_of_BEAT_task 0C03  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1D0B     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0077             ?_EUSART1_DefaultFramingErrorHandler 0077  
            _EUSART1_DefaultFramingErrorHandler 1D0A                                    _beatFadeTask 02B4  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 1E39  
                               __initialization 0032                            TM1650_setDigit@digit 0038  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                              ?_LED_task_MANUAL 0077                                    __end_of_ctoa 11C4  
                    __end_of_EUSART1_Initialize 125C                                    __end_of_main 133D  
                                  __end_of_init 1037                                 _CONTROLLER_init 02D1  
                               _CONTROLLER_task 0C03                            ??_PWM4_LoadDutyValue 006D  
                                 ?_LED_setColor 00B6                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                                   ?_LED_task_DMX 0077  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1D69  
                                  _beatContTask 02AA                         __end_of_PWM4_Initialize 1DDE  
                       __end_of_TMR2_Initialize 1E2A                     ?_INTERRUPT_InterruptManager 0077  
                          _LED_task_BEAT_STROBE 0CE1                                     _i2c1_object 00C5  
                                        ??_ctoa 0056                                          ??_main 016A  
                                        ??_init 0023                            __end_of_CONTROL_BEAT 14E1  
                             __end_of_GPIO_init 1E7A                           ??_LED_task_BEAT_MIXED 0020  
                               ??_TM1650_enable 0036                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 00B7                                          ?_fputc 003B  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0043                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                ___awdiv@dividend 0022  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0077                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0077                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l6112 0F38                                          i1l6042 12B5  
                                        i1l6036 12A6                                          i1l6132 0F51  
                                        i1l6046 12C4                                          i1l6080 0EE3  
                                __CFG_WDTCCS$SC 0000                                          i1l6170 0FA7  
                                        i1l6154 0F7F                                          i1l6146 0F6A  
                                        i1l6092 0EFD                                          i1l6084 0EEA  
                                        i1l6182 0FC4                                          i1l6166 0FA0  
                                        i1l6184 0FC7                                          i1l6192 0FD3  
                                        i1l6186 0FCB                                          i1l6098 0F0D  
                                        i1l6630 11EA                                          i1l6622 11C9  
                                        i1l6634 11F2                                          i1l5834 1F4C  
                                        _OSCFRQ 0893                          __size_of_DMX_interrupt 0031  
                                        _TX1REG 011A                                          _TX1STA 011E  
                              __end_of___xxtofl 16BF                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0036  
                               ?_BUTTONS_isHeld 0077                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0069  
                                _p_i2c1_current 0071                                  ??_LED_setColor 00BA  
                   __size_of_PWM3_LoadDutyValue 001E                                  ??_LED_task_DMX 00BE  
                   __end_of_TM1650_fastPrintNum 0B31                               _ADCC_ThresholdISR 1E02  
                                     ??___fldiv 0036                                       ??___awdiv 0024  
                                __CFG_STVREN$ON 0000                                       ??___awmod 002D  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                    ??_TM1650_fastPrintNum_2digit 0036  
                                     ??___lwmod 002C                    ??_TM1650_fastPrintNum_3digit 0038  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                                        _manual 0145                                ?_TMR0_Initialize 0077  
                              ?_PWM2_Initialize 0077                              ?_ADCC_ThresholdISR 0077  
                         ?_LED_task_BEAT_STROBE 0077                                       ?_I2C1_ISR 0077  
                              ___awdiv@quotient 0027                                 ___awmod@divisor 0029  
                               ___awmod@counter 002E                                       ??_getMode 0020  
                                        _printf 1EDB                          __size_of_BEAT_detected 0009  
                                        pad@buf 004B                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0059  
                                _lastActiveTime 0134                                          _strlen 1F1D  
                          __size_of_TM1650_init 0014                   TM1650_fastPrintNum_2digit@num 0039  
                               _ADCC_Initialize 10E8                                          fputc@c 003B  
                                _PMD_Initialize 1DA8                                          fputs@c 0047  
                                  ??_CLOCK_init 0022                                          fputs@i 0048  
                                        fputs@s 004A                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0077                   TM1650_fastPrintNum_3digit@num 0036  
                        ??_ADCC_StartConversion 0020                                          putch@n 003A  
                              __end_of_vfprintf 1194            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1D4E                   I2C1_MasterWriteTRBBuild@pdata 0020  
                      _LED_task_BEAT_CONTINUOUS 1D0F                                   _tm1650_status 013E  
                               _eusart1RxBuffer 0220                         beatColorCreator@inGreen 00A9  
                              ?_PWM3_Initialize 0077                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 109E  
                                  ___xxtofl@val 0020                         beatColorCreator@inWhite 00AB  
                       __end_of__initialization 00A1                         __end_of_CONTROLLER_init 049E  
                       __end_of_CONTROLLER_task 0CE1                              ?_SYSTEM_Initialize 0077  
           __size_of_TM1650_fastPrintNum_2digit 0074             __size_of_TM1650_fastPrintNum_3digit 0099  
                    __end_of_PWM2_LoadDutyValue 1FC4                                       ?_LED_init 0077  
                                     ?_LED_task 0077                                      ___fltol@f1 0062  
                                     ?_DMX_init 0077                                  _i2c1_trb_count 00E4  
                   PWM1_LoadDutyValue@dutyValue 00A0                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 1E0F                         __size_of_DMX_getAddress 0003  
                 __end_of_EUSART1_RxDataHandler 1F1D                           _I2C1_FunctionComplete 1E58  
                          _I2C1_BusCollisionISR 1D13                                  __pcstackCOMMON 0077  
                            __end_of_CLOCK_init 1D3D                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 07F8                                    __pidataBANK2 1D2F  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0077  
                                 __end_of_fputc 12FE                                   __end_of_fputs 10E8  
                                 __end_of_putch 109E                              _PWM1_LoadDutyValue 1F88  
                                    ??_I2C1_ISR 0079                                ?_TMR2_Initialize 0077  
                              ?_PWM4_Initialize 0077                                   _DMX_interrupt 11C4  
                          __end_of_BUTTONS_init 084E                          __end_of_PMD_Initialize 1DB2  
                          __end_of_BUTTONS_task 0EAE                     PWM4_LoadDutyValue@dutyValue 00A0  
                            __size_of_getIsHold 0002                             ?_PWM1_LoadDutyValue 00A0  
                                    _beatStrobe 01C6                     __end_of_EUSART1_Receive_ISR 12C7  
                             _thresholdExceeded 00D5                     ADCC_StartConversion@channel 0020  
                             LED_setColor@input 00B6                                         ??_fputc 003E  
                     __end_of_SYSTEM_Initialize 10C2                                         ??_fputs 0044  
                              _beatColorCreator 084E                                         ??_putch 0039  
                                 _eusart1RxHead 0074                                   _eusart1RxTail 0073  
                                    __pbssBANK1 00C5                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                      __pbssBANK4 0220  
                                    __pbssBANK5 02A0                                      __pbssBANK6 0320  
               ??_EUSART1_SetRxInterruptHandler 0022                     ??_beatBrightnessCalculation 00A4  
                                 _BEAT_detected 1D72                                   _beatMixedTask 02A0  
                                    ??_LED_init 0020                                      ??_LED_task 00C3  
                                    ??_DMX_init 0039                            ??_PWM1_LoadDutyValue 006D  
                             __end_of__Umul8_16 1057                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 1D8D                                      __pmaintext 12FE  
              __end_of_TMR0_SetInterruptHandler 1D72                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0034  
                       __end_of_ADCC_Initialize 110E                          ??_LED_task_BEAT_STROBE 00BE  
                                    __pintentry 0004                                 _I2C1_Initialize 1F4F  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                           __size_of_CONTROL_BEAT 0064  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0077  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1D4E  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1D45  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00A0  
                               ?_PMD_Initialize 0077                           _animationModeSelected 00EC  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 1D96  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1D8D  
                                       i1l10140 0FDC                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 1F35                                      _arrayIndex 012A  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 077B                               _colorModeSelected 013F  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1D29  
                          __end_of_LED_task_DMX 15B5                                  ?_BEAT_detected 0077  
                 I2C1_MasterTRBInsert@ptrb_list 0020                              __size_of_writeData 001D  
                             __end_of_getIsHold 0004                                   ??_address_dec 0020  
                              ?_CONTROLLER_init 0077                                   ??_address_inc 0020  
                              ?_CONTROLLER_task 0077                                      _enterState 00D9  
                               BUTTONS_task@btn 0028                                    _CONTROL_BEAT 147D  
                        ?_I2C1_FunctionComplete 0077                                       _BEAT_init 1000  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0B31  
                    __size_of_ADCC_ThresholdISR 000D                                      _manualBlue 0232  
                            _p_i2c1_trb_current 0072              __end_of_TM1650_fastPrintNum_2digit 1629  
                    _TM1650_fastPrintNum_2digit 15B5              __end_of_TM1650_fastPrintNum_3digit 1758  
                    _TM1650_fastPrintNum_3digit 16BF                                         ___fldiv 049E  
                                       ___awdiv 1383                            ?_CLOCK_timerCallback 0077  
                                       ___awmod 133D                                         ___flmul 00A5  
                                       ___fltol 14E1                                         ___lwdiv 125C  
                                       ___lwmod 1138                                       ?_vfprintf 0063  
                     _beatBrightnessCalculation 077B                                         _address 00E9  
                    _animationBrightnessControl 0070                     __size_of_LED_task_BEAT_FADE 0001  
                                       _getMode 1D19                                         __ptext1 1EC7  
                                       __ptext2 1EF0                                         __ptext3 109E  
                                       __ptext4 1E1C                                         __ptext5 1EB3  
                                       __ptext6 1DD3                                         __ptext7 1DC8  
                                       __ptext8 1DBD                                         __ptext9 1DB2  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 012E                           _OSCILLATOR_Initialize 1D9F  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0160                                         _buttons 0340  
                                    ??___xxtofl 0024                                ___awmod@dividend 002B  
                            _EUSART1_Initialize 1228                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 0001                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 1D20                                         _upState 00DC  
                 ??_EUSART1_DefaultErrorHandler 0078                                         _startup 00ED  
                    __size_of_SYSTEM_Initialize 0024                   LED_task_BEAT_STROBE@beatState 006F  
                          I2C1_ISR@pi2c_buf_ptr 00E3                                         clrloop0 1DEB  
                              _currentSelection 00D8                            end_of_initialization 00A1  
                                     _T2RSTbits 0291                                       _GPIO_init 1E69  
                           ?_EUSART1_Initialize 0077                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003D                                         init_ram 1DF6  
                   _EUSART1_OverrunErrorHandler 0266                                         fputs@fp 0043  
                                       initloop 1DF7                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 1F6B                                  _DMX_getAddress 1D16  
         __end_of_EUSART1_SetRxInterruptHandler 1D84          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1D7B                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                   beatBrightnessCalculation@temp 006D  
                             __end_of_vfpfcnvrt 1800                           __size_of_BUTTONS_init 004E  
                         __size_of_BUTTONS_task 00EE                           ??_CLOCK_timerCallback 0077  
                               ??_DMX_interrupt 0077                             __end_of_address_dec 1E48  
                   __size_of_PWM4_LoadDutyValue 001E                             __end_of_address_inc 1E58  
                              ?_ADCC_Initialize 0077                                      ??_vfprintf 0066  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                      _TMR0_SetInterruptHandler 1D69                     __end_of_LED_task_BEAT_MIXED 1D0E  
                    ??_LED_task_BEAT_CONTINUOUS 0020                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 0152                        __size_of_LED_task_MANUAL 000C  
                             __end_of_writeData 1F88                         ?_ADCC_SetUpperThreshold 0020  
                                 ??_CONTROL_DMX 00AA                                   ___xxtofl@sign 0028  
                                     _TRISAbits 0012                                       _TRISCbits 0014  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1F05  
             I2C1_ISR@i2c_10bit_address_restart 00E1                                      ?_GPIO_init 0077  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0058  
                                  _BUTTONS_init 0800                                    _BUTTONS_task 0DC0  
                        __end_of_DMX_getAddress 1D19                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 1FE2            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_init 0008  
                             __size_of_LED_task 00BB                               __size_of_DMX_init 0013  
                      __end_of_beatColorCreator 08FD                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006F                                     vfpfcnvrt@ap 005B  
                                   vfpfcnvrt@fp 0062                         I2C1_MasterWrite@trBlock 0159  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 1FA6                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 1D57  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 1EF0  
                         __size_of_LED_setColor 0163                                  __end_of_strlen 1F35  
                                  _lastDetected 00D4                           __size_of_LED_task_DMX 006E  
                           start_initialization 0032                                    _enterPressed 0141  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 00A0  
               __size_of_PIN_MANAGER_Initialize 0033                             TM1650_setDigit@data 0036  
                                   __end_of_pad 1428   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                                _beatBrightness 00EE                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 1E9F                             __end_of_CONTROL_DMX 09B4  
                       _animationBrightnessCtrl 01B2                                 ?_DMX_getAddress 0077  
                            ?_BUTTONS_isClicked 0077                                     _address_dec 1E39  
                                   _address_inc 1E48                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 006D  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0063  
                   PWM2_LoadDutyValue@dutyValue 00A0                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1F05  
                                  _LED_setColor 0618                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1037                                     __pdataBANK1 00E7  
                                   __pdataBANK2 0160                                    _LED_task_DMX 1547  
                                 _CLOCK_getTime 1D60                                        ??_printf 006B  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00E6                          beatColorCreator@inBlue 00AA  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 1EDB  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 01EA  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK2 0166  
            __size_of_beatBrightnessCalculation 007D                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 015D  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 1EB3  
                     beatColorCreator@tempColor 00B2                               ??_LED_task_MANUAL 006F  
                                     _beatMixed 02C8                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 0036  
                                  _menuSelected 0143                                    _currentState 00CE  
                                     _charTable 1800                           _TMR0_InterruptHandler 016E  
                                     __pnvBANK2 016C                                       __pnvBANK3 01E8  
                                     __pnvBANK4 0264                     __size_of_PWM1_LoadDutyValue 001E  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 11F5  
                                     _getIsHold 0002                                       _animation 01D0  
                   ?_TM1650_fastPrintNum_2digit 0077                                        ?___fldiv 002E  
                   ?_TM1650_fastPrintNum_3digit 0036                                        ?___awdiv 0020  
                                     __ptext100 1D10                                       __ptext101 1F05  
                                     __ptext102 1E02                                       __ptext103 1D09  
                                     __ptext104 1D1C                                        ?___awmod 0029  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0EAE                   __size_of_LED_task_BEAT_STROBE 00DF  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 007E  
                               writeData@status 0035                                        ?_getMode 0077  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 110E  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 147D  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1D24     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 1D20                            _EUSART1_ErrorHandler 0264  
                                     _downState 00DB                                     _CONTROL_DMX 08FD  
                       _EUSART1_SetErrorHandler 1D84                                       _manualRed 01A8  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
             __end_of_beatBrightnessCalculation 07F8                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                       _menuState 00DA  
                                __size_of_fputs 0026                                  __size_of_putch 0024  
      __end_of_I2C1_WaitForLastPacketToComplete 1D29       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0077  
              _I2C1_WaitForLastPacketToComplete 1D24                          I2C1_MasterRead@trBlock 01E4  
                             ??_TMR0_Initialize 0022                               ??_PWM2_Initialize 0020  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 1DEA                                        _PIE0bits 0716  
                                      _LED_init 1D3D                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 09B4  
                                      _DMX_init 1E8C             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E7                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                                    ?_getIsHold 0077                               __CFG_BBSIZE$BB512 0000  
                                 _animationType 01BC                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 1E0F  
                    __end_of_LED_task_BEAT_FADE 1D0D                                        _SSP1STAT 018F  
                                _beatStrobeTask 02BE                        __size_of_CONTROLLER_init 01CD  
                      __size_of_CONTROLLER_task 00DE                                     _TM1650_init 1EC7  
                                     _threshold 0164                                       _vfpfcnvrt 1758  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 013C  
                    __end_of_LED_task_ANIMATION 1D0F                              DMX_interrupt@dummy 007D  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 1F6B                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 0061                                     _lastIncTime 00D0  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1D2F  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0A6F  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 2000  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0065  
                                    vfprintf@fp 0068                                     _manualColor 00CA  
                                   _manualGreen 023C                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00E2                                     _manualWhite 0228  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                                __size_of___awdiv 0052  
                             ?_beatColorCreator 00A9                           beatColorCreator@inRed 00AD  
                              __size_of___awmod 0046                                __size_of___flmul 022C  
                              __size_of___fltol 0066                           __end_of_DMX_interrupt 11F5  
                   __size_of_EUSART1_Initialize 0034                                      ?_vfpfcnvrt 005A  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
                         _beatColorCreator$4107 00AE                __end_of_I2C1_MasterWriteTRBBuild 107A  
                            ??_beatColorCreator 006E                                        _beatFade 0250  
                            _PWM3_LoadDutyValue 1FC4                                        _beatCont 0246  
                                    _ANSELAbits 1F38                                        _beatHold 0140  
                                    _ANSELCbits 1F4E                                __size_of_getMode 0003  
                          ?_TM1650_fastPrintNum 0036                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0036  
           __end_of_EUSART1_DefaultErrorHandler 1D13                     _EUSART1_DefaultErrorHandler 1D10  
                                   _currentMenu 00D2                                     _currentTime 0138  
                                    _CLOCK_init 1D35                                        ___xxtofl 1629  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 0142                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0075                                 ___lwdiv@counter 0025  
                                      _detected 00D6                                      ?_writeData 0030  
                                      __ptext10 1DA8                                        __ptext11 11F5  
                                      __ptext20 1D19                                        __ptext12 1D9F  
                                      __ptext21 0002                                        __ptext13 1F4F  
                                      __ptext30 1D0E                                        __ptext22 1547  
                                      __ptext14 1228                                        __ptext31 08FD  
                                      __ptext23 1D0F                                        __ptext15 1D96  
                                      __ptext40 1165                                        __ptext32 1DDE  
                                      __ptext24 1D3D                                        __ptext16 1D8D  
                                      __ptext41 1758                                        __ptext33 1E48  
                                      __ptext25 1E8C                                        __ptext17 1D84  
                                      __ptext50 1F6B                                        __ptext42 1194  
                                      __ptext34 1E39                                        __ptext26 0A6F  
                                      __ptext18 10E8                                        __ptext51 110E  
                                      __ptext43 13D5                                        __ptext35 16BF  
                                      __ptext27 1D7B                                        __ptext19 09B4  
                                      __ptext60 0618                                        __ptext52 1057  
                                      __ptext44 1F1D                                        __ptext36 1138  
                                      __ptext28 0C03                                        __ptext61 1629  
                                      __ptext53 1428                                        __ptext45 10C2  
                                      __ptext37 1D16                                        __ptext29 147D  
                                      __ptext70 1D72                                        __ptext62 14E1  
                                      __ptext54 1D24                                        __ptext46 12C7  
                                      __ptext38 1E2A                                        __ptext71 1D0D  
                                      __ptext63 00A5                                        __ptext55 133D  
                                      __ptext47 107A                                        __ptext39 1EDB  
                                      __ptext80 1E69                                        __ptext72 1D0C  
                                      __ptext64 1037                                        __ptext56 1383  
                                      __ptext48 1E7A                                        __ptext81 0B31  
                                      __ptext73 1E9F                                        __ptext65 049E  
                                      __ptext57 0CE1                                        __ptext49 15B5  
                                      __ptext90 1D29                                        __ptext82 125C  
                                      __ptext74 02D1                                        __ptext66 1FE2  
                                      __ptext58 084E                             ?_PWM3_LoadDutyValue 00A0  
                                      __ptext91 1D0B                                        __ptext83 1D60  
                                      __ptext75 1D35                                        __ptext67 1FC4  
                                      __ptext59 077B                                        __ptext92 0EAE  
                                      __ptext84 1000                                        __ptext76 1D69  
                                      __ptext68 1FA6                                        __ptext93 1F35  
                                      __ptext85 1D57                                        __ptext77 0DC0  
                                      __ptext69 1F88                                        __ptext94 1E58  
                                      __ptext86 1D4E                                        __ptext78 0800  
                                      __ptext95 1D13                                        __ptext87 1D45  
                                      __ptext79 1017                                        __ptext96 11C4  
                                      __ptext97 1291                                        __ptext89 1E0F  
                                      __ptext98 1D20                                        __ptext99 1D0A  
                  __size_of_LED_task_BEAT_MIXED 0001                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 1D7B                                        _dmx_task 025A  
                                      _lastBeat 0132                                        _lastTime 013A  
             __size_of_LED_task_BEAT_CONTINUOUS 0001                                 LED_task_DMX@dmx 0166  
                     ?_LED_task_BEAT_CONTINUOUS 0077                                   __size_of_ctoa 0030  
                                 __size_of_main 003F                                   __size_of_init 0020  
                                  ?_address_dec 0077            __end_of_TMR0_DefaultInterruptHandler 1D0C  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1D0B  
                                  ?_address_inc 0077                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 1428                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                                     ??_getIsHold 0020  
                          ??_PWM3_LoadDutyValue 006D                    __end_of_ADCC_StartConversion 1D60  
                                      int$flags 007E                                        _position 00D7  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 1165  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00A0                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 01E8                             _EUSART1_Receive_ISR 1291  
                               _LED_task_MANUAL 1DDE                           ??_TM1650_fastPrintNum 0038  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0020  
                             ??_CONTROLLER_task 00C2                                        init@port 0020  
                                __pstringtext10 2043                                  __pstringtext11 2049  
                                __pstringtext20 207E                                  __pstringtext12 204F  
                                __pstringtext21 2082                                  __pstringtext13 2055  
                                __pstringtext22 2086                                  __pstringtext14 205B  
                                __pstringtext23 208A                                  __pstringtext15 2061  
                                __pstringtext24 208E                                  __pstringtext16 2067  
                                __pstringtext25 0000                                  __pstringtext17 206D  
                                __pstringtext18 2073                                  __pstringtext19 2079  
          __end_of_ADCC_DefaultInterruptHandler 1D0A           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1D09                                        intlevel1 0000  
                                _thresholdCount 012C                            ?_EUSART1_Receive_ISR 0077  
                                 writeData@data 0030                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0077                        __end_of_I2C1_MasterWrite 1138  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1D9F         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1D96                   __end_of_I2C1_FunctionComplete 1E69  
                                 ?_CONTROL_BEAT 0077                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 1DB2                   ?_TMR0_DefaultInterruptHandler 0077  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0036  
                             _lastLedActiveTime 0128                                        printf@ap 006E  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 00A0  
                               _TM1650_setDigit 1E7A                                     ??_vfpfcnvrt 005C  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 0144  
                                 __pstringtext1 1800                                   __pstringtext2 2000  
                                 __pstringtext3 200A                                   __pstringtext4 2013  
                                 __pstringtext5 201C                                   __pstringtext6 2025  
                                 __pstringtext7 202D                                   __pstringtext8 2035  
                                 __pstringtext9 203C                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0077  
                               _TMR0_Initialize 1EB3                                 _PWM2_Initialize 1DBD  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0077  
                                  _previousTask 0136                        _I2C1_MasterWriteTRBBuild 1057  
                                   ??_writeData 0031                                      _TX1STAbits 011E  
                  __end_of_LED_task_BEAT_STROBE 0DC0                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 1228  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 1EF0  
                            __size_of_I2C1_Stop 001A                   ?_ADCC_DefaultInterruptHandler 0077  
                    __end_of_PWM1_LoadDutyValue 1FA6                            __Umul8_16@multiplier 0028  
                                ??_CONTROL_BEAT 00C0                         ??_EUSART1_RxDataHandler 0077  
                               _PWM3_Initialize 1DC8                               __Umul8_16@product 0024  
