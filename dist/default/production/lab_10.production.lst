

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 27 00:37:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2
    56                           	psect	text25,local,class=CODE,merge=1,delta=2
    57                           	psect	text26,local,class=CODE,merge=1,delta=2
    58                           	psect	text27,local,class=CODE,merge=1,delta=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2
    86                           	psect	text55,local,class=CODE,merge=1,delta=2
    87                           	psect	text56,local,class=CODE,merge=1,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text58,local,class=CODE,merge=1,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,delta=2
    91                           	psect	text60,local,class=CODE,merge=1,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,delta=2
    94                           	psect	intentry,global,class=CODE,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,delta=2
   108                           	psect	text77,local,class=CODE,merge=1,delta=2
   109                           	psect	text78,local,class=CODE,merge=1,delta=2
   110                           	psect	text79,local,class=CODE,merge=1,delta=2
   111                           	dabs	1,0xCA0,32
   112                           	dabs	1,0xC20,80
   113                           	dabs	1,0xBA0,80
   114                           	dabs	1,0xB20,80
   115                           	dabs	1,0xAA0,80
   116                           	dabs	1,0xA20,80
   117                           	dabs	1,0x9A0,80
   118                           	dabs	1,0x920,80
   119                           	dabs	1,0x8A0,80
   120                           	dabs	1,0x820,80
   121                           	dabs	1,0x7A0,80
   122                           	dabs	1,0x720,80
   123                           	dabs	1,0x6A0,80
   124                           	dabs	1,0x64E,34
   125                           	dabs	1,0x23EE,0,_dmxArray
   126                           	dabs	1,0x7E,2
   127  0000                     
   128                           ; Version 2.05
   129                           ; Generated 20/12/2018 GMT
   130                           ; 
   131                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC16F18446 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  008C                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  010F                     	;# 
   217  0110                     	;# 
   218  0111                     	;# 
   219  0112                     	;# 
   220  0113                     	;# 
   221  0114                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0117                     	;# 
   225  0118                     	;# 
   226  0119                     	;# 
   227  0119                     	;# 
   228  0119                     	;# 
   229  011A                     	;# 
   230  011A                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011B                     	;# 
   234  011B                     	;# 
   235  011B                     	;# 
   236  011B                     	;# 
   237  011C                     	;# 
   238  011C                     	;# 
   239  011C                     	;# 
   240  011D                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  011E                     	;# 
   244  011E                     	;# 
   245  011E                     	;# 
   246  011F                     	;# 
   247  011F                     	;# 
   248  011F                     	;# 
   249  011F                     	;# 
   250  011F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0196                     	;# 
   259  0197                     	;# 
   260  0198                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019C                     	;# 
   265  020C                     	;# 
   266  020D                     	;# 
   267  020E                     	;# 
   268  020E                     	;# 
   269  020F                     	;# 
   270  020F                     	;# 
   271  0210                     	;# 
   272  0210                     	;# 
   273  0211                     	;# 
   274  0211                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0214                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0218                     	;# 
   286  0219                     	;# 
   287  021A                     	;# 
   288  021A                     	;# 
   289  021B                     	;# 
   290  021B                     	;# 
   291  021C                     	;# 
   292  021C                     	;# 
   293  021D                     	;# 
   294  021D                     	;# 
   295  021E                     	;# 
   296  021F                     	;# 
   297  028C                     	;# 
   298  028C                     	;# 
   299  028D                     	;# 
   300  028D                     	;# 
   301  028E                     	;# 
   302  028F                     	;# 
   303  0290                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0297                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  0299                     	;# 
   317  029A                     	;# 
   318  029B                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029F                     	;# 
   322  030C                     	;# 
   323  030C                     	;# 
   324  030D                     	;# 
   325  030E                     	;# 
   326  030F                     	;# 
   327  0310                     	;# 
   328  0310                     	;# 
   329  0311                     	;# 
   330  0312                     	;# 
   331  0313                     	;# 
   332  0314                     	;# 
   333  0314                     	;# 
   334  0315                     	;# 
   335  0316                     	;# 
   336  0317                     	;# 
   337  0318                     	;# 
   338  0318                     	;# 
   339  0319                     	;# 
   340  031A                     	;# 
   341  031B                     	;# 
   342  038C                     	;# 
   343  038C                     	;# 
   344  038D                     	;# 
   345  038E                     	;# 
   346  0390                     	;# 
   347  0390                     	;# 
   348  0391                     	;# 
   349  0392                     	;# 
   350  048C                     	;# 
   351  048C                     	;# 
   352  048D                     	;# 
   353  048E                     	;# 
   354  048F                     	;# 
   355  048F                     	;# 
   356  0490                     	;# 
   357  0491                     	;# 
   358  0492                     	;# 
   359  0492                     	;# 
   360  0493                     	;# 
   361  0494                     	;# 
   362  0495                     	;# 
   363  0495                     	;# 
   364  0496                     	;# 
   365  0497                     	;# 
   366  0498                     	;# 
   367  0499                     	;# 
   368  049A                     	;# 
   369  049B                     	;# 
   370  049C                     	;# 
   371  049D                     	;# 
   372  058C                     	;# 
   373  058C                     	;# 
   374  058D                     	;# 
   375  058E                     	;# 
   376  058F                     	;# 
   377  058F                     	;# 
   378  0590                     	;# 
   379  0591                     	;# 
   380  0592                     	;# 
   381  0593                     	;# 
   382  059C                     	;# 
   383  059C                     	;# 
   384  059D                     	;# 
   385  059D                     	;# 
   386  059E                     	;# 
   387  059F                     	;# 
   388  060C                     	;# 
   389  060C                     	;# 
   390  060D                     	;# 
   391  060D                     	;# 
   392  060E                     	;# 
   393  060F                     	;# 
   394  0610                     	;# 
   395  0611                     	;# 
   396  0612                     	;# 
   397  0613                     	;# 
   398  0614                     	;# 
   399  0616                     	;# 
   400  0616                     	;# 
   401  0617                     	;# 
   402  0617                     	;# 
   403  0618                     	;# 
   404  0619                     	;# 
   405  061A                     	;# 
   406  061B                     	;# 
   407  061C                     	;# 
   408  061D                     	;# 
   409  061E                     	;# 
   410  070C                     	;# 
   411  070D                     	;# 
   412  070E                     	;# 
   413  070F                     	;# 
   414  0710                     	;# 
   415  0711                     	;# 
   416  0712                     	;# 
   417  0713                     	;# 
   418  0714                     	;# 
   419  0716                     	;# 
   420  0717                     	;# 
   421  0718                     	;# 
   422  0719                     	;# 
   423  071A                     	;# 
   424  071B                     	;# 
   425  071C                     	;# 
   426  071D                     	;# 
   427  071E                     	;# 
   428  0796                     	;# 
   429  0797                     	;# 
   430  0798                     	;# 
   431  0799                     	;# 
   432  079A                     	;# 
   433  079B                     	;# 
   434  079C                     	;# 
   435  079D                     	;# 
   436  080C                     	;# 
   437  080D                     	;# 
   438  080E                     	;# 
   439  080F                     	;# 
   440  0810                     	;# 
   441  0811                     	;# 
   442  0812                     	;# 
   443  0813                     	;# 
   444  0814                     	;# 
   445  081A                     	;# 
   446  081A                     	;# 
   447  081B                     	;# 
   448  081C                     	;# 
   449  081C                     	;# 
   450  081D                     	;# 
   451  081E                     	;# 
   452  081F                     	;# 
   453  088C                     	;# 
   454  088D                     	;# 
   455  088E                     	;# 
   456  088F                     	;# 
   457  0890                     	;# 
   458  0891                     	;# 
   459  0892                     	;# 
   460  0893                     	;# 
   461  0895                     	;# 
   462  0896                     	;# 
   463  0897                     	;# 
   464  0898                     	;# 
   465  0899                     	;# 
   466  089A                     	;# 
   467  089B                     	;# 
   468  090C                     	;# 
   469  090E                     	;# 
   470  090F                     	;# 
   471  091F                     	;# 
   472  098F                     	;# 
   473  098F                     	;# 
   474  0990                     	;# 
   475  0991                     	;# 
   476  0992                     	;# 
   477  0993                     	;# 
   478  0994                     	;# 
   479  0995                     	;# 
   480  0996                     	;# 
   481  0997                     	;# 
   482  1E0F                     	;# 
   483  1E10                     	;# 
   484  1E11                     	;# 
   485  1E12                     	;# 
   486  1E13                     	;# 
   487  1E14                     	;# 
   488  1E15                     	;# 
   489  1E16                     	;# 
   490  1E17                     	;# 
   491  1E18                     	;# 
   492  1E19                     	;# 
   493  1E1A                     	;# 
   494  1E1B                     	;# 
   495  1E1C                     	;# 
   496  1E1D                     	;# 
   497  1E1E                     	;# 
   498  1E1F                     	;# 
   499  1E20                     	;# 
   500  1E21                     	;# 
   501  1E22                     	;# 
   502  1E23                     	;# 
   503  1E24                     	;# 
   504  1E25                     	;# 
   505  1E26                     	;# 
   506  1E27                     	;# 
   507  1E28                     	;# 
   508  1E29                     	;# 
   509  1E2A                     	;# 
   510  1E2B                     	;# 
   511  1E2C                     	;# 
   512  1E2D                     	;# 
   513  1E2E                     	;# 
   514  1E2F                     	;# 
   515  1E30                     	;# 
   516  1E31                     	;# 
   517  1E32                     	;# 
   518  1E33                     	;# 
   519  1E34                     	;# 
   520  1E35                     	;# 
   521  1E36                     	;# 
   522  1E37                     	;# 
   523  1E8F                     	;# 
   524  1E90                     	;# 
   525  1E91                     	;# 
   526  1E92                     	;# 
   527  1E93                     	;# 
   528  1E94                     	;# 
   529  1E95                     	;# 
   530  1E96                     	;# 
   531  1E97                     	;# 
   532  1E9C                     	;# 
   533  1E9D                     	;# 
   534  1E9E                     	;# 
   535  1EA1                     	;# 
   536  1EA2                     	;# 
   537  1EA3                     	;# 
   538  1EA4                     	;# 
   539  1EA9                     	;# 
   540  1EAA                     	;# 
   541  1EB1                     	;# 
   542  1EB2                     	;# 
   543  1EB8                     	;# 
   544  1EB9                     	;# 
   545  1EBA                     	;# 
   546  1EBB                     	;# 
   547  1EBC                     	;# 
   548  1EBD                     	;# 
   549  1EBE                     	;# 
   550  1EC3                     	;# 
   551  1EC5                     	;# 
   552  1EC6                     	;# 
   553  1EC7                     	;# 
   554  1EC8                     	;# 
   555  1EC9                     	;# 
   556  1ECA                     	;# 
   557  1ECB                     	;# 
   558  1ECB                     	;# 
   559  1ECB                     	;# 
   560  1ECC                     	;# 
   561  1ECC                     	;# 
   562  1ECC                     	;# 
   563  1F10                     	;# 
   564  1F11                     	;# 
   565  1F12                     	;# 
   566  1F14                     	;# 
   567  1F15                     	;# 
   568  1F1C                     	;# 
   569  1F1D                     	;# 
   570  1F1E                     	;# 
   571  1F1F                     	;# 
   572  1F20                     	;# 
   573  1F21                     	;# 
   574  1F22                     	;# 
   575  1F23                     	;# 
   576  1F24                     	;# 
   577  1F25                     	;# 
   578  1F26                     	;# 
   579  1F27                     	;# 
   580  1F38                     	;# 
   581  1F39                     	;# 
   582  1F3A                     	;# 
   583  1F3B                     	;# 
   584  1F3C                     	;# 
   585  1F3D                     	;# 
   586  1F3E                     	;# 
   587  1F3F                     	;# 
   588  1F43                     	;# 
   589  1F44                     	;# 
   590  1F45                     	;# 
   591  1F46                     	;# 
   592  1F47                     	;# 
   593  1F48                     	;# 
   594  1F49                     	;# 
   595  1F4A                     	;# 
   596  1F4E                     	;# 
   597  1F4F                     	;# 
   598  1F50                     	;# 
   599  1F51                     	;# 
   600  1F52                     	;# 
   601  1F53                     	;# 
   602  1F54                     	;# 
   603  1F55                     	;# 
   604  1FE4                     	;# 
   605  1FE5                     	;# 
   606  1FE6                     	;# 
   607  1FE7                     	;# 
   608  1FE8                     	;# 
   609  1FE8                     	;# 
   610  1FE9                     	;# 
   611  1FEA                     	;# 
   612  1FEB                     	;# 
   613  1FED                     	;# 
   614  1FEE                     	;# 
   615  1FEF                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0008                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0018                     	;# 
   635  0019                     	;# 
   636  001A                     	;# 
   637  008C                     	;# 
   638  008C                     	;# 
   639  008D                     	;# 
   640  008E                     	;# 
   641  008E                     	;# 
   642  008F                     	;# 
   643  0090                     	;# 
   644  0090                     	;# 
   645  0091                     	;# 
   646  0092                     	;# 
   647  0092                     	;# 
   648  0093                     	;# 
   649  0094                     	;# 
   650  0094                     	;# 
   651  0095                     	;# 
   652  0096                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009D                     	;# 
   663  009E                     	;# 
   664  009F                     	;# 
   665  010C                     	;# 
   666  010C                     	;# 
   667  010D                     	;# 
   668  010E                     	;# 
   669  010F                     	;# 
   670  010F                     	;# 
   671  0110                     	;# 
   672  0111                     	;# 
   673  0112                     	;# 
   674  0113                     	;# 
   675  0114                     	;# 
   676  0115                     	;# 
   677  0116                     	;# 
   678  0117                     	;# 
   679  0118                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  0119                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011A                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011C                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011D                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011E                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  018F                     	;# 
   709  0190                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0198                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  020E                     	;# 
   722  020E                     	;# 
   723  020F                     	;# 
   724  020F                     	;# 
   725  0210                     	;# 
   726  0210                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0218                     	;# 
   740  0219                     	;# 
   741  021A                     	;# 
   742  021A                     	;# 
   743  021B                     	;# 
   744  021B                     	;# 
   745  021C                     	;# 
   746  021C                     	;# 
   747  021D                     	;# 
   748  021D                     	;# 
   749  021E                     	;# 
   750  021F                     	;# 
   751  028C                     	;# 
   752  028C                     	;# 
   753  028D                     	;# 
   754  028D                     	;# 
   755  028E                     	;# 
   756  028F                     	;# 
   757  0290                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0292                     	;# 
   761  0293                     	;# 
   762  0293                     	;# 
   763  0294                     	;# 
   764  0295                     	;# 
   765  0296                     	;# 
   766  0297                     	;# 
   767  0298                     	;# 
   768  0298                     	;# 
   769  0299                     	;# 
   770  0299                     	;# 
   771  029A                     	;# 
   772  029B                     	;# 
   773  029C                     	;# 
   774  029D                     	;# 
   775  029F                     	;# 
   776  030C                     	;# 
   777  030C                     	;# 
   778  030D                     	;# 
   779  030E                     	;# 
   780  030F                     	;# 
   781  0310                     	;# 
   782  0310                     	;# 
   783  0311                     	;# 
   784  0312                     	;# 
   785  0313                     	;# 
   786  0314                     	;# 
   787  0314                     	;# 
   788  0315                     	;# 
   789  0316                     	;# 
   790  0317                     	;# 
   791  0318                     	;# 
   792  0318                     	;# 
   793  0319                     	;# 
   794  031A                     	;# 
   795  031B                     	;# 
   796  038C                     	;# 
   797  038C                     	;# 
   798  038D                     	;# 
   799  038E                     	;# 
   800  0390                     	;# 
   801  0390                     	;# 
   802  0391                     	;# 
   803  0392                     	;# 
   804  048C                     	;# 
   805  048C                     	;# 
   806  048D                     	;# 
   807  048E                     	;# 
   808  048F                     	;# 
   809  048F                     	;# 
   810  0490                     	;# 
   811  0491                     	;# 
   812  0492                     	;# 
   813  0492                     	;# 
   814  0493                     	;# 
   815  0494                     	;# 
   816  0495                     	;# 
   817  0495                     	;# 
   818  0496                     	;# 
   819  0497                     	;# 
   820  0498                     	;# 
   821  0499                     	;# 
   822  049A                     	;# 
   823  049B                     	;# 
   824  049C                     	;# 
   825  049D                     	;# 
   826  058C                     	;# 
   827  058C                     	;# 
   828  058D                     	;# 
   829  058E                     	;# 
   830  058F                     	;# 
   831  058F                     	;# 
   832  0590                     	;# 
   833  0591                     	;# 
   834  0592                     	;# 
   835  0593                     	;# 
   836  059C                     	;# 
   837  059C                     	;# 
   838  059D                     	;# 
   839  059D                     	;# 
   840  059E                     	;# 
   841  059F                     	;# 
   842  060C                     	;# 
   843  060C                     	;# 
   844  060D                     	;# 
   845  060D                     	;# 
   846  060E                     	;# 
   847  060F                     	;# 
   848  0610                     	;# 
   849  0611                     	;# 
   850  0612                     	;# 
   851  0613                     	;# 
   852  0614                     	;# 
   853  0616                     	;# 
   854  0616                     	;# 
   855  0617                     	;# 
   856  0617                     	;# 
   857  0618                     	;# 
   858  0619                     	;# 
   859  061A                     	;# 
   860  061B                     	;# 
   861  061C                     	;# 
   862  061D                     	;# 
   863  061E                     	;# 
   864  070C                     	;# 
   865  070D                     	;# 
   866  070E                     	;# 
   867  070F                     	;# 
   868  0710                     	;# 
   869  0711                     	;# 
   870  0712                     	;# 
   871  0713                     	;# 
   872  0714                     	;# 
   873  0716                     	;# 
   874  0717                     	;# 
   875  0718                     	;# 
   876  0719                     	;# 
   877  071A                     	;# 
   878  071B                     	;# 
   879  071C                     	;# 
   880  071D                     	;# 
   881  071E                     	;# 
   882  0796                     	;# 
   883  0797                     	;# 
   884  0798                     	;# 
   885  0799                     	;# 
   886  079A                     	;# 
   887  079B                     	;# 
   888  079C                     	;# 
   889  079D                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081A                     	;# 
   901  081B                     	;# 
   902  081C                     	;# 
   903  081C                     	;# 
   904  081D                     	;# 
   905  081E                     	;# 
   906  081F                     	;# 
   907  088C                     	;# 
   908  088D                     	;# 
   909  088E                     	;# 
   910  088F                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  0895                     	;# 
   916  0896                     	;# 
   917  0897                     	;# 
   918  0898                     	;# 
   919  0899                     	;# 
   920  089A                     	;# 
   921  089B                     	;# 
   922  090C                     	;# 
   923  090E                     	;# 
   924  090F                     	;# 
   925  091F                     	;# 
   926  098F                     	;# 
   927  098F                     	;# 
   928  0990                     	;# 
   929  0991                     	;# 
   930  0992                     	;# 
   931  0993                     	;# 
   932  0994                     	;# 
   933  0995                     	;# 
   934  0996                     	;# 
   935  0997                     	;# 
   936  1E0F                     	;# 
   937  1E10                     	;# 
   938  1E11                     	;# 
   939  1E12                     	;# 
   940  1E13                     	;# 
   941  1E14                     	;# 
   942  1E15                     	;# 
   943  1E16                     	;# 
   944  1E17                     	;# 
   945  1E18                     	;# 
   946  1E19                     	;# 
   947  1E1A                     	;# 
   948  1E1B                     	;# 
   949  1E1C                     	;# 
   950  1E1D                     	;# 
   951  1E1E                     	;# 
   952  1E1F                     	;# 
   953  1E20                     	;# 
   954  1E21                     	;# 
   955  1E22                     	;# 
   956  1E23                     	;# 
   957  1E24                     	;# 
   958  1E25                     	;# 
   959  1E26                     	;# 
   960  1E27                     	;# 
   961  1E28                     	;# 
   962  1E29                     	;# 
   963  1E2A                     	;# 
   964  1E2B                     	;# 
   965  1E2C                     	;# 
   966  1E2D                     	;# 
   967  1E2E                     	;# 
   968  1E2F                     	;# 
   969  1E30                     	;# 
   970  1E31                     	;# 
   971  1E32                     	;# 
   972  1E33                     	;# 
   973  1E34                     	;# 
   974  1E35                     	;# 
   975  1E36                     	;# 
   976  1E37                     	;# 
   977  1E8F                     	;# 
   978  1E90                     	;# 
   979  1E91                     	;# 
   980  1E92                     	;# 
   981  1E93                     	;# 
   982  1E94                     	;# 
   983  1E95                     	;# 
   984  1E96                     	;# 
   985  1E97                     	;# 
   986  1E9C                     	;# 
   987  1E9D                     	;# 
   988  1E9E                     	;# 
   989  1EA1                     	;# 
   990  1EA2                     	;# 
   991  1EA3                     	;# 
   992  1EA4                     	;# 
   993  1EA9                     	;# 
   994  1EAA                     	;# 
   995  1EB1                     	;# 
   996  1EB2                     	;# 
   997  1EB8                     	;# 
   998  1EB9                     	;# 
   999  1EBA                     	;# 
  1000  1EBB                     	;# 
  1001  1EBC                     	;# 
  1002  1EBD                     	;# 
  1003  1EBE                     	;# 
  1004  1EC3                     	;# 
  1005  1EC5                     	;# 
  1006  1EC6                     	;# 
  1007  1EC7                     	;# 
  1008  1EC8                     	;# 
  1009  1EC9                     	;# 
  1010  1ECA                     	;# 
  1011  1ECB                     	;# 
  1012  1ECB                     	;# 
  1013  1ECB                     	;# 
  1014  1ECC                     	;# 
  1015  1ECC                     	;# 
  1016  1ECC                     	;# 
  1017  1F10                     	;# 
  1018  1F11                     	;# 
  1019  1F12                     	;# 
  1020  1F14                     	;# 
  1021  1F15                     	;# 
  1022  1F1C                     	;# 
  1023  1F1D                     	;# 
  1024  1F1E                     	;# 
  1025  1F1F                     	;# 
  1026  1F20                     	;# 
  1027  1F21                     	;# 
  1028  1F22                     	;# 
  1029  1F23                     	;# 
  1030  1F24                     	;# 
  1031  1F25                     	;# 
  1032  1F26                     	;# 
  1033  1F27                     	;# 
  1034  1F38                     	;# 
  1035  1F39                     	;# 
  1036  1F3A                     	;# 
  1037  1F3B                     	;# 
  1038  1F3C                     	;# 
  1039  1F3D                     	;# 
  1040  1F3E                     	;# 
  1041  1F3F                     	;# 
  1042  1F43                     	;# 
  1043  1F44                     	;# 
  1044  1F45                     	;# 
  1045  1F46                     	;# 
  1046  1F47                     	;# 
  1047  1F48                     	;# 
  1048  1F49                     	;# 
  1049  1F4A                     	;# 
  1050  1F4E                     	;# 
  1051  1F4F                     	;# 
  1052  1F50                     	;# 
  1053  1F51                     	;# 
  1054  1F52                     	;# 
  1055  1F53                     	;# 
  1056  1F54                     	;# 
  1057  1F55                     	;# 
  1058  1FE4                     	;# 
  1059  1FE5                     	;# 
  1060  1FE6                     	;# 
  1061  1FE7                     	;# 
  1062  1FE8                     	;# 
  1063  1FE8                     	;# 
  1064  1FE9                     	;# 
  1065  1FEA                     	;# 
  1066  1FEB                     	;# 
  1067  1FED                     	;# 
  1068  1FEE                     	;# 
  1069  1FEF                     	;# 
  1070  0000                     	;# 
  1071  0001                     	;# 
  1072  0002                     	;# 
  1073  0003                     	;# 
  1074  0004                     	;# 
  1075  0005                     	;# 
  1076  0006                     	;# 
  1077  0007                     	;# 
  1078  0008                     	;# 
  1079  0009                     	;# 
  1080  000A                     	;# 
  1081  000B                     	;# 
  1082  000C                     	;# 
  1083  000D                     	;# 
  1084  000E                     	;# 
  1085  0012                     	;# 
  1086  0013                     	;# 
  1087  0014                     	;# 
  1088  0018                     	;# 
  1089  0019                     	;# 
  1090  001A                     	;# 
  1091  008C                     	;# 
  1092  008C                     	;# 
  1093  008D                     	;# 
  1094  008E                     	;# 
  1095  008E                     	;# 
  1096  008F                     	;# 
  1097  0090                     	;# 
  1098  0090                     	;# 
  1099  0091                     	;# 
  1100  0092                     	;# 
  1101  0092                     	;# 
  1102  0093                     	;# 
  1103  0094                     	;# 
  1104  0094                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0096                     	;# 
  1108  0097                     	;# 
  1109  0098                     	;# 
  1110  0099                     	;# 
  1111  009A                     	;# 
  1112  009B                     	;# 
  1113  009B                     	;# 
  1114  009C                     	;# 
  1115  009D                     	;# 
  1116  009D                     	;# 
  1117  009E                     	;# 
  1118  009F                     	;# 
  1119  010C                     	;# 
  1120  010C                     	;# 
  1121  010D                     	;# 
  1122  010E                     	;# 
  1123  010F                     	;# 
  1124  010F                     	;# 
  1125  0110                     	;# 
  1126  0111                     	;# 
  1127  0112                     	;# 
  1128  0113                     	;# 
  1129  0114                     	;# 
  1130  0115                     	;# 
  1131  0116                     	;# 
  1132  0117                     	;# 
  1133  0118                     	;# 
  1134  0119                     	;# 
  1135  0119                     	;# 
  1136  0119                     	;# 
  1137  011A                     	;# 
  1138  011A                     	;# 
  1139  011A                     	;# 
  1140  011B                     	;# 
  1141  011B                     	;# 
  1142  011B                     	;# 
  1143  011B                     	;# 
  1144  011B                     	;# 
  1145  011C                     	;# 
  1146  011C                     	;# 
  1147  011C                     	;# 
  1148  011D                     	;# 
  1149  011D                     	;# 
  1150  011D                     	;# 
  1151  011E                     	;# 
  1152  011E                     	;# 
  1153  011E                     	;# 
  1154  011F                     	;# 
  1155  011F                     	;# 
  1156  011F                     	;# 
  1157  011F                     	;# 
  1158  011F                     	;# 
  1159  018C                     	;# 
  1160  018D                     	;# 
  1161  018E                     	;# 
  1162  018F                     	;# 
  1163  0190                     	;# 
  1164  0191                     	;# 
  1165  0192                     	;# 
  1166  0196                     	;# 
  1167  0197                     	;# 
  1168  0198                     	;# 
  1169  0199                     	;# 
  1170  019A                     	;# 
  1171  019B                     	;# 
  1172  019C                     	;# 
  1173  020C                     	;# 
  1174  020D                     	;# 
  1175  020E                     	;# 
  1176  020E                     	;# 
  1177  020F                     	;# 
  1178  020F                     	;# 
  1179  0210                     	;# 
  1180  0210                     	;# 
  1181  0211                     	;# 
  1182  0211                     	;# 
  1183  0212                     	;# 
  1184  0213                     	;# 
  1185  0214                     	;# 
  1186  0214                     	;# 
  1187  0215                     	;# 
  1188  0215                     	;# 
  1189  0216                     	;# 
  1190  0216                     	;# 
  1191  0217                     	;# 
  1192  0217                     	;# 
  1193  0218                     	;# 
  1194  0219                     	;# 
  1195  021A                     	;# 
  1196  021A                     	;# 
  1197  021B                     	;# 
  1198  021B                     	;# 
  1199  021C                     	;# 
  1200  021C                     	;# 
  1201  021D                     	;# 
  1202  021D                     	;# 
  1203  021E                     	;# 
  1204  021F                     	;# 
  1205  028C                     	;# 
  1206  028C                     	;# 
  1207  028D                     	;# 
  1208  028D                     	;# 
  1209  028E                     	;# 
  1210  028F                     	;# 
  1211  0290                     	;# 
  1212  0291                     	;# 
  1213  0292                     	;# 
  1214  0292                     	;# 
  1215  0293                     	;# 
  1216  0293                     	;# 
  1217  0294                     	;# 
  1218  0295                     	;# 
  1219  0296                     	;# 
  1220  0297                     	;# 
  1221  0298                     	;# 
  1222  0298                     	;# 
  1223  0299                     	;# 
  1224  0299                     	;# 
  1225  029A                     	;# 
  1226  029B                     	;# 
  1227  029C                     	;# 
  1228  029D                     	;# 
  1229  029F                     	;# 
  1230  030C                     	;# 
  1231  030C                     	;# 
  1232  030D                     	;# 
  1233  030E                     	;# 
  1234  030F                     	;# 
  1235  0310                     	;# 
  1236  0310                     	;# 
  1237  0311                     	;# 
  1238  0312                     	;# 
  1239  0313                     	;# 
  1240  0314                     	;# 
  1241  0314                     	;# 
  1242  0315                     	;# 
  1243  0316                     	;# 
  1244  0317                     	;# 
  1245  0318                     	;# 
  1246  0318                     	;# 
  1247  0319                     	;# 
  1248  031A                     	;# 
  1249  031B                     	;# 
  1250  038C                     	;# 
  1251  038C                     	;# 
  1252  038D                     	;# 
  1253  038E                     	;# 
  1254  0390                     	;# 
  1255  0390                     	;# 
  1256  0391                     	;# 
  1257  0392                     	;# 
  1258  048C                     	;# 
  1259  048C                     	;# 
  1260  048D                     	;# 
  1261  048E                     	;# 
  1262  048F                     	;# 
  1263  048F                     	;# 
  1264  0490                     	;# 
  1265  0491                     	;# 
  1266  0492                     	;# 
  1267  0492                     	;# 
  1268  0493                     	;# 
  1269  0494                     	;# 
  1270  0495                     	;# 
  1271  0495                     	;# 
  1272  0496                     	;# 
  1273  0497                     	;# 
  1274  0498                     	;# 
  1275  0499                     	;# 
  1276  049A                     	;# 
  1277  049B                     	;# 
  1278  049C                     	;# 
  1279  049D                     	;# 
  1280  058C                     	;# 
  1281  058C                     	;# 
  1282  058D                     	;# 
  1283  058E                     	;# 
  1284  058F                     	;# 
  1285  058F                     	;# 
  1286  0590                     	;# 
  1287  0591                     	;# 
  1288  0592                     	;# 
  1289  0593                     	;# 
  1290  059C                     	;# 
  1291  059C                     	;# 
  1292  059D                     	;# 
  1293  059D                     	;# 
  1294  059E                     	;# 
  1295  059F                     	;# 
  1296  060C                     	;# 
  1297  060C                     	;# 
  1298  060D                     	;# 
  1299  060D                     	;# 
  1300  060E                     	;# 
  1301  060F                     	;# 
  1302  0610                     	;# 
  1303  0611                     	;# 
  1304  0612                     	;# 
  1305  0613                     	;# 
  1306  0614                     	;# 
  1307  0616                     	;# 
  1308  0616                     	;# 
  1309  0617                     	;# 
  1310  0617                     	;# 
  1311  0618                     	;# 
  1312  0619                     	;# 
  1313  061A                     	;# 
  1314  061B                     	;# 
  1315  061C                     	;# 
  1316  061D                     	;# 
  1317  061E                     	;# 
  1318  070C                     	;# 
  1319  070D                     	;# 
  1320  070E                     	;# 
  1321  070F                     	;# 
  1322  0710                     	;# 
  1323  0711                     	;# 
  1324  0712                     	;# 
  1325  0713                     	;# 
  1326  0714                     	;# 
  1327  0716                     	;# 
  1328  0717                     	;# 
  1329  0718                     	;# 
  1330  0719                     	;# 
  1331  071A                     	;# 
  1332  071B                     	;# 
  1333  071C                     	;# 
  1334  071D                     	;# 
  1335  071E                     	;# 
  1336  0796                     	;# 
  1337  0797                     	;# 
  1338  0798                     	;# 
  1339  0799                     	;# 
  1340  079A                     	;# 
  1341  079B                     	;# 
  1342  079C                     	;# 
  1343  079D                     	;# 
  1344  080C                     	;# 
  1345  080D                     	;# 
  1346  080E                     	;# 
  1347  080F                     	;# 
  1348  0810                     	;# 
  1349  0811                     	;# 
  1350  0812                     	;# 
  1351  0813                     	;# 
  1352  0814                     	;# 
  1353  081A                     	;# 
  1354  081A                     	;# 
  1355  081B                     	;# 
  1356  081C                     	;# 
  1357  081C                     	;# 
  1358  081D                     	;# 
  1359  081E                     	;# 
  1360  081F                     	;# 
  1361  088C                     	;# 
  1362  088D                     	;# 
  1363  088E                     	;# 
  1364  088F                     	;# 
  1365  0890                     	;# 
  1366  0891                     	;# 
  1367  0892                     	;# 
  1368  0893                     	;# 
  1369  0895                     	;# 
  1370  0896                     	;# 
  1371  0897                     	;# 
  1372  0898                     	;# 
  1373  0899                     	;# 
  1374  089A                     	;# 
  1375  089B                     	;# 
  1376  090C                     	;# 
  1377  090E                     	;# 
  1378  090F                     	;# 
  1379  091F                     	;# 
  1380  098F                     	;# 
  1381  098F                     	;# 
  1382  0990                     	;# 
  1383  0991                     	;# 
  1384  0992                     	;# 
  1385  0993                     	;# 
  1386  0994                     	;# 
  1387  0995                     	;# 
  1388  0996                     	;# 
  1389  0997                     	;# 
  1390  1E0F                     	;# 
  1391  1E10                     	;# 
  1392  1E11                     	;# 
  1393  1E12                     	;# 
  1394  1E13                     	;# 
  1395  1E14                     	;# 
  1396  1E15                     	;# 
  1397  1E16                     	;# 
  1398  1E17                     	;# 
  1399  1E18                     	;# 
  1400  1E19                     	;# 
  1401  1E1A                     	;# 
  1402  1E1B                     	;# 
  1403  1E1C                     	;# 
  1404  1E1D                     	;# 
  1405  1E1E                     	;# 
  1406  1E1F                     	;# 
  1407  1E20                     	;# 
  1408  1E21                     	;# 
  1409  1E22                     	;# 
  1410  1E23                     	;# 
  1411  1E24                     	;# 
  1412  1E25                     	;# 
  1413  1E26                     	;# 
  1414  1E27                     	;# 
  1415  1E28                     	;# 
  1416  1E29                     	;# 
  1417  1E2A                     	;# 
  1418  1E2B                     	;# 
  1419  1E2C                     	;# 
  1420  1E2D                     	;# 
  1421  1E2E                     	;# 
  1422  1E2F                     	;# 
  1423  1E30                     	;# 
  1424  1E31                     	;# 
  1425  1E32                     	;# 
  1426  1E33                     	;# 
  1427  1E34                     	;# 
  1428  1E35                     	;# 
  1429  1E36                     	;# 
  1430  1E37                     	;# 
  1431  1E8F                     	;# 
  1432  1E90                     	;# 
  1433  1E91                     	;# 
  1434  1E92                     	;# 
  1435  1E93                     	;# 
  1436  1E94                     	;# 
  1437  1E95                     	;# 
  1438  1E96                     	;# 
  1439  1E97                     	;# 
  1440  1E9C                     	;# 
  1441  1E9D                     	;# 
  1442  1E9E                     	;# 
  1443  1EA1                     	;# 
  1444  1EA2                     	;# 
  1445  1EA3                     	;# 
  1446  1EA4                     	;# 
  1447  1EA9                     	;# 
  1448  1EAA                     	;# 
  1449  1EB1                     	;# 
  1450  1EB2                     	;# 
  1451  1EB8                     	;# 
  1452  1EB9                     	;# 
  1453  1EBA                     	;# 
  1454  1EBB                     	;# 
  1455  1EBC                     	;# 
  1456  1EBD                     	;# 
  1457  1EBE                     	;# 
  1458  1EC3                     	;# 
  1459  1EC5                     	;# 
  1460  1EC6                     	;# 
  1461  1EC7                     	;# 
  1462  1EC8                     	;# 
  1463  1EC9                     	;# 
  1464  1ECA                     	;# 
  1465  1ECB                     	;# 
  1466  1ECB                     	;# 
  1467  1ECB                     	;# 
  1468  1ECC                     	;# 
  1469  1ECC                     	;# 
  1470  1ECC                     	;# 
  1471  1F10                     	;# 
  1472  1F11                     	;# 
  1473  1F12                     	;# 
  1474  1F14                     	;# 
  1475  1F15                     	;# 
  1476  1F1C                     	;# 
  1477  1F1D                     	;# 
  1478  1F1E                     	;# 
  1479  1F1F                     	;# 
  1480  1F20                     	;# 
  1481  1F21                     	;# 
  1482  1F22                     	;# 
  1483  1F23                     	;# 
  1484  1F24                     	;# 
  1485  1F25                     	;# 
  1486  1F26                     	;# 
  1487  1F27                     	;# 
  1488  1F38                     	;# 
  1489  1F39                     	;# 
  1490  1F3A                     	;# 
  1491  1F3B                     	;# 
  1492  1F3C                     	;# 
  1493  1F3D                     	;# 
  1494  1F3E                     	;# 
  1495  1F3F                     	;# 
  1496  1F43                     	;# 
  1497  1F44                     	;# 
  1498  1F45                     	;# 
  1499  1F46                     	;# 
  1500  1F47                     	;# 
  1501  1F48                     	;# 
  1502  1F49                     	;# 
  1503  1F4A                     	;# 
  1504  1F4E                     	;# 
  1505  1F4F                     	;# 
  1506  1F50                     	;# 
  1507  1F51                     	;# 
  1508  1F52                     	;# 
  1509  1F53                     	;# 
  1510  1F54                     	;# 
  1511  1F55                     	;# 
  1512  1FE4                     	;# 
  1513  1FE5                     	;# 
  1514  1FE6                     	;# 
  1515  1FE7                     	;# 
  1516  1FE8                     	;# 
  1517  1FE8                     	;# 
  1518  1FE9                     	;# 
  1519  1FEA                     	;# 
  1520  1FEB                     	;# 
  1521  1FED                     	;# 
  1522  1FEE                     	;# 
  1523  1FEF                     	;# 
  1524  0000                     	;# 
  1525  0001                     	;# 
  1526  0002                     	;# 
  1527  0003                     	;# 
  1528  0004                     	;# 
  1529  0005                     	;# 
  1530  0006                     	;# 
  1531  0007                     	;# 
  1532  0008                     	;# 
  1533  0009                     	;# 
  1534  000A                     	;# 
  1535  000B                     	;# 
  1536  000C                     	;# 
  1537  000D                     	;# 
  1538  000E                     	;# 
  1539  0012                     	;# 
  1540  0013                     	;# 
  1541  0014                     	;# 
  1542  0018                     	;# 
  1543  0019                     	;# 
  1544  001A                     	;# 
  1545  008C                     	;# 
  1546  008C                     	;# 
  1547  008D                     	;# 
  1548  008E                     	;# 
  1549  008E                     	;# 
  1550  008F                     	;# 
  1551  0090                     	;# 
  1552  0090                     	;# 
  1553  0091                     	;# 
  1554  0092                     	;# 
  1555  0092                     	;# 
  1556  0093                     	;# 
  1557  0094                     	;# 
  1558  0094                     	;# 
  1559  0095                     	;# 
  1560  0096                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0098                     	;# 
  1564  0099                     	;# 
  1565  009A                     	;# 
  1566  009B                     	;# 
  1567  009B                     	;# 
  1568  009C                     	;# 
  1569  009D                     	;# 
  1570  009D                     	;# 
  1571  009E                     	;# 
  1572  009F                     	;# 
  1573  010C                     	;# 
  1574  010C                     	;# 
  1575  010D                     	;# 
  1576  010E                     	;# 
  1577  010F                     	;# 
  1578  010F                     	;# 
  1579  0110                     	;# 
  1580  0111                     	;# 
  1581  0112                     	;# 
  1582  0113                     	;# 
  1583  0114                     	;# 
  1584  0115                     	;# 
  1585  0116                     	;# 
  1586  0117                     	;# 
  1587  0118                     	;# 
  1588  0119                     	;# 
  1589  0119                     	;# 
  1590  0119                     	;# 
  1591  011A                     	;# 
  1592  011A                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011B                     	;# 
  1596  011B                     	;# 
  1597  011B                     	;# 
  1598  011B                     	;# 
  1599  011C                     	;# 
  1600  011C                     	;# 
  1601  011C                     	;# 
  1602  011D                     	;# 
  1603  011D                     	;# 
  1604  011D                     	;# 
  1605  011E                     	;# 
  1606  011E                     	;# 
  1607  011E                     	;# 
  1608  011F                     	;# 
  1609  011F                     	;# 
  1610  011F                     	;# 
  1611  011F                     	;# 
  1612  011F                     	;# 
  1613  018C                     	;# 
  1614  018D                     	;# 
  1615  018E                     	;# 
  1616  018F                     	;# 
  1617  0190                     	;# 
  1618  0191                     	;# 
  1619  0192                     	;# 
  1620  0196                     	;# 
  1621  0197                     	;# 
  1622  0198                     	;# 
  1623  0199                     	;# 
  1624  019A                     	;# 
  1625  019B                     	;# 
  1626  019C                     	;# 
  1627  020C                     	;# 
  1628  020D                     	;# 
  1629  020E                     	;# 
  1630  020E                     	;# 
  1631  020F                     	;# 
  1632  020F                     	;# 
  1633  0210                     	;# 
  1634  0210                     	;# 
  1635  0211                     	;# 
  1636  0211                     	;# 
  1637  0212                     	;# 
  1638  0213                     	;# 
  1639  0214                     	;# 
  1640  0214                     	;# 
  1641  0215                     	;# 
  1642  0215                     	;# 
  1643  0216                     	;# 
  1644  0216                     	;# 
  1645  0217                     	;# 
  1646  0217                     	;# 
  1647  0218                     	;# 
  1648  0219                     	;# 
  1649  021A                     	;# 
  1650  021A                     	;# 
  1651  021B                     	;# 
  1652  021B                     	;# 
  1653  021C                     	;# 
  1654  021C                     	;# 
  1655  021D                     	;# 
  1656  021D                     	;# 
  1657  021E                     	;# 
  1658  021F                     	;# 
  1659  028C                     	;# 
  1660  028C                     	;# 
  1661  028D                     	;# 
  1662  028D                     	;# 
  1663  028E                     	;# 
  1664  028F                     	;# 
  1665  0290                     	;# 
  1666  0291                     	;# 
  1667  0292                     	;# 
  1668  0292                     	;# 
  1669  0293                     	;# 
  1670  0293                     	;# 
  1671  0294                     	;# 
  1672  0295                     	;# 
  1673  0296                     	;# 
  1674  0297                     	;# 
  1675  0298                     	;# 
  1676  0298                     	;# 
  1677  0299                     	;# 
  1678  0299                     	;# 
  1679  029A                     	;# 
  1680  029B                     	;# 
  1681  029C                     	;# 
  1682  029D                     	;# 
  1683  029F                     	;# 
  1684  030C                     	;# 
  1685  030C                     	;# 
  1686  030D                     	;# 
  1687  030E                     	;# 
  1688  030F                     	;# 
  1689  0310                     	;# 
  1690  0310                     	;# 
  1691  0311                     	;# 
  1692  0312                     	;# 
  1693  0313                     	;# 
  1694  0314                     	;# 
  1695  0314                     	;# 
  1696  0315                     	;# 
  1697  0316                     	;# 
  1698  0317                     	;# 
  1699  0318                     	;# 
  1700  0318                     	;# 
  1701  0319                     	;# 
  1702  031A                     	;# 
  1703  031B                     	;# 
  1704  038C                     	;# 
  1705  038C                     	;# 
  1706  038D                     	;# 
  1707  038E                     	;# 
  1708  0390                     	;# 
  1709  0390                     	;# 
  1710  0391                     	;# 
  1711  0392                     	;# 
  1712  048C                     	;# 
  1713  048C                     	;# 
  1714  048D                     	;# 
  1715  048E                     	;# 
  1716  048F                     	;# 
  1717  048F                     	;# 
  1718  0490                     	;# 
  1719  0491                     	;# 
  1720  0492                     	;# 
  1721  0492                     	;# 
  1722  0493                     	;# 
  1723  0494                     	;# 
  1724  0495                     	;# 
  1725  0495                     	;# 
  1726  0496                     	;# 
  1727  0497                     	;# 
  1728  0498                     	;# 
  1729  0499                     	;# 
  1730  049A                     	;# 
  1731  049B                     	;# 
  1732  049C                     	;# 
  1733  049D                     	;# 
  1734  058C                     	;# 
  1735  058C                     	;# 
  1736  058D                     	;# 
  1737  058E                     	;# 
  1738  058F                     	;# 
  1739  058F                     	;# 
  1740  0590                     	;# 
  1741  0591                     	;# 
  1742  0592                     	;# 
  1743  0593                     	;# 
  1744  059C                     	;# 
  1745  059C                     	;# 
  1746  059D                     	;# 
  1747  059D                     	;# 
  1748  059E                     	;# 
  1749  059F                     	;# 
  1750  060C                     	;# 
  1751  060C                     	;# 
  1752  060D                     	;# 
  1753  060D                     	;# 
  1754  060E                     	;# 
  1755  060F                     	;# 
  1756  0610                     	;# 
  1757  0611                     	;# 
  1758  0612                     	;# 
  1759  0613                     	;# 
  1760  0614                     	;# 
  1761  0616                     	;# 
  1762  0616                     	;# 
  1763  0617                     	;# 
  1764  0617                     	;# 
  1765  0618                     	;# 
  1766  0619                     	;# 
  1767  061A                     	;# 
  1768  061B                     	;# 
  1769  061C                     	;# 
  1770  061D                     	;# 
  1771  061E                     	;# 
  1772  070C                     	;# 
  1773  070D                     	;# 
  1774  070E                     	;# 
  1775  070F                     	;# 
  1776  0710                     	;# 
  1777  0711                     	;# 
  1778  0712                     	;# 
  1779  0713                     	;# 
  1780  0714                     	;# 
  1781  0716                     	;# 
  1782  0717                     	;# 
  1783  0718                     	;# 
  1784  0719                     	;# 
  1785  071A                     	;# 
  1786  071B                     	;# 
  1787  071C                     	;# 
  1788  071D                     	;# 
  1789  071E                     	;# 
  1790  0796                     	;# 
  1791  0797                     	;# 
  1792  0798                     	;# 
  1793  0799                     	;# 
  1794  079A                     	;# 
  1795  079B                     	;# 
  1796  079C                     	;# 
  1797  079D                     	;# 
  1798  080C                     	;# 
  1799  080D                     	;# 
  1800  080E                     	;# 
  1801  080F                     	;# 
  1802  0810                     	;# 
  1803  0811                     	;# 
  1804  0812                     	;# 
  1805  0813                     	;# 
  1806  0814                     	;# 
  1807  081A                     	;# 
  1808  081A                     	;# 
  1809  081B                     	;# 
  1810  081C                     	;# 
  1811  081C                     	;# 
  1812  081D                     	;# 
  1813  081E                     	;# 
  1814  081F                     	;# 
  1815  088C                     	;# 
  1816  088D                     	;# 
  1817  088E                     	;# 
  1818  088F                     	;# 
  1819  0890                     	;# 
  1820  0891                     	;# 
  1821  0892                     	;# 
  1822  0893                     	;# 
  1823  0895                     	;# 
  1824  0896                     	;# 
  1825  0897                     	;# 
  1826  0898                     	;# 
  1827  0899                     	;# 
  1828  089A                     	;# 
  1829  089B                     	;# 
  1830  090C                     	;# 
  1831  090E                     	;# 
  1832  090F                     	;# 
  1833  091F                     	;# 
  1834  098F                     	;# 
  1835  098F                     	;# 
  1836  0990                     	;# 
  1837  0991                     	;# 
  1838  0992                     	;# 
  1839  0993                     	;# 
  1840  0994                     	;# 
  1841  0995                     	;# 
  1842  0996                     	;# 
  1843  0997                     	;# 
  1844  1E0F                     	;# 
  1845  1E10                     	;# 
  1846  1E11                     	;# 
  1847  1E12                     	;# 
  1848  1E13                     	;# 
  1849  1E14                     	;# 
  1850  1E15                     	;# 
  1851  1E16                     	;# 
  1852  1E17                     	;# 
  1853  1E18                     	;# 
  1854  1E19                     	;# 
  1855  1E1A                     	;# 
  1856  1E1B                     	;# 
  1857  1E1C                     	;# 
  1858  1E1D                     	;# 
  1859  1E1E                     	;# 
  1860  1E1F                     	;# 
  1861  1E20                     	;# 
  1862  1E21                     	;# 
  1863  1E22                     	;# 
  1864  1E23                     	;# 
  1865  1E24                     	;# 
  1866  1E25                     	;# 
  1867  1E26                     	;# 
  1868  1E27                     	;# 
  1869  1E28                     	;# 
  1870  1E29                     	;# 
  1871  1E2A                     	;# 
  1872  1E2B                     	;# 
  1873  1E2C                     	;# 
  1874  1E2D                     	;# 
  1875  1E2E                     	;# 
  1876  1E2F                     	;# 
  1877  1E30                     	;# 
  1878  1E31                     	;# 
  1879  1E32                     	;# 
  1880  1E33                     	;# 
  1881  1E34                     	;# 
  1882  1E35                     	;# 
  1883  1E36                     	;# 
  1884  1E37                     	;# 
  1885  1E8F                     	;# 
  1886  1E90                     	;# 
  1887  1E91                     	;# 
  1888  1E92                     	;# 
  1889  1E93                     	;# 
  1890  1E94                     	;# 
  1891  1E95                     	;# 
  1892  1E96                     	;# 
  1893  1E97                     	;# 
  1894  1E9C                     	;# 
  1895  1E9D                     	;# 
  1896  1E9E                     	;# 
  1897  1EA1                     	;# 
  1898  1EA2                     	;# 
  1899  1EA3                     	;# 
  1900  1EA4                     	;# 
  1901  1EA9                     	;# 
  1902  1EAA                     	;# 
  1903  1EB1                     	;# 
  1904  1EB2                     	;# 
  1905  1EB8                     	;# 
  1906  1EB9                     	;# 
  1907  1EBA                     	;# 
  1908  1EBB                     	;# 
  1909  1EBC                     	;# 
  1910  1EBD                     	;# 
  1911  1EBE                     	;# 
  1912  1EC3                     	;# 
  1913  1EC5                     	;# 
  1914  1EC6                     	;# 
  1915  1EC7                     	;# 
  1916  1EC8                     	;# 
  1917  1EC9                     	;# 
  1918  1ECA                     	;# 
  1919  1ECB                     	;# 
  1920  1ECB                     	;# 
  1921  1ECB                     	;# 
  1922  1ECC                     	;# 
  1923  1ECC                     	;# 
  1924  1ECC                     	;# 
  1925  1F10                     	;# 
  1926  1F11                     	;# 
  1927  1F12                     	;# 
  1928  1F14                     	;# 
  1929  1F15                     	;# 
  1930  1F1C                     	;# 
  1931  1F1D                     	;# 
  1932  1F1E                     	;# 
  1933  1F1F                     	;# 
  1934  1F20                     	;# 
  1935  1F21                     	;# 
  1936  1F22                     	;# 
  1937  1F23                     	;# 
  1938  1F24                     	;# 
  1939  1F25                     	;# 
  1940  1F26                     	;# 
  1941  1F27                     	;# 
  1942  1F38                     	;# 
  1943  1F39                     	;# 
  1944  1F3A                     	;# 
  1945  1F3B                     	;# 
  1946  1F3C                     	;# 
  1947  1F3D                     	;# 
  1948  1F3E                     	;# 
  1949  1F3F                     	;# 
  1950  1F43                     	;# 
  1951  1F44                     	;# 
  1952  1F45                     	;# 
  1953  1F46                     	;# 
  1954  1F47                     	;# 
  1955  1F48                     	;# 
  1956  1F49                     	;# 
  1957  1F4A                     	;# 
  1958  1F4E                     	;# 
  1959  1F4F                     	;# 
  1960  1F50                     	;# 
  1961  1F51                     	;# 
  1962  1F52                     	;# 
  1963  1F53                     	;# 
  1964  1F54                     	;# 
  1965  1F55                     	;# 
  1966  1FE4                     	;# 
  1967  1FE5                     	;# 
  1968  1FE6                     	;# 
  1969  1FE7                     	;# 
  1970  1FE8                     	;# 
  1971  1FE8                     	;# 
  1972  1FE9                     	;# 
  1973  1FEA                     	;# 
  1974  1FEB                     	;# 
  1975  1FED                     	;# 
  1976  1FEE                     	;# 
  1977  1FEF                     	;# 
  1978  0000                     	;# 
  1979  0001                     	;# 
  1980  0002                     	;# 
  1981  0003                     	;# 
  1982  0004                     	;# 
  1983  0005                     	;# 
  1984  0006                     	;# 
  1985  0007                     	;# 
  1986  0008                     	;# 
  1987  0009                     	;# 
  1988  000A                     	;# 
  1989  000B                     	;# 
  1990  000C                     	;# 
  1991  000D                     	;# 
  1992  000E                     	;# 
  1993  0012                     	;# 
  1994  0013                     	;# 
  1995  0014                     	;# 
  1996  0018                     	;# 
  1997  0019                     	;# 
  1998  001A                     	;# 
  1999  008C                     	;# 
  2000  008C                     	;# 
  2001  008D                     	;# 
  2002  008E                     	;# 
  2003  008E                     	;# 
  2004  008F                     	;# 
  2005  0090                     	;# 
  2006  0090                     	;# 
  2007  0091                     	;# 
  2008  0092                     	;# 
  2009  0092                     	;# 
  2010  0093                     	;# 
  2011  0094                     	;# 
  2012  0094                     	;# 
  2013  0095                     	;# 
  2014  0096                     	;# 
  2015  0096                     	;# 
  2016  0097                     	;# 
  2017  0098                     	;# 
  2018  0099                     	;# 
  2019  009A                     	;# 
  2020  009B                     	;# 
  2021  009B                     	;# 
  2022  009C                     	;# 
  2023  009D                     	;# 
  2024  009D                     	;# 
  2025  009E                     	;# 
  2026  009F                     	;# 
  2027  010C                     	;# 
  2028  010C                     	;# 
  2029  010D                     	;# 
  2030  010E                     	;# 
  2031  010F                     	;# 
  2032  010F                     	;# 
  2033  0110                     	;# 
  2034  0111                     	;# 
  2035  0112                     	;# 
  2036  0113                     	;# 
  2037  0114                     	;# 
  2038  0115                     	;# 
  2039  0116                     	;# 
  2040  0117                     	;# 
  2041  0118                     	;# 
  2042  0119                     	;# 
  2043  0119                     	;# 
  2044  0119                     	;# 
  2045  011A                     	;# 
  2046  011A                     	;# 
  2047  011A                     	;# 
  2048  011B                     	;# 
  2049  011B                     	;# 
  2050  011B                     	;# 
  2051  011B                     	;# 
  2052  011B                     	;# 
  2053  011C                     	;# 
  2054  011C                     	;# 
  2055  011C                     	;# 
  2056  011D                     	;# 
  2057  011D                     	;# 
  2058  011D                     	;# 
  2059  011E                     	;# 
  2060  011E                     	;# 
  2061  011E                     	;# 
  2062  011F                     	;# 
  2063  011F                     	;# 
  2064  011F                     	;# 
  2065  011F                     	;# 
  2066  011F                     	;# 
  2067  018C                     	;# 
  2068  018D                     	;# 
  2069  018E                     	;# 
  2070  018F                     	;# 
  2071  0190                     	;# 
  2072  0191                     	;# 
  2073  0192                     	;# 
  2074  0196                     	;# 
  2075  0197                     	;# 
  2076  0198                     	;# 
  2077  0199                     	;# 
  2078  019A                     	;# 
  2079  019B                     	;# 
  2080  019C                     	;# 
  2081  020C                     	;# 
  2082  020D                     	;# 
  2083  020E                     	;# 
  2084  020E                     	;# 
  2085  020F                     	;# 
  2086  020F                     	;# 
  2087  0210                     	;# 
  2088  0210                     	;# 
  2089  0211                     	;# 
  2090  0211                     	;# 
  2091  0212                     	;# 
  2092  0213                     	;# 
  2093  0214                     	;# 
  2094  0214                     	;# 
  2095  0215                     	;# 
  2096  0215                     	;# 
  2097  0216                     	;# 
  2098  0216                     	;# 
  2099  0217                     	;# 
  2100  0217                     	;# 
  2101  0218                     	;# 
  2102  0219                     	;# 
  2103  021A                     	;# 
  2104  021A                     	;# 
  2105  021B                     	;# 
  2106  021B                     	;# 
  2107  021C                     	;# 
  2108  021C                     	;# 
  2109  021D                     	;# 
  2110  021D                     	;# 
  2111  021E                     	;# 
  2112  021F                     	;# 
  2113  028C                     	;# 
  2114  028C                     	;# 
  2115  028D                     	;# 
  2116  028D                     	;# 
  2117  028E                     	;# 
  2118  028F                     	;# 
  2119  0290                     	;# 
  2120  0291                     	;# 
  2121  0292                     	;# 
  2122  0292                     	;# 
  2123  0293                     	;# 
  2124  0293                     	;# 
  2125  0294                     	;# 
  2126  0295                     	;# 
  2127  0296                     	;# 
  2128  0297                     	;# 
  2129  0298                     	;# 
  2130  0298                     	;# 
  2131  0299                     	;# 
  2132  0299                     	;# 
  2133  029A                     	;# 
  2134  029B                     	;# 
  2135  029C                     	;# 
  2136  029D                     	;# 
  2137  029F                     	;# 
  2138  030C                     	;# 
  2139  030C                     	;# 
  2140  030D                     	;# 
  2141  030E                     	;# 
  2142  030F                     	;# 
  2143  0310                     	;# 
  2144  0310                     	;# 
  2145  0311                     	;# 
  2146  0312                     	;# 
  2147  0313                     	;# 
  2148  0314                     	;# 
  2149  0314                     	;# 
  2150  0315                     	;# 
  2151  0316                     	;# 
  2152  0317                     	;# 
  2153  0318                     	;# 
  2154  0318                     	;# 
  2155  0319                     	;# 
  2156  031A                     	;# 
  2157  031B                     	;# 
  2158  038C                     	;# 
  2159  038C                     	;# 
  2160  038D                     	;# 
  2161  038E                     	;# 
  2162  0390                     	;# 
  2163  0390                     	;# 
  2164  0391                     	;# 
  2165  0392                     	;# 
  2166  048C                     	;# 
  2167  048C                     	;# 
  2168  048D                     	;# 
  2169  048E                     	;# 
  2170  048F                     	;# 
  2171  048F                     	;# 
  2172  0490                     	;# 
  2173  0491                     	;# 
  2174  0492                     	;# 
  2175  0492                     	;# 
  2176  0493                     	;# 
  2177  0494                     	;# 
  2178  0495                     	;# 
  2179  0495                     	;# 
  2180  0496                     	;# 
  2181  0497                     	;# 
  2182  0498                     	;# 
  2183  0499                     	;# 
  2184  049A                     	;# 
  2185  049B                     	;# 
  2186  049C                     	;# 
  2187  049D                     	;# 
  2188  058C                     	;# 
  2189  058C                     	;# 
  2190  058D                     	;# 
  2191  058E                     	;# 
  2192  058F                     	;# 
  2193  058F                     	;# 
  2194  0590                     	;# 
  2195  0591                     	;# 
  2196  0592                     	;# 
  2197  0593                     	;# 
  2198  059C                     	;# 
  2199  059C                     	;# 
  2200  059D                     	;# 
  2201  059D                     	;# 
  2202  059E                     	;# 
  2203  059F                     	;# 
  2204  060C                     	;# 
  2205  060C                     	;# 
  2206  060D                     	;# 
  2207  060D                     	;# 
  2208  060E                     	;# 
  2209  060F                     	;# 
  2210  0610                     	;# 
  2211  0611                     	;# 
  2212  0612                     	;# 
  2213  0613                     	;# 
  2214  0614                     	;# 
  2215  0616                     	;# 
  2216  0616                     	;# 
  2217  0617                     	;# 
  2218  0617                     	;# 
  2219  0618                     	;# 
  2220  0619                     	;# 
  2221  061A                     	;# 
  2222  061B                     	;# 
  2223  061C                     	;# 
  2224  061D                     	;# 
  2225  061E                     	;# 
  2226  070C                     	;# 
  2227  070D                     	;# 
  2228  070E                     	;# 
  2229  070F                     	;# 
  2230  0710                     	;# 
  2231  0711                     	;# 
  2232  0712                     	;# 
  2233  0713                     	;# 
  2234  0714                     	;# 
  2235  0716                     	;# 
  2236  0717                     	;# 
  2237  0718                     	;# 
  2238  0719                     	;# 
  2239  071A                     	;# 
  2240  071B                     	;# 
  2241  071C                     	;# 
  2242  071D                     	;# 
  2243  071E                     	;# 
  2244  0796                     	;# 
  2245  0797                     	;# 
  2246  0798                     	;# 
  2247  0799                     	;# 
  2248  079A                     	;# 
  2249  079B                     	;# 
  2250  079C                     	;# 
  2251  079D                     	;# 
  2252  080C                     	;# 
  2253  080D                     	;# 
  2254  080E                     	;# 
  2255  080F                     	;# 
  2256  0810                     	;# 
  2257  0811                     	;# 
  2258  0812                     	;# 
  2259  0813                     	;# 
  2260  0814                     	;# 
  2261  081A                     	;# 
  2262  081A                     	;# 
  2263  081B                     	;# 
  2264  081C                     	;# 
  2265  081C                     	;# 
  2266  081D                     	;# 
  2267  081E                     	;# 
  2268  081F                     	;# 
  2269  088C                     	;# 
  2270  088D                     	;# 
  2271  088E                     	;# 
  2272  088F                     	;# 
  2273  0890                     	;# 
  2274  0891                     	;# 
  2275  0892                     	;# 
  2276  0893                     	;# 
  2277  0895                     	;# 
  2278  0896                     	;# 
  2279  0897                     	;# 
  2280  0898                     	;# 
  2281  0899                     	;# 
  2282  089A                     	;# 
  2283  089B                     	;# 
  2284  090C                     	;# 
  2285  090E                     	;# 
  2286  090F                     	;# 
  2287  091F                     	;# 
  2288  098F                     	;# 
  2289  098F                     	;# 
  2290  0990                     	;# 
  2291  0991                     	;# 
  2292  0992                     	;# 
  2293  0993                     	;# 
  2294  0994                     	;# 
  2295  0995                     	;# 
  2296  0996                     	;# 
  2297  0997                     	;# 
  2298  1E0F                     	;# 
  2299  1E10                     	;# 
  2300  1E11                     	;# 
  2301  1E12                     	;# 
  2302  1E13                     	;# 
  2303  1E14                     	;# 
  2304  1E15                     	;# 
  2305  1E16                     	;# 
  2306  1E17                     	;# 
  2307  1E18                     	;# 
  2308  1E19                     	;# 
  2309  1E1A                     	;# 
  2310  1E1B                     	;# 
  2311  1E1C                     	;# 
  2312  1E1D                     	;# 
  2313  1E1E                     	;# 
  2314  1E1F                     	;# 
  2315  1E20                     	;# 
  2316  1E21                     	;# 
  2317  1E22                     	;# 
  2318  1E23                     	;# 
  2319  1E24                     	;# 
  2320  1E25                     	;# 
  2321  1E26                     	;# 
  2322  1E27                     	;# 
  2323  1E28                     	;# 
  2324  1E29                     	;# 
  2325  1E2A                     	;# 
  2326  1E2B                     	;# 
  2327  1E2C                     	;# 
  2328  1E2D                     	;# 
  2329  1E2E                     	;# 
  2330  1E2F                     	;# 
  2331  1E30                     	;# 
  2332  1E31                     	;# 
  2333  1E32                     	;# 
  2334  1E33                     	;# 
  2335  1E34                     	;# 
  2336  1E35                     	;# 
  2337  1E36                     	;# 
  2338  1E37                     	;# 
  2339  1E8F                     	;# 
  2340  1E90                     	;# 
  2341  1E91                     	;# 
  2342  1E92                     	;# 
  2343  1E93                     	;# 
  2344  1E94                     	;# 
  2345  1E95                     	;# 
  2346  1E96                     	;# 
  2347  1E97                     	;# 
  2348  1E9C                     	;# 
  2349  1E9D                     	;# 
  2350  1E9E                     	;# 
  2351  1EA1                     	;# 
  2352  1EA2                     	;# 
  2353  1EA3                     	;# 
  2354  1EA4                     	;# 
  2355  1EA9                     	;# 
  2356  1EAA                     	;# 
  2357  1EB1                     	;# 
  2358  1EB2                     	;# 
  2359  1EB8                     	;# 
  2360  1EB9                     	;# 
  2361  1EBA                     	;# 
  2362  1EBB                     	;# 
  2363  1EBC                     	;# 
  2364  1EBD                     	;# 
  2365  1EBE                     	;# 
  2366  1EC3                     	;# 
  2367  1EC5                     	;# 
  2368  1EC6                     	;# 
  2369  1EC7                     	;# 
  2370  1EC8                     	;# 
  2371  1EC9                     	;# 
  2372  1ECA                     	;# 
  2373  1ECB                     	;# 
  2374  1ECB                     	;# 
  2375  1ECB                     	;# 
  2376  1ECC                     	;# 
  2377  1ECC                     	;# 
  2378  1ECC                     	;# 
  2379  1F10                     	;# 
  2380  1F11                     	;# 
  2381  1F12                     	;# 
  2382  1F14                     	;# 
  2383  1F15                     	;# 
  2384  1F1C                     	;# 
  2385  1F1D                     	;# 
  2386  1F1E                     	;# 
  2387  1F1F                     	;# 
  2388  1F20                     	;# 
  2389  1F21                     	;# 
  2390  1F22                     	;# 
  2391  1F23                     	;# 
  2392  1F24                     	;# 
  2393  1F25                     	;# 
  2394  1F26                     	;# 
  2395  1F27                     	;# 
  2396  1F38                     	;# 
  2397  1F39                     	;# 
  2398  1F3A                     	;# 
  2399  1F3B                     	;# 
  2400  1F3C                     	;# 
  2401  1F3D                     	;# 
  2402  1F3E                     	;# 
  2403  1F3F                     	;# 
  2404  1F43                     	;# 
  2405  1F44                     	;# 
  2406  1F45                     	;# 
  2407  1F46                     	;# 
  2408  1F47                     	;# 
  2409  1F48                     	;# 
  2410  1F49                     	;# 
  2411  1F4A                     	;# 
  2412  1F4E                     	;# 
  2413  1F4F                     	;# 
  2414  1F50                     	;# 
  2415  1F51                     	;# 
  2416  1F52                     	;# 
  2417  1F53                     	;# 
  2418  1F54                     	;# 
  2419  1F55                     	;# 
  2420  1FE4                     	;# 
  2421  1FE5                     	;# 
  2422  1FE6                     	;# 
  2423  1FE7                     	;# 
  2424  1FE8                     	;# 
  2425  1FE8                     	;# 
  2426  1FE9                     	;# 
  2427  1FEA                     	;# 
  2428  1FEB                     	;# 
  2429  1FED                     	;# 
  2430  1FEE                     	;# 
  2431  1FEF                     	;# 
  2432  0000                     	;# 
  2433  0001                     	;# 
  2434  0002                     	;# 
  2435  0003                     	;# 
  2436  0004                     	;# 
  2437  0005                     	;# 
  2438  0006                     	;# 
  2439  0007                     	;# 
  2440  0008                     	;# 
  2441  0009                     	;# 
  2442  000A                     	;# 
  2443  000B                     	;# 
  2444  000C                     	;# 
  2445  000D                     	;# 
  2446  000E                     	;# 
  2447  0012                     	;# 
  2448  0013                     	;# 
  2449  0014                     	;# 
  2450  0018                     	;# 
  2451  0019                     	;# 
  2452  001A                     	;# 
  2453  008C                     	;# 
  2454  008C                     	;# 
  2455  008D                     	;# 
  2456  008E                     	;# 
  2457  008E                     	;# 
  2458  008F                     	;# 
  2459  0090                     	;# 
  2460  0090                     	;# 
  2461  0091                     	;# 
  2462  0092                     	;# 
  2463  0092                     	;# 
  2464  0093                     	;# 
  2465  0094                     	;# 
  2466  0094                     	;# 
  2467  0095                     	;# 
  2468  0096                     	;# 
  2469  0096                     	;# 
  2470  0097                     	;# 
  2471  0098                     	;# 
  2472  0099                     	;# 
  2473  009A                     	;# 
  2474  009B                     	;# 
  2475  009B                     	;# 
  2476  009C                     	;# 
  2477  009D                     	;# 
  2478  009D                     	;# 
  2479  009E                     	;# 
  2480  009F                     	;# 
  2481  010C                     	;# 
  2482  010C                     	;# 
  2483  010D                     	;# 
  2484  010E                     	;# 
  2485  010F                     	;# 
  2486  010F                     	;# 
  2487  0110                     	;# 
  2488  0111                     	;# 
  2489  0112                     	;# 
  2490  0113                     	;# 
  2491  0114                     	;# 
  2492  0115                     	;# 
  2493  0116                     	;# 
  2494  0117                     	;# 
  2495  0118                     	;# 
  2496  0119                     	;# 
  2497  0119                     	;# 
  2498  0119                     	;# 
  2499  011A                     	;# 
  2500  011A                     	;# 
  2501  011A                     	;# 
  2502  011B                     	;# 
  2503  011B                     	;# 
  2504  011B                     	;# 
  2505  011B                     	;# 
  2506  011B                     	;# 
  2507  011C                     	;# 
  2508  011C                     	;# 
  2509  011C                     	;# 
  2510  011D                     	;# 
  2511  011D                     	;# 
  2512  011D                     	;# 
  2513  011E                     	;# 
  2514  011E                     	;# 
  2515  011E                     	;# 
  2516  011F                     	;# 
  2517  011F                     	;# 
  2518  011F                     	;# 
  2519  011F                     	;# 
  2520  011F                     	;# 
  2521  018C                     	;# 
  2522  018D                     	;# 
  2523  018E                     	;# 
  2524  018F                     	;# 
  2525  0190                     	;# 
  2526  0191                     	;# 
  2527  0192                     	;# 
  2528  0196                     	;# 
  2529  0197                     	;# 
  2530  0198                     	;# 
  2531  0199                     	;# 
  2532  019A                     	;# 
  2533  019B                     	;# 
  2534  019C                     	;# 
  2535  020C                     	;# 
  2536  020D                     	;# 
  2537  020E                     	;# 
  2538  020E                     	;# 
  2539  020F                     	;# 
  2540  020F                     	;# 
  2541  0210                     	;# 
  2542  0210                     	;# 
  2543  0211                     	;# 
  2544  0211                     	;# 
  2545  0212                     	;# 
  2546  0213                     	;# 
  2547  0214                     	;# 
  2548  0214                     	;# 
  2549  0215                     	;# 
  2550  0215                     	;# 
  2551  0216                     	;# 
  2552  0216                     	;# 
  2553  0217                     	;# 
  2554  0217                     	;# 
  2555  0218                     	;# 
  2556  0219                     	;# 
  2557  021A                     	;# 
  2558  021A                     	;# 
  2559  021B                     	;# 
  2560  021B                     	;# 
  2561  021C                     	;# 
  2562  021C                     	;# 
  2563  021D                     	;# 
  2564  021D                     	;# 
  2565  021E                     	;# 
  2566  021F                     	;# 
  2567  028C                     	;# 
  2568  028C                     	;# 
  2569  028D                     	;# 
  2570  028D                     	;# 
  2571  028E                     	;# 
  2572  028F                     	;# 
  2573  0290                     	;# 
  2574  0291                     	;# 
  2575  0292                     	;# 
  2576  0292                     	;# 
  2577  0293                     	;# 
  2578  0293                     	;# 
  2579  0294                     	;# 
  2580  0295                     	;# 
  2581  0296                     	;# 
  2582  0297                     	;# 
  2583  0298                     	;# 
  2584  0298                     	;# 
  2585  0299                     	;# 
  2586  0299                     	;# 
  2587  029A                     	;# 
  2588  029B                     	;# 
  2589  029C                     	;# 
  2590  029D                     	;# 
  2591  029F                     	;# 
  2592  030C                     	;# 
  2593  030C                     	;# 
  2594  030D                     	;# 
  2595  030E                     	;# 
  2596  030F                     	;# 
  2597  0310                     	;# 
  2598  0310                     	;# 
  2599  0311                     	;# 
  2600  0312                     	;# 
  2601  0313                     	;# 
  2602  0314                     	;# 
  2603  0314                     	;# 
  2604  0315                     	;# 
  2605  0316                     	;# 
  2606  0317                     	;# 
  2607  0318                     	;# 
  2608  0318                     	;# 
  2609  0319                     	;# 
  2610  031A                     	;# 
  2611  031B                     	;# 
  2612  038C                     	;# 
  2613  038C                     	;# 
  2614  038D                     	;# 
  2615  038E                     	;# 
  2616  0390                     	;# 
  2617  0390                     	;# 
  2618  0391                     	;# 
  2619  0392                     	;# 
  2620  048C                     	;# 
  2621  048C                     	;# 
  2622  048D                     	;# 
  2623  048E                     	;# 
  2624  048F                     	;# 
  2625  048F                     	;# 
  2626  0490                     	;# 
  2627  0491                     	;# 
  2628  0492                     	;# 
  2629  0492                     	;# 
  2630  0493                     	;# 
  2631  0494                     	;# 
  2632  0495                     	;# 
  2633  0495                     	;# 
  2634  0496                     	;# 
  2635  0497                     	;# 
  2636  0498                     	;# 
  2637  0499                     	;# 
  2638  049A                     	;# 
  2639  049B                     	;# 
  2640  049C                     	;# 
  2641  049D                     	;# 
  2642  058C                     	;# 
  2643  058C                     	;# 
  2644  058D                     	;# 
  2645  058E                     	;# 
  2646  058F                     	;# 
  2647  058F                     	;# 
  2648  0590                     	;# 
  2649  0591                     	;# 
  2650  0592                     	;# 
  2651  0593                     	;# 
  2652  059C                     	;# 
  2653  059C                     	;# 
  2654  059D                     	;# 
  2655  059D                     	;# 
  2656  059E                     	;# 
  2657  059F                     	;# 
  2658  060C                     	;# 
  2659  060C                     	;# 
  2660  060D                     	;# 
  2661  060D                     	;# 
  2662  060E                     	;# 
  2663  060F                     	;# 
  2664  0610                     	;# 
  2665  0611                     	;# 
  2666  0612                     	;# 
  2667  0613                     	;# 
  2668  0614                     	;# 
  2669  0616                     	;# 
  2670  0616                     	;# 
  2671  0617                     	;# 
  2672  0617                     	;# 
  2673  0618                     	;# 
  2674  0619                     	;# 
  2675  061A                     	;# 
  2676  061B                     	;# 
  2677  061C                     	;# 
  2678  061D                     	;# 
  2679  061E                     	;# 
  2680  070C                     	;# 
  2681  070D                     	;# 
  2682  070E                     	;# 
  2683  070F                     	;# 
  2684  0710                     	;# 
  2685  0711                     	;# 
  2686  0712                     	;# 
  2687  0713                     	;# 
  2688  0714                     	;# 
  2689  0716                     	;# 
  2690  0717                     	;# 
  2691  0718                     	;# 
  2692  0719                     	;# 
  2693  071A                     	;# 
  2694  071B                     	;# 
  2695  071C                     	;# 
  2696  071D                     	;# 
  2697  071E                     	;# 
  2698  0796                     	;# 
  2699  0797                     	;# 
  2700  0798                     	;# 
  2701  0799                     	;# 
  2702  079A                     	;# 
  2703  079B                     	;# 
  2704  079C                     	;# 
  2705  079D                     	;# 
  2706  080C                     	;# 
  2707  080D                     	;# 
  2708  080E                     	;# 
  2709  080F                     	;# 
  2710  0810                     	;# 
  2711  0811                     	;# 
  2712  0812                     	;# 
  2713  0813                     	;# 
  2714  0814                     	;# 
  2715  081A                     	;# 
  2716  081A                     	;# 
  2717  081B                     	;# 
  2718  081C                     	;# 
  2719  081C                     	;# 
  2720  081D                     	;# 
  2721  081E                     	;# 
  2722  081F                     	;# 
  2723  088C                     	;# 
  2724  088D                     	;# 
  2725  088E                     	;# 
  2726  088F                     	;# 
  2727  0890                     	;# 
  2728  0891                     	;# 
  2729  0892                     	;# 
  2730  0893                     	;# 
  2731  0895                     	;# 
  2732  0896                     	;# 
  2733  0897                     	;# 
  2734  0898                     	;# 
  2735  0899                     	;# 
  2736  089A                     	;# 
  2737  089B                     	;# 
  2738  090C                     	;# 
  2739  090E                     	;# 
  2740  090F                     	;# 
  2741  091F                     	;# 
  2742  098F                     	;# 
  2743  098F                     	;# 
  2744  0990                     	;# 
  2745  0991                     	;# 
  2746  0992                     	;# 
  2747  0993                     	;# 
  2748  0994                     	;# 
  2749  0995                     	;# 
  2750  0996                     	;# 
  2751  0997                     	;# 
  2752  1E0F                     	;# 
  2753  1E10                     	;# 
  2754  1E11                     	;# 
  2755  1E12                     	;# 
  2756  1E13                     	;# 
  2757  1E14                     	;# 
  2758  1E15                     	;# 
  2759  1E16                     	;# 
  2760  1E17                     	;# 
  2761  1E18                     	;# 
  2762  1E19                     	;# 
  2763  1E1A                     	;# 
  2764  1E1B                     	;# 
  2765  1E1C                     	;# 
  2766  1E1D                     	;# 
  2767  1E1E                     	;# 
  2768  1E1F                     	;# 
  2769  1E20                     	;# 
  2770  1E21                     	;# 
  2771  1E22                     	;# 
  2772  1E23                     	;# 
  2773  1E24                     	;# 
  2774  1E25                     	;# 
  2775  1E26                     	;# 
  2776  1E27                     	;# 
  2777  1E28                     	;# 
  2778  1E29                     	;# 
  2779  1E2A                     	;# 
  2780  1E2B                     	;# 
  2781  1E2C                     	;# 
  2782  1E2D                     	;# 
  2783  1E2E                     	;# 
  2784  1E2F                     	;# 
  2785  1E30                     	;# 
  2786  1E31                     	;# 
  2787  1E32                     	;# 
  2788  1E33                     	;# 
  2789  1E34                     	;# 
  2790  1E35                     	;# 
  2791  1E36                     	;# 
  2792  1E37                     	;# 
  2793  1E8F                     	;# 
  2794  1E90                     	;# 
  2795  1E91                     	;# 
  2796  1E92                     	;# 
  2797  1E93                     	;# 
  2798  1E94                     	;# 
  2799  1E95                     	;# 
  2800  1E96                     	;# 
  2801  1E97                     	;# 
  2802  1E9C                     	;# 
  2803  1E9D                     	;# 
  2804  1E9E                     	;# 
  2805  1EA1                     	;# 
  2806  1EA2                     	;# 
  2807  1EA3                     	;# 
  2808  1EA4                     	;# 
  2809  1EA9                     	;# 
  2810  1EAA                     	;# 
  2811  1EB1                     	;# 
  2812  1EB2                     	;# 
  2813  1EB8                     	;# 
  2814  1EB9                     	;# 
  2815  1EBA                     	;# 
  2816  1EBB                     	;# 
  2817  1EBC                     	;# 
  2818  1EBD                     	;# 
  2819  1EBE                     	;# 
  2820  1EC3                     	;# 
  2821  1EC5                     	;# 
  2822  1EC6                     	;# 
  2823  1EC7                     	;# 
  2824  1EC8                     	;# 
  2825  1EC9                     	;# 
  2826  1ECA                     	;# 
  2827  1ECB                     	;# 
  2828  1ECB                     	;# 
  2829  1ECB                     	;# 
  2830  1ECC                     	;# 
  2831  1ECC                     	;# 
  2832  1ECC                     	;# 
  2833  1F10                     	;# 
  2834  1F11                     	;# 
  2835  1F12                     	;# 
  2836  1F14                     	;# 
  2837  1F15                     	;# 
  2838  1F1C                     	;# 
  2839  1F1D                     	;# 
  2840  1F1E                     	;# 
  2841  1F1F                     	;# 
  2842  1F20                     	;# 
  2843  1F21                     	;# 
  2844  1F22                     	;# 
  2845  1F23                     	;# 
  2846  1F24                     	;# 
  2847  1F25                     	;# 
  2848  1F26                     	;# 
  2849  1F27                     	;# 
  2850  1F38                     	;# 
  2851  1F39                     	;# 
  2852  1F3A                     	;# 
  2853  1F3B                     	;# 
  2854  1F3C                     	;# 
  2855  1F3D                     	;# 
  2856  1F3E                     	;# 
  2857  1F3F                     	;# 
  2858  1F43                     	;# 
  2859  1F44                     	;# 
  2860  1F45                     	;# 
  2861  1F46                     	;# 
  2862  1F47                     	;# 
  2863  1F48                     	;# 
  2864  1F49                     	;# 
  2865  1F4A                     	;# 
  2866  1F4E                     	;# 
  2867  1F4F                     	;# 
  2868  1F50                     	;# 
  2869  1F51                     	;# 
  2870  1F52                     	;# 
  2871  1F53                     	;# 
  2872  1F54                     	;# 
  2873  1F55                     	;# 
  2874  1FE4                     	;# 
  2875  1FE5                     	;# 
  2876  1FE6                     	;# 
  2877  1FE7                     	;# 
  2878  1FE8                     	;# 
  2879  1FE8                     	;# 
  2880  1FE9                     	;# 
  2881  1FEA                     	;# 
  2882  1FEB                     	;# 
  2883  1FED                     	;# 
  2884  1FEE                     	;# 
  2885  1FEF                     	;# 
  2886  0000                     	;# 
  2887  0001                     	;# 
  2888  0002                     	;# 
  2889  0003                     	;# 
  2890  0004                     	;# 
  2891  0005                     	;# 
  2892  0006                     	;# 
  2893  0007                     	;# 
  2894  0008                     	;# 
  2895  0009                     	;# 
  2896  000A                     	;# 
  2897  000B                     	;# 
  2898  000C                     	;# 
  2899  000D                     	;# 
  2900  000E                     	;# 
  2901  0012                     	;# 
  2902  0013                     	;# 
  2903  0014                     	;# 
  2904  0018                     	;# 
  2905  0019                     	;# 
  2906  001A                     	;# 
  2907  008C                     	;# 
  2908  008C                     	;# 
  2909  008D                     	;# 
  2910  008E                     	;# 
  2911  008E                     	;# 
  2912  008F                     	;# 
  2913  0090                     	;# 
  2914  0090                     	;# 
  2915  0091                     	;# 
  2916  0092                     	;# 
  2917  0092                     	;# 
  2918  0093                     	;# 
  2919  0094                     	;# 
  2920  0094                     	;# 
  2921  0095                     	;# 
  2922  0096                     	;# 
  2923  0096                     	;# 
  2924  0097                     	;# 
  2925  0098                     	;# 
  2926  0099                     	;# 
  2927  009A                     	;# 
  2928  009B                     	;# 
  2929  009B                     	;# 
  2930  009C                     	;# 
  2931  009D                     	;# 
  2932  009D                     	;# 
  2933  009E                     	;# 
  2934  009F                     	;# 
  2935  010C                     	;# 
  2936  010C                     	;# 
  2937  010D                     	;# 
  2938  010E                     	;# 
  2939  010F                     	;# 
  2940  010F                     	;# 
  2941  0110                     	;# 
  2942  0111                     	;# 
  2943  0112                     	;# 
  2944  0113                     	;# 
  2945  0114                     	;# 
  2946  0115                     	;# 
  2947  0116                     	;# 
  2948  0117                     	;# 
  2949  0118                     	;# 
  2950  0119                     	;# 
  2951  0119                     	;# 
  2952  0119                     	;# 
  2953  011A                     	;# 
  2954  011A                     	;# 
  2955  011A                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011B                     	;# 
  2959  011B                     	;# 
  2960  011B                     	;# 
  2961  011C                     	;# 
  2962  011C                     	;# 
  2963  011C                     	;# 
  2964  011D                     	;# 
  2965  011D                     	;# 
  2966  011D                     	;# 
  2967  011E                     	;# 
  2968  011E                     	;# 
  2969  011E                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  011F                     	;# 
  2973  011F                     	;# 
  2974  011F                     	;# 
  2975  018C                     	;# 
  2976  018D                     	;# 
  2977  018E                     	;# 
  2978  018F                     	;# 
  2979  0190                     	;# 
  2980  0191                     	;# 
  2981  0192                     	;# 
  2982  0196                     	;# 
  2983  0197                     	;# 
  2984  0198                     	;# 
  2985  0199                     	;# 
  2986  019A                     	;# 
  2987  019B                     	;# 
  2988  019C                     	;# 
  2989  020C                     	;# 
  2990  020D                     	;# 
  2991  020E                     	;# 
  2992  020E                     	;# 
  2993  020F                     	;# 
  2994  020F                     	;# 
  2995  0210                     	;# 
  2996  0210                     	;# 
  2997  0211                     	;# 
  2998  0211                     	;# 
  2999  0212                     	;# 
  3000  0213                     	;# 
  3001  0214                     	;# 
  3002  0214                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0216                     	;# 
  3006  0216                     	;# 
  3007  0217                     	;# 
  3008  0217                     	;# 
  3009  0218                     	;# 
  3010  0219                     	;# 
  3011  021A                     	;# 
  3012  021A                     	;# 
  3013  021B                     	;# 
  3014  021B                     	;# 
  3015  021C                     	;# 
  3016  021C                     	;# 
  3017  021D                     	;# 
  3018  021D                     	;# 
  3019  021E                     	;# 
  3020  021F                     	;# 
  3021  028C                     	;# 
  3022  028C                     	;# 
  3023  028D                     	;# 
  3024  028D                     	;# 
  3025  028E                     	;# 
  3026  028F                     	;# 
  3027  0290                     	;# 
  3028  0291                     	;# 
  3029  0292                     	;# 
  3030  0292                     	;# 
  3031  0293                     	;# 
  3032  0293                     	;# 
  3033  0294                     	;# 
  3034  0295                     	;# 
  3035  0296                     	;# 
  3036  0297                     	;# 
  3037  0298                     	;# 
  3038  0298                     	;# 
  3039  0299                     	;# 
  3040  0299                     	;# 
  3041  029A                     	;# 
  3042  029B                     	;# 
  3043  029C                     	;# 
  3044  029D                     	;# 
  3045  029F                     	;# 
  3046  030C                     	;# 
  3047  030C                     	;# 
  3048  030D                     	;# 
  3049  030E                     	;# 
  3050  030F                     	;# 
  3051  0310                     	;# 
  3052  0310                     	;# 
  3053  0311                     	;# 
  3054  0312                     	;# 
  3055  0313                     	;# 
  3056  0314                     	;# 
  3057  0314                     	;# 
  3058  0315                     	;# 
  3059  0316                     	;# 
  3060  0317                     	;# 
  3061  0318                     	;# 
  3062  0318                     	;# 
  3063  0319                     	;# 
  3064  031A                     	;# 
  3065  031B                     	;# 
  3066  038C                     	;# 
  3067  038C                     	;# 
  3068  038D                     	;# 
  3069  038E                     	;# 
  3070  0390                     	;# 
  3071  0390                     	;# 
  3072  0391                     	;# 
  3073  0392                     	;# 
  3074  048C                     	;# 
  3075  048C                     	;# 
  3076  048D                     	;# 
  3077  048E                     	;# 
  3078  048F                     	;# 
  3079  048F                     	;# 
  3080  0490                     	;# 
  3081  0491                     	;# 
  3082  0492                     	;# 
  3083  0492                     	;# 
  3084  0493                     	;# 
  3085  0494                     	;# 
  3086  0495                     	;# 
  3087  0495                     	;# 
  3088  0496                     	;# 
  3089  0497                     	;# 
  3090  0498                     	;# 
  3091  0499                     	;# 
  3092  049A                     	;# 
  3093  049B                     	;# 
  3094  049C                     	;# 
  3095  049D                     	;# 
  3096  058C                     	;# 
  3097  058C                     	;# 
  3098  058D                     	;# 
  3099  058E                     	;# 
  3100  058F                     	;# 
  3101  058F                     	;# 
  3102  0590                     	;# 
  3103  0591                     	;# 
  3104  0592                     	;# 
  3105  0593                     	;# 
  3106  059C                     	;# 
  3107  059C                     	;# 
  3108  059D                     	;# 
  3109  059D                     	;# 
  3110  059E                     	;# 
  3111  059F                     	;# 
  3112  060C                     	;# 
  3113  060C                     	;# 
  3114  060D                     	;# 
  3115  060D                     	;# 
  3116  060E                     	;# 
  3117  060F                     	;# 
  3118  0610                     	;# 
  3119  0611                     	;# 
  3120  0612                     	;# 
  3121  0613                     	;# 
  3122  0614                     	;# 
  3123  0616                     	;# 
  3124  0616                     	;# 
  3125  0617                     	;# 
  3126  0617                     	;# 
  3127  0618                     	;# 
  3128  0619                     	;# 
  3129  061A                     	;# 
  3130  061B                     	;# 
  3131  061C                     	;# 
  3132  061D                     	;# 
  3133  061E                     	;# 
  3134  070C                     	;# 
  3135  070D                     	;# 
  3136  070E                     	;# 
  3137  070F                     	;# 
  3138  0710                     	;# 
  3139  0711                     	;# 
  3140  0712                     	;# 
  3141  0713                     	;# 
  3142  0714                     	;# 
  3143  0716                     	;# 
  3144  0717                     	;# 
  3145  0718                     	;# 
  3146  0719                     	;# 
  3147  071A                     	;# 
  3148  071B                     	;# 
  3149  071C                     	;# 
  3150  071D                     	;# 
  3151  071E                     	;# 
  3152  0796                     	;# 
  3153  0797                     	;# 
  3154  0798                     	;# 
  3155  0799                     	;# 
  3156  079A                     	;# 
  3157  079B                     	;# 
  3158  079C                     	;# 
  3159  079D                     	;# 
  3160  080C                     	;# 
  3161  080D                     	;# 
  3162  080E                     	;# 
  3163  080F                     	;# 
  3164  0810                     	;# 
  3165  0811                     	;# 
  3166  0812                     	;# 
  3167  0813                     	;# 
  3168  0814                     	;# 
  3169  081A                     	;# 
  3170  081A                     	;# 
  3171  081B                     	;# 
  3172  081C                     	;# 
  3173  081C                     	;# 
  3174  081D                     	;# 
  3175  081E                     	;# 
  3176  081F                     	;# 
  3177  088C                     	;# 
  3178  088D                     	;# 
  3179  088E                     	;# 
  3180  088F                     	;# 
  3181  0890                     	;# 
  3182  0891                     	;# 
  3183  0892                     	;# 
  3184  0893                     	;# 
  3185  0895                     	;# 
  3186  0896                     	;# 
  3187  0897                     	;# 
  3188  0898                     	;# 
  3189  0899                     	;# 
  3190  089A                     	;# 
  3191  089B                     	;# 
  3192  090C                     	;# 
  3193  090E                     	;# 
  3194  090F                     	;# 
  3195  091F                     	;# 
  3196  098F                     	;# 
  3197  098F                     	;# 
  3198  0990                     	;# 
  3199  0991                     	;# 
  3200  0992                     	;# 
  3201  0993                     	;# 
  3202  0994                     	;# 
  3203  0995                     	;# 
  3204  0996                     	;# 
  3205  0997                     	;# 
  3206  1E0F                     	;# 
  3207  1E10                     	;# 
  3208  1E11                     	;# 
  3209  1E12                     	;# 
  3210  1E13                     	;# 
  3211  1E14                     	;# 
  3212  1E15                     	;# 
  3213  1E16                     	;# 
  3214  1E17                     	;# 
  3215  1E18                     	;# 
  3216  1E19                     	;# 
  3217  1E1A                     	;# 
  3218  1E1B                     	;# 
  3219  1E1C                     	;# 
  3220  1E1D                     	;# 
  3221  1E1E                     	;# 
  3222  1E1F                     	;# 
  3223  1E20                     	;# 
  3224  1E21                     	;# 
  3225  1E22                     	;# 
  3226  1E23                     	;# 
  3227  1E24                     	;# 
  3228  1E25                     	;# 
  3229  1E26                     	;# 
  3230  1E27                     	;# 
  3231  1E28                     	;# 
  3232  1E29                     	;# 
  3233  1E2A                     	;# 
  3234  1E2B                     	;# 
  3235  1E2C                     	;# 
  3236  1E2D                     	;# 
  3237  1E2E                     	;# 
  3238  1E2F                     	;# 
  3239  1E30                     	;# 
  3240  1E31                     	;# 
  3241  1E32                     	;# 
  3242  1E33                     	;# 
  3243  1E34                     	;# 
  3244  1E35                     	;# 
  3245  1E36                     	;# 
  3246  1E37                     	;# 
  3247  1E8F                     	;# 
  3248  1E90                     	;# 
  3249  1E91                     	;# 
  3250  1E92                     	;# 
  3251  1E93                     	;# 
  3252  1E94                     	;# 
  3253  1E95                     	;# 
  3254  1E96                     	;# 
  3255  1E97                     	;# 
  3256  1E9C                     	;# 
  3257  1E9D                     	;# 
  3258  1E9E                     	;# 
  3259  1EA1                     	;# 
  3260  1EA2                     	;# 
  3261  1EA3                     	;# 
  3262  1EA4                     	;# 
  3263  1EA9                     	;# 
  3264  1EAA                     	;# 
  3265  1EB1                     	;# 
  3266  1EB2                     	;# 
  3267  1EB8                     	;# 
  3268  1EB9                     	;# 
  3269  1EBA                     	;# 
  3270  1EBB                     	;# 
  3271  1EBC                     	;# 
  3272  1EBD                     	;# 
  3273  1EBE                     	;# 
  3274  1EC3                     	;# 
  3275  1EC5                     	;# 
  3276  1EC6                     	;# 
  3277  1EC7                     	;# 
  3278  1EC8                     	;# 
  3279  1EC9                     	;# 
  3280  1ECA                     	;# 
  3281  1ECB                     	;# 
  3282  1ECB                     	;# 
  3283  1ECB                     	;# 
  3284  1ECC                     	;# 
  3285  1ECC                     	;# 
  3286  1ECC                     	;# 
  3287  1F10                     	;# 
  3288  1F11                     	;# 
  3289  1F12                     	;# 
  3290  1F14                     	;# 
  3291  1F15                     	;# 
  3292  1F1C                     	;# 
  3293  1F1D                     	;# 
  3294  1F1E                     	;# 
  3295  1F1F                     	;# 
  3296  1F20                     	;# 
  3297  1F21                     	;# 
  3298  1F22                     	;# 
  3299  1F23                     	;# 
  3300  1F24                     	;# 
  3301  1F25                     	;# 
  3302  1F26                     	;# 
  3303  1F27                     	;# 
  3304  1F38                     	;# 
  3305  1F39                     	;# 
  3306  1F3A                     	;# 
  3307  1F3B                     	;# 
  3308  1F3C                     	;# 
  3309  1F3D                     	;# 
  3310  1F3E                     	;# 
  3311  1F3F                     	;# 
  3312  1F43                     	;# 
  3313  1F44                     	;# 
  3314  1F45                     	;# 
  3315  1F46                     	;# 
  3316  1F47                     	;# 
  3317  1F48                     	;# 
  3318  1F49                     	;# 
  3319  1F4A                     	;# 
  3320  1F4E                     	;# 
  3321  1F4F                     	;# 
  3322  1F50                     	;# 
  3323  1F51                     	;# 
  3324  1F52                     	;# 
  3325  1F53                     	;# 
  3326  1F54                     	;# 
  3327  1F55                     	;# 
  3328  1FE4                     	;# 
  3329  1FE5                     	;# 
  3330  1FE6                     	;# 
  3331  1FE7                     	;# 
  3332  1FE8                     	;# 
  3333  1FE8                     	;# 
  3334  1FE9                     	;# 
  3335  1FEA                     	;# 
  3336  1FEB                     	;# 
  3337  1FED                     	;# 
  3338  1FEE                     	;# 
  3339  1FEF                     	;# 
  3340  0000                     	;# 
  3341  0001                     	;# 
  3342  0002                     	;# 
  3343  0003                     	;# 
  3344  0004                     	;# 
  3345  0005                     	;# 
  3346  0006                     	;# 
  3347  0007                     	;# 
  3348  0008                     	;# 
  3349  0009                     	;# 
  3350  000A                     	;# 
  3351  000B                     	;# 
  3352  000C                     	;# 
  3353  000D                     	;# 
  3354  000E                     	;# 
  3355  0012                     	;# 
  3356  0013                     	;# 
  3357  0014                     	;# 
  3358  0018                     	;# 
  3359  0019                     	;# 
  3360  001A                     	;# 
  3361  008C                     	;# 
  3362  008C                     	;# 
  3363  008D                     	;# 
  3364  008E                     	;# 
  3365  008E                     	;# 
  3366  008F                     	;# 
  3367  0090                     	;# 
  3368  0090                     	;# 
  3369  0091                     	;# 
  3370  0092                     	;# 
  3371  0092                     	;# 
  3372  0093                     	;# 
  3373  0094                     	;# 
  3374  0094                     	;# 
  3375  0095                     	;# 
  3376  0096                     	;# 
  3377  0096                     	;# 
  3378  0097                     	;# 
  3379  0098                     	;# 
  3380  0099                     	;# 
  3381  009A                     	;# 
  3382  009B                     	;# 
  3383  009B                     	;# 
  3384  009C                     	;# 
  3385  009D                     	;# 
  3386  009D                     	;# 
  3387  009E                     	;# 
  3388  009F                     	;# 
  3389  010C                     	;# 
  3390  010C                     	;# 
  3391  010D                     	;# 
  3392  010E                     	;# 
  3393  010F                     	;# 
  3394  010F                     	;# 
  3395  0110                     	;# 
  3396  0111                     	;# 
  3397  0112                     	;# 
  3398  0113                     	;# 
  3399  0114                     	;# 
  3400  0115                     	;# 
  3401  0116                     	;# 
  3402  0117                     	;# 
  3403  0118                     	;# 
  3404  0119                     	;# 
  3405  0119                     	;# 
  3406  0119                     	;# 
  3407  011A                     	;# 
  3408  011A                     	;# 
  3409  011A                     	;# 
  3410  011B                     	;# 
  3411  011B                     	;# 
  3412  011B                     	;# 
  3413  011B                     	;# 
  3414  011B                     	;# 
  3415  011C                     	;# 
  3416  011C                     	;# 
  3417  011C                     	;# 
  3418  011D                     	;# 
  3419  011D                     	;# 
  3420  011D                     	;# 
  3421  011E                     	;# 
  3422  011E                     	;# 
  3423  011E                     	;# 
  3424  011F                     	;# 
  3425  011F                     	;# 
  3426  011F                     	;# 
  3427  011F                     	;# 
  3428  011F                     	;# 
  3429  018C                     	;# 
  3430  018D                     	;# 
  3431  018E                     	;# 
  3432  018F                     	;# 
  3433  0190                     	;# 
  3434  0191                     	;# 
  3435  0192                     	;# 
  3436  0196                     	;# 
  3437  0197                     	;# 
  3438  0198                     	;# 
  3439  0199                     	;# 
  3440  019A                     	;# 
  3441  019B                     	;# 
  3442  019C                     	;# 
  3443  020C                     	;# 
  3444  020D                     	;# 
  3445  020E                     	;# 
  3446  020E                     	;# 
  3447  020F                     	;# 
  3448  020F                     	;# 
  3449  0210                     	;# 
  3450  0210                     	;# 
  3451  0211                     	;# 
  3452  0211                     	;# 
  3453  0212                     	;# 
  3454  0213                     	;# 
  3455  0214                     	;# 
  3456  0214                     	;# 
  3457  0215                     	;# 
  3458  0215                     	;# 
  3459  0216                     	;# 
  3460  0216                     	;# 
  3461  0217                     	;# 
  3462  0217                     	;# 
  3463  0218                     	;# 
  3464  0219                     	;# 
  3465  021A                     	;# 
  3466  021A                     	;# 
  3467  021B                     	;# 
  3468  021B                     	;# 
  3469  021C                     	;# 
  3470  021C                     	;# 
  3471  021D                     	;# 
  3472  021D                     	;# 
  3473  021E                     	;# 
  3474  021F                     	;# 
  3475  028C                     	;# 
  3476  028C                     	;# 
  3477  028D                     	;# 
  3478  028D                     	;# 
  3479  028E                     	;# 
  3480  028F                     	;# 
  3481  0290                     	;# 
  3482  0291                     	;# 
  3483  0292                     	;# 
  3484  0292                     	;# 
  3485  0293                     	;# 
  3486  0293                     	;# 
  3487  0294                     	;# 
  3488  0295                     	;# 
  3489  0296                     	;# 
  3490  0297                     	;# 
  3491  0298                     	;# 
  3492  0298                     	;# 
  3493  0299                     	;# 
  3494  0299                     	;# 
  3495  029A                     	;# 
  3496  029B                     	;# 
  3497  029C                     	;# 
  3498  029D                     	;# 
  3499  029F                     	;# 
  3500  030C                     	;# 
  3501  030C                     	;# 
  3502  030D                     	;# 
  3503  030E                     	;# 
  3504  030F                     	;# 
  3505  0310                     	;# 
  3506  0310                     	;# 
  3507  0311                     	;# 
  3508  0312                     	;# 
  3509  0313                     	;# 
  3510  0314                     	;# 
  3511  0314                     	;# 
  3512  0315                     	;# 
  3513  0316                     	;# 
  3514  0317                     	;# 
  3515  0318                     	;# 
  3516  0318                     	;# 
  3517  0319                     	;# 
  3518  031A                     	;# 
  3519  031B                     	;# 
  3520  038C                     	;# 
  3521  038C                     	;# 
  3522  038D                     	;# 
  3523  038E                     	;# 
  3524  0390                     	;# 
  3525  0390                     	;# 
  3526  0391                     	;# 
  3527  0392                     	;# 
  3528  048C                     	;# 
  3529  048C                     	;# 
  3530  048D                     	;# 
  3531  048E                     	;# 
  3532  048F                     	;# 
  3533  048F                     	;# 
  3534  0490                     	;# 
  3535  0491                     	;# 
  3536  0492                     	;# 
  3537  0492                     	;# 
  3538  0493                     	;# 
  3539  0494                     	;# 
  3540  0495                     	;# 
  3541  0495                     	;# 
  3542  0496                     	;# 
  3543  0497                     	;# 
  3544  0498                     	;# 
  3545  0499                     	;# 
  3546  049A                     	;# 
  3547  049B                     	;# 
  3548  049C                     	;# 
  3549  049D                     	;# 
  3550  058C                     	;# 
  3551  058C                     	;# 
  3552  058D                     	;# 
  3553  058E                     	;# 
  3554  058F                     	;# 
  3555  058F                     	;# 
  3556  0590                     	;# 
  3557  0591                     	;# 
  3558  0592                     	;# 
  3559  0593                     	;# 
  3560  059C                     	;# 
  3561  059C                     	;# 
  3562  059D                     	;# 
  3563  059D                     	;# 
  3564  059E                     	;# 
  3565  059F                     	;# 
  3566  060C                     	;# 
  3567  060C                     	;# 
  3568  060D                     	;# 
  3569  060D                     	;# 
  3570  060E                     	;# 
  3571  060F                     	;# 
  3572  0610                     	;# 
  3573  0611                     	;# 
  3574  0612                     	;# 
  3575  0613                     	;# 
  3576  0614                     	;# 
  3577  0616                     	;# 
  3578  0616                     	;# 
  3579  0617                     	;# 
  3580  0617                     	;# 
  3581  0618                     	;# 
  3582  0619                     	;# 
  3583  061A                     	;# 
  3584  061B                     	;# 
  3585  061C                     	;# 
  3586  061D                     	;# 
  3587  061E                     	;# 
  3588  070C                     	;# 
  3589  070D                     	;# 
  3590  070E                     	;# 
  3591  070F                     	;# 
  3592  0710                     	;# 
  3593  0711                     	;# 
  3594  0712                     	;# 
  3595  0713                     	;# 
  3596  0714                     	;# 
  3597  0716                     	;# 
  3598  0717                     	;# 
  3599  0718                     	;# 
  3600  0719                     	;# 
  3601  071A                     	;# 
  3602  071B                     	;# 
  3603  071C                     	;# 
  3604  071D                     	;# 
  3605  071E                     	;# 
  3606  0796                     	;# 
  3607  0797                     	;# 
  3608  0798                     	;# 
  3609  0799                     	;# 
  3610  079A                     	;# 
  3611  079B                     	;# 
  3612  079C                     	;# 
  3613  079D                     	;# 
  3614  080C                     	;# 
  3615  080D                     	;# 
  3616  080E                     	;# 
  3617  080F                     	;# 
  3618  0810                     	;# 
  3619  0811                     	;# 
  3620  0812                     	;# 
  3621  0813                     	;# 
  3622  0814                     	;# 
  3623  081A                     	;# 
  3624  081A                     	;# 
  3625  081B                     	;# 
  3626  081C                     	;# 
  3627  081C                     	;# 
  3628  081D                     	;# 
  3629  081E                     	;# 
  3630  081F                     	;# 
  3631  088C                     	;# 
  3632  088D                     	;# 
  3633  088E                     	;# 
  3634  088F                     	;# 
  3635  0890                     	;# 
  3636  0891                     	;# 
  3637  0892                     	;# 
  3638  0893                     	;# 
  3639  0895                     	;# 
  3640  0896                     	;# 
  3641  0897                     	;# 
  3642  0898                     	;# 
  3643  0899                     	;# 
  3644  089A                     	;# 
  3645  089B                     	;# 
  3646  090C                     	;# 
  3647  090E                     	;# 
  3648  090F                     	;# 
  3649  091F                     	;# 
  3650  098F                     	;# 
  3651  098F                     	;# 
  3652  0990                     	;# 
  3653  0991                     	;# 
  3654  0992                     	;# 
  3655  0993                     	;# 
  3656  0994                     	;# 
  3657  0995                     	;# 
  3658  0996                     	;# 
  3659  0997                     	;# 
  3660  1E0F                     	;# 
  3661  1E10                     	;# 
  3662  1E11                     	;# 
  3663  1E12                     	;# 
  3664  1E13                     	;# 
  3665  1E14                     	;# 
  3666  1E15                     	;# 
  3667  1E16                     	;# 
  3668  1E17                     	;# 
  3669  1E18                     	;# 
  3670  1E19                     	;# 
  3671  1E1A                     	;# 
  3672  1E1B                     	;# 
  3673  1E1C                     	;# 
  3674  1E1D                     	;# 
  3675  1E1E                     	;# 
  3676  1E1F                     	;# 
  3677  1E20                     	;# 
  3678  1E21                     	;# 
  3679  1E22                     	;# 
  3680  1E23                     	;# 
  3681  1E24                     	;# 
  3682  1E25                     	;# 
  3683  1E26                     	;# 
  3684  1E27                     	;# 
  3685  1E28                     	;# 
  3686  1E29                     	;# 
  3687  1E2A                     	;# 
  3688  1E2B                     	;# 
  3689  1E2C                     	;# 
  3690  1E2D                     	;# 
  3691  1E2E                     	;# 
  3692  1E2F                     	;# 
  3693  1E30                     	;# 
  3694  1E31                     	;# 
  3695  1E32                     	;# 
  3696  1E33                     	;# 
  3697  1E34                     	;# 
  3698  1E35                     	;# 
  3699  1E36                     	;# 
  3700  1E37                     	;# 
  3701  1E8F                     	;# 
  3702  1E90                     	;# 
  3703  1E91                     	;# 
  3704  1E92                     	;# 
  3705  1E93                     	;# 
  3706  1E94                     	;# 
  3707  1E95                     	;# 
  3708  1E96                     	;# 
  3709  1E97                     	;# 
  3710  1E9C                     	;# 
  3711  1E9D                     	;# 
  3712  1E9E                     	;# 
  3713  1EA1                     	;# 
  3714  1EA2                     	;# 
  3715  1EA3                     	;# 
  3716  1EA4                     	;# 
  3717  1EA9                     	;# 
  3718  1EAA                     	;# 
  3719  1EB1                     	;# 
  3720  1EB2                     	;# 
  3721  1EB8                     	;# 
  3722  1EB9                     	;# 
  3723  1EBA                     	;# 
  3724  1EBB                     	;# 
  3725  1EBC                     	;# 
  3726  1EBD                     	;# 
  3727  1EBE                     	;# 
  3728  1EC3                     	;# 
  3729  1EC5                     	;# 
  3730  1EC6                     	;# 
  3731  1EC7                     	;# 
  3732  1EC8                     	;# 
  3733  1EC9                     	;# 
  3734  1ECA                     	;# 
  3735  1ECB                     	;# 
  3736  1ECB                     	;# 
  3737  1ECB                     	;# 
  3738  1ECC                     	;# 
  3739  1ECC                     	;# 
  3740  1ECC                     	;# 
  3741  1F10                     	;# 
  3742  1F11                     	;# 
  3743  1F12                     	;# 
  3744  1F14                     	;# 
  3745  1F15                     	;# 
  3746  1F1C                     	;# 
  3747  1F1D                     	;# 
  3748  1F1E                     	;# 
  3749  1F1F                     	;# 
  3750  1F20                     	;# 
  3751  1F21                     	;# 
  3752  1F22                     	;# 
  3753  1F23                     	;# 
  3754  1F24                     	;# 
  3755  1F25                     	;# 
  3756  1F26                     	;# 
  3757  1F27                     	;# 
  3758  1F38                     	;# 
  3759  1F39                     	;# 
  3760  1F3A                     	;# 
  3761  1F3B                     	;# 
  3762  1F3C                     	;# 
  3763  1F3D                     	;# 
  3764  1F3E                     	;# 
  3765  1F3F                     	;# 
  3766  1F43                     	;# 
  3767  1F44                     	;# 
  3768  1F45                     	;# 
  3769  1F46                     	;# 
  3770  1F47                     	;# 
  3771  1F48                     	;# 
  3772  1F49                     	;# 
  3773  1F4A                     	;# 
  3774  1F4E                     	;# 
  3775  1F4F                     	;# 
  3776  1F50                     	;# 
  3777  1F51                     	;# 
  3778  1F52                     	;# 
  3779  1F53                     	;# 
  3780  1F54                     	;# 
  3781  1F55                     	;# 
  3782  1FE4                     	;# 
  3783  1FE5                     	;# 
  3784  1FE6                     	;# 
  3785  1FE7                     	;# 
  3786  1FE8                     	;# 
  3787  1FE8                     	;# 
  3788  1FE9                     	;# 
  3789  1FEA                     	;# 
  3790  1FEB                     	;# 
  3791  1FED                     	;# 
  3792  1FEE                     	;# 
  3793  1FEF                     	;# 
  3794  0000                     	;# 
  3795  0001                     	;# 
  3796  0002                     	;# 
  3797  0003                     	;# 
  3798  0004                     	;# 
  3799  0005                     	;# 
  3800  0006                     	;# 
  3801  0007                     	;# 
  3802  0008                     	;# 
  3803  0009                     	;# 
  3804  000A                     	;# 
  3805  000B                     	;# 
  3806  000C                     	;# 
  3807  000D                     	;# 
  3808  000E                     	;# 
  3809  0012                     	;# 
  3810  0013                     	;# 
  3811  0014                     	;# 
  3812  0018                     	;# 
  3813  0019                     	;# 
  3814  001A                     	;# 
  3815  008C                     	;# 
  3816  008C                     	;# 
  3817  008D                     	;# 
  3818  008E                     	;# 
  3819  008E                     	;# 
  3820  008F                     	;# 
  3821  0090                     	;# 
  3822  0090                     	;# 
  3823  0091                     	;# 
  3824  0092                     	;# 
  3825  0092                     	;# 
  3826  0093                     	;# 
  3827  0094                     	;# 
  3828  0094                     	;# 
  3829  0095                     	;# 
  3830  0096                     	;# 
  3831  0096                     	;# 
  3832  0097                     	;# 
  3833  0098                     	;# 
  3834  0099                     	;# 
  3835  009A                     	;# 
  3836  009B                     	;# 
  3837  009B                     	;# 
  3838  009C                     	;# 
  3839  009D                     	;# 
  3840  009D                     	;# 
  3841  009E                     	;# 
  3842  009F                     	;# 
  3843  010C                     	;# 
  3844  010C                     	;# 
  3845  010D                     	;# 
  3846  010E                     	;# 
  3847  010F                     	;# 
  3848  010F                     	;# 
  3849  0110                     	;# 
  3850  0111                     	;# 
  3851  0112                     	;# 
  3852  0113                     	;# 
  3853  0114                     	;# 
  3854  0115                     	;# 
  3855  0116                     	;# 
  3856  0117                     	;# 
  3857  0118                     	;# 
  3858  0119                     	;# 
  3859  0119                     	;# 
  3860  0119                     	;# 
  3861  011A                     	;# 
  3862  011A                     	;# 
  3863  011A                     	;# 
  3864  011B                     	;# 
  3865  011B                     	;# 
  3866  011B                     	;# 
  3867  011B                     	;# 
  3868  011B                     	;# 
  3869  011C                     	;# 
  3870  011C                     	;# 
  3871  011C                     	;# 
  3872  011D                     	;# 
  3873  011D                     	;# 
  3874  011D                     	;# 
  3875  011E                     	;# 
  3876  011E                     	;# 
  3877  011E                     	;# 
  3878  011F                     	;# 
  3879  011F                     	;# 
  3880  011F                     	;# 
  3881  011F                     	;# 
  3882  011F                     	;# 
  3883  018C                     	;# 
  3884  018D                     	;# 
  3885  018E                     	;# 
  3886  018F                     	;# 
  3887  0190                     	;# 
  3888  0191                     	;# 
  3889  0192                     	;# 
  3890  0196                     	;# 
  3891  0197                     	;# 
  3892  0198                     	;# 
  3893  0199                     	;# 
  3894  019A                     	;# 
  3895  019B                     	;# 
  3896  019C                     	;# 
  3897  020C                     	;# 
  3898  020D                     	;# 
  3899  020E                     	;# 
  3900  020E                     	;# 
  3901  020F                     	;# 
  3902  020F                     	;# 
  3903  0210                     	;# 
  3904  0210                     	;# 
  3905  0211                     	;# 
  3906  0211                     	;# 
  3907  0212                     	;# 
  3908  0213                     	;# 
  3909  0214                     	;# 
  3910  0214                     	;# 
  3911  0215                     	;# 
  3912  0215                     	;# 
  3913  0216                     	;# 
  3914  0216                     	;# 
  3915  0217                     	;# 
  3916  0217                     	;# 
  3917  0218                     	;# 
  3918  0219                     	;# 
  3919  021A                     	;# 
  3920  021A                     	;# 
  3921  021B                     	;# 
  3922  021B                     	;# 
  3923  021C                     	;# 
  3924  021C                     	;# 
  3925  021D                     	;# 
  3926  021D                     	;# 
  3927  021E                     	;# 
  3928  021F                     	;# 
  3929  028C                     	;# 
  3930  028C                     	;# 
  3931  028D                     	;# 
  3932  028D                     	;# 
  3933  028E                     	;# 
  3934  028F                     	;# 
  3935  0290                     	;# 
  3936  0291                     	;# 
  3937  0292                     	;# 
  3938  0292                     	;# 
  3939  0293                     	;# 
  3940  0293                     	;# 
  3941  0294                     	;# 
  3942  0295                     	;# 
  3943  0296                     	;# 
  3944  0297                     	;# 
  3945  0298                     	;# 
  3946  0298                     	;# 
  3947  0299                     	;# 
  3948  0299                     	;# 
  3949  029A                     	;# 
  3950  029B                     	;# 
  3951  029C                     	;# 
  3952  029D                     	;# 
  3953  029F                     	;# 
  3954  030C                     	;# 
  3955  030C                     	;# 
  3956  030D                     	;# 
  3957  030E                     	;# 
  3958  030F                     	;# 
  3959  0310                     	;# 
  3960  0310                     	;# 
  3961  0311                     	;# 
  3962  0312                     	;# 
  3963  0313                     	;# 
  3964  0314                     	;# 
  3965  0314                     	;# 
  3966  0315                     	;# 
  3967  0316                     	;# 
  3968  0317                     	;# 
  3969  0318                     	;# 
  3970  0318                     	;# 
  3971  0319                     	;# 
  3972  031A                     	;# 
  3973  031B                     	;# 
  3974  038C                     	;# 
  3975  038C                     	;# 
  3976  038D                     	;# 
  3977  038E                     	;# 
  3978  0390                     	;# 
  3979  0390                     	;# 
  3980  0391                     	;# 
  3981  0392                     	;# 
  3982  048C                     	;# 
  3983  048C                     	;# 
  3984  048D                     	;# 
  3985  048E                     	;# 
  3986  048F                     	;# 
  3987  048F                     	;# 
  3988  0490                     	;# 
  3989  0491                     	;# 
  3990  0492                     	;# 
  3991  0492                     	;# 
  3992  0493                     	;# 
  3993  0494                     	;# 
  3994  0495                     	;# 
  3995  0495                     	;# 
  3996  0496                     	;# 
  3997  0497                     	;# 
  3998  0498                     	;# 
  3999  0499                     	;# 
  4000  049A                     	;# 
  4001  049B                     	;# 
  4002  049C                     	;# 
  4003  049D                     	;# 
  4004  058C                     	;# 
  4005  058C                     	;# 
  4006  058D                     	;# 
  4007  058E                     	;# 
  4008  058F                     	;# 
  4009  058F                     	;# 
  4010  0590                     	;# 
  4011  0591                     	;# 
  4012  0592                     	;# 
  4013  0593                     	;# 
  4014  059C                     	;# 
  4015  059C                     	;# 
  4016  059D                     	;# 
  4017  059D                     	;# 
  4018  059E                     	;# 
  4019  059F                     	;# 
  4020  060C                     	;# 
  4021  060C                     	;# 
  4022  060D                     	;# 
  4023  060D                     	;# 
  4024  060E                     	;# 
  4025  060F                     	;# 
  4026  0610                     	;# 
  4027  0611                     	;# 
  4028  0612                     	;# 
  4029  0613                     	;# 
  4030  0614                     	;# 
  4031  0616                     	;# 
  4032  0616                     	;# 
  4033  0617                     	;# 
  4034  0617                     	;# 
  4035  0618                     	;# 
  4036  0619                     	;# 
  4037  061A                     	;# 
  4038  061B                     	;# 
  4039  061C                     	;# 
  4040  061D                     	;# 
  4041  061E                     	;# 
  4042  070C                     	;# 
  4043  070D                     	;# 
  4044  070E                     	;# 
  4045  070F                     	;# 
  4046  0710                     	;# 
  4047  0711                     	;# 
  4048  0712                     	;# 
  4049  0713                     	;# 
  4050  0714                     	;# 
  4051  0716                     	;# 
  4052  0717                     	;# 
  4053  0718                     	;# 
  4054  0719                     	;# 
  4055  071A                     	;# 
  4056  071B                     	;# 
  4057  071C                     	;# 
  4058  071D                     	;# 
  4059  071E                     	;# 
  4060  0796                     	;# 
  4061  0797                     	;# 
  4062  0798                     	;# 
  4063  0799                     	;# 
  4064  079A                     	;# 
  4065  079B                     	;# 
  4066  079C                     	;# 
  4067  079D                     	;# 
  4068  080C                     	;# 
  4069  080D                     	;# 
  4070  080E                     	;# 
  4071  080F                     	;# 
  4072  0810                     	;# 
  4073  0811                     	;# 
  4074  0812                     	;# 
  4075  0813                     	;# 
  4076  0814                     	;# 
  4077  081A                     	;# 
  4078  081A                     	;# 
  4079  081B                     	;# 
  4080  081C                     	;# 
  4081  081C                     	;# 
  4082  081D                     	;# 
  4083  081E                     	;# 
  4084  081F                     	;# 
  4085  088C                     	;# 
  4086  088D                     	;# 
  4087  088E                     	;# 
  4088  088F                     	;# 
  4089  0890                     	;# 
  4090  0891                     	;# 
  4091  0892                     	;# 
  4092  0893                     	;# 
  4093  0895                     	;# 
  4094  0896                     	;# 
  4095  0897                     	;# 
  4096  0898                     	;# 
  4097  0899                     	;# 
  4098  089A                     	;# 
  4099  089B                     	;# 
  4100  090C                     	;# 
  4101  090E                     	;# 
  4102  090F                     	;# 
  4103  091F                     	;# 
  4104  098F                     	;# 
  4105  098F                     	;# 
  4106  0990                     	;# 
  4107  0991                     	;# 
  4108  0992                     	;# 
  4109  0993                     	;# 
  4110  0994                     	;# 
  4111  0995                     	;# 
  4112  0996                     	;# 
  4113  0997                     	;# 
  4114  1E0F                     	;# 
  4115  1E10                     	;# 
  4116  1E11                     	;# 
  4117  1E12                     	;# 
  4118  1E13                     	;# 
  4119  1E14                     	;# 
  4120  1E15                     	;# 
  4121  1E16                     	;# 
  4122  1E17                     	;# 
  4123  1E18                     	;# 
  4124  1E19                     	;# 
  4125  1E1A                     	;# 
  4126  1E1B                     	;# 
  4127  1E1C                     	;# 
  4128  1E1D                     	;# 
  4129  1E1E                     	;# 
  4130  1E1F                     	;# 
  4131  1E20                     	;# 
  4132  1E21                     	;# 
  4133  1E22                     	;# 
  4134  1E23                     	;# 
  4135  1E24                     	;# 
  4136  1E25                     	;# 
  4137  1E26                     	;# 
  4138  1E27                     	;# 
  4139  1E28                     	;# 
  4140  1E29                     	;# 
  4141  1E2A                     	;# 
  4142  1E2B                     	;# 
  4143  1E2C                     	;# 
  4144  1E2D                     	;# 
  4145  1E2E                     	;# 
  4146  1E2F                     	;# 
  4147  1E30                     	;# 
  4148  1E31                     	;# 
  4149  1E32                     	;# 
  4150  1E33                     	;# 
  4151  1E34                     	;# 
  4152  1E35                     	;# 
  4153  1E36                     	;# 
  4154  1E37                     	;# 
  4155  1E8F                     	;# 
  4156  1E90                     	;# 
  4157  1E91                     	;# 
  4158  1E92                     	;# 
  4159  1E93                     	;# 
  4160  1E94                     	;# 
  4161  1E95                     	;# 
  4162  1E96                     	;# 
  4163  1E97                     	;# 
  4164  1E9C                     	;# 
  4165  1E9D                     	;# 
  4166  1E9E                     	;# 
  4167  1EA1                     	;# 
  4168  1EA2                     	;# 
  4169  1EA3                     	;# 
  4170  1EA4                     	;# 
  4171  1EA9                     	;# 
  4172  1EAA                     	;# 
  4173  1EB1                     	;# 
  4174  1EB2                     	;# 
  4175  1EB8                     	;# 
  4176  1EB9                     	;# 
  4177  1EBA                     	;# 
  4178  1EBB                     	;# 
  4179  1EBC                     	;# 
  4180  1EBD                     	;# 
  4181  1EBE                     	;# 
  4182  1EC3                     	;# 
  4183  1EC5                     	;# 
  4184  1EC6                     	;# 
  4185  1EC7                     	;# 
  4186  1EC8                     	;# 
  4187  1EC9                     	;# 
  4188  1ECA                     	;# 
  4189  1ECB                     	;# 
  4190  1ECB                     	;# 
  4191  1ECB                     	;# 
  4192  1ECC                     	;# 
  4193  1ECC                     	;# 
  4194  1ECC                     	;# 
  4195  1F10                     	;# 
  4196  1F11                     	;# 
  4197  1F12                     	;# 
  4198  1F14                     	;# 
  4199  1F15                     	;# 
  4200  1F1C                     	;# 
  4201  1F1D                     	;# 
  4202  1F1E                     	;# 
  4203  1F1F                     	;# 
  4204  1F20                     	;# 
  4205  1F21                     	;# 
  4206  1F22                     	;# 
  4207  1F23                     	;# 
  4208  1F24                     	;# 
  4209  1F25                     	;# 
  4210  1F26                     	;# 
  4211  1F27                     	;# 
  4212  1F38                     	;# 
  4213  1F39                     	;# 
  4214  1F3A                     	;# 
  4215  1F3B                     	;# 
  4216  1F3C                     	;# 
  4217  1F3D                     	;# 
  4218  1F3E                     	;# 
  4219  1F3F                     	;# 
  4220  1F43                     	;# 
  4221  1F44                     	;# 
  4222  1F45                     	;# 
  4223  1F46                     	;# 
  4224  1F47                     	;# 
  4225  1F48                     	;# 
  4226  1F49                     	;# 
  4227  1F4A                     	;# 
  4228  1F4E                     	;# 
  4229  1F4F                     	;# 
  4230  1F50                     	;# 
  4231  1F51                     	;# 
  4232  1F52                     	;# 
  4233  1F53                     	;# 
  4234  1F54                     	;# 
  4235  1F55                     	;# 
  4236  1FE4                     	;# 
  4237  1FE5                     	;# 
  4238  1FE6                     	;# 
  4239  1FE7                     	;# 
  4240  1FE8                     	;# 
  4241  1FE8                     	;# 
  4242  1FE9                     	;# 
  4243  1FEA                     	;# 
  4244  1FEB                     	;# 
  4245  1FED                     	;# 
  4246  1FEE                     	;# 
  4247  1FEF                     	;# 
  4248  0000                     	;# 
  4249  0001                     	;# 
  4250  0002                     	;# 
  4251  0003                     	;# 
  4252  0004                     	;# 
  4253  0005                     	;# 
  4254  0006                     	;# 
  4255  0007                     	;# 
  4256  0008                     	;# 
  4257  0009                     	;# 
  4258  000A                     	;# 
  4259  000B                     	;# 
  4260  000C                     	;# 
  4261  000D                     	;# 
  4262  000E                     	;# 
  4263  0012                     	;# 
  4264  0013                     	;# 
  4265  0014                     	;# 
  4266  0018                     	;# 
  4267  0019                     	;# 
  4268  001A                     	;# 
  4269  008C                     	;# 
  4270  008C                     	;# 
  4271  008D                     	;# 
  4272  008E                     	;# 
  4273  008E                     	;# 
  4274  008F                     	;# 
  4275  0090                     	;# 
  4276  0090                     	;# 
  4277  0091                     	;# 
  4278  0092                     	;# 
  4279  0092                     	;# 
  4280  0093                     	;# 
  4281  0094                     	;# 
  4282  0094                     	;# 
  4283  0095                     	;# 
  4284  0096                     	;# 
  4285  0096                     	;# 
  4286  0097                     	;# 
  4287  0098                     	;# 
  4288  0099                     	;# 
  4289  009A                     	;# 
  4290  009B                     	;# 
  4291  009B                     	;# 
  4292  009C                     	;# 
  4293  009D                     	;# 
  4294  009D                     	;# 
  4295  009E                     	;# 
  4296  009F                     	;# 
  4297  010C                     	;# 
  4298  010C                     	;# 
  4299  010D                     	;# 
  4300  010E                     	;# 
  4301  010F                     	;# 
  4302  010F                     	;# 
  4303  0110                     	;# 
  4304  0111                     	;# 
  4305  0112                     	;# 
  4306  0113                     	;# 
  4307  0114                     	;# 
  4308  0115                     	;# 
  4309  0116                     	;# 
  4310  0117                     	;# 
  4311  0118                     	;# 
  4312  0119                     	;# 
  4313  0119                     	;# 
  4314  0119                     	;# 
  4315  011A                     	;# 
  4316  011A                     	;# 
  4317  011A                     	;# 
  4318  011B                     	;# 
  4319  011B                     	;# 
  4320  011B                     	;# 
  4321  011B                     	;# 
  4322  011B                     	;# 
  4323  011C                     	;# 
  4324  011C                     	;# 
  4325  011C                     	;# 
  4326  011D                     	;# 
  4327  011D                     	;# 
  4328  011D                     	;# 
  4329  011E                     	;# 
  4330  011E                     	;# 
  4331  011E                     	;# 
  4332  011F                     	;# 
  4333  011F                     	;# 
  4334  011F                     	;# 
  4335  011F                     	;# 
  4336  011F                     	;# 
  4337  018C                     	;# 
  4338  018D                     	;# 
  4339  018E                     	;# 
  4340  018F                     	;# 
  4341  0190                     	;# 
  4342  0191                     	;# 
  4343  0192                     	;# 
  4344  0196                     	;# 
  4345  0197                     	;# 
  4346  0198                     	;# 
  4347  0199                     	;# 
  4348  019A                     	;# 
  4349  019B                     	;# 
  4350  019C                     	;# 
  4351  020C                     	;# 
  4352  020D                     	;# 
  4353  020E                     	;# 
  4354  020E                     	;# 
  4355  020F                     	;# 
  4356  020F                     	;# 
  4357  0210                     	;# 
  4358  0210                     	;# 
  4359  0211                     	;# 
  4360  0211                     	;# 
  4361  0212                     	;# 
  4362  0213                     	;# 
  4363  0214                     	;# 
  4364  0214                     	;# 
  4365  0215                     	;# 
  4366  0215                     	;# 
  4367  0216                     	;# 
  4368  0216                     	;# 
  4369  0217                     	;# 
  4370  0217                     	;# 
  4371  0218                     	;# 
  4372  0219                     	;# 
  4373  021A                     	;# 
  4374  021A                     	;# 
  4375  021B                     	;# 
  4376  021B                     	;# 
  4377  021C                     	;# 
  4378  021C                     	;# 
  4379  021D                     	;# 
  4380  021D                     	;# 
  4381  021E                     	;# 
  4382  021F                     	;# 
  4383  028C                     	;# 
  4384  028C                     	;# 
  4385  028D                     	;# 
  4386  028D                     	;# 
  4387  028E                     	;# 
  4388  028F                     	;# 
  4389  0290                     	;# 
  4390  0291                     	;# 
  4391  0292                     	;# 
  4392  0292                     	;# 
  4393  0293                     	;# 
  4394  0293                     	;# 
  4395  0294                     	;# 
  4396  0295                     	;# 
  4397  0296                     	;# 
  4398  0297                     	;# 
  4399  0298                     	;# 
  4400  0298                     	;# 
  4401  0299                     	;# 
  4402  0299                     	;# 
  4403  029A                     	;# 
  4404  029B                     	;# 
  4405  029C                     	;# 
  4406  029D                     	;# 
  4407  029F                     	;# 
  4408  030C                     	;# 
  4409  030C                     	;# 
  4410  030D                     	;# 
  4411  030E                     	;# 
  4412  030F                     	;# 
  4413  0310                     	;# 
  4414  0310                     	;# 
  4415  0311                     	;# 
  4416  0312                     	;# 
  4417  0313                     	;# 
  4418  0314                     	;# 
  4419  0314                     	;# 
  4420  0315                     	;# 
  4421  0316                     	;# 
  4422  0317                     	;# 
  4423  0318                     	;# 
  4424  0318                     	;# 
  4425  0319                     	;# 
  4426  031A                     	;# 
  4427  031B                     	;# 
  4428  038C                     	;# 
  4429  038C                     	;# 
  4430  038D                     	;# 
  4431  038E                     	;# 
  4432  0390                     	;# 
  4433  0390                     	;# 
  4434  0391                     	;# 
  4435  0392                     	;# 
  4436  048C                     	;# 
  4437  048C                     	;# 
  4438  048D                     	;# 
  4439  048E                     	;# 
  4440  048F                     	;# 
  4441  048F                     	;# 
  4442  0490                     	;# 
  4443  0491                     	;# 
  4444  0492                     	;# 
  4445  0492                     	;# 
  4446  0493                     	;# 
  4447  0494                     	;# 
  4448  0495                     	;# 
  4449  0495                     	;# 
  4450  0496                     	;# 
  4451  0497                     	;# 
  4452  0498                     	;# 
  4453  0499                     	;# 
  4454  049A                     	;# 
  4455  049B                     	;# 
  4456  049C                     	;# 
  4457  049D                     	;# 
  4458  058C                     	;# 
  4459  058C                     	;# 
  4460  058D                     	;# 
  4461  058E                     	;# 
  4462  058F                     	;# 
  4463  058F                     	;# 
  4464  0590                     	;# 
  4465  0591                     	;# 
  4466  0592                     	;# 
  4467  0593                     	;# 
  4468  059C                     	;# 
  4469  059C                     	;# 
  4470  059D                     	;# 
  4471  059D                     	;# 
  4472  059E                     	;# 
  4473  059F                     	;# 
  4474  060C                     	;# 
  4475  060C                     	;# 
  4476  060D                     	;# 
  4477  060D                     	;# 
  4478  060E                     	;# 
  4479  060F                     	;# 
  4480  0610                     	;# 
  4481  0611                     	;# 
  4482  0612                     	;# 
  4483  0613                     	;# 
  4484  0614                     	;# 
  4485  0616                     	;# 
  4486  0616                     	;# 
  4487  0617                     	;# 
  4488  0617                     	;# 
  4489  0618                     	;# 
  4490  0619                     	;# 
  4491  061A                     	;# 
  4492  061B                     	;# 
  4493  061C                     	;# 
  4494  061D                     	;# 
  4495  061E                     	;# 
  4496  070C                     	;# 
  4497  070D                     	;# 
  4498  070E                     	;# 
  4499  070F                     	;# 
  4500  0710                     	;# 
  4501  0711                     	;# 
  4502  0712                     	;# 
  4503  0713                     	;# 
  4504  0714                     	;# 
  4505  0716                     	;# 
  4506  0717                     	;# 
  4507  0718                     	;# 
  4508  0719                     	;# 
  4509  071A                     	;# 
  4510  071B                     	;# 
  4511  071C                     	;# 
  4512  071D                     	;# 
  4513  071E                     	;# 
  4514  0796                     	;# 
  4515  0797                     	;# 
  4516  0798                     	;# 
  4517  0799                     	;# 
  4518  079A                     	;# 
  4519  079B                     	;# 
  4520  079C                     	;# 
  4521  079D                     	;# 
  4522  080C                     	;# 
  4523  080D                     	;# 
  4524  080E                     	;# 
  4525  080F                     	;# 
  4526  0810                     	;# 
  4527  0811                     	;# 
  4528  0812                     	;# 
  4529  0813                     	;# 
  4530  0814                     	;# 
  4531  081A                     	;# 
  4532  081A                     	;# 
  4533  081B                     	;# 
  4534  081C                     	;# 
  4535  081C                     	;# 
  4536  081D                     	;# 
  4537  081E                     	;# 
  4538  081F                     	;# 
  4539  088C                     	;# 
  4540  088D                     	;# 
  4541  088E                     	;# 
  4542  088F                     	;# 
  4543  0890                     	;# 
  4544  0891                     	;# 
  4545  0892                     	;# 
  4546  0893                     	;# 
  4547  0895                     	;# 
  4548  0896                     	;# 
  4549  0897                     	;# 
  4550  0898                     	;# 
  4551  0899                     	;# 
  4552  089A                     	;# 
  4553  089B                     	;# 
  4554  090C                     	;# 
  4555  090E                     	;# 
  4556  090F                     	;# 
  4557  091F                     	;# 
  4558  098F                     	;# 
  4559  098F                     	;# 
  4560  0990                     	;# 
  4561  0991                     	;# 
  4562  0992                     	;# 
  4563  0993                     	;# 
  4564  0994                     	;# 
  4565  0995                     	;# 
  4566  0996                     	;# 
  4567  0997                     	;# 
  4568  1E0F                     	;# 
  4569  1E10                     	;# 
  4570  1E11                     	;# 
  4571  1E12                     	;# 
  4572  1E13                     	;# 
  4573  1E14                     	;# 
  4574  1E15                     	;# 
  4575  1E16                     	;# 
  4576  1E17                     	;# 
  4577  1E18                     	;# 
  4578  1E19                     	;# 
  4579  1E1A                     	;# 
  4580  1E1B                     	;# 
  4581  1E1C                     	;# 
  4582  1E1D                     	;# 
  4583  1E1E                     	;# 
  4584  1E1F                     	;# 
  4585  1E20                     	;# 
  4586  1E21                     	;# 
  4587  1E22                     	;# 
  4588  1E23                     	;# 
  4589  1E24                     	;# 
  4590  1E25                     	;# 
  4591  1E26                     	;# 
  4592  1E27                     	;# 
  4593  1E28                     	;# 
  4594  1E29                     	;# 
  4595  1E2A                     	;# 
  4596  1E2B                     	;# 
  4597  1E2C                     	;# 
  4598  1E2D                     	;# 
  4599  1E2E                     	;# 
  4600  1E2F                     	;# 
  4601  1E30                     	;# 
  4602  1E31                     	;# 
  4603  1E32                     	;# 
  4604  1E33                     	;# 
  4605  1E34                     	;# 
  4606  1E35                     	;# 
  4607  1E36                     	;# 
  4608  1E37                     	;# 
  4609  1E8F                     	;# 
  4610  1E90                     	;# 
  4611  1E91                     	;# 
  4612  1E92                     	;# 
  4613  1E93                     	;# 
  4614  1E94                     	;# 
  4615  1E95                     	;# 
  4616  1E96                     	;# 
  4617  1E97                     	;# 
  4618  1E9C                     	;# 
  4619  1E9D                     	;# 
  4620  1E9E                     	;# 
  4621  1EA1                     	;# 
  4622  1EA2                     	;# 
  4623  1EA3                     	;# 
  4624  1EA4                     	;# 
  4625  1EA9                     	;# 
  4626  1EAA                     	;# 
  4627  1EB1                     	;# 
  4628  1EB2                     	;# 
  4629  1EB8                     	;# 
  4630  1EB9                     	;# 
  4631  1EBA                     	;# 
  4632  1EBB                     	;# 
  4633  1EBC                     	;# 
  4634  1EBD                     	;# 
  4635  1EBE                     	;# 
  4636  1EC3                     	;# 
  4637  1EC5                     	;# 
  4638  1EC6                     	;# 
  4639  1EC7                     	;# 
  4640  1EC8                     	;# 
  4641  1EC9                     	;# 
  4642  1ECA                     	;# 
  4643  1ECB                     	;# 
  4644  1ECB                     	;# 
  4645  1ECB                     	;# 
  4646  1ECC                     	;# 
  4647  1ECC                     	;# 
  4648  1ECC                     	;# 
  4649  1F10                     	;# 
  4650  1F11                     	;# 
  4651  1F12                     	;# 
  4652  1F14                     	;# 
  4653  1F15                     	;# 
  4654  1F1C                     	;# 
  4655  1F1D                     	;# 
  4656  1F1E                     	;# 
  4657  1F1F                     	;# 
  4658  1F20                     	;# 
  4659  1F21                     	;# 
  4660  1F22                     	;# 
  4661  1F23                     	;# 
  4662  1F24                     	;# 
  4663  1F25                     	;# 
  4664  1F26                     	;# 
  4665  1F27                     	;# 
  4666  1F38                     	;# 
  4667  1F39                     	;# 
  4668  1F3A                     	;# 
  4669  1F3B                     	;# 
  4670  1F3C                     	;# 
  4671  1F3D                     	;# 
  4672  1F3E                     	;# 
  4673  1F3F                     	;# 
  4674  1F43                     	;# 
  4675  1F44                     	;# 
  4676  1F45                     	;# 
  4677  1F46                     	;# 
  4678  1F47                     	;# 
  4679  1F48                     	;# 
  4680  1F49                     	;# 
  4681  1F4A                     	;# 
  4682  1F4E                     	;# 
  4683  1F4F                     	;# 
  4684  1F50                     	;# 
  4685  1F51                     	;# 
  4686  1F52                     	;# 
  4687  1F53                     	;# 
  4688  1F54                     	;# 
  4689  1F55                     	;# 
  4690  1FE4                     	;# 
  4691  1FE5                     	;# 
  4692  1FE6                     	;# 
  4693  1FE7                     	;# 
  4694  1FE8                     	;# 
  4695  1FE8                     	;# 
  4696  1FE9                     	;# 
  4697  1FEA                     	;# 
  4698  1FEB                     	;# 
  4699  1FED                     	;# 
  4700  1FEE                     	;# 
  4701  1FEF                     	;# 
  4702  0000                     	;# 
  4703  0001                     	;# 
  4704  0002                     	;# 
  4705  0003                     	;# 
  4706  0004                     	;# 
  4707  0005                     	;# 
  4708  0006                     	;# 
  4709  0007                     	;# 
  4710  0008                     	;# 
  4711  0009                     	;# 
  4712  000A                     	;# 
  4713  000B                     	;# 
  4714  000C                     	;# 
  4715  000D                     	;# 
  4716  000E                     	;# 
  4717  0012                     	;# 
  4718  0013                     	;# 
  4719  0014                     	;# 
  4720  0018                     	;# 
  4721  0019                     	;# 
  4722  001A                     	;# 
  4723  008C                     	;# 
  4724  008C                     	;# 
  4725  008D                     	;# 
  4726  008E                     	;# 
  4727  008E                     	;# 
  4728  008F                     	;# 
  4729  0090                     	;# 
  4730  0090                     	;# 
  4731  0091                     	;# 
  4732  0092                     	;# 
  4733  0092                     	;# 
  4734  0093                     	;# 
  4735  0094                     	;# 
  4736  0094                     	;# 
  4737  0095                     	;# 
  4738  0096                     	;# 
  4739  0096                     	;# 
  4740  0097                     	;# 
  4741  0098                     	;# 
  4742  0099                     	;# 
  4743  009A                     	;# 
  4744  009B                     	;# 
  4745  009B                     	;# 
  4746  009C                     	;# 
  4747  009D                     	;# 
  4748  009D                     	;# 
  4749  009E                     	;# 
  4750  009F                     	;# 
  4751  010C                     	;# 
  4752  010C                     	;# 
  4753  010D                     	;# 
  4754  010E                     	;# 
  4755  010F                     	;# 
  4756  010F                     	;# 
  4757  0110                     	;# 
  4758  0111                     	;# 
  4759  0112                     	;# 
  4760  0113                     	;# 
  4761  0114                     	;# 
  4762  0115                     	;# 
  4763  0116                     	;# 
  4764  0117                     	;# 
  4765  0118                     	;# 
  4766  0119                     	;# 
  4767  0119                     	;# 
  4768  0119                     	;# 
  4769  011A                     	;# 
  4770  011A                     	;# 
  4771  011A                     	;# 
  4772  011B                     	;# 
  4773  011B                     	;# 
  4774  011B                     	;# 
  4775  011B                     	;# 
  4776  011B                     	;# 
  4777  011C                     	;# 
  4778  011C                     	;# 
  4779  011C                     	;# 
  4780  011D                     	;# 
  4781  011D                     	;# 
  4782  011D                     	;# 
  4783  011E                     	;# 
  4784  011E                     	;# 
  4785  011E                     	;# 
  4786  011F                     	;# 
  4787  011F                     	;# 
  4788  011F                     	;# 
  4789  011F                     	;# 
  4790  011F                     	;# 
  4791  018C                     	;# 
  4792  018D                     	;# 
  4793  018E                     	;# 
  4794  018F                     	;# 
  4795  0190                     	;# 
  4796  0191                     	;# 
  4797  0192                     	;# 
  4798  0196                     	;# 
  4799  0197                     	;# 
  4800  0198                     	;# 
  4801  0199                     	;# 
  4802  019A                     	;# 
  4803  019B                     	;# 
  4804  019C                     	;# 
  4805  020C                     	;# 
  4806  020D                     	;# 
  4807  020E                     	;# 
  4808  020E                     	;# 
  4809  020F                     	;# 
  4810  020F                     	;# 
  4811  0210                     	;# 
  4812  0210                     	;# 
  4813  0211                     	;# 
  4814  0211                     	;# 
  4815  0212                     	;# 
  4816  0213                     	;# 
  4817  0214                     	;# 
  4818  0214                     	;# 
  4819  0215                     	;# 
  4820  0215                     	;# 
  4821  0216                     	;# 
  4822  0216                     	;# 
  4823  0217                     	;# 
  4824  0217                     	;# 
  4825  0218                     	;# 
  4826  0219                     	;# 
  4827  021A                     	;# 
  4828  021A                     	;# 
  4829  021B                     	;# 
  4830  021B                     	;# 
  4831  021C                     	;# 
  4832  021C                     	;# 
  4833  021D                     	;# 
  4834  021D                     	;# 
  4835  021E                     	;# 
  4836  021F                     	;# 
  4837  028C                     	;# 
  4838  028C                     	;# 
  4839  028D                     	;# 
  4840  028D                     	;# 
  4841  028E                     	;# 
  4842  028F                     	;# 
  4843  0290                     	;# 
  4844  0291                     	;# 
  4845  0292                     	;# 
  4846  0292                     	;# 
  4847  0293                     	;# 
  4848  0293                     	;# 
  4849  0294                     	;# 
  4850  0295                     	;# 
  4851  0296                     	;# 
  4852  0297                     	;# 
  4853  0298                     	;# 
  4854  0298                     	;# 
  4855  0299                     	;# 
  4856  0299                     	;# 
  4857  029A                     	;# 
  4858  029B                     	;# 
  4859  029C                     	;# 
  4860  029D                     	;# 
  4861  029F                     	;# 
  4862  030C                     	;# 
  4863  030C                     	;# 
  4864  030D                     	;# 
  4865  030E                     	;# 
  4866  030F                     	;# 
  4867  0310                     	;# 
  4868  0310                     	;# 
  4869  0311                     	;# 
  4870  0312                     	;# 
  4871  0313                     	;# 
  4872  0314                     	;# 
  4873  0314                     	;# 
  4874  0315                     	;# 
  4875  0316                     	;# 
  4876  0317                     	;# 
  4877  0318                     	;# 
  4878  0318                     	;# 
  4879  0319                     	;# 
  4880  031A                     	;# 
  4881  031B                     	;# 
  4882  038C                     	;# 
  4883  038C                     	;# 
  4884  038D                     	;# 
  4885  038E                     	;# 
  4886  0390                     	;# 
  4887  0390                     	;# 
  4888  0391                     	;# 
  4889  0392                     	;# 
  4890  048C                     	;# 
  4891  048C                     	;# 
  4892  048D                     	;# 
  4893  048E                     	;# 
  4894  048F                     	;# 
  4895  048F                     	;# 
  4896  0490                     	;# 
  4897  0491                     	;# 
  4898  0492                     	;# 
  4899  0492                     	;# 
  4900  0493                     	;# 
  4901  0494                     	;# 
  4902  0495                     	;# 
  4903  0495                     	;# 
  4904  0496                     	;# 
  4905  0497                     	;# 
  4906  0498                     	;# 
  4907  0499                     	;# 
  4908  049A                     	;# 
  4909  049B                     	;# 
  4910  049C                     	;# 
  4911  049D                     	;# 
  4912  058C                     	;# 
  4913  058C                     	;# 
  4914  058D                     	;# 
  4915  058E                     	;# 
  4916  058F                     	;# 
  4917  058F                     	;# 
  4918  0590                     	;# 
  4919  0591                     	;# 
  4920  0592                     	;# 
  4921  0593                     	;# 
  4922  059C                     	;# 
  4923  059C                     	;# 
  4924  059D                     	;# 
  4925  059D                     	;# 
  4926  059E                     	;# 
  4927  059F                     	;# 
  4928  060C                     	;# 
  4929  060C                     	;# 
  4930  060D                     	;# 
  4931  060D                     	;# 
  4932  060E                     	;# 
  4933  060F                     	;# 
  4934  0610                     	;# 
  4935  0611                     	;# 
  4936  0612                     	;# 
  4937  0613                     	;# 
  4938  0614                     	;# 
  4939  0616                     	;# 
  4940  0616                     	;# 
  4941  0617                     	;# 
  4942  0617                     	;# 
  4943  0618                     	;# 
  4944  0619                     	;# 
  4945  061A                     	;# 
  4946  061B                     	;# 
  4947  061C                     	;# 
  4948  061D                     	;# 
  4949  061E                     	;# 
  4950  070C                     	;# 
  4951  070D                     	;# 
  4952  070E                     	;# 
  4953  070F                     	;# 
  4954  0710                     	;# 
  4955  0711                     	;# 
  4956  0712                     	;# 
  4957  0713                     	;# 
  4958  0714                     	;# 
  4959  0716                     	;# 
  4960  0717                     	;# 
  4961  0718                     	;# 
  4962  0719                     	;# 
  4963  071A                     	;# 
  4964  071B                     	;# 
  4965  071C                     	;# 
  4966  071D                     	;# 
  4967  071E                     	;# 
  4968  0796                     	;# 
  4969  0797                     	;# 
  4970  0798                     	;# 
  4971  0799                     	;# 
  4972  079A                     	;# 
  4973  079B                     	;# 
  4974  079C                     	;# 
  4975  079D                     	;# 
  4976  080C                     	;# 
  4977  080D                     	;# 
  4978  080E                     	;# 
  4979  080F                     	;# 
  4980  0810                     	;# 
  4981  0811                     	;# 
  4982  0812                     	;# 
  4983  0813                     	;# 
  4984  0814                     	;# 
  4985  081A                     	;# 
  4986  081A                     	;# 
  4987  081B                     	;# 
  4988  081C                     	;# 
  4989  081C                     	;# 
  4990  081D                     	;# 
  4991  081E                     	;# 
  4992  081F                     	;# 
  4993  088C                     	;# 
  4994  088D                     	;# 
  4995  088E                     	;# 
  4996  088F                     	;# 
  4997  0890                     	;# 
  4998  0891                     	;# 
  4999  0892                     	;# 
  5000  0893                     	;# 
  5001  0895                     	;# 
  5002  0896                     	;# 
  5003  0897                     	;# 
  5004  0898                     	;# 
  5005  0899                     	;# 
  5006  089A                     	;# 
  5007  089B                     	;# 
  5008  090C                     	;# 
  5009  090E                     	;# 
  5010  090F                     	;# 
  5011  091F                     	;# 
  5012  098F                     	;# 
  5013  098F                     	;# 
  5014  0990                     	;# 
  5015  0991                     	;# 
  5016  0992                     	;# 
  5017  0993                     	;# 
  5018  0994                     	;# 
  5019  0995                     	;# 
  5020  0996                     	;# 
  5021  0997                     	;# 
  5022  1E0F                     	;# 
  5023  1E10                     	;# 
  5024  1E11                     	;# 
  5025  1E12                     	;# 
  5026  1E13                     	;# 
  5027  1E14                     	;# 
  5028  1E15                     	;# 
  5029  1E16                     	;# 
  5030  1E17                     	;# 
  5031  1E18                     	;# 
  5032  1E19                     	;# 
  5033  1E1A                     	;# 
  5034  1E1B                     	;# 
  5035  1E1C                     	;# 
  5036  1E1D                     	;# 
  5037  1E1E                     	;# 
  5038  1E1F                     	;# 
  5039  1E20                     	;# 
  5040  1E21                     	;# 
  5041  1E22                     	;# 
  5042  1E23                     	;# 
  5043  1E24                     	;# 
  5044  1E25                     	;# 
  5045  1E26                     	;# 
  5046  1E27                     	;# 
  5047  1E28                     	;# 
  5048  1E29                     	;# 
  5049  1E2A                     	;# 
  5050  1E2B                     	;# 
  5051  1E2C                     	;# 
  5052  1E2D                     	;# 
  5053  1E2E                     	;# 
  5054  1E2F                     	;# 
  5055  1E30                     	;# 
  5056  1E31                     	;# 
  5057  1E32                     	;# 
  5058  1E33                     	;# 
  5059  1E34                     	;# 
  5060  1E35                     	;# 
  5061  1E36                     	;# 
  5062  1E37                     	;# 
  5063  1E8F                     	;# 
  5064  1E90                     	;# 
  5065  1E91                     	;# 
  5066  1E92                     	;# 
  5067  1E93                     	;# 
  5068  1E94                     	;# 
  5069  1E95                     	;# 
  5070  1E96                     	;# 
  5071  1E97                     	;# 
  5072  1E9C                     	;# 
  5073  1E9D                     	;# 
  5074  1E9E                     	;# 
  5075  1EA1                     	;# 
  5076  1EA2                     	;# 
  5077  1EA3                     	;# 
  5078  1EA4                     	;# 
  5079  1EA9                     	;# 
  5080  1EAA                     	;# 
  5081  1EB1                     	;# 
  5082  1EB2                     	;# 
  5083  1EB8                     	;# 
  5084  1EB9                     	;# 
  5085  1EBA                     	;# 
  5086  1EBB                     	;# 
  5087  1EBC                     	;# 
  5088  1EBD                     	;# 
  5089  1EBE                     	;# 
  5090  1EC3                     	;# 
  5091  1EC5                     	;# 
  5092  1EC6                     	;# 
  5093  1EC7                     	;# 
  5094  1EC8                     	;# 
  5095  1EC9                     	;# 
  5096  1ECA                     	;# 
  5097  1ECB                     	;# 
  5098  1ECB                     	;# 
  5099  1ECB                     	;# 
  5100  1ECC                     	;# 
  5101  1ECC                     	;# 
  5102  1ECC                     	;# 
  5103  1F10                     	;# 
  5104  1F11                     	;# 
  5105  1F12                     	;# 
  5106  1F14                     	;# 
  5107  1F15                     	;# 
  5108  1F1C                     	;# 
  5109  1F1D                     	;# 
  5110  1F1E                     	;# 
  5111  1F1F                     	;# 
  5112  1F20                     	;# 
  5113  1F21                     	;# 
  5114  1F22                     	;# 
  5115  1F23                     	;# 
  5116  1F24                     	;# 
  5117  1F25                     	;# 
  5118  1F26                     	;# 
  5119  1F27                     	;# 
  5120  1F38                     	;# 
  5121  1F39                     	;# 
  5122  1F3A                     	;# 
  5123  1F3B                     	;# 
  5124  1F3C                     	;# 
  5125  1F3D                     	;# 
  5126  1F3E                     	;# 
  5127  1F3F                     	;# 
  5128  1F43                     	;# 
  5129  1F44                     	;# 
  5130  1F45                     	;# 
  5131  1F46                     	;# 
  5132  1F47                     	;# 
  5133  1F48                     	;# 
  5134  1F49                     	;# 
  5135  1F4A                     	;# 
  5136  1F4E                     	;# 
  5137  1F4F                     	;# 
  5138  1F50                     	;# 
  5139  1F51                     	;# 
  5140  1F52                     	;# 
  5141  1F53                     	;# 
  5142  1F54                     	;# 
  5143  1F55                     	;# 
  5144  1FE4                     	;# 
  5145  1FE5                     	;# 
  5146  1FE6                     	;# 
  5147  1FE7                     	;# 
  5148  1FE8                     	;# 
  5149  1FE8                     	;# 
  5150  1FE9                     	;# 
  5151  1FEA                     	;# 
  5152  1FEB                     	;# 
  5153  1FED                     	;# 
  5154  1FEE                     	;# 
  5155  1FEF                     	;# 
  5156  0000                     	;# 
  5157  0001                     	;# 
  5158  0002                     	;# 
  5159  0003                     	;# 
  5160  0004                     	;# 
  5161  0005                     	;# 
  5162  0006                     	;# 
  5163  0007                     	;# 
  5164  0008                     	;# 
  5165  0009                     	;# 
  5166  000A                     	;# 
  5167  000B                     	;# 
  5168  000C                     	;# 
  5169  000D                     	;# 
  5170  000E                     	;# 
  5171  0012                     	;# 
  5172  0013                     	;# 
  5173  0014                     	;# 
  5174  0018                     	;# 
  5175  0019                     	;# 
  5176  001A                     	;# 
  5177  008C                     	;# 
  5178  008C                     	;# 
  5179  008D                     	;# 
  5180  008E                     	;# 
  5181  008E                     	;# 
  5182  008F                     	;# 
  5183  0090                     	;# 
  5184  0090                     	;# 
  5185  0091                     	;# 
  5186  0092                     	;# 
  5187  0092                     	;# 
  5188  0093                     	;# 
  5189  0094                     	;# 
  5190  0094                     	;# 
  5191  0095                     	;# 
  5192  0096                     	;# 
  5193  0096                     	;# 
  5194  0097                     	;# 
  5195  0098                     	;# 
  5196  0099                     	;# 
  5197  009A                     	;# 
  5198  009B                     	;# 
  5199  009B                     	;# 
  5200  009C                     	;# 
  5201  009D                     	;# 
  5202  009D                     	;# 
  5203  009E                     	;# 
  5204  009F                     	;# 
  5205  010C                     	;# 
  5206  010C                     	;# 
  5207  010D                     	;# 
  5208  010E                     	;# 
  5209  010F                     	;# 
  5210  010F                     	;# 
  5211  0110                     	;# 
  5212  0111                     	;# 
  5213  0112                     	;# 
  5214  0113                     	;# 
  5215  0114                     	;# 
  5216  0115                     	;# 
  5217  0116                     	;# 
  5218  0117                     	;# 
  5219  0118                     	;# 
  5220  0119                     	;# 
  5221  0119                     	;# 
  5222  0119                     	;# 
  5223  011A                     	;# 
  5224  011A                     	;# 
  5225  011A                     	;# 
  5226  011B                     	;# 
  5227  011B                     	;# 
  5228  011B                     	;# 
  5229  011B                     	;# 
  5230  011B                     	;# 
  5231  011C                     	;# 
  5232  011C                     	;# 
  5233  011C                     	;# 
  5234  011D                     	;# 
  5235  011D                     	;# 
  5236  011D                     	;# 
  5237  011E                     	;# 
  5238  011E                     	;# 
  5239  011E                     	;# 
  5240  011F                     	;# 
  5241  011F                     	;# 
  5242  011F                     	;# 
  5243  011F                     	;# 
  5244  011F                     	;# 
  5245  018C                     	;# 
  5246  018D                     	;# 
  5247  018E                     	;# 
  5248  018F                     	;# 
  5249  0190                     	;# 
  5250  0191                     	;# 
  5251  0192                     	;# 
  5252  0196                     	;# 
  5253  0197                     	;# 
  5254  0198                     	;# 
  5255  0199                     	;# 
  5256  019A                     	;# 
  5257  019B                     	;# 
  5258  019C                     	;# 
  5259  020C                     	;# 
  5260  020D                     	;# 
  5261  020E                     	;# 
  5262  020E                     	;# 
  5263  020F                     	;# 
  5264  020F                     	;# 
  5265  0210                     	;# 
  5266  0210                     	;# 
  5267  0211                     	;# 
  5268  0211                     	;# 
  5269  0212                     	;# 
  5270  0213                     	;# 
  5271  0214                     	;# 
  5272  0214                     	;# 
  5273  0215                     	;# 
  5274  0215                     	;# 
  5275  0216                     	;# 
  5276  0216                     	;# 
  5277  0217                     	;# 
  5278  0217                     	;# 
  5279  0218                     	;# 
  5280  0219                     	;# 
  5281  021A                     	;# 
  5282  021A                     	;# 
  5283  021B                     	;# 
  5284  021B                     	;# 
  5285  021C                     	;# 
  5286  021C                     	;# 
  5287  021D                     	;# 
  5288  021D                     	;# 
  5289  021E                     	;# 
  5290  021F                     	;# 
  5291  028C                     	;# 
  5292  028C                     	;# 
  5293  028D                     	;# 
  5294  028D                     	;# 
  5295  028E                     	;# 
  5296  028F                     	;# 
  5297  0290                     	;# 
  5298  0291                     	;# 
  5299  0292                     	;# 
  5300  0292                     	;# 
  5301  0293                     	;# 
  5302  0293                     	;# 
  5303  0294                     	;# 
  5304  0295                     	;# 
  5305  0296                     	;# 
  5306  0297                     	;# 
  5307  0298                     	;# 
  5308  0298                     	;# 
  5309  0299                     	;# 
  5310  0299                     	;# 
  5311  029A                     	;# 
  5312  029B                     	;# 
  5313  029C                     	;# 
  5314  029D                     	;# 
  5315  029F                     	;# 
  5316  030C                     	;# 
  5317  030C                     	;# 
  5318  030D                     	;# 
  5319  030E                     	;# 
  5320  030F                     	;# 
  5321  0310                     	;# 
  5322  0310                     	;# 
  5323  0311                     	;# 
  5324  0312                     	;# 
  5325  0313                     	;# 
  5326  0314                     	;# 
  5327  0314                     	;# 
  5328  0315                     	;# 
  5329  0316                     	;# 
  5330  0317                     	;# 
  5331  0318                     	;# 
  5332  0318                     	;# 
  5333  0319                     	;# 
  5334  031A                     	;# 
  5335  031B                     	;# 
  5336  038C                     	;# 
  5337  038C                     	;# 
  5338  038D                     	;# 
  5339  038E                     	;# 
  5340  0390                     	;# 
  5341  0390                     	;# 
  5342  0391                     	;# 
  5343  0392                     	;# 
  5344  048C                     	;# 
  5345  048C                     	;# 
  5346  048D                     	;# 
  5347  048E                     	;# 
  5348  048F                     	;# 
  5349  048F                     	;# 
  5350  0490                     	;# 
  5351  0491                     	;# 
  5352  0492                     	;# 
  5353  0492                     	;# 
  5354  0493                     	;# 
  5355  0494                     	;# 
  5356  0495                     	;# 
  5357  0495                     	;# 
  5358  0496                     	;# 
  5359  0497                     	;# 
  5360  0498                     	;# 
  5361  0499                     	;# 
  5362  049A                     	;# 
  5363  049B                     	;# 
  5364  049C                     	;# 
  5365  049D                     	;# 
  5366  058C                     	;# 
  5367  058C                     	;# 
  5368  058D                     	;# 
  5369  058E                     	;# 
  5370  058F                     	;# 
  5371  058F                     	;# 
  5372  0590                     	;# 
  5373  0591                     	;# 
  5374  0592                     	;# 
  5375  0593                     	;# 
  5376  059C                     	;# 
  5377  059C                     	;# 
  5378  059D                     	;# 
  5379  059D                     	;# 
  5380  059E                     	;# 
  5381  059F                     	;# 
  5382  060C                     	;# 
  5383  060C                     	;# 
  5384  060D                     	;# 
  5385  060D                     	;# 
  5386  060E                     	;# 
  5387  060F                     	;# 
  5388  0610                     	;# 
  5389  0611                     	;# 
  5390  0612                     	;# 
  5391  0613                     	;# 
  5392  0614                     	;# 
  5393  0616                     	;# 
  5394  0616                     	;# 
  5395  0617                     	;# 
  5396  0617                     	;# 
  5397  0618                     	;# 
  5398  0619                     	;# 
  5399  061A                     	;# 
  5400  061B                     	;# 
  5401  061C                     	;# 
  5402  061D                     	;# 
  5403  061E                     	;# 
  5404  070C                     	;# 
  5405  070D                     	;# 
  5406  070E                     	;# 
  5407  070F                     	;# 
  5408  0710                     	;# 
  5409  0711                     	;# 
  5410  0712                     	;# 
  5411  0713                     	;# 
  5412  0714                     	;# 
  5413  0716                     	;# 
  5414  0717                     	;# 
  5415  0718                     	;# 
  5416  0719                     	;# 
  5417  071A                     	;# 
  5418  071B                     	;# 
  5419  071C                     	;# 
  5420  071D                     	;# 
  5421  071E                     	;# 
  5422  0796                     	;# 
  5423  0797                     	;# 
  5424  0798                     	;# 
  5425  0799                     	;# 
  5426  079A                     	;# 
  5427  079B                     	;# 
  5428  079C                     	;# 
  5429  079D                     	;# 
  5430  080C                     	;# 
  5431  080D                     	;# 
  5432  080E                     	;# 
  5433  080F                     	;# 
  5434  0810                     	;# 
  5435  0811                     	;# 
  5436  0812                     	;# 
  5437  0813                     	;# 
  5438  0814                     	;# 
  5439  081A                     	;# 
  5440  081A                     	;# 
  5441  081B                     	;# 
  5442  081C                     	;# 
  5443  081C                     	;# 
  5444  081D                     	;# 
  5445  081E                     	;# 
  5446  081F                     	;# 
  5447  088C                     	;# 
  5448  088D                     	;# 
  5449  088E                     	;# 
  5450  088F                     	;# 
  5451  0890                     	;# 
  5452  0891                     	;# 
  5453  0892                     	;# 
  5454  0893                     	;# 
  5455  0895                     	;# 
  5456  0896                     	;# 
  5457  0897                     	;# 
  5458  0898                     	;# 
  5459  0899                     	;# 
  5460  089A                     	;# 
  5461  089B                     	;# 
  5462  090C                     	;# 
  5463  090E                     	;# 
  5464  090F                     	;# 
  5465  091F                     	;# 
  5466  098F                     	;# 
  5467  098F                     	;# 
  5468  0990                     	;# 
  5469  0991                     	;# 
  5470  0992                     	;# 
  5471  0993                     	;# 
  5472  0994                     	;# 
  5473  0995                     	;# 
  5474  0996                     	;# 
  5475  0997                     	;# 
  5476  1E0F                     	;# 
  5477  1E10                     	;# 
  5478  1E11                     	;# 
  5479  1E12                     	;# 
  5480  1E13                     	;# 
  5481  1E14                     	;# 
  5482  1E15                     	;# 
  5483  1E16                     	;# 
  5484  1E17                     	;# 
  5485  1E18                     	;# 
  5486  1E19                     	;# 
  5487  1E1A                     	;# 
  5488  1E1B                     	;# 
  5489  1E1C                     	;# 
  5490  1E1D                     	;# 
  5491  1E1E                     	;# 
  5492  1E1F                     	;# 
  5493  1E20                     	;# 
  5494  1E21                     	;# 
  5495  1E22                     	;# 
  5496  1E23                     	;# 
  5497  1E24                     	;# 
  5498  1E25                     	;# 
  5499  1E26                     	;# 
  5500  1E27                     	;# 
  5501  1E28                     	;# 
  5502  1E29                     	;# 
  5503  1E2A                     	;# 
  5504  1E2B                     	;# 
  5505  1E2C                     	;# 
  5506  1E2D                     	;# 
  5507  1E2E                     	;# 
  5508  1E2F                     	;# 
  5509  1E30                     	;# 
  5510  1E31                     	;# 
  5511  1E32                     	;# 
  5512  1E33                     	;# 
  5513  1E34                     	;# 
  5514  1E35                     	;# 
  5515  1E36                     	;# 
  5516  1E37                     	;# 
  5517  1E8F                     	;# 
  5518  1E90                     	;# 
  5519  1E91                     	;# 
  5520  1E92                     	;# 
  5521  1E93                     	;# 
  5522  1E94                     	;# 
  5523  1E95                     	;# 
  5524  1E96                     	;# 
  5525  1E97                     	;# 
  5526  1E9C                     	;# 
  5527  1E9D                     	;# 
  5528  1E9E                     	;# 
  5529  1EA1                     	;# 
  5530  1EA2                     	;# 
  5531  1EA3                     	;# 
  5532  1EA4                     	;# 
  5533  1EA9                     	;# 
  5534  1EAA                     	;# 
  5535  1EB1                     	;# 
  5536  1EB2                     	;# 
  5537  1EB8                     	;# 
  5538  1EB9                     	;# 
  5539  1EBA                     	;# 
  5540  1EBB                     	;# 
  5541  1EBC                     	;# 
  5542  1EBD                     	;# 
  5543  1EBE                     	;# 
  5544  1EC3                     	;# 
  5545  1EC5                     	;# 
  5546  1EC6                     	;# 
  5547  1EC7                     	;# 
  5548  1EC8                     	;# 
  5549  1EC9                     	;# 
  5550  1ECA                     	;# 
  5551  1ECB                     	;# 
  5552  1ECB                     	;# 
  5553  1ECB                     	;# 
  5554  1ECC                     	;# 
  5555  1ECC                     	;# 
  5556  1ECC                     	;# 
  5557  1F10                     	;# 
  5558  1F11                     	;# 
  5559  1F12                     	;# 
  5560  1F14                     	;# 
  5561  1F15                     	;# 
  5562  1F1C                     	;# 
  5563  1F1D                     	;# 
  5564  1F1E                     	;# 
  5565  1F1F                     	;# 
  5566  1F20                     	;# 
  5567  1F21                     	;# 
  5568  1F22                     	;# 
  5569  1F23                     	;# 
  5570  1F24                     	;# 
  5571  1F25                     	;# 
  5572  1F26                     	;# 
  5573  1F27                     	;# 
  5574  1F38                     	;# 
  5575  1F39                     	;# 
  5576  1F3A                     	;# 
  5577  1F3B                     	;# 
  5578  1F3C                     	;# 
  5579  1F3D                     	;# 
  5580  1F3E                     	;# 
  5581  1F3F                     	;# 
  5582  1F43                     	;# 
  5583  1F44                     	;# 
  5584  1F45                     	;# 
  5585  1F46                     	;# 
  5586  1F47                     	;# 
  5587  1F48                     	;# 
  5588  1F49                     	;# 
  5589  1F4A                     	;# 
  5590  1F4E                     	;# 
  5591  1F4F                     	;# 
  5592  1F50                     	;# 
  5593  1F51                     	;# 
  5594  1F52                     	;# 
  5595  1F53                     	;# 
  5596  1F54                     	;# 
  5597  1F55                     	;# 
  5598  1FE4                     	;# 
  5599  1FE5                     	;# 
  5600  1FE6                     	;# 
  5601  1FE7                     	;# 
  5602  1FE8                     	;# 
  5603  1FE8                     	;# 
  5604  1FE9                     	;# 
  5605  1FEA                     	;# 
  5606  1FEB                     	;# 
  5607  1FED                     	;# 
  5608  1FEE                     	;# 
  5609  1FEF                     	;# 
  5610  0000                     	;# 
  5611  0001                     	;# 
  5612  0002                     	;# 
  5613  0003                     	;# 
  5614  0004                     	;# 
  5615  0005                     	;# 
  5616  0006                     	;# 
  5617  0007                     	;# 
  5618  0008                     	;# 
  5619  0009                     	;# 
  5620  000A                     	;# 
  5621  000B                     	;# 
  5622  000C                     	;# 
  5623  000D                     	;# 
  5624  000E                     	;# 
  5625  0012                     	;# 
  5626  0013                     	;# 
  5627  0014                     	;# 
  5628  0018                     	;# 
  5629  0019                     	;# 
  5630  001A                     	;# 
  5631  008C                     	;# 
  5632  008C                     	;# 
  5633  008D                     	;# 
  5634  008E                     	;# 
  5635  008E                     	;# 
  5636  008F                     	;# 
  5637  0090                     	;# 
  5638  0090                     	;# 
  5639  0091                     	;# 
  5640  0092                     	;# 
  5641  0092                     	;# 
  5642  0093                     	;# 
  5643  0094                     	;# 
  5644  0094                     	;# 
  5645  0095                     	;# 
  5646  0096                     	;# 
  5647  0096                     	;# 
  5648  0097                     	;# 
  5649  0098                     	;# 
  5650  0099                     	;# 
  5651  009A                     	;# 
  5652  009B                     	;# 
  5653  009B                     	;# 
  5654  009C                     	;# 
  5655  009D                     	;# 
  5656  009D                     	;# 
  5657  009E                     	;# 
  5658  009F                     	;# 
  5659  010C                     	;# 
  5660  010C                     	;# 
  5661  010D                     	;# 
  5662  010E                     	;# 
  5663  010F                     	;# 
  5664  010F                     	;# 
  5665  0110                     	;# 
  5666  0111                     	;# 
  5667  0112                     	;# 
  5668  0113                     	;# 
  5669  0114                     	;# 
  5670  0115                     	;# 
  5671  0116                     	;# 
  5672  0117                     	;# 
  5673  0118                     	;# 
  5674  0119                     	;# 
  5675  0119                     	;# 
  5676  0119                     	;# 
  5677  011A                     	;# 
  5678  011A                     	;# 
  5679  011A                     	;# 
  5680  011B                     	;# 
  5681  011B                     	;# 
  5682  011B                     	;# 
  5683  011B                     	;# 
  5684  011B                     	;# 
  5685  011C                     	;# 
  5686  011C                     	;# 
  5687  011C                     	;# 
  5688  011D                     	;# 
  5689  011D                     	;# 
  5690  011D                     	;# 
  5691  011E                     	;# 
  5692  011E                     	;# 
  5693  011E                     	;# 
  5694  011F                     	;# 
  5695  011F                     	;# 
  5696  011F                     	;# 
  5697  011F                     	;# 
  5698  011F                     	;# 
  5699  018C                     	;# 
  5700  018D                     	;# 
  5701  018E                     	;# 
  5702  018F                     	;# 
  5703  0190                     	;# 
  5704  0191                     	;# 
  5705  0192                     	;# 
  5706  0196                     	;# 
  5707  0197                     	;# 
  5708  0198                     	;# 
  5709  0199                     	;# 
  5710  019A                     	;# 
  5711  019B                     	;# 
  5712  019C                     	;# 
  5713  020C                     	;# 
  5714  020D                     	;# 
  5715  020E                     	;# 
  5716  020E                     	;# 
  5717  020F                     	;# 
  5718  020F                     	;# 
  5719  0210                     	;# 
  5720  0210                     	;# 
  5721  0211                     	;# 
  5722  0211                     	;# 
  5723  0212                     	;# 
  5724  0213                     	;# 
  5725  0214                     	;# 
  5726  0214                     	;# 
  5727  0215                     	;# 
  5728  0215                     	;# 
  5729  0216                     	;# 
  5730  0216                     	;# 
  5731  0217                     	;# 
  5732  0217                     	;# 
  5733  0218                     	;# 
  5734  0219                     	;# 
  5735  021A                     	;# 
  5736  021A                     	;# 
  5737  021B                     	;# 
  5738  021B                     	;# 
  5739  021C                     	;# 
  5740  021C                     	;# 
  5741  021D                     	;# 
  5742  021D                     	;# 
  5743  021E                     	;# 
  5744  021F                     	;# 
  5745  028C                     	;# 
  5746  028C                     	;# 
  5747  028D                     	;# 
  5748  028D                     	;# 
  5749  028E                     	;# 
  5750  028F                     	;# 
  5751  0290                     	;# 
  5752  0291                     	;# 
  5753  0292                     	;# 
  5754  0292                     	;# 
  5755  0293                     	;# 
  5756  0293                     	;# 
  5757  0294                     	;# 
  5758  0295                     	;# 
  5759  0296                     	;# 
  5760  0297                     	;# 
  5761  0298                     	;# 
  5762  0298                     	;# 
  5763  0299                     	;# 
  5764  0299                     	;# 
  5765  029A                     	;# 
  5766  029B                     	;# 
  5767  029C                     	;# 
  5768  029D                     	;# 
  5769  029F                     	;# 
  5770  030C                     	;# 
  5771  030C                     	;# 
  5772  030D                     	;# 
  5773  030E                     	;# 
  5774  030F                     	;# 
  5775  0310                     	;# 
  5776  0310                     	;# 
  5777  0311                     	;# 
  5778  0312                     	;# 
  5779  0313                     	;# 
  5780  0314                     	;# 
  5781  0314                     	;# 
  5782  0315                     	;# 
  5783  0316                     	;# 
  5784  0317                     	;# 
  5785  0318                     	;# 
  5786  0318                     	;# 
  5787  0319                     	;# 
  5788  031A                     	;# 
  5789  031B                     	;# 
  5790  038C                     	;# 
  5791  038C                     	;# 
  5792  038D                     	;# 
  5793  038E                     	;# 
  5794  0390                     	;# 
  5795  0390                     	;# 
  5796  0391                     	;# 
  5797  0392                     	;# 
  5798  048C                     	;# 
  5799  048C                     	;# 
  5800  048D                     	;# 
  5801  048E                     	;# 
  5802  048F                     	;# 
  5803  048F                     	;# 
  5804  0490                     	;# 
  5805  0491                     	;# 
  5806  0492                     	;# 
  5807  0492                     	;# 
  5808  0493                     	;# 
  5809  0494                     	;# 
  5810  0495                     	;# 
  5811  0495                     	;# 
  5812  0496                     	;# 
  5813  0497                     	;# 
  5814  0498                     	;# 
  5815  0499                     	;# 
  5816  049A                     	;# 
  5817  049B                     	;# 
  5818  049C                     	;# 
  5819  049D                     	;# 
  5820  058C                     	;# 
  5821  058C                     	;# 
  5822  058D                     	;# 
  5823  058E                     	;# 
  5824  058F                     	;# 
  5825  058F                     	;# 
  5826  0590                     	;# 
  5827  0591                     	;# 
  5828  0592                     	;# 
  5829  0593                     	;# 
  5830  059C                     	;# 
  5831  059C                     	;# 
  5832  059D                     	;# 
  5833  059D                     	;# 
  5834  059E                     	;# 
  5835  059F                     	;# 
  5836  060C                     	;# 
  5837  060C                     	;# 
  5838  060D                     	;# 
  5839  060D                     	;# 
  5840  060E                     	;# 
  5841  060F                     	;# 
  5842  0610                     	;# 
  5843  0611                     	;# 
  5844  0612                     	;# 
  5845  0613                     	;# 
  5846  0614                     	;# 
  5847  0616                     	;# 
  5848  0616                     	;# 
  5849  0617                     	;# 
  5850  0617                     	;# 
  5851  0618                     	;# 
  5852  0619                     	;# 
  5853  061A                     	;# 
  5854  061B                     	;# 
  5855  061C                     	;# 
  5856  061D                     	;# 
  5857  061E                     	;# 
  5858  070C                     	;# 
  5859  070D                     	;# 
  5860  070E                     	;# 
  5861  070F                     	;# 
  5862  0710                     	;# 
  5863  0711                     	;# 
  5864  0712                     	;# 
  5865  0713                     	;# 
  5866  0714                     	;# 
  5867  0716                     	;# 
  5868  0717                     	;# 
  5869  0718                     	;# 
  5870  0719                     	;# 
  5871  071A                     	;# 
  5872  071B                     	;# 
  5873  071C                     	;# 
  5874  071D                     	;# 
  5875  071E                     	;# 
  5876  0796                     	;# 
  5877  0797                     	;# 
  5878  0798                     	;# 
  5879  0799                     	;# 
  5880  079A                     	;# 
  5881  079B                     	;# 
  5882  079C                     	;# 
  5883  079D                     	;# 
  5884  080C                     	;# 
  5885  080D                     	;# 
  5886  080E                     	;# 
  5887  080F                     	;# 
  5888  0810                     	;# 
  5889  0811                     	;# 
  5890  0812                     	;# 
  5891  0813                     	;# 
  5892  0814                     	;# 
  5893  081A                     	;# 
  5894  081A                     	;# 
  5895  081B                     	;# 
  5896  081C                     	;# 
  5897  081C                     	;# 
  5898  081D                     	;# 
  5899  081E                     	;# 
  5900  081F                     	;# 
  5901  088C                     	;# 
  5902  088D                     	;# 
  5903  088E                     	;# 
  5904  088F                     	;# 
  5905  0890                     	;# 
  5906  0891                     	;# 
  5907  0892                     	;# 
  5908  0893                     	;# 
  5909  0895                     	;# 
  5910  0896                     	;# 
  5911  0897                     	;# 
  5912  0898                     	;# 
  5913  0899                     	;# 
  5914  089A                     	;# 
  5915  089B                     	;# 
  5916  090C                     	;# 
  5917  090E                     	;# 
  5918  090F                     	;# 
  5919  091F                     	;# 
  5920  098F                     	;# 
  5921  098F                     	;# 
  5922  0990                     	;# 
  5923  0991                     	;# 
  5924  0992                     	;# 
  5925  0993                     	;# 
  5926  0994                     	;# 
  5927  0995                     	;# 
  5928  0996                     	;# 
  5929  0997                     	;# 
  5930  1E0F                     	;# 
  5931  1E10                     	;# 
  5932  1E11                     	;# 
  5933  1E12                     	;# 
  5934  1E13                     	;# 
  5935  1E14                     	;# 
  5936  1E15                     	;# 
  5937  1E16                     	;# 
  5938  1E17                     	;# 
  5939  1E18                     	;# 
  5940  1E19                     	;# 
  5941  1E1A                     	;# 
  5942  1E1B                     	;# 
  5943  1E1C                     	;# 
  5944  1E1D                     	;# 
  5945  1E1E                     	;# 
  5946  1E1F                     	;# 
  5947  1E20                     	;# 
  5948  1E21                     	;# 
  5949  1E22                     	;# 
  5950  1E23                     	;# 
  5951  1E24                     	;# 
  5952  1E25                     	;# 
  5953  1E26                     	;# 
  5954  1E27                     	;# 
  5955  1E28                     	;# 
  5956  1E29                     	;# 
  5957  1E2A                     	;# 
  5958  1E2B                     	;# 
  5959  1E2C                     	;# 
  5960  1E2D                     	;# 
  5961  1E2E                     	;# 
  5962  1E2F                     	;# 
  5963  1E30                     	;# 
  5964  1E31                     	;# 
  5965  1E32                     	;# 
  5966  1E33                     	;# 
  5967  1E34                     	;# 
  5968  1E35                     	;# 
  5969  1E36                     	;# 
  5970  1E37                     	;# 
  5971  1E8F                     	;# 
  5972  1E90                     	;# 
  5973  1E91                     	;# 
  5974  1E92                     	;# 
  5975  1E93                     	;# 
  5976  1E94                     	;# 
  5977  1E95                     	;# 
  5978  1E96                     	;# 
  5979  1E97                     	;# 
  5980  1E9C                     	;# 
  5981  1E9D                     	;# 
  5982  1E9E                     	;# 
  5983  1EA1                     	;# 
  5984  1EA2                     	;# 
  5985  1EA3                     	;# 
  5986  1EA4                     	;# 
  5987  1EA9                     	;# 
  5988  1EAA                     	;# 
  5989  1EB1                     	;# 
  5990  1EB2                     	;# 
  5991  1EB8                     	;# 
  5992  1EB9                     	;# 
  5993  1EBA                     	;# 
  5994  1EBB                     	;# 
  5995  1EBC                     	;# 
  5996  1EBD                     	;# 
  5997  1EBE                     	;# 
  5998  1EC3                     	;# 
  5999  1EC5                     	;# 
  6000  1EC6                     	;# 
  6001  1EC7                     	;# 
  6002  1EC8                     	;# 
  6003  1EC9                     	;# 
  6004  1ECA                     	;# 
  6005  1ECB                     	;# 
  6006  1ECB                     	;# 
  6007  1ECB                     	;# 
  6008  1ECC                     	;# 
  6009  1ECC                     	;# 
  6010  1ECC                     	;# 
  6011  1F10                     	;# 
  6012  1F11                     	;# 
  6013  1F12                     	;# 
  6014  1F14                     	;# 
  6015  1F15                     	;# 
  6016  1F1C                     	;# 
  6017  1F1D                     	;# 
  6018  1F1E                     	;# 
  6019  1F1F                     	;# 
  6020  1F20                     	;# 
  6021  1F21                     	;# 
  6022  1F22                     	;# 
  6023  1F23                     	;# 
  6024  1F24                     	;# 
  6025  1F25                     	;# 
  6026  1F26                     	;# 
  6027  1F27                     	;# 
  6028  1F38                     	;# 
  6029  1F39                     	;# 
  6030  1F3A                     	;# 
  6031  1F3B                     	;# 
  6032  1F3C                     	;# 
  6033  1F3D                     	;# 
  6034  1F3E                     	;# 
  6035  1F3F                     	;# 
  6036  1F43                     	;# 
  6037  1F44                     	;# 
  6038  1F45                     	;# 
  6039  1F46                     	;# 
  6040  1F47                     	;# 
  6041  1F48                     	;# 
  6042  1F49                     	;# 
  6043  1F4A                     	;# 
  6044  1F4E                     	;# 
  6045  1F4F                     	;# 
  6046  1F50                     	;# 
  6047  1F51                     	;# 
  6048  1F52                     	;# 
  6049  1F53                     	;# 
  6050  1F54                     	;# 
  6051  1F55                     	;# 
  6052  1FE4                     	;# 
  6053  1FE5                     	;# 
  6054  1FE6                     	;# 
  6055  1FE7                     	;# 
  6056  1FE8                     	;# 
  6057  1FE8                     	;# 
  6058  1FE9                     	;# 
  6059  1FEA                     	;# 
  6060  1FEB                     	;# 
  6061  1FED                     	;# 
  6062  1FEE                     	;# 
  6063  1FEF                     	;# 
  6064  0000                     	;# 
  6065  0001                     	;# 
  6066  0002                     	;# 
  6067  0003                     	;# 
  6068  0004                     	;# 
  6069  0005                     	;# 
  6070  0006                     	;# 
  6071  0007                     	;# 
  6072  0008                     	;# 
  6073  0009                     	;# 
  6074  000A                     	;# 
  6075  000B                     	;# 
  6076  000C                     	;# 
  6077  000D                     	;# 
  6078  000E                     	;# 
  6079  0012                     	;# 
  6080  0013                     	;# 
  6081  0014                     	;# 
  6082  0018                     	;# 
  6083  0019                     	;# 
  6084  001A                     	;# 
  6085  008C                     	;# 
  6086  008C                     	;# 
  6087  008D                     	;# 
  6088  008E                     	;# 
  6089  008E                     	;# 
  6090  008F                     	;# 
  6091  0090                     	;# 
  6092  0090                     	;# 
  6093  0091                     	;# 
  6094  0092                     	;# 
  6095  0092                     	;# 
  6096  0093                     	;# 
  6097  0094                     	;# 
  6098  0094                     	;# 
  6099  0095                     	;# 
  6100  0096                     	;# 
  6101  0096                     	;# 
  6102  0097                     	;# 
  6103  0098                     	;# 
  6104  0099                     	;# 
  6105  009A                     	;# 
  6106  009B                     	;# 
  6107  009B                     	;# 
  6108  009C                     	;# 
  6109  009D                     	;# 
  6110  009D                     	;# 
  6111  009E                     	;# 
  6112  009F                     	;# 
  6113  010C                     	;# 
  6114  010C                     	;# 
  6115  010D                     	;# 
  6116  010E                     	;# 
  6117  010F                     	;# 
  6118  010F                     	;# 
  6119  0110                     	;# 
  6120  0111                     	;# 
  6121  0112                     	;# 
  6122  0113                     	;# 
  6123  0114                     	;# 
  6124  0115                     	;# 
  6125  0116                     	;# 
  6126  0117                     	;# 
  6127  0118                     	;# 
  6128  0119                     	;# 
  6129  0119                     	;# 
  6130  0119                     	;# 
  6131  011A                     	;# 
  6132  011A                     	;# 
  6133  011A                     	;# 
  6134  011B                     	;# 
  6135  011B                     	;# 
  6136  011B                     	;# 
  6137  011B                     	;# 
  6138  011B                     	;# 
  6139  011C                     	;# 
  6140  011C                     	;# 
  6141  011C                     	;# 
  6142  011D                     	;# 
  6143  011D                     	;# 
  6144  011D                     	;# 
  6145  011E                     	;# 
  6146  011E                     	;# 
  6147  011E                     	;# 
  6148  011F                     	;# 
  6149  011F                     	;# 
  6150  011F                     	;# 
  6151  011F                     	;# 
  6152  011F                     	;# 
  6153  018C                     	;# 
  6154  018D                     	;# 
  6155  018E                     	;# 
  6156  018F                     	;# 
  6157  0190                     	;# 
  6158  0191                     	;# 
  6159  0192                     	;# 
  6160  0196                     	;# 
  6161  0197                     	;# 
  6162  0198                     	;# 
  6163  0199                     	;# 
  6164  019A                     	;# 
  6165  019B                     	;# 
  6166  019C                     	;# 
  6167  020C                     	;# 
  6168  020D                     	;# 
  6169  020E                     	;# 
  6170  020E                     	;# 
  6171  020F                     	;# 
  6172  020F                     	;# 
  6173  0210                     	;# 
  6174  0210                     	;# 
  6175  0211                     	;# 
  6176  0211                     	;# 
  6177  0212                     	;# 
  6178  0213                     	;# 
  6179  0214                     	;# 
  6180  0214                     	;# 
  6181  0215                     	;# 
  6182  0215                     	;# 
  6183  0216                     	;# 
  6184  0216                     	;# 
  6185  0217                     	;# 
  6186  0217                     	;# 
  6187  0218                     	;# 
  6188  0219                     	;# 
  6189  021A                     	;# 
  6190  021A                     	;# 
  6191  021B                     	;# 
  6192  021B                     	;# 
  6193  021C                     	;# 
  6194  021C                     	;# 
  6195  021D                     	;# 
  6196  021D                     	;# 
  6197  021E                     	;# 
  6198  021F                     	;# 
  6199  028C                     	;# 
  6200  028C                     	;# 
  6201  028D                     	;# 
  6202  028D                     	;# 
  6203  028E                     	;# 
  6204  028F                     	;# 
  6205  0290                     	;# 
  6206  0291                     	;# 
  6207  0292                     	;# 
  6208  0292                     	;# 
  6209  0293                     	;# 
  6210  0293                     	;# 
  6211  0294                     	;# 
  6212  0295                     	;# 
  6213  0296                     	;# 
  6214  0297                     	;# 
  6215  0298                     	;# 
  6216  0298                     	;# 
  6217  0299                     	;# 
  6218  0299                     	;# 
  6219  029A                     	;# 
  6220  029B                     	;# 
  6221  029C                     	;# 
  6222  029D                     	;# 
  6223  029F                     	;# 
  6224  030C                     	;# 
  6225  030C                     	;# 
  6226  030D                     	;# 
  6227  030E                     	;# 
  6228  030F                     	;# 
  6229  0310                     	;# 
  6230  0310                     	;# 
  6231  0311                     	;# 
  6232  0312                     	;# 
  6233  0313                     	;# 
  6234  0314                     	;# 
  6235  0314                     	;# 
  6236  0315                     	;# 
  6237  0316                     	;# 
  6238  0317                     	;# 
  6239  0318                     	;# 
  6240  0318                     	;# 
  6241  0319                     	;# 
  6242  031A                     	;# 
  6243  031B                     	;# 
  6244  038C                     	;# 
  6245  038C                     	;# 
  6246  038D                     	;# 
  6247  038E                     	;# 
  6248  0390                     	;# 
  6249  0390                     	;# 
  6250  0391                     	;# 
  6251  0392                     	;# 
  6252  048C                     	;# 
  6253  048C                     	;# 
  6254  048D                     	;# 
  6255  048E                     	;# 
  6256  048F                     	;# 
  6257  048F                     	;# 
  6258  0490                     	;# 
  6259  0491                     	;# 
  6260  0492                     	;# 
  6261  0492                     	;# 
  6262  0493                     	;# 
  6263  0494                     	;# 
  6264  0495                     	;# 
  6265  0495                     	;# 
  6266  0496                     	;# 
  6267  0497                     	;# 
  6268  0498                     	;# 
  6269  0499                     	;# 
  6270  049A                     	;# 
  6271  049B                     	;# 
  6272  049C                     	;# 
  6273  049D                     	;# 
  6274  058C                     	;# 
  6275  058C                     	;# 
  6276  058D                     	;# 
  6277  058E                     	;# 
  6278  058F                     	;# 
  6279  058F                     	;# 
  6280  0590                     	;# 
  6281  0591                     	;# 
  6282  0592                     	;# 
  6283  0593                     	;# 
  6284  059C                     	;# 
  6285  059C                     	;# 
  6286  059D                     	;# 
  6287  059D                     	;# 
  6288  059E                     	;# 
  6289  059F                     	;# 
  6290  060C                     	;# 
  6291  060C                     	;# 
  6292  060D                     	;# 
  6293  060D                     	;# 
  6294  060E                     	;# 
  6295  060F                     	;# 
  6296  0610                     	;# 
  6297  0611                     	;# 
  6298  0612                     	;# 
  6299  0613                     	;# 
  6300  0614                     	;# 
  6301  0616                     	;# 
  6302  0616                     	;# 
  6303  0617                     	;# 
  6304  0617                     	;# 
  6305  0618                     	;# 
  6306  0619                     	;# 
  6307  061A                     	;# 
  6308  061B                     	;# 
  6309  061C                     	;# 
  6310  061D                     	;# 
  6311  061E                     	;# 
  6312  070C                     	;# 
  6313  070D                     	;# 
  6314  070E                     	;# 
  6315  070F                     	;# 
  6316  0710                     	;# 
  6317  0711                     	;# 
  6318  0712                     	;# 
  6319  0713                     	;# 
  6320  0714                     	;# 
  6321  0716                     	;# 
  6322  0717                     	;# 
  6323  0718                     	;# 
  6324  0719                     	;# 
  6325  071A                     	;# 
  6326  071B                     	;# 
  6327  071C                     	;# 
  6328  071D                     	;# 
  6329  071E                     	;# 
  6330  0796                     	;# 
  6331  0797                     	;# 
  6332  0798                     	;# 
  6333  0799                     	;# 
  6334  079A                     	;# 
  6335  079B                     	;# 
  6336  079C                     	;# 
  6337  079D                     	;# 
  6338  080C                     	;# 
  6339  080D                     	;# 
  6340  080E                     	;# 
  6341  080F                     	;# 
  6342  0810                     	;# 
  6343  0811                     	;# 
  6344  0812                     	;# 
  6345  0813                     	;# 
  6346  0814                     	;# 
  6347  081A                     	;# 
  6348  081A                     	;# 
  6349  081B                     	;# 
  6350  081C                     	;# 
  6351  081C                     	;# 
  6352  081D                     	;# 
  6353  081E                     	;# 
  6354  081F                     	;# 
  6355  088C                     	;# 
  6356  088D                     	;# 
  6357  088E                     	;# 
  6358  088F                     	;# 
  6359  0890                     	;# 
  6360  0891                     	;# 
  6361  0892                     	;# 
  6362  0893                     	;# 
  6363  0895                     	;# 
  6364  0896                     	;# 
  6365  0897                     	;# 
  6366  0898                     	;# 
  6367  0899                     	;# 
  6368  089A                     	;# 
  6369  089B                     	;# 
  6370  090C                     	;# 
  6371  090E                     	;# 
  6372  090F                     	;# 
  6373  091F                     	;# 
  6374  098F                     	;# 
  6375  098F                     	;# 
  6376  0990                     	;# 
  6377  0991                     	;# 
  6378  0992                     	;# 
  6379  0993                     	;# 
  6380  0994                     	;# 
  6381  0995                     	;# 
  6382  0996                     	;# 
  6383  0997                     	;# 
  6384  1E0F                     	;# 
  6385  1E10                     	;# 
  6386  1E11                     	;# 
  6387  1E12                     	;# 
  6388  1E13                     	;# 
  6389  1E14                     	;# 
  6390  1E15                     	;# 
  6391  1E16                     	;# 
  6392  1E17                     	;# 
  6393  1E18                     	;# 
  6394  1E19                     	;# 
  6395  1E1A                     	;# 
  6396  1E1B                     	;# 
  6397  1E1C                     	;# 
  6398  1E1D                     	;# 
  6399  1E1E                     	;# 
  6400  1E1F                     	;# 
  6401  1E20                     	;# 
  6402  1E21                     	;# 
  6403  1E22                     	;# 
  6404  1E23                     	;# 
  6405  1E24                     	;# 
  6406  1E25                     	;# 
  6407  1E26                     	;# 
  6408  1E27                     	;# 
  6409  1E28                     	;# 
  6410  1E29                     	;# 
  6411  1E2A                     	;# 
  6412  1E2B                     	;# 
  6413  1E2C                     	;# 
  6414  1E2D                     	;# 
  6415  1E2E                     	;# 
  6416  1E2F                     	;# 
  6417  1E30                     	;# 
  6418  1E31                     	;# 
  6419  1E32                     	;# 
  6420  1E33                     	;# 
  6421  1E34                     	;# 
  6422  1E35                     	;# 
  6423  1E36                     	;# 
  6424  1E37                     	;# 
  6425  1E8F                     	;# 
  6426  1E90                     	;# 
  6427  1E91                     	;# 
  6428  1E92                     	;# 
  6429  1E93                     	;# 
  6430  1E94                     	;# 
  6431  1E95                     	;# 
  6432  1E96                     	;# 
  6433  1E97                     	;# 
  6434  1E9C                     	;# 
  6435  1E9D                     	;# 
  6436  1E9E                     	;# 
  6437  1EA1                     	;# 
  6438  1EA2                     	;# 
  6439  1EA3                     	;# 
  6440  1EA4                     	;# 
  6441  1EA9                     	;# 
  6442  1EAA                     	;# 
  6443  1EB1                     	;# 
  6444  1EB2                     	;# 
  6445  1EB8                     	;# 
  6446  1EB9                     	;# 
  6447  1EBA                     	;# 
  6448  1EBB                     	;# 
  6449  1EBC                     	;# 
  6450  1EBD                     	;# 
  6451  1EBE                     	;# 
  6452  1EC3                     	;# 
  6453  1EC5                     	;# 
  6454  1EC6                     	;# 
  6455  1EC7                     	;# 
  6456  1EC8                     	;# 
  6457  1EC9                     	;# 
  6458  1ECA                     	;# 
  6459  1ECB                     	;# 
  6460  1ECB                     	;# 
  6461  1ECB                     	;# 
  6462  1ECC                     	;# 
  6463  1ECC                     	;# 
  6464  1ECC                     	;# 
  6465  1F10                     	;# 
  6466  1F11                     	;# 
  6467  1F12                     	;# 
  6468  1F14                     	;# 
  6469  1F15                     	;# 
  6470  1F1C                     	;# 
  6471  1F1D                     	;# 
  6472  1F1E                     	;# 
  6473  1F1F                     	;# 
  6474  1F20                     	;# 
  6475  1F21                     	;# 
  6476  1F22                     	;# 
  6477  1F23                     	;# 
  6478  1F24                     	;# 
  6479  1F25                     	;# 
  6480  1F26                     	;# 
  6481  1F27                     	;# 
  6482  1F38                     	;# 
  6483  1F39                     	;# 
  6484  1F3A                     	;# 
  6485  1F3B                     	;# 
  6486  1F3C                     	;# 
  6487  1F3D                     	;# 
  6488  1F3E                     	;# 
  6489  1F3F                     	;# 
  6490  1F43                     	;# 
  6491  1F44                     	;# 
  6492  1F45                     	;# 
  6493  1F46                     	;# 
  6494  1F47                     	;# 
  6495  1F48                     	;# 
  6496  1F49                     	;# 
  6497  1F4A                     	;# 
  6498  1F4E                     	;# 
  6499  1F4F                     	;# 
  6500  1F50                     	;# 
  6501  1F51                     	;# 
  6502  1F52                     	;# 
  6503  1F53                     	;# 
  6504  1F54                     	;# 
  6505  1F55                     	;# 
  6506  1FE4                     	;# 
  6507  1FE5                     	;# 
  6508  1FE6                     	;# 
  6509  1FE7                     	;# 
  6510  1FE8                     	;# 
  6511  1FE8                     	;# 
  6512  1FE9                     	;# 
  6513  1FEA                     	;# 
  6514  1FEB                     	;# 
  6515  1FED                     	;# 
  6516  1FEE                     	;# 
  6517  1FEF                     	;# 
  6518  0000                     	;# 
  6519  0001                     	;# 
  6520  0002                     	;# 
  6521  0003                     	;# 
  6522  0004                     	;# 
  6523  0005                     	;# 
  6524  0006                     	;# 
  6525  0007                     	;# 
  6526  0008                     	;# 
  6527  0009                     	;# 
  6528  000A                     	;# 
  6529  000B                     	;# 
  6530  000C                     	;# 
  6531  000D                     	;# 
  6532  000E                     	;# 
  6533  0012                     	;# 
  6534  0013                     	;# 
  6535  0014                     	;# 
  6536  0018                     	;# 
  6537  0019                     	;# 
  6538  001A                     	;# 
  6539  008C                     	;# 
  6540  008C                     	;# 
  6541  008D                     	;# 
  6542  008E                     	;# 
  6543  008E                     	;# 
  6544  008F                     	;# 
  6545  0090                     	;# 
  6546  0090                     	;# 
  6547  0091                     	;# 
  6548  0092                     	;# 
  6549  0092                     	;# 
  6550  0093                     	;# 
  6551  0094                     	;# 
  6552  0094                     	;# 
  6553  0095                     	;# 
  6554  0096                     	;# 
  6555  0096                     	;# 
  6556  0097                     	;# 
  6557  0098                     	;# 
  6558  0099                     	;# 
  6559  009A                     	;# 
  6560  009B                     	;# 
  6561  009B                     	;# 
  6562  009C                     	;# 
  6563  009D                     	;# 
  6564  009D                     	;# 
  6565  009E                     	;# 
  6566  009F                     	;# 
  6567  010C                     	;# 
  6568  010C                     	;# 
  6569  010D                     	;# 
  6570  010E                     	;# 
  6571  010F                     	;# 
  6572  010F                     	;# 
  6573  0110                     	;# 
  6574  0111                     	;# 
  6575  0112                     	;# 
  6576  0113                     	;# 
  6577  0114                     	;# 
  6578  0115                     	;# 
  6579  0116                     	;# 
  6580  0117                     	;# 
  6581  0118                     	;# 
  6582  0119                     	;# 
  6583  0119                     	;# 
  6584  0119                     	;# 
  6585  011A                     	;# 
  6586  011A                     	;# 
  6587  011A                     	;# 
  6588  011B                     	;# 
  6589  011B                     	;# 
  6590  011B                     	;# 
  6591  011B                     	;# 
  6592  011B                     	;# 
  6593  011C                     	;# 
  6594  011C                     	;# 
  6595  011C                     	;# 
  6596  011D                     	;# 
  6597  011D                     	;# 
  6598  011D                     	;# 
  6599  011E                     	;# 
  6600  011E                     	;# 
  6601  011E                     	;# 
  6602  011F                     	;# 
  6603  011F                     	;# 
  6604  011F                     	;# 
  6605  011F                     	;# 
  6606  011F                     	;# 
  6607  018C                     	;# 
  6608  018D                     	;# 
  6609  018E                     	;# 
  6610  018F                     	;# 
  6611  0190                     	;# 
  6612  0191                     	;# 
  6613  0192                     	;# 
  6614  0196                     	;# 
  6615  0197                     	;# 
  6616  0198                     	;# 
  6617  0199                     	;# 
  6618  019A                     	;# 
  6619  019B                     	;# 
  6620  019C                     	;# 
  6621  020C                     	;# 
  6622  020D                     	;# 
  6623  020E                     	;# 
  6624  020E                     	;# 
  6625  020F                     	;# 
  6626  020F                     	;# 
  6627  0210                     	;# 
  6628  0210                     	;# 
  6629  0211                     	;# 
  6630  0211                     	;# 
  6631  0212                     	;# 
  6632  0213                     	;# 
  6633  0214                     	;# 
  6634  0214                     	;# 
  6635  0215                     	;# 
  6636  0215                     	;# 
  6637  0216                     	;# 
  6638  0216                     	;# 
  6639  0217                     	;# 
  6640  0217                     	;# 
  6641  0218                     	;# 
  6642  0219                     	;# 
  6643  021A                     	;# 
  6644  021A                     	;# 
  6645  021B                     	;# 
  6646  021B                     	;# 
  6647  021C                     	;# 
  6648  021C                     	;# 
  6649  021D                     	;# 
  6650  021D                     	;# 
  6651  021E                     	;# 
  6652  021F                     	;# 
  6653  028C                     	;# 
  6654  028C                     	;# 
  6655  028D                     	;# 
  6656  028D                     	;# 
  6657  028E                     	;# 
  6658  028F                     	;# 
  6659  0290                     	;# 
  6660  0291                     	;# 
  6661  0292                     	;# 
  6662  0292                     	;# 
  6663  0293                     	;# 
  6664  0293                     	;# 
  6665  0294                     	;# 
  6666  0295                     	;# 
  6667  0296                     	;# 
  6668  0297                     	;# 
  6669  0298                     	;# 
  6670  0298                     	;# 
  6671  0299                     	;# 
  6672  0299                     	;# 
  6673  029A                     	;# 
  6674  029B                     	;# 
  6675  029C                     	;# 
  6676  029D                     	;# 
  6677  029F                     	;# 
  6678  030C                     	;# 
  6679  030C                     	;# 
  6680  030D                     	;# 
  6681  030E                     	;# 
  6682  030F                     	;# 
  6683  0310                     	;# 
  6684  0310                     	;# 
  6685  0311                     	;# 
  6686  0312                     	;# 
  6687  0313                     	;# 
  6688  0314                     	;# 
  6689  0314                     	;# 
  6690  0315                     	;# 
  6691  0316                     	;# 
  6692  0317                     	;# 
  6693  0318                     	;# 
  6694  0318                     	;# 
  6695  0319                     	;# 
  6696  031A                     	;# 
  6697  031B                     	;# 
  6698  038C                     	;# 
  6699  038C                     	;# 
  6700  038D                     	;# 
  6701  038E                     	;# 
  6702  0390                     	;# 
  6703  0390                     	;# 
  6704  0391                     	;# 
  6705  0392                     	;# 
  6706  048C                     	;# 
  6707  048C                     	;# 
  6708  048D                     	;# 
  6709  048E                     	;# 
  6710  048F                     	;# 
  6711  048F                     	;# 
  6712  0490                     	;# 
  6713  0491                     	;# 
  6714  0492                     	;# 
  6715  0492                     	;# 
  6716  0493                     	;# 
  6717  0494                     	;# 
  6718  0495                     	;# 
  6719  0495                     	;# 
  6720  0496                     	;# 
  6721  0497                     	;# 
  6722  0498                     	;# 
  6723  0499                     	;# 
  6724  049A                     	;# 
  6725  049B                     	;# 
  6726  049C                     	;# 
  6727  049D                     	;# 
  6728  058C                     	;# 
  6729  058C                     	;# 
  6730  058D                     	;# 
  6731  058E                     	;# 
  6732  058F                     	;# 
  6733  058F                     	;# 
  6734  0590                     	;# 
  6735  0591                     	;# 
  6736  0592                     	;# 
  6737  0593                     	;# 
  6738  059C                     	;# 
  6739  059C                     	;# 
  6740  059D                     	;# 
  6741  059D                     	;# 
  6742  059E                     	;# 
  6743  059F                     	;# 
  6744  060C                     	;# 
  6745  060C                     	;# 
  6746  060D                     	;# 
  6747  060D                     	;# 
  6748  060E                     	;# 
  6749  060F                     	;# 
  6750  0610                     	;# 
  6751  0611                     	;# 
  6752  0612                     	;# 
  6753  0613                     	;# 
  6754  0614                     	;# 
  6755  0616                     	;# 
  6756  0616                     	;# 
  6757  0617                     	;# 
  6758  0617                     	;# 
  6759  0618                     	;# 
  6760  0619                     	;# 
  6761  061A                     	;# 
  6762  061B                     	;# 
  6763  061C                     	;# 
  6764  061D                     	;# 
  6765  061E                     	;# 
  6766  070C                     	;# 
  6767  070D                     	;# 
  6768  070E                     	;# 
  6769  070F                     	;# 
  6770  0710                     	;# 
  6771  0711                     	;# 
  6772  0712                     	;# 
  6773  0713                     	;# 
  6774  0714                     	;# 
  6775  0716                     	;# 
  6776  0717                     	;# 
  6777  0718                     	;# 
  6778  0719                     	;# 
  6779  071A                     	;# 
  6780  071B                     	;# 
  6781  071C                     	;# 
  6782  071D                     	;# 
  6783  071E                     	;# 
  6784  0796                     	;# 
  6785  0797                     	;# 
  6786  0798                     	;# 
  6787  0799                     	;# 
  6788  079A                     	;# 
  6789  079B                     	;# 
  6790  079C                     	;# 
  6791  079D                     	;# 
  6792  080C                     	;# 
  6793  080D                     	;# 
  6794  080E                     	;# 
  6795  080F                     	;# 
  6796  0810                     	;# 
  6797  0811                     	;# 
  6798  0812                     	;# 
  6799  0813                     	;# 
  6800  0814                     	;# 
  6801  081A                     	;# 
  6802  081A                     	;# 
  6803  081B                     	;# 
  6804  081C                     	;# 
  6805  081C                     	;# 
  6806  081D                     	;# 
  6807  081E                     	;# 
  6808  081F                     	;# 
  6809  088C                     	;# 
  6810  088D                     	;# 
  6811  088E                     	;# 
  6812  088F                     	;# 
  6813  0890                     	;# 
  6814  0891                     	;# 
  6815  0892                     	;# 
  6816  0893                     	;# 
  6817  0895                     	;# 
  6818  0896                     	;# 
  6819  0897                     	;# 
  6820  0898                     	;# 
  6821  0899                     	;# 
  6822  089A                     	;# 
  6823  089B                     	;# 
  6824  090C                     	;# 
  6825  090E                     	;# 
  6826  090F                     	;# 
  6827  091F                     	;# 
  6828  098F                     	;# 
  6829  098F                     	;# 
  6830  0990                     	;# 
  6831  0991                     	;# 
  6832  0992                     	;# 
  6833  0993                     	;# 
  6834  0994                     	;# 
  6835  0995                     	;# 
  6836  0996                     	;# 
  6837  0997                     	;# 
  6838  1E0F                     	;# 
  6839  1E10                     	;# 
  6840  1E11                     	;# 
  6841  1E12                     	;# 
  6842  1E13                     	;# 
  6843  1E14                     	;# 
  6844  1E15                     	;# 
  6845  1E16                     	;# 
  6846  1E17                     	;# 
  6847  1E18                     	;# 
  6848  1E19                     	;# 
  6849  1E1A                     	;# 
  6850  1E1B                     	;# 
  6851  1E1C                     	;# 
  6852  1E1D                     	;# 
  6853  1E1E                     	;# 
  6854  1E1F                     	;# 
  6855  1E20                     	;# 
  6856  1E21                     	;# 
  6857  1E22                     	;# 
  6858  1E23                     	;# 
  6859  1E24                     	;# 
  6860  1E25                     	;# 
  6861  1E26                     	;# 
  6862  1E27                     	;# 
  6863  1E28                     	;# 
  6864  1E29                     	;# 
  6865  1E2A                     	;# 
  6866  1E2B                     	;# 
  6867  1E2C                     	;# 
  6868  1E2D                     	;# 
  6869  1E2E                     	;# 
  6870  1E2F                     	;# 
  6871  1E30                     	;# 
  6872  1E31                     	;# 
  6873  1E32                     	;# 
  6874  1E33                     	;# 
  6875  1E34                     	;# 
  6876  1E35                     	;# 
  6877  1E36                     	;# 
  6878  1E37                     	;# 
  6879  1E8F                     	;# 
  6880  1E90                     	;# 
  6881  1E91                     	;# 
  6882  1E92                     	;# 
  6883  1E93                     	;# 
  6884  1E94                     	;# 
  6885  1E95                     	;# 
  6886  1E96                     	;# 
  6887  1E97                     	;# 
  6888  1E9C                     	;# 
  6889  1E9D                     	;# 
  6890  1E9E                     	;# 
  6891  1EA1                     	;# 
  6892  1EA2                     	;# 
  6893  1EA3                     	;# 
  6894  1EA4                     	;# 
  6895  1EA9                     	;# 
  6896  1EAA                     	;# 
  6897  1EB1                     	;# 
  6898  1EB2                     	;# 
  6899  1EB8                     	;# 
  6900  1EB9                     	;# 
  6901  1EBA                     	;# 
  6902  1EBB                     	;# 
  6903  1EBC                     	;# 
  6904  1EBD                     	;# 
  6905  1EBE                     	;# 
  6906  1EC3                     	;# 
  6907  1EC5                     	;# 
  6908  1EC6                     	;# 
  6909  1EC7                     	;# 
  6910  1EC8                     	;# 
  6911  1EC9                     	;# 
  6912  1ECA                     	;# 
  6913  1ECB                     	;# 
  6914  1ECB                     	;# 
  6915  1ECB                     	;# 
  6916  1ECC                     	;# 
  6917  1ECC                     	;# 
  6918  1ECC                     	;# 
  6919  1F10                     	;# 
  6920  1F11                     	;# 
  6921  1F12                     	;# 
  6922  1F14                     	;# 
  6923  1F15                     	;# 
  6924  1F1C                     	;# 
  6925  1F1D                     	;# 
  6926  1F1E                     	;# 
  6927  1F1F                     	;# 
  6928  1F20                     	;# 
  6929  1F21                     	;# 
  6930  1F22                     	;# 
  6931  1F23                     	;# 
  6932  1F24                     	;# 
  6933  1F25                     	;# 
  6934  1F26                     	;# 
  6935  1F27                     	;# 
  6936  1F38                     	;# 
  6937  1F39                     	;# 
  6938  1F3A                     	;# 
  6939  1F3B                     	;# 
  6940  1F3C                     	;# 
  6941  1F3D                     	;# 
  6942  1F3E                     	;# 
  6943  1F3F                     	;# 
  6944  1F43                     	;# 
  6945  1F44                     	;# 
  6946  1F45                     	;# 
  6947  1F46                     	;# 
  6948  1F47                     	;# 
  6949  1F48                     	;# 
  6950  1F49                     	;# 
  6951  1F4A                     	;# 
  6952  1F4E                     	;# 
  6953  1F4F                     	;# 
  6954  1F50                     	;# 
  6955  1F51                     	;# 
  6956  1F52                     	;# 
  6957  1F53                     	;# 
  6958  1F54                     	;# 
  6959  1F55                     	;# 
  6960  1FE4                     	;# 
  6961  1FE5                     	;# 
  6962  1FE6                     	;# 
  6963  1FE7                     	;# 
  6964  1FE8                     	;# 
  6965  1FE8                     	;# 
  6966  1FE9                     	;# 
  6967  1FEA                     	;# 
  6968  1FEB                     	;# 
  6969  1FED                     	;# 
  6970  1FEE                     	;# 
  6971  1FEF                     	;# 
  6972  0000                     	;# 
  6973  0001                     	;# 
  6974  0002                     	;# 
  6975  0003                     	;# 
  6976  0004                     	;# 
  6977  0005                     	;# 
  6978  0006                     	;# 
  6979  0007                     	;# 
  6980  0008                     	;# 
  6981  0009                     	;# 
  6982  000A                     	;# 
  6983  000B                     	;# 
  6984  000C                     	;# 
  6985  000D                     	;# 
  6986  000E                     	;# 
  6987  0012                     	;# 
  6988  0013                     	;# 
  6989  0014                     	;# 
  6990  0018                     	;# 
  6991  0019                     	;# 
  6992  001A                     	;# 
  6993  008C                     	;# 
  6994  008C                     	;# 
  6995  008D                     	;# 
  6996  008E                     	;# 
  6997  008E                     	;# 
  6998  008F                     	;# 
  6999  0090                     	;# 
  7000  0090                     	;# 
  7001  0091                     	;# 
  7002  0092                     	;# 
  7003  0092                     	;# 
  7004  0093                     	;# 
  7005  0094                     	;# 
  7006  0094                     	;# 
  7007  0095                     	;# 
  7008  0096                     	;# 
  7009  0096                     	;# 
  7010  0097                     	;# 
  7011  0098                     	;# 
  7012  0099                     	;# 
  7013  009A                     	;# 
  7014  009B                     	;# 
  7015  009B                     	;# 
  7016  009C                     	;# 
  7017  009D                     	;# 
  7018  009D                     	;# 
  7019  009E                     	;# 
  7020  009F                     	;# 
  7021  010C                     	;# 
  7022  010C                     	;# 
  7023  010D                     	;# 
  7024  010E                     	;# 
  7025  010F                     	;# 
  7026  010F                     	;# 
  7027  0110                     	;# 
  7028  0111                     	;# 
  7029  0112                     	;# 
  7030  0113                     	;# 
  7031  0114                     	;# 
  7032  0115                     	;# 
  7033  0116                     	;# 
  7034  0117                     	;# 
  7035  0118                     	;# 
  7036  0119                     	;# 
  7037  0119                     	;# 
  7038  0119                     	;# 
  7039  011A                     	;# 
  7040  011A                     	;# 
  7041  011A                     	;# 
  7042  011B                     	;# 
  7043  011B                     	;# 
  7044  011B                     	;# 
  7045  011B                     	;# 
  7046  011B                     	;# 
  7047  011C                     	;# 
  7048  011C                     	;# 
  7049  011C                     	;# 
  7050  011D                     	;# 
  7051  011D                     	;# 
  7052  011D                     	;# 
  7053  011E                     	;# 
  7054  011E                     	;# 
  7055  011E                     	;# 
  7056  011F                     	;# 
  7057  011F                     	;# 
  7058  011F                     	;# 
  7059  011F                     	;# 
  7060  011F                     	;# 
  7061  018C                     	;# 
  7062  018D                     	;# 
  7063  018E                     	;# 
  7064  018F                     	;# 
  7065  0190                     	;# 
  7066  0191                     	;# 
  7067  0192                     	;# 
  7068  0196                     	;# 
  7069  0197                     	;# 
  7070  0198                     	;# 
  7071  0199                     	;# 
  7072  019A                     	;# 
  7073  019B                     	;# 
  7074  019C                     	;# 
  7075  020C                     	;# 
  7076  020D                     	;# 
  7077  020E                     	;# 
  7078  020E                     	;# 
  7079  020F                     	;# 
  7080  020F                     	;# 
  7081  0210                     	;# 
  7082  0210                     	;# 
  7083  0211                     	;# 
  7084  0211                     	;# 
  7085  0212                     	;# 
  7086  0213                     	;# 
  7087  0214                     	;# 
  7088  0214                     	;# 
  7089  0215                     	;# 
  7090  0215                     	;# 
  7091  0216                     	;# 
  7092  0216                     	;# 
  7093  0217                     	;# 
  7094  0217                     	;# 
  7095  0218                     	;# 
  7096  0219                     	;# 
  7097  021A                     	;# 
  7098  021A                     	;# 
  7099  021B                     	;# 
  7100  021B                     	;# 
  7101  021C                     	;# 
  7102  021C                     	;# 
  7103  021D                     	;# 
  7104  021D                     	;# 
  7105  021E                     	;# 
  7106  021F                     	;# 
  7107  028C                     	;# 
  7108  028C                     	;# 
  7109  028D                     	;# 
  7110  028D                     	;# 
  7111  028E                     	;# 
  7112  028F                     	;# 
  7113  0290                     	;# 
  7114  0291                     	;# 
  7115  0292                     	;# 
  7116  0292                     	;# 
  7117  0293                     	;# 
  7118  0293                     	;# 
  7119  0294                     	;# 
  7120  0295                     	;# 
  7121  0296                     	;# 
  7122  0297                     	;# 
  7123  0298                     	;# 
  7124  0298                     	;# 
  7125  0299                     	;# 
  7126  0299                     	;# 
  7127  029A                     	;# 
  7128  029B                     	;# 
  7129  029C                     	;# 
  7130  029D                     	;# 
  7131  029F                     	;# 
  7132  030C                     	;# 
  7133  030C                     	;# 
  7134  030D                     	;# 
  7135  030E                     	;# 
  7136  030F                     	;# 
  7137  0310                     	;# 
  7138  0310                     	;# 
  7139  0311                     	;# 
  7140  0312                     	;# 
  7141  0313                     	;# 
  7142  0314                     	;# 
  7143  0314                     	;# 
  7144  0315                     	;# 
  7145  0316                     	;# 
  7146  0317                     	;# 
  7147  0318                     	;# 
  7148  0318                     	;# 
  7149  0319                     	;# 
  7150  031A                     	;# 
  7151  031B                     	;# 
  7152  038C                     	;# 
  7153  038C                     	;# 
  7154  038D                     	;# 
  7155  038E                     	;# 
  7156  0390                     	;# 
  7157  0390                     	;# 
  7158  0391                     	;# 
  7159  0392                     	;# 
  7160  048C                     	;# 
  7161  048C                     	;# 
  7162  048D                     	;# 
  7163  048E                     	;# 
  7164  048F                     	;# 
  7165  048F                     	;# 
  7166  0490                     	;# 
  7167  0491                     	;# 
  7168  0492                     	;# 
  7169  0492                     	;# 
  7170  0493                     	;# 
  7171  0494                     	;# 
  7172  0495                     	;# 
  7173  0495                     	;# 
  7174  0496                     	;# 
  7175  0497                     	;# 
  7176  0498                     	;# 
  7177  0499                     	;# 
  7178  049A                     	;# 
  7179  049B                     	;# 
  7180  049C                     	;# 
  7181  049D                     	;# 
  7182  058C                     	;# 
  7183  058C                     	;# 
  7184  058D                     	;# 
  7185  058E                     	;# 
  7186  058F                     	;# 
  7187  058F                     	;# 
  7188  0590                     	;# 
  7189  0591                     	;# 
  7190  0592                     	;# 
  7191  0593                     	;# 
  7192  059C                     	;# 
  7193  059C                     	;# 
  7194  059D                     	;# 
  7195  059D                     	;# 
  7196  059E                     	;# 
  7197  059F                     	;# 
  7198  060C                     	;# 
  7199  060C                     	;# 
  7200  060D                     	;# 
  7201  060D                     	;# 
  7202  060E                     	;# 
  7203  060F                     	;# 
  7204  0610                     	;# 
  7205  0611                     	;# 
  7206  0612                     	;# 
  7207  0613                     	;# 
  7208  0614                     	;# 
  7209  0616                     	;# 
  7210  0616                     	;# 
  7211  0617                     	;# 
  7212  0617                     	;# 
  7213  0618                     	;# 
  7214  0619                     	;# 
  7215  061A                     	;# 
  7216  061B                     	;# 
  7217  061C                     	;# 
  7218  061D                     	;# 
  7219  061E                     	;# 
  7220  070C                     	;# 
  7221  070D                     	;# 
  7222  070E                     	;# 
  7223  070F                     	;# 
  7224  0710                     	;# 
  7225  0711                     	;# 
  7226  0712                     	;# 
  7227  0713                     	;# 
  7228  0714                     	;# 
  7229  0716                     	;# 
  7230  0717                     	;# 
  7231  0718                     	;# 
  7232  0719                     	;# 
  7233  071A                     	;# 
  7234  071B                     	;# 
  7235  071C                     	;# 
  7236  071D                     	;# 
  7237  071E                     	;# 
  7238  0796                     	;# 
  7239  0797                     	;# 
  7240  0798                     	;# 
  7241  0799                     	;# 
  7242  079A                     	;# 
  7243  079B                     	;# 
  7244  079C                     	;# 
  7245  079D                     	;# 
  7246  080C                     	;# 
  7247  080D                     	;# 
  7248  080E                     	;# 
  7249  080F                     	;# 
  7250  0810                     	;# 
  7251  0811                     	;# 
  7252  0812                     	;# 
  7253  0813                     	;# 
  7254  0814                     	;# 
  7255  081A                     	;# 
  7256  081A                     	;# 
  7257  081B                     	;# 
  7258  081C                     	;# 
  7259  081C                     	;# 
  7260  081D                     	;# 
  7261  081E                     	;# 
  7262  081F                     	;# 
  7263  088C                     	;# 
  7264  088D                     	;# 
  7265  088E                     	;# 
  7266  088F                     	;# 
  7267  0890                     	;# 
  7268  0891                     	;# 
  7269  0892                     	;# 
  7270  0893                     	;# 
  7271  0895                     	;# 
  7272  0896                     	;# 
  7273  0897                     	;# 
  7274  0898                     	;# 
  7275  0899                     	;# 
  7276  089A                     	;# 
  7277  089B                     	;# 
  7278  090C                     	;# 
  7279  090E                     	;# 
  7280  090F                     	;# 
  7281  091F                     	;# 
  7282  098F                     	;# 
  7283  098F                     	;# 
  7284  0990                     	;# 
  7285  0991                     	;# 
  7286  0992                     	;# 
  7287  0993                     	;# 
  7288  0994                     	;# 
  7289  0995                     	;# 
  7290  0996                     	;# 
  7291  0997                     	;# 
  7292  1E0F                     	;# 
  7293  1E10                     	;# 
  7294  1E11                     	;# 
  7295  1E12                     	;# 
  7296  1E13                     	;# 
  7297  1E14                     	;# 
  7298  1E15                     	;# 
  7299  1E16                     	;# 
  7300  1E17                     	;# 
  7301  1E18                     	;# 
  7302  1E19                     	;# 
  7303  1E1A                     	;# 
  7304  1E1B                     	;# 
  7305  1E1C                     	;# 
  7306  1E1D                     	;# 
  7307  1E1E                     	;# 
  7308  1E1F                     	;# 
  7309  1E20                     	;# 
  7310  1E21                     	;# 
  7311  1E22                     	;# 
  7312  1E23                     	;# 
  7313  1E24                     	;# 
  7314  1E25                     	;# 
  7315  1E26                     	;# 
  7316  1E27                     	;# 
  7317  1E28                     	;# 
  7318  1E29                     	;# 
  7319  1E2A                     	;# 
  7320  1E2B                     	;# 
  7321  1E2C                     	;# 
  7322  1E2D                     	;# 
  7323  1E2E                     	;# 
  7324  1E2F                     	;# 
  7325  1E30                     	;# 
  7326  1E31                     	;# 
  7327  1E32                     	;# 
  7328  1E33                     	;# 
  7329  1E34                     	;# 
  7330  1E35                     	;# 
  7331  1E36                     	;# 
  7332  1E37                     	;# 
  7333  1E8F                     	;# 
  7334  1E90                     	;# 
  7335  1E91                     	;# 
  7336  1E92                     	;# 
  7337  1E93                     	;# 
  7338  1E94                     	;# 
  7339  1E95                     	;# 
  7340  1E96                     	;# 
  7341  1E97                     	;# 
  7342  1E9C                     	;# 
  7343  1E9D                     	;# 
  7344  1E9E                     	;# 
  7345  1EA1                     	;# 
  7346  1EA2                     	;# 
  7347  1EA3                     	;# 
  7348  1EA4                     	;# 
  7349  1EA9                     	;# 
  7350  1EAA                     	;# 
  7351  1EB1                     	;# 
  7352  1EB2                     	;# 
  7353  1EB8                     	;# 
  7354  1EB9                     	;# 
  7355  1EBA                     	;# 
  7356  1EBB                     	;# 
  7357  1EBC                     	;# 
  7358  1EBD                     	;# 
  7359  1EBE                     	;# 
  7360  1EC3                     	;# 
  7361  1EC5                     	;# 
  7362  1EC6                     	;# 
  7363  1EC7                     	;# 
  7364  1EC8                     	;# 
  7365  1EC9                     	;# 
  7366  1ECA                     	;# 
  7367  1ECB                     	;# 
  7368  1ECB                     	;# 
  7369  1ECB                     	;# 
  7370  1ECC                     	;# 
  7371  1ECC                     	;# 
  7372  1ECC                     	;# 
  7373  1F10                     	;# 
  7374  1F11                     	;# 
  7375  1F12                     	;# 
  7376  1F14                     	;# 
  7377  1F15                     	;# 
  7378  1F1C                     	;# 
  7379  1F1D                     	;# 
  7380  1F1E                     	;# 
  7381  1F1F                     	;# 
  7382  1F20                     	;# 
  7383  1F21                     	;# 
  7384  1F22                     	;# 
  7385  1F23                     	;# 
  7386  1F24                     	;# 
  7387  1F25                     	;# 
  7388  1F26                     	;# 
  7389  1F27                     	;# 
  7390  1F38                     	;# 
  7391  1F39                     	;# 
  7392  1F3A                     	;# 
  7393  1F3B                     	;# 
  7394  1F3C                     	;# 
  7395  1F3D                     	;# 
  7396  1F3E                     	;# 
  7397  1F3F                     	;# 
  7398  1F43                     	;# 
  7399  1F44                     	;# 
  7400  1F45                     	;# 
  7401  1F46                     	;# 
  7402  1F47                     	;# 
  7403  1F48                     	;# 
  7404  1F49                     	;# 
  7405  1F4A                     	;# 
  7406  1F4E                     	;# 
  7407  1F4F                     	;# 
  7408  1F50                     	;# 
  7409  1F51                     	;# 
  7410  1F52                     	;# 
  7411  1F53                     	;# 
  7412  1F54                     	;# 
  7413  1F55                     	;# 
  7414  1FE4                     	;# 
  7415  1FE5                     	;# 
  7416  1FE6                     	;# 
  7417  1FE7                     	;# 
  7418  1FE8                     	;# 
  7419  1FE8                     	;# 
  7420  1FE9                     	;# 
  7421  1FEA                     	;# 
  7422  1FEB                     	;# 
  7423  1FED                     	;# 
  7424  1FEE                     	;# 
  7425  1FEF                     	;# 
  7426  0000                     	;# 
  7427  0001                     	;# 
  7428  0002                     	;# 
  7429  0003                     	;# 
  7430  0004                     	;# 
  7431  0005                     	;# 
  7432  0006                     	;# 
  7433  0007                     	;# 
  7434  0008                     	;# 
  7435  0009                     	;# 
  7436  000A                     	;# 
  7437  000B                     	;# 
  7438  000C                     	;# 
  7439  000D                     	;# 
  7440  000E                     	;# 
  7441  0012                     	;# 
  7442  0013                     	;# 
  7443  0014                     	;# 
  7444  0018                     	;# 
  7445  0019                     	;# 
  7446  001A                     	;# 
  7447  008C                     	;# 
  7448  008C                     	;# 
  7449  008D                     	;# 
  7450  008E                     	;# 
  7451  008E                     	;# 
  7452  008F                     	;# 
  7453  0090                     	;# 
  7454  0090                     	;# 
  7455  0091                     	;# 
  7456  0092                     	;# 
  7457  0092                     	;# 
  7458  0093                     	;# 
  7459  0094                     	;# 
  7460  0094                     	;# 
  7461  0095                     	;# 
  7462  0096                     	;# 
  7463  0096                     	;# 
  7464  0097                     	;# 
  7465  0098                     	;# 
  7466  0099                     	;# 
  7467  009A                     	;# 
  7468  009B                     	;# 
  7469  009B                     	;# 
  7470  009C                     	;# 
  7471  009D                     	;# 
  7472  009D                     	;# 
  7473  009E                     	;# 
  7474  009F                     	;# 
  7475  010C                     	;# 
  7476  010C                     	;# 
  7477  010D                     	;# 
  7478  010E                     	;# 
  7479  010F                     	;# 
  7480  010F                     	;# 
  7481  0110                     	;# 
  7482  0111                     	;# 
  7483  0112                     	;# 
  7484  0113                     	;# 
  7485  0114                     	;# 
  7486  0115                     	;# 
  7487  0116                     	;# 
  7488  0117                     	;# 
  7489  0118                     	;# 
  7490  0119                     	;# 
  7491  0119                     	;# 
  7492  0119                     	;# 
  7493  011A                     	;# 
  7494  011A                     	;# 
  7495  011A                     	;# 
  7496  011B                     	;# 
  7497  011B                     	;# 
  7498  011B                     	;# 
  7499  011B                     	;# 
  7500  011B                     	;# 
  7501  011C                     	;# 
  7502  011C                     	;# 
  7503  011C                     	;# 
  7504  011D                     	;# 
  7505  011D                     	;# 
  7506  011D                     	;# 
  7507  011E                     	;# 
  7508  011E                     	;# 
  7509  011E                     	;# 
  7510  011F                     	;# 
  7511  011F                     	;# 
  7512  011F                     	;# 
  7513  011F                     	;# 
  7514  011F                     	;# 
  7515  018C                     	;# 
  7516  018D                     	;# 
  7517  018E                     	;# 
  7518  018F                     	;# 
  7519  0190                     	;# 
  7520  0191                     	;# 
  7521  0192                     	;# 
  7522  0196                     	;# 
  7523  0197                     	;# 
  7524  0198                     	;# 
  7525  0199                     	;# 
  7526  019A                     	;# 
  7527  019B                     	;# 
  7528  019C                     	;# 
  7529  020C                     	;# 
  7530  020D                     	;# 
  7531  020E                     	;# 
  7532  020E                     	;# 
  7533  020F                     	;# 
  7534  020F                     	;# 
  7535  0210                     	;# 
  7536  0210                     	;# 
  7537  0211                     	;# 
  7538  0211                     	;# 
  7539  0212                     	;# 
  7540  0213                     	;# 
  7541  0214                     	;# 
  7542  0214                     	;# 
  7543  0215                     	;# 
  7544  0215                     	;# 
  7545  0216                     	;# 
  7546  0216                     	;# 
  7547  0217                     	;# 
  7548  0217                     	;# 
  7549  0218                     	;# 
  7550  0219                     	;# 
  7551  021A                     	;# 
  7552  021A                     	;# 
  7553  021B                     	;# 
  7554  021B                     	;# 
  7555  021C                     	;# 
  7556  021C                     	;# 
  7557  021D                     	;# 
  7558  021D                     	;# 
  7559  021E                     	;# 
  7560  021F                     	;# 
  7561  028C                     	;# 
  7562  028C                     	;# 
  7563  028D                     	;# 
  7564  028D                     	;# 
  7565  028E                     	;# 
  7566  028F                     	;# 
  7567  0290                     	;# 
  7568  0291                     	;# 
  7569  0292                     	;# 
  7570  0292                     	;# 
  7571  0293                     	;# 
  7572  0293                     	;# 
  7573  0294                     	;# 
  7574  0295                     	;# 
  7575  0296                     	;# 
  7576  0297                     	;# 
  7577  0298                     	;# 
  7578  0298                     	;# 
  7579  0299                     	;# 
  7580  0299                     	;# 
  7581  029A                     	;# 
  7582  029B                     	;# 
  7583  029C                     	;# 
  7584  029D                     	;# 
  7585  029F                     	;# 
  7586  030C                     	;# 
  7587  030C                     	;# 
  7588  030D                     	;# 
  7589  030E                     	;# 
  7590  030F                     	;# 
  7591  0310                     	;# 
  7592  0310                     	;# 
  7593  0311                     	;# 
  7594  0312                     	;# 
  7595  0313                     	;# 
  7596  0314                     	;# 
  7597  0314                     	;# 
  7598  0315                     	;# 
  7599  0316                     	;# 
  7600  0317                     	;# 
  7601  0318                     	;# 
  7602  0318                     	;# 
  7603  0319                     	;# 
  7604  031A                     	;# 
  7605  031B                     	;# 
  7606  038C                     	;# 
  7607  038C                     	;# 
  7608  038D                     	;# 
  7609  038E                     	;# 
  7610  0390                     	;# 
  7611  0390                     	;# 
  7612  0391                     	;# 
  7613  0392                     	;# 
  7614  048C                     	;# 
  7615  048C                     	;# 
  7616  048D                     	;# 
  7617  048E                     	;# 
  7618  048F                     	;# 
  7619  048F                     	;# 
  7620  0490                     	;# 
  7621  0491                     	;# 
  7622  0492                     	;# 
  7623  0492                     	;# 
  7624  0493                     	;# 
  7625  0494                     	;# 
  7626  0495                     	;# 
  7627  0495                     	;# 
  7628  0496                     	;# 
  7629  0497                     	;# 
  7630  0498                     	;# 
  7631  0499                     	;# 
  7632  049A                     	;# 
  7633  049B                     	;# 
  7634  049C                     	;# 
  7635  049D                     	;# 
  7636  058C                     	;# 
  7637  058C                     	;# 
  7638  058D                     	;# 
  7639  058E                     	;# 
  7640  058F                     	;# 
  7641  058F                     	;# 
  7642  0590                     	;# 
  7643  0591                     	;# 
  7644  0592                     	;# 
  7645  0593                     	;# 
  7646  059C                     	;# 
  7647  059C                     	;# 
  7648  059D                     	;# 
  7649  059D                     	;# 
  7650  059E                     	;# 
  7651  059F                     	;# 
  7652  060C                     	;# 
  7653  060C                     	;# 
  7654  060D                     	;# 
  7655  060D                     	;# 
  7656  060E                     	;# 
  7657  060F                     	;# 
  7658  0610                     	;# 
  7659  0611                     	;# 
  7660  0612                     	;# 
  7661  0613                     	;# 
  7662  0614                     	;# 
  7663  0616                     	;# 
  7664  0616                     	;# 
  7665  0617                     	;# 
  7666  0617                     	;# 
  7667  0618                     	;# 
  7668  0619                     	;# 
  7669  061A                     	;# 
  7670  061B                     	;# 
  7671  061C                     	;# 
  7672  061D                     	;# 
  7673  061E                     	;# 
  7674  070C                     	;# 
  7675  070D                     	;# 
  7676  070E                     	;# 
  7677  070F                     	;# 
  7678  0710                     	;# 
  7679  0711                     	;# 
  7680  0712                     	;# 
  7681  0713                     	;# 
  7682  0714                     	;# 
  7683  0716                     	;# 
  7684  0717                     	;# 
  7685  0718                     	;# 
  7686  0719                     	;# 
  7687  071A                     	;# 
  7688  071B                     	;# 
  7689  071C                     	;# 
  7690  071D                     	;# 
  7691  071E                     	;# 
  7692  0796                     	;# 
  7693  0797                     	;# 
  7694  0798                     	;# 
  7695  0799                     	;# 
  7696  079A                     	;# 
  7697  079B                     	;# 
  7698  079C                     	;# 
  7699  079D                     	;# 
  7700  080C                     	;# 
  7701  080D                     	;# 
  7702  080E                     	;# 
  7703  080F                     	;# 
  7704  0810                     	;# 
  7705  0811                     	;# 
  7706  0812                     	;# 
  7707  0813                     	;# 
  7708  0814                     	;# 
  7709  081A                     	;# 
  7710  081A                     	;# 
  7711  081B                     	;# 
  7712  081C                     	;# 
  7713  081C                     	;# 
  7714  081D                     	;# 
  7715  081E                     	;# 
  7716  081F                     	;# 
  7717  088C                     	;# 
  7718  088D                     	;# 
  7719  088E                     	;# 
  7720  088F                     	;# 
  7721  0890                     	;# 
  7722  0891                     	;# 
  7723  0892                     	;# 
  7724  0893                     	;# 
  7725  0895                     	;# 
  7726  0896                     	;# 
  7727  0897                     	;# 
  7728  0898                     	;# 
  7729  0899                     	;# 
  7730  089A                     	;# 
  7731  089B                     	;# 
  7732  090C                     	;# 
  7733  090E                     	;# 
  7734  090F                     	;# 
  7735  091F                     	;# 
  7736  098F                     	;# 
  7737  098F                     	;# 
  7738  0990                     	;# 
  7739  0991                     	;# 
  7740  0992                     	;# 
  7741  0993                     	;# 
  7742  0994                     	;# 
  7743  0995                     	;# 
  7744  0996                     	;# 
  7745  0997                     	;# 
  7746  1E0F                     	;# 
  7747  1E10                     	;# 
  7748  1E11                     	;# 
  7749  1E12                     	;# 
  7750  1E13                     	;# 
  7751  1E14                     	;# 
  7752  1E15                     	;# 
  7753  1E16                     	;# 
  7754  1E17                     	;# 
  7755  1E18                     	;# 
  7756  1E19                     	;# 
  7757  1E1A                     	;# 
  7758  1E1B                     	;# 
  7759  1E1C                     	;# 
  7760  1E1D                     	;# 
  7761  1E1E                     	;# 
  7762  1E1F                     	;# 
  7763  1E20                     	;# 
  7764  1E21                     	;# 
  7765  1E22                     	;# 
  7766  1E23                     	;# 
  7767  1E24                     	;# 
  7768  1E25                     	;# 
  7769  1E26                     	;# 
  7770  1E27                     	;# 
  7771  1E28                     	;# 
  7772  1E29                     	;# 
  7773  1E2A                     	;# 
  7774  1E2B                     	;# 
  7775  1E2C                     	;# 
  7776  1E2D                     	;# 
  7777  1E2E                     	;# 
  7778  1E2F                     	;# 
  7779  1E30                     	;# 
  7780  1E31                     	;# 
  7781  1E32                     	;# 
  7782  1E33                     	;# 
  7783  1E34                     	;# 
  7784  1E35                     	;# 
  7785  1E36                     	;# 
  7786  1E37                     	;# 
  7787  1E8F                     	;# 
  7788  1E90                     	;# 
  7789  1E91                     	;# 
  7790  1E92                     	;# 
  7791  1E93                     	;# 
  7792  1E94                     	;# 
  7793  1E95                     	;# 
  7794  1E96                     	;# 
  7795  1E97                     	;# 
  7796  1E9C                     	;# 
  7797  1E9D                     	;# 
  7798  1E9E                     	;# 
  7799  1EA1                     	;# 
  7800  1EA2                     	;# 
  7801  1EA3                     	;# 
  7802  1EA4                     	;# 
  7803  1EA9                     	;# 
  7804  1EAA                     	;# 
  7805  1EB1                     	;# 
  7806  1EB2                     	;# 
  7807  1EB8                     	;# 
  7808  1EB9                     	;# 
  7809  1EBA                     	;# 
  7810  1EBB                     	;# 
  7811  1EBC                     	;# 
  7812  1EBD                     	;# 
  7813  1EBE                     	;# 
  7814  1EC3                     	;# 
  7815  1EC5                     	;# 
  7816  1EC6                     	;# 
  7817  1EC7                     	;# 
  7818  1EC8                     	;# 
  7819  1EC9                     	;# 
  7820  1ECA                     	;# 
  7821  1ECB                     	;# 
  7822  1ECB                     	;# 
  7823  1ECB                     	;# 
  7824  1ECC                     	;# 
  7825  1ECC                     	;# 
  7826  1ECC                     	;# 
  7827  1F10                     	;# 
  7828  1F11                     	;# 
  7829  1F12                     	;# 
  7830  1F14                     	;# 
  7831  1F15                     	;# 
  7832  1F1C                     	;# 
  7833  1F1D                     	;# 
  7834  1F1E                     	;# 
  7835  1F1F                     	;# 
  7836  1F20                     	;# 
  7837  1F21                     	;# 
  7838  1F22                     	;# 
  7839  1F23                     	;# 
  7840  1F24                     	;# 
  7841  1F25                     	;# 
  7842  1F26                     	;# 
  7843  1F27                     	;# 
  7844  1F38                     	;# 
  7845  1F39                     	;# 
  7846  1F3A                     	;# 
  7847  1F3B                     	;# 
  7848  1F3C                     	;# 
  7849  1F3D                     	;# 
  7850  1F3E                     	;# 
  7851  1F3F                     	;# 
  7852  1F43                     	;# 
  7853  1F44                     	;# 
  7854  1F45                     	;# 
  7855  1F46                     	;# 
  7856  1F47                     	;# 
  7857  1F48                     	;# 
  7858  1F49                     	;# 
  7859  1F4A                     	;# 
  7860  1F4E                     	;# 
  7861  1F4F                     	;# 
  7862  1F50                     	;# 
  7863  1F51                     	;# 
  7864  1F52                     	;# 
  7865  1F53                     	;# 
  7866  1F54                     	;# 
  7867  1F55                     	;# 
  7868  1FE4                     	;# 
  7869  1FE5                     	;# 
  7870  1FE6                     	;# 
  7871  1FE7                     	;# 
  7872  1FE8                     	;# 
  7873  1FE8                     	;# 
  7874  1FE9                     	;# 
  7875  1FEA                     	;# 
  7876  1FEB                     	;# 
  7877  1FED                     	;# 
  7878  1FEE                     	;# 
  7879  1FEF                     	;# 
  7880  0000                     	;# 
  7881  0001                     	;# 
  7882  0002                     	;# 
  7883  0003                     	;# 
  7884  0004                     	;# 
  7885  0005                     	;# 
  7886  0006                     	;# 
  7887  0007                     	;# 
  7888  0008                     	;# 
  7889  0009                     	;# 
  7890  000A                     	;# 
  7891  000B                     	;# 
  7892  000C                     	;# 
  7893  000D                     	;# 
  7894  000E                     	;# 
  7895  0012                     	;# 
  7896  0013                     	;# 
  7897  0014                     	;# 
  7898  0018                     	;# 
  7899  0019                     	;# 
  7900  001A                     	;# 
  7901  008C                     	;# 
  7902  008C                     	;# 
  7903  008D                     	;# 
  7904  008E                     	;# 
  7905  008E                     	;# 
  7906  008F                     	;# 
  7907  0090                     	;# 
  7908  0090                     	;# 
  7909  0091                     	;# 
  7910  0092                     	;# 
  7911  0092                     	;# 
  7912  0093                     	;# 
  7913  0094                     	;# 
  7914  0094                     	;# 
  7915  0095                     	;# 
  7916  0096                     	;# 
  7917  0096                     	;# 
  7918  0097                     	;# 
  7919  0098                     	;# 
  7920  0099                     	;# 
  7921  009A                     	;# 
  7922  009B                     	;# 
  7923  009B                     	;# 
  7924  009C                     	;# 
  7925  009D                     	;# 
  7926  009D                     	;# 
  7927  009E                     	;# 
  7928  009F                     	;# 
  7929  010C                     	;# 
  7930  010C                     	;# 
  7931  010D                     	;# 
  7932  010E                     	;# 
  7933  010F                     	;# 
  7934  010F                     	;# 
  7935  0110                     	;# 
  7936  0111                     	;# 
  7937  0112                     	;# 
  7938  0113                     	;# 
  7939  0114                     	;# 
  7940  0115                     	;# 
  7941  0116                     	;# 
  7942  0117                     	;# 
  7943  0118                     	;# 
  7944  0119                     	;# 
  7945  0119                     	;# 
  7946  0119                     	;# 
  7947  011A                     	;# 
  7948  011A                     	;# 
  7949  011A                     	;# 
  7950  011B                     	;# 
  7951  011B                     	;# 
  7952  011B                     	;# 
  7953  011B                     	;# 
  7954  011B                     	;# 
  7955  011C                     	;# 
  7956  011C                     	;# 
  7957  011C                     	;# 
  7958  011D                     	;# 
  7959  011D                     	;# 
  7960  011D                     	;# 
  7961  011E                     	;# 
  7962  011E                     	;# 
  7963  011E                     	;# 
  7964  011F                     	;# 
  7965  011F                     	;# 
  7966  011F                     	;# 
  7967  011F                     	;# 
  7968  011F                     	;# 
  7969  018C                     	;# 
  7970  018D                     	;# 
  7971  018E                     	;# 
  7972  018F                     	;# 
  7973  0190                     	;# 
  7974  0191                     	;# 
  7975  0192                     	;# 
  7976  0196                     	;# 
  7977  0197                     	;# 
  7978  0198                     	;# 
  7979  0199                     	;# 
  7980  019A                     	;# 
  7981  019B                     	;# 
  7982  019C                     	;# 
  7983  020C                     	;# 
  7984  020D                     	;# 
  7985  020E                     	;# 
  7986  020E                     	;# 
  7987  020F                     	;# 
  7988  020F                     	;# 
  7989  0210                     	;# 
  7990  0210                     	;# 
  7991  0211                     	;# 
  7992  0211                     	;# 
  7993  0212                     	;# 
  7994  0213                     	;# 
  7995  0214                     	;# 
  7996  0214                     	;# 
  7997  0215                     	;# 
  7998  0215                     	;# 
  7999  0216                     	;# 
  8000  0216                     	;# 
  8001  0217                     	;# 
  8002  0217                     	;# 
  8003  0218                     	;# 
  8004  0219                     	;# 
  8005  021A                     	;# 
  8006  021A                     	;# 
  8007  021B                     	;# 
  8008  021B                     	;# 
  8009  021C                     	;# 
  8010  021C                     	;# 
  8011  021D                     	;# 
  8012  021D                     	;# 
  8013  021E                     	;# 
  8014  021F                     	;# 
  8015  028C                     	;# 
  8016  028C                     	;# 
  8017  028D                     	;# 
  8018  028D                     	;# 
  8019  028E                     	;# 
  8020  028F                     	;# 
  8021  0290                     	;# 
  8022  0291                     	;# 
  8023  0292                     	;# 
  8024  0292                     	;# 
  8025  0293                     	;# 
  8026  0293                     	;# 
  8027  0294                     	;# 
  8028  0295                     	;# 
  8029  0296                     	;# 
  8030  0297                     	;# 
  8031  0298                     	;# 
  8032  0298                     	;# 
  8033  0299                     	;# 
  8034  0299                     	;# 
  8035  029A                     	;# 
  8036  029B                     	;# 
  8037  029C                     	;# 
  8038  029D                     	;# 
  8039  029F                     	;# 
  8040  030C                     	;# 
  8041  030C                     	;# 
  8042  030D                     	;# 
  8043  030E                     	;# 
  8044  030F                     	;# 
  8045  0310                     	;# 
  8046  0310                     	;# 
  8047  0311                     	;# 
  8048  0312                     	;# 
  8049  0313                     	;# 
  8050  0314                     	;# 
  8051  0314                     	;# 
  8052  0315                     	;# 
  8053  0316                     	;# 
  8054  0317                     	;# 
  8055  0318                     	;# 
  8056  0318                     	;# 
  8057  0319                     	;# 
  8058  031A                     	;# 
  8059  031B                     	;# 
  8060  038C                     	;# 
  8061  038C                     	;# 
  8062  038D                     	;# 
  8063  038E                     	;# 
  8064  0390                     	;# 
  8065  0390                     	;# 
  8066  0391                     	;# 
  8067  0392                     	;# 
  8068  048C                     	;# 
  8069  048C                     	;# 
  8070  048D                     	;# 
  8071  048E                     	;# 
  8072  048F                     	;# 
  8073  048F                     	;# 
  8074  0490                     	;# 
  8075  0491                     	;# 
  8076  0492                     	;# 
  8077  0492                     	;# 
  8078  0493                     	;# 
  8079  0494                     	;# 
  8080  0495                     	;# 
  8081  0495                     	;# 
  8082  0496                     	;# 
  8083  0497                     	;# 
  8084  0498                     	;# 
  8085  0499                     	;# 
  8086  049A                     	;# 
  8087  049B                     	;# 
  8088  049C                     	;# 
  8089  049D                     	;# 
  8090  058C                     	;# 
  8091  058C                     	;# 
  8092  058D                     	;# 
  8093  058E                     	;# 
  8094  058F                     	;# 
  8095  058F                     	;# 
  8096  0590                     	;# 
  8097  0591                     	;# 
  8098  0592                     	;# 
  8099  0593                     	;# 
  8100  059C                     	;# 
  8101  059C                     	;# 
  8102  059D                     	;# 
  8103  059D                     	;# 
  8104  059E                     	;# 
  8105  059F                     	;# 
  8106  060C                     	;# 
  8107  060C                     	;# 
  8108  060D                     	;# 
  8109  060D                     	;# 
  8110  060E                     	;# 
  8111  060F                     	;# 
  8112  0610                     	;# 
  8113  0611                     	;# 
  8114  0612                     	;# 
  8115  0613                     	;# 
  8116  0614                     	;# 
  8117  0616                     	;# 
  8118  0616                     	;# 
  8119  0617                     	;# 
  8120  0617                     	;# 
  8121  0618                     	;# 
  8122  0619                     	;# 
  8123  061A                     	;# 
  8124  061B                     	;# 
  8125  061C                     	;# 
  8126  061D                     	;# 
  8127  061E                     	;# 
  8128  070C                     	;# 
  8129  070D                     	;# 
  8130  070E                     	;# 
  8131  070F                     	;# 
  8132  0710                     	;# 
  8133  0711                     	;# 
  8134  0712                     	;# 
  8135  0713                     	;# 
  8136  0714                     	;# 
  8137  0716                     	;# 
  8138  0717                     	;# 
  8139  0718                     	;# 
  8140  0719                     	;# 
  8141  071A                     	;# 
  8142  071B                     	;# 
  8143  071C                     	;# 
  8144  071D                     	;# 
  8145  071E                     	;# 
  8146  0796                     	;# 
  8147  0797                     	;# 
  8148  0798                     	;# 
  8149  0799                     	;# 
  8150  079A                     	;# 
  8151  079B                     	;# 
  8152  079C                     	;# 
  8153  079D                     	;# 
  8154  080C                     	;# 
  8155  080D                     	;# 
  8156  080E                     	;# 
  8157  080F                     	;# 
  8158  0810                     	;# 
  8159  0811                     	;# 
  8160  0812                     	;# 
  8161  0813                     	;# 
  8162  0814                     	;# 
  8163  081A                     	;# 
  8164  081A                     	;# 
  8165  081B                     	;# 
  8166  081C                     	;# 
  8167  081C                     	;# 
  8168  081D                     	;# 
  8169  081E                     	;# 
  8170  081F                     	;# 
  8171  088C                     	;# 
  8172  088D                     	;# 
  8173  088E                     	;# 
  8174  088F                     	;# 
  8175  0890                     	;# 
  8176  0891                     	;# 
  8177  0892                     	;# 
  8178  0893                     	;# 
  8179  0895                     	;# 
  8180  0896                     	;# 
  8181  0897                     	;# 
  8182  0898                     	;# 
  8183  0899                     	;# 
  8184  089A                     	;# 
  8185  089B                     	;# 
  8186  090C                     	;# 
  8187  090E                     	;# 
  8188  090F                     	;# 
  8189  091F                     	;# 
  8190  098F                     	;# 
  8191  098F                     	;# 
  8192  0990                     	;# 
  8193  0991                     	;# 
  8194  0992                     	;# 
  8195  0993                     	;# 
  8196  0994                     	;# 
  8197  0995                     	;# 
  8198  0996                     	;# 
  8199  0997                     	;# 
  8200  1E0F                     	;# 
  8201  1E10                     	;# 
  8202  1E11                     	;# 
  8203  1E12                     	;# 
  8204  1E13                     	;# 
  8205  1E14                     	;# 
  8206  1E15                     	;# 
  8207  1E16                     	;# 
  8208  1E17                     	;# 
  8209  1E18                     	;# 
  8210  1E19                     	;# 
  8211  1E1A                     	;# 
  8212  1E1B                     	;# 
  8213  1E1C                     	;# 
  8214  1E1D                     	;# 
  8215  1E1E                     	;# 
  8216  1E1F                     	;# 
  8217  1E20                     	;# 
  8218  1E21                     	;# 
  8219  1E22                     	;# 
  8220  1E23                     	;# 
  8221  1E24                     	;# 
  8222  1E25                     	;# 
  8223  1E26                     	;# 
  8224  1E27                     	;# 
  8225  1E28                     	;# 
  8226  1E29                     	;# 
  8227  1E2A                     	;# 
  8228  1E2B                     	;# 
  8229  1E2C                     	;# 
  8230  1E2D                     	;# 
  8231  1E2E                     	;# 
  8232  1E2F                     	;# 
  8233  1E30                     	;# 
  8234  1E31                     	;# 
  8235  1E32                     	;# 
  8236  1E33                     	;# 
  8237  1E34                     	;# 
  8238  1E35                     	;# 
  8239  1E36                     	;# 
  8240  1E37                     	;# 
  8241  1E8F                     	;# 
  8242  1E90                     	;# 
  8243  1E91                     	;# 
  8244  1E92                     	;# 
  8245  1E93                     	;# 
  8246  1E94                     	;# 
  8247  1E95                     	;# 
  8248  1E96                     	;# 
  8249  1E97                     	;# 
  8250  1E9C                     	;# 
  8251  1E9D                     	;# 
  8252  1E9E                     	;# 
  8253  1EA1                     	;# 
  8254  1EA2                     	;# 
  8255  1EA3                     	;# 
  8256  1EA4                     	;# 
  8257  1EA9                     	;# 
  8258  1EAA                     	;# 
  8259  1EB1                     	;# 
  8260  1EB2                     	;# 
  8261  1EB8                     	;# 
  8262  1EB9                     	;# 
  8263  1EBA                     	;# 
  8264  1EBB                     	;# 
  8265  1EBC                     	;# 
  8266  1EBD                     	;# 
  8267  1EBE                     	;# 
  8268  1EC3                     	;# 
  8269  1EC5                     	;# 
  8270  1EC6                     	;# 
  8271  1EC7                     	;# 
  8272  1EC8                     	;# 
  8273  1EC9                     	;# 
  8274  1ECA                     	;# 
  8275  1ECB                     	;# 
  8276  1ECB                     	;# 
  8277  1ECB                     	;# 
  8278  1ECC                     	;# 
  8279  1ECC                     	;# 
  8280  1ECC                     	;# 
  8281  1F10                     	;# 
  8282  1F11                     	;# 
  8283  1F12                     	;# 
  8284  1F14                     	;# 
  8285  1F15                     	;# 
  8286  1F1C                     	;# 
  8287  1F1D                     	;# 
  8288  1F1E                     	;# 
  8289  1F1F                     	;# 
  8290  1F20                     	;# 
  8291  1F21                     	;# 
  8292  1F22                     	;# 
  8293  1F23                     	;# 
  8294  1F24                     	;# 
  8295  1F25                     	;# 
  8296  1F26                     	;# 
  8297  1F27                     	;# 
  8298  1F38                     	;# 
  8299  1F39                     	;# 
  8300  1F3A                     	;# 
  8301  1F3B                     	;# 
  8302  1F3C                     	;# 
  8303  1F3D                     	;# 
  8304  1F3E                     	;# 
  8305  1F3F                     	;# 
  8306  1F43                     	;# 
  8307  1F44                     	;# 
  8308  1F45                     	;# 
  8309  1F46                     	;# 
  8310  1F47                     	;# 
  8311  1F48                     	;# 
  8312  1F49                     	;# 
  8313  1F4A                     	;# 
  8314  1F4E                     	;# 
  8315  1F4F                     	;# 
  8316  1F50                     	;# 
  8317  1F51                     	;# 
  8318  1F52                     	;# 
  8319  1F53                     	;# 
  8320  1F54                     	;# 
  8321  1F55                     	;# 
  8322  1FE4                     	;# 
  8323  1FE5                     	;# 
  8324  1FE6                     	;# 
  8325  1FE7                     	;# 
  8326  1FE8                     	;# 
  8327  1FE8                     	;# 
  8328  1FE9                     	;# 
  8329  1FEA                     	;# 
  8330  1FEB                     	;# 
  8331  1FED                     	;# 
  8332  1FEE                     	;# 
  8333  1FEF                     	;# 
  8334  0000                     	;# 
  8335  0001                     	;# 
  8336  0002                     	;# 
  8337  0003                     	;# 
  8338  0004                     	;# 
  8339  0005                     	;# 
  8340  0006                     	;# 
  8341  0007                     	;# 
  8342  0008                     	;# 
  8343  0009                     	;# 
  8344  000A                     	;# 
  8345  000B                     	;# 
  8346  000C                     	;# 
  8347  000D                     	;# 
  8348  000E                     	;# 
  8349  0012                     	;# 
  8350  0013                     	;# 
  8351  0014                     	;# 
  8352  0018                     	;# 
  8353  0019                     	;# 
  8354  001A                     	;# 
  8355  008C                     	;# 
  8356  008C                     	;# 
  8357  008D                     	;# 
  8358  008E                     	;# 
  8359  008E                     	;# 
  8360  008F                     	;# 
  8361  0090                     	;# 
  8362  0090                     	;# 
  8363  0091                     	;# 
  8364  0092                     	;# 
  8365  0092                     	;# 
  8366  0093                     	;# 
  8367  0094                     	;# 
  8368  0094                     	;# 
  8369  0095                     	;# 
  8370  0096                     	;# 
  8371  0096                     	;# 
  8372  0097                     	;# 
  8373  0098                     	;# 
  8374  0099                     	;# 
  8375  009A                     	;# 
  8376  009B                     	;# 
  8377  009B                     	;# 
  8378  009C                     	;# 
  8379  009D                     	;# 
  8380  009D                     	;# 
  8381  009E                     	;# 
  8382  009F                     	;# 
  8383  010C                     	;# 
  8384  010C                     	;# 
  8385  010D                     	;# 
  8386  010E                     	;# 
  8387  010F                     	;# 
  8388  010F                     	;# 
  8389  0110                     	;# 
  8390  0111                     	;# 
  8391  0112                     	;# 
  8392  0113                     	;# 
  8393  0114                     	;# 
  8394  0115                     	;# 
  8395  0116                     	;# 
  8396  0117                     	;# 
  8397  0118                     	;# 
  8398  0119                     	;# 
  8399  0119                     	;# 
  8400  0119                     	;# 
  8401  011A                     	;# 
  8402  011A                     	;# 
  8403  011A                     	;# 
  8404  011B                     	;# 
  8405  011B                     	;# 
  8406  011B                     	;# 
  8407  011B                     	;# 
  8408  011B                     	;# 
  8409  011C                     	;# 
  8410  011C                     	;# 
  8411  011C                     	;# 
  8412  011D                     	;# 
  8413  011D                     	;# 
  8414  011D                     	;# 
  8415  011E                     	;# 
  8416  011E                     	;# 
  8417  011E                     	;# 
  8418  011F                     	;# 
  8419  011F                     	;# 
  8420  011F                     	;# 
  8421  011F                     	;# 
  8422  011F                     	;# 
  8423  018C                     	;# 
  8424  018D                     	;# 
  8425  018E                     	;# 
  8426  018F                     	;# 
  8427  0190                     	;# 
  8428  0191                     	;# 
  8429  0192                     	;# 
  8430  0196                     	;# 
  8431  0197                     	;# 
  8432  0198                     	;# 
  8433  0199                     	;# 
  8434  019A                     	;# 
  8435  019B                     	;# 
  8436  019C                     	;# 
  8437  020C                     	;# 
  8438  020D                     	;# 
  8439  020E                     	;# 
  8440  020E                     	;# 
  8441  020F                     	;# 
  8442  020F                     	;# 
  8443  0210                     	;# 
  8444  0210                     	;# 
  8445  0211                     	;# 
  8446  0211                     	;# 
  8447  0212                     	;# 
  8448  0213                     	;# 
  8449  0214                     	;# 
  8450  0214                     	;# 
  8451  0215                     	;# 
  8452  0215                     	;# 
  8453  0216                     	;# 
  8454  0216                     	;# 
  8455  0217                     	;# 
  8456  0217                     	;# 
  8457  0218                     	;# 
  8458  0219                     	;# 
  8459  021A                     	;# 
  8460  021A                     	;# 
  8461  021B                     	;# 
  8462  021B                     	;# 
  8463  021C                     	;# 
  8464  021C                     	;# 
  8465  021D                     	;# 
  8466  021D                     	;# 
  8467  021E                     	;# 
  8468  021F                     	;# 
  8469  028C                     	;# 
  8470  028C                     	;# 
  8471  028D                     	;# 
  8472  028D                     	;# 
  8473  028E                     	;# 
  8474  028F                     	;# 
  8475  0290                     	;# 
  8476  0291                     	;# 
  8477  0292                     	;# 
  8478  0292                     	;# 
  8479  0293                     	;# 
  8480  0293                     	;# 
  8481  0294                     	;# 
  8482  0295                     	;# 
  8483  0296                     	;# 
  8484  0297                     	;# 
  8485  0298                     	;# 
  8486  0298                     	;# 
  8487  0299                     	;# 
  8488  0299                     	;# 
  8489  029A                     	;# 
  8490  029B                     	;# 
  8491  029C                     	;# 
  8492  029D                     	;# 
  8493  029F                     	;# 
  8494  030C                     	;# 
  8495  030C                     	;# 
  8496  030D                     	;# 
  8497  030E                     	;# 
  8498  030F                     	;# 
  8499  0310                     	;# 
  8500  0310                     	;# 
  8501  0311                     	;# 
  8502  0312                     	;# 
  8503  0313                     	;# 
  8504  0314                     	;# 
  8505  0314                     	;# 
  8506  0315                     	;# 
  8507  0316                     	;# 
  8508  0317                     	;# 
  8509  0318                     	;# 
  8510  0318                     	;# 
  8511  0319                     	;# 
  8512  031A                     	;# 
  8513  031B                     	;# 
  8514  038C                     	;# 
  8515  038C                     	;# 
  8516  038D                     	;# 
  8517  038E                     	;# 
  8518  0390                     	;# 
  8519  0390                     	;# 
  8520  0391                     	;# 
  8521  0392                     	;# 
  8522  048C                     	;# 
  8523  048C                     	;# 
  8524  048D                     	;# 
  8525  048E                     	;# 
  8526  048F                     	;# 
  8527  048F                     	;# 
  8528  0490                     	;# 
  8529  0491                     	;# 
  8530  0492                     	;# 
  8531  0492                     	;# 
  8532  0493                     	;# 
  8533  0494                     	;# 
  8534  0495                     	;# 
  8535  0495                     	;# 
  8536  0496                     	;# 
  8537  0497                     	;# 
  8538  0498                     	;# 
  8539  0499                     	;# 
  8540  049A                     	;# 
  8541  049B                     	;# 
  8542  049C                     	;# 
  8543  049D                     	;# 
  8544  058C                     	;# 
  8545  058C                     	;# 
  8546  058D                     	;# 
  8547  058E                     	;# 
  8548  058F                     	;# 
  8549  058F                     	;# 
  8550  0590                     	;# 
  8551  0591                     	;# 
  8552  0592                     	;# 
  8553  0593                     	;# 
  8554  059C                     	;# 
  8555  059C                     	;# 
  8556  059D                     	;# 
  8557  059D                     	;# 
  8558  059E                     	;# 
  8559  059F                     	;# 
  8560  060C                     	;# 
  8561  060C                     	;# 
  8562  060D                     	;# 
  8563  060D                     	;# 
  8564  060E                     	;# 
  8565  060F                     	;# 
  8566  0610                     	;# 
  8567  0611                     	;# 
  8568  0612                     	;# 
  8569  0613                     	;# 
  8570  0614                     	;# 
  8571  0616                     	;# 
  8572  0616                     	;# 
  8573  0617                     	;# 
  8574  0617                     	;# 
  8575  0618                     	;# 
  8576  0619                     	;# 
  8577  061A                     	;# 
  8578  061B                     	;# 
  8579  061C                     	;# 
  8580  061D                     	;# 
  8581  061E                     	;# 
  8582  070C                     	;# 
  8583  070D                     	;# 
  8584  070E                     	;# 
  8585  070F                     	;# 
  8586  0710                     	;# 
  8587  0711                     	;# 
  8588  0712                     	;# 
  8589  0713                     	;# 
  8590  0714                     	;# 
  8591  0716                     	;# 
  8592  0717                     	;# 
  8593  0718                     	;# 
  8594  0719                     	;# 
  8595  071A                     	;# 
  8596  071B                     	;# 
  8597  071C                     	;# 
  8598  071D                     	;# 
  8599  071E                     	;# 
  8600  0796                     	;# 
  8601  0797                     	;# 
  8602  0798                     	;# 
  8603  0799                     	;# 
  8604  079A                     	;# 
  8605  079B                     	;# 
  8606  079C                     	;# 
  8607  079D                     	;# 
  8608  080C                     	;# 
  8609  080D                     	;# 
  8610  080E                     	;# 
  8611  080F                     	;# 
  8612  0810                     	;# 
  8613  0811                     	;# 
  8614  0812                     	;# 
  8615  0813                     	;# 
  8616  0814                     	;# 
  8617  081A                     	;# 
  8618  081A                     	;# 
  8619  081B                     	;# 
  8620  081C                     	;# 
  8621  081C                     	;# 
  8622  081D                     	;# 
  8623  081E                     	;# 
  8624  081F                     	;# 
  8625  088C                     	;# 
  8626  088D                     	;# 
  8627  088E                     	;# 
  8628  088F                     	;# 
  8629  0890                     	;# 
  8630  0891                     	;# 
  8631  0892                     	;# 
  8632  0893                     	;# 
  8633  0895                     	;# 
  8634  0896                     	;# 
  8635  0897                     	;# 
  8636  0898                     	;# 
  8637  0899                     	;# 
  8638  089A                     	;# 
  8639  089B                     	;# 
  8640  090C                     	;# 
  8641  090E                     	;# 
  8642  090F                     	;# 
  8643  091F                     	;# 
  8644  098F                     	;# 
  8645  098F                     	;# 
  8646  0990                     	;# 
  8647  0991                     	;# 
  8648  0992                     	;# 
  8649  0993                     	;# 
  8650  0994                     	;# 
  8651  0995                     	;# 
  8652  0996                     	;# 
  8653  0997                     	;# 
  8654  1E0F                     	;# 
  8655  1E10                     	;# 
  8656  1E11                     	;# 
  8657  1E12                     	;# 
  8658  1E13                     	;# 
  8659  1E14                     	;# 
  8660  1E15                     	;# 
  8661  1E16                     	;# 
  8662  1E17                     	;# 
  8663  1E18                     	;# 
  8664  1E19                     	;# 
  8665  1E1A                     	;# 
  8666  1E1B                     	;# 
  8667  1E1C                     	;# 
  8668  1E1D                     	;# 
  8669  1E1E                     	;# 
  8670  1E1F                     	;# 
  8671  1E20                     	;# 
  8672  1E21                     	;# 
  8673  1E22                     	;# 
  8674  1E23                     	;# 
  8675  1E24                     	;# 
  8676  1E25                     	;# 
  8677  1E26                     	;# 
  8678  1E27                     	;# 
  8679  1E28                     	;# 
  8680  1E29                     	;# 
  8681  1E2A                     	;# 
  8682  1E2B                     	;# 
  8683  1E2C                     	;# 
  8684  1E2D                     	;# 
  8685  1E2E                     	;# 
  8686  1E2F                     	;# 
  8687  1E30                     	;# 
  8688  1E31                     	;# 
  8689  1E32                     	;# 
  8690  1E33                     	;# 
  8691  1E34                     	;# 
  8692  1E35                     	;# 
  8693  1E36                     	;# 
  8694  1E37                     	;# 
  8695  1E8F                     	;# 
  8696  1E90                     	;# 
  8697  1E91                     	;# 
  8698  1E92                     	;# 
  8699  1E93                     	;# 
  8700  1E94                     	;# 
  8701  1E95                     	;# 
  8702  1E96                     	;# 
  8703  1E97                     	;# 
  8704  1E9C                     	;# 
  8705  1E9D                     	;# 
  8706  1E9E                     	;# 
  8707  1EA1                     	;# 
  8708  1EA2                     	;# 
  8709  1EA3                     	;# 
  8710  1EA4                     	;# 
  8711  1EA9                     	;# 
  8712  1EAA                     	;# 
  8713  1EB1                     	;# 
  8714  1EB2                     	;# 
  8715  1EB8                     	;# 
  8716  1EB9                     	;# 
  8717  1EBA                     	;# 
  8718  1EBB                     	;# 
  8719  1EBC                     	;# 
  8720  1EBD                     	;# 
  8721  1EBE                     	;# 
  8722  1EC3                     	;# 
  8723  1EC5                     	;# 
  8724  1EC6                     	;# 
  8725  1EC7                     	;# 
  8726  1EC8                     	;# 
  8727  1EC9                     	;# 
  8728  1ECA                     	;# 
  8729  1ECB                     	;# 
  8730  1ECB                     	;# 
  8731  1ECB                     	;# 
  8732  1ECC                     	;# 
  8733  1ECC                     	;# 
  8734  1ECC                     	;# 
  8735  1F10                     	;# 
  8736  1F11                     	;# 
  8737  1F12                     	;# 
  8738  1F14                     	;# 
  8739  1F15                     	;# 
  8740  1F1C                     	;# 
  8741  1F1D                     	;# 
  8742  1F1E                     	;# 
  8743  1F1F                     	;# 
  8744  1F20                     	;# 
  8745  1F21                     	;# 
  8746  1F22                     	;# 
  8747  1F23                     	;# 
  8748  1F24                     	;# 
  8749  1F25                     	;# 
  8750  1F26                     	;# 
  8751  1F27                     	;# 
  8752  1F38                     	;# 
  8753  1F39                     	;# 
  8754  1F3A                     	;# 
  8755  1F3B                     	;# 
  8756  1F3C                     	;# 
  8757  1F3D                     	;# 
  8758  1F3E                     	;# 
  8759  1F3F                     	;# 
  8760  1F43                     	;# 
  8761  1F44                     	;# 
  8762  1F45                     	;# 
  8763  1F46                     	;# 
  8764  1F47                     	;# 
  8765  1F48                     	;# 
  8766  1F49                     	;# 
  8767  1F4A                     	;# 
  8768  1F4E                     	;# 
  8769  1F4F                     	;# 
  8770  1F50                     	;# 
  8771  1F51                     	;# 
  8772  1F52                     	;# 
  8773  1F53                     	;# 
  8774  1F54                     	;# 
  8775  1F55                     	;# 
  8776  1FE4                     	;# 
  8777  1FE5                     	;# 
  8778  1FE6                     	;# 
  8779  1FE7                     	;# 
  8780  1FE8                     	;# 
  8781  1FE8                     	;# 
  8782  1FE9                     	;# 
  8783  1FEA                     	;# 
  8784  1FEB                     	;# 
  8785  1FED                     	;# 
  8786  1FEE                     	;# 
  8787  1FEF                     	;_dmxArray
  8788                           
  8789                           	psect	idataBANK1
  8790  0A81                     __pidataBANK1:	
  8791                           
  8792                           ;initializer for _initial
  8793  0A81  3401               	retlw	1
  8794  0A82  3400               	retlw	0
  8795                           
  8796                           ;initializer for _delay
  8797  0A83  340A               	retlw	10
  8798  0A84  3400               	retlw	0
  8799                           
  8800                           ;initializer for _threshold
  8801  0A85  3490               	retlw	144
  8802  0A86  3406               	retlw	6
  8803                           
  8804                           ;initializer for _incInterval
  8805  0A87  3464               	retlw	100
  8806  0A88  3400               	retlw	0
  8807                           
  8808                           ;initializer for _address
  8809  0A89  3401               	retlw	1
  8810  0A8A  3400               	retlw	0
  8811                           
  8812                           	psect	stringtext1
  8813  06BA                     __pstringtext1:	
  8814  06BA                     _charTable:	
  8815  06BA  3400               	retlw	0
  8816  06BB  3482               	retlw	130
  8817  06BC  3421               	retlw	33
  8818  06BD  3400               	retlw	0
  8819  06BE  3400               	retlw	0
  8820  06BF  3400               	retlw	0
  8821  06C0  3400               	retlw	0
  8822  06C1  3402               	retlw	2
  8823  06C2  3439               	retlw	57
  8824  06C3  340F               	retlw	15
  8825  06C4  3400               	retlw	0
  8826  06C5  3400               	retlw	0
  8827  06C6  3400               	retlw	0
  8828  06C7  3440               	retlw	64
  8829  06C8  3480               	retlw	128
  8830  06C9  3400               	retlw	0
  8831  06CA  343F               	retlw	63
  8832  06CB  3406               	retlw	6
  8833  06CC  345B               	retlw	91
  8834  06CD  344F               	retlw	79
  8835  06CE  3466               	retlw	102
  8836  06CF  346D               	retlw	109
  8837  06D0  347D               	retlw	125
  8838  06D1  3407               	retlw	7
  8839  06D2  347F               	retlw	127
  8840  06D3  346F               	retlw	111
  8841  06D4  3400               	retlw	0
  8842  06D5  3400               	retlw	0
  8843  06D6  3400               	retlw	0
  8844  06D7  3448               	retlw	72
  8845  06D8  3400               	retlw	0
  8846  06D9  3453               	retlw	83
  8847  06DA  3400               	retlw	0
  8848  06DB  3477               	retlw	119
  8849  06DC  347C               	retlw	124
  8850  06DD  3439               	retlw	57
  8851  06DE  345E               	retlw	94
  8852  06DF  3479               	retlw	121
  8853  06E0  3471               	retlw	113
  8854  06E1  346F               	retlw	111
  8855  06E2  3476               	retlw	118
  8856  06E3  3406               	retlw	6
  8857  06E4  341E               	retlw	30
  8858  06E5  3400               	retlw	0
  8859  06E6  3438               	retlw	56
  8860  06E7  3400               	retlw	0
  8861  06E8  3454               	retlw	84
  8862  06E9  343F               	retlw	63
  8863  06EA  3473               	retlw	115
  8864  06EB  3467               	retlw	103
  8865  06EC  3450               	retlw	80
  8866  06ED  346D               	retlw	109
  8867  06EE  3478               	retlw	120
  8868  06EF  343E               	retlw	62
  8869  06F0  3400               	retlw	0
  8870  06F1  3400               	retlw	0
  8871  06F2  3400               	retlw	0
  8872  06F3  346E               	retlw	110
  8873  06F4  3400               	retlw	0
  8874  06F5  3439               	retlw	57
  8875  06F6  3400               	retlw	0
  8876  06F7  340F               	retlw	15
  8877  06F8  3400               	retlw	0
  8878  06F9  3408               	retlw	8
  8879  06FA  3463               	retlw	99
  8880  06FB  345F               	retlw	95
  8881  06FC  347C               	retlw	124
  8882  06FD  3458               	retlw	88
  8883  06FE  345E               	retlw	94
  8884  06FF  347B               	retlw	123
  8885  0700  3471               	retlw	113
  8886  0701  346F               	retlw	111
  8887  0702  3474               	retlw	116
  8888  0703  3402               	retlw	2
  8889  0704  341E               	retlw	30
  8890  0705  3400               	retlw	0
  8891  0706  3406               	retlw	6
  8892  0707  3400               	retlw	0
  8893  0708  3454               	retlw	84
  8894  0709  345C               	retlw	92
  8895  070A  3473               	retlw	115
  8896  070B  3467               	retlw	103
  8897  070C  3450               	retlw	80
  8898  070D  346D               	retlw	109
  8899  070E  3478               	retlw	120
  8900  070F  341C               	retlw	28
  8901  0710  3400               	retlw	0
  8902  0711  3400               	retlw	0
  8903  0712  3400               	retlw	0
  8904  0713  346E               	retlw	110
  8905  0714  3400               	retlw	0
  8906  0715  3439               	retlw	57
  8907  0716  3430               	retlw	48
  8908  0717  340F               	retlw	15
  8909  0718  3400               	retlw	0
  8910  0719  3400               	retlw	0
  8911  071A                     __end_of_charTable:	
  8912                           
  8913                           	psect	nvBANK1
  8914  00E8                     __pnvBANK1:	
  8915  00E8                     _ADCC_ADTI_InterruptHandler:	
  8916  00E8                     	ds	2
  8917  00EA                     _TMR0_InterruptHandler:	
  8918  00EA                     	ds	2
  8919                           
  8920                           	psect	nvBANK2
  8921  0158                     __pnvBANK2:	
  8922  0158                     _EUSART1_ErrorHandler:	
  8923  0158                     	ds	2
  8924  015A                     _EUSART1_OverrunErrorHandler:	
  8925  015A                     	ds	2
  8926  015C                     _EUSART1_FramingErrorHandler:	
  8927  015C                     	ds	2
  8928  015E                     _EUSART1_RxDefaultInterruptHandler:	
  8929  015E                     	ds	2
  8930  0014                     _TRISCbits	set	20
  8931  0012                     _TRISAbits	set	18
  8932  000B                     _INTCONbits	set	11
  8933  0014                     _TRISC	set	20
  8934  0013                     _TRISB	set	19
  8935  0012                     _TRISA	set	18
  8936  001A                     _LATC	set	26
  8937  0019                     _LATB	set	25
  8938  0018                     _LATA	set	24
  8939  000C                     _PORTA	set	12
  8940  000E                     _PORTC	set	14
  8941  0090                     _ADERRL	set	144
  8942  0091                     _ADERRH	set	145
  8943  009B                     _ADPREVL	set	155
  8944  009C                     _ADPREVH	set	156
  8945  0094                     _ADFLTRL	set	148
  8946  0095                     _ADFLTRH	set	149
  8947  0096                     _ADACCL	set	150
  8948  0097                     _ADACCH	set	151
  8949  0099                     _ADCNT	set	153
  8950  009D                     _ADRESL	set	157
  8951  009E                     _ADRESH	set	158
  8952  009F                     _ADPCH	set	159
  8953  009A                     _ADRPT	set	154
  8954  0098                     _ADACCU	set	152
  8955  0093                     _ADSTPTH	set	147
  8956  0092                     _ADSTPTL	set	146
  8957  008F                     _ADUTHH	set	143
  8958  008E                     _ADUTHL	set	142
  8959  008D                     _ADLTHH	set	141
  8960  008C                     _ADLTHL	set	140
  8961  0112                     _ADCON1bits	set	274
  8962  0115                     _ADSTATbits	set	277
  8963  0113                     _ADCON2bits	set	275
  8964  0114                     _ADCON3bits	set	276
  8965  0111                     _ADCON0bits	set	273
  8966  0111                     _ADCON0	set	273
  8967  0118                     _ADCLK	set	280
  8968  0117                     _ADACT	set	279
  8969  0116                     _ADREF	set	278
  8970  0115                     _ADSTAT	set	277
  8971  0114                     _ADCON3	set	276
  8972  0113                     _ADCON2	set	275
  8973  0112                     _ADCON1	set	274
  8974  0110                     _ADPREH	set	272
  8975  010F                     _ADPREL	set	271
  8976  010E                     _ADCAP	set	270
  8977  010D                     _ADACQH	set	269
  8978  010C                     _ADACQL	set	268
  8979  0119                     _RC1REG	set	281
  8980  011D                     _RC1STAbits	set	285
  8981  011A                     _TX1REG	set	282
  8982  011E                     _TX1STAbits	set	286
  8983  011C                     _SP1BRGH	set	284
  8984  011B                     _SP1BRGL	set	283
  8985  011E                     _TX1STA	set	286
  8986  011D                     _RC1STA	set	285
  8987  011F                     _BAUD1CON	set	287
  8988  018C                     _SSP1BUF	set	396
  8989  0191                     _SSP1CON2bits	set	401
  8990  0190                     _SSP1CON1bits	set	400
  8991  018D                     _SSP1ADD	set	397
  8992  0192                     _SSP1CON3	set	402
  8993  0190                     _SSP1CON1	set	400
  8994  018F                     _SSP1STAT	set	399
  8995  021E                     _CCPTMRS0bits	set	542
  8996  028D                     _PR2	set	653
  8997  028C                     _TMR2	set	652
  8998  028E                     _T2CONbits	set	654
  8999  0291                     _T2RSTbits	set	657
  9000  028F                     _T2HLTbits	set	655
  9001  028E                     _T2CON	set	654
  9002  028C                     _T2TMR	set	652
  9003  028D                     _T2PR	set	653
  9004  0291                     _T2RST	set	657
  9005  028F                     _T2HLT	set	655
  9006  0290                     _T2CLKCON	set	656
  9007  0312                     _CCP2CONbits	set	786
  9008  0310                     _CCPR2L	set	784
  9009  0311                     _CCPR2H	set	785
  9010  0312                     _CCP2CON	set	786
  9011  030E                     _CCP1CONbits	set	782
  9012  030C                     _CCPR1L	set	780
  9013  030D                     _CCPR1H	set	781
  9014  030E                     _CCP1CON	set	782
  9015  031A                     _CCP4CONbits	set	794
  9016  0318                     _CCPR4L	set	792
  9017  0319                     _CCPR4H	set	793
  9018  031A                     _CCP4CON	set	794
  9019  0316                     _CCP3CONbits	set	790
  9020  0314                     _CCPR3L	set	788
  9021  0315                     _CCPR3H	set	789
  9022  0316                     _CCP3CON	set	790
  9023  059E                     _T0CON0bits	set	1438
  9024  059E                     _T0CON0	set	1438
  9025  059C                     _TMR0L	set	1436
  9026  059D                     _TMR0H	set	1437
  9027  059F                     _T0CON1	set	1439
  9028  070D                     _PIR1bits	set	1805
  9029  0717                     _PIE1bits	set	1815
  9030  070C                     _PIR0bits	set	1804
  9031  0716                     _PIE0bits	set	1814
  9032  070F                     _PIR3bits	set	1807
  9033  0719                     _PIE3bits	set	1817
  9034  0710                     _PIR4bits	set	1808
  9035  079D                     _PMD7	set	1949
  9036  079C                     _PMD6	set	1948
  9037  079B                     _PMD5	set	1947
  9038  079A                     _PMD4	set	1946
  9039  0799                     _PMD3	set	1945
  9040  0798                     _PMD2	set	1944
  9041  0797                     _PMD1	set	1943
  9042  0796                     _PMD0	set	1942
  9043  0892                     _OSCTUNE	set	2194
  9044  0893                     _OSCFRQ	set	2195
  9045  0891                     _OSCEN	set	2193
  9046  088F                     _OSCCON3	set	2191
  9047  088D                     _OSCCON1	set	2189
  9048  1ECB                     _RX1DTPPS	set	7883
  9049  1EC6                     _SSP1DATPPS	set	7878
  9050  1EC5                     _SSP1CLKPPS	set	7877
  9051  1F4F                     _WPUCbits	set	8015
  9052  1F4E                     _ANSELCbits	set	8014
  9053  1F39                     _WPUAbits	set	7993
  9054  1F38                     _ANSELAbits	set	7992
  9055  1F27                     _RC7PPS	set	7975
  9056  1F26                     _RC6PPS	set	7974
  9057  1F25                     _RC5PPS	set	7973
  9058  1F15                     _RA5PPS	set	7957
  9059  1F24                     _RC4PPS	set	7972
  9060  1F23                     _RC3PPS	set	7971
  9061  1F14                     _RA4PPS	set	7956
  9062  1F51                     _SLRCONC	set	8017
  9063  1F46                     _SLRCONB	set	8006
  9064  1F3B                     _SLRCONA	set	7995
  9065  1F50                     _ODCONC	set	8016
  9066  1F45                     _ODCONB	set	8005
  9067  1F3A                     _ODCONA	set	7994
  9068  1F4F                     _WPUC	set	8015
  9069  1F39                     _WPUA	set	7993
  9070  1F44                     _WPUB	set	8004
  9071  1F38                     _ANSELA	set	7992
  9072  1F43                     _ANSELB	set	8003
  9073  1F4E                     _ANSELC	set	8014
  9074                           
  9075                           	psect	stringtext2
  9076  1000                     __pstringtext2:	
  9077  1000                     STR_7:	
  9078  1000  3425               	retlw	37	;'%'
  9079  1001  3463               	retlw	99	;'c'
  9080  1002  3425               	retlw	37	;'%'
  9081  1003  3463               	retlw	99	;'c'
  9082  1004  3425               	retlw	37	;'%'
  9083  1005  3463               	retlw	99	;'c'
  9084  1006  3425               	retlw	37	;'%'
  9085  1007  3463               	retlw	99	;'c'
  9086  1008  340D               	retlw	13
  9087  1009  3400               	retlw	0
  9088                           
  9089                           	psect	stringtext3
  9090  100A                     __pstringtext3:	
  9091  100A                     STR_8:	
  9092  100A  3425               	retlw	37	;'%'
  9093  100B  3463               	retlw	99	;'c'
  9094  100C  3425               	retlw	37	;'%'
  9095  100D  3463               	retlw	99	;'c'
  9096  100E  3425               	retlw	37	;'%'
  9097  100F  3463               	retlw	99	;'c'
  9098  1010  3420               	retlw	32	;' '
  9099  1011  340D               	retlw	13
  9100  1012  3400               	retlw	0
  9101                           
  9102                           	psect	stringtext4
  9103  1013                     __pstringtext4:	
  9104  1013                     STR_6:	
  9105  1013  3420               	retlw	32	;' '
  9106  1014  3425               	retlw	37	;'%'
  9107  1015  3463               	retlw	99	;'c'
  9108  1016  3425               	retlw	37	;'%'
  9109  1017  3463               	retlw	99	;'c'
  9110  1018  3425               	retlw	37	;'%'
  9111  1019  3463               	retlw	99	;'c'
  9112  101A  340D               	retlw	13
  9113  101B  3400               	retlw	0
  9114                           
  9115                           	psect	stringtext5
  9116  101C                     __pstringtext5:	
  9117  101C                     STR_3:	
  9118  101C  3448               	retlw	72	;'H'
  9119  101D  3445               	retlw	69	;'E'
  9120  101E  3459               	retlw	89	;'Y'
  9121  101F  3459               	retlw	89	;'Y'
  9122  1020  3459               	retlw	89	;'Y'
  9123  1021  3459               	retlw	89	;'Y'
  9124  1022  3459               	retlw	89	;'Y'
  9125  1023  3459               	retlw	89	;'Y'
  9126  1024  3400               	retlw	0
  9127                           
  9128                           	psect	stringtext6
  9129  1025                     __pstringtext6:	
  9130  1025                     STR_9:	
  9131  1025  3425               	retlw	37	;'%'
  9132  1026  3463               	retlw	99	;'c'
  9133  1027  3425               	retlw	37	;'%'
  9134  1028  3463               	retlw	99	;'c'
  9135  1029  3420               	retlw	32	;' '
  9136  102A  3420               	retlw	32	;' '
  9137  102B  340D               	retlw	13
  9138  102C  3400               	retlw	0
  9139                           
  9140                           	psect	stringtext7
  9141  102D                     __pstringtext7:	
  9142  102D                     STR_5:	
  9143  102D  3420               	retlw	32	;' '
  9144  102E  3420               	retlw	32	;' '
  9145  102F  3425               	retlw	37	;'%'
  9146  1030  3463               	retlw	99	;'c'
  9147  1031  3425               	retlw	37	;'%'
  9148  1032  3463               	retlw	99	;'c'
  9149  1033  340D               	retlw	13
  9150  1034  3400               	retlw	0
  9151                           
  9152                           	psect	stringtext8
  9153  1035                     __pstringtext8:	
  9154  1035                     STR_10:	
  9155  1035  3425               	retlw	37	;'%'
  9156  1036  3463               	retlw	99	;'c'
  9157  1037  3420               	retlw	32	;' '
  9158  1038  3420               	retlw	32	;' '
  9159  1039  3420               	retlw	32	;' '
  9160  103A  340D               	retlw	13
  9161  103B  3400               	retlw	0
  9162                           
  9163                           	psect	stringtext9
  9164  103C                     __pstringtext9:	
  9165  103C                     STR_4:	
  9166  103C  3420               	retlw	32	;' '
  9167  103D  3420               	retlw	32	;' '
  9168  103E  3420               	retlw	32	;' '
  9169  103F  3425               	retlw	37	;'%'
  9170  1040  3463               	retlw	99	;'c'
  9171  1041  340D               	retlw	13
  9172  1042  3400               	retlw	0
  9173                           
  9174                           	psect	stringtext10
  9175  1043                     __pstringtext10:	
  9176  1043                     STR_11:	
  9177  1043  3420               	retlw	32	;' '
  9178  1044  3420               	retlw	32	;' '
  9179  1045  3420               	retlw	32	;' '
  9180  1046  3420               	retlw	32	;' '
  9181  1047  340D               	retlw	13
  9182  1048  3400               	retlw	0
  9183                           
  9184                           	psect	stringtext11
  9185  1049                     __pstringtext11:	
  9186  1049                     STR_1:	
  9187  1049  3420               	retlw	32	;' '
  9188  104A  3420               	retlw	32	;' '
  9189  104B  3420               	retlw	32	;' '
  9190  104C  3420               	retlw	32	;' '
  9191  104D  3400               	retlw	0
  9192                           
  9193                           	psect	stringtext12
  9194  0000                     __pstringtext12:	
  9195  1047                     
  9196                           ; #config settings
  9197  0000                     
  9198                           	psect	cinit
  9199  0032                     start_initialization:	
  9200  0032                     __initialization:		;BIGRAM
  9201                           
  9202                           ; Initialize objects allocated to BANK1
  9203  0032  3081               	movlw	low __pidataBANK1
  9204  0033  0084               	movwf	4
  9205  0034  308A               	movlw	(high __pidataBANK1)| (0+128)
  9206  0035  0085               	movwf	5
  9207  0036  30D4               	movlw	low __pdataBANK1
  9208  0037  0086               	movwf	6
  9209  0038  3000               	movlw	high __pdataBANK1
  9210  0039  0087               	movwf	7
  9211  003A  3000               	movlw	0
  9212  003B  00FF               	movwf	btemp+1
  9213  003C  300A               	movlw	10
  9214  003D  318A  22CE  3180   	fcall	init_ram
  9215                           
  9216                           ; Clear objects allocated to BIGRAM
  9217  0040  30EE               	movlw	low (0+9198)
  9218  0041  0084               	movwf	4
  9219  0042  3023               	movlw	high (0+9198)
  9220  0043  0085               	movwf	5
  9221  0044  3002               	movlw	2
  9222  0045  00FE               	movwf	btemp
  9223  0046  3004               	movlw	4
  9224  0047  00FF               	movwf	btemp+1
  9225  0048  318A  22C2  3180   	fcall	clear_ram0
  9226                           
  9227                           ; Clear objects allocated to COMMON
  9228  004B  01F0               	clrf	__pbssCOMMON& (0+127)
  9229  004C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  9230  004D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  9231  004E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  9232  004F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  9233  0050  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  9234  0051  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  9235                           
  9236                           ; Clear objects allocated to BANK0
  9237  0052  01EF               	clrf	__pbssBANK0& (0+127)
  9238                           
  9239                           ; Clear objects allocated to BANK1
  9240  0053  30A0               	movlw	low __pbssBANK1
  9241  0054  0084               	movwf	4
  9242  0055  3000               	movlw	high __pbssBANK1
  9243  0056  0085               	movwf	5
  9244  0057  3034               	movlw	52
  9245  0058  00FE               	movwf	btemp
  9246  0059  3000               	movlw	0
  9247  005A  00FF               	movwf	btemp+1
  9248  005B  318A  22C2  3180   	fcall	clear_ram0
  9249                           
  9250                           ; Clear objects allocated to BANK2
  9251  005E  3020               	movlw	low __pbssBANK2
  9252  005F  0084               	movwf	4
  9253  0060  3001               	movlw	high __pbssBANK2
  9254  0061  0085               	movwf	5
  9255  0062  3038               	movlw	56
  9256  0063  00FE               	movwf	btemp
  9257  0064  3000               	movlw	0
  9258  0065  00FF               	movwf	btemp+1
  9259  0066  318A  22C2  3180   	fcall	clear_ram0
  9260                           
  9261                           ; Clear objects allocated to BANK3
  9262  0069  30A0               	movlw	low __pbssBANK3
  9263  006A  0084               	movwf	4
  9264  006B  3001               	movlw	high __pbssBANK3
  9265  006C  0085               	movwf	5
  9266  006D  3020               	movlw	32
  9267  006E  00FE               	movwf	btemp
  9268  006F  3000               	movlw	0
  9269  0070  00FF               	movwf	btemp+1
  9270  0071  318A  22C2         	fcall	clear_ram0
  9271  0073                     end_of_initialization:	
  9272                           ;End of C runtime variable initialization code
  9273                           
  9274  0073                     __end_of__initialization:	
  9275  0073  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9276  0074  0140               	movlb	0
  9277  0075  318E  2E7A         	ljmp	_main	;jump to C main() function
  9278                           
  9279                           	psect	bssCOMMON
  9280  0070                     __pbssCOMMON:	
  9281  0070                     _currentState:	
  9282  0070                     	ds	2
  9283  0072                     _down:	
  9284  0072                     	ds	1
  9285  0073                     _up:	
  9286  0073                     	ds	1
  9287  0074                     _eusart1RxTail:	
  9288  0074                     	ds	1
  9289  0075                     I2C1_ISR@i2c_address:	
  9290  0075                     	ds	2
  9291                           
  9292                           	psect	bssBANK0
  9293  006F                     __pbssBANK0:	
  9294  006F                     _eusart1RxHead:	
  9295  006F                     	ds	1
  9296                           
  9297                           	psect	bssBANK1
  9298  00A0                     __pbssBANK1:	
  9299  00A0                     _i2c1_object:	
  9300  00A0                     	ds	5
  9301  00A5                     _nout:	
  9302  00A5                     	ds	2
  9303  00A7                     _width:	
  9304  00A7                     	ds	2
  9305  00A9                     _prec:	
  9306  00A9                     	ds	2
  9307  00AB                     _flags:	
  9308  00AB                     	ds	2
  9309  00AD                     _lastLedActiveTime:	
  9310  00AD                     	ds	2
  9311  00AF                     _arrayIndex:	
  9312  00AF                     	ds	2
  9313  00B1                     _thresholdCount:	
  9314  00B1                     	ds	2
  9315  00B3                     _lastRun:	
  9316  00B3                     	ds	2
  9317  00B5                     _bpm:	
  9318  00B5                     	ds	2
  9319  00B7                     _lastBeat:	
  9320  00B7                     	ds	2
  9321  00B9                     _lastActiveTime:	
  9322  00B9                     	ds	2
  9323  00BB                     _lastIncTime:	
  9324  00BB                     	ds	2
  9325  00BD                     _currentTime:	
  9326  00BD                     	ds	2
  9327  00BF                     _lastTime:	
  9328  00BF                     	ds	2
  9329  00C1                     _lastDetected:	
  9330  00C1                     	ds	1
  9331  00C2                     _thresholdExceeded:	
  9332  00C2                     	ds	1
  9333  00C3                     _detected:	
  9334  00C3                     	ds	1
  9335  00C4                     _position:	
  9336  00C4                     	ds	1
  9337  00C5                     _tm1650_status:	
  9338  00C5                     	ds	1
  9339  00C6                     _enter:	
  9340  00C6                     	ds	1
  9341  00C7                     _menu:	
  9342  00C7                     	ds	1
  9343  00C8                     I2C1_ISR@i2c_10bit_address_restart:	
  9344  00C8                     	ds	1
  9345  00C9                     I2C1_ISR@i2c_bytes_left:	
  9346  00C9                     	ds	1
  9347  00CA                     I2C1_ISR@pi2c_buf_ptr:	
  9348  00CA                     	ds	1
  9349  00CB                     _p_i2c1_current:	
  9350  00CB                     	ds	1
  9351  00CC                     _p_i2c1_trb_current:	
  9352  00CC                     	ds	1
  9353  00CD                     _i2c1_trb_count:	
  9354  00CD                     	ds	1
  9355  00CE                     _i2c1_state:	
  9356  00CE                     	ds	1
  9357  00CF                     _eusart1RxLastError:	
  9358  00CF                     	ds	1
  9359  00D0                     _eusart1RxCount:	
  9360  00D0                     	ds	1
  9361  00D1                     _i2c1_tr_queue:	
  9362  00D1                     	ds	3
  9363                           
  9364                           	psect	dataBANK1
  9365  00D4                     __pdataBANK1:	
  9366  00D4                     _initial:	
  9367  00D4                     	ds	2
  9368  00D6                     _delay:	
  9369  00D6                     	ds	2
  9370  00D8                     _threshold:	
  9371  00D8                     	ds	2
  9372  00DA                     _incInterval:	
  9373  00DA                     	ds	2
  9374  00DC                     _address:	
  9375  00DC                     	ds	2
  9376                           
  9377                           	psect	bssBANK2
  9378  0120                     __pbssBANK2:	
  9379  0120                     _eusart1RxStatusBuffer:	
  9380  0120                     	ds	8
  9381  0128                     _eusart1RxBuffer:	
  9382  0128                     	ds	8
  9383  0130                     _buttons:	
  9384  0130                     	ds	32
  9385  0150                     I2C1_MasterRead@trBlock:	
  9386  0150                     	ds	4
  9387  0154                     I2C1_MasterWrite@trBlock:	
  9388  0154                     	ds	4
  9389                           
  9390                           	psect	bssBANK3
  9391  01A0                     __pbssBANK3:	
  9392  01A0                     _dbuf:	
  9393  01A0                     	ds	32
  9394                           
  9395                           	psect	inittext
  9396  0ACE                     init_ram:	
  9397  0ACE  00FE               	movwf	126
  9398  0ACF                     initloop:	
  9399  0ACF  0012               	moviw fsr0++
  9400  0AD0  001E               	movwi fsr1++
  9401  0AD1  3001               	movlw	1
  9402  0AD2  02FE               	subwf	126,f
  9403  0AD3  3000               	movlw	0
  9404  0AD4  3BFF               	subwfb	127,f
  9405  0AD5  087F               	movf	127,w
  9406  0AD6  047E               	iorwf	126,w
  9407  0AD7  1903               	btfsc	3,2
  9408  0AD8  3400               	retlw	0
  9409  0AD9  2ACF               	goto	initloop
  9410                           
  9411                           	psect	clrtext
  9412  0AC2                     clear_ram0:	
  9413                           ;	Called with FSR0 containing the base address, and
  9414                           ;	btemp/btemp+1 has the size to clear
  9415                           
  9416  0AC2  0064               	clrwdt	;clear the watchdog before getting into this loop
  9417  0AC3                     clrloop0:	
  9418  0AC3  0180               	clrf	0	;clear RAM location pointed to by FSR
  9419  0AC4  3101               	addfsr 0,1
  9420  0AC5  3001               	movlw	1
  9421  0AC6  02FE               	subwf	126,f
  9422  0AC7  3000               	movlw	0
  9423  0AC8  3BFF               	subwfb	127,f
  9424  0AC9  087F               	movf	127,w
  9425  0ACA  047E               	iorwf	126,w
  9426  0ACB  1903               	btfsc	3,2
  9427  0ACC  3400               	retlw	0	;all done for this memory range, return
  9428  0ACD  2AC3               	goto	clrloop0	;have we reached the end yet?
  9429                           
  9430                           	psect	cstackBANK1
  9431  00DE                     __pcstackBANK1:	
  9432  00DE                     ?_printf:	
  9433  00DE                     printf@fmt:	
  9434                           ; 2 bytes @ 0x0
  9435                           
  9436                           
  9437                           ; 2 bytes @ 0x0
  9438  00DE                     	ds	10
  9439                           
  9440                           	psect	cstackCOMMON
  9441  0077                     __pcstackCOMMON:	
  9442  0077                     ?_PMD_Initialize:	
  9443  0077                     ?_PIN_MANAGER_Initialize:	
  9444                           ; 1 bytes @ 0x0
  9445                           
  9446  0077                     ?_OSCILLATOR_Initialize:	
  9447                           ; 1 bytes @ 0x0
  9448                           
  9449  0077                     ?_I2C1_Initialize:	
  9450                           ; 1 bytes @ 0x0
  9451                           
  9452  0077                     ?_PWM1_Initialize:	
  9453                           ; 1 bytes @ 0x0
  9454                           
  9455  0077                     ?_PWM2_Initialize:	
  9456                           ; 1 bytes @ 0x0
  9457                           
  9458  0077                     ?_ADCC_Initialize:	
  9459                           ; 1 bytes @ 0x0
  9460                           
  9461  0077                     ?_PWM4_Initialize:	
  9462                           ; 1 bytes @ 0x0
  9463                           
  9464  0077                     ?_PWM3_Initialize:	
  9465                           ; 1 bytes @ 0x0
  9466                           
  9467  0077                     ?_TMR2_Initialize:	
  9468                           ; 1 bytes @ 0x0
  9469                           
  9470  0077                     ?_TMR0_Initialize:	
  9471                           ; 1 bytes @ 0x0
  9472                           
  9473  0077                     ?_EUSART1_Initialize:	
  9474                           ; 1 bytes @ 0x0
  9475                           
  9476  0077                     ?_EUSART1_Receive_ISR:	
  9477                           ; 1 bytes @ 0x0
  9478                           
  9479  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
  9480                           ; 1 bytes @ 0x0
  9481                           
  9482  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
  9483                           ; 1 bytes @ 0x0
  9484                           
  9485  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0077                     ?_EUSART1_DefaultErrorHandler:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0077                     ?_EUSART1_RxDataHandler:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0077                     ??_EUSART1_RxDataHandler:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0077                     ?_TMR0_ISR:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0077                     ??_TMR0_ISR:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0077                     ?_I2C1_BusCollisionISR:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0077                     ??_I2C1_BusCollisionISR:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0077                     ?_I2C1_ISR:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0077                     ?_ADCC_ThresholdISR:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0077                     ??_ADCC_ThresholdISR:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0077                     ?_TMR0_DefaultInterruptHandler:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0077                     ??_TMR0_DefaultInterruptHandler:	
  9525                           ; 1 bytes @ 0x0
  9526                           
  9527  0077                     ?_I2C1_Stop:	
  9528                           ; 1 bytes @ 0x0
  9529                           
  9530  0077                     ??_I2C1_Stop:	
  9531                           ; 1 bytes @ 0x0
  9532                           
  9533  0077                     ?_I2C1_FunctionComplete:	
  9534                           ; 1 bytes @ 0x0
  9535                           
  9536  0077                     ??_I2C1_FunctionComplete:	
  9537                           ; 1 bytes @ 0x0
  9538                           
  9539  0077                     ?_ADCC_DefaultInterruptHandler:	
  9540                           ; 1 bytes @ 0x0
  9541                           
  9542  0077                     ??_ADCC_DefaultInterruptHandler:	
  9543                           ; 1 bytes @ 0x0
  9544                           
  9545  0077                     ?_CLOCK_init:	
  9546                           ; 1 bytes @ 0x0
  9547                           
  9548  0077                     ?_BUTTONS_init:	
  9549                           ; 1 bytes @ 0x0
  9550                           
  9551  0077                     ?_DMX_init:	
  9552                           ; 1 bytes @ 0x0
  9553                           
  9554  0077                     ?_TM1650_init:	
  9555                           ; 1 bytes @ 0x0
  9556                           
  9557  0077                     ?_CONTROLLER_init:	
  9558                           ; 1 bytes @ 0x0
  9559                           
  9560  0077                     ?_BEAT_init:	
  9561                           ; 1 bytes @ 0x0
  9562                           
  9563  0077                     ?_BUTTONS_task:	
  9564                           ; 1 bytes @ 0x0
  9565                           
  9566  0077                     ?_CONTROLLER_task:	
  9567                           ; 1 bytes @ 0x0
  9568                           
  9569  0077                     ?_BEAT_task:	
  9570                           ; 1 bytes @ 0x0
  9571                           
  9572  0077                     ?_LED_task:	
  9573                           ; 1 bytes @ 0x0
  9574                           
  9575  0077                     ?_GPIO_init:	
  9576                           ; 1 bytes @ 0x0
  9577                           
  9578  0077                     ?_CLOCK_timerCallback:	
  9579                           ; 1 bytes @ 0x0
  9580                           
  9581  0077                     ??_CLOCK_timerCallback:	
  9582                           ; 1 bytes @ 0x0
  9583                           
  9584  0077                     ?_TM1650_enable:	
  9585                           ; 1 bytes @ 0x0
  9586                           
  9587  0077                     ?_DMX_interrupt:	
  9588                           ; 1 bytes @ 0x0
  9589                           
  9590  0077                     ??_DMX_interrupt:	
  9591                           ; 1 bytes @ 0x0
  9592                           
  9593  0077                     ?_SYSTEM_Initialize:	
  9594                           ; 1 bytes @ 0x0
  9595                           
  9596  0077                     ?_INTERRUPT_InterruptManager:	
  9597                           ; 1 bytes @ 0x0
  9598                           
  9599  0077                     ?_I2C1_WaitForLastPacketToComplete:	
  9600                           ; 1 bytes @ 0x0
  9601                           
  9602  0077                     ?_ADCC_StartConversion:	
  9603                           ; 1 bytes @ 0x0
  9604                           
  9605  0077                     ?_main:	
  9606                           ; 1 bytes @ 0x0
  9607                           
  9608  0077                     ?_BUTTONS_isClicked:	
  9609                           ; 1 bytes @ 0x0
  9610                           
  9611  0077                     ?_BUTTONS_isHeld:	
  9612                           ; 1 bytes @ 0x0
  9613                           
  9614  0077                     ?_address_inc:	
  9615                           ; 1 bytes @ 0x0
  9616                           
  9617  0077                     ?_address_dec:	
  9618                           ; 1 bytes @ 0x0
  9619                           
  9620  0077                     ?_putch:	
  9621                           ; 1 bytes @ 0x0
  9622                           
  9623  0077                     ?_adcThresholdHandler:	
  9624                           ; 1 bytes @ 0x0
  9625                           
  9626  0077                     ??_adcThresholdHandler:	
  9627                           ; 1 bytes @ 0x0
  9628                           
  9629  0077                     ?_BEAT_detected:	
  9630                           ; 1 bytes @ 0x0
  9631                           
  9632                           
  9633                           ; 1 bytes @ 0x0
  9634  0077                     	ds	1
  9635  0078                     ??_EUSART1_Receive_ISR:	
  9636  0078                     ??_EUSART1_DefaultErrorHandler:	
  9637                           ; 1 bytes @ 0x1
  9638                           
  9639  0078                     I2C1_Stop@completion_code:	
  9640                           ; 1 bytes @ 0x1
  9641                           
  9642                           
  9643                           ; 1 bytes @ 0x1
  9644  0078                     	ds	1
  9645  0079                     ??_I2C1_ISR:	
  9646                           
  9647                           ; 1 bytes @ 0x2
  9648  0079                     	ds	4
  9649  007D                     DMX_interrupt@dummy:	
  9650                           
  9651                           ; 1 bytes @ 0x6
  9652  007D                     	ds	1
  9653  007E                     ??_INTERRUPT_InterruptManager:	
  9654                           
  9655                           	psect	cstackBANK0
  9656  0020                     __pcstackBANK0:	
  9657                           ; 1 bytes @ 0x7
  9658                           
  9659  0020                     ??_PMD_Initialize:	
  9660  0020                     ??_PIN_MANAGER_Initialize:	
  9661                           ; 1 bytes @ 0x0
  9662                           
  9663  0020                     ??_OSCILLATOR_Initialize:	
  9664                           ; 1 bytes @ 0x0
  9665                           
  9666  0020                     ??_I2C1_Initialize:	
  9667                           ; 1 bytes @ 0x0
  9668                           
  9669  0020                     ??_PWM1_Initialize:	
  9670                           ; 1 bytes @ 0x0
  9671                           
  9672  0020                     ??_PWM2_Initialize:	
  9673                           ; 1 bytes @ 0x0
  9674                           
  9675  0020                     ??_PWM4_Initialize:	
  9676                           ; 1 bytes @ 0x0
  9677                           
  9678  0020                     ??_PWM3_Initialize:	
  9679                           ; 1 bytes @ 0x0
  9680                           
  9681  0020                     ??_TMR2_Initialize:	
  9682                           ; 1 bytes @ 0x0
  9683                           
  9684  0020                     ?_EUSART1_SetRxInterruptHandler:	
  9685                           ; 1 bytes @ 0x0
  9686                           
  9687  0020                     ?_EUSART1_SetFramingErrorHandler:	
  9688                           ; 1 bytes @ 0x0
  9689                           
  9690  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  9691                           ; 1 bytes @ 0x0
  9692                           
  9693  0020                     ?_EUSART1_SetErrorHandler:	
  9694                           ; 1 bytes @ 0x0
  9695                           
  9696  0020                     ?_TMR0_SetInterruptHandler:	
  9697                           ; 1 bytes @ 0x0
  9698                           
  9699  0020                     ?_I2C1_MasterWriteTRBBuild:	
  9700                           ; 1 bytes @ 0x0
  9701                           
  9702  0020                     ?_I2C1_MasterTRBInsert:	
  9703                           ; 1 bytes @ 0x0
  9704                           
  9705  0020                     ?_ADCC_SetADTIInterruptHandler:	
  9706                           ; 1 bytes @ 0x0
  9707                           
  9708  0020                     ??_GPIO_init:	
  9709                           ; 1 bytes @ 0x0
  9710                           
  9711  0020                     ?_PWM3_LoadDutyValue:	
  9712                           ; 1 bytes @ 0x0
  9713                           
  9714  0020                     ?_PWM4_LoadDutyValue:	
  9715                           ; 1 bytes @ 0x0
  9716                           
  9717  0020                     ?_PWM1_LoadDutyValue:	
  9718                           ; 1 bytes @ 0x0
  9719                           
  9720  0020                     ?_PWM2_LoadDutyValue:	
  9721                           ; 1 bytes @ 0x0
  9722                           
  9723  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  9724                           ; 1 bytes @ 0x0
  9725                           
  9726  0020                     ??_ADCC_StartConversion:	
  9727                           ; 1 bytes @ 0x0
  9728                           
  9729  0020                     ?_ADCC_SetUpperThreshold:	
  9730                           ; 1 bytes @ 0x0
  9731                           
  9732  0020                     ?_init:	
  9733                           ; 1 bytes @ 0x0
  9734                           
  9735  0020                     ??_BUTTONS_isClicked:	
  9736                           ; 1 bytes @ 0x0
  9737                           
  9738  0020                     ??_BUTTONS_isHeld:	
  9739                           ; 1 bytes @ 0x0
  9740                           
  9741  0020                     ??_BEAT_detected:	
  9742                           ; 1 bytes @ 0x0
  9743                           
  9744  0020                     ?_CLOCK_getTime:	
  9745                           ; 1 bytes @ 0x0
  9746                           
  9747  0020                     ?_strlen:	
  9748                           ; 2 bytes @ 0x0
  9749                           
  9750  0020                     ?___lwdiv:	
  9751                           ; 2 bytes @ 0x0
  9752                           
  9753  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  9754                           ; 2 bytes @ 0x0
  9755                           
  9756  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  9757                           ; 1 bytes @ 0x0
  9758                           
  9759  0020                     ADCC_StartConversion@channel:	
  9760                           ; 1 bytes @ 0x0
  9761                           
  9762  0020                     BUTTONS_isClicked@button:	
  9763                           ; 1 bytes @ 0x0
  9764                           
  9765  0020                     BUTTONS_isHeld@button:	
  9766                           ; 1 bytes @ 0x0
  9767                           
  9768  0020                     PWM3_LoadDutyValue@dutyValue:	
  9769                           ; 1 bytes @ 0x0
  9770                           
  9771  0020                     PWM4_LoadDutyValue@dutyValue:	
  9772                           ; 2 bytes @ 0x0
  9773                           
  9774  0020                     PWM1_LoadDutyValue@dutyValue:	
  9775                           ; 2 bytes @ 0x0
  9776                           
  9777  0020                     PWM2_LoadDutyValue@dutyValue:	
  9778                           ; 2 bytes @ 0x0
  9779                           
  9780  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  9781                           ; 2 bytes @ 0x0
  9782                           
  9783  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  9784                           ; 2 bytes @ 0x0
  9785                           
  9786  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  9787                           ; 2 bytes @ 0x0
  9788                           
  9789  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  9790                           ; 2 bytes @ 0x0
  9791                           
  9792  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  9793                           ; 2 bytes @ 0x0
  9794                           
  9795  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  9796                           ; 2 bytes @ 0x0
  9797                           
  9798  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  9799                           ; 2 bytes @ 0x0
  9800                           
  9801  0020                     init@port:	
  9802                           ; 2 bytes @ 0x0
  9803                           
  9804  0020                     ___lwdiv@divisor:	
  9805                           ; 2 bytes @ 0x0
  9806                           
  9807  0020                     strlen@s:	
  9808                           ; 2 bytes @ 0x0
  9809                           
  9810                           
  9811                           ; 2 bytes @ 0x0
  9812  0020                     	ds	1
  9813  0021                     I2C1_MasterTRBInsert@pflag:	
  9814  0021                     I2C1_MasterWriteTRBBuild@length:	
  9815                           ; 1 bytes @ 0x1
  9816                           
  9817                           
  9818                           ; 1 bytes @ 0x1
  9819  0021                     	ds	1
  9820  0022                     ??_ADCC_Initialize:	
  9821  0022                     ??_TMR0_Initialize:	
  9822                           ; 1 bytes @ 0x2
  9823                           
  9824  0022                     ??_EUSART1_Initialize:	
  9825                           ; 1 bytes @ 0x2
  9826                           
  9827  0022                     ??_EUSART1_SetRxInterruptHandler:	
  9828                           ; 1 bytes @ 0x2
  9829                           
  9830  0022                     ??_EUSART1_SetFramingErrorHandler:	
  9831                           ; 1 bytes @ 0x2
  9832                           
  9833  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  9834                           ; 1 bytes @ 0x2
  9835                           
  9836  0022                     ??_EUSART1_SetErrorHandler:	
  9837                           ; 1 bytes @ 0x2
  9838                           
  9839  0022                     ??_TMR0_SetInterruptHandler:	
  9840                           ; 1 bytes @ 0x2
  9841                           
  9842  0022                     ??_I2C1_MasterTRBInsert:	
  9843                           ; 1 bytes @ 0x2
  9844                           
  9845  0022                     ??_ADCC_SetADTIInterruptHandler:	
  9846                           ; 1 bytes @ 0x2
  9847                           
  9848  0022                     ??_CLOCK_init:	
  9849                           ; 1 bytes @ 0x2
  9850                           
  9851  0022                     ??_DMX_init:	
  9852                           ; 1 bytes @ 0x2
  9853                           
  9854  0022                     ??_BEAT_init:	
  9855                           ; 1 bytes @ 0x2
  9856                           
  9857  0022                     ??_BUTTONS_task:	
  9858                           ; 1 bytes @ 0x2
  9859                           
  9860  0022                     ??_LED_task:	
  9861                           ; 1 bytes @ 0x2
  9862                           
  9863  0022                     ??_CLOCK_getTime:	
  9864                           ; 1 bytes @ 0x2
  9865                           
  9866  0022                     ??_strlen:	
  9867                           ; 1 bytes @ 0x2
  9868                           
  9869  0022                     ??_SYSTEM_Initialize:	
  9870                           ; 1 bytes @ 0x2
  9871                           
  9872  0022                     ??_PWM3_LoadDutyValue:	
  9873                           ; 1 bytes @ 0x2
  9874                           
  9875  0022                     ??_PWM4_LoadDutyValue:	
  9876                           ; 1 bytes @ 0x2
  9877                           
  9878  0022                     ??_PWM1_LoadDutyValue:	
  9879                           ; 1 bytes @ 0x2
  9880                           
  9881  0022                     ??_PWM2_LoadDutyValue:	
  9882                           ; 1 bytes @ 0x2
  9883                           
  9884  0022                     ??_ADCC_SetUpperThreshold:	
  9885                           ; 1 bytes @ 0x2
  9886                           
  9887  0022                     init@pin:	
  9888                           ; 1 bytes @ 0x2
  9889                           
  9890  0022                     I2C1_MasterWriteTRBBuild@address:	
  9891                           ; 1 bytes @ 0x2
  9892                           
  9893  0022                     ___lwdiv@dividend:	
  9894                           ; 2 bytes @ 0x2
  9895                           
  9896                           
  9897                           ; 2 bytes @ 0x2
  9898  0022                     	ds	1
  9899  0023                     ??_init:	
  9900  0023                     I2C1_MasterTRBInsert@count:	
  9901                           ; 1 bytes @ 0x3
  9902                           
  9903  0023                     strlen@a:	
  9904                           ; 1 bytes @ 0x3
  9905                           
  9906                           
  9907                           ; 2 bytes @ 0x3
  9908  0023                     	ds	1
  9909  0024                     ??_I2C1_MasterWriteTRBBuild:	
  9910  0024                     ??___lwdiv:	
  9911                           ; 1 bytes @ 0x4
  9912                           
  9913  0024                     init@btn:	
  9914                           ; 1 bytes @ 0x4
  9915                           
  9916                           
  9917                           ; 1 bytes @ 0x4
  9918  0024                     	ds	1
  9919  0025                     ??_BUTTONS_init:	
  9920  0025                     BUTTONS_task@i:	
  9921                           ; 1 bytes @ 0x5
  9922                           
  9923  0025                     ___lwdiv@quotient:	
  9924                           ; 1 bytes @ 0x5
  9925                           
  9926                           
  9927                           ; 2 bytes @ 0x5
  9928  0025                     	ds	1
  9929  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  9930  0026                     BUTTONS_task@time:	
  9931                           ; 1 bytes @ 0x6
  9932                           
  9933                           
  9934                           ; 2 bytes @ 0x6
  9935  0026                     	ds	1
  9936  0027                     ?_I2C1_MasterWrite:	
  9937  0027                     I2C1_MasterWrite@length:	
  9938                           ; 1 bytes @ 0x7
  9939                           
  9940  0027                     ___lwdiv@counter:	
  9941                           ; 1 bytes @ 0x7
  9942                           
  9943                           
  9944                           ; 1 bytes @ 0x7
  9945  0027                     	ds	1
  9946  0028                     ??_BEAT_task:	
  9947  0028                     ?___lwmod:	
  9948                           ; 1 bytes @ 0x8
  9949                           
  9950  0028                     BUTTONS_task@btn:	
  9951                           ; 2 bytes @ 0x8
  9952                           
  9953  0028                     I2C1_MasterWrite@address:	
  9954                           ; 1 bytes @ 0x8
  9955                           
  9956  0028                     ___lwmod@divisor:	
  9957                           ; 2 bytes @ 0x8
  9958                           
  9959                           
  9960                           ; 2 bytes @ 0x8
  9961  0028                     	ds	2
  9962  002A                     I2C1_MasterWrite@pflag:	
  9963  002A                     BEAT_task@offset:	
  9964                           ; 1 bytes @ 0xA
  9965                           
  9966  002A                     ___lwmod@dividend:	
  9967                           ; 2 bytes @ 0xA
  9968                           
  9969                           
  9970                           ; 2 bytes @ 0xA
  9971  002A                     	ds	1
  9972  002B                     ??_I2C1_MasterWrite:	
  9973                           
  9974                           ; 1 bytes @ 0xB
  9975  002B                     	ds	1
  9976  002C                     ??___lwmod:	
  9977                           
  9978                           ; 1 bytes @ 0xC
  9979  002C                     	ds	1
  9980  002D                     I2C1_MasterWrite@pdata:	
  9981  002D                     ___lwmod@counter:	
  9982                           ; 1 bytes @ 0xD
  9983                           
  9984                           
  9985                           ; 1 bytes @ 0xD
  9986  002D                     	ds	1
  9987  002E                     ?_writeData:	
  9988  002E                     writeData@data:	
  9989                           ; 1 bytes @ 0xE
  9990                           
  9991                           
  9992                           ; 1 bytes @ 0xE
  9993  002E                     	ds	1
  9994  002F                     ??_writeData:	
  9995                           
  9996                           ; 1 bytes @ 0xF
  9997  002F                     	ds	3
  9998  0032                     writeData@address:	
  9999                           
 10000                           ; 1 bytes @ 0x12
 10001  0032                     	ds	1
 10002  0033                     writeData@status:	
 10003                           
 10004                           ; 1 bytes @ 0x13
 10005  0033                     	ds	1
 10006  0034                     ?_TM1650_fastPrintNum:	
 10007  0034                     ??_TM1650_enable:	
 10008                           ; 1 bytes @ 0x14
 10009                           
 10010  0034                     ?_TM1650_setDigit:	
 10011                           ; 1 bytes @ 0x14
 10012                           
 10013  0034                     TM1650_enable@enable:	
 10014                           ; 1 bytes @ 0x14
 10015                           
 10016  0034                     TM1650_setDigit@data:	
 10017                           ; 1 bytes @ 0x14
 10018                           
 10019  0034                     TM1650_fastPrintNum@num:	
 10020                           ; 1 bytes @ 0x14
 10021                           
 10022                           
 10023                           ; 2 bytes @ 0x14
 10024  0034                     	ds	1
 10025  0035                     ??_TM1650_setDigit:	
 10026                           
 10027                           ; 1 bytes @ 0x15
 10028  0035                     	ds	1
 10029  0036                     ??_TM1650_fastPrintNum:	
 10030  0036                     TM1650_setDigit@digit:	
 10031                           ; 1 bytes @ 0x16
 10032                           
 10033                           
 10034                           ; 1 bytes @ 0x16
 10035  0036                     	ds	1
 10036  0037                     ??_CONTROLLER_init:	
 10037  0037                     ??_CONTROLLER_task:	
 10038                           ; 1 bytes @ 0x17
 10039                           
 10040  0037                     ??_address_inc:	
 10041                           ; 1 bytes @ 0x17
 10042                           
 10043  0037                     ??_address_dec:	
 10044                           ; 1 bytes @ 0x17
 10045                           
 10046  0037                     ??_putch:	
 10047                           ; 1 bytes @ 0x17
 10048                           
 10049                           
 10050                           ; 1 bytes @ 0x17
 10051  0037                     	ds	1
 10052  0038                     putch@n:	
 10053                           
 10054                           ; 1 bytes @ 0x18
 10055  0038                     	ds	1
 10056  0039                     ?_fputc:	
 10057  0039                     CONTROLLER_task@isActive:	
 10058                           ; 2 bytes @ 0x19
 10059                           
 10060  0039                     fputc@c:	
 10061                           ; 1 bytes @ 0x19
 10062                           
 10063                           
 10064                           ; 2 bytes @ 0x19
 10065  0039                     	ds	2
 10066  003B                     fputc@fp:	
 10067                           
 10068                           ; 1 bytes @ 0x1B
 10069  003B                     	ds	1
 10070  003C                     ??_fputc:	
 10071                           
 10072                           ; 1 bytes @ 0x1C
 10073  003C                     	ds	5
 10074  0041                     ?_fputs:	
 10075  0041                     fputs@fp:	
 10076                           ; 2 bytes @ 0x21
 10077                           
 10078                           
 10079                           ; 1 bytes @ 0x21
 10080  0041                     	ds	1
 10081  0042                     ??_fputs:	
 10082                           
 10083                           ; 1 bytes @ 0x22
 10084  0042                     	ds	3
 10085  0045                     fputs@c:	
 10086                           
 10087                           ; 1 bytes @ 0x25
 10088  0045                     	ds	1
 10089  0046                     fputs@s:	
 10090                           
 10091                           ; 1 bytes @ 0x26
 10092  0046                     	ds	1
 10093  0047                     fputs@i:	
 10094                           
 10095                           ; 2 bytes @ 0x27
 10096  0047                     	ds	2
 10097  0049                     ?_pad:	
 10098  0049                     pad@buf:	
 10099                           ; 2 bytes @ 0x29
 10100                           
 10101                           
 10102                           ; 1 bytes @ 0x29
 10103  0049                     	ds	1
 10104  004A                     pad@p:	
 10105                           
 10106                           ; 2 bytes @ 0x2A
 10107  004A                     	ds	2
 10108  004C                     ??_pad:	
 10109                           
 10110                           ; 1 bytes @ 0x2C
 10111  004C                     	ds	1
 10112  004D                     pad@i:	
 10113                           
 10114                           ; 2 bytes @ 0x2D
 10115  004D                     	ds	2
 10116  004F                     pad@w:	
 10117                           
 10118                           ; 2 bytes @ 0x2F
 10119  004F                     	ds	2
 10120  0051                     pad@fp:	
 10121                           
 10122                           ; 1 bytes @ 0x31
 10123  0051                     	ds	1
 10124  0052                     ?_ctoa:	
 10125  0052                     ctoa@c:	
 10126                           ; 2 bytes @ 0x32
 10127                           
 10128                           
 10129                           ; 1 bytes @ 0x32
 10130  0052                     	ds	2
 10131  0054                     ??_ctoa:	
 10132                           
 10133                           ; 1 bytes @ 0x34
 10134  0054                     	ds	1
 10135  0055                     ctoa@fp:	
 10136                           
 10137                           ; 1 bytes @ 0x35
 10138  0055                     	ds	1
 10139  0056                     ctoa@w:	
 10140                           
 10141                           ; 2 bytes @ 0x36
 10142  0056                     	ds	2
 10143  0058                     ?_vfpfcnvrt:	
 10144  0058                     vfpfcnvrt@fmt:	
 10145                           ; 2 bytes @ 0x38
 10146                           
 10147                           
 10148                           ; 1 bytes @ 0x38
 10149  0058                     	ds	1
 10150  0059                     vfpfcnvrt@ap:	
 10151                           
 10152                           ; 1 bytes @ 0x39
 10153  0059                     	ds	1
 10154  005A                     ??_vfpfcnvrt:	
 10155                           
 10156                           ; 1 bytes @ 0x3A
 10157  005A                     	ds	5
 10158  005F                     vfpfcnvrt@c:	
 10159                           
 10160                           ; 1 bytes @ 0x3F
 10161  005F                     	ds	1
 10162  0060                     vfpfcnvrt@fp:	
 10163                           
 10164                           ; 1 bytes @ 0x40
 10165  0060                     	ds	1
 10166  0061                     ?_vfprintf:	
 10167  0061                     vfprintf@fmt:	
 10168                           ; 2 bytes @ 0x41
 10169                           
 10170                           
 10171                           ; 2 bytes @ 0x41
 10172  0061                     	ds	2
 10173  0063                     vfprintf@ap:	
 10174                           
 10175                           ; 1 bytes @ 0x43
 10176  0063                     	ds	1
 10177  0064                     ??_vfprintf:	
 10178                           
 10179                           ; 1 bytes @ 0x44
 10180  0064                     	ds	2
 10181  0066                     vfprintf@fp:	
 10182                           
 10183                           ; 1 bytes @ 0x46
 10184  0066                     	ds	1
 10185  0067                     vfprintf@cfmt:	
 10186                           
 10187                           ; 2 bytes @ 0x47
 10188  0067                     	ds	2
 10189  0069                     ??_printf:	
 10190                           
 10191                           ; 1 bytes @ 0x49
 10192  0069                     	ds	3
 10193  006C                     printf@ap:	
 10194                           
 10195                           ; 1 bytes @ 0x4C
 10196  006C                     	ds	1
 10197  006D                     ??_TM1650_init:	
 10198  006D                     ??_main:	
 10199                           ; 1 bytes @ 0x4D
 10200                           
 10201                           
 10202                           ; 1 bytes @ 0x4D
 10203  006D                     	ds	2
 10204                           
 10205                           	psect	maintext
 10206  0E7A                     __pmaintext:	
 10207 ;;
 10208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 10209 ;;
 10210 ;; *************** function _main *****************
 10211 ;; Defined at:
 10212 ;;		line 63 in file "main.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;		None
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;		None
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : B3F/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10230 ;;Total ram usage:        2 bytes
 10231 ;; Hardware stack levels required when called:   18
 10232 ;; This function calls:
 10233 ;;		_BEAT_init
 10234 ;;		_BEAT_task
 10235 ;;		_BUTTONS_init
 10236 ;;		_BUTTONS_task
 10237 ;;		_CLOCK_init
 10238 ;;		_CONTROLLER_init
 10239 ;;		_CONTROLLER_task
 10240 ;;		_DMX_init
 10241 ;;		_LED_task
 10242 ;;		_SYSTEM_Initialize
 10243 ;;		_TM1650_init
 10244 ;; This function is called by:
 10245 ;;		Startup code after reset
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function _main
 10251  0E7A                     _main:	
 10252                           
 10253                           ;main.c: 66:     SYSTEM_Initialize();
 10254                           
 10255                           ;incstack = 0
 10256 ;; hardware stack exceeded
 10257                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10258  0E7A  318D  2530  318E   	fcall	_SYSTEM_Initialize
 10259                           
 10260                           ;main.c: 67:     _delay((unsigned long)((500)*(32000000/4000.0)));
 10261  0E7D  3015               	movlw	21
 10262  0E7E  0140               	movlb	0	; select bank0
 10263  0E7F  00EE               	movwf	??_main+1
 10264  0E80  304B               	movlw	75
 10265  0E81  00ED               	movwf	??_main
 10266  0E82  30BE               	movlw	190
 10267  0E83                     u4517:	
 10268  0E83  0B89               	decfsz	9,f
 10269  0E84  2E83               	goto	u4517
 10270  0E85  0BED               	decfsz	??_main,f
 10271  0E86  2E83               	goto	u4517
 10272  0E87  0BEE               	decfsz	??_main+1,f
 10273  0E88  2E83               	goto	u4517
 10274  0E89  0000               	nop
 10275                           
 10276                           ;main.c: 68:     CLOCK_init();
 10277  0E8A  318A  2204  318E   	fcall	_CLOCK_init
 10278                           
 10279                           ;main.c: 69:     BUTTONS_init();
 10280  0E8D  318F  27B8  318E   	fcall	_BUTTONS_init
 10281                           
 10282                           ;main.c: 70:     DMX_init();
 10283  0E90  318A  220C  318E   	fcall	_DMX_init
 10284                           
 10285                           ;main.c: 72:     (INTCONbits.GIE = 1);
 10286  0E93  178B               	bsf	11,7	;volatile
 10287                           
 10288                           ;main.c: 73:     (INTCONbits.PEIE = 1);
 10289  0E94  170B               	bsf	11,6	;volatile
 10290                           
 10291                           ;main.c: 75:     TM1650_init();
 10292  0E95  318B  236D  318E   	fcall	_TM1650_init
 10293                           
 10294                           ;main.c: 76:     CONTROLLER_init();
 10295  0E98  318A  228B  318E   	fcall	_CONTROLLER_init
 10296                           
 10297                           ;main.c: 77:     BEAT_init();
 10298  0E9B  318B  23AB  318E   	fcall	_BEAT_init
 10299  0E9E                     l5732:	
 10300                           
 10301                           ;main.c: 81:     {;main.c: 82:         BUTTONS_task();
 10302  0E9E  3182  22BE  318E   	fcall	_BUTTONS_task
 10303                           
 10304                           ;main.c: 83:         CONTROLLER_task();
 10305  0EA1  3183  23A3  318E   	fcall	_CONTROLLER_task
 10306                           
 10307                           ;main.c: 84:         BEAT_task();
 10308  0EA4  3184  2485  318E   	fcall	_BEAT_task
 10309                           
 10310                           ;main.c: 85:         LED_task();
 10311  0EA7  3181  21C5  318E   	fcall	_LED_task
 10312  0EAA  2E9E               	goto	l5732
 10313  0EAB                     __end_of_main:	
 10314                           
 10315                           	psect	text1
 10316  0B6D                     __ptext1:	
 10317 ;; *************** function _TM1650_init *****************
 10318 ;; Defined at:
 10319 ;;		line 52 in file "tm1650.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;		None
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10337 ;;Total ram usage:        0 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:   17
 10340 ;; This function calls:
 10341 ;;		_TM1650_enable
 10342 ;;		_printf
 10343 ;; This function is called by:
 10344 ;;		_main
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           
 10349                           ;psect for function _TM1650_init
 10350  0B6D                     _TM1650_init:	
 10351                           
 10352                           ;tm1650.c: 54:     TM1650_enable(1);
 10353                           
 10354                           ;incstack = 0
 10355 ;; hardware stack exceeded
 10356                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10357  0B6D  3001               	movlw	1
 10358  0B6E  318B  2381  318B   	fcall	_TM1650_enable
 10359                           
 10360                           ;tm1650.c: 55:     printf("    ");
 10361  0B71  3049               	movlw	low (STR_1| (0+32768))
 10362  0B72  0141               	movlb	1	; select bank1
 10363  0B73  00DE               	movwf	printf@fmt^(0+128)
 10364  0B74  3090               	movlw	high (STR_1| (0+32768))
 10365  0B75  00DF               	movwf	(printf@fmt^(0+128)+1)
 10366  0B76  318B  2396  318B   	fcall	_printf
 10367                           
 10368                           ;tm1650.c: 56:     printf("\r");
 10369  0B79  3047               	movlw	low ((STR_11+4)| (0+32768))
 10370  0B7A  0141               	movlb	1	; select bank1
 10371  0B7B  00DE               	movwf	printf@fmt^(0+128)
 10372  0B7C  3090               	movlw	high ((STR_11+4)| (0+32768))
 10373  0B7D  00DF               	movwf	(printf@fmt^(0+128)+1)
 10374  0B7E  318B  2396         	fcall	_printf
 10375  0B80  0008               	return
 10376  0B81                     __end_of_TM1650_init:	
 10377                           
 10378                           	psect	text2
 10379  0B96                     __ptext2:	
 10380 ;; *************** function _printf *****************
 10381 ;; Defined at:
 10382 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 10385 ;;		 -> STR_11(6), STR_10(7), STR_9(8), STR_8(9), 
 10386 ;;		 -> STR_7(10), STR_6(9), STR_5(8), STR_4(7), 
 10387 ;;		 -> STR_2(2), STR_1(5), 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;  ret             2    0        int 
 10390 ;;  ap              1   76[BANK0 ] PTR void [1]
 10391 ;;		 -> ?_printf(2), 
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  2    0[BANK1 ] int 
 10394 ;; Registers used:
 10395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10401 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10402 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10404 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10405 ;;Total ram usage:       14 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; Hardware stack levels required when called:   16
 10408 ;; This function calls:
 10409 ;;		_vfprintf
 10410 ;; This function is called by:
 10411 ;;		_TM1650_init
 10412 ;;		_TM1650_scrollPrint
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           
 10417                           ;psect for function _printf
 10418  0B96                     _printf:	
 10419                           
 10420                           ;incstack = 0
 10421 ;; hardware stack exceeded
 10422                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10423  0B96  30E0               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10424  0B97  0140               	movlb	0	; select bank0
 10425  0B98  00E9               	movwf	??_printf
 10426  0B99  0869               	movf	??_printf,w
 10427  0B9A  00EC               	movwf	printf@ap
 10428  0B9B  0141               	movlb	1	; select bank1
 10429  0B9C  085F               	movf	(printf@fmt+1)^(0+128),w
 10430  0B9D  0140               	movlb	0	; select bank0
 10431  0B9E  00E2               	movwf	vfprintf@fmt+1
 10432  0B9F  0141               	movlb	1	; select bank1
 10433  0BA0  085E               	movf	printf@fmt^(0+128),w
 10434  0BA1  0140               	movlb	0	; select bank0
 10435  0BA2  00E1               	movwf	vfprintf@fmt
 10436  0BA3  306C               	movlw	(low (printf@ap| 0))& (0+255)
 10437  0BA4  00E9               	movwf	??_printf
 10438  0BA5  0869               	movf	??_printf,w
 10439  0BA6  00E3               	movwf	vfprintf@ap
 10440  0BA7  3000               	movlw	0
 10441  0BA8  318E  261B         	fcall	_vfprintf
 10442  0BAA  0008               	return
 10443  0BAB                     __end_of_printf:	
 10444                           
 10445                           	psect	text3
 10446  0E1B                     __ptext3:	
 10447 ;; *************** function _vfprintf *****************
 10448 ;; Defined at:
 10449 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  fp              1    wreg     PTR struct _IO_FILE
 10452 ;;		 -> NULL(0), 
 10453 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 10454 ;;		 -> STR_11(6), STR_10(7), STR_9(8), STR_8(9), 
 10455 ;;		 -> STR_7(10), STR_6(9), STR_5(8), STR_4(7), 
 10456 ;;		 -> STR_2(2), STR_1(5), 
 10457 ;;  ap              1   67[BANK0 ] PTR PTR void 
 10458 ;;		 -> printf@ap(1), 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 10461 ;;		 -> NULL(0), 
 10462 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 10463 ;;		 -> STR_11(6), STR_10(7), STR_9(8), STR_8(9), 
 10464 ;;		 -> STR_7(10), STR_6(9), STR_5(8), STR_4(7), 
 10465 ;;		 -> STR_2(2), STR_1(5), 
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  2   65[BANK0 ] int 
 10468 ;; Registers used:
 10469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10475 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10478 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10479 ;;Total ram usage:        8 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:   15
 10482 ;; This function calls:
 10483 ;;		_vfpfcnvrt
 10484 ;; This function is called by:
 10485 ;;		_printf
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _vfprintf
 10491  0E1B                     _vfprintf:	
 10492                           
 10493                           ;incstack = 0
 10494 ;; hardware stack exceeded
 10495                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10496                           ;vfprintf@fp stored from wreg
 10497  0E1B  0140               	movlb	0	; select bank0
 10498  0E1C  00E6               	movwf	vfprintf@fp
 10499                           
 10500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10501  0E1D  0862               	movf	vfprintf@fmt+1,w
 10502  0E1E  00E8               	movwf	vfprintf@cfmt+1
 10503  0E1F  0861               	movf	vfprintf@fmt,w
 10504  0E20  00E7               	movwf	vfprintf@cfmt
 10505                           
 10506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10507  0E21  0141               	movlb	1	; select bank1
 10508  0E22  01A5               	clrf	_nout^(0+128)
 10509  0E23  01A6               	clrf	(_nout+1)^(0+128)
 10510  0E24                     l5602:	
 10511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10512                           
 10513                           
 10514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10515  0E24  0140               	movlb	0	; select bank0
 10516  0E25  0867               	movf	vfprintf@cfmt,w
 10517  0E26  0084               	movwf	4
 10518  0E27  0868               	movf	vfprintf@cfmt+1,w
 10519  0E28  0085               	movwf	5
 10520  0E29  0012               	moviw fsr0++
 10521  0E2A  1903               	btfsc	3,2
 10522  0E2B  2E41               	goto	l5604
 10523                           
 10524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10525  0E2C  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10526  0E2D  00E4               	movwf	??_vfprintf
 10527  0E2E  0864               	movf	??_vfprintf,w
 10528  0E2F  00D8               	movwf	vfpfcnvrt@fmt
 10529  0E30  0863               	movf	vfprintf@ap,w
 10530  0E31  00E5               	movwf	??_vfprintf+1
 10531  0E32  0865               	movf	??_vfprintf+1,w
 10532  0E33  00D9               	movwf	vfpfcnvrt@ap
 10533  0E34  0866               	movf	vfprintf@fp,w
 10534  0E35  3186  2612  318E   	fcall	_vfpfcnvrt
 10535  0E38  0140               	movlb	0	; select bank0
 10536  0E39  0858               	movf	?_vfpfcnvrt,w
 10537  0E3A  0141               	movlb	1	; select bank1
 10538  0E3B  07A5               	addwf	_nout^(0+128),f
 10539  0E3C  0140               	movlb	0	; select bank0
 10540  0E3D  0859               	movf	?_vfpfcnvrt+1,w
 10541  0E3E  0141               	movlb	1	; select bank1
 10542  0E3F  3DA6               	addwfc	(_nout+1)^(0+128),f
 10543  0E40  2E24               	goto	l5602
 10544  0E41                     l5604:	
 10545                           
 10546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10547  0E41  0141               	movlb	1	; select bank1
 10548  0E42  0826               	movf	(_nout+1)^(0+128),w
 10549  0E43  0140               	movlb	0	; select bank0
 10550  0E44  00E2               	movwf	?_vfprintf+1
 10551  0E45  0141               	movlb	1	; select bank1
 10552  0E46  0825               	movf	_nout^(0+128),w
 10553  0E47  0140               	movlb	0	; select bank0
 10554  0E48  00E1               	movwf	?_vfprintf
 10555  0E49  0008               	return
 10556  0E4A                     __end_of_vfprintf:	
 10557                           
 10558                           	psect	text4
 10559  0612                     __ptext4:	
 10560 ;; *************** function _vfpfcnvrt *****************
 10561 ;; Defined at:
 10562 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  fp              1    wreg     PTR struct _IO_FILE
 10565 ;;		 -> NULL(0), 
 10566 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 10567 ;;		 -> vfprintf@cfmt(2), 
 10568 ;;  ap              1   57[BANK0 ] PTR PTR void 
 10569 ;;		 -> printf@ap(1), 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 10572 ;;		 -> NULL(0), 
 10573 ;;  llu             8    0        unsigned long long 
 10574 ;;  ll              8    0        long long 
 10575 ;;  f               4    0        long long 
 10576 ;;  ct              3    0        unsigned char [3]
 10577 ;;  vp              2    0        PTR void 
 10578 ;;  i               2    0        int 
 10579 ;;  done            2    0        int 
 10580 ;;  cp              2    0        PTR unsigned char 
 10581 ;;  c               1   63[BANK0 ] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  2   56[BANK0 ] int 
 10584 ;; Registers used:
 10585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10593 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10594 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10595 ;;Total ram usage:        9 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:   14
 10598 ;; This function calls:
 10599 ;;		_ctoa
 10600 ;;		_fputc
 10601 ;; This function is called by:
 10602 ;;		_vfprintf
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _vfpfcnvrt
 10608  0612                     _vfpfcnvrt:	
 10609                           
 10610                           ;incstack = 0
 10611 ;; hardware stack exceeded
 10612                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10613                           ;vfpfcnvrt@fp stored from wreg
 10614  0612  0140               	movlb	0	; select bank0
 10615  0613  00E0               	movwf	vfpfcnvrt@fp
 10616                           
 10617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10618  0614  0858               	movf	vfpfcnvrt@fmt,w
 10619  0615  0086               	movwf	6
 10620  0616  0187               	clrf	7
 10621  0617  3F40               	moviw [0]fsr1
 10622  0618  00DA               	movwf	??_vfpfcnvrt
 10623  0619  3F41               	moviw [1]fsr1
 10624  061A  00DB               	movwf	??_vfpfcnvrt+1
 10625  061B  085A               	movf	??_vfpfcnvrt,w
 10626  061C  0084               	movwf	4
 10627  061D  085B               	movf	??_vfpfcnvrt+1,w
 10628  061E  0085               	movwf	5
 10629  061F  0012               	moviw fsr0++
 10630  0620  3A25               	xorlw	37
 10631  0621  1D03               	btfss	3,2
 10632  0622  2E97               	goto	l5580
 10633                           
 10634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10635  0623  0858               	movf	vfpfcnvrt@fmt,w
 10636  0624  0086               	movwf	6
 10637  0625  0187               	clrf	7
 10638  0626  3001               	movlw	1
 10639  0627  0781               	addwf	1,f
 10640  0628  3141               	addfsr 1,1
 10641  0629  1803               	skipnc
 10642  062A  0A81               	incf	1,f
 10643                           
 10644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10645  062B  0141               	movlb	1	; select bank1
 10646  062C  01A7               	clrf	_width^(0+128)
 10647  062D  01A8               	clrf	(_width+1)^(0+128)
 10648  062E  01AB               	clrf	_flags^(0+128)
 10649  062F  01AC               	clrf	(_flags+1)^(0+128)
 10650                           
 10651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10652  0630  30FF               	movlw	255
 10653  0631  00A9               	movwf	_prec^(0+128)
 10654  0632  30FF               	movlw	255
 10655  0633  00AA               	movwf	(_prec^(0+128)+1)
 10656                           
 10657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 10658  0634  0140               	movlb	0	; select bank0
 10659  0635  0858               	movf	vfpfcnvrt@fmt,w
 10660  0636  0086               	movwf	6
 10661  0637  0187               	clrf	7
 10662  0638  3F40               	moviw [0]fsr1
 10663  0639  00DA               	movwf	??_vfpfcnvrt
 10664  063A  3F41               	moviw [1]fsr1
 10665  063B  00DB               	movwf	??_vfpfcnvrt+1
 10666  063C  085A               	movf	??_vfpfcnvrt,w
 10667  063D  0084               	movwf	4
 10668  063E  085B               	movf	??_vfpfcnvrt+1,w
 10669  063F  0085               	movwf	5
 10670  0640  0012               	moviw fsr0++
 10671  0641  3A63               	xorlw	99
 10672  0642  1D03               	btfss	3,2
 10673  0643  2E65               	goto	l5564
 10674                           
 10675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 10676  0644  0858               	movf	vfpfcnvrt@fmt,w
 10677  0645  0086               	movwf	6
 10678  0646  0187               	clrf	7
 10679  0647  3001               	movlw	1
 10680  0648  0781               	addwf	1,f
 10681  0649  3141               	addfsr 1,1
 10682  064A  1803               	skipnc
 10683  064B  0A81               	incf	1,f
 10684                           
 10685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10686  064C  0859               	movf	vfpfcnvrt@ap,w
 10687  064D  0086               	movwf	6
 10688  064E  0187               	clrf	7
 10689  064F  0801               	movf	1,w
 10690  0650  0084               	movwf	4
 10691  0651  0185               	clrf	5
 10692  0652  3002               	movlw	2
 10693  0653  0781               	addwf	1,f
 10694  0654  0800               	movf	0,w
 10695  0655  00DA               	movwf	??_vfpfcnvrt
 10696  0656  085A               	movf	??_vfpfcnvrt,w
 10697  0657  00DF               	movwf	vfpfcnvrt@c
 10698                           
 10699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 10700  0658  085F               	movf	vfpfcnvrt@c,w
 10701  0659  00DA               	movwf	??_vfpfcnvrt
 10702  065A  085A               	movf	??_vfpfcnvrt,w
 10703  065B  00D2               	movwf	ctoa@c
 10704  065C  0860               	movf	vfpfcnvrt@fp,w
 10705  065D  318E  264A         	fcall	_ctoa
 10706  065F  0140               	movlb	0	; select bank0
 10707  0660  0853               	movf	?_ctoa+1,w
 10708  0661  00D9               	movwf	?_vfpfcnvrt+1
 10709  0662  0852               	movf	?_ctoa,w
 10710  0663  00D8               	movwf	?_vfpfcnvrt
 10711  0664  0008               	return
 10712  0665                     l5564:	
 10713                           
 10714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10715  0665  0858               	movf	vfpfcnvrt@fmt,w
 10716  0666  0086               	movwf	6
 10717  0667  0187               	clrf	7
 10718  0668  3F40               	moviw [0]fsr1
 10719  0669  00DA               	movwf	??_vfpfcnvrt
 10720  066A  3F41               	moviw [1]fsr1
 10721  066B  00DB               	movwf	??_vfpfcnvrt+1
 10722  066C  085A               	movf	??_vfpfcnvrt,w
 10723  066D  0084               	movwf	4
 10724  066E  085B               	movf	??_vfpfcnvrt+1,w
 10725  066F  0085               	movwf	5
 10726  0670  0012               	moviw fsr0++
 10727  0671  3A25               	xorlw	37
 10728  0672  1D03               	btfss	3,2
 10729  0673  2E8C               	goto	l5574
 10730                           
 10731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10732  0674  0858               	movf	vfpfcnvrt@fmt,w
 10733  0675  0086               	movwf	6
 10734  0676  0187               	clrf	7
 10735  0677  3001               	movlw	1
 10736  0678  0781               	addwf	1,f
 10737  0679  3141               	addfsr 1,1
 10738  067A  1803               	skipnc
 10739  067B  0A81               	incf	1,f
 10740                           
 10741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10742  067C  3025               	movlw	37
 10743  067D  00B9               	movwf	fputc@c
 10744  067E  3000               	movlw	0
 10745  067F  00BA               	movwf	fputc@c+1
 10746  0680  0860               	movf	vfpfcnvrt@fp,w
 10747  0681  00DA               	movwf	??_vfpfcnvrt
 10748  0682  085A               	movf	??_vfpfcnvrt,w
 10749  0683  00BB               	movwf	fputc@fp
 10750  0684  318F  2781         	fcall	_fputc
 10751  0686                     l5570:	
 10752                           
 10753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10754  0686  3001               	movlw	1
 10755  0687  0140               	movlb	0	; select bank0
 10756  0688  00D8               	movwf	?_vfpfcnvrt
 10757  0689  3000               	movlw	0
 10758  068A  00D9               	movwf	?_vfpfcnvrt+1
 10759  068B  0008               	return
 10760  068C                     l5574:	
 10761                           
 10762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10763  068C  0858               	movf	vfpfcnvrt@fmt,w
 10764  068D  0086               	movwf	6
 10765  068E  0187               	clrf	7
 10766  068F  3001               	movlw	1
 10767  0690  0781               	addwf	1,f
 10768  0691  3141               	addfsr 1,1
 10769  0692  1803               	skipnc
 10770  0693  0A81               	incf	1,f
 10771                           
 10772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10773  0694  01D8               	clrf	?_vfpfcnvrt
 10774  0695  01D9               	clrf	?_vfpfcnvrt+1
 10775  0696  0008               	return
 10776  0697                     l5580:	
 10777                           
 10778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10779  0697  0858               	movf	vfpfcnvrt@fmt,w
 10780  0698  0086               	movwf	6
 10781  0699  0187               	clrf	7
 10782  069A  3F40               	moviw [0]fsr1
 10783  069B  00DA               	movwf	??_vfpfcnvrt
 10784  069C  3F41               	moviw [1]fsr1
 10785  069D  00DB               	movwf	??_vfpfcnvrt+1
 10786  069E  085A               	movf	??_vfpfcnvrt,w
 10787  069F  0084               	movwf	4
 10788  06A0  085B               	movf	??_vfpfcnvrt+1,w
 10789  06A1  0085               	movwf	5
 10790  06A2  0800               	movf	0,w	;code access
 10791  06A3  00DC               	movwf	??_vfpfcnvrt+2
 10792  06A4  01DD               	clrf	??_vfpfcnvrt+3
 10793  06A5  085C               	movf	??_vfpfcnvrt+2,w
 10794  06A6  00B9               	movwf	fputc@c
 10795  06A7  085D               	movf	??_vfpfcnvrt+3,w
 10796  06A8  00BA               	movwf	fputc@c+1
 10797  06A9  0860               	movf	vfpfcnvrt@fp,w
 10798  06AA  00DE               	movwf	??_vfpfcnvrt+4
 10799  06AB  085E               	movf	??_vfpfcnvrt+4,w
 10800  06AC  00BB               	movwf	fputc@fp
 10801  06AD  318F  2781  3186   	fcall	_fputc
 10802                           
 10803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10804  06B0  0140               	movlb	0	; select bank0
 10805  06B1  0858               	movf	vfpfcnvrt@fmt,w
 10806  06B2  0086               	movwf	6
 10807  06B3  0187               	clrf	7
 10808  06B4  3001               	movlw	1
 10809  06B5  0781               	addwf	1,f
 10810  06B6  3141               	addfsr 1,1
 10811  06B7  1803               	skipnc
 10812  06B8  0A81               	incf	1,f
 10813  06B9  2E86               	goto	l5570
 10814  06BA                     __end_of_vfpfcnvrt:	
 10815                           
 10816                           	psect	text5
 10817  0E4A                     __ptext5:	
 10818 ;; *************** function _ctoa *****************
 10819 ;; Defined at:
 10820 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  fp              1    wreg     PTR struct _IO_FILE
 10823 ;;		 -> NULL(0), 
 10824 ;;  c               1   50[BANK0 ] unsigned char 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  fp              1   53[BANK0 ] PTR struct _IO_FILE
 10827 ;;		 -> NULL(0), 
 10828 ;;  w               2   54[BANK0 ] int 
 10829 ;;  l               2    0        int 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  2   50[BANK0 ] int 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10840 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10842 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10843 ;;Total ram usage:        6 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:   13
 10846 ;; This function calls:
 10847 ;;		_pad
 10848 ;; This function is called by:
 10849 ;;		_vfpfcnvrt
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           
 10854                           ;psect for function _ctoa
 10855  0E4A                     _ctoa:	
 10856                           
 10857                           ;incstack = 0
 10858 ;; hardware stack exceeded
 10859                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10860                           ;ctoa@fp stored from wreg
 10861  0E4A  0140               	movlb	0	; select bank0
 10862  0E4B  00D5               	movwf	ctoa@fp
 10863                           
 10864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10865  0E4C  0141               	movlb	1	; select bank1
 10866  0E4D  0827               	movf	_width^(0+128),w
 10867  0E4E  0428               	iorwf	(_width+1)^(0+128),w
 10868  0E4F  1D03               	btfss	3,2
 10869  0E50  2E59               	goto	l5536
 10870  0E51  0828               	movf	(_width+1)^(0+128),w
 10871  0E52  0140               	movlb	0	; select bank0
 10872  0E53  00D7               	movwf	ctoa@w+1
 10873  0E54  0141               	movlb	1	; select bank1
 10874  0E55  0827               	movf	_width^(0+128),w
 10875  0E56  0140               	movlb	0	; select bank0
 10876  0E57  00D6               	movwf	ctoa@w
 10877  0E58  2E62               	goto	l5538
 10878  0E59                     l5536:	
 10879  0E59  0827               	movf	_width^(0+128),w
 10880  0E5A  3EFF               	addlw	255
 10881  0E5B  0140               	movlb	0	; select bank0
 10882  0E5C  00D6               	movwf	ctoa@w
 10883  0E5D  30FF               	movlw	255
 10884  0E5E  0141               	movlb	1	; select bank1
 10885  0E5F  3D28               	addwfc	(_width+1)^(0+128),w
 10886  0E60  0140               	movlb	0	; select bank0
 10887  0E61  00D7               	movwf	ctoa@w+1
 10888  0E62                     l5538:	
 10889                           
 10890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10891  0E62  0852               	movf	ctoa@c,w
 10892  0E63  00D4               	movwf	??_ctoa
 10893  0E64  0854               	movf	??_ctoa,w
 10894  0E65  0143               	movlb	3	; select bank3
 10895  0E66  00A0               	movwf	_dbuf^(0+384)
 10896                           
 10897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10898  0E67  01A1               	clrf	(_dbuf^(0+384)+1)
 10899                           
 10900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10901  0E68  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 10902  0E69  0140               	movlb	0	; select bank0
 10903  0E6A  00D4               	movwf	??_ctoa
 10904  0E6B  0854               	movf	??_ctoa,w
 10905  0E6C  00C9               	movwf	pad@buf
 10906  0E6D  0857               	movf	ctoa@w+1,w
 10907  0E6E  00CB               	movwf	pad@p+1
 10908  0E6F  0856               	movf	ctoa@w,w
 10909  0E70  00CA               	movwf	pad@p
 10910  0E71  0855               	movf	ctoa@fp,w
 10911  0E72  3187  271A         	fcall	_pad
 10912  0E74  0140               	movlb	0	; select bank0
 10913  0E75  084A               	movf	?_pad+1,w
 10914  0E76  00D3               	movwf	?_ctoa+1
 10915  0E77  0849               	movf	?_pad,w
 10916  0E78  00D2               	movwf	?_ctoa
 10917  0E79  0008               	return
 10918  0E7A                     __end_of_ctoa:	
 10919                           
 10920                           	psect	text6
 10921  071A                     __ptext6:	
 10922 ;; *************** function _pad *****************
 10923 ;; Defined at:
 10924 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  fp              1    wreg     PTR struct _IO_FILE
 10927 ;;		 -> NULL(0), 
 10928 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 10929 ;;		 -> dbuf(32), 
 10930 ;;  p               2   42[BANK0 ] int 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 10933 ;;		 -> NULL(0), 
 10934 ;;  w               2   47[BANK0 ] int 
 10935 ;;  i               2   45[BANK0 ] int 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  2   41[BANK0 ] int 
 10938 ;; Registers used:
 10939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10945 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10946 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10948 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10949 ;;Total ram usage:        9 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:   12
 10952 ;; This function calls:
 10953 ;;		_fputc
 10954 ;;		_fputs
 10955 ;;		_strlen
 10956 ;; This function is called by:
 10957 ;;		_ctoa
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           
 10962                           ;psect for function _pad
 10963  071A                     _pad:	
 10964                           
 10965                           ;incstack = 0
 10966 ;; hardware stack exceeded
 10967                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10968                           ;pad@fp stored from wreg
 10969  071A  0140               	movlb	0	; select bank0
 10970  071B  00D1               	movwf	pad@fp
 10971                           
 10972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10973  071C  0141               	movlb	1	; select bank1
 10974  071D  1C2B               	btfss	_flags^(0+128),0
 10975  071E  2F28               	goto	l5514
 10976                           
 10977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10978  071F  0140               	movlb	0	; select bank0
 10979  0720  0851               	movf	pad@fp,w
 10980  0721  00CC               	movwf	??_pad
 10981  0722  084C               	movf	??_pad,w
 10982  0723  00C1               	movwf	fputs@fp
 10983  0724  0849               	movf	pad@buf,w
 10984  0725  318D  259E  3187   	fcall	_fputs
 10985  0728                     l5514:	
 10986                           
 10987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10988  0728  0140               	movlb	0	; select bank0
 10989  0729  1BCB               	btfsc	pad@p+1,7
 10990  072A  2F30               	goto	l5518
 10991  072B  084B               	movf	pad@p+1,w
 10992  072C  00D0               	movwf	pad@w+1
 10993  072D  084A               	movf	pad@p,w
 10994  072E  00CF               	movwf	pad@w
 10995  072F  2F32               	goto	l1361
 10996  0730                     l5518:	
 10997  0730  01CF               	clrf	pad@w
 10998  0731  01D0               	clrf	pad@w+1
 10999  0732                     l1361:	
 11000                           
 11001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 11002  0732  01CD               	clrf	pad@i
 11003  0733  01CE               	clrf	pad@i+1
 11004  0734                     l5524:	
 11005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11006                           
 11007                           
 11008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11009  0734  084E               	movf	pad@i+1,w
 11010  0735  3A80               	xorlw	128
 11011  0736  00CC               	movwf	??_pad
 11012  0737  0850               	movf	pad@w+1,w
 11013  0738  3A80               	xorlw	128
 11014  0739  024C               	subwf	??_pad,w
 11015  073A  1D03               	skipz
 11016  073B  2F3E               	goto	u4245
 11017  073C  084F               	movf	pad@w,w
 11018  073D  024D               	subwf	pad@i,w
 11019  073E                     u4245:	
 11020  073E  1803               	btfsc	3,0
 11021  073F  2F52               	goto	l1364
 11022                           
 11023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 11024  0740  3020               	movlw	32
 11025  0741  0140               	movlb	0	; select bank0
 11026  0742  00B9               	movwf	fputc@c
 11027  0743  3000               	movlw	0
 11028  0744  00BA               	movwf	fputc@c+1
 11029  0745  0851               	movf	pad@fp,w
 11030  0746  00CC               	movwf	??_pad
 11031  0747  084C               	movf	??_pad,w
 11032  0748  00BB               	movwf	fputc@fp
 11033  0749  318F  2781  3187   	fcall	_fputc
 11034                           
 11035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 11036  074C  3001               	movlw	1
 11037  074D  0140               	movlb	0	; select bank0
 11038  074E  07CD               	addwf	pad@i,f
 11039  074F  3000               	movlw	0
 11040  0750  3DCE               	addwfc	pad@i+1,f
 11041  0751  2F34               	goto	l5524
 11042  0752                     l1364:	
 11043                           
 11044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 11045  0752  0141               	movlb	1	; select bank1
 11046  0753  182B               	btfsc	_flags^(0+128),0
 11047  0754  2F5E               	goto	l5528
 11048                           
 11049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 11050  0755  0140               	movlb	0	; select bank0
 11051  0756  0851               	movf	pad@fp,w
 11052  0757  00CC               	movwf	??_pad
 11053  0758  084C               	movf	??_pad,w
 11054  0759  00C1               	movwf	fputs@fp
 11055  075A  0849               	movf	pad@buf,w
 11056  075B  318D  259E  3187   	fcall	_fputs
 11057  075E                     l5528:	
 11058                           
 11059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 11060  075E  0140               	movlb	0	; select bank0
 11061  075F  0849               	movf	pad@buf,w
 11062  0760  00A0               	movwf	strlen@s
 11063  0761  3001               	movlw	1
 11064  0762  00A1               	movwf	strlen@s+1
 11065  0763  318B  23F2         	fcall	_strlen
 11066  0765  0140               	movlb	0	; select bank0
 11067  0766  084F               	movf	pad@w,w
 11068  0767  0720               	addwf	?_strlen,w
 11069  0768  00C9               	movwf	?_pad
 11070  0769  0850               	movf	pad@w+1,w
 11071  076A  3D21               	addwfc	?_strlen+1,w
 11072  076B  00CA               	movwf	?_pad+1
 11073  076C  0008               	return
 11074  076D                     __end_of_pad:	
 11075                           
 11076                           	psect	text7
 11077  0BF2                     __ptext7:	
 11078 ;; *************** function _strlen *****************
 11079 ;; Defined at:
 11080 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11083 ;;		 -> dbuf(32), STR_3(9), 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 11086 ;;		 -> dbuf(32), STR_3(9), 
 11087 ;; Return value:  Size  Location     Type
 11088 ;;                  2    0[BANK0 ] unsigned int 
 11089 ;; Registers used:
 11090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11091 ;; Tracked objects:
 11092 ;;		On entry : 0/0
 11093 ;;		On exit  : 0/0
 11094 ;;		Unchanged: 0/0
 11095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11099 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11100 ;;Total ram usage:        5 bytes
 11101 ;; Hardware stack levels used:    1
 11102 ;; Hardware stack levels required when called:    4
 11103 ;; This function calls:
 11104 ;;		Nothing
 11105 ;; This function is called by:
 11106 ;;		_pad
 11107 ;;		_TM1650_scrollPrint
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           
 11112                           ;psect for function _strlen
 11113  0BF2                     _strlen:	
 11114                           
 11115                           ;incstack = 0
 11116                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 11117  0BF2  0140               	movlb	0	; select bank0
 11118  0BF3  0821               	movf	strlen@s+1,w
 11119  0BF4  00A4               	movwf	strlen@a+1
 11120  0BF5  0820               	movf	strlen@s,w
 11121  0BF6  00A3               	movwf	strlen@a
 11122  0BF7                     l3350:	
 11123  0BF7  0820               	movf	strlen@s,w
 11124  0BF8  0084               	movwf	4
 11125  0BF9  0821               	movf	strlen@s+1,w
 11126  0BFA  0085               	movwf	5
 11127  0BFB  0012               	moviw fsr0++
 11128  0BFC  1903               	btfsc	3,2
 11129  0BFD  2C03               	goto	l3352
 11130  0BFE  3001               	movlw	1
 11131  0BFF  07A0               	addwf	strlen@s,f
 11132  0C00  3000               	movlw	0
 11133  0C01  3DA1               	addwfc	strlen@s+1,f
 11134  0C02  2BF7               	goto	l3350
 11135  0C03                     l3352:	
 11136  0C03  0823               	movf	strlen@a,w
 11137  0C04  0220               	subwf	strlen@s,w
 11138  0C05  00A0               	movwf	?_strlen
 11139  0C06  0824               	movf	strlen@a+1,w
 11140  0C07  3B21               	subwfb	strlen@s+1,w
 11141  0C08  00A1               	movwf	?_strlen+1
 11142  0C09  0008               	return
 11143  0C0A                     __end_of_strlen:	
 11144                           
 11145                           	psect	text8
 11146  0D9E                     __ptext8:	
 11147 ;; *************** function _fputs *****************
 11148 ;; Defined at:
 11149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  s               1    wreg     PTR const unsigned char 
 11152 ;;		 -> dbuf(32), 
 11153 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 11154 ;;		 -> NULL(0), 
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;  s               1   38[BANK0 ] PTR const unsigned char 
 11157 ;;		 -> dbuf(32), 
 11158 ;;  i               2   39[BANK0 ] int 
 11159 ;;  c               1   37[BANK0 ] unsigned char 
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  2   33[BANK0 ] int 
 11162 ;; Registers used:
 11163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11169 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11170 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11171 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11172 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11173 ;;Total ram usage:        8 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:   11
 11176 ;; This function calls:
 11177 ;;		_fputc
 11178 ;; This function is called by:
 11179 ;;		_pad
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           
 11184                           ;psect for function _fputs
 11185  0D9E                     _fputs:	
 11186                           
 11187                           ;incstack = 0
 11188 ;; hardware stack exceeded
 11189                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11190                           ;fputs@s stored from wreg
 11191  0D9E  0140               	movlb	0	; select bank0
 11192  0D9F  00C6               	movwf	fputs@s
 11193  0DA0  01C7               	clrf	fputs@i
 11194  0DA1  01C8               	clrf	fputs@i+1
 11195  0DA2                     l5508:	
 11196  0DA2  0847               	movf	fputs@i,w
 11197  0DA3  0746               	addwf	fputs@s,w
 11198  0DA4  00C2               	movwf	??_fputs
 11199  0DA5  0842               	movf	??_fputs,w
 11200  0DA6  0086               	movwf	6
 11201  0DA7  3001               	movlw	1	; select bank2/3
 11202  0DA8  0087               	movwf	7
 11203  0DA9  0801               	movf	1,w
 11204  0DAA  00C3               	movwf	??_fputs+1
 11205  0DAB  0843               	movf	??_fputs+1,w
 11206  0DAC  00C5               	movwf	fputs@c
 11207  0DAD  0845               	movf	fputs@c,w
 11208  0DAE  1903               	btfsc	3,2
 11209  0DAF  0008               	return
 11210  0DB0  0845               	movf	fputs@c,w
 11211  0DB1  00C2               	movwf	??_fputs
 11212  0DB2  01C3               	clrf	??_fputs+1
 11213  0DB3  0842               	movf	??_fputs,w
 11214  0DB4  00B9               	movwf	fputc@c
 11215  0DB5  0843               	movf	??_fputs+1,w
 11216  0DB6  00BA               	movwf	fputc@c+1
 11217  0DB7  0841               	movf	fputs@fp,w
 11218  0DB8  00C4               	movwf	??_fputs+2
 11219  0DB9  0844               	movf	??_fputs+2,w
 11220  0DBA  00BB               	movwf	fputc@fp
 11221  0DBB  318F  2781  318D   	fcall	_fputc
 11222  0DBE  3001               	movlw	1
 11223  0DBF  0140               	movlb	0	; select bank0
 11224  0DC0  07C7               	addwf	fputs@i,f
 11225  0DC1  3000               	movlw	0
 11226  0DC2  3DC8               	addwfc	fputs@i+1,f
 11227  0DC3  2DA2               	goto	l5508
 11228  0DC4                     __end_of_fputs:	
 11229                           
 11230                           	psect	text9
 11231  0F81                     __ptext9:	
 11232 ;; *************** function _fputc *****************
 11233 ;; Defined at:
 11234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  c               2   25[BANK0 ] int 
 11237 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11238 ;;		 -> NULL(0), 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  2   25[BANK0 ] int 
 11243 ;; Registers used:
 11244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11250 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11252 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11253 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11254 ;;Total ram usage:        8 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:   10
 11257 ;; This function calls:
 11258 ;;		_putch
 11259 ;; This function is called by:
 11260 ;;		_pad
 11261 ;;		_vfpfcnvrt
 11262 ;;		_fputs
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           
 11267                           ;psect for function _fputc
 11268  0F81                     _fputc:	
 11269                           
 11270                           ;incstack = 0
 11271                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11272  0F81  0140               	movlb	0	; select bank0
 11273  0F82  083B               	movf	fputc@fp,w
 11274  0F83  1D03               	btfss	3,2
 11275  0F84  083B               	movf	fputc@fp,w
 11276  0F85  1D03               	btfss	3,2
 11277  0F86  2F8B               	goto	l5494
 11278  0F87  0839               	movf	fputc@c,w
 11279  0F88  318D  2554         	fcall	_putch
 11280  0F8A  0008               	return
 11281  0F8B                     l5494:	
 11282  0F8B  083B               	movf	fputc@fp,w
 11283  0F8C  3E03               	addlw	3
 11284  0F8D  0086               	movwf	6
 11285  0F8E  0187               	clrf	7
 11286  0F8F  0016               	moviw fsr1++
 11287  0F90  0401               	iorwf	1,w
 11288  0F91  1903               	btfsc	3,2
 11289  0F92  2FAE               	goto	l5498
 11290  0F93  083B               	movf	fputc@fp,w
 11291  0F94  3E03               	addlw	3
 11292  0F95  0086               	movwf	6
 11293  0F96  0187               	clrf	7
 11294  0F97  3F40               	moviw [0]fsr1
 11295  0F98  00BC               	movwf	??_fputc
 11296  0F99  3F41               	moviw [1]fsr1
 11297  0F9A  00BD               	movwf	??_fputc+1
 11298  0F9B  0A3B               	incf	fputc@fp,w
 11299  0F9C  0086               	movwf	6
 11300  0F9D  0187               	clrf	7
 11301  0F9E  3F40               	moviw [0]fsr1
 11302  0F9F  00BE               	movwf	??_fputc+2
 11303  0FA0  3F41               	moviw [1]fsr1
 11304  0FA1  00BF               	movwf	??_fputc+3
 11305  0FA2  083F               	movf	??_fputc+3,w
 11306  0FA3  3A80               	xorlw	128
 11307  0FA4  00C0               	movwf	??_fputc+4
 11308  0FA5  083D               	movf	??_fputc+1,w
 11309  0FA6  3A80               	xorlw	128
 11310  0FA7  0240               	subwf	??_fputc+4,w
 11311  0FA8  1D03               	skipz
 11312  0FA9  2FAC               	goto	u4205
 11313  0FAA  083C               	movf	??_fputc,w
 11314  0FAB  023E               	subwf	??_fputc+2,w
 11315  0FAC                     u4205:	
 11316  0FAC  1803               	skipnc
 11317  0FAD  0008               	return
 11318  0FAE                     l5498:	
 11319  0FAE  0140               	movlb	0	; select bank0
 11320  0FAF  0A3B               	incf	fputc@fp,w
 11321  0FB0  0086               	movwf	6
 11322  0FB1  0187               	clrf	7
 11323  0FB2  3001               	movlw	1
 11324  0FB3  0781               	addwf	1,f
 11325  0FB4  3141               	addfsr 1,1
 11326  0FB5  1803               	skipnc
 11327  0FB6  0A81               	incf	1,f
 11328  0FB7  0008               	return
 11329  0FB8                     __end_of_fputc:	
 11330                           
 11331                           	psect	text10
 11332  0D54                     __ptext10:	
 11333 ;; *************** function _putch *****************
 11334 ;; Defined at:
 11335 ;;		line 121 in file "tm1650.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  n               1    wreg     unsigned char 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  n               1   24[BANK0 ] unsigned char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  1    wreg      void 
 11342 ;; Registers used:
 11343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11353 ;;Total ram usage:        2 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    9
 11356 ;; This function calls:
 11357 ;;		_TM1650_setDigit
 11358 ;; This function is called by:
 11359 ;;		_fputc
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           
 11364                           ;psect for function _putch
 11365  0D54                     _putch:	
 11366                           
 11367                           ;incstack = 0
 11368                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11369                           ;putch@n stored from wreg
 11370  0D54  0140               	movlb	0	; select bank0
 11371  0D55  00B8               	movwf	putch@n
 11372                           
 11373                           ;tm1650.c: 123:     if(position > 3 || n == '\r' || n == '\0')
 11374  0D56  3004               	movlw	4
 11375  0D57  0141               	movlb	1	; select bank1
 11376  0D58  0244               	subwf	_position^(0+128),w
 11377  0D59  1803               	skipnc
 11378  0D5A  2D62               	goto	l5480
 11379  0D5B  300D               	movlw	13
 11380  0D5C  0140               	movlb	0	; select bank0
 11381  0D5D  0638               	xorwf	putch@n,w
 11382  0D5E  1D03               	btfss	3,2
 11383  0D5F  0838               	movf	putch@n,w
 11384  0D60  1D03               	btfss	3,2
 11385  0D61  2D64               	goto	l5482
 11386  0D62                     l5480:	
 11387                           
 11388                           ;tm1650.c: 124:         position = 0;
 11389  0D62  0141               	movlb	1	; select bank1
 11390  0D63  01C4               	clrf	_position^(0+128)
 11391  0D64                     l5482:	
 11392                           
 11393                           ;tm1650.c: 126:     if(n != '\r'){
 11394  0D64  300D               	movlw	13
 11395  0D65  0140               	movlb	0	; select bank0
 11396  0D66  0638               	xorwf	putch@n,w
 11397  0D67  1903               	btfsc	3,2
 11398  0D68  0008               	return
 11399                           
 11400                           ;tm1650.c: 127:         TM1650_setDigit(position, n);
 11401  0D69  0838               	movf	putch@n,w
 11402  0D6A  00B7               	movwf	??_putch
 11403  0D6B  0837               	movf	??_putch,w
 11404  0D6C  00B4               	movwf	TM1650_setDigit@data
 11405  0D6D  0141               	movlb	1	; select bank1
 11406  0D6E  0844               	movf	_position^(0+128),w
 11407  0D6F  318B  2333         	fcall	_TM1650_setDigit
 11408                           
 11409                           ;tm1650.c: 128:         position++;
 11410  0D71  3001               	movlw	1
 11411  0D72  0140               	movlb	0	; select bank0
 11412  0D73  00B7               	movwf	??_putch
 11413  0D74  0837               	movf	??_putch,w
 11414  0D75  0141               	movlb	1	; select bank1
 11415  0D76  07C4               	addwf	_position^(0+128),f
 11416  0D77  0008               	return
 11417  0D78                     __end_of_putch:	
 11418                           
 11419                           	psect	text11
 11420  0B33                     __ptext11:	
 11421 ;; *************** function _TM1650_setDigit *****************
 11422 ;; Defined at:
 11423 ;;		line 96 in file "tm1650.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;  digit           1    wreg     unsigned char 
 11426 ;;  data            1   20[BANK0 ] unsigned char 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;  digit           1   22[BANK0 ] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      void 
 11431 ;; Registers used:
 11432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11438 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11440 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11441 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11442 ;;Total ram usage:        3 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:    8
 11445 ;; This function calls:
 11446 ;;		_writeData
 11447 ;; This function is called by:
 11448 ;;		_putch
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           
 11453                           ;psect for function _TM1650_setDigit
 11454  0B33                     _TM1650_setDigit:	
 11455                           
 11456                           ;incstack = 0
 11457                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11458                           ;TM1650_setDigit@digit stored from wreg
 11459  0B33  0140               	movlb	0	; select bank0
 11460  0B34  00B6               	movwf	TM1650_setDigit@digit
 11461                           
 11462                           ;tm1650.c: 98:     writeData(digit + 0x34, charTable[data - 32]);
 11463  0B35  0834               	movf	TM1650_setDigit@data,w
 11464  0B36  3E9A               	addlw	low ((_charTable+65504)| (0+32768))
 11465  0B37  0084               	movwf	4
 11466  0B38  3086               	movlw	high ((_charTable+65504)| (0+32768))
 11467  0B39  1803               	skipnc
 11468  0B3A  3E01               	addlw	1
 11469  0B3B  0085               	movwf	5
 11470  0B3C  0800               	movf	0,w	;code access
 11471  0B3D  00B5               	movwf	??_TM1650_setDigit
 11472  0B3E  0835               	movf	??_TM1650_setDigit,w
 11473  0B3F  00AE               	movwf	writeData@data
 11474  0B40  0836               	movf	TM1650_setDigit@digit,w
 11475  0B41  3E34               	addlw	52
 11476  0B42  318C  2458         	fcall	_writeData
 11477  0B44  0008               	return
 11478  0B45                     __end_of_TM1650_setDigit:	
 11479                           
 11480                           	psect	text12
 11481  0D30                     __ptext12:	
 11482 ;; *************** function _SYSTEM_Initialize *****************
 11483 ;; Defined at:
 11484 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;		None
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      void 
 11491 ;; Registers used:
 11492 ;;		wreg, status,2, status,0, pclath, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11502 ;;Total ram usage:        0 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    6
 11505 ;; This function calls:
 11506 ;;		_ADCC_Initialize
 11507 ;;		_EUSART1_Initialize
 11508 ;;		_I2C1_Initialize
 11509 ;;		_OSCILLATOR_Initialize
 11510 ;;		_PIN_MANAGER_Initialize
 11511 ;;		_PMD_Initialize
 11512 ;;		_PWM1_Initialize
 11513 ;;		_PWM2_Initialize
 11514 ;;		_PWM3_Initialize
 11515 ;;		_PWM4_Initialize
 11516 ;;		_TMR0_Initialize
 11517 ;;		_TMR2_Initialize
 11518 ;; This function is called by:
 11519 ;;		_main
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           
 11524                           ;psect for function _SYSTEM_Initialize
 11525  0D30                     _SYSTEM_Initialize:	
 11526                           
 11527                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11528                           
 11529                           ;incstack = 0
 11530                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11531  0D30  318A  2277  318D   	fcall	_PMD_Initialize
 11532                           
 11533                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11534  0D33  318F  2715  318D   	fcall	_PIN_MANAGER_Initialize
 11535                           
 11536                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11537  0D36  318A  226E  318D   	fcall	_OSCILLATOR_Initialize
 11538                           
 11539                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11540  0D39  318C  243C  318D   	fcall	_I2C1_Initialize
 11541                           
 11542                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11543  0D3C  318A  2296  318D   	fcall	_PWM1_Initialize
 11544                           
 11545                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11546  0D3F  318A  22A1  318D   	fcall	_PWM2_Initialize
 11547                           
 11548                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11549  0D42  318D  2578  318D   	fcall	_ADCC_Initialize
 11550                           
 11551                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11552  0D45  318A  22B7  318D   	fcall	_PWM4_Initialize
 11553                           
 11554                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11555  0D48  318A  22AC  318D   	fcall	_PWM3_Initialize
 11556                           
 11557                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11558  0D4B  318A  22F4  318D   	fcall	_TMR2_Initialize
 11559                           
 11560                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11561  0D4E  318B  2359  318D   	fcall	_TMR0_Initialize
 11562                           
 11563                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11564  0D51  318E  26E0         	fcall	_EUSART1_Initialize
 11565  0D53  0008               	return
 11566  0D54                     __end_of_SYSTEM_Initialize:	
 11567                           
 11568                           	psect	text13
 11569  0AF4                     __ptext13:	
 11570 ;; *************** function _TMR2_Initialize *****************
 11571 ;; Defined at:
 11572 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;		None
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;		None
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1    wreg      void 
 11579 ;; Registers used:
 11580 ;;		wreg, status,2
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11590 ;;Total ram usage:        0 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:    4
 11593 ;; This function calls:
 11594 ;;		Nothing
 11595 ;; This function is called by:
 11596 ;;		_SYSTEM_Initialize
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           
 11601                           ;psect for function _TMR2_Initialize
 11602  0AF4                     _TMR2_Initialize:	
 11603                           
 11604                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11605                           
 11606                           ;incstack = 0
 11607                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11608  0AF4  3001               	movlw	1
 11609  0AF5  0145               	movlb	5	; select bank5
 11610  0AF6  0090               	movwf	16	;volatile
 11611                           
 11612                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11613  0AF7  018F               	clrf	15	;volatile
 11614                           
 11615                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11616  0AF8  0191               	clrf	17	;volatile
 11617                           
 11618                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11619  0AF9  30FF               	movlw	255
 11620  0AFA  008D               	movwf	13	;volatile
 11621                           
 11622                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11623  0AFB  018C               	clrf	12	;volatile
 11624                           
 11625                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11626  0AFC  014E               	movlb	14	; select bank14
 11627  0AFD  1090               	bcf	16,1	;volatile
 11628                           
 11629                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
 11630  0AFE  30D0               	movlw	208
 11631  0AFF  0145               	movlb	5	; select bank5
 11632  0B00  008E               	movwf	14	;volatile
 11633  0B01  0008               	return
 11634  0B02                     __end_of_TMR2_Initialize:	
 11635                           
 11636                           	psect	text14
 11637  0B59                     __ptext14:	
 11638 ;; *************** function _TMR0_Initialize *****************
 11639 ;; Defined at:
 11640 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;		None
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;		None
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		wreg, status,2, status,0, pclath, cstack
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11658 ;;Total ram usage:        0 bytes
 11659 ;; Hardware stack levels used:    1
 11660 ;; Hardware stack levels required when called:    5
 11661 ;; This function calls:
 11662 ;;		_TMR0_SetInterruptHandler
 11663 ;; This function is called by:
 11664 ;;		_SYSTEM_Initialize
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           
 11669                           ;psect for function _TMR0_Initialize
 11670  0B59                     _TMR0_Initialize:	
 11671                           
 11672                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11673                           
 11674                           ;incstack = 0
 11675                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11676  0B59  3045               	movlw	69
 11677  0B5A  014B               	movlb	11	; select bank11
 11678  0B5B  009F               	movwf	31	;volatile
 11679                           
 11680                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11681  0B5C  30F9               	movlw	249
 11682  0B5D  009D               	movwf	29	;volatile
 11683                           
 11684                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11685  0B5E  019C               	clrf	28	;volatile
 11686                           
 11687                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11688  0B5F  014E               	movlb	14	; select bank14
 11689  0B60  128C               	bcf	12,5	;volatile
 11690                           
 11691                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11692  0B61  1696               	bsf	22,5	;volatile
 11693                           
 11694                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11695  0B62  30FF               	movlw	low _TMR0_DefaultInterruptHandler
 11696  0B63  0140               	movlb	0	; select bank0
 11697  0B64  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11698  0B65  3007               	movlw	high _TMR0_DefaultInterruptHandler
 11699  0B66  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11700  0B67  318A  2238         	fcall	_TMR0_SetInterruptHandler
 11701                           
 11702                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 11703  0B69  3080               	movlw	128
 11704  0B6A  014B               	movlb	11	; select bank11
 11705  0B6B  009E               	movwf	30	;volatile
 11706  0B6C  0008               	return
 11707  0B6D                     __end_of_TMR0_Initialize:	
 11708                           
 11709                           	psect	text15
 11710  0AB7                     __ptext15:	
 11711 ;; *************** function _PWM4_Initialize *****************
 11712 ;; Defined at:
 11713 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;		None
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;		None
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      void 
 11720 ;; Registers used:
 11721 ;;		wreg, status,2, status,0
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11731 ;;Total ram usage:        0 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    4
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_SYSTEM_Initialize
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           
 11742                           ;psect for function _PWM4_Initialize
 11743  0AB7                     _PWM4_Initialize:	
 11744                           
 11745                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 11746                           
 11747                           ;incstack = 0
 11748                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 11749  0AB7  308C               	movlw	140
 11750  0AB8  0146               	movlb	6	; select bank6
 11751  0AB9  009A               	movwf	26	;volatile
 11752                           
 11753                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 11754  0ABA  0199               	clrf	25	;volatile
 11755                           
 11756                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 11757  0ABB  0198               	clrf	24	;volatile
 11758                           
 11759                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 11760  0ABC  0144               	movlb	4	; select bank4
 11761  0ABD  081E               	movf	30,w	;volatile
 11762  0ABE  393F               	andlw	-193
 11763  0ABF  3840               	iorlw	64
 11764  0AC0  009E               	movwf	30	;volatile
 11765  0AC1  0008               	return
 11766  0AC2                     __end_of_PWM4_Initialize:	
 11767                           
 11768                           	psect	text16
 11769  0AAC                     __ptext16:	
 11770 ;; *************** function _PWM3_Initialize *****************
 11771 ;; Defined at:
 11772 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;		None
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;		None
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  1    wreg      void 
 11779 ;; Registers used:
 11780 ;;		wreg, status,2, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11790 ;;Total ram usage:        0 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    4
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_SYSTEM_Initialize
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           
 11801                           ;psect for function _PWM3_Initialize
 11802  0AAC                     _PWM3_Initialize:	
 11803                           
 11804                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 11805                           
 11806                           ;incstack = 0
 11807                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 11808  0AAC  308C               	movlw	140
 11809  0AAD  0146               	movlb	6	; select bank6
 11810  0AAE  0096               	movwf	22	;volatile
 11811                           
 11812                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 11813  0AAF  0195               	clrf	21	;volatile
 11814                           
 11815                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 11816  0AB0  0194               	clrf	20	;volatile
 11817                           
 11818                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 11819  0AB1  0144               	movlb	4	; select bank4
 11820  0AB2  081E               	movf	30,w	;volatile
 11821  0AB3  39CF               	andlw	-49
 11822  0AB4  3810               	iorlw	16
 11823  0AB5  009E               	movwf	30	;volatile
 11824  0AB6  0008               	return
 11825  0AB7                     __end_of_PWM3_Initialize:	
 11826                           
 11827                           	psect	text17
 11828  0AA1                     __ptext17:	
 11829 ;; *************** function _PWM2_Initialize *****************
 11830 ;; Defined at:
 11831 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;		None
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11849 ;;Total ram usage:        0 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:    4
 11852 ;; This function calls:
 11853 ;;		Nothing
 11854 ;; This function is called by:
 11855 ;;		_SYSTEM_Initialize
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           
 11860                           ;psect for function _PWM2_Initialize
 11861  0AA1                     _PWM2_Initialize:	
 11862                           
 11863                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 11864                           
 11865                           ;incstack = 0
 11866                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 11867  0AA1  308C               	movlw	140
 11868  0AA2  0146               	movlb	6	; select bank6
 11869  0AA3  0092               	movwf	18	;volatile
 11870                           
 11871                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 11872  0AA4  0191               	clrf	17	;volatile
 11873                           
 11874                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 11875  0AA5  0190               	clrf	16	;volatile
 11876                           
 11877                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 11878  0AA6  0144               	movlb	4	; select bank4
 11879  0AA7  081E               	movf	30,w	;volatile
 11880  0AA8  39F3               	andlw	-13
 11881  0AA9  3804               	iorlw	4
 11882  0AAA  009E               	movwf	30	;volatile
 11883  0AAB  0008               	return
 11884  0AAC                     __end_of_PWM2_Initialize:	
 11885                           
 11886                           	psect	text18
 11887  0A96                     __ptext18:	
 11888 ;; *************** function _PWM1_Initialize *****************
 11889 ;; Defined at:
 11890 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;		None
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;		None
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11908 ;;Total ram usage:        0 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:    4
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_SYSTEM_Initialize
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           
 11919                           ;psect for function _PWM1_Initialize
 11920  0A96                     _PWM1_Initialize:	
 11921                           
 11922                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 11923                           
 11924                           ;incstack = 0
 11925                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 11926  0A96  308C               	movlw	140
 11927  0A97  0146               	movlb	6	; select bank6
 11928  0A98  008E               	movwf	14	;volatile
 11929                           
 11930                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 11931  0A99  018D               	clrf	13	;volatile
 11932                           
 11933                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 11934  0A9A  018C               	clrf	12	;volatile
 11935                           
 11936                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 11937  0A9B  0144               	movlb	4	; select bank4
 11938  0A9C  081E               	movf	30,w	;volatile
 11939  0A9D  39FC               	andlw	-4
 11940  0A9E  3801               	iorlw	1
 11941  0A9F  009E               	movwf	30	;volatile
 11942  0AA0  0008               	return
 11943  0AA1                     __end_of_PWM1_Initialize:	
 11944                           
 11945                           	psect	text19
 11946  0A77                     __ptext19:	
 11947 ;; *************** function _PMD_Initialize *****************
 11948 ;; Defined at:
 11949 ;;		line 80 in file "mcc_generated_files/mcc.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;		None
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;		None
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		status,2
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11967 ;;Total ram usage:        0 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    4
 11970 ;; This function calls:
 11971 ;;		Nothing
 11972 ;; This function is called by:
 11973 ;;		_SYSTEM_Initialize
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           
 11978                           ;psect for function _PMD_Initialize
 11979  0A77                     _PMD_Initialize:	
 11980                           
 11981                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 11982                           
 11983                           ;incstack = 0
 11984                           ; Regs used in _PMD_Initialize: [status,2]
 11985  0A77  014F               	movlb	15	; select bank15
 11986  0A78  0196               	clrf	22	;volatile
 11987                           
 11988                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 11989  0A79  0197               	clrf	23	;volatile
 11990                           
 11991                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 11992  0A7A  0198               	clrf	24	;volatile
 11993                           
 11994                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 11995  0A7B  0199               	clrf	25	;volatile
 11996                           
 11997                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 11998  0A7C  019A               	clrf	26	;volatile
 11999                           
 12000                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12001  0A7D  019B               	clrf	27	;volatile
 12002                           
 12003                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12004  0A7E  019C               	clrf	28	;volatile
 12005                           
 12006                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12007  0A7F  019D               	clrf	29	;volatile
 12008  0A80  0008               	return
 12009  0A81                     __end_of_PMD_Initialize:	
 12010                           
 12011                           	psect	text20
 12012  0F15                     __ptext20:	
 12013 ;; *************** function _PIN_MANAGER_Initialize *****************
 12014 ;; Defined at:
 12015 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;Total ram usage:        0 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    4
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_SYSTEM_Initialize
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           
 12044                           ;psect for function _PIN_MANAGER_Initialize
 12045  0F15                     _PIN_MANAGER_Initialize:	
 12046                           
 12047                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12048                           
 12049                           ;incstack = 0
 12050                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12051  0F15  0140               	movlb	0	; select bank0
 12052  0F16  0198               	clrf	24	;volatile
 12053                           
 12054                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12055  0F17  0199               	clrf	25	;volatile
 12056                           
 12057                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12058  0F18  019A               	clrf	26	;volatile
 12059                           
 12060                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12061  0F19  303F               	movlw	63
 12062  0F1A  0092               	movwf	18	;volatile
 12063                           
 12064                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12065  0F1B  30F0               	movlw	240
 12066  0F1C  0093               	movwf	19	;volatile
 12067                           
 12068                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12069  0F1D  3006               	movlw	6
 12070  0F1E  0094               	movwf	20	;volatile
 12071                           
 12072                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12073  0F1F  30FF               	movlw	255
 12074  0F20  017E               	movlb	62	; select bank62
 12075  0F21  00CE               	movwf	78	;volatile
 12076                           
 12077                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12078  0F22  30E0               	movlw	224
 12079  0F23  00C3               	movwf	67	;volatile
 12080                           
 12081                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12082  0F24  3007               	movlw	7
 12083  0F25  00B8               	movwf	56	;volatile
 12084                           
 12085                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12086  0F26  01C4               	clrf	68	;volatile
 12087                           
 12088                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12089  0F27  01B9               	clrf	57	;volatile
 12090                           
 12091                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12092  0F28  01CF               	clrf	79	;volatile
 12093                           
 12094                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12095  0F29  01BA               	clrf	58	;volatile
 12096                           
 12097                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12098  0F2A  01C5               	clrf	69	;volatile
 12099                           
 12100                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12101  0F2B  01D0               	clrf	80	;volatile
 12102                           
 12103                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12104  0F2C  3037               	movlw	55
 12105  0F2D  00BB               	movwf	59	;volatile
 12106                           
 12107                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12108  0F2E  30F0               	movlw	240
 12109  0F2F  00C6               	movwf	70	;volatile
 12110                           
 12111                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12112  0F30  30FF               	movlw	255
 12113  0F31  00D1               	movwf	81	;volatile
 12114                           
 12115                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12116  0F32  3005               	movlw	5
 12117  0F33  017D               	movlb	61	; select bank61
 12118  0F34  00C5               	movwf	69	;volatile
 12119                           
 12120                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12121  0F35  3014               	movlw	20
 12122  0F36  017E               	movlb	62	; select bank62
 12123  0F37  0094               	movwf	20	;volatile
 12124                           
 12125                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12126  0F38  300B               	movlw	11
 12127  0F39  00A3               	movwf	35	;volatile
 12128                           
 12129                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12130  0F3A  300C               	movlw	12
 12131  0F3B  00A4               	movwf	36	;volatile
 12132                           
 12133                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12134  0F3C  3013               	movlw	19
 12135  0F3D  0095               	movwf	21	;volatile
 12136                           
 12137                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12138  0F3E  3009               	movlw	9
 12139  0F3F  00A5               	movwf	37	;volatile
 12140                           
 12141                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12142  0F40  300A               	movlw	10
 12143  0F41  00A6               	movwf	38	;volatile
 12144                           
 12145                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12146  0F42  3009               	movlw	9
 12147  0F43  00A7               	movwf	39	;volatile
 12148                           
 12149                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12150  0F44  3004               	movlw	4
 12151  0F45  017D               	movlb	61	; select bank61
 12152  0F46  00C6               	movwf	70	;volatile
 12153                           
 12154                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12155  0F47  300C               	movlw	12
 12156  0F48  00CB               	movwf	75	;volatile
 12157  0F49  0008               	return
 12158  0F4A                     __end_of_PIN_MANAGER_Initialize:	
 12159                           
 12160                           	psect	text21
 12161  0A6E                     __ptext21:	
 12162 ;; *************** function _OSCILLATOR_Initialize *****************
 12163 ;; Defined at:
 12164 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;		None
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;		None
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  1    wreg      void 
 12171 ;; Registers used:
 12172 ;;		wreg, status,2
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12182 ;;Total ram usage:        0 bytes
 12183 ;; Hardware stack levels used:    1
 12184 ;; Hardware stack levels required when called:    4
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		_SYSTEM_Initialize
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           
 12193                           ;psect for function _OSCILLATOR_Initialize
 12194  0A6E                     _OSCILLATOR_Initialize:	
 12195                           
 12196                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12197                           
 12198                           ;incstack = 0
 12199                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12200  0A6E  3060               	movlw	96
 12201  0A6F  0151               	movlb	17	; select bank17
 12202  0A70  008D               	movwf	13	;volatile
 12203                           
 12204                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12205  0A71  018F               	clrf	15	;volatile
 12206                           
 12207                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12208  0A72  0191               	clrf	17	;volatile
 12209                           
 12210                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12211  0A73  3006               	movlw	6
 12212  0A74  0093               	movwf	19	;volatile
 12213                           
 12214                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12215  0A75  0192               	clrf	18	;volatile
 12216  0A76  0008               	return
 12217  0A77                     __end_of_OSCILLATOR_Initialize:	
 12218                           
 12219                           	psect	text22
 12220  0C3C                     __ptext22:	
 12221 ;; *************** function _I2C1_Initialize *****************
 12222 ;; Defined at:
 12223 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;		None
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;		None
 12228 ;; Return value:  Size  Location     Type
 12229 ;;                  1    wreg      void 
 12230 ;; Registers used:
 12231 ;;		wreg, status,2
 12232 ;; Tracked objects:
 12233 ;;		On entry : 0/0
 12234 ;;		On exit  : 0/0
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12240 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12241 ;;Total ram usage:        1 bytes
 12242 ;; Hardware stack levels used:    1
 12243 ;; Hardware stack levels required when called:    4
 12244 ;; This function calls:
 12245 ;;		Nothing
 12246 ;; This function is called by:
 12247 ;;		_SYSTEM_Initialize
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           
 12252                           ;psect for function _I2C1_Initialize
 12253  0C3C                     _I2C1_Initialize:	
 12254                           
 12255                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12256                           
 12257                           ;incstack = 0
 12258                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12259  0C3C  30D1               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12260  0C3D  0140               	movlb	0	; select bank0
 12261  0C3E  00A0               	movwf	??_I2C1_Initialize
 12262  0C3F  0820               	movf	??_I2C1_Initialize,w
 12263  0C40  0141               	movlb	1	; select bank1
 12264  0C41  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12265                           
 12266                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12267  0C42  30D1               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12268  0C43  0140               	movlb	0	; select bank0
 12269  0C44  00A0               	movwf	??_I2C1_Initialize
 12270  0C45  0820               	movf	??_I2C1_Initialize,w
 12271  0C46  0141               	movlb	1	; select bank1
 12272  0C47  00A0               	movwf	_i2c1_object^(0+128)
 12273                           
 12274                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12275  0C48  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12276                           
 12277                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12278  0C49  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12279                           
 12280                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12281  0C4A  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12282                           
 12283                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12284  0C4B  0143               	movlb	3	; select bank3
 12285  0C4C  018F               	clrf	15	;volatile
 12286                           
 12287                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12288  0C4D  3028               	movlw	40
 12289  0C4E  0090               	movwf	16	;volatile
 12290                           
 12291                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12292  0C4F  0192               	clrf	18	;volatile
 12293                           
 12294                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12295  0C50  304F               	movlw	79
 12296  0C51  008D               	movwf	13	;volatile
 12297                           
 12298                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12299  0C52  014E               	movlb	14	; select bank14
 12300  0C53  100F               	bcf	15,0	;volatile
 12301                           
 12302                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12303  0C54  108F               	bcf	15,1	;volatile
 12304                           
 12305                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12306  0C55  1419               	bsf	25,0	;volatile
 12307                           
 12308                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12309  0C56  1499               	bsf	25,1	;volatile
 12310  0C57  0008               	return
 12311  0C58                     __end_of_I2C1_Initialize:	
 12312                           
 12313                           	psect	text23
 12314  0EE0                     __ptext23:	
 12315 ;; *************** function _EUSART1_Initialize *****************
 12316 ;; Defined at:
 12317 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;		None
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0, pclath, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;Total ram usage:        0 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    5
 12338 ;; This function calls:
 12339 ;;		_EUSART1_SetErrorHandler
 12340 ;;		_EUSART1_SetFramingErrorHandler
 12341 ;;		_EUSART1_SetOverrunErrorHandler
 12342 ;;		_EUSART1_SetRxInterruptHandler
 12343 ;; This function is called by:
 12344 ;;		_SYSTEM_Initialize
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           
 12349                           ;psect for function _EUSART1_Initialize
 12350  0EE0                     _EUSART1_Initialize:	
 12351                           
 12352                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12353                           
 12354                           ;incstack = 0
 12355                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12356  0EE0  014E               	movlb	14	; select bank14
 12357  0EE1  1299               	bcf	25,5	;volatile
 12358                           
 12359                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12360  0EE2  30BF               	movlw	low _EUSART1_Receive_ISR
 12361  0EE3  0140               	movlb	0	; select bank0
 12362  0EE4  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12363  0EE5  3007               	movlw	high _EUSART1_Receive_ISR
 12364  0EE6  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12365  0EE7  318A  2241  318E   	fcall	_EUSART1_SetRxInterruptHandler
 12366                           
 12367                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12368  0EEA  3008               	movlw	8
 12369  0EEB  0142               	movlb	2	; select bank2
 12370  0EEC  009F               	movwf	31	;volatile
 12371                           
 12372                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12373  0EED  3090               	movlw	144
 12374  0EEE  009D               	movwf	29	;volatile
 12375                           
 12376                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12377  0EEF  3004               	movlw	4
 12378  0EF0  009E               	movwf	30	;volatile
 12379                           
 12380                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12381  0EF1  301F               	movlw	31
 12382  0EF2  009B               	movwf	27	;volatile
 12383                           
 12384                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12385  0EF3  019C               	clrf	28	;volatile
 12386                           
 12387                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12388  0EF4  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12389  0EF5  0140               	movlb	0	; select bank0
 12390  0EF6  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12391  0EF7  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12392  0EF8  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12393  0EF9  318A  225C  318E   	fcall	_EUSART1_SetFramingErrorHandler
 12394                           
 12395                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12396  0EFC  30FB               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12397  0EFD  0140               	movlb	0	; select bank0
 12398  0EFE  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12399  0EFF  3009               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12400  0F00  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12401  0F01  318A  2265  318E   	fcall	_EUSART1_SetOverrunErrorHandler
 12402                           
 12403                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12404  0F04  30F1               	movlw	low _EUSART1_DefaultErrorHandler
 12405  0F05  0140               	movlb	0	; select bank0
 12406  0F06  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12407  0F07  3009               	movlw	high _EUSART1_DefaultErrorHandler
 12408  0F08  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12409  0F09  318A  2253         	fcall	_EUSART1_SetErrorHandler
 12410                           
 12411                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12412  0F0B  0141               	movlb	1	; select bank1
 12413  0F0C  01CF               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12414                           
 12415                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12416  0F0D  0140               	movlb	0	; select bank0
 12417  0F0E  01EF               	clrf	_eusart1RxHead	;volatile
 12418                           
 12419                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12420  0F0F  01F4               	clrf	_eusart1RxTail	;volatile
 12421                           
 12422                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12423  0F10  0141               	movlb	1	; select bank1
 12424  0F11  01D0               	clrf	_eusart1RxCount^(0+128)	;volatile
 12425                           
 12426                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12427  0F12  014E               	movlb	14	; select bank14
 12428  0F13  1699               	bsf	25,5	;volatile
 12429  0F14  0008               	return
 12430  0F15                     __end_of_EUSART1_Initialize:	
 12431                           
 12432                           	psect	text24
 12433  0A65                     __ptext24:	
 12434 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12435 ;; Defined at:
 12436 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12439 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12440 ;; Auto vars:     Size  Location     Type
 12441 ;;		None
 12442 ;; Return value:  Size  Location     Type
 12443 ;;                  1    wreg      void 
 12444 ;; Registers used:
 12445 ;;		wreg
 12446 ;; Tracked objects:
 12447 ;;		On entry : 0/0
 12448 ;;		On exit  : 0/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12455 ;;Total ram usage:        2 bytes
 12456 ;; Hardware stack levels used:    1
 12457 ;; Hardware stack levels required when called:    4
 12458 ;; This function calls:
 12459 ;;		Nothing
 12460 ;; This function is called by:
 12461 ;;		_EUSART1_Initialize
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           
 12466                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12467  0A65                     _EUSART1_SetOverrunErrorHandler:	
 12468                           
 12469                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12470                           
 12471                           ;incstack = 0
 12472                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12473  0A65  0140               	movlb	0	; select bank0
 12474  0A66  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12475  0A67  0142               	movlb	2	; select bank2
 12476  0A68  00DB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12477  0A69  0140               	movlb	0	; select bank0
 12478  0A6A  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12479  0A6B  0142               	movlb	2	; select bank2
 12480  0A6C  00DA               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12481  0A6D  0008               	return
 12482  0A6E                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12483                           
 12484                           	psect	text25
 12485  0A5C                     __ptext25:	
 12486 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12487 ;; Defined at:
 12488 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12491 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12492 ;; Auto vars:     Size  Location     Type
 12493 ;;		None
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  1    wreg      void 
 12496 ;; Registers used:
 12497 ;;		wreg
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12507 ;;Total ram usage:        2 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:    4
 12510 ;; This function calls:
 12511 ;;		Nothing
 12512 ;; This function is called by:
 12513 ;;		_EUSART1_Initialize
 12514 ;; This function uses a non-reentrant model
 12515 ;;
 12516                           
 12517                           
 12518                           ;psect for function _EUSART1_SetFramingErrorHandler
 12519  0A5C                     _EUSART1_SetFramingErrorHandler:	
 12520                           
 12521                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12522                           
 12523                           ;incstack = 0
 12524                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12525  0A5C  0140               	movlb	0	; select bank0
 12526  0A5D  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12527  0A5E  0142               	movlb	2	; select bank2
 12528  0A5F  00DD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12529  0A60  0140               	movlb	0	; select bank0
 12530  0A61  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12531  0A62  0142               	movlb	2	; select bank2
 12532  0A63  00DC               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12533  0A64  0008               	return
 12534  0A65                     __end_of_EUSART1_SetFramingErrorHandler:	
 12535                           
 12536                           	psect	text26
 12537  0A53                     __ptext26:	
 12538 ;; *************** function _EUSART1_SetErrorHandler *****************
 12539 ;; Defined at:
 12540 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12543 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1    wreg      void 
 12548 ;; Registers used:
 12549 ;;		wreg
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12559 ;;Total ram usage:        2 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    4
 12562 ;; This function calls:
 12563 ;;		Nothing
 12564 ;; This function is called by:
 12565 ;;		_EUSART1_Initialize
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           
 12570                           ;psect for function _EUSART1_SetErrorHandler
 12571  0A53                     _EUSART1_SetErrorHandler:	
 12572                           
 12573                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12574                           
 12575                           ;incstack = 0
 12576                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12577  0A53  0140               	movlb	0	; select bank0
 12578  0A54  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12579  0A55  0142               	movlb	2	; select bank2
 12580  0A56  00D9               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12581  0A57  0140               	movlb	0	; select bank0
 12582  0A58  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12583  0A59  0142               	movlb	2	; select bank2
 12584  0A5A  00D8               	movwf	_EUSART1_ErrorHandler^(0+256)
 12585  0A5B  0008               	return
 12586  0A5C                     __end_of_EUSART1_SetErrorHandler:	
 12587                           
 12588                           	psect	text27
 12589  0D78                     __ptext27:	
 12590 ;; *************** function _ADCC_Initialize *****************
 12591 ;; Defined at:
 12592 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;		None
 12595 ;; Auto vars:     Size  Location     Type
 12596 ;;		None
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  1    wreg      void 
 12599 ;; Registers used:
 12600 ;;		wreg, status,2, status,0, pclath, cstack
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12610 ;;Total ram usage:        0 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:    5
 12613 ;; This function calls:
 12614 ;;		_ADCC_SetADTIInterruptHandler
 12615 ;; This function is called by:
 12616 ;;		_SYSTEM_Initialize
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           
 12621                           ;psect for function _ADCC_Initialize
 12622  0D78                     _ADCC_Initialize:	
 12623                           
 12624                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12625                           
 12626                           ;incstack = 0
 12627                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12628  0D78  0141               	movlb	1	; select bank1
 12629  0D79  018C               	clrf	12	;volatile
 12630                           
 12631                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12632  0D7A  018D               	clrf	13	;volatile
 12633                           
 12634                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12635  0D7B  018E               	clrf	14	;volatile
 12636                           
 12637                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12638  0D7C  018F               	clrf	15	;volatile
 12639                           
 12640                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12641  0D7D  0192               	clrf	18	;volatile
 12642                           
 12643                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12644  0D7E  0193               	clrf	19	;volatile
 12645                           
 12646                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12647  0D7F  0198               	clrf	24	;volatile
 12648                           
 12649                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12650  0D80  019A               	clrf	26	;volatile
 12651                           
 12652                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12653  0D81  019F               	clrf	31	;volatile
 12654                           
 12655                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12656  0D82  0142               	movlb	2	; select bank2
 12657  0D83  018C               	clrf	12	;volatile
 12658                           
 12659                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12660  0D84  018D               	clrf	13	;volatile
 12661                           
 12662                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12663  0D85  018E               	clrf	14	;volatile
 12664                           
 12665                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12666  0D86  018F               	clrf	15	;volatile
 12667                           
 12668                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12669  0D87  0190               	clrf	16	;volatile
 12670                           
 12671                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12672  0D88  0192               	clrf	18	;volatile
 12673                           
 12674                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12675  0D89  3054               	movlw	84
 12676  0D8A  0093               	movwf	19	;volatile
 12677                           
 12678                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12679  0D8B  3056               	movlw	86
 12680  0D8C  0094               	movwf	20	;volatile
 12681                           
 12682                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12683  0D8D  0195               	clrf	21	;volatile
 12684                           
 12685                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12686  0D8E  0196               	clrf	22	;volatile
 12687                           
 12688                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12689  0D8F  0197               	clrf	23	;volatile
 12690                           
 12691                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12692  0D90  0198               	clrf	24	;volatile
 12693                           
 12694                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12695  0D91  30D4               	movlw	212
 12696  0D92  0091               	movwf	17	;volatile
 12697                           
 12698                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12699  0D93  014E               	movlb	14	; select bank14
 12700  0D94  108D               	bcf	13,1	;volatile
 12701                           
 12702                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12703  0D95  1497               	bsf	23,1	;volatile
 12704                           
 12705                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12706  0D96  3002               	movlw	low _ADCC_DefaultInterruptHandler
 12707  0D97  0140               	movlb	0	; select bank0
 12708  0D98  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 12709  0D99  3000               	movlw	high _ADCC_DefaultInterruptHandler
 12710  0D9A  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 12711  0D9B  318A  2214         	fcall	_ADCC_SetADTIInterruptHandler
 12712  0D9D  0008               	return
 12713  0D9E                     __end_of_ADCC_Initialize:	
 12714                           
 12715                           	psect	text28
 12716  01C5                     __ptext28:	
 12717 ;; *************** function _LED_task *****************
 12718 ;; Defined at:
 12719 ;;		line 24 in file "led.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;		None
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1    wreg      void 
 12726 ;; Registers used:
 12727 ;;		wreg, status,2, status,0, pclath, cstack
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12736 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12737 ;;Total ram usage:        2 bytes
 12738 ;; Hardware stack levels used:    1
 12739 ;; Hardware stack levels required when called:    5
 12740 ;; This function calls:
 12741 ;;		_BEAT_detected
 12742 ;;		_CLOCK_getTime
 12743 ;;		_PWM1_LoadDutyValue
 12744 ;;		_PWM2_LoadDutyValue
 12745 ;;		_PWM3_LoadDutyValue
 12746 ;;		_PWM4_LoadDutyValue
 12747 ;; This function is called by:
 12748 ;;		_main
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           
 12753                           ;psect for function _LED_task
 12754  01C5                     _LED_task:	
 12755                           
 12756                           ;led.c: 26:     if(CLOCK_getTime() - lastLedActiveTime < 100){
 12757                           
 12758                           ;incstack = 0
 12759                           ; Regs used in _LED_task: [wreg+status,2+status,0+pclath+cstack]
 12760  01C5  318A  222F  3181   	fcall	_CLOCK_getTime
 12761  01C8  0141               	movlb	1	; select bank1
 12762  01C9  082D               	movf	_lastLedActiveTime^(0+128),w
 12763  01CA  0140               	movlb	0	; select bank0
 12764  01CB  0220               	subwf	?_CLOCK_getTime,w
 12765  01CC  00A2               	movwf	??_LED_task
 12766  01CD  0141               	movlb	1	; select bank1
 12767  01CE  082E               	movf	(_lastLedActiveTime+1)^(0+128),w
 12768  01CF  0140               	movlb	0	; select bank0
 12769  01D0  3B21               	subwfb	?_CLOCK_getTime+1,w
 12770  01D1  00A3               	movwf	??_LED_task+1
 12771  01D2  3000               	movlw	0
 12772  01D3  0223               	subwf	??_LED_task+1,w
 12773  01D4  3064               	movlw	100
 12774  01D5  1903               	skipnz
 12775  01D6  0222               	subwf	??_LED_task,w
 12776  01D7  1C03               	btfss	3,0
 12777  01D8  0008               	return
 12778                           
 12779                           ;led.c: 30:     lastLedActiveTime = CLOCK_getTime();
 12780  01D9  318A  222F  3181   	fcall	_CLOCK_getTime
 12781  01DC  0140               	movlb	0	; select bank0
 12782  01DD  0821               	movf	?_CLOCK_getTime+1,w
 12783  01DE  0141               	movlb	1	; select bank1
 12784  01DF  00AE               	movwf	(_lastLedActiveTime+1)^(0+128)
 12785  01E0  0140               	movlb	0	; select bank0
 12786  01E1  0820               	movf	?_CLOCK_getTime,w
 12787  01E2  0141               	movlb	1	; select bank1
 12788  01E3  00AD               	movwf	_lastLedActiveTime^(0+128)
 12789                           
 12790                           ;led.c: 32:     if(!BEAT_detected()){
 12791  01E4  318A  224A  3181   	fcall	_BEAT_detected
 12792  01E7  3A00               	xorlw	0
 12793  01E8  1D03               	skipz
 12794  01E9  2A06               	goto	l5256
 12795                           
 12796                           ;led.c: 33:         PWM1_LoadDutyValue(0);
 12797  01EA  3000               	movlw	0
 12798  01EB  0140               	movlb	0	; select bank0
 12799  01EC  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12800  01ED  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12801  01EE  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 12802                           
 12803                           ;led.c: 34:         PWM2_LoadDutyValue(0);
 12804  01F1  3000               	movlw	0
 12805  01F2  0140               	movlb	0	; select bank0
 12806  01F3  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12807  01F4  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12808  01F5  318C  2493  3181   	fcall	_PWM2_LoadDutyValue
 12809                           
 12810                           ;led.c: 35:         PWM3_LoadDutyValue(0);
 12811  01F8  3000               	movlw	0
 12812  01F9  0140               	movlb	0	; select bank0
 12813  01FA  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12814  01FB  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12815  01FC  318C  24B1  3181   	fcall	_PWM3_LoadDutyValue
 12816                           
 12817                           ;led.c: 36:         PWM4_LoadDutyValue(0);
 12818  01FF  3000               	movlw	0
 12819  0200  0140               	movlb	0	; select bank0
 12820  0201  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12821  0202  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 12822  0203  318C  24CF         	fcall	_PWM4_LoadDutyValue
 12823                           
 12824                           ;led.c: 37:     } else if (currentState == 1){
 12825  0205  0008               	return
 12826  0206                     l5256:	
 12827  0206  0370               	decf	_currentState,w
 12828  0207  0471               	iorwf	_currentState+1,w
 12829  0208  1D03               	btfss	3,2
 12830  0209  2A7C               	goto	l5262
 12831                           
 12832                           ;led.c: 38:         PWM1_LoadDutyValue(120);
 12833  020A  3078               	movlw	120
 12834  020B  0140               	movlb	0	; select bank0
 12835  020C  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12836  020D  3000               	movlw	0
 12837  020E  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12838  020F  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 12839                           
 12840                           ;led.c: 39:         PWM2_LoadDutyValue(0);
 12841  0212  3000               	movlw	0
 12842  0213  0140               	movlb	0	; select bank0
 12843  0214  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12844  0215  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12845  0216  318C  2493  3181   	fcall	_PWM2_LoadDutyValue
 12846                           
 12847                           ;led.c: 40:         PWM3_LoadDutyValue(0);
 12848  0219  3000               	movlw	0
 12849  021A  0140               	movlb	0	; select bank0
 12850  021B  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12851  021C  2A45               	goto	L10
 12852  021D                     l5264:	
 12853                           ;led.c: 41:         PWM4_LoadDutyValue(0);
 12854                           
 12855                           
 12856                           ;led.c: 44:         PWM1_LoadDutyValue(0);
 12857  021D  3000               	movlw	0
 12858  021E  0140               	movlb	0	; select bank0
 12859  021F  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12860  0220  2A35               	goto	L7
 12861  0221                     l5270:	
 12862                           ;led.c: 47:         PWM4_LoadDutyValue(0);
 12863                           
 12864                           ;led.c: 46:         PWM3_LoadDutyValue(120);
 12865                           
 12866                           ;led.c: 45:         PWM2_LoadDutyValue(120);
 12867                           
 12868                           
 12869                           ;led.c: 50:         PWM1_LoadDutyValue(120);
 12870  0221  3078               	movlw	120
 12871  0222  0140               	movlb	0	; select bank0
 12872  0223  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12873  0224  3000               	movlw	0
 12874  0225  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12875  0226  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 12876                           
 12877                           ;led.c: 51:         PWM2_LoadDutyValue(0);
 12878  0229  3000               	movlw	0
 12879  022A  0140               	movlb	0	; select bank0
 12880  022B  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12881  022C  2A3D               	goto	L8
 12882  022D                     l5276:	
 12883                           ;led.c: 53:         PWM4_LoadDutyValue(0);
 12884                           
 12885                           ;led.c: 52:         PWM3_LoadDutyValue(120);
 12886                           
 12887                           
 12888                           ;led.c: 56:         PWM1_LoadDutyValue(0);
 12889  022D  3000               	movlw	0
 12890  022E  0140               	movlb	0	; select bank0
 12891  022F  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12892  0230  2A51               	goto	L9
 12893  0231                     l5282:	
 12894                           ;led.c: 59:         PWM4_LoadDutyValue(120);
 12895                           
 12896                           ;led.c: 58:         PWM3_LoadDutyValue(120);
 12897                           
 12898                           ;led.c: 57:         PWM2_LoadDutyValue(0);
 12899                           
 12900                           
 12901                           ;led.c: 62:         PWM1_LoadDutyValue(120);
 12902  0231  3078               	movlw	120
 12903  0232  0140               	movlb	0	; select bank0
 12904  0233  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12905  0234  3000               	movlw	0
 12906  0235                     L7:	
 12907  0235  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12908  0236  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 12909                           
 12910                           ;led.c: 63:         PWM2_LoadDutyValue(120);
 12911  0239  3078               	movlw	120
 12912  023A  0140               	movlb	0	; select bank0
 12913  023B  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12914  023C  3000               	movlw	0
 12915  023D                     L8:	
 12916  023D  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12917  023E  318C  2493  3181   	fcall	_PWM2_LoadDutyValue
 12918                           
 12919                           ;led.c: 64:         PWM3_LoadDutyValue(120);
 12920  0241  3078               	movlw	120
 12921  0242  0140               	movlb	0	; select bank0
 12922  0243  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12923  0244  3000               	movlw	0
 12924  0245                     L10:	
 12925  0245  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12926  0246  318C  24B1  3181   	fcall	_PWM3_LoadDutyValue
 12927                           
 12928                           ;led.c: 65:         PWM4_LoadDutyValue(0);
 12929  0249  3000               	movlw	0
 12930  024A  0140               	movlb	0	; select bank0
 12931  024B  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12932  024C  2A74               	goto	L1
 12933  024D                     l5288:	
 12934                           
 12935                           ;led.c: 68:         PWM1_LoadDutyValue(120);
 12936  024D  3078               	movlw	120
 12937  024E  0140               	movlb	0	; select bank0
 12938  024F  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12939  0250  3000               	movlw	0
 12940  0251                     L9:	
 12941  0251  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12942  0252  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 12943                           
 12944                           ;led.c: 69:         PWM2_LoadDutyValue(0);
 12945  0255  3000               	movlw	0
 12946  0256  0140               	movlb	0	; select bank0
 12947  0257  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12948  0258  2A64               	goto	L5
 12949  0259                     l5294:	
 12950                           ;led.c: 71:         PWM4_LoadDutyValue(120);
 12951                           
 12952                           ;led.c: 70:         PWM3_LoadDutyValue(120);
 12953                           
 12954                           
 12955                           ;led.c: 74:         PWM1_LoadDutyValue(0);
 12956  0259  3000               	movlw	0
 12957  025A  0140               	movlb	0	; select bank0
 12958  025B  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12959  025C  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12960  025D  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 12961                           
 12962                           ;led.c: 75:         PWM2_LoadDutyValue(120);
 12963  0260  3078               	movlw	120
 12964  0261  0140               	movlb	0	; select bank0
 12965  0262  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12966  0263  3000               	movlw	0
 12967  0264                     L5:	
 12968  0264  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12969  0265  318C  2493  3181   	fcall	_PWM2_LoadDutyValue
 12970                           
 12971                           ;led.c: 76:         PWM3_LoadDutyValue(120);
 12972  0268  3078               	movlw	120
 12973  0269  0140               	movlb	0	; select bank0
 12974  026A  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12975  026B  3000               	movlw	0
 12976  026C  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12977  026D  318C  24B1  3181   	fcall	_PWM3_LoadDutyValue
 12978                           
 12979                           ;led.c: 77:         PWM4_LoadDutyValue(120);
 12980  0270  3078               	movlw	120
 12981  0271  0140               	movlb	0	; select bank0
 12982  0272  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12983  0273  3000               	movlw	0
 12984  0274                     L1:	
 12985  0274  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 12986  0275  318C  24CF         	fcall	_PWM4_LoadDutyValue
 12987                           
 12988                           ;led.c: 42:         currentState++;
 12989  0277  3001               	movlw	1
 12990  0278  07F0               	addwf	_currentState,f
 12991  0279  3000               	movlw	0
 12992  027A  3DF1               	addwfc	_currentState+1,f
 12993                           
 12994                           ;led.c: 43:     } else if(currentState == 2){
 12995  027B  0008               	return
 12996  027C                     l5262:	
 12997  027C  3002               	movlw	2
 12998  027D  0670               	xorwf	_currentState,w
 12999  027E  0471               	iorwf	_currentState+1,w
 13000  027F  1903               	btfsc	3,2
 13001  0280  2A1D               	goto	l5264
 13002  0281  3003               	movlw	3
 13003  0282  0670               	xorwf	_currentState,w
 13004  0283  0471               	iorwf	_currentState+1,w
 13005  0284  1903               	btfsc	3,2
 13006  0285  2A21               	goto	l5270
 13007  0286  3004               	movlw	4
 13008  0287  0670               	xorwf	_currentState,w
 13009  0288  0471               	iorwf	_currentState+1,w
 13010  0289  1903               	btfsc	3,2
 13011  028A  2A2D               	goto	l5276
 13012  028B  3005               	movlw	5
 13013  028C  0670               	xorwf	_currentState,w
 13014  028D  0471               	iorwf	_currentState+1,w
 13015  028E  1903               	btfsc	3,2
 13016  028F  2A31               	goto	l5282
 13017  0290  3006               	movlw	6
 13018  0291  0670               	xorwf	_currentState,w
 13019  0292  0471               	iorwf	_currentState+1,w
 13020  0293  1903               	btfsc	3,2
 13021  0294  2A4D               	goto	l5288
 13022  0295  3008               	movlw	8
 13023  0296  0670               	xorwf	_currentState,w
 13024  0297  0471               	iorwf	_currentState+1,w
 13025  0298  1903               	btfsc	3,2
 13026  0299  2A59               	goto	l5294
 13027                           
 13028                           ;led.c: 80:         PWM1_LoadDutyValue(120);
 13029  029A  3078               	movlw	120
 13030  029B  0140               	movlb	0	; select bank0
 13031  029C  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13032  029D  3000               	movlw	0
 13033  029E  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13034  029F  318C  2475  3181   	fcall	_PWM1_LoadDutyValue
 13035                           
 13036                           ;led.c: 81:         PWM2_LoadDutyValue(120);
 13037  02A2  3078               	movlw	120
 13038  02A3  0140               	movlb	0	; select bank0
 13039  02A4  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13040  02A5  3000               	movlw	0
 13041  02A6  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13042  02A7  318C  2493  3181   	fcall	_PWM2_LoadDutyValue
 13043                           
 13044                           ;led.c: 82:         PWM3_LoadDutyValue(120);
 13045  02AA  3078               	movlw	120
 13046  02AB  0140               	movlb	0	; select bank0
 13047  02AC  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 13048  02AD  3000               	movlw	0
 13049  02AE  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13050  02AF  318C  24B1  3181   	fcall	_PWM3_LoadDutyValue
 13051                           
 13052                           ;led.c: 83:         PWM4_LoadDutyValue(120);
 13053  02B2  3078               	movlw	120
 13054  02B3  0140               	movlb	0	; select bank0
 13055  02B4  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 13056  02B5  3000               	movlw	0
 13057  02B6  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13058  02B7  318C  24CF         	fcall	_PWM4_LoadDutyValue
 13059                           
 13060                           ;led.c: 84:         currentState = 1;
 13061  02B9  3001               	movlw	1
 13062  02BA  00F0               	movwf	_currentState
 13063  02BB  3000               	movlw	0
 13064  02BC  00F1               	movwf	_currentState+1
 13065  02BD  0008               	return
 13066  02BE                     __end_of_LED_task:	
 13067                           
 13068                           	psect	text29
 13069  0CCF                     __ptext29:	
 13070 ;; *************** function _PWM4_LoadDutyValue *****************
 13071 ;; Defined at:
 13072 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;		None
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  1    wreg      void 
 13079 ;; Registers used:
 13080 ;;		wreg, status,2
 13081 ;; Tracked objects:
 13082 ;;		On entry : 0/0
 13083 ;;		On exit  : 0/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13086 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13089 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13090 ;;Total ram usage:        2 bytes
 13091 ;; Hardware stack levels used:    1
 13092 ;; Hardware stack levels required when called:    4
 13093 ;; This function calls:
 13094 ;;		Nothing
 13095 ;; This function is called by:
 13096 ;;		_LED_task
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100                           
 13101                           ;psect for function _PWM4_LoadDutyValue
 13102  0CCF                     _PWM4_LoadDutyValue:	
 13103                           
 13104                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 120){
 13105                           
 13106                           ;incstack = 0
 13107                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 13108  0CCF  3000               	movlw	0
 13109  0CD0  0140               	movlb	0	; select bank0
 13110  0CD1  0221               	subwf	PWM4_LoadDutyValue@dutyValue+1,w
 13111  0CD2  3079               	movlw	121
 13112  0CD3  1903               	skipnz
 13113  0CD4  0220               	subwf	PWM4_LoadDutyValue@dutyValue,w
 13114  0CD5  1803               	skipnc
 13115  0CD6  0008               	return
 13116                           
 13117                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 13118  0CD7  30FF               	movlw	255
 13119  0CD8  05A0               	andwf	PWM4_LoadDutyValue@dutyValue,f
 13120  0CD9  3003               	movlw	3
 13121  0CDA  05A1               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 13122                           
 13123                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 13124  0CDB  0146               	movlb	6	; select bank6
 13125  0CDC  1E1A               	btfss	26,4	;volatile
 13126  0CDD  2CE4               	goto	l4756
 13127                           
 13128                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 13129  0CDE  3006               	movlw	6
 13130  0CDF  0140               	movlb	0	; select bank0
 13131  0CE0                     u3215:	
 13132  0CE0  35A0               	lslf	PWM4_LoadDutyValue@dutyValue,f
 13133  0CE1  0DA1               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 13134  0CE2  0B89               	decfsz	9,f
 13135  0CE3  2CE0               	goto	u3215
 13136  0CE4                     l4756:	
 13137                           
 13138                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 13139  0CE4  0140               	movlb	0	; select bank0
 13140  0CE5  0821               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 13141  0CE6  0146               	movlb	6	; select bank6
 13142  0CE7  0099               	movwf	25	;volatile
 13143                           
 13144                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 13145  0CE8  0140               	movlb	0	; select bank0
 13146  0CE9  0820               	movf	PWM4_LoadDutyValue@dutyValue,w
 13147  0CEA  0146               	movlb	6	; select bank6
 13148  0CEB  0098               	movwf	24	;volatile
 13149                           
 13150                           ;mcc_generated_files/pwm4.c: 93:         }
 13151  0CEC  0008               	return
 13152  0CED                     __end_of_PWM4_LoadDutyValue:	
 13153                           
 13154                           	psect	text30
 13155  0CB1                     __ptext30:	
 13156 ;; *************** function _PWM3_LoadDutyValue *****************
 13157 ;; Defined at:
 13158 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 13159 ;; Parameters:    Size  Location     Type
 13160 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;		None
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  1    wreg      void 
 13165 ;; Registers used:
 13166 ;;		wreg, status,2
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13176 ;;Total ram usage:        2 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:    4
 13179 ;; This function calls:
 13180 ;;		Nothing
 13181 ;; This function is called by:
 13182 ;;		_LED_task
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           
 13187                           ;psect for function _PWM3_LoadDutyValue
 13188  0CB1                     _PWM3_LoadDutyValue:	
 13189                           
 13190                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 120){
 13191                           
 13192                           ;incstack = 0
 13193                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 13194  0CB1  3000               	movlw	0
 13195  0CB2  0140               	movlb	0	; select bank0
 13196  0CB3  0221               	subwf	PWM3_LoadDutyValue@dutyValue+1,w
 13197  0CB4  3079               	movlw	121
 13198  0CB5  1903               	skipnz
 13199  0CB6  0220               	subwf	PWM3_LoadDutyValue@dutyValue,w
 13200  0CB7  1803               	skipnc
 13201  0CB8  0008               	return
 13202                           
 13203                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 13204  0CB9  30FF               	movlw	255
 13205  0CBA  05A0               	andwf	PWM3_LoadDutyValue@dutyValue,f
 13206  0CBB  3003               	movlw	3
 13207  0CBC  05A1               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 13208                           
 13209                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 13210  0CBD  0146               	movlb	6	; select bank6
 13211  0CBE  1E16               	btfss	22,4	;volatile
 13212  0CBF  2CC6               	goto	l4740
 13213                           
 13214                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 13215  0CC0  3006               	movlw	6
 13216  0CC1  0140               	movlb	0	; select bank0
 13217  0CC2                     u3185:	
 13218  0CC2  35A0               	lslf	PWM3_LoadDutyValue@dutyValue,f
 13219  0CC3  0DA1               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 13220  0CC4  0B89               	decfsz	9,f
 13221  0CC5  2CC2               	goto	u3185
 13222  0CC6                     l4740:	
 13223                           
 13224                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 13225  0CC6  0140               	movlb	0	; select bank0
 13226  0CC7  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 13227  0CC8  0146               	movlb	6	; select bank6
 13228  0CC9  0095               	movwf	21	;volatile
 13229                           
 13230                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 13231  0CCA  0140               	movlb	0	; select bank0
 13232  0CCB  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
 13233  0CCC  0146               	movlb	6	; select bank6
 13234  0CCD  0094               	movwf	20	;volatile
 13235                           
 13236                           ;mcc_generated_files/pwm3.c: 93:         }
 13237  0CCE  0008               	return
 13238  0CCF                     __end_of_PWM3_LoadDutyValue:	
 13239                           
 13240                           	psect	text31
 13241  0C93                     __ptext31:	
 13242 ;; *************** function _PWM2_LoadDutyValue *****************
 13243 ;; Defined at:
 13244 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      void 
 13251 ;; Registers used:
 13252 ;;		wreg, status,2
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13262 ;;Total ram usage:        2 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    4
 13265 ;; This function calls:
 13266 ;;		Nothing
 13267 ;; This function is called by:
 13268 ;;		_LED_task
 13269 ;; This function uses a non-reentrant model
 13270 ;;
 13271                           
 13272                           
 13273                           ;psect for function _PWM2_LoadDutyValue
 13274  0C93                     _PWM2_LoadDutyValue:	
 13275                           
 13276                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 120){
 13277                           
 13278                           ;incstack = 0
 13279                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 13280  0C93  3000               	movlw	0
 13281  0C94  0140               	movlb	0	; select bank0
 13282  0C95  0221               	subwf	PWM2_LoadDutyValue@dutyValue+1,w
 13283  0C96  3079               	movlw	121
 13284  0C97  1903               	skipnz
 13285  0C98  0220               	subwf	PWM2_LoadDutyValue@dutyValue,w
 13286  0C99  1803               	skipnc
 13287  0C9A  0008               	return
 13288                           
 13289                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 13290  0C9B  30FF               	movlw	255
 13291  0C9C  05A0               	andwf	PWM2_LoadDutyValue@dutyValue,f
 13292  0C9D  3003               	movlw	3
 13293  0C9E  05A1               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 13294                           
 13295                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 13296  0C9F  0146               	movlb	6	; select bank6
 13297  0CA0  1E12               	btfss	18,4	;volatile
 13298  0CA1  2CA8               	goto	l4788
 13299                           
 13300                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 13301  0CA2  3006               	movlw	6
 13302  0CA3  0140               	movlb	0	; select bank0
 13303  0CA4                     u3275:	
 13304  0CA4  35A0               	lslf	PWM2_LoadDutyValue@dutyValue,f
 13305  0CA5  0DA1               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 13306  0CA6  0B89               	decfsz	9,f
 13307  0CA7  2CA4               	goto	u3275
 13308  0CA8                     l4788:	
 13309                           
 13310                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 13311  0CA8  0140               	movlb	0	; select bank0
 13312  0CA9  0821               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 13313  0CAA  0146               	movlb	6	; select bank6
 13314  0CAB  0091               	movwf	17	;volatile
 13315                           
 13316                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 13317  0CAC  0140               	movlb	0	; select bank0
 13318  0CAD  0820               	movf	PWM2_LoadDutyValue@dutyValue,w
 13319  0CAE  0146               	movlb	6	; select bank6
 13320  0CAF  0090               	movwf	16	;volatile
 13321                           
 13322                           ;mcc_generated_files/pwm2.c: 93:         }
 13323  0CB0  0008               	return
 13324  0CB1                     __end_of_PWM2_LoadDutyValue:	
 13325                           
 13326                           	psect	text32
 13327  0C75                     __ptext32:	
 13328 ;; *************** function _PWM1_LoadDutyValue *****************
 13329 ;; Defined at:
 13330 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;		None
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, status,2
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13348 ;;Total ram usage:        2 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    4
 13351 ;; This function calls:
 13352 ;;		Nothing
 13353 ;; This function is called by:
 13354 ;;		_LED_task
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358                           
 13359                           ;psect for function _PWM1_LoadDutyValue
 13360  0C75                     _PWM1_LoadDutyValue:	
 13361                           
 13362                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 120){
 13363                           
 13364                           ;incstack = 0
 13365                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 13366  0C75  3000               	movlw	0
 13367  0C76  0140               	movlb	0	; select bank0
 13368  0C77  0221               	subwf	PWM1_LoadDutyValue@dutyValue+1,w
 13369  0C78  3079               	movlw	121
 13370  0C79  1903               	skipnz
 13371  0C7A  0220               	subwf	PWM1_LoadDutyValue@dutyValue,w
 13372  0C7B  1803               	skipnc
 13373  0C7C  0008               	return
 13374                           
 13375                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 13376  0C7D  30FF               	movlw	255
 13377  0C7E  05A0               	andwf	PWM1_LoadDutyValue@dutyValue,f
 13378  0C7F  3003               	movlw	3
 13379  0C80  05A1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 13380                           
 13381                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 13382  0C81  0146               	movlb	6	; select bank6
 13383  0C82  1E0E               	btfss	14,4	;volatile
 13384  0C83  2C8A               	goto	l4772
 13385                           
 13386                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 13387  0C84  3006               	movlw	6
 13388  0C85  0140               	movlb	0	; select bank0
 13389  0C86                     u3245:	
 13390  0C86  35A0               	lslf	PWM1_LoadDutyValue@dutyValue,f
 13391  0C87  0DA1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 13392  0C88  0B89               	decfsz	9,f
 13393  0C89  2C86               	goto	u3245
 13394  0C8A                     l4772:	
 13395                           
 13396                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 13397  0C8A  0140               	movlb	0	; select bank0
 13398  0C8B  0821               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 13399  0C8C  0146               	movlb	6	; select bank6
 13400  0C8D  008D               	movwf	13	;volatile
 13401                           
 13402                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 13403  0C8E  0140               	movlb	0	; select bank0
 13404  0C8F  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
 13405  0C90  0146               	movlb	6	; select bank6
 13406  0C91  008C               	movwf	12	;volatile
 13407                           
 13408                           ;mcc_generated_files/pwm1.c: 93:         }
 13409  0C92  0008               	return
 13410  0C93                     __end_of_PWM1_LoadDutyValue:	
 13411                           
 13412                           	psect	text33
 13413  0A4A                     __ptext33:	
 13414 ;; *************** function _BEAT_detected *****************
 13415 ;; Defined at:
 13416 ;;		line 51 in file "beat.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      _Bool 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    4
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_LED_task
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function _BEAT_detected
 13446  0A4A                     _BEAT_detected:	
 13447                           
 13448                           ;beat.c: 52:     if (detected) {
 13449                           
 13450                           ;incstack = 0
 13451                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 13452  0A4A  0141               	movlb	1	; select bank1
 13453  0A4B  0843               	movf	_detected^(0+128),w
 13454  0A4C  1903               	btfsc	3,2
 13455  0A4D  2A51               	goto	l4886
 13456                           
 13457                           ;beat.c: 53:         detected = 0;
 13458  0A4E  01C3               	clrf	_detected^(0+128)
 13459                           
 13460                           ;beat.c: 54:         return 1;
 13461  0A4F  3001               	movlw	1
 13462  0A50  0008               	return
 13463  0A51                     l4886:	
 13464                           
 13465                           ;beat.c: 57:     return 0;
 13466  0A51  3000               	movlw	0
 13467  0A52  0008               	return
 13468  0A53                     __end_of_BEAT_detected:	
 13469                           
 13470                           	psect	text34
 13471  0A0C                     __ptext34:	
 13472 ;; *************** function _DMX_init *****************
 13473 ;; Defined at:
 13474 ;;		line 18 in file "dmx.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		wreg, status,2, status,0, pclath, cstack
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13492 ;;Total ram usage:        0 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:    5
 13495 ;; This function calls:
 13496 ;;		_EUSART1_SetRxInterruptHandler
 13497 ;; This function is called by:
 13498 ;;		_main
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502                           
 13503                           ;psect for function _DMX_init
 13504  0A0C                     _DMX_init:	
 13505                           
 13506                           ;dmx.c: 19:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13507                           
 13508                           ;incstack = 0
 13509                           ; Regs used in _DMX_init: [wreg+status,2+status,0+pclath+cstack]
 13510  0A0C  304A               	movlw	low _DMX_interrupt
 13511  0A0D  0140               	movlb	0	; select bank0
 13512  0A0E  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13513  0A0F  300F               	movlw	high _DMX_interrupt
 13514  0A10  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13515  0A11  318A  2241         	fcall	_EUSART1_SetRxInterruptHandler
 13516  0A13  0008               	return
 13517  0A14                     __end_of_DMX_init:	
 13518                           
 13519                           	psect	text35
 13520  0A41                     __ptext35:	
 13521 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13522 ;; Defined at:
 13523 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13526 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		wreg
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13542 ;;Total ram usage:        2 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; Hardware stack levels required when called:    4
 13545 ;; This function calls:
 13546 ;;		Nothing
 13547 ;; This function is called by:
 13548 ;;		_EUSART1_Initialize
 13549 ;;		_DMX_init
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           
 13554                           ;psect for function _EUSART1_SetRxInterruptHandler
 13555  0A41                     _EUSART1_SetRxInterruptHandler:	
 13556                           
 13557                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13558                           
 13559                           ;incstack = 0
 13560                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13561  0A41  0140               	movlb	0	; select bank0
 13562  0A42  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13563  0A43  0142               	movlb	2	; select bank2
 13564  0A44  00DF               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13565  0A45  0140               	movlb	0	; select bank0
 13566  0A46  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13567  0A47  0142               	movlb	2	; select bank2
 13568  0A48  00DE               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13569  0A49  0008               	return
 13570  0A4A                     __end_of_EUSART1_SetRxInterruptHandler:	
 13571                           
 13572                           	psect	text36
 13573  03A3                     __ptext36:	
 13574 ;; *************** function _CONTROLLER_task *****************
 13575 ;; Defined at:
 13576 ;;		line 46 in file "controller.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;  isActive        1   25[BANK0 ] _Bool 
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13593 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13594 ;;Total ram usage:        3 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; Hardware stack levels required when called:   10
 13597 ;; This function calls:
 13598 ;;		_BUTTONS_isClicked
 13599 ;;		_BUTTONS_isHeld
 13600 ;;		_CLOCK_getTime
 13601 ;;		_TM1650_enable
 13602 ;;		_address_dec
 13603 ;;		_address_inc
 13604 ;; This function is called by:
 13605 ;;		_main
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           
 13610                           ;psect for function _CONTROLLER_task
 13611  03A3                     _CONTROLLER_task:	
 13612                           
 13613                           ;controller.c: 48:     _Bool isActive = 1;
 13614                           
 13615                           ;incstack = 0
 13616                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13617  03A3  0140               	movlb	0	; select bank0
 13618  03A4  01B9               	clrf	CONTROLLER_task@isActive
 13619  03A5  0AB9               	incf	CONTROLLER_task@isActive,f
 13620                           
 13621                           ;controller.c: 50:     if (BUTTONS_isClicked(up)) {
 13622  03A6  0873               	movf	_up,w
 13623  03A7  318B  2345  3183   	fcall	_BUTTONS_isClicked
 13624  03AA  3A00               	xorlw	0
 13625  03AB  1903               	skipnz
 13626  03AC  2BBC               	goto	l5656
 13627                           
 13628                           ;controller.c: 51:         address_inc();
 13629  03AD  318C  2423  3183   	fcall	_address_inc
 13630                           
 13631                           ;controller.c: 52:         lastActiveTime = CLOCK_getTime();
 13632  03B0  318A  222F  3183   	fcall	_CLOCK_getTime
 13633  03B3  0140               	movlb	0	; select bank0
 13634  03B4  0821               	movf	?_CLOCK_getTime+1,w
 13635  03B5  0141               	movlb	1	; select bank1
 13636  03B6  00BA               	movwf	(_lastActiveTime+1)^(0+128)
 13637  03B7  0140               	movlb	0	; select bank0
 13638  03B8  0820               	movf	?_CLOCK_getTime,w
 13639  03B9  0141               	movlb	1	; select bank1
 13640  03BA  00B9               	movwf	_lastActiveTime^(0+128)
 13641                           
 13642                           ;controller.c: 53:     } else if (BUTTONS_isClicked(down)) {
 13643  03BB  2C3A               	goto	l5690
 13644  03BC                     l5656:	
 13645  03BC  0872               	movf	_down,w
 13646  03BD  318B  2345  3183   	fcall	_BUTTONS_isClicked
 13647  03C0  3A00               	xorlw	0
 13648  03C1  1903               	skipnz
 13649  03C2  2BC7               	goto	l5660
 13650                           
 13651                           ;controller.c: 54:         address_dec();
 13652  03C3  318B  23DA  3183   	fcall	_address_dec
 13653                           
 13654                           ;controller.c: 55:     } else if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > 
      +                          incInterval)){
 13655  03C6  2C3A               	goto	l5690
 13656  03C7                     l5660:	
 13657  03C7  0873               	movf	_up,w
 13658  03C8  318B  2302  3183   	fcall	_BUTTONS_isHeld
 13659  03CB  3A00               	xorlw	0
 13660  03CC  1903               	skipnz
 13661  03CD  2C07               	goto	l5672
 13662  03CE  318A  222F  3183   	fcall	_CLOCK_getTime
 13663  03D1  0141               	movlb	1	; select bank1
 13664  03D2  083B               	movf	_lastIncTime^(0+128),w
 13665  03D3  0140               	movlb	0	; select bank0
 13666  03D4  0220               	subwf	?_CLOCK_getTime,w
 13667  03D5  00B7               	movwf	??_CONTROLLER_task
 13668  03D6  0141               	movlb	1	; select bank1
 13669  03D7  083C               	movf	(_lastIncTime+1)^(0+128),w
 13670  03D8  0140               	movlb	0	; select bank0
 13671  03D9  3B21               	subwfb	?_CLOCK_getTime+1,w
 13672  03DA  00B8               	movwf	??_CONTROLLER_task+1
 13673  03DB  0838               	movf	??_CONTROLLER_task+1,w
 13674  03DC  0141               	movlb	1	; select bank1
 13675  03DD  025B               	subwf	(_incInterval+1)^(0+128),w
 13676  03DE  1D03               	skipz
 13677  03DF  2BE4               	goto	u4385
 13678  03E0  0140               	movlb	0	; select bank0
 13679  03E1  0837               	movf	??_CONTROLLER_task,w
 13680  03E2  0141               	movlb	1	; select bank1
 13681  03E3  025A               	subwf	_incInterval^(0+128),w
 13682  03E4                     u4385:	
 13683  03E4  1803               	skipnc
 13684  03E5  2C07               	goto	l5672
 13685                           
 13686                           ;controller.c: 56:         address_inc();
 13687  03E6  318C  2423  3183   	fcall	_address_inc
 13688  03E9                     L11:	
 13689                           
 13690                           ;controller.c: 57:         lastIncTime = CLOCK_getTime();
 13691  03E9  318A  222F  3183   	fcall	_CLOCK_getTime
 13692  03EC  0140               	movlb	0	; select bank0
 13693  03ED  0821               	movf	?_CLOCK_getTime+1,w
 13694  03EE  0141               	movlb	1	; select bank1
 13695  03EF  00BC               	movwf	(_lastIncTime+1)^(0+128)
 13696  03F0  0140               	movlb	0	; select bank0
 13697  03F1  0820               	movf	?_CLOCK_getTime,w
 13698  03F2  0141               	movlb	1	; select bank1
 13699  03F3  00BB               	movwf	_lastIncTime^(0+128)
 13700                           
 13701                           ;controller.c: 58:         if(incInterval > 0){
 13702  03F4  085B               	movf	(_incInterval+1)^(0+128),w
 13703  03F5  3A80               	xorlw	128
 13704  03F6  0140               	movlb	0	; select bank0
 13705  03F7  00B7               	movwf	??_CONTROLLER_task
 13706  03F8  3080               	movlw	128
 13707  03F9  0237               	subwf	??_CONTROLLER_task,w
 13708  03FA  1D03               	skipz
 13709  03FB  2BFF               	goto	u4395
 13710  03FC  3001               	movlw	1
 13711  03FD  0141               	movlb	1	; select bank1
 13712  03FE  025A               	subwf	_incInterval^(0+128),w
 13713  03FF                     u4395:	
 13714  03FF  1C03               	skipc
 13715  0400  2C3A               	goto	l5690
 13716                           
 13717                           ;controller.c: 59:             incInterval-=1;
 13718  0401  30FF               	movlw	255
 13719  0402  0141               	movlb	1	; select bank1
 13720  0403  07DA               	addwf	_incInterval^(0+128),f
 13721  0404  30FF               	movlw	255
 13722  0405  3DDB               	addwfc	(_incInterval+1)^(0+128),f
 13723  0406  2C3A               	goto	l5690
 13724  0407                     l5672:	
 13725  0407  0872               	movf	_down,w
 13726  0408  318B  2302  3183   	fcall	_BUTTONS_isHeld
 13727  040B  3A00               	xorlw	0
 13728  040C  1903               	skipnz
 13729  040D  2C2A               	goto	l5684
 13730  040E  318A  222F  3183   	fcall	_CLOCK_getTime
 13731  0411  0141               	movlb	1	; select bank1
 13732  0412  083B               	movf	_lastIncTime^(0+128),w
 13733  0413  0140               	movlb	0	; select bank0
 13734  0414  0220               	subwf	?_CLOCK_getTime,w
 13735  0415  00B7               	movwf	??_CONTROLLER_task
 13736  0416  0141               	movlb	1	; select bank1
 13737  0417  083C               	movf	(_lastIncTime+1)^(0+128),w
 13738  0418  0140               	movlb	0	; select bank0
 13739  0419  3B21               	subwfb	?_CLOCK_getTime+1,w
 13740  041A  00B8               	movwf	??_CONTROLLER_task+1
 13741  041B  0838               	movf	??_CONTROLLER_task+1,w
 13742  041C  0141               	movlb	1	; select bank1
 13743  041D  025B               	subwf	(_incInterval+1)^(0+128),w
 13744  041E  1D03               	skipz
 13745  041F  2C24               	goto	u4415
 13746  0420  0140               	movlb	0	; select bank0
 13747  0421  0837               	movf	??_CONTROLLER_task,w
 13748  0422  0141               	movlb	1	; select bank1
 13749  0423  025A               	subwf	_incInterval^(0+128),w
 13750  0424                     u4415:	
 13751  0424  1803               	skipnc
 13752  0425  2C2A               	goto	l5684
 13753                           
 13754                           ;controller.c: 62:         address_dec();
 13755  0426  318B  23DA  3183   	fcall	_address_dec
 13756  0429  2BE9               	goto	L11
 13757  042A                     l5684:	
 13758                           ;controller.c: 64:         if(incInterval > 0){
 13759                           
 13760                           ;controller.c: 63:         lastIncTime = CLOCK_getTime();
 13761                           
 13762  042A  0141               	movlb	1	; select bank1
 13763  042B  0846               	movf	_enter^(0+128),w
 13764  042C  318B  2302  3183   	fcall	_BUTTONS_isHeld
 13765  042F  3A00               	xorlw	0
 13766  0430  1903               	skipnz
 13767  0431  2C38               	goto	l5688
 13768                           
 13769                           ;controller.c: 68:         address = 1;
 13770  0432  3001               	movlw	1
 13771  0433  0141               	movlb	1	; select bank1
 13772  0434  00DC               	movwf	_address^(0+128)
 13773  0435  3000               	movlw	0
 13774  0436  00DD               	movwf	(_address^(0+128)+1)
 13775                           
 13776                           ;controller.c: 69:     } else {
 13777  0437  2C3A               	goto	l5690
 13778  0438                     l5688:	
 13779                           
 13780                           ;controller.c: 70:         isActive = 0;
 13781  0438  0140               	movlb	0	; select bank0
 13782  0439  01B9               	clrf	CONTROLLER_task@isActive
 13783  043A                     l5690:	
 13784                           
 13785                           ;controller.c: 73:     if(!BUTTONS_isHeld(up) && !BUTTONS_isHeld(down)){
 13786  043A  0873               	movf	_up,w
 13787  043B  318B  2302  3183   	fcall	_BUTTONS_isHeld
 13788  043E  3A00               	xorlw	0
 13789  043F  1D03               	skipz
 13790  0440  2C4D               	goto	l5696
 13791  0441  0872               	movf	_down,w
 13792  0442  318B  2302  3183   	fcall	_BUTTONS_isHeld
 13793  0445  3A00               	xorlw	0
 13794  0446  1D03               	skipz
 13795  0447  2C4D               	goto	l5696
 13796                           
 13797                           ;controller.c: 74:         incInterval = 100;
 13798  0448  3064               	movlw	100
 13799  0449  0141               	movlb	1	; select bank1
 13800  044A  00DA               	movwf	_incInterval^(0+128)
 13801  044B  3000               	movlw	0
 13802  044C  00DB               	movwf	(_incInterval^(0+128)+1)
 13803  044D                     l5696:	
 13804                           
 13805                           ;controller.c: 77:     if(isActive) {
 13806  044D  0140               	movlb	0	; select bank0
 13807  044E  0839               	movf	CONTROLLER_task@isActive,w
 13808  044F  1903               	btfsc	3,2
 13809  0450  2C5C               	goto	l5700
 13810                           
 13811                           ;controller.c: 78:         lastActiveTime = CLOCK_getTime();
 13812  0451  318A  222F  3183   	fcall	_CLOCK_getTime
 13813  0454  0140               	movlb	0	; select bank0
 13814  0455  0821               	movf	?_CLOCK_getTime+1,w
 13815  0456  0141               	movlb	1	; select bank1
 13816  0457  00BA               	movwf	(_lastActiveTime+1)^(0+128)
 13817  0458  0140               	movlb	0	; select bank0
 13818  0459  0820               	movf	?_CLOCK_getTime,w
 13819  045A  0141               	movlb	1	; select bank1
 13820  045B  00B9               	movwf	_lastActiveTime^(0+128)
 13821  045C                     l5700:	
 13822                           
 13823                           ;controller.c: 81:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 13824  045C  318A  222F  3183   	fcall	_CLOCK_getTime
 13825  045F  0141               	movlb	1	; select bank1
 13826  0460  0839               	movf	_lastActiveTime^(0+128),w
 13827  0461  0140               	movlb	0	; select bank0
 13828  0462  0220               	subwf	?_CLOCK_getTime,w
 13829  0463  00B7               	movwf	??_CONTROLLER_task
 13830  0464  0141               	movlb	1	; select bank1
 13831  0465  083A               	movf	(_lastActiveTime+1)^(0+128),w
 13832  0466  0140               	movlb	0	; select bank0
 13833  0467  3B21               	subwfb	?_CLOCK_getTime+1,w
 13834  0468  00B8               	movwf	??_CONTROLLER_task+1
 13835  0469  3013               	movlw	19
 13836  046A  0238               	subwf	??_CONTROLLER_task+1,w
 13837  046B  3088               	movlw	136
 13838  046C  1903               	skipnz
 13839  046D  0237               	subwf	??_CONTROLLER_task,w
 13840  046E  1C03               	skipc
 13841  046F  2C81               	goto	l5706
 13842                           
 13843                           ;controller.c: 82:         TM1650_enable(0);
 13844  0470  3000               	movlw	0
 13845  0471  318B  2381  3183   	fcall	_TM1650_enable
 13846                           
 13847                           ;controller.c: 83:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 13848  0474  318A  222F         	fcall	_CLOCK_getTime
 13849  0476  0140               	movlb	0	; select bank0
 13850  0477  0820               	movf	?_CLOCK_getTime,w
 13851  0478  3E77               	addlw	119
 13852  0479  0141               	movlb	1	; select bank1
 13853  047A  00B9               	movwf	_lastActiveTime^(0+128)
 13854  047B  30EC               	movlw	236
 13855  047C  0140               	movlb	0	; select bank0
 13856  047D  3D21               	addwfc	?_CLOCK_getTime+1,w
 13857  047E  0141               	movlb	1	; select bank1
 13858  047F  00BA               	movwf	(_lastActiveTime+1)^(0+128)
 13859                           
 13860                           ;controller.c: 84:     } else{
 13861  0480  0008               	return
 13862  0481                     l5706:	
 13863                           
 13864                           ;controller.c: 85:         TM1650_enable(1);
 13865  0481  3001               	movlw	1
 13866  0482  318B  2381         	fcall	_TM1650_enable
 13867  0484  0008               	return
 13868  0485                     __end_of_CONTROLLER_task:	
 13869                           
 13870                           	psect	text37
 13871  0C23                     __ptext37:	
 13872 ;; *************** function _address_inc *****************
 13873 ;; Defined at:
 13874 ;;		line 21 in file "controller.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;		None
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;		None
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  1    wreg      void 
 13881 ;; Registers used:
 13882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13892 ;;Total ram usage:        0 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    9
 13895 ;; This function calls:
 13896 ;;		_TM1650_fastPrintNum
 13897 ;; This function is called by:
 13898 ;;		_CONTROLLER_task
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           
 13903                           ;psect for function _address_inc
 13904  0C23                     _address_inc:	
 13905                           
 13906                           ;controller.c: 23:     if(address == 512)
 13907                           
 13908                           ;incstack = 0
 13909                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13910  0C23  3002               	movlw	2
 13911  0C24  0141               	movlb	1	; select bank1
 13912  0C25  065D               	xorwf	(_address+1)^(0+128),w
 13913  0C26  045C               	iorwf	_address^(0+128),w
 13914  0C27  1D03               	btfss	3,2
 13915  0C28  2C2E               	goto	l5612
 13916                           
 13917                           ;controller.c: 24:         address = 1;
 13918  0C29  3001               	movlw	1
 13919  0C2A  00DC               	movwf	_address^(0+128)
 13920  0C2B  3000               	movlw	0
 13921  0C2C  00DD               	movwf	(_address^(0+128)+1)
 13922  0C2D  2C32               	goto	l5614
 13923  0C2E                     l5612:	
 13924                           
 13925                           ;controller.c: 26:         address++;
 13926  0C2E  3001               	movlw	1
 13927  0C2F  07DC               	addwf	_address^(0+128),f
 13928  0C30  3000               	movlw	0
 13929  0C31  3DDD               	addwfc	(_address+1)^(0+128),f
 13930  0C32                     l5614:	
 13931                           
 13932                           ;controller.c: 29:     TM1650_fastPrintNum(address);
 13933  0C32  085D               	movf	(_address+1)^(0+128),w
 13934  0C33  0140               	movlb	0	; select bank0
 13935  0C34  00B5               	movwf	TM1650_fastPrintNum@num+1
 13936  0C35  0141               	movlb	1	; select bank1
 13937  0C36  085C               	movf	_address^(0+128),w
 13938  0C37  0140               	movlb	0	; select bank0
 13939  0C38  00B4               	movwf	TM1650_fastPrintNum@num
 13940  0C39  3185  2550         	fcall	_TM1650_fastPrintNum
 13941  0C3B  0008               	return
 13942  0C3C                     __end_of_address_inc:	
 13943                           
 13944                           	psect	text38
 13945  0BDA                     __ptext38:	
 13946 ;; *************** function _address_dec *****************
 13947 ;; Defined at:
 13948 ;;		line 35 in file "controller.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      void 
 13955 ;; Registers used:
 13956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13966 ;;Total ram usage:        0 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; Hardware stack levels required when called:    9
 13969 ;; This function calls:
 13970 ;;		_TM1650_fastPrintNum
 13971 ;; This function is called by:
 13972 ;;		_CONTROLLER_task
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           
 13977                           ;psect for function _address_dec
 13978  0BDA                     _address_dec:	
 13979                           
 13980                           ;controller.c: 37:     if(address == 1)
 13981                           
 13982                           ;incstack = 0
 13983                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13984  0BDA  0141               	movlb	1	; select bank1
 13985  0BDB  035C               	decf	_address^(0+128),w
 13986  0BDC  045D               	iorwf	(_address+1)^(0+128),w
 13987  0BDD  1D03               	btfss	3,2
 13988  0BDE  2BE4               	goto	l5620
 13989                           
 13990                           ;controller.c: 38:         address = 512;
 13991  0BDF  3000               	movlw	0
 13992  0BE0  00DC               	movwf	_address^(0+128)
 13993  0BE1  3002               	movlw	2
 13994  0BE2  00DD               	movwf	(_address^(0+128)+1)
 13995  0BE3  2BE8               	goto	l5622
 13996  0BE4                     l5620:	
 13997                           
 13998                           ;controller.c: 40:         address--;
 13999  0BE4  3001               	movlw	1
 14000  0BE5  02DC               	subwf	_address^(0+128),f
 14001  0BE6  3000               	movlw	0
 14002  0BE7  3BDD               	subwfb	(_address+1)^(0+128),f
 14003  0BE8                     l5622:	
 14004                           
 14005                           ;controller.c: 43:     TM1650_fastPrintNum(address);
 14006  0BE8  085D               	movf	(_address+1)^(0+128),w
 14007  0BE9  0140               	movlb	0	; select bank0
 14008  0BEA  00B5               	movwf	TM1650_fastPrintNum@num+1
 14009  0BEB  0141               	movlb	1	; select bank1
 14010  0BEC  085C               	movf	_address^(0+128),w
 14011  0BED  0140               	movlb	0	; select bank0
 14012  0BEE  00B4               	movwf	TM1650_fastPrintNum@num
 14013  0BEF  3185  2550         	fcall	_TM1650_fastPrintNum
 14014  0BF1  0008               	return
 14015  0BF2                     __end_of_address_dec:	
 14016                           
 14017                           	psect	text39
 14018  0B81                     __ptext39:	
 14019 ;; *************** function _TM1650_enable *****************
 14020 ;; Defined at:
 14021 ;;		line 42 in file "tm1650.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  enable          1    wreg     _Bool 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;  enable          1   20[BANK0 ] _Bool 
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      void 
 14028 ;; Registers used:
 14029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14039 ;;Total ram usage:        1 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:    8
 14042 ;; This function calls:
 14043 ;;		_writeData
 14044 ;; This function is called by:
 14045 ;;		_CONTROLLER_task
 14046 ;;		_TM1650_init
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           
 14051                           ;psect for function _TM1650_enable
 14052  0B81                     _TM1650_enable:	
 14053                           
 14054                           ;incstack = 0
 14055                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14056                           ;TM1650_enable@enable stored from wreg
 14057  0B81  0140               	movlb	0	; select bank0
 14058  0B82  00B4               	movwf	TM1650_enable@enable
 14059                           
 14060                           ;tm1650.c: 43:     if(enable){
 14061  0B83  0834               	movf	TM1650_enable@enable,w
 14062  0B84  1903               	btfsc	3,2
 14063  0B85  2B8F               	goto	l5630
 14064                           
 14065                           ;tm1650.c: 44:         writeData(0x24, 0x01);
 14066  0B86  01AE               	clrf	writeData@data
 14067  0B87  0AAE               	incf	writeData@data,f
 14068  0B88  3024               	movlw	36
 14069  0B89  318C  2458         	fcall	_writeData
 14070                           
 14071                           ;tm1650.c: 45:         tm1650_status = 1;
 14072  0B8B  0141               	movlb	1	; select bank1
 14073  0B8C  01C5               	clrf	_tm1650_status^(0+128)
 14074  0B8D  0AC5               	incf	_tm1650_status^(0+128),f
 14075                           
 14076                           ;tm1650.c: 46:     } else {
 14077  0B8E  0008               	return
 14078  0B8F                     l5630:	
 14079                           
 14080                           ;tm1650.c: 47:         writeData(0x24, 0x00);
 14081  0B8F  01AE               	clrf	writeData@data
 14082  0B90  3024               	movlw	36
 14083  0B91  318C  2458         	fcall	_writeData
 14084                           
 14085                           ;tm1650.c: 48:         tm1650_status = 0;
 14086  0B93  0141               	movlb	1	; select bank1
 14087  0B94  01C5               	clrf	_tm1650_status^(0+128)
 14088  0B95  0008               	return
 14089  0B96                     __end_of_TM1650_enable:	
 14090                           
 14091                           	psect	text40
 14092  0B02                     __ptext40:	
 14093 ;; *************** function _BUTTONS_isHeld *****************
 14094 ;; Defined at:
 14095 ;;		line 109 in file "buttons.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;  button          1    wreg     PTR struct .
 14098 ;;		 -> buttons(32), NULL(0), 
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;  button          1    0[BANK0 ] PTR struct .
 14101 ;;		 -> buttons(32), NULL(0), 
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      _Bool 
 14104 ;; Registers used:
 14105 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;Total ram usage:        1 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    4
 14118 ;; This function calls:
 14119 ;;		Nothing
 14120 ;; This function is called by:
 14121 ;;		_CONTROLLER_task
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           
 14126                           ;psect for function _BUTTONS_isHeld
 14127  0B02                     _BUTTONS_isHeld:	
 14128                           
 14129                           ;incstack = 0
 14130                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 14131                           ;BUTTONS_isHeld@button stored from wreg
 14132  0B02  0140               	movlb	0	; select bank0
 14133  0B03  00A0               	movwf	BUTTONS_isHeld@button
 14134                           
 14135                           ;buttons.c: 110:     if(button->event == EVENT_HELD){
 14136  0B04  0820               	movf	BUTTONS_isHeld@button,w
 14137  0B05  3E07               	addlw	7
 14138  0B06  0086               	movwf	6
 14139  0B07  3001               	movlw	1	; select bank2/3
 14140  0B08  0087               	movwf	7
 14141  0B09  3003               	movlw	3
 14142  0B0A  0601               	xorwf	1,w
 14143  0B0B  1D03               	btfss	3,2
 14144  0B0C  2B0F               	goto	l4842
 14145                           
 14146                           ;buttons.c: 111:         return 1;
 14147  0B0D  3001               	movlw	1
 14148  0B0E  0008               	return
 14149  0B0F                     l4842:	
 14150                           
 14151                           ;buttons.c: 114:     return 0;
 14152  0B0F  3000               	movlw	0
 14153  0B10  0008               	return
 14154  0B11                     __end_of_BUTTONS_isHeld:	
 14155                           
 14156                           	psect	text41
 14157  0B45                     __ptext41:	
 14158 ;; *************** function _BUTTONS_isClicked *****************
 14159 ;; Defined at:
 14160 ;;		line 100 in file "buttons.c"
 14161 ;; Parameters:    Size  Location     Type
 14162 ;;  button          1    wreg     PTR struct .
 14163 ;;		 -> buttons(32), NULL(0), 
 14164 ;; Auto vars:     Size  Location     Type
 14165 ;;  button          1    0[BANK0 ] PTR struct .
 14166 ;;		 -> buttons(32), NULL(0), 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      _Bool 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14179 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14180 ;;Total ram usage:        1 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    4
 14183 ;; This function calls:
 14184 ;;		Nothing
 14185 ;; This function is called by:
 14186 ;;		_CONTROLLER_task
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           
 14191                           ;psect for function _BUTTONS_isClicked
 14192  0B45                     _BUTTONS_isClicked:	
 14193                           
 14194                           ;incstack = 0
 14195                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 14196                           ;BUTTONS_isClicked@button stored from wreg
 14197  0B45  0140               	movlb	0	; select bank0
 14198  0B46  00A0               	movwf	BUTTONS_isClicked@button
 14199                           
 14200                           ;buttons.c: 101:     if (button->event == EVENT_PRESSED) {
 14201  0B47  0820               	movf	BUTTONS_isClicked@button,w
 14202  0B48  3E07               	addlw	7
 14203  0B49  0086               	movwf	6
 14204  0B4A  3001               	movlw	1	; select bank2/3
 14205  0B4B  0087               	movwf	7
 14206  0B4C  0301               	decf	1,w
 14207  0B4D  1D03               	btfss	3,2
 14208  0B4E  2B57               	goto	l4832
 14209                           
 14210                           ;buttons.c: 102:         button->event = EVENT_IDLE;
 14211  0B4F  0820               	movf	BUTTONS_isClicked@button,w
 14212  0B50  3E07               	addlw	7
 14213  0B51  0086               	movwf	6
 14214  0B52  3001               	movlw	1	; select bank2/3
 14215  0B53  0087               	movwf	7
 14216  0B54  0181               	clrf	1
 14217                           
 14218                           ;buttons.c: 103:         return 1;
 14219  0B55  3001               	movlw	1
 14220  0B56  0008               	return
 14221  0B57                     l4832:	
 14222                           
 14223                           ;buttons.c: 106:     return 0;
 14224  0B57  3000               	movlw	0
 14225  0B58  0008               	return
 14226  0B59                     __end_of_BUTTONS_isClicked:	
 14227                           
 14228                           	psect	text42
 14229  0A8B                     __ptext42:	
 14230 ;; *************** function _CONTROLLER_init *****************
 14231 ;; Defined at:
 14232 ;;		line 14 in file "controller.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;		None
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      void 
 14239 ;; Registers used:
 14240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14250 ;;Total ram usage:        0 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:    9
 14253 ;; This function calls:
 14254 ;;		_TM1650_fastPrintNum
 14255 ;; This function is called by:
 14256 ;;		_main
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           
 14261                           ;psect for function _CONTROLLER_init
 14262  0A8B                     _CONTROLLER_init:	
 14263                           
 14264                           ;controller.c: 15:     TM1650_fastPrintNum(address);
 14265                           
 14266                           ;incstack = 0
 14267                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14268  0A8B  0141               	movlb	1	; select bank1
 14269  0A8C  085D               	movf	(_address+1)^(0+128),w
 14270  0A8D  0140               	movlb	0	; select bank0
 14271  0A8E  00B5               	movwf	TM1650_fastPrintNum@num+1
 14272  0A8F  0141               	movlb	1	; select bank1
 14273  0A90  085C               	movf	_address^(0+128),w
 14274  0A91  0140               	movlb	0	; select bank0
 14275  0A92  00B4               	movwf	TM1650_fastPrintNum@num
 14276  0A93  3185  2550         	fcall	_TM1650_fastPrintNum
 14277  0A95  0008               	return
 14278  0A96                     __end_of_CONTROLLER_init:	
 14279                           
 14280                           	psect	text43
 14281  0550                     __ptext43:	
 14282 ;; *************** function _TM1650_fastPrintNum *****************
 14283 ;; Defined at:
 14284 ;;		line 102 in file "tm1650.c"
 14285 ;; Parameters:    Size  Location     Type
 14286 ;;  num             2   20[BANK0 ] unsigned short 
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;		None
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  1    wreg      void 
 14291 ;; Registers used:
 14292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14301 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14302 ;;Total ram usage:        3 bytes
 14303 ;; Hardware stack levels used:    1
 14304 ;; Hardware stack levels required when called:    8
 14305 ;; This function calls:
 14306 ;;		___lwdiv
 14307 ;;		___lwmod
 14308 ;;		_writeData
 14309 ;; This function is called by:
 14310 ;;		_CONTROLLER_init
 14311 ;;		_address_inc
 14312 ;;		_address_dec
 14313 ;; This function uses a non-reentrant model
 14314 ;;
 14315                           
 14316                           
 14317                           ;psect for function _TM1650_fastPrintNum
 14318  0550                     _TM1650_fastPrintNum:	
 14319                           
 14320                           ;tm1650.c: 104:     if(num > 9999){
 14321                           
 14322                           ;incstack = 0
 14323                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14324  0550  3027               	movlw	39
 14325  0551  0140               	movlb	0	; select bank0
 14326  0552  0235               	subwf	TM1650_fastPrintNum@num+1,w
 14327  0553  3010               	movlw	16
 14328  0554  1903               	skipnz
 14329  0555  0234               	subwf	TM1650_fastPrintNum@num,w
 14330  0556  1C03               	skipc
 14331  0557  2D7B               	goto	l5594
 14332                           
 14333                           ;tm1650.c: 105:         writeData(0x34, 0x79);
 14334  0558  3079               	movlw	121
 14335  0559  00B6               	movwf	??_TM1650_fastPrintNum
 14336  055A  0836               	movf	??_TM1650_fastPrintNum,w
 14337  055B  00AE               	movwf	writeData@data
 14338  055C  3034               	movlw	52
 14339  055D  318C  2458  3185   	fcall	_writeData
 14340                           
 14341                           ;tm1650.c: 106:         writeData(0x35, 0x79);
 14342  0560  3079               	movlw	121
 14343  0561  0140               	movlb	0	; select bank0
 14344  0562  00B6               	movwf	??_TM1650_fastPrintNum
 14345  0563  0836               	movf	??_TM1650_fastPrintNum,w
 14346  0564  00AE               	movwf	writeData@data
 14347  0565  3035               	movlw	53
 14348  0566  318C  2458  3185   	fcall	_writeData
 14349                           
 14350                           ;tm1650.c: 107:         writeData(0x36, 0x79);
 14351  0569  3079               	movlw	121
 14352  056A  0140               	movlb	0	; select bank0
 14353  056B  00B6               	movwf	??_TM1650_fastPrintNum
 14354  056C  0836               	movf	??_TM1650_fastPrintNum,w
 14355  056D  00AE               	movwf	writeData@data
 14356  056E  3036               	movlw	54
 14357  056F  318C  2458  3185   	fcall	_writeData
 14358                           
 14359                           ;tm1650.c: 108:         writeData(0x37, 0x79);
 14360  0572  3079               	movlw	121
 14361  0573  0140               	movlb	0	; select bank0
 14362  0574  00B6               	movwf	??_TM1650_fastPrintNum
 14363  0575  0836               	movf	??_TM1650_fastPrintNum,w
 14364  0576  00AE               	movwf	writeData@data
 14365  0577  3037               	movlw	55
 14366  0578  318C  2458         	fcall	_writeData
 14367  057A  0008               	return
 14368  057B                     l5594:	
 14369                           
 14370                           ;tm1650.c: 112:     writeData(0x37, charTable[(num % 10) + 16]);
 14371  057B  300A               	movlw	10
 14372  057C  00A8               	movwf	___lwmod@divisor
 14373  057D  3000               	movlw	0
 14374  057E  00A9               	movwf	___lwmod@divisor+1
 14375  057F  0835               	movf	TM1650_fastPrintNum@num+1,w
 14376  0580  00AB               	movwf	___lwmod@dividend+1
 14377  0581  0834               	movf	TM1650_fastPrintNum@num,w
 14378  0582  00AA               	movwf	___lwmod@dividend
 14379  0583  318D  25EE  3185   	fcall	___lwmod
 14380  0586  0140               	movlb	0	; select bank0
 14381  0587  0829               	movf	?___lwmod+1,w
 14382  0588  0085               	movwf	5
 14383  0589  0828               	movf	?___lwmod,w
 14384  058A  0084               	movwf	4
 14385  058B  30CA               	movlw	low ((_charTable+16)| (0+32768))
 14386  058C  0784               	addwf	4,f
 14387  058D  3086               	movlw	high ((_charTable+16)| (0+32768))
 14388  058E  3D85               	addwfc	5,f
 14389  058F  0800               	movf	0,w	;code access
 14390  0590  00B6               	movwf	??_TM1650_fastPrintNum
 14391  0591  0836               	movf	??_TM1650_fastPrintNum,w
 14392  0592  00AE               	movwf	writeData@data
 14393  0593  3037               	movlw	55
 14394  0594  318C  2458  3185   	fcall	_writeData
 14395                           
 14396                           ;tm1650.c: 113:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 14397  0597  300A               	movlw	10
 14398  0598  0140               	movlb	0	; select bank0
 14399  0599  00A8               	movwf	___lwmod@divisor
 14400  059A  3000               	movlw	0
 14401  059B  00A9               	movwf	___lwmod@divisor+1
 14402  059C  300A               	movlw	10
 14403  059D  00A0               	movwf	___lwdiv@divisor
 14404  059E  3000               	movlw	0
 14405  059F  00A1               	movwf	___lwdiv@divisor+1
 14406  05A0  0835               	movf	TM1650_fastPrintNum@num+1,w
 14407  05A1  00A3               	movwf	___lwdiv@dividend+1
 14408  05A2  0834               	movf	TM1650_fastPrintNum@num,w
 14409  05A3  00A2               	movwf	___lwdiv@dividend
 14410  05A4  318E  26AB  3185   	fcall	___lwdiv
 14411  05A7  0140               	movlb	0	; select bank0
 14412  05A8  0821               	movf	?___lwdiv+1,w
 14413  05A9  00AB               	movwf	___lwmod@dividend+1
 14414  05AA  0820               	movf	?___lwdiv,w
 14415  05AB  00AA               	movwf	___lwmod@dividend
 14416  05AC  318D  25EE  3185   	fcall	___lwmod
 14417  05AF  0140               	movlb	0	; select bank0
 14418  05B0  0829               	movf	?___lwmod+1,w
 14419  05B1  0085               	movwf	5
 14420  05B2  0828               	movf	?___lwmod,w
 14421  05B3  0084               	movwf	4
 14422  05B4  30CA               	movlw	low ((_charTable+16)| (0+32768))
 14423  05B5  0784               	addwf	4,f
 14424  05B6  3086               	movlw	high ((_charTable+16)| (0+32768))
 14425  05B7  3D85               	addwfc	5,f
 14426  05B8  0800               	movf	0,w	;code access
 14427  05B9  00B6               	movwf	??_TM1650_fastPrintNum
 14428  05BA  0836               	movf	??_TM1650_fastPrintNum,w
 14429  05BB  00AE               	movwf	writeData@data
 14430  05BC  3036               	movlw	54
 14431  05BD  318C  2458  3185   	fcall	_writeData
 14432                           
 14433                           ;tm1650.c: 114:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 14434  05C0  300A               	movlw	10
 14435  05C1  0140               	movlb	0	; select bank0
 14436  05C2  00A8               	movwf	___lwmod@divisor
 14437  05C3  3000               	movlw	0
 14438  05C4  00A9               	movwf	___lwmod@divisor+1
 14439  05C5  3064               	movlw	100
 14440  05C6  00A0               	movwf	___lwdiv@divisor
 14441  05C7  3000               	movlw	0
 14442  05C8  00A1               	movwf	___lwdiv@divisor+1
 14443  05C9  0835               	movf	TM1650_fastPrintNum@num+1,w
 14444  05CA  00A3               	movwf	___lwdiv@dividend+1
 14445  05CB  0834               	movf	TM1650_fastPrintNum@num,w
 14446  05CC  00A2               	movwf	___lwdiv@dividend
 14447  05CD  318E  26AB  3185   	fcall	___lwdiv
 14448  05D0  0140               	movlb	0	; select bank0
 14449  05D1  0821               	movf	?___lwdiv+1,w
 14450  05D2  00AB               	movwf	___lwmod@dividend+1
 14451  05D3  0820               	movf	?___lwdiv,w
 14452  05D4  00AA               	movwf	___lwmod@dividend
 14453  05D5  318D  25EE  3185   	fcall	___lwmod
 14454  05D8  0140               	movlb	0	; select bank0
 14455  05D9  0829               	movf	?___lwmod+1,w
 14456  05DA  0085               	movwf	5
 14457  05DB  0828               	movf	?___lwmod,w
 14458  05DC  0084               	movwf	4
 14459  05DD  30CA               	movlw	low ((_charTable+16)| (0+32768))
 14460  05DE  0784               	addwf	4,f
 14461  05DF  3086               	movlw	high ((_charTable+16)| (0+32768))
 14462  05E0  3D85               	addwfc	5,f
 14463  05E1  0800               	movf	0,w	;code access
 14464  05E2  00B6               	movwf	??_TM1650_fastPrintNum
 14465  05E3  0836               	movf	??_TM1650_fastPrintNum,w
 14466  05E4  00AE               	movwf	writeData@data
 14467  05E5  3035               	movlw	53
 14468  05E6  318C  2458  3185   	fcall	_writeData
 14469                           
 14470                           ;tm1650.c: 115:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 14471  05E9  300A               	movlw	10
 14472  05EA  0140               	movlb	0	; select bank0
 14473  05EB  00A8               	movwf	___lwmod@divisor
 14474  05EC  3000               	movlw	0
 14475  05ED  00A9               	movwf	___lwmod@divisor+1
 14476  05EE  30E8               	movlw	232
 14477  05EF  00A0               	movwf	___lwdiv@divisor
 14478  05F0  3003               	movlw	3
 14479  05F1  00A1               	movwf	___lwdiv@divisor+1
 14480  05F2  0835               	movf	TM1650_fastPrintNum@num+1,w
 14481  05F3  00A3               	movwf	___lwdiv@dividend+1
 14482  05F4  0834               	movf	TM1650_fastPrintNum@num,w
 14483  05F5  00A2               	movwf	___lwdiv@dividend
 14484  05F6  318E  26AB  3185   	fcall	___lwdiv
 14485  05F9  0140               	movlb	0	; select bank0
 14486  05FA  0821               	movf	?___lwdiv+1,w
 14487  05FB  00AB               	movwf	___lwmod@dividend+1
 14488  05FC  0820               	movf	?___lwdiv,w
 14489  05FD  00AA               	movwf	___lwmod@dividend
 14490  05FE  318D  25EE  3185   	fcall	___lwmod
 14491  0601  0140               	movlb	0	; select bank0
 14492  0602  0829               	movf	?___lwmod+1,w
 14493  0603  0085               	movwf	5
 14494  0604  0828               	movf	?___lwmod,w
 14495  0605  0084               	movwf	4
 14496  0606  30CA               	movlw	low ((_charTable+16)| (0+32768))
 14497  0607  0784               	addwf	4,f
 14498  0608  3086               	movlw	high ((_charTable+16)| (0+32768))
 14499  0609  3D85               	addwfc	5,f
 14500  060A  0800               	movf	0,w	;code access
 14501  060B  00B6               	movwf	??_TM1650_fastPrintNum
 14502  060C  0836               	movf	??_TM1650_fastPrintNum,w
 14503  060D  00AE               	movwf	writeData@data
 14504  060E  3034               	movlw	52
 14505  060F  318C  2458         	fcall	_writeData
 14506  0611  0008               	return
 14507  0612                     __end_of_TM1650_fastPrintNum:	
 14508                           
 14509                           	psect	text44
 14510  0C58                     __ptext44:	
 14511 ;; *************** function _writeData *****************
 14512 ;; Defined at:
 14513 ;;		line 32 in file "tm1650.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;  address         1    wreg     unsigned char 
 14516 ;;  data            1   14[BANK0 ] unsigned char 
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;  address         1   18[BANK0 ] unsigned char 
 14519 ;;  status          1   19[BANK0 ] enum E11370
 14520 ;; Return value:  Size  Location     Type
 14521 ;;                  1    wreg      void 
 14522 ;; Registers used:
 14523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14529 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14531 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14532 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14533 ;;Total ram usage:        6 bytes
 14534 ;; Hardware stack levels used:    1
 14535 ;; Hardware stack levels required when called:    7
 14536 ;; This function calls:
 14537 ;;		_I2C1_MasterWrite
 14538 ;; This function is called by:
 14539 ;;		_TM1650_enable
 14540 ;;		_TM1650_setDigit
 14541 ;;		_TM1650_fastPrintNum
 14542 ;;		_TM1650_brightness
 14543 ;; This function uses a non-reentrant model
 14544 ;;
 14545                           
 14546                           
 14547                           ;psect for function _writeData
 14548  0C58                     _writeData:	
 14549                           
 14550                           ;incstack = 0
 14551                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14552                           ;writeData@address stored from wreg
 14553  0C58  0140               	movlb	0	; select bank0
 14554  0C59  00B2               	movwf	writeData@address
 14555                           
 14556                           ;tm1650.c: 34:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 14557  0C5A  3002               	movlw	2
 14558  0C5B  00AF               	movwf	??_writeData
 14559  0C5C  082F               	movf	??_writeData,w
 14560  0C5D  00B3               	movwf	writeData@status
 14561                           
 14562                           ;tm1650.c: 35:     I2C1_MasterWrite(&data, 1, address, &status);
 14563  0C5E  01A7               	clrf	I2C1_MasterWrite@length
 14564  0C5F  0AA7               	incf	I2C1_MasterWrite@length,f
 14565  0C60  0832               	movf	writeData@address,w
 14566  0C61  00AF               	movwf	??_writeData
 14567  0C62  01B0               	clrf	??_writeData+1
 14568  0C63  082F               	movf	??_writeData,w
 14569  0C64  00A8               	movwf	I2C1_MasterWrite@address
 14570  0C65  0830               	movf	??_writeData+1,w
 14571  0C66  00A9               	movwf	I2C1_MasterWrite@address+1
 14572  0C67  3033               	movlw	(low (writeData@status| 0))& (0+255)
 14573  0C68  00B1               	movwf	??_writeData+2
 14574  0C69  0831               	movf	??_writeData+2,w
 14575  0C6A  00AA               	movwf	I2C1_MasterWrite@pflag
 14576  0C6B  302E               	movlw	(low (writeData@data| 0))& (0+255)
 14577  0C6C  318D  25C4  318C   	fcall	_I2C1_MasterWrite
 14578  0C6F                     l5470:	
 14579                           ;tm1650.c: 37:     while( status == I2C1_MESSAGE_PENDING );
 14580                           
 14581  0C6F  3002               	movlw	2
 14582  0C70  0140               	movlb	0	; select bank0
 14583  0C71  0633               	xorwf	writeData@status,w
 14584  0C72  1D03               	btfss	3,2
 14585  0C73  0008               	return
 14586  0C74  2C6F               	goto	l5470
 14587  0C75                     __end_of_writeData:	
 14588                           
 14589                           	psect	text45
 14590  0DC4                     __ptext45:	
 14591 ;; *************** function _I2C1_MasterWrite *****************
 14592 ;; Defined at:
 14593 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  pdata           1    wreg     PTR unsigned char 
 14596 ;;		 -> writeData@data(1), 
 14597 ;;  length          1    7[BANK0 ] unsigned char 
 14598 ;;  address         2    8[BANK0 ] unsigned short 
 14599 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 14600 ;;		 -> writeData@status(1), 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 14603 ;;		 -> writeData@data(1), 
 14604 ;; Return value:  Size  Location     Type
 14605 ;;                  1    wreg      void 
 14606 ;; Registers used:
 14607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14616 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14617 ;;Total ram usage:        7 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; Hardware stack levels required when called:    6
 14620 ;; This function calls:
 14621 ;;		_I2C1_MasterTRBInsert
 14622 ;;		_I2C1_MasterWriteTRBBuild
 14623 ;; This function is called by:
 14624 ;;		_writeData
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           
 14629                           ;psect for function _I2C1_MasterWrite
 14630  0DC4                     _I2C1_MasterWrite:	
 14631                           
 14632                           ;incstack = 0
 14633                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14634                           ;I2C1_MasterWrite@pdata stored from wreg
 14635  0DC4  0140               	movlb	0	; select bank0
 14636  0DC5  00AD               	movwf	I2C1_MasterWrite@pdata
 14637                           
 14638                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 14639  0DC6  0141               	movlb	1	; select bank1
 14640  0DC7  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 14641  0DC8  2DE7               	goto	l5464
 14642                           
 14643                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 14644  0DC9  0140               	movlb	0	; select bank0
 14645  0DCA  082D               	movf	I2C1_MasterWrite@pdata,w
 14646  0DCB  00AB               	movwf	??_I2C1_MasterWrite
 14647  0DCC  082B               	movf	??_I2C1_MasterWrite,w
 14648  0DCD  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 14649  0DCE  0827               	movf	I2C1_MasterWrite@length,w
 14650  0DCF  00AC               	movwf	??_I2C1_MasterWrite+1
 14651  0DD0  082C               	movf	??_I2C1_MasterWrite+1,w
 14652  0DD1  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 14653  0DD2  0829               	movf	I2C1_MasterWrite@address+1,w
 14654  0DD3  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 14655  0DD4  0828               	movf	I2C1_MasterWrite@address,w
 14656  0DD5  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 14657  0DD6  3054               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 14658  0DD7  318D  250D  318D   	fcall	_I2C1_MasterWriteTRBBuild
 14659                           
 14660                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 14661  0DDA  3054               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 14662  0DDB  0140               	movlb	0	; select bank0
 14663  0DDC  00AB               	movwf	??_I2C1_MasterWrite
 14664  0DDD  082B               	movf	??_I2C1_MasterWrite,w
 14665  0DDE  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 14666  0DDF  082A               	movf	I2C1_MasterWrite@pflag,w
 14667  0DE0  00AC               	movwf	??_I2C1_MasterWrite+1
 14668  0DE1  082C               	movf	??_I2C1_MasterWrite+1,w
 14669  0DE2  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 14670  0DE3  3001               	movlw	1
 14671  0DE4  3187  276D         	fcall	_I2C1_MasterTRBInsert
 14672                           
 14673                           ;mcc_generated_files/i2c1.c: 613:     }
 14674  0DE6  0008               	return
 14675  0DE7                     l5464:	
 14676                           
 14677                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 14678  0DE7  0140               	movlb	0	; select bank0
 14679  0DE8  082A               	movf	I2C1_MasterWrite@pflag,w
 14680  0DE9  0086               	movwf	6
 14681  0DEA  0187               	clrf	7
 14682  0DEB  0181               	clrf	1
 14683  0DEC  0A81               	incf	1,f
 14684  0DED  0008               	return
 14685  0DEE                     __end_of_I2C1_MasterWrite:	
 14686                           
 14687                           	psect	text46
 14688  0D0D                     __ptext46:	
 14689 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 14690 ;; Defined at:
 14691 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 14692 ;; Parameters:    Size  Location     Type
 14693 ;;  ptrb            1    wreg     PTR struct .
 14694 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 14695 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 14696 ;;		 -> writeData@data(1), 
 14697 ;;  length          1    1[BANK0 ] unsigned char 
 14698 ;;  address         2    2[BANK0 ] unsigned short 
 14699 ;; Auto vars:     Size  Location     Type
 14700 ;;  ptrb            1    6[BANK0 ] PTR struct .
 14701 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 14702 ;; Return value:  Size  Location     Type
 14703 ;;                  1    wreg      void 
 14704 ;; Registers used:
 14705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14706 ;; Tracked objects:
 14707 ;;		On entry : 0/0
 14708 ;;		On exit  : 0/0
 14709 ;;		Unchanged: 0/0
 14710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14714 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14715 ;;Total ram usage:        7 bytes
 14716 ;; Hardware stack levels used:    1
 14717 ;; Hardware stack levels required when called:    4
 14718 ;; This function calls:
 14719 ;;		Nothing
 14720 ;; This function is called by:
 14721 ;;		_I2C1_MasterWrite
 14722 ;; This function uses a non-reentrant model
 14723 ;;
 14724                           
 14725                           
 14726                           ;psect for function _I2C1_MasterWriteTRBBuild
 14727  0D0D                     _I2C1_MasterWriteTRBBuild:	
 14728                           
 14729                           ;incstack = 0
 14730                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 14731                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 14732  0D0D  0140               	movlb	0	; select bank0
 14733  0D0E  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 14734                           
 14735                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 14736  0D0F  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 14737  0D10  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 14738  0D11  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 14739  0D12  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14740  0D13  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 14741  0D14  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 14742  0D15  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14743  0D16  0086               	movwf	6
 14744  0D17  3001               	movlw	1	; select bank2/3
 14745  0D18  0087               	movwf	7
 14746  0D19  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14747  0D1A  3FC0               	movwi [0]fsr1
 14748  0D1B  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 14749  0D1C  3FC1               	movwi [1]fsr1
 14750                           
 14751                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 14752  0D1D  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 14753  0D1E  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14754  0D1F  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14755  0D20  3E02               	addlw	2
 14756  0D21  0086               	movwf	6
 14757  0D22  3001               	movlw	1	; select bank2/3
 14758  0D23  0087               	movwf	7
 14759  0D24  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14760  0D25  0081               	movwf	1
 14761                           
 14762                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 14763  0D26  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 14764  0D27  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14765  0D28  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14766  0D29  3E03               	addlw	3
 14767  0D2A  0086               	movwf	6
 14768  0D2B  3001               	movlw	1	; select bank2/3
 14769  0D2C  0087               	movwf	7
 14770  0D2D  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14771  0D2E  0081               	movwf	1
 14772  0D2F  0008               	return
 14773  0D30                     __end_of_I2C1_MasterWriteTRBBuild:	
 14774                           
 14775                           	psect	text47
 14776  076D                     __ptext47:	
 14777 ;; *************** function _I2C1_MasterTRBInsert *****************
 14778 ;; Defined at:
 14779 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  count           1    wreg     unsigned char 
 14782 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 14783 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 14784 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 14785 ;;		 -> writeData@status(1), 
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;  count           1    3[BANK0 ] unsigned char 
 14788 ;; Return value:  Size  Location     Type
 14789 ;;                  1    wreg      void 
 14790 ;; Registers used:
 14791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14792 ;; Tracked objects:
 14793 ;;		On entry : 0/0
 14794 ;;		On exit  : 0/0
 14795 ;;		Unchanged: 0/0
 14796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14801 ;;Total ram usage:        4 bytes
 14802 ;; Hardware stack levels used:    1
 14803 ;; Hardware stack levels required when called:    5
 14804 ;; This function calls:
 14805 ;;		_I2C1_WaitForLastPacketToComplete
 14806 ;; This function is called by:
 14807 ;;		_I2C1_MasterWrite
 14808 ;;		_I2C1_MasterRead
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           
 14813                           ;psect for function _I2C1_MasterTRBInsert
 14814  076D                     _I2C1_MasterTRBInsert:	
 14815                           
 14816                           ;incstack = 0
 14817                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14818                           ;I2C1_MasterTRBInsert@count stored from wreg
 14819  076D  0140               	movlb	0	; select bank0
 14820  076E  00A3               	movwf	I2C1_MasterTRBInsert@count
 14821                           
 14822                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 14823  076F  0141               	movlb	1	; select bank1
 14824  0770  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 14825  0771  2FAC               	goto	l5452
 14826                           
 14827                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 14828  0772  3002               	movlw	2
 14829  0773  0140               	movlb	0	; select bank0
 14830  0774  00A2               	movwf	??_I2C1_MasterTRBInsert
 14831  0775  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14832  0776  0086               	movwf	6
 14833  0777  0187               	clrf	7
 14834  0778  0822               	movf	??_I2C1_MasterTRBInsert,w
 14835  0779  0081               	movwf	1
 14836                           
 14837                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 14838  077A  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 14839  077B  00A2               	movwf	??_I2C1_MasterTRBInsert
 14840  077C  0141               	movlb	1	; select bank1
 14841  077D  0A20               	incf	_i2c1_object^(0+128),w
 14842  077E  0086               	movwf	6
 14843  077F  0187               	clrf	7
 14844  0780  0140               	movlb	0	; select bank0
 14845  0781  0822               	movf	??_I2C1_MasterTRBInsert,w
 14846  0782  0081               	movwf	1
 14847                           
 14848                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 14849  0783  0823               	movf	I2C1_MasterTRBInsert@count,w
 14850  0784  00A2               	movwf	??_I2C1_MasterTRBInsert
 14851  0785  0141               	movlb	1	; select bank1
 14852  0786  0820               	movf	_i2c1_object^(0+128),w
 14853  0787  0086               	movwf	6
 14854  0788  0187               	clrf	7
 14855  0789  0140               	movlb	0	; select bank0
 14856  078A  0822               	movf	??_I2C1_MasterTRBInsert,w
 14857  078B  0081               	movwf	1
 14858                           
 14859                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 14860  078C  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14861  078D  00A2               	movwf	??_I2C1_MasterTRBInsert
 14862  078E  0141               	movlb	1	; select bank1
 14863  078F  0820               	movf	_i2c1_object^(0+128),w
 14864  0790  3E02               	addlw	2
 14865  0791  0086               	movwf	6
 14866  0792  0187               	clrf	7
 14867  0793  0140               	movlb	0	; select bank0
 14868  0794  0822               	movf	??_I2C1_MasterTRBInsert,w
 14869  0795  0081               	movwf	1
 14870                           
 14871                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 14872  0796  3003               	movlw	3
 14873  0797  00A2               	movwf	??_I2C1_MasterTRBInsert
 14874  0798  0822               	movf	??_I2C1_MasterTRBInsert,w
 14875  0799  0141               	movlb	1	; select bank1
 14876  079A  07A0               	addwf	_i2c1_object^(0+128),f
 14877                           
 14878                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 14879  079B  0820               	movf	_i2c1_object^(0+128),w
 14880  079C  3AD4               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 14881  079D  1D03               	skipz
 14882  079E  2FA5               	goto	l5448
 14883                           
 14884                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 14885  079F  30D1               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 14886  07A0  0140               	movlb	0	; select bank0
 14887  07A1  00A2               	movwf	??_I2C1_MasterTRBInsert
 14888  07A2  0822               	movf	??_I2C1_MasterTRBInsert,w
 14889  07A3  0141               	movlb	1	; select bank1
 14890  07A4  00A0               	movwf	_i2c1_object^(0+128)
 14891  07A5                     l5448:	
 14892                           
 14893                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 14894  07A5  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 14895                           
 14896                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 14897  07A6  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14898  07A7  0620               	xorwf	_i2c1_object^(0+128),w
 14899  07A8  1D03               	skipz
 14900  07A9  2FB2               	goto	l5454
 14901                           
 14902                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 14903  07AA  1422               	bsf	(_i2c1_object^(0+128)+2),0
 14904  07AB  2FB2               	goto	l5454
 14905  07AC                     l5452:	
 14906                           
 14907                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 14908  07AC  0140               	movlb	0	; select bank0
 14909  07AD  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14910  07AE  0086               	movwf	6
 14911  07AF  0187               	clrf	7
 14912  07B0  0181               	clrf	1
 14913  07B1  0A81               	incf	1,f
 14914  07B2                     l5454:	
 14915                           
 14916                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 14917  07B2  0140               	movlb	0	; select bank0
 14918  07B3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14919  07B4  0086               	movwf	6
 14920  07B5  0187               	clrf	7
 14921  07B6  3002               	movlw	2
 14922  07B7  0601               	xorwf	1,w
 14923  07B8  1D03               	btfss	3,2
 14924  07B9  0008               	return
 14925                           
 14926                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 14927  07BA  3189  21FF         	fcall	_I2C1_WaitForLastPacketToComplete
 14928                           
 14929                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 14930  07BC  014E               	movlb	14	; select bank14
 14931  07BD  140F               	bsf	15,0	;volatile
 14932  07BE  0008               	return
 14933  07BF                     __end_of_I2C1_MasterTRBInsert:	
 14934                           
 14935                           	psect	text48
 14936  09FF                     __ptext48:	
 14937 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 14938 ;; Defined at:
 14939 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;		None
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  1    wreg      void 
 14946 ;; Registers used:
 14947 ;;		wreg, status,2, status,0
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14957 ;;Total ram usage:        0 bytes
 14958 ;; Hardware stack levels used:    1
 14959 ;; Hardware stack levels required when called:    4
 14960 ;; This function calls:
 14961 ;;		Nothing
 14962 ;; This function is called by:
 14963 ;;		_I2C1_MasterTRBInsert
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           
 14968                           ;psect for function _I2C1_WaitForLastPacketToComplete
 14969  09FF                     _I2C1_WaitForLastPacketToComplete:	
 14970  09FF                     l4404:	
 14971                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 14972                           
 14973                           ;incstack = 0
 14974                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 14975                           
 14976                           
 14977                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 14978  09FF  0141               	movlb	1	; select bank1
 14979  0A00  084E               	movf	_i2c1_state^(0+128),w
 14980  0A01  1903               	btfsc	3,2
 14981  0A02  0008               	return
 14982  0A03  29FF               	goto	l4404
 14983  0A04                     __end_of_I2C1_WaitForLastPacketToComplete:	
 14984                           
 14985                           	psect	text49
 14986  0DEE                     __ptext49:	
 14987 ;; *************** function ___lwmod *****************
 14988 ;; Defined at:
 14989 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  divisor         2    8[BANK0 ] unsigned int 
 14992 ;;  dividend        2   10[BANK0 ] unsigned int 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;  counter         1   13[BANK0 ] unsigned char 
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  2    8[BANK0 ] unsigned int 
 14997 ;; Registers used:
 14998 ;;		wreg, status,2, status,0
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15007 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15008 ;;Total ram usage:        6 bytes
 15009 ;; Hardware stack levels used:    1
 15010 ;; Hardware stack levels required when called:    4
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		_TM1650_fastPrintNum
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           
 15019                           ;psect for function ___lwmod
 15020  0DEE                     ___lwmod:	
 15021                           
 15022                           ;incstack = 0
 15023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15024  0DEE  0140               	movlb	0	; select bank0
 15025  0DEF  0828               	movf	___lwmod@divisor,w
 15026  0DF0  0429               	iorwf	___lwmod@divisor+1,w
 15027  0DF1  1903               	btfsc	3,2
 15028  0DF2  2E16               	goto	l3486
 15029  0DF3  01AD               	clrf	___lwmod@counter
 15030  0DF4  0AAD               	incf	___lwmod@counter,f
 15031  0DF5                     l3476:	
 15032  0DF5  1BA9               	btfsc	___lwmod@divisor+1,7
 15033  0DF6  2E01               	goto	l3478
 15034  0DF7  3001               	movlw	1
 15035  0DF8                     u1815:	
 15036  0DF8  35A8               	lslf	___lwmod@divisor,f
 15037  0DF9  0DA9               	rlf	___lwmod@divisor+1,f
 15038  0DFA  0B89               	decfsz	9,f
 15039  0DFB  2DF8               	goto	u1815
 15040  0DFC  3001               	movlw	1
 15041  0DFD  00AC               	movwf	??___lwmod
 15042  0DFE  082C               	movf	??___lwmod,w
 15043  0DFF  07AD               	addwf	___lwmod@counter,f
 15044  0E00  2DF5               	goto	l3476
 15045  0E01                     l3478:	
 15046  0E01  0829               	movf	___lwmod@divisor+1,w
 15047  0E02  022B               	subwf	___lwmod@dividend+1,w
 15048  0E03  1D03               	skipz
 15049  0E04  2E07               	goto	u1835
 15050  0E05  0828               	movf	___lwmod@divisor,w
 15051  0E06  022A               	subwf	___lwmod@dividend,w
 15052  0E07                     u1835:	
 15053  0E07  1C03               	skipc
 15054  0E08  2E0D               	goto	l3482
 15055  0E09  0828               	movf	___lwmod@divisor,w
 15056  0E0A  02AA               	subwf	___lwmod@dividend,f
 15057  0E0B  0829               	movf	___lwmod@divisor+1,w
 15058  0E0C  3BAB               	subwfb	___lwmod@dividend+1,f
 15059  0E0D                     l3482:	
 15060  0E0D  3001               	movlw	1
 15061  0E0E                     u1845:	
 15062  0E0E  36A9               	lsrf	___lwmod@divisor+1,f
 15063  0E0F  0CA8               	rrf	___lwmod@divisor,f
 15064  0E10  0B89               	decfsz	9,f
 15065  0E11  2E0E               	goto	u1845
 15066  0E12  3001               	movlw	1
 15067  0E13  02AD               	subwf	___lwmod@counter,f
 15068  0E14  1D03               	btfss	3,2
 15069  0E15  2E01               	goto	l3478
 15070  0E16                     l3486:	
 15071  0E16  082B               	movf	___lwmod@dividend+1,w
 15072  0E17  00A9               	movwf	?___lwmod+1
 15073  0E18  082A               	movf	___lwmod@dividend,w
 15074  0E19  00A8               	movwf	?___lwmod
 15075  0E1A  0008               	return
 15076  0E1B                     __end_of___lwmod:	
 15077                           
 15078                           	psect	text50
 15079  0A04                     __ptext50:	
 15080 ;; *************** function _CLOCK_init *****************
 15081 ;; Defined at:
 15082 ;;		line 8 in file "clock.c"
 15083 ;; Parameters:    Size  Location     Type
 15084 ;;		None
 15085 ;; Auto vars:     Size  Location     Type
 15086 ;;		None
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1    wreg      void 
 15089 ;; Registers used:
 15090 ;;		wreg, status,2, status,0, pclath, cstack
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15100 ;;Total ram usage:        0 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:    5
 15103 ;; This function calls:
 15104 ;;		_TMR0_SetInterruptHandler
 15105 ;; This function is called by:
 15106 ;;		_main
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110                           
 15111                           ;psect for function _CLOCK_init
 15112  0A04                     _CLOCK_init:	
 15113                           
 15114                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 15115                           
 15116                           ;incstack = 0
 15117                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 15118  0A04  30F9               	movlw	low _CLOCK_timerCallback
 15119  0A05  0140               	movlb	0	; select bank0
 15120  0A06  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 15121  0A07  3007               	movlw	high _CLOCK_timerCallback
 15122  0A08  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 15123  0A09  318A  2238         	fcall	_TMR0_SetInterruptHandler
 15124  0A0B  0008               	return
 15125  0A0C                     __end_of_CLOCK_init:	
 15126                           
 15127                           	psect	text51
 15128  0A38                     __ptext51:	
 15129 ;; *************** function _TMR0_SetInterruptHandler *****************
 15130 ;; Defined at:
 15131 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15134 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 0/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15150 ;;Total ram usage:        2 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; Hardware stack levels required when called:    4
 15153 ;; This function calls:
 15154 ;;		Nothing
 15155 ;; This function is called by:
 15156 ;;		_TMR0_Initialize
 15157 ;;		_CLOCK_init
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           
 15162                           ;psect for function _TMR0_SetInterruptHandler
 15163  0A38                     _TMR0_SetInterruptHandler:	
 15164                           
 15165                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 15166                           
 15167                           ;incstack = 0
 15168                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 15169  0A38  0140               	movlb	0	; select bank0
 15170  0A39  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 15171  0A3A  0141               	movlb	1	; select bank1
 15172  0A3B  00EB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 15173  0A3C  0140               	movlb	0	; select bank0
 15174  0A3D  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 15175  0A3E  0141               	movlb	1	; select bank1
 15176  0A3F  00EA               	movwf	_TMR0_InterruptHandler^(0+128)
 15177  0A40  0008               	return
 15178  0A41                     __end_of_TMR0_SetInterruptHandler:	
 15179                           
 15180                           	psect	text52
 15181  02BE                     __ptext52:	
 15182 ;; *************** function _BUTTONS_task *****************
 15183 ;; Defined at:
 15184 ;;		line 59 in file "buttons.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;		None
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;  btn             1    8[BANK0 ] PTR struct .
 15189 ;;		 -> buttons(32), 
 15190 ;;  i               1    5[BANK0 ] unsigned char 
 15191 ;;  time            2    6[BANK0 ] unsigned short 
 15192 ;; Return value:  Size  Location     Type
 15193 ;;                  1    wreg      void 
 15194 ;; Registers used:
 15195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15196 ;; Tracked objects:
 15197 ;;		On entry : 0/0
 15198 ;;		On exit  : 0/0
 15199 ;;		Unchanged: 0/0
 15200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15203 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15204 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15205 ;;Total ram usage:        7 bytes
 15206 ;; Hardware stack levels used:    1
 15207 ;; Hardware stack levels required when called:    5
 15208 ;; This function calls:
 15209 ;;		_CLOCK_getTime
 15210 ;; This function is called by:
 15211 ;;		_main
 15212 ;; This function uses a non-reentrant model
 15213 ;;
 15214                           
 15215                           
 15216                           ;psect for function _BUTTONS_task
 15217  02BE                     _BUTTONS_task:	
 15218                           
 15219                           ;buttons.c: 61:     time_t time = CLOCK_getTime();
 15220                           
 15221                           ;incstack = 0
 15222                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15223  02BE  318A  222F  3182   	fcall	_CLOCK_getTime
 15224  02C1  0140               	movlb	0	; select bank0
 15225  02C2  0821               	movf	?_CLOCK_getTime+1,w
 15226  02C3  00A7               	movwf	BUTTONS_task@time+1
 15227  02C4  0820               	movf	?_CLOCK_getTime,w
 15228  02C5  00A6               	movwf	BUTTONS_task@time
 15229                           
 15230                           ;buttons.c: 64:     if (time - lastTime < 5)
 15231  02C6  0141               	movlb	1	; select bank1
 15232  02C7  083F               	movf	_lastTime^(0+128),w
 15233  02C8  0140               	movlb	0	; select bank0
 15234  02C9  0226               	subwf	BUTTONS_task@time,w
 15235  02CA  00A2               	movwf	??_BUTTONS_task
 15236  02CB  0141               	movlb	1	; select bank1
 15237  02CC  0840               	movf	(_lastTime+1)^(0+128),w
 15238  02CD  0140               	movlb	0	; select bank0
 15239  02CE  3B27               	subwfb	BUTTONS_task@time+1,w
 15240  02CF  00A3               	movwf	??_BUTTONS_task+1
 15241  02D0  3000               	movlw	0
 15242  02D1  0223               	subwf	??_BUTTONS_task+1,w
 15243  02D2  3005               	movlw	5
 15244  02D3  1903               	skipnz
 15245  02D4  0222               	subwf	??_BUTTONS_task,w
 15246  02D5  1C03               	btfss	3,0
 15247  02D6  0008               	return
 15248                           
 15249                           ;buttons.c: 67:     lastTime = time;
 15250  02D7  0827               	movf	BUTTONS_task@time+1,w
 15251  02D8  0141               	movlb	1	; select bank1
 15252  02D9  00C0               	movwf	(_lastTime+1)^(0+128)
 15253  02DA  0140               	movlb	0	; select bank0
 15254  02DB  0826               	movf	BUTTONS_task@time,w
 15255  02DC  0141               	movlb	1	; select bank1
 15256  02DD  00BF               	movwf	_lastTime^(0+128)
 15257                           
 15258                           ;buttons.c: 70:     for (uint8_t i = 0; i < 4; i++) {
 15259  02DE  0140               	movlb	0	; select bank0
 15260  02DF  01A5               	clrf	BUTTONS_task@i
 15261  02E0                     l5098:	
 15262                           
 15263                           ;buttons.c: 71:         button_t* btn = buttons + i;
 15264  02E0  0825               	movf	BUTTONS_task@i,w
 15265  02E1  00A2               	movwf	??_BUTTONS_task
 15266  02E2  3002               	movlw	2
 15267  02E3                     u3515:	
 15268  02E3  35A2               	lslf	??_BUTTONS_task,f
 15269  02E4  3EFF               	addlw	-1
 15270  02E5  1D03               	skipz
 15271  02E6  2AE3               	goto	u3515
 15272  02E7  3522               	lslf	??_BUTTONS_task,w
 15273  02E8  3E30               	addlw	(low (_buttons| (0+256)))& (0+255)
 15274  02E9  00A3               	movwf	??_BUTTONS_task+1
 15275  02EA  0823               	movf	??_BUTTONS_task+1,w
 15276  02EB  00A8               	movwf	BUTTONS_task@btn
 15277                           
 15278                           ;buttons.c: 74:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 15279  02EC  0828               	movf	BUTTONS_task@btn,w
 15280  02ED  0086               	movwf	6
 15281  02EE  3001               	movlw	1	; select bank2/3
 15282  02EF  0087               	movwf	7
 15283  02F0  3F40               	moviw [0]fsr1
 15284  02F1  00A2               	movwf	??_BUTTONS_task
 15285  02F2  3F41               	moviw [1]fsr1
 15286  02F3  00A3               	movwf	??_BUTTONS_task+1
 15287  02F4  0822               	movf	??_BUTTONS_task,w
 15288  02F5  0086               	movwf	6
 15289  02F6  0823               	movf	??_BUTTONS_task+1,w
 15290  02F7  0087               	movwf	7
 15291  02F8  3001               	movlw	1
 15292  02F9  00A4               	movwf	??_BUTTONS_task+2
 15293  02FA  0828               	movf	BUTTONS_task@btn,w
 15294  02FB  3E02               	addlw	2
 15295  02FC  0084               	movwf	4
 15296  02FD  3001               	movlw	1	; select bank2/3
 15297  02FE  0085               	movwf	5
 15298  02FF  0A00               	incf	0,w
 15299  0300  2B02               	goto	u3524
 15300  0301                     u3525:	
 15301  0301  35A4               	lslf	??_BUTTONS_task+2,f
 15302  0302                     u3524:	
 15303  0302  0B89               	decfsz	9,f
 15304  0303  2B01               	goto	u3525
 15305  0304  0824               	movf	??_BUTTONS_task+2,w
 15306  0305  0501               	andwf	1,w
 15307  0306  1D03               	btfss	3,2
 15308  0307  2B21               	goto	l5106
 15309                           
 15310                           ;buttons.c: 75:             btn->state = STATE_PRESSED;
 15311  0308  0828               	movf	BUTTONS_task@btn,w
 15312  0309  3E03               	addlw	3
 15313  030A  0086               	movwf	6
 15314  030B  3001               	movlw	1	; select bank2/3
 15315  030C  0087               	movwf	7
 15316  030D  0181               	clrf	1
 15317  030E  0A81               	incf	1,f
 15318                           
 15319                           ;buttons.c: 76:             if(btn->event == EVENT_IDLE){
 15320  030F  0828               	movf	BUTTONS_task@btn,w
 15321  0310  3E07               	addlw	7
 15322  0311  0086               	movwf	6
 15323  0312  3001               	movlw	1	; select bank2/3
 15324  0313  0087               	movwf	7
 15325  0314  0801               	movf	1,w
 15326  0315  1D03               	btfss	3,2
 15327  0316  2B27               	goto	l917
 15328                           
 15329                           ;buttons.c: 77:                 btn->lastHoldTime = time;
 15330  0317  0828               	movf	BUTTONS_task@btn,w
 15331  0318  3E05               	addlw	5
 15332  0319  0086               	movwf	6
 15333  031A  3001               	movlw	1	; select bank2/3
 15334  031B  0087               	movwf	7
 15335  031C  0826               	movf	BUTTONS_task@time,w
 15336  031D  3FC0               	movwi [0]fsr1
 15337  031E  0827               	movf	BUTTONS_task@time+1,w
 15338  031F  3FC1               	movwi [1]fsr1
 15339  0320  2B27               	goto	l917
 15340  0321                     l5106:	
 15341                           
 15342                           ;buttons.c: 80:             btn->state = STATE_UNPRESSED;
 15343  0321  0828               	movf	BUTTONS_task@btn,w
 15344  0322  3E03               	addlw	3
 15345  0323  0086               	movwf	6
 15346  0324  3001               	movlw	1	; select bank2/3
 15347  0325  0087               	movwf	7
 15348  0326  0181               	clrf	1
 15349  0327                     l917:	
 15350                           ;buttons.c: 81:         }
 15351                           
 15352                           
 15353                           ;buttons.c: 83:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 15354  0327  0828               	movf	BUTTONS_task@btn,w
 15355  0328  3E03               	addlw	3
 15356  0329  0086               	movwf	6
 15357  032A  3001               	movlw	1	; select bank2/3
 15358  032B  0087               	movwf	7
 15359  032C  0801               	movf	1,w
 15360  032D  1D03               	btfss	3,2
 15361  032E  2B3F               	goto	l5112
 15362  032F  0828               	movf	BUTTONS_task@btn,w
 15363  0330  3E04               	addlw	4
 15364  0331  0086               	movwf	6
 15365  0332  3001               	movlw	1	; select bank2/3
 15366  0333  0087               	movwf	7
 15367  0334  0301               	decf	1,w
 15368  0335  1D03               	btfss	3,2
 15369  0336  2B3F               	goto	l5112
 15370                           
 15371                           ;buttons.c: 85:             btn->event = EVENT_PRESSED;
 15372  0337  0828               	movf	BUTTONS_task@btn,w
 15373  0338  3E07               	addlw	7
 15374  0339  0086               	movwf	6
 15375  033A  3001               	movlw	1	; select bank2/3
 15376  033B  0087               	movwf	7
 15377  033C  0181               	clrf	1
 15378  033D  0A81               	incf	1,f
 15379                           
 15380                           ;buttons.c: 86:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 15381  033E  2B8C               	goto	l919
 15382  033F                     l5112:	
 15383  033F  0828               	movf	BUTTONS_task@btn,w
 15384  0340  3E03               	addlw	3
 15385  0341  0086               	movwf	6
 15386  0342  3001               	movlw	1	; select bank2/3
 15387  0343  0087               	movwf	7
 15388  0344  0301               	decf	1,w
 15389  0345  1D03               	btfss	3,2
 15390  0346  2B6D               	goto	l5122
 15391  0347  0828               	movf	BUTTONS_task@btn,w
 15392  0348  3E04               	addlw	4
 15393  0349  0086               	movwf	6
 15394  034A  3001               	movlw	1	; select bank2/3
 15395  034B  0087               	movwf	7
 15396  034C  0301               	decf	1,w
 15397  034D  1D03               	btfss	3,2
 15398  034E  2B6D               	goto	l5122
 15399                           
 15400                           ;buttons.c: 87:             if(time - btn->lastHoldTime > 500){
 15401  034F  0828               	movf	BUTTONS_task@btn,w
 15402  0350  3E05               	addlw	5
 15403  0351  0086               	movwf	6
 15404  0352  3001               	movlw	1	; select bank2/3
 15405  0353  0087               	movwf	7
 15406  0354  3F40               	moviw [0]fsr1
 15407  0355  0226               	subwf	BUTTONS_task@time,w
 15408  0356  00A2               	movwf	??_BUTTONS_task
 15409  0357  3F41               	moviw [1]fsr1
 15410  0358  3B27               	subwfb	BUTTONS_task@time+1,w
 15411  0359  00A3               	movwf	??_BUTTONS_task+1
 15412  035A  3001               	movlw	1
 15413  035B  0223               	subwf	??_BUTTONS_task+1,w
 15414  035C  30F5               	movlw	245
 15415  035D  1903               	skipnz
 15416  035E  0222               	subwf	??_BUTTONS_task,w
 15417  035F  1C03               	skipc
 15418  0360  2B63               	goto	l5120
 15419                           
 15420                           ;buttons.c: 88:                 btn->event = EVENT_HELD;
 15421  0361  3003               	movlw	3
 15422  0362  2B64               	goto	L12
 15423  0363                     l5120:	
 15424                           ;buttons.c: 89:             } else {
 15425                           
 15426                           
 15427                           ;buttons.c: 90:                 btn->event = EVENT_INTER_HOLD;
 15428  0363  3002               	movlw	2
 15429  0364                     L12:	
 15430  0364  00A2               	movwf	??_BUTTONS_task
 15431  0365  0828               	movf	BUTTONS_task@btn,w
 15432  0366  3E07               	addlw	7
 15433  0367  0086               	movwf	6
 15434  0368  3001               	movlw	1	; select bank2/3
 15435  0369  0087               	movwf	7
 15436  036A  0822               	movf	??_BUTTONS_task,w
 15437  036B  0081               	movwf	1
 15438  036C  2B8C               	goto	l919
 15439  036D                     l5122:	
 15440  036D  0828               	movf	BUTTONS_task@btn,w
 15441  036E  3E03               	addlw	3
 15442  036F  0086               	movwf	6
 15443  0370  3001               	movlw	1	; select bank2/3
 15444  0371  0087               	movwf	7
 15445  0372  0801               	movf	1,w
 15446  0373  1D03               	btfss	3,2
 15447  0374  2B8C               	goto	l919
 15448  0375  0828               	movf	BUTTONS_task@btn,w
 15449  0376  3E04               	addlw	4
 15450  0377  0086               	movwf	6
 15451  0378  3001               	movlw	1	; select bank2/3
 15452  0379  0087               	movwf	7
 15453  037A  0301               	decf	1,w
 15454  037B  1D03               	btfss	3,2
 15455  037C  2B8C               	goto	l919
 15456  037D  0828               	movf	BUTTONS_task@btn,w
 15457  037E  3E07               	addlw	7
 15458  037F  0086               	movwf	6
 15459  0380  3001               	movlw	1	; select bank2/3
 15460  0381  0087               	movwf	7
 15461  0382  3003               	movlw	3
 15462  0383  0601               	xorwf	1,w
 15463  0384  1D03               	btfss	3,2
 15464  0385  2B8C               	goto	l919
 15465                           
 15466                           ;buttons.c: 93:             btn->event = EVENT_IDLE;
 15467  0386  0828               	movf	BUTTONS_task@btn,w
 15468  0387  3E07               	addlw	7
 15469  0388  0086               	movwf	6
 15470  0389  3001               	movlw	1	; select bank2/3
 15471  038A  0087               	movwf	7
 15472  038B  0181               	clrf	1
 15473  038C                     l919:	
 15474                           
 15475                           ;buttons.c: 96:         btn->lastState = btn->state;
 15476  038C  0828               	movf	BUTTONS_task@btn,w
 15477  038D  3E03               	addlw	3
 15478  038E  0086               	movwf	6
 15479  038F  3001               	movlw	1	; select bank2/3
 15480  0390  0087               	movwf	7
 15481  0391  0801               	movf	1,w
 15482  0392  00A2               	movwf	??_BUTTONS_task
 15483  0393  0828               	movf	BUTTONS_task@btn,w
 15484  0394  3E04               	addlw	4
 15485  0395  0086               	movwf	6
 15486  0396  3001               	movlw	1	; select bank2/3
 15487  0397  0087               	movwf	7
 15488  0398  0822               	movf	??_BUTTONS_task,w
 15489  0399  0081               	movwf	1
 15490                           
 15491                           ;buttons.c: 97:     }
 15492  039A  3001               	movlw	1
 15493  039B  00A2               	movwf	??_BUTTONS_task
 15494  039C  0822               	movf	??_BUTTONS_task,w
 15495  039D  07A5               	addwf	BUTTONS_task@i,f
 15496  039E  3004               	movlw	4
 15497  039F  0225               	subwf	BUTTONS_task@i,w
 15498  03A0  1803               	btfsc	3,0
 15499  03A1  0008               	return
 15500  03A2  2AE0               	goto	l5098
 15501  03A3                     __end_of_BUTTONS_task:	
 15502                           
 15503                           	psect	text53
 15504  0FB8                     __ptext53:	
 15505 ;; *************** function _BUTTONS_init *****************
 15506 ;; Defined at:
 15507 ;;		line 26 in file "buttons.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;		None
 15510 ;; Auto vars:     Size  Location     Type
 15511 ;;		None
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  1    wreg      void 
 15514 ;; Registers used:
 15515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15516 ;; Tracked objects:
 15517 ;;		On entry : 0/0
 15518 ;;		On exit  : 0/0
 15519 ;;		Unchanged: 0/0
 15520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15525 ;;Total ram usage:        1 bytes
 15526 ;; Hardware stack levels used:    1
 15527 ;; Hardware stack levels required when called:    5
 15528 ;; This function calls:
 15529 ;;		_GPIO_init
 15530 ;;		_init
 15531 ;; This function is called by:
 15532 ;;		_main
 15533 ;; This function uses a non-reentrant model
 15534 ;;
 15535                           
 15536                           
 15537                           ;psect for function _BUTTONS_init
 15538  0FB8                     _BUTTONS_init:	
 15539                           
 15540                           ;buttons.c: 27:     menu = &buttons[0];
 15541                           
 15542                           ;incstack = 0
 15543                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15544  0FB8  3030               	movlw	(low (_buttons| (0+256)))& (0+255)
 15545  0FB9  0140               	movlb	0	; select bank0
 15546  0FBA  00A5               	movwf	??_BUTTONS_init
 15547  0FBB  0825               	movf	??_BUTTONS_init,w
 15548  0FBC  0141               	movlb	1	; select bank1
 15549  0FBD  00C7               	movwf	_menu^(0+128)
 15550                           
 15551                           ;buttons.c: 28:     up = &buttons[1];
 15552  0FBE  3038               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 15553  0FBF  0140               	movlb	0	; select bank0
 15554  0FC0  00A5               	movwf	??_BUTTONS_init
 15555  0FC1  0825               	movf	??_BUTTONS_init,w
 15556  0FC2  00F3               	movwf	_up
 15557                           
 15558                           ;buttons.c: 29:     down = &buttons[2];
 15559  0FC3  3040               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 15560  0FC4  00A5               	movwf	??_BUTTONS_init
 15561  0FC5  0825               	movf	??_BUTTONS_init,w
 15562  0FC6  00F2               	movwf	_down
 15563                           
 15564                           ;buttons.c: 30:     enter = &buttons[3];
 15565  0FC7  3048               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 15566  0FC8  00A5               	movwf	??_BUTTONS_init
 15567  0FC9  0825               	movf	??_BUTTONS_init,w
 15568  0FCA  0141               	movlb	1	; select bank1
 15569  0FCB  00C6               	movwf	_enter^(0+128)
 15570                           
 15571                           ;buttons.c: 32:     init(menu, &PORTC, 2);
 15572  0FCC  300E               	movlw	14
 15573  0FCD  0140               	movlb	0	; select bank0
 15574  0FCE  00A0               	movwf	init@port
 15575  0FCF  3000               	movlw	0
 15576  0FD0  00A1               	movwf	init@port+1
 15577  0FD1  3002               	movlw	2
 15578  0FD2  00A5               	movwf	??_BUTTONS_init
 15579  0FD3  0825               	movf	??_BUTTONS_init,w
 15580  0FD4  00A2               	movwf	init@pin
 15581  0FD5  0141               	movlb	1	; select bank1
 15582  0FD6  0847               	movf	_menu^(0+128),w
 15583  0FD7  318C  24ED  318F   	fcall	_init
 15584                           
 15585                           ;buttons.c: 33:     init(enter, &PORTA, 2);
 15586  0FDA  300C               	movlw	12
 15587  0FDB  0140               	movlb	0	; select bank0
 15588  0FDC  00A0               	movwf	init@port
 15589  0FDD  3000               	movlw	0
 15590  0FDE  00A1               	movwf	init@port+1
 15591  0FDF  3002               	movlw	2
 15592  0FE0  00A5               	movwf	??_BUTTONS_init
 15593  0FE1  0825               	movf	??_BUTTONS_init,w
 15594  0FE2  00A2               	movwf	init@pin
 15595  0FE3  0141               	movlb	1	; select bank1
 15596  0FE4  0846               	movf	_enter^(0+128),w
 15597  0FE5  318C  24ED  318F   	fcall	_init
 15598                           
 15599                           ;buttons.c: 34:     init(down, &PORTC, 0);
 15600  0FE8  300E               	movlw	14
 15601  0FE9  0140               	movlb	0	; select bank0
 15602  0FEA  00A0               	movwf	init@port
 15603  0FEB  3000               	movlw	0
 15604  0FEC  00A1               	movwf	init@port+1
 15605  0FED  01A2               	clrf	init@pin
 15606  0FEE  0872               	movf	_down,w
 15607  0FEF  318C  24ED  318F   	fcall	_init
 15608                           
 15609                           ;buttons.c: 35:     init(up, &PORTC, 1);
 15610  0FF2  300E               	movlw	14
 15611  0FF3  0140               	movlb	0	; select bank0
 15612  0FF4  00A0               	movwf	init@port
 15613  0FF5  3000               	movlw	0
 15614  0FF6  00A1               	movwf	init@port+1
 15615  0FF7  01A2               	clrf	init@pin
 15616  0FF8  0AA2               	incf	init@pin,f
 15617  0FF9  0873               	movf	_up,w
 15618  0FFA  318C  24ED  318F   	fcall	_init
 15619                           
 15620                           ;buttons.c: 37:     GPIO_init();
 15621  0FFD  318B  2322         	fcall	_GPIO_init
 15622  0FFF  0008               	return
 15623  1000                     __end_of_BUTTONS_init:	
 15624                           
 15625                           	psect	text54
 15626  0CED                     __ptext54:	
 15627 ;; *************** function _init *****************
 15628 ;; Defined at:
 15629 ;;		line 19 in file "buttons.c"
 15630 ;; Parameters:    Size  Location     Type
 15631 ;;  btn             1    wreg     PTR struct .
 15632 ;;		 -> buttons(32), NULL(0), 
 15633 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 15634 ;;		 -> PORTA(1), PORTC(1), 
 15635 ;;  pin             1    2[BANK0 ] unsigned char 
 15636 ;; Auto vars:     Size  Location     Type
 15637 ;;  btn             1    4[BANK0 ] PTR struct .
 15638 ;;		 -> buttons(32), NULL(0), 
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  1    wreg      void 
 15641 ;; Registers used:
 15642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15648 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15650 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15651 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15652 ;;Total ram usage:        5 bytes
 15653 ;; Hardware stack levels used:    1
 15654 ;; Hardware stack levels required when called:    4
 15655 ;; This function calls:
 15656 ;;		Nothing
 15657 ;; This function is called by:
 15658 ;;		_BUTTONS_init
 15659 ;; This function uses a non-reentrant model
 15660 ;;
 15661                           
 15662                           
 15663                           ;psect for function _init
 15664  0CED                     _init:	
 15665                           
 15666                           ;incstack = 0
 15667                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 15668                           ;init@btn stored from wreg
 15669  0CED  0140               	movlb	0	; select bank0
 15670  0CEE  00A4               	movwf	init@btn
 15671                           
 15672                           ;buttons.c: 20:     btn->port = port;
 15673  0CEF  0824               	movf	init@btn,w
 15674  0CF0  0086               	movwf	6
 15675  0CF1  3001               	movlw	1	; select bank2/3
 15676  0CF2  0087               	movwf	7
 15677  0CF3  0820               	movf	init@port,w
 15678  0CF4  3FC0               	movwi [0]fsr1
 15679  0CF5  0821               	movf	init@port+1,w
 15680  0CF6  3FC1               	movwi [1]fsr1
 15681                           
 15682                           ;buttons.c: 21:     btn->pin = pin;
 15683  0CF7  0822               	movf	init@pin,w
 15684  0CF8  00A3               	movwf	??_init
 15685  0CF9  0824               	movf	init@btn,w
 15686  0CFA  3E02               	addlw	2
 15687  0CFB  0086               	movwf	6
 15688  0CFC  3001               	movlw	1	; select bank2/3
 15689  0CFD  0087               	movwf	7
 15690  0CFE  0823               	movf	??_init,w
 15691  0CFF  0081               	movwf	1
 15692                           
 15693                           ;buttons.c: 22:     btn->state = STATE_UNPRESSED;
 15694  0D00  0824               	movf	init@btn,w
 15695  0D01  3E03               	addlw	3
 15696  0D02  0086               	movwf	6
 15697  0D03  3001               	movlw	1	; select bank2/3
 15698  0D04  0087               	movwf	7
 15699  0D05  0181               	clrf	1
 15700                           
 15701                           ;buttons.c: 23:     btn->event = EVENT_IDLE;
 15702  0D06  0824               	movf	init@btn,w
 15703  0D07  3E07               	addlw	7
 15704  0D08  0086               	movwf	6
 15705  0D09  3001               	movlw	1	; select bank2/3
 15706  0D0A  0087               	movwf	7
 15707  0D0B  0181               	clrf	1
 15708  0D0C  0008               	return
 15709  0D0D                     __end_of_init:	
 15710                           
 15711                           	psect	text55
 15712  0B22                     __ptext55:	
 15713 ;; *************** function _GPIO_init *****************
 15714 ;; Defined at:
 15715 ;;		line 41 in file "buttons.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;		None
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;		None
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  1    wreg      void 
 15722 ;; Registers used:
 15723 ;;		None
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/0
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15733 ;;Total ram usage:        0 bytes
 15734 ;; Hardware stack levels used:    1
 15735 ;; Hardware stack levels required when called:    4
 15736 ;; This function calls:
 15737 ;;		Nothing
 15738 ;; This function is called by:
 15739 ;;		_BUTTONS_init
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           
 15744                           ;psect for function _GPIO_init
 15745  0B22                     _GPIO_init:	
 15746                           
 15747                           ;buttons.c: 43:     TRISAbits.TRISA2 = 1;
 15748                           
 15749                           ;incstack = 0
 15750                           ; Regs used in _GPIO_init: []
 15751  0B22  0140               	movlb	0	; select bank0
 15752  0B23  1512               	bsf	18,2	;volatile
 15753                           
 15754                           ;buttons.c: 44:     ANSELAbits.ANSA2 = 0;
 15755  0B24  017E               	movlb	62	; select bank62
 15756  0B25  1138               	bcf	56,2	;volatile
 15757                           
 15758                           ;buttons.c: 45:     WPUAbits.WPUA2 = 1;
 15759  0B26  1539               	bsf	57,2	;volatile
 15760                           
 15761                           ;buttons.c: 47:     TRISCbits.TRISC0 = 1;
 15762  0B27  0140               	movlb	0	; select bank0
 15763  0B28  1414               	bsf	20,0	;volatile
 15764                           
 15765                           ;buttons.c: 48:     TRISCbits.TRISC1 = 1;
 15766  0B29  1494               	bsf	20,1	;volatile
 15767                           
 15768                           ;buttons.c: 49:     TRISCbits.TRISC2 = 1;
 15769  0B2A  1514               	bsf	20,2	;volatile
 15770                           
 15771                           ;buttons.c: 50:     ANSELCbits.ANSC0 = 0;
 15772  0B2B  017E               	movlb	62	; select bank62
 15773  0B2C  104E               	bcf	78,0	;volatile
 15774                           
 15775                           ;buttons.c: 51:     ANSELCbits.ANSC1 = 0;
 15776  0B2D  10CE               	bcf	78,1	;volatile
 15777                           
 15778                           ;buttons.c: 52:     ANSELCbits.ANSC2 = 0;
 15779  0B2E  114E               	bcf	78,2	;volatile
 15780                           
 15781                           ;buttons.c: 53:     WPUCbits.WPUC0 = 1;
 15782  0B2F  144F               	bsf	79,0	;volatile
 15783                           
 15784                           ;buttons.c: 54:     WPUCbits.WPUC1 = 1;
 15785  0B30  14CF               	bsf	79,1	;volatile
 15786                           
 15787                           ;buttons.c: 55:     WPUCbits.WPUC2 = 1;
 15788  0B31  154F               	bsf	79,2	;volatile
 15789  0B32  0008               	return
 15790  0B33                     __end_of_GPIO_init:	
 15791                           
 15792                           	psect	text56
 15793  0485                     __ptext56:	
 15794 ;; *************** function _BEAT_task *****************
 15795 ;; Defined at:
 15796 ;;		line 67 in file "beat.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;		None
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;  offset          2   10[BANK0 ] unsigned short 
 15801 ;; Return value:  Size  Location     Type
 15802 ;;                  1    wreg      void 
 15803 ;; Registers used:
 15804 ;;		wreg, status,2, status,0, pclath, cstack
 15805 ;; Tracked objects:
 15806 ;;		On entry : 0/0
 15807 ;;		On exit  : 0/0
 15808 ;;		Unchanged: 0/0
 15809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;Total ram usage:        4 bytes
 15815 ;; Hardware stack levels used:    1
 15816 ;; Hardware stack levels required when called:    5
 15817 ;; This function calls:
 15818 ;;		_ADCC_SetUpperThreshold
 15819 ;;		_CLOCK_getTime
 15820 ;;		___lwdiv
 15821 ;; This function is called by:
 15822 ;;		_main
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           
 15827                           ;psect for function _BEAT_task
 15828  0485                     _BEAT_task:	
 15829                           
 15830                           ;beat.c: 70:     if (CLOCK_getTime() - lastRun < delay)
 15831                           
 15832                           ;incstack = 0
 15833                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 15834  0485  318A  222F  3184   	fcall	_CLOCK_getTime
 15835  0488  0141               	movlb	1	; select bank1
 15836  0489  0833               	movf	_lastRun^(0+128),w
 15837  048A  0140               	movlb	0	; select bank0
 15838  048B  0220               	subwf	?_CLOCK_getTime,w
 15839  048C  00A8               	movwf	??_BEAT_task
 15840  048D  0141               	movlb	1	; select bank1
 15841  048E  0834               	movf	(_lastRun+1)^(0+128),w
 15842  048F  0140               	movlb	0	; select bank0
 15843  0490  3B21               	subwfb	?_CLOCK_getTime+1,w
 15844  0491  00A9               	movwf	??_BEAT_task+1
 15845  0492  0141               	movlb	1	; select bank1
 15846  0493  0857               	movf	(_delay+1)^(0+128),w
 15847  0494  0140               	movlb	0	; select bank0
 15848  0495  0229               	subwf	??_BEAT_task+1,w
 15849  0496  1D03               	skipz
 15850  0497  2C9C               	goto	u3775
 15851  0498  0141               	movlb	1	; select bank1
 15852  0499  0856               	movf	_delay^(0+128),w
 15853  049A  0140               	movlb	0	; select bank0
 15854  049B  0228               	subwf	??_BEAT_task,w
 15855  049C                     u3775:	
 15856  049C  1C03               	btfss	3,0
 15857  049D  0008               	return
 15858                           
 15859                           ;beat.c: 73:     lastRun = CLOCK_getTime();
 15860  049E  318A  222F  3184   	fcall	_CLOCK_getTime
 15861  04A1  0140               	movlb	0	; select bank0
 15862  04A2  0821               	movf	?_CLOCK_getTime+1,w
 15863  04A3  0141               	movlb	1	; select bank1
 15864  04A4  00B4               	movwf	(_lastRun+1)^(0+128)
 15865  04A5  0140               	movlb	0	; select bank0
 15866  04A6  0820               	movf	?_CLOCK_getTime,w
 15867  04A7  0141               	movlb	1	; select bank1
 15868  04A8  00B3               	movwf	_lastRun^(0+128)
 15869                           
 15870                           ;beat.c: 75:     if (thresholdExceeded == 1) {
 15871  04A9  0342               	decf	_thresholdExceeded^(0+128),w
 15872  04AA  1D03               	btfss	3,2
 15873  04AB  2CB1               	goto	l5204
 15874                           
 15875                           ;beat.c: 79:         thresholdCount++;
 15876  04AC  3001               	movlw	1
 15877  04AD  07B1               	addwf	_thresholdCount^(0+128),f
 15878  04AE  3000               	movlw	0
 15879  04AF  3DB2               	addwfc	(_thresholdCount+1)^(0+128),f
 15880                           
 15881                           ;beat.c: 80:     } else {
 15882  04B0  2CB7               	goto	l5208
 15883  04B1                     l5204:	
 15884                           
 15885                           ;beat.c: 82:         thresholdCount = 0;
 15886  04B1  01B1               	clrf	_thresholdCount^(0+128)
 15887  04B2  01B2               	clrf	(_thresholdCount+1)^(0+128)
 15888                           
 15889                           ;beat.c: 83:         delay = 20;
 15890  04B3  3014               	movlw	20
 15891  04B4  00D6               	movwf	_delay^(0+128)
 15892  04B5  3000               	movlw	0
 15893  04B6  00D7               	movwf	(_delay^(0+128)+1)
 15894  04B7                     l5208:	
 15895                           
 15896                           ;beat.c: 89:     if (thresholdExceeded == 1 && lastDetected == 0) {
 15897  04B7  0342               	decf	_thresholdExceeded^(0+128),w
 15898  04B8  1D03               	btfss	3,2
 15899  04B9  2CFC               	goto	l5226
 15900  04BA  0841               	movf	_lastDetected^(0+128),w
 15901  04BB  1D03               	btfss	3,2
 15902  04BC  2CFC               	goto	l5226
 15903                           
 15904                           ;beat.c: 91:         detected = 1;
 15905  04BD  01C3               	clrf	_detected^(0+128)
 15906  04BE  0AC3               	incf	_detected^(0+128),f
 15907                           
 15908                           ;beat.c: 94:         delay = 100;
 15909  04BF  3064               	movlw	100
 15910  04C0  00D6               	movwf	_delay^(0+128)
 15911  04C1  3000               	movlw	0
 15912  04C2  00D7               	movwf	(_delay^(0+128)+1)
 15913                           
 15914                           ;beat.c: 97:         time_t offset = CLOCK_getTime() - lastBeat;
 15915  04C3  318A  222F  3184   	fcall	_CLOCK_getTime
 15916  04C6  0141               	movlb	1	; select bank1
 15917  04C7  0837               	movf	_lastBeat^(0+128),w
 15918  04C8  0140               	movlb	0	; select bank0
 15919  04C9  0220               	subwf	?_CLOCK_getTime,w
 15920  04CA  00AA               	movwf	BEAT_task@offset
 15921  04CB  0141               	movlb	1	; select bank1
 15922  04CC  0838               	movf	(_lastBeat+1)^(0+128),w
 15923  04CD  0140               	movlb	0	; select bank0
 15924  04CE  3B21               	subwfb	?_CLOCK_getTime+1,w
 15925  04CF  00AB               	movwf	BEAT_task@offset+1
 15926                           
 15927                           ;beat.c: 99:         lastBeat = CLOCK_getTime();
 15928  04D0  318A  222F  3184   	fcall	_CLOCK_getTime
 15929  04D3  0140               	movlb	0	; select bank0
 15930  04D4  0821               	movf	?_CLOCK_getTime+1,w
 15931  04D5  0141               	movlb	1	; select bank1
 15932  04D6  00B8               	movwf	(_lastBeat+1)^(0+128)
 15933  04D7  0140               	movlb	0	; select bank0
 15934  04D8  0820               	movf	?_CLOCK_getTime,w
 15935  04D9  0141               	movlb	1	; select bank1
 15936  04DA  00B7               	movwf	_lastBeat^(0+128)
 15937                           
 15938                           ;beat.c: 101:         if (offset < 150)
 15939  04DB  3000               	movlw	0
 15940  04DC  0140               	movlb	0	; select bank0
 15941  04DD  022B               	subwf	BEAT_task@offset+1,w
 15942  04DE  3096               	movlw	150
 15943  04DF  1903               	skipnz
 15944  04E0  022A               	subwf	BEAT_task@offset,w
 15945  04E1  1803               	skipnc
 15946  04E2  2CE9               	goto	l5224
 15947                           
 15948                           ;beat.c: 102:             bpm = 400;
 15949  04E3  3090               	movlw	144
 15950  04E4  0141               	movlb	1	; select bank1
 15951  04E5  00B5               	movwf	_bpm^(0+128)
 15952  04E6  3001               	movlw	1
 15953  04E7  00B6               	movwf	(_bpm^(0+128)+1)
 15954  04E8  2CFC               	goto	l5226
 15955  04E9                     l5224:	
 15956                           
 15957                           ;beat.c: 104:             bpm = 60 * 1000 / offset;
 15958  04E9  082B               	movf	BEAT_task@offset+1,w
 15959  04EA  00A1               	movwf	___lwdiv@divisor+1
 15960  04EB  082A               	movf	BEAT_task@offset,w
 15961  04EC  00A0               	movwf	___lwdiv@divisor
 15962  04ED  3060               	movlw	96
 15963  04EE  00A2               	movwf	___lwdiv@dividend
 15964  04EF  30EA               	movlw	234
 15965  04F0  00A3               	movwf	___lwdiv@dividend+1
 15966  04F1  318E  26AB  3184   	fcall	___lwdiv
 15967  04F4  0140               	movlb	0	; select bank0
 15968  04F5  0821               	movf	?___lwdiv+1,w
 15969  04F6  0141               	movlb	1	; select bank1
 15970  04F7  00B6               	movwf	(_bpm+1)^(0+128)
 15971  04F8  0140               	movlb	0	; select bank0
 15972  04F9  0820               	movf	?___lwdiv,w
 15973  04FA  0141               	movlb	1	; select bank1
 15974  04FB  00B5               	movwf	_bpm^(0+128)
 15975  04FC                     l5226:	
 15976                           
 15977                           ;beat.c: 110:     lastDetected = thresholdExceeded;
 15978  04FC  0842               	movf	_thresholdExceeded^(0+128),w
 15979  04FD  0140               	movlb	0	; select bank0
 15980  04FE  00A8               	movwf	??_BEAT_task
 15981  04FF  0828               	movf	??_BEAT_task,w
 15982  0500  0141               	movlb	1	; select bank1
 15983  0501  00C1               	movwf	_lastDetected^(0+128)
 15984                           
 15985                           ;beat.c: 111:     thresholdExceeded = 0;
 15986  0502  01C2               	clrf	_thresholdExceeded^(0+128)
 15987                           
 15988                           ;beat.c: 113:     if (thresholdCount > 3) {
 15989  0503  0832               	movf	(_thresholdCount+1)^(0+128),w
 15990  0504  3A80               	xorlw	128
 15991  0505  0140               	movlb	0	; select bank0
 15992  0506  00A8               	movwf	??_BEAT_task
 15993  0507  3080               	movlw	128
 15994  0508  0228               	subwf	??_BEAT_task,w
 15995  0509  1D03               	skipz
 15996  050A  2D0E               	goto	u3825
 15997  050B  3004               	movlw	4
 15998  050C  0141               	movlb	1	; select bank1
 15999  050D  0231               	subwf	_thresholdCount^(0+128),w
 16000  050E                     u3825:	
 16001  050E  1C03               	skipc
 16002  050F  2D2D               	goto	l5240
 16003                           
 16004                           ;beat.c: 114:         threshold += 1;
 16005  0510  3001               	movlw	1
 16006  0511  0141               	movlb	1	; select bank1
 16007  0512  07D8               	addwf	_threshold^(0+128),f
 16008  0513  3000               	movlw	0
 16009  0514  3DD9               	addwfc	(_threshold+1)^(0+128),f
 16010                           
 16011                           ;beat.c: 115:         ADCC_SetUpperThreshold(threshold);
 16012  0515  0859               	movf	(_threshold+1)^(0+128),w
 16013  0516  0140               	movlb	0	; select bank0
 16014  0517  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16015  0518  0141               	movlb	1	; select bank1
 16016  0519  0858               	movf	_threshold^(0+128),w
 16017  051A  0140               	movlb	0	; select bank0
 16018  051B  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16019  051C  318A  221D  3184   	fcall	_ADCC_SetUpperThreshold
 16020                           
 16021                           ;beat.c: 116:         thresholdCount = 0;
 16022  051F  0141               	movlb	1	; select bank1
 16023  0520  01B1               	clrf	_thresholdCount^(0+128)
 16024  0521  01B2               	clrf	(_thresholdCount+1)^(0+128)
 16025                           
 16026                           ;beat.c: 119:         lastBeat = CLOCK_getTime();
 16027  0522  318A  222F         	fcall	_CLOCK_getTime
 16028  0524  0140               	movlb	0	; select bank0
 16029  0525  0821               	movf	?_CLOCK_getTime+1,w
 16030  0526  0141               	movlb	1	; select bank1
 16031  0527  00B8               	movwf	(_lastBeat+1)^(0+128)
 16032  0528  0140               	movlb	0	; select bank0
 16033  0529  0820               	movf	?_CLOCK_getTime,w
 16034  052A  0141               	movlb	1	; select bank1
 16035  052B  00B7               	movwf	_lastBeat^(0+128)
 16036                           
 16037                           ;beat.c: 120:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16038  052C  0008               	return
 16039  052D                     l5240:	
 16040  052D  318A  222F  3184   	fcall	_CLOCK_getTime
 16041  0530  0141               	movlb	1	; select bank1
 16042  0531  0837               	movf	_lastBeat^(0+128),w
 16043  0532  0140               	movlb	0	; select bank0
 16044  0533  0220               	subwf	?_CLOCK_getTime,w
 16045  0534  00A8               	movwf	??_BEAT_task
 16046  0535  0141               	movlb	1	; select bank1
 16047  0536  0838               	movf	(_lastBeat+1)^(0+128),w
 16048  0537  0140               	movlb	0	; select bank0
 16049  0538  3B21               	subwfb	?_CLOCK_getTime+1,w
 16050  0539  00A9               	movwf	??_BEAT_task+1
 16051  053A  3003               	movlw	3
 16052  053B  0229               	subwf	??_BEAT_task+1,w
 16053  053C  30E9               	movlw	233
 16054  053D  1903               	skipnz
 16055  053E  0228               	subwf	??_BEAT_task,w
 16056  053F  1C03               	skipc
 16057  0540  0008               	return
 16058                           
 16059                           ;beat.c: 121:         threshold -= 1;
 16060  0541  3001               	movlw	1
 16061  0542  0141               	movlb	1	; select bank1
 16062  0543  02D8               	subwf	_threshold^(0+128),f
 16063  0544  3000               	movlw	0
 16064  0545  3BD9               	subwfb	(_threshold+1)^(0+128),f
 16065                           
 16066                           ;beat.c: 122:         ADCC_SetUpperThreshold(threshold);
 16067  0546  0859               	movf	(_threshold+1)^(0+128),w
 16068  0547  0140               	movlb	0	; select bank0
 16069  0548  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16070  0549  0141               	movlb	1	; select bank1
 16071  054A  0858               	movf	_threshold^(0+128),w
 16072  054B  0140               	movlb	0	; select bank0
 16073  054C  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16074  054D  318A  221D         	fcall	_ADCC_SetUpperThreshold
 16075  054F  0008               	return
 16076  0550                     __end_of_BEAT_task:	
 16077                           
 16078                           	psect	text57
 16079  0EAB                     __ptext57:	
 16080 ;; *************** function ___lwdiv *****************
 16081 ;; Defined at:
 16082 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;  divisor         2    0[BANK0 ] unsigned int 
 16085 ;;  dividend        2    2[BANK0 ] unsigned int 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;  quotient        2    5[BANK0 ] unsigned int 
 16088 ;;  counter         1    7[BANK0 ] unsigned char 
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  2    0[BANK0 ] unsigned int 
 16091 ;; Registers used:
 16092 ;;		wreg, status,2, status,0
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16099 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16101 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16102 ;;Total ram usage:        8 bytes
 16103 ;; Hardware stack levels used:    1
 16104 ;; Hardware stack levels required when called:    4
 16105 ;; This function calls:
 16106 ;;		Nothing
 16107 ;; This function is called by:
 16108 ;;		_TM1650_fastPrintNum
 16109 ;;		_BEAT_task
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           
 16114                           ;psect for function ___lwdiv
 16115  0EAB                     ___lwdiv:	
 16116                           
 16117                           ;incstack = 0
 16118                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16119  0EAB  0140               	movlb	0	; select bank0
 16120  0EAC  01A5               	clrf	___lwdiv@quotient
 16121  0EAD  01A6               	clrf	___lwdiv@quotient+1
 16122  0EAE  0820               	movf	___lwdiv@divisor,w
 16123  0EAF  0421               	iorwf	___lwdiv@divisor+1,w
 16124  0EB0  1903               	btfsc	3,2
 16125  0EB1  2EDB               	goto	l3464
 16126  0EB2  01A7               	clrf	___lwdiv@counter
 16127  0EB3  0AA7               	incf	___lwdiv@counter,f
 16128  0EB4                     l3452:	
 16129  0EB4  1BA1               	btfsc	___lwdiv@divisor+1,7
 16130  0EB5  2EC0               	goto	l3454
 16131  0EB6  3001               	movlw	1
 16132  0EB7                     u1745:	
 16133  0EB7  35A0               	lslf	___lwdiv@divisor,f
 16134  0EB8  0DA1               	rlf	___lwdiv@divisor+1,f
 16135  0EB9  0B89               	decfsz	9,f
 16136  0EBA  2EB7               	goto	u1745
 16137  0EBB  3001               	movlw	1
 16138  0EBC  00A4               	movwf	??___lwdiv
 16139  0EBD  0824               	movf	??___lwdiv,w
 16140  0EBE  07A7               	addwf	___lwdiv@counter,f
 16141  0EBF  2EB4               	goto	l3452
 16142  0EC0                     l3454:	
 16143  0EC0  3001               	movlw	1
 16144  0EC1                     u1765:	
 16145  0EC1  35A5               	lslf	___lwdiv@quotient,f
 16146  0EC2  0DA6               	rlf	___lwdiv@quotient+1,f
 16147  0EC3  0B89               	decfsz	9,f
 16148  0EC4  2EC1               	goto	u1765
 16149  0EC5  0821               	movf	___lwdiv@divisor+1,w
 16150  0EC6  0223               	subwf	___lwdiv@dividend+1,w
 16151  0EC7  1D03               	skipz
 16152  0EC8  2ECB               	goto	u1775
 16153  0EC9  0820               	movf	___lwdiv@divisor,w
 16154  0ECA  0222               	subwf	___lwdiv@dividend,w
 16155  0ECB                     u1775:	
 16156  0ECB  1C03               	skipc
 16157  0ECC  2ED2               	goto	l3460
 16158  0ECD  0820               	movf	___lwdiv@divisor,w
 16159  0ECE  02A2               	subwf	___lwdiv@dividend,f
 16160  0ECF  0821               	movf	___lwdiv@divisor+1,w
 16161  0ED0  3BA3               	subwfb	___lwdiv@dividend+1,f
 16162  0ED1  1425               	bsf	___lwdiv@quotient,0
 16163  0ED2                     l3460:	
 16164  0ED2  3001               	movlw	1
 16165  0ED3                     u1785:	
 16166  0ED3  36A1               	lsrf	___lwdiv@divisor+1,f
 16167  0ED4  0CA0               	rrf	___lwdiv@divisor,f
 16168  0ED5  0B89               	decfsz	9,f
 16169  0ED6  2ED3               	goto	u1785
 16170  0ED7  3001               	movlw	1
 16171  0ED8  02A7               	subwf	___lwdiv@counter,f
 16172  0ED9  1D03               	btfss	3,2
 16173  0EDA  2EC0               	goto	l3454
 16174  0EDB                     l3464:	
 16175  0EDB  0826               	movf	___lwdiv@quotient+1,w
 16176  0EDC  00A1               	movwf	?___lwdiv+1
 16177  0EDD  0825               	movf	___lwdiv@quotient,w
 16178  0EDE  00A0               	movwf	?___lwdiv
 16179  0EDF  0008               	return
 16180  0EE0                     __end_of___lwdiv:	
 16181                           
 16182                           	psect	text58
 16183  0A2F                     __ptext58:	
 16184 ;; *************** function _CLOCK_getTime *****************
 16185 ;; Defined at:
 16186 ;;		line 16 in file "clock.c"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;		None
 16189 ;; Auto vars:     Size  Location     Type
 16190 ;;		None
 16191 ;; Return value:  Size  Location     Type
 16192 ;;                  2    0[BANK0 ] unsigned short 
 16193 ;; Registers used:
 16194 ;;		wreg
 16195 ;; Tracked objects:
 16196 ;;		On entry : 0/0
 16197 ;;		On exit  : 0/0
 16198 ;;		Unchanged: 0/0
 16199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16204 ;;Total ram usage:        2 bytes
 16205 ;; Hardware stack levels used:    1
 16206 ;; Hardware stack levels required when called:    4
 16207 ;; This function calls:
 16208 ;;		Nothing
 16209 ;; This function is called by:
 16210 ;;		_BUTTONS_task
 16211 ;;		_CONTROLLER_task
 16212 ;;		_BEAT_task
 16213 ;;		_LED_task
 16214 ;; This function uses a non-reentrant model
 16215 ;;
 16216                           
 16217                           
 16218                           ;psect for function _CLOCK_getTime
 16219  0A2F                     _CLOCK_getTime:	
 16220                           
 16221                           ;clock.c: 17:     return currentTime;
 16222                           
 16223                           ;incstack = 0
 16224                           ; Regs used in _CLOCK_getTime: [wreg]
 16225  0A2F  0141               	movlb	1	; select bank1
 16226  0A30  083E               	movf	(_currentTime+1)^(0+128),w
 16227  0A31  0140               	movlb	0	; select bank0
 16228  0A32  00A1               	movwf	?_CLOCK_getTime+1
 16229  0A33  0141               	movlb	1	; select bank1
 16230  0A34  083D               	movf	_currentTime^(0+128),w
 16231  0A35  0140               	movlb	0	; select bank0
 16232  0A36  00A0               	movwf	?_CLOCK_getTime
 16233  0A37  0008               	return
 16234  0A38                     __end_of_CLOCK_getTime:	
 16235                           
 16236                           	psect	text59
 16237  0BAB                     __ptext59:	
 16238 ;; *************** function _BEAT_init *****************
 16239 ;; Defined at:
 16240 ;;		line 41 in file "beat.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;		None
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;		None
 16245 ;; Return value:  Size  Location     Type
 16246 ;;                  1    wreg      void 
 16247 ;; Registers used:
 16248 ;;		wreg, status,2, status,0, pclath, cstack
 16249 ;; Tracked objects:
 16250 ;;		On entry : 0/0
 16251 ;;		On exit  : 0/0
 16252 ;;		Unchanged: 0/0
 16253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16258 ;;Total ram usage:        0 bytes
 16259 ;; Hardware stack levels used:    1
 16260 ;; Hardware stack levels required when called:    5
 16261 ;; This function calls:
 16262 ;;		_ADCC_SetADTIInterruptHandler
 16263 ;;		_ADCC_SetUpperThreshold
 16264 ;;		_ADCC_StartConversion
 16265 ;; This function is called by:
 16266 ;;		_main
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270                           
 16271                           ;psect for function _BEAT_init
 16272  0BAB                     _BEAT_init:	
 16273                           
 16274                           ;beat.c: 42:     ADCC_SetUpperThreshold(threshold);
 16275                           
 16276                           ;incstack = 0
 16277                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 16278  0BAB  0141               	movlb	1	; select bank1
 16279  0BAC  0859               	movf	(_threshold+1)^(0+128),w
 16280  0BAD  0140               	movlb	0	; select bank0
 16281  0BAE  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16282  0BAF  0141               	movlb	1	; select bank1
 16283  0BB0  0858               	movf	_threshold^(0+128),w
 16284  0BB1  0140               	movlb	0	; select bank0
 16285  0BB2  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16286  0BB3  318A  221D  318B   	fcall	_ADCC_SetUpperThreshold
 16287                           
 16288                           ;beat.c: 43:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 16289  0BB6  30F7               	movlw	low _adcThresholdHandler
 16290  0BB7  0140               	movlb	0	; select bank0
 16291  0BB8  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 16292  0BB9  3009               	movlw	high _adcThresholdHandler
 16293  0BBA  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 16294  0BBB  318A  2214  318B   	fcall	_ADCC_SetADTIInterruptHandler
 16295                           
 16296                           ;beat.c: 44:     ADCC_StartConversion(0x0F);
 16297  0BBE  300F               	movlw	15
 16298  0BBF  318A  2226         	fcall	_ADCC_StartConversion
 16299  0BC1  0008               	return
 16300  0BC2                     __end_of_BEAT_init:	
 16301                           
 16302                           	psect	text60
 16303  0A26                     __ptext60:	
 16304 ;; *************** function _ADCC_StartConversion *****************
 16305 ;; Defined at:
 16306 ;;		line 121 in file "mcc_generated_files/adcc.c"
 16307 ;; Parameters:    Size  Location     Type
 16308 ;;  channel         1    wreg     enum E10867
 16309 ;; Auto vars:     Size  Location     Type
 16310 ;;  channel         1    0[BANK0 ] enum E10867
 16311 ;; Return value:  Size  Location     Type
 16312 ;;                  1    wreg      void 
 16313 ;; Registers used:
 16314 ;;		wreg
 16315 ;; Tracked objects:
 16316 ;;		On entry : 0/0
 16317 ;;		On exit  : 0/0
 16318 ;;		Unchanged: 0/0
 16319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16324 ;;Total ram usage:        1 bytes
 16325 ;; Hardware stack levels used:    1
 16326 ;; Hardware stack levels required when called:    4
 16327 ;; This function calls:
 16328 ;;		Nothing
 16329 ;; This function is called by:
 16330 ;;		_BEAT_init
 16331 ;; This function uses a non-reentrant model
 16332 ;;
 16333                           
 16334                           
 16335                           ;psect for function _ADCC_StartConversion
 16336  0A26                     _ADCC_StartConversion:	
 16337                           
 16338                           ;incstack = 0
 16339                           ; Regs used in _ADCC_StartConversion: [wreg]
 16340                           ;ADCC_StartConversion@channel stored from wreg
 16341  0A26  0140               	movlb	0	; select bank0
 16342  0A27  00A0               	movwf	ADCC_StartConversion@channel
 16343                           
 16344                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 16345  0A28  0820               	movf	ADCC_StartConversion@channel,w
 16346  0A29  0141               	movlb	1	; select bank1
 16347  0A2A  009F               	movwf	31	;volatile
 16348                           
 16349                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 16350  0A2B  0142               	movlb	2	; select bank2
 16351  0A2C  1791               	bsf	17,7	;volatile
 16352                           
 16353                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 16354  0A2D  1411               	bsf	17,0	;volatile
 16355  0A2E  0008               	return
 16356  0A2F                     __end_of_ADCC_StartConversion:	
 16357                           
 16358                           	psect	text61
 16359  0A1D                     __ptext61:	
 16360 ;; *************** function _ADCC_SetUpperThreshold *****************
 16361 ;; Defined at:
 16362 ;;		line 251 in file "mcc_generated_files/adcc.c"
 16363 ;; Parameters:    Size  Location     Type
 16364 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 16365 ;; Auto vars:     Size  Location     Type
 16366 ;;		None
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      void 
 16369 ;; Registers used:
 16370 ;;		wreg, status,2
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16380 ;;Total ram usage:        2 bytes
 16381 ;; Hardware stack levels used:    1
 16382 ;; Hardware stack levels required when called:    4
 16383 ;; This function calls:
 16384 ;;		Nothing
 16385 ;; This function is called by:
 16386 ;;		_BEAT_init
 16387 ;;		_BEAT_task
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           
 16392                           ;psect for function _ADCC_SetUpperThreshold
 16393  0A1D                     _ADCC_SetUpperThreshold:	
 16394                           
 16395                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 16396                           
 16397                           ;incstack = 0
 16398                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 16399  0A1D  0140               	movlb	0	; select bank0
 16400  0A1E  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 16401  0A1F  0141               	movlb	1	; select bank1
 16402  0A20  008F               	movwf	15	;volatile
 16403                           
 16404                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 16405  0A21  0140               	movlb	0	; select bank0
 16406  0A22  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 16407  0A23  0141               	movlb	1	; select bank1
 16408  0A24  008E               	movwf	14	;volatile
 16409  0A25  0008               	return
 16410  0A26                     __end_of_ADCC_SetUpperThreshold:	
 16411                           
 16412                           	psect	text62
 16413  0A14                     __ptext62:	
 16414 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 16415 ;; Defined at:
 16416 ;;		line 317 in file "mcc_generated_files/adcc.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16419 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 16420 ;; Auto vars:     Size  Location     Type
 16421 ;;		None
 16422 ;; Return value:  Size  Location     Type
 16423 ;;                  1    wreg      void 
 16424 ;; Registers used:
 16425 ;;		wreg
 16426 ;; Tracked objects:
 16427 ;;		On entry : 0/0
 16428 ;;		On exit  : 0/0
 16429 ;;		Unchanged: 0/0
 16430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16435 ;;Total ram usage:        2 bytes
 16436 ;; Hardware stack levels used:    1
 16437 ;; Hardware stack levels required when called:    4
 16438 ;; This function calls:
 16439 ;;		Nothing
 16440 ;; This function is called by:
 16441 ;;		_ADCC_Initialize
 16442 ;;		_BEAT_init
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446                           
 16447                           ;psect for function _ADCC_SetADTIInterruptHandler
 16448  0A14                     _ADCC_SetADTIInterruptHandler:	
 16449                           
 16450                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 16451                           
 16452                           ;incstack = 0
 16453                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 16454  0A14  0140               	movlb	0	; select bank0
 16455  0A15  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 16456  0A16  0141               	movlb	1	; select bank1
 16457  0A17  00E9               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 16458  0A18  0140               	movlb	0	; select bank0
 16459  0A19  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 16460  0A1A  0141               	movlb	1	; select bank1
 16461  0A1B  00E8               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 16462  0A1C  0008               	return
 16463  0A1D                     __end_of_ADCC_SetADTIInterruptHandler:	
 16464                           
 16465                           	psect	intentry
 16466  0004                     __pintentry:	
 16467 ;; *************** function _INTERRUPT_InterruptManager *****************
 16468 ;; Defined at:
 16469 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16470 ;; Parameters:    Size  Location     Type
 16471 ;;		None
 16472 ;; Auto vars:     Size  Location     Type
 16473 ;;		None
 16474 ;; Return value:  Size  Location     Type
 16475 ;;                  1    wreg      void 
 16476 ;; Registers used:
 16477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16478 ;; Tracked objects:
 16479 ;;		On entry : 0/0
 16480 ;;		On exit  : 0/0
 16481 ;;		Unchanged: 0/0
 16482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16487 ;;Total ram usage:        0 bytes
 16488 ;; Hardware stack levels used:    1
 16489 ;; Hardware stack levels required when called:    3
 16490 ;; This function calls:
 16491 ;;		Absolute function
 16492 ;;		_ADCC_ThresholdISR
 16493 ;;		_DMX_interrupt
 16494 ;;		_EUSART1_Receive_ISR
 16495 ;;		_I2C1_BusCollisionISR
 16496 ;;		_I2C1_ISR
 16497 ;;		_TMR0_ISR
 16498 ;; This function is called by:
 16499 ;;		Interrupt level 1
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503  0004                     _INTERRUPT_InterruptManager:	
 16504                           
 16505                           ;incstack = 0
 16506 ;; hardware stack exceeded
 16507  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16508                           
 16509                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16510  0005  3180               	pagesel	$
 16511                           
 16512                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 16513  0006  014E               	movlb	14	; select bank14
 16514  0007  1A96               	btfsc	22,5	;volatile
 16515  0008  1E8C               	btfss	12,5	;volatile
 16516  0009  280E               	goto	i1l429
 16517                           
 16518                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 16519  000A  318A  22E7  3180   	fcall	_TMR0_ISR
 16520                           
 16521                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 16522  000D  282E               	goto	i1l441
 16523  000E                     i1l429:	
 16524                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 16525                           
 16526  000E  1F0B               	btfss	11,6	;volatile
 16527  000F  282E               	goto	i1l441
 16528                           
 16529                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 16530  0010  1899               	btfsc	25,1	;volatile
 16531  0011  1C8F               	btfss	15,1	;volatile
 16532  0012  2817               	goto	i1l432
 16533                           
 16534                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 16535  0013  3189  21F4  3180   	fcall	_I2C1_BusCollisionISR
 16536                           
 16537                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16538  0016  282E               	goto	i1l441
 16539  0017                     i1l432:	
 16540                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 16541                           
 16542  0017  1819               	btfsc	25,0	;volatile
 16543  0018  1C0F               	btfss	15,0	;volatile
 16544  0019  281E               	goto	i1l434
 16545                           
 16546                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 16547  001A  3180  2077  3180   	fcall	_I2C1_ISR
 16548                           
 16549                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 16550  001D  282E               	goto	i1l441
 16551  001E                     i1l434:	
 16552                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 16553                           
 16554  001E  1897               	btfsc	23,1	;volatile
 16555  001F  1C8D               	btfss	13,1	;volatile
 16556  0020  2825               	goto	i1l436
 16557                           
 16558                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 16559  0021  318A  22DA  3180   	fcall	_ADCC_ThresholdISR
 16560                           
 16561                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 16562  0024  282E               	goto	i1l441
 16563  0025                     i1l436:	
 16564                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 16565                           
 16566  0025  1A99               	btfsc	25,5	;volatile
 16567  0026  1E8F               	btfss	15,5	;volatile
 16568  0027  282E               	goto	i1l441
 16569                           
 16570                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 16571  0028  0142               	movlb	2	; select bank2
 16572  0029  085F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 16573  002A  008A               	movwf	10
 16574  002B  085E               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 16575  002C  000A               	callw
 16576  002D  3180               	pagesel	$
 16577  002E                     i1l441:	
 16578                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 16579                           
 16580  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16581  002F  0009               	retfie
 16582  0030                     __end_of_INTERRUPT_InterruptManager:	
 16583                           
 16584                           	psect	text64
 16585  0AE7                     __ptext64:	
 16586 ;; *************** function _TMR0_ISR *****************
 16587 ;; Defined at:
 16588 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 16589 ;; Parameters:    Size  Location     Type
 16590 ;;		None
 16591 ;; Auto vars:     Size  Location     Type
 16592 ;;		None
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  1    wreg      void 
 16595 ;; Registers used:
 16596 ;;		wreg, status,2, status,0, pclath, cstack
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/0
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16606 ;;Total ram usage:        0 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; Hardware stack levels required when called:    1
 16609 ;; This function calls:
 16610 ;;		Absolute function
 16611 ;;		_CLOCK_timerCallback
 16612 ;;		_TMR0_DefaultInterruptHandler
 16613 ;; This function is called by:
 16614 ;;		_INTERRUPT_InterruptManager
 16615 ;; This function uses a non-reentrant model
 16616 ;;
 16617                           
 16618                           
 16619                           ;psect for function _TMR0_ISR
 16620  0AE7                     _TMR0_ISR:	
 16621                           
 16622                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 16623                           
 16624                           ;incstack = 0
 16625 ;; hardware stack exceeded
 16626                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16627  0AE7  014E               	movlb	14	; select bank14
 16628  0AE8  128C               	bcf	12,5	;volatile
 16629                           
 16630                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 16631  0AE9  0141               	movlb	1	; select bank1
 16632  0AEA  086A               	movf	_TMR0_InterruptHandler^(0+128),w
 16633  0AEB  046B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 16634  0AEC  1903               	btfsc	3,2
 16635  0AED  0008               	return
 16636                           
 16637                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 16638  0AEE  086B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 16639  0AEF  008A               	movwf	10
 16640  0AF0  086A               	movf	_TMR0_InterruptHandler^(0+128),w
 16641  0AF1  000A               	callw
 16642  0AF2  318A               	pagesel	$
 16643  0AF3  0008               	return
 16644  0AF4                     __end_of_TMR0_ISR:	
 16645                           
 16646                           	psect	text65
 16647  07F9                     __ptext65:	
 16648 ;; *************** function _CLOCK_timerCallback *****************
 16649 ;; Defined at:
 16650 ;;		line 20 in file "clock.c"
 16651 ;; Parameters:    Size  Location     Type
 16652 ;;		None
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;		None
 16655 ;; Return value:  Size  Location     Type
 16656 ;;                  1    wreg      void 
 16657 ;; Registers used:
 16658 ;;		wreg
 16659 ;; Tracked objects:
 16660 ;;		On entry : 0/0
 16661 ;;		On exit  : 0/0
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16668 ;;Total ram usage:        0 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; This function calls:
 16671 ;;		Nothing
 16672 ;; This function is called by:
 16673 ;;		_CLOCK_init
 16674 ;;		_TMR0_ISR
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           
 16679                           ;psect for function _CLOCK_timerCallback
 16680  07F9                     _CLOCK_timerCallback:	
 16681                           
 16682                           ;clock.c: 21:     currentTime++;
 16683                           
 16684                           ;incstack = 0
 16685 ;; hardware stack exceeded
 16686                           ; Regs used in _CLOCK_timerCallback: [wreg]
 16687  07F9  3001               	movlw	1
 16688  07FA  0141               	movlb	1	; select bank1
 16689  07FB  07BD               	addwf	_currentTime^(0+128),f
 16690  07FC  3000               	movlw	0
 16691  07FD  3DBE               	addwfc	(_currentTime+1)^(0+128),f
 16692  07FE  0008               	return
 16693  07FF                     __end_of_CLOCK_timerCallback:	
 16694                           
 16695                           	psect	text66
 16696  07FF                     __ptext66:	
 16697 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16698 ;; Defined at:
 16699 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 16700 ;; Parameters:    Size  Location     Type
 16701 ;;		None
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;		None
 16704 ;; Return value:  Size  Location     Type
 16705 ;;                  1    wreg      void 
 16706 ;; Registers used:
 16707 ;;		None
 16708 ;; Tracked objects:
 16709 ;;		On entry : 0/0
 16710 ;;		On exit  : 0/0
 16711 ;;		Unchanged: 0/0
 16712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;Total ram usage:        0 bytes
 16718 ;; Hardware stack levels used:    1
 16719 ;; This function calls:
 16720 ;;		Nothing
 16721 ;; This function is called by:
 16722 ;;		_TMR0_Initialize
 16723 ;;		_TMR0_ISR
 16724 ;; This function uses a non-reentrant model
 16725 ;;
 16726                           
 16727                           
 16728                           ;psect for function _TMR0_DefaultInterruptHandler
 16729  07FF                     _TMR0_DefaultInterruptHandler:	
 16730                           
 16731                           ;incstack = 0
 16732 ;; hardware stack exceeded
 16733                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 16734  07FF  0008               	return
 16735  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 16736                           
 16737                           	psect	text67
 16738  0077                     __ptext67:	
 16739 ;; *************** function _I2C1_ISR *****************
 16740 ;; Defined at:
 16741 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 16742 ;; Parameters:    Size  Location     Type
 16743 ;;		None
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;		None
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  1    wreg      void 
 16748 ;; Registers used:
 16749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16759 ;;Total ram usage:        4 bytes
 16760 ;; Hardware stack levels used:    1
 16761 ;; Hardware stack levels required when called:    1
 16762 ;; This function calls:
 16763 ;;		_I2C1_FunctionComplete
 16764 ;;		_I2C1_Stop
 16765 ;; This function is called by:
 16766 ;;		_INTERRUPT_InterruptManager
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           
 16771                           ;psect for function _I2C1_ISR
 16772  0077                     _I2C1_ISR:	
 16773                           
 16774                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 16775                           
 16776                           ;incstack = 0
 16777 ;; hardware stack exceeded
 16778                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16779  0077  014E               	movlb	14	; select bank14
 16780  0078  100F               	bcf	15,0	;volatile
 16781                           
 16782                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 16783  0079  0143               	movlb	3	; select bank3
 16784  007A  1F90               	btfss	16,7	;volatile
 16785  007B  2998               	goto	i1l5050
 16786                           
 16787                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 16788  007C  1390               	bcf	16,7	;volatile
 16789                           
 16790                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 16791  007D  0141               	movlb	1	; select bank1
 16792  007E  01CE               	clrf	_i2c1_state^(0+128)
 16793                           
 16794                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 16795  007F  084B               	movf	_p_i2c1_current^(0+128),w
 16796  0080  3E02               	addlw	2
 16797  0081  0086               	movwf	6
 16798  0082  0187               	clrf	7
 16799  0083  0801               	movf	1,w
 16800  0084  0086               	movwf	6
 16801  0085  0187               	clrf	7
 16802  0086  0181               	clrf	1
 16803  0087  0A81               	incf	1,f
 16804                           
 16805                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 16806  0088  01CB               	clrf	_p_i2c1_current^(0+128)
 16807  0089  0008               	return
 16808  008A                     i1l549:	
 16809                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 16810                           
 16811                           
 16812                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 16813  008A  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 16814  008B  0008               	return
 16815                           
 16816                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 16817  008C  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16818  008D  00F9               	movwf	??_I2C1_ISR
 16819  008E  0879               	movf	??_I2C1_ISR,w
 16820  008F  00CB               	movwf	_p_i2c1_current^(0+128)
 16821                           
 16822                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 16823  0090  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16824  0091  0086               	movwf	6
 16825  0092  0187               	clrf	7
 16826  0093  0801               	movf	1,w
 16827  0094  00F9               	movwf	??_I2C1_ISR
 16828  0095  0879               	movf	??_I2C1_ISR,w
 16829  0096  00CD               	movwf	_i2c1_trb_count^(0+128)
 16830                           
 16831                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 16832  0097  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16833  0098  0086               	movwf	6
 16834  0099  0187               	clrf	7
 16835  009A  3F41               	moviw [1]fsr1
 16836  009B  00CC               	movwf	_p_i2c1_trb_current^(0+128)
 16837                           
 16838                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 16839  009C  3003               	movlw	3
 16840  009D  00F9               	movwf	??_I2C1_ISR
 16841  009E  0879               	movf	??_I2C1_ISR,w
 16842  009F  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 16843                           
 16844                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 16845  00A0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16846  00A1  3AD4               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 16847  00A2  1D03               	skipz
 16848  00A3  28A8               	goto	i1l4938
 16849                           
 16850                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 16851  00A4  30D1               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 16852  00A5  00F9               	movwf	??_I2C1_ISR
 16853  00A6  0879               	movf	??_I2C1_ISR,w
 16854  00A7  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 16855  00A8                     i1l4938:	
 16856                           
 16857                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 16858  00A8  1022               	bcf	(_i2c1_object^(0+128)+2),0
 16859                           
 16860                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 16861  00A9  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16862  00AA  0620               	xorwf	_i2c1_object^(0+128),w
 16863  00AB  1903               	btfsc	3,2
 16864                           
 16865                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 16866  00AC  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 16867                           
 16868                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 16869                           
 16870                           ;mcc_generated_files/i2c1.c: 290:                 }
 16871  00AD  0143               	movlb	3	; select bank3
 16872  00AE  1411               	bsf	17,0	;volatile
 16873  00AF                     i1l4942:	
 16874                           
 16875                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 16876  00AF  3002               	movlw	2
 16877  00B0  00F9               	movwf	??_I2C1_ISR
 16878  00B1  0879               	movf	??_I2C1_ISR,w
 16879  00B2  0141               	movlb	1	; select bank1
 16880  00B3  00CE               	movwf	_i2c1_state^(0+128)
 16881  00B4  0008               	return
 16882  00B5                     i1l554:	
 16883                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 16884                           
 16885  00B5  2941               	goto	i1l575
 16886  00B6                     i1l555:	
 16887                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 16888                           
 16889                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 16890                           
 16891                           
 16892                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 16893  00B6  0143               	movlb	3	; select bank3
 16894  00B7  1F11               	btfss	17,6	;volatile
 16895  00B8  28C2               	goto	i1l4950
 16896                           
 16897                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 16898  00B9  3001               	movlw	1
 16899  00BA  00F9               	movwf	??_I2C1_ISR
 16900  00BB  0879               	movf	??_I2C1_ISR,w
 16901  00BC  0141               	movlb	1	; select bank1
 16902  00BD  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16903                           
 16904                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16905  00BE  3004               	movlw	4
 16906  00BF  318B  23C2         	fcall	_I2C1_Stop
 16907                           
 16908                           ;mcc_generated_files/i2c1.c: 319:             }
 16909  00C1  0008               	return
 16910  00C2                     i1l4950:	
 16911                           
 16912                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 16913  00C2  0876               	movf	I2C1_ISR@i2c_address+1,w
 16914  00C3  00FA               	movwf	??_I2C1_ISR+1
 16915  00C4  0875               	movf	I2C1_ISR@i2c_address,w
 16916  00C5  00F9               	movwf	??_I2C1_ISR
 16917  00C6  36FA               	lsrf	??_I2C1_ISR+1,f
 16918  00C7  0CF9               	rrf	??_I2C1_ISR,f
 16919  00C8  0879               	movf	??_I2C1_ISR,w
 16920  00C9  008C               	movwf	12	;volatile
 16921                           
 16922                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 16923  00CA  1C75               	btfss	I2C1_ISR@i2c_address,0
 16924  00CB  28D2               	goto	i1l4956
 16925                           
 16926                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 16927  00CC  300B               	movlw	11
 16928  00CD  00F9               	movwf	??_I2C1_ISR
 16929  00CE  0879               	movf	??_I2C1_ISR,w
 16930  00CF  0141               	movlb	1	; select bank1
 16931  00D0  00CE               	movwf	_i2c1_state^(0+128)
 16932                           
 16933                           ;mcc_generated_files/i2c1.c: 331:                 }
 16934  00D1  0008               	return
 16935  00D2                     i1l4956:	
 16936                           
 16937                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 16938  00D2  3003               	movlw	3
 16939  00D3  00F9               	movwf	??_I2C1_ISR
 16940  00D4  0879               	movf	??_I2C1_ISR,w
 16941  00D5  0141               	movlb	1	; select bank1
 16942  00D6  00CE               	movwf	_i2c1_state^(0+128)
 16943  00D7  0008               	return
 16944  00D8                     i1l560:	
 16945                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 16946                           
 16947                           
 16948                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 16949  00D8  0143               	movlb	3	; select bank3
 16950  00D9  1F11               	btfss	17,6	;volatile
 16951  00DA  28E4               	goto	i1l561
 16952                           
 16953                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 16954  00DB  3001               	movlw	1
 16955  00DC  00F9               	movwf	??_I2C1_ISR
 16956  00DD  0879               	movf	??_I2C1_ISR,w
 16957  00DE  0141               	movlb	1	; select bank1
 16958  00DF  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16959                           
 16960                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16961  00E0  3004               	movlw	4
 16962  00E1  318B  23C2         	fcall	_I2C1_Stop
 16963                           
 16964                           ;mcc_generated_files/i2c1.c: 347:             }
 16965  00E3  0008               	return
 16966  00E4                     i1l561:	
 16967                           ;mcc_generated_files/i2c1.c: 348:             else
 16968                           
 16969                           
 16970                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 16971  00E4  1491               	bsf	17,1	;volatile
 16972                           
 16973                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 16974  00E5  0876               	movf	I2C1_ISR@i2c_address+1,w
 16975  00E6  00FA               	movwf	??_I2C1_ISR+1
 16976  00E7  0875               	movf	I2C1_ISR@i2c_address,w
 16977  00E8  00F9               	movwf	??_I2C1_ISR
 16978  00E9  087A               	movf	??_I2C1_ISR+1,w
 16979  00EA  00F9               	movwf	??_I2C1_ISR
 16980  00EB  01FA               	clrf	??_I2C1_ISR+1
 16981  00EC  3006               	movlw	6
 16982  00ED  0579               	andwf	??_I2C1_ISR,w
 16983  00EE  00FB               	movwf	??_I2C1_ISR+2
 16984  00EF  3000               	movlw	0
 16985  00F0  057A               	andwf	??_I2C1_ISR+1,w
 16986  00F1  00FC               	movwf	??_I2C1_ISR+3
 16987  00F2  30F0               	movlw	240
 16988  00F3  047B               	iorwf	??_I2C1_ISR+2,w
 16989  00F4  00F5               	movwf	I2C1_ISR@i2c_address
 16990  00F5  3000               	movlw	0
 16991  00F6  047C               	iorwf	??_I2C1_ISR+3,w
 16992  00F7  00F6               	movwf	I2C1_ISR@i2c_address+1
 16993                           
 16994                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 16995  00F8  1475               	bsf	I2C1_ISR@i2c_address,0
 16996                           
 16997                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 16998  00F9  0141               	movlb	1	; select bank1
 16999  00FA  01C8               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 17000  00FB  0AC8               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 17001  00FC  28AF               	goto	i1l4942
 17002  00FD                     i1l4970:	
 17003                           
 17004                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 17005  00FD  0348               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 17006  00FE  1903               	btfsc	3,2
 17007  00FF  2916               	goto	i1l4990
 17008                           
 17009                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 17010  0100  084C               	movf	_p_i2c1_trb_current^(0+128),w
 17011  0101  0086               	movwf	6
 17012  0102  3001               	movlw	1	; select bank2/3
 17013  0103  0087               	movwf	7
 17014  0104  3F40               	moviw [0]fsr1
 17015  0105  00F5               	movwf	I2C1_ISR@i2c_address
 17016  0106  3F41               	moviw [1]fsr1
 17017  0107  00F6               	movwf	I2C1_ISR@i2c_address+1
 17018                           
 17019                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 17020  0108  084C               	movf	_p_i2c1_trb_current^(0+128),w
 17021  0109  0086               	movwf	6
 17022  010A  3001               	movlw	1	; select bank2/3
 17023  010B  0087               	movwf	7
 17024  010C  3001               	movlw	1	; select bank2/3
 17025  010D  3F43               	moviw [3]fsr1
 17026  010E  00CA               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 17027                           
 17028                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 17029  010F  084C               	movf	_p_i2c1_trb_current^(0+128),w
 17030  0110  0086               	movwf	6
 17031  0111  3001               	movlw	1	; select bank2/3
 17032  0112  0087               	movwf	7
 17033  0113  3001               	movlw	1	; select bank2/3
 17034  0114  3F42               	moviw [2]fsr1
 17035  0115  00C9               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 17036  0116                     i1l4990:	
 17037                           
 17038                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 17039  0116  0875               	movf	I2C1_ISR@i2c_address,w
 17040  0117  0143               	movlb	3	; select bank3
 17041  0118  008C               	movwf	12	;volatile
 17042                           
 17043                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 17044  0119  1C75               	btfss	I2C1_ISR@i2c_address,0
 17045  011A  28D2               	goto	i1l4956
 17046                           
 17047                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 17048  011B  3005               	movlw	5
 17049  011C  00F9               	movwf	??_I2C1_ISR
 17050  011D  0879               	movf	??_I2C1_ISR,w
 17051  011E  0141               	movlb	1	; select bank1
 17052  011F  00CE               	movwf	_i2c1_state^(0+128)
 17053                           
 17054                           ;mcc_generated_files/i2c1.c: 419:                 }
 17055  0120  0008               	return
 17056  0121                     i1l571:	
 17057                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 17058                           
 17059                           
 17060                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 17061  0121  0143               	movlb	3	; select bank3
 17062  0122  1F11               	btfss	17,6	;volatile
 17063  0123  292F               	goto	i1l5004
 17064                           
 17065                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 17066  0124  3001               	movlw	1
 17067  0125  00F9               	movwf	??_I2C1_ISR
 17068  0126  0879               	movf	??_I2C1_ISR,w
 17069  0127  0141               	movlb	1	; select bank1
 17070  0128  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17071                           
 17072                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 17073  0129  0143               	movlb	3	; select bank3
 17074  012A  1311               	bcf	17,6	;volatile
 17075                           
 17076                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 17077  012B  3005               	movlw	5
 17078  012C  318B  23C2         	fcall	_I2C1_Stop
 17079                           
 17080                           ;mcc_generated_files/i2c1.c: 442:             }
 17081  012E  0008               	return
 17082  012F                     i1l5004:	
 17083                           
 17084                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 17085  012F  3001               	movlw	1
 17086  0130  0141               	movlb	1	; select bank1
 17087  0131  02C9               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 17088  0132  0A49               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 17089  0133  1D03               	btfss	3,2
 17090  0134  2944               	goto	i1l5012
 17091                           
 17092                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 17093  0135  3004               	movlw	4
 17094  0136  00F9               	movwf	??_I2C1_ISR
 17095  0137  0879               	movf	??_I2C1_ISR,w
 17096  0138  07CC               	addwf	_p_i2c1_trb_current^(0+128),f
 17097                           
 17098                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 17099  0139  3001               	movlw	1
 17100  013A  02CD               	subwf	_i2c1_trb_count^(0+128),f
 17101  013B  1D03               	btfss	3,2
 17102  013C  2941               	goto	i1l575
 17103                           
 17104                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17105  013D  3000               	movlw	0
 17106  013E  318B  23C2         	fcall	_I2C1_Stop
 17107                           
 17108                           ;mcc_generated_files/i2c1.c: 457:                     }
 17109  0140  0008               	return
 17110  0141                     i1l575:	
 17111                           ;mcc_generated_files/i2c1.c: 458:                     else
 17112                           
 17113                           
 17114                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 17115  0141  0143               	movlb	3	; select bank3
 17116  0142  1491               	bsf	17,1	;volatile
 17117  0143  28AF               	goto	i1l4942
 17118  0144                     i1l5012:	
 17119                           
 17120                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 17121  0144  084A               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 17122  0145  0086               	movwf	6
 17123  0146  0187               	clrf	7
 17124  0147  0801               	movf	1,w
 17125  0148  0143               	movlb	3	; select bank3
 17126  0149  008C               	movwf	12	;volatile
 17127  014A  3001               	movlw	1
 17128  014B  00F9               	movwf	??_I2C1_ISR
 17129  014C  0879               	movf	??_I2C1_ISR,w
 17130  014D  0141               	movlb	1	; select bank1
 17131  014E  07CA               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 17132  014F  0008               	return
 17133  0150                     i1l578:	
 17134                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 17135                           
 17136                           
 17137                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 17138  0150  0143               	movlb	3	; select bank3
 17139  0151  1F11               	btfss	17,6	;volatile
 17140  0152  295E               	goto	i1l579
 17141                           
 17142                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 17143  0153  3001               	movlw	1
 17144  0154  00F9               	movwf	??_I2C1_ISR
 17145  0155  0879               	movf	??_I2C1_ISR,w
 17146  0156  0141               	movlb	1	; select bank1
 17147  0157  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17148                           
 17149                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17150  0158  3004               	movlw	4
 17151  0159  318B  23C2         	fcall	_I2C1_Stop
 17152                           
 17153                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 17154  015B  0143               	movlb	3	; select bank3
 17155  015C  1311               	bcf	17,6	;volatile
 17156                           
 17157                           ;mcc_generated_files/i2c1.c: 495:             }
 17158  015D  0008               	return
 17159  015E                     i1l579:	
 17160                           ;mcc_generated_files/i2c1.c: 496:             else
 17161                           
 17162                           
 17163                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 17164  015E  1591               	bsf	17,3	;volatile
 17165                           
 17166                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 17167  015F  3008               	movlw	8
 17168  0160  00F9               	movwf	??_I2C1_ISR
 17169  0161  0879               	movf	??_I2C1_ISR,w
 17170  0162  0141               	movlb	1	; select bank1
 17171  0163  00CE               	movwf	_i2c1_state^(0+128)
 17172  0164  0008               	return
 17173  0165                     i1l5024:	
 17174                           
 17175                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 17176  0165  3008               	movlw	8
 17177  0166  00F9               	movwf	??_I2C1_ISR
 17178  0167  0879               	movf	??_I2C1_ISR,w
 17179  0168  00CE               	movwf	_i2c1_state^(0+128)
 17180                           
 17181                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 17182  0169  0143               	movlb	3	; select bank3
 17183  016A  1591               	bsf	17,3	;volatile
 17184                           
 17185                           ;mcc_generated_files/i2c1.c: 513:             break;
 17186  016B  0008               	return
 17187  016C                     i1l5028:	
 17188                           
 17189                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 17190  016C  0143               	movlb	3	; select bank3
 17191  016D  080C               	movf	12,w	;volatile
 17192  016E  00F9               	movwf	??_I2C1_ISR
 17193  016F  0141               	movlb	1	; select bank1
 17194  0170  084A               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 17195  0171  0086               	movwf	6
 17196  0172  0187               	clrf	7
 17197  0173  0879               	movf	??_I2C1_ISR,w
 17198  0174  0081               	movwf	1
 17199  0175  3001               	movlw	1
 17200  0176  00F9               	movwf	??_I2C1_ISR
 17201  0177  0879               	movf	??_I2C1_ISR,w
 17202  0178  07CA               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 17203                           
 17204                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 17205  0179  3001               	movlw	1
 17206  017A  02C9               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 17207  017B  1903               	btfsc	3,2
 17208  017C  2985               	goto	i1l583
 17209                           
 17210                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 17211  017D  0143               	movlb	3	; select bank3
 17212  017E  1291               	bcf	17,5	;volatile
 17213                           
 17214                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 17215  017F  3006               	movlw	6
 17216  0180  00F9               	movwf	??_I2C1_ISR
 17217  0181  0879               	movf	??_I2C1_ISR,w
 17218  0182  0141               	movlb	1	; select bank1
 17219  0183  00CE               	movwf	_i2c1_state^(0+128)
 17220                           
 17221                           ;mcc_generated_files/i2c1.c: 532:             }
 17222  0184  2989               	goto	i1l5040
 17223  0185                     i1l583:	
 17224                           ;mcc_generated_files/i2c1.c: 533:             else
 17225                           
 17226                           
 17227                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 17228  0185  0143               	movlb	3	; select bank3
 17229  0186  1691               	bsf	17,5	;volatile
 17230                           
 17231                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 17232  0187  318B  2311         	fcall	_I2C1_FunctionComplete
 17233  0189                     i1l5040:	
 17234                           
 17235                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 17236  0189  0143               	movlb	3	; select bank3
 17237  018A  1611               	bsf	17,4	;volatile
 17238                           
 17239                           ;mcc_generated_files/i2c1.c: 545:             break;
 17240  018B  0008               	return
 17241  018C                     i1l5042:	
 17242                           
 17243                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17244  018C  3000               	movlw	0
 17245  018D  318B  23C2         	fcall	_I2C1_Stop
 17246                           
 17247                           ;mcc_generated_files/i2c1.c: 552:             break;
 17248  018F  0008               	return
 17249  0190                     i1l5044:	
 17250                           
 17251                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 17252  0190  3001               	movlw	1
 17253  0191  00F9               	movwf	??_I2C1_ISR
 17254  0192  0879               	movf	??_I2C1_ISR,w
 17255  0193  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 17256                           
 17257                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 17258  0194  3006               	movlw	6
 17259  0195  318B  23C2         	fcall	_I2C1_Stop
 17260                           
 17261                           ;mcc_generated_files/i2c1.c: 560:             break;
 17262  0197  0008               	return
 17263  0198                     i1l5050:	
 17264  0198  0141               	movlb	1	; select bank1
 17265  0199  084E               	movf	_i2c1_state^(0+128),w
 17266  019A  00F9               	movwf	??_I2C1_ISR
 17267  019B  01FA               	clrf	??_I2C1_ISR+1
 17268                           
 17269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17270                           ; Switch size 1, requested type "simple"
 17271                           ; Number of cases is 1, Range of values is 0 to 0
 17272                           ; switch strategies available:
 17273                           ; Name         Instructions Cycles
 17274                           ; simple_byte            4     3 (average)
 17275                           ; direct_byte            8     6 (fixed)
 17276                           ; jumptable            260     6 (fixed)
 17277                           ;	Chosen strategy is simple_byte
 17278  019C  087A               	movf	??_I2C1_ISR+1,w
 17279  019D  3A00               	xorlw	0	; case 0
 17280  019E  1903               	skipnz
 17281  019F  29A1               	goto	i1l5818
 17282  01A0  2990               	goto	i1l5044
 17283  01A1                     i1l5818:	
 17284                           
 17285                           ; Switch size 1, requested type "simple"
 17286                           ; Number of cases is 11, Range of values is 0 to 11
 17287                           ; switch strategies available:
 17288                           ; Name         Instructions Cycles
 17289                           ; direct_byte           30     6 (fixed)
 17290                           ; simple_byte           34    18 (average)
 17291                           ; jumptable            260     6 (fixed)
 17292                           ;	Chosen strategy is simple_byte
 17293  01A1  0879               	movf	??_I2C1_ISR,w
 17294  01A2  3A00               	xorlw	0	; case 0
 17295  01A3  1903               	skipnz
 17296  01A4  288A               	goto	i1l549
 17297  01A5  3A01               	xorlw	1	; case 1
 17298  01A6  1903               	skipnz
 17299  01A7  28B5               	goto	i1l554
 17300  01A8  3A03               	xorlw	3	; case 2
 17301  01A9  1903               	skipnz
 17302  01AA  28FD               	goto	i1l4970
 17303  01AB  3A01               	xorlw	1	; case 3
 17304  01AC  1903               	skipnz
 17305  01AD  2921               	goto	i1l571
 17306  01AE  3A07               	xorlw	7	; case 4
 17307  01AF  1903               	skipnz
 17308  01B0  298C               	goto	i1l5042
 17309  01B1  3A01               	xorlw	1	; case 5
 17310  01B2  1903               	skipnz
 17311  01B3  2950               	goto	i1l578
 17312  01B4  3A03               	xorlw	3	; case 6
 17313  01B5  1903               	skipnz
 17314  01B6  2965               	goto	i1l5024
 17315  01B7  3A01               	xorlw	1	; case 7
 17316  01B8  1903               	skipnz
 17317  01B9  298C               	goto	i1l5042
 17318  01BA  3A0F               	xorlw	15	; case 8
 17319  01BB  1903               	skipnz
 17320  01BC  296C               	goto	i1l5028
 17321  01BD  3A02               	xorlw	2	; case 10
 17322  01BE  1903               	skipnz
 17323  01BF  28B6               	goto	i1l555
 17324  01C0  3A01               	xorlw	1	; case 11
 17325  01C1  1903               	skipnz
 17326  01C2  28D8               	goto	i1l560
 17327  01C3  2990               	goto	i1l5044
 17328  01C4  0008               	return
 17329  01C5                     __end_of_I2C1_ISR:	
 17330                           
 17331                           	psect	text68
 17332  0BC2                     __ptext68:	
 17333 ;; *************** function _I2C1_Stop *****************
 17334 ;; Defined at:
 17335 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 17336 ;; Parameters:    Size  Location     Type
 17337 ;;  completion_c    1    wreg     enum E10866
 17338 ;; Auto vars:     Size  Location     Type
 17339 ;;  completion_c    1    1[COMMON] enum E10866
 17340 ;; Return value:  Size  Location     Type
 17341 ;;                  1    wreg      void 
 17342 ;; Registers used:
 17343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17344 ;; Tracked objects:
 17345 ;;		On entry : 0/0
 17346 ;;		On exit  : 0/0
 17347 ;;		Unchanged: 0/0
 17348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17353 ;;Total ram usage:        2 bytes
 17354 ;; Hardware stack levels used:    1
 17355 ;; This function calls:
 17356 ;;		Nothing
 17357 ;; This function is called by:
 17358 ;;		_I2C1_ISR
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           
 17363                           ;psect for function _I2C1_Stop
 17364  0BC2                     _I2C1_Stop:	
 17365                           
 17366                           ;incstack = 0
 17367 ;; hardware stack exceeded
 17368                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 17369                           ;I2C1_Stop@completion_code stored from wreg
 17370  0BC2  00F8               	movwf	I2C1_Stop@completion_code
 17371                           
 17372                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 17373  0BC3  0143               	movlb	3	; select bank3
 17374  0BC4  1511               	bsf	17,2	;volatile
 17375                           
 17376                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 17377  0BC5  0141               	movlb	1	; select bank1
 17378  0BC6  084B               	movf	_p_i2c1_current^(0+128),w
 17379  0BC7  3E02               	addlw	2
 17380  0BC8  0086               	movwf	6
 17381  0BC9  0187               	clrf	7
 17382  0BCA  0801               	movf	1,w
 17383  0BCB  1903               	btfsc	3,2
 17384  0BCC  2BD8               	goto	i1l4802
 17385                           
 17386                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 17387  0BCD  0878               	movf	I2C1_Stop@completion_code,w
 17388  0BCE  00F7               	movwf	??_I2C1_Stop
 17389  0BCF  084B               	movf	_p_i2c1_current^(0+128),w
 17390  0BD0  3E02               	addlw	2
 17391  0BD1  0086               	movwf	6
 17392  0BD2  0187               	clrf	7
 17393  0BD3  0801               	movf	1,w
 17394  0BD4  0086               	movwf	6
 17395  0BD5  0187               	clrf	7
 17396  0BD6  0877               	movf	??_I2C1_Stop,w
 17397  0BD7  0081               	movwf	1
 17398  0BD8                     i1l4802:	
 17399                           
 17400                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 17401  0BD8  01CE               	clrf	_i2c1_state^(0+128)
 17402  0BD9  0008               	return
 17403  0BDA                     __end_of_I2C1_Stop:	
 17404                           
 17405                           	psect	text69
 17406  0B11                     __ptext69:	
 17407 ;; *************** function _I2C1_FunctionComplete *****************
 17408 ;; Defined at:
 17409 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 17410 ;; Parameters:    Size  Location     Type
 17411 ;;		None
 17412 ;; Auto vars:     Size  Location     Type
 17413 ;;		None
 17414 ;; Return value:  Size  Location     Type
 17415 ;;                  1    wreg      void 
 17416 ;; Registers used:
 17417 ;;		wreg, status,2, status,0
 17418 ;; Tracked objects:
 17419 ;;		On entry : 0/0
 17420 ;;		On exit  : 0/0
 17421 ;;		Unchanged: 0/0
 17422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17427 ;;Total ram usage:        1 bytes
 17428 ;; Hardware stack levels used:    1
 17429 ;; This function calls:
 17430 ;;		Nothing
 17431 ;; This function is called by:
 17432 ;;		_I2C1_ISR
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           
 17437                           ;psect for function _I2C1_FunctionComplete
 17438  0B11                     _I2C1_FunctionComplete:	
 17439                           
 17440                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 17441                           
 17442                           ;incstack = 0
 17443 ;; hardware stack exceeded
 17444                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 17445  0B11  3004               	movlw	4
 17446  0B12  00F7               	movwf	??_I2C1_FunctionComplete
 17447  0B13  0877               	movf	??_I2C1_FunctionComplete,w
 17448  0B14  0141               	movlb	1	; select bank1
 17449  0B15  07CC               	addwf	_p_i2c1_trb_current^(0+128),f
 17450                           
 17451                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 17452  0B16  3001               	movlw	1
 17453  0B17  02CD               	subwf	_i2c1_trb_count^(0+128),f
 17454  0B18  1D03               	btfss	3,2
 17455  0B19  2B1F               	goto	i1l590
 17456                           
 17457                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 17458  0B1A  3004               	movlw	4
 17459  0B1B  00F7               	movwf	??_I2C1_FunctionComplete
 17460  0B1C  0877               	movf	??_I2C1_FunctionComplete,w
 17461  0B1D  00CE               	movwf	_i2c1_state^(0+128)
 17462                           
 17463                           ;mcc_generated_files/i2c1.c: 575:     }
 17464  0B1E  0008               	return
 17465  0B1F                     i1l590:	
 17466                           ;mcc_generated_files/i2c1.c: 576:     else
 17467                           
 17468                           
 17469                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 17470  0B1F  01CE               	clrf	_i2c1_state^(0+128)
 17471  0B20  0ACE               	incf	_i2c1_state^(0+128),f
 17472  0B21  0008               	return
 17473  0B22                     __end_of_I2C1_FunctionComplete:	
 17474                           
 17475                           	psect	text70
 17476  09F4                     __ptext70:	
 17477 ;; *************** function _I2C1_BusCollisionISR *****************
 17478 ;; Defined at:
 17479 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 17480 ;; Parameters:    Size  Location     Type
 17481 ;;		None
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1    wreg      void 
 17486 ;; Registers used:
 17487 ;;		None
 17488 ;; Tracked objects:
 17489 ;;		On entry : 0/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17497 ;;Total ram usage:        0 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		_INTERRUPT_InterruptManager
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _I2C1_BusCollisionISR
 17508  09F4                     _I2C1_BusCollisionISR:	
 17509                           
 17510                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 17511                           
 17512                           ;incstack = 0
 17513                           ; Regs used in _I2C1_BusCollisionISR: []
 17514  09F4  014E               	movlb	14	; select bank14
 17515  09F5  108F               	bcf	15,1	;volatile
 17516  09F6  0008               	return
 17517  09F7                     __end_of_I2C1_BusCollisionISR:	
 17518                           
 17519                           	psect	text71
 17520  0F4A                     __ptext71:	
 17521 ;; *************** function _DMX_interrupt *****************
 17522 ;; Defined at:
 17523 ;;		line 22 in file "dmx.c"
 17524 ;; Parameters:    Size  Location     Type
 17525 ;;		None
 17526 ;; Auto vars:     Size  Location     Type
 17527 ;;  dummy           1    6[COMMON] volatile unsigned char 
 17528 ;; Return value:  Size  Location     Type
 17529 ;;                  1    wreg      void 
 17530 ;; Registers used:
 17531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17532 ;; Tracked objects:
 17533 ;;		On entry : 0/0
 17534 ;;		On exit  : 0/0
 17535 ;;		Unchanged: 0/0
 17536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17539 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17541 ;;Total ram usage:        7 bytes
 17542 ;; Hardware stack levels used:    1
 17543 ;; This function calls:
 17544 ;;		Nothing
 17545 ;; This function is called by:
 17546 ;;		_DMX_init
 17547 ;;		_INTERRUPT_InterruptManager
 17548 ;; This function uses a non-reentrant model
 17549 ;;
 17550                           
 17551                           
 17552                           ;psect for function _DMX_interrupt
 17553  0F4A                     _DMX_interrupt:	
 17554                           
 17555                           ;dmx.c: 24:     if (RC1STAbits.OERR) {
 17556                           
 17557                           ;incstack = 0
 17558                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 17559  0F4A  0142               	movlb	2	; select bank2
 17560  0F4B  1C9D               	btfss	29,1	;volatile
 17561  0F4C  2F4F               	goto	i1l4228
 17562                           
 17563                           ;dmx.c: 25:         RC1STAbits.CREN = 0;
 17564  0F4D  121D               	bcf	29,4	;volatile
 17565                           
 17566                           ;dmx.c: 26:         RC1STAbits.CREN = 1;
 17567  0F4E  161D               	bsf	29,4	;volatile
 17568  0F4F                     i1l4228:	
 17569                           
 17570                           ;dmx.c: 29:     if (initial == 0 && !(RC1STAbits.FERR)) {
 17571  0F4F  0141               	movlb	1	; select bank1
 17572  0F50  0854               	movf	_initial^(0+128),w
 17573  0F51  0455               	iorwf	(_initial+1)^(0+128),w
 17574  0F52  1D03               	btfss	3,2
 17575  0F53  2F74               	goto	i1l4236
 17576  0F54  0142               	movlb	2	; select bank2
 17577  0F55  191D               	btfsc	29,2	;volatile
 17578  0F56  2F74               	goto	i1l4236
 17579                           
 17580                           ;dmx.c: 30:         dmxArray[arrayIndex] = RC1REG;
 17581  0F57  0819               	movf	25,w	;volatile
 17582  0F58  00F7               	movwf	??_DMX_interrupt
 17583  0F59  01F8               	clrf	??_DMX_interrupt+1
 17584  0F5A  0141               	movlb	1	; select bank1
 17585  0F5B  0830               	movf	(_arrayIndex+1)^(0+128),w
 17586  0F5C  00FA               	movwf	??_DMX_interrupt+3
 17587  0F5D  082F               	movf	_arrayIndex^(0+128),w
 17588  0F5E  00F9               	movwf	??_DMX_interrupt+2
 17589  0F5F  35F9               	lslf	??_DMX_interrupt+2,f
 17590  0F60  0DFA               	rlf	??_DMX_interrupt+3,f
 17591  0F61  30EE               	movlw	238
 17592  0F62  00FB               	movwf	??_DMX_interrupt+4
 17593  0F63  3023               	movlw	35
 17594  0F64  00FC               	movwf	??_DMX_interrupt+5
 17595  0F65  0879               	movf	??_DMX_interrupt+2,w
 17596  0F66  077B               	addwf	??_DMX_interrupt+4,w
 17597  0F67  0086               	movwf	6
 17598  0F68  087A               	movf	??_DMX_interrupt+3,w
 17599  0F69  3D7C               	addwfc	??_DMX_interrupt+5,w
 17600  0F6A  0087               	movwf	7
 17601  0F6B  0877               	movf	??_DMX_interrupt,w
 17602  0F6C  3FC0               	movwi [0]fsr1
 17603  0F6D  0878               	movf	??_DMX_interrupt+1,w
 17604  0F6E  3FC1               	movwi [1]fsr1
 17605                           
 17606                           ;dmx.c: 31:         arrayIndex += 1;
 17607  0F6F  3001               	movlw	1
 17608  0F70  07AF               	addwf	_arrayIndex^(0+128),f
 17609  0F71  3000               	movlw	0
 17610  0F72  3DB0               	addwfc	(_arrayIndex+1)^(0+128),f
 17611                           
 17612                           ;dmx.c: 32:     } else {
 17613  0F73  2F7E               	goto	i1l4240
 17614  0F74                     i1l4236:	
 17615                           
 17616                           ;dmx.c: 33:         arrayIndex = 0;
 17617  0F74  0141               	movlb	1	; select bank1
 17618  0F75  01AF               	clrf	_arrayIndex^(0+128)
 17619  0F76  01B0               	clrf	(_arrayIndex+1)^(0+128)
 17620                           
 17621                           ;dmx.c: 34:         initial = 0;
 17622  0F77  01D4               	clrf	_initial^(0+128)
 17623  0F78  01D5               	clrf	(_initial+1)^(0+128)
 17624                           
 17625                           ;dmx.c: 35:         volatile uint8_t dummy = RC1REG;
 17626  0F79  0142               	movlb	2	; select bank2
 17627  0F7A  0819               	movf	25,w	;volatile
 17628  0F7B  00F7               	movwf	??_DMX_interrupt
 17629  0F7C  0877               	movf	??_DMX_interrupt,w
 17630  0F7D  00FD               	movwf	DMX_interrupt@dummy	;volatile
 17631  0F7E                     i1l4240:	
 17632                           
 17633                           ;dmx.c: 38:     PIR3bits.RC1IF = 0;
 17634  0F7E  014E               	movlb	14	; select bank14
 17635  0F7F  128F               	bcf	15,5	;volatile
 17636  0F80  0008               	return
 17637  0F81                     __end_of_DMX_interrupt:	
 17638                           
 17639                           	psect	text72
 17640  07BF                     __ptext72:	
 17641 ;; *************** function _EUSART1_Receive_ISR *****************
 17642 ;; Defined at:
 17643 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 17644 ;; Parameters:    Size  Location     Type
 17645 ;;		None
 17646 ;; Auto vars:     Size  Location     Type
 17647 ;;		None
 17648 ;; Return value:  Size  Location     Type
 17649 ;;                  1    wreg      void 
 17650 ;; Registers used:
 17651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17652 ;; Tracked objects:
 17653 ;;		On entry : 0/0
 17654 ;;		On exit  : 0/0
 17655 ;;		Unchanged: 0/0
 17656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17661 ;;Total ram usage:        0 bytes
 17662 ;; Hardware stack levels used:    1
 17663 ;; Hardware stack levels required when called:    2
 17664 ;; This function calls:
 17665 ;;		Absolute function
 17666 ;;		_EUSART1_DefaultErrorHandler
 17667 ;;		_EUSART1_DefaultFramingErrorHandler
 17668 ;;		_EUSART1_DefaultOverrunErrorHandler
 17669 ;;		_EUSART1_RxDataHandler
 17670 ;; This function is called by:
 17671 ;;		_EUSART1_Initialize
 17672 ;;		_INTERRUPT_InterruptManager
 17673 ;; This function uses a non-reentrant model
 17674 ;;
 17675                           
 17676                           
 17677                           ;psect for function _EUSART1_Receive_ISR
 17678  07BF                     _EUSART1_Receive_ISR:	
 17679                           
 17680                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 17681                           
 17682                           ;incstack = 0
 17683 ;; hardware stack exceeded
 17684                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17685  07BF  0140               	movlb	0	; select bank0
 17686  07C0  086F               	movf	_eusart1RxHead,w	;volatile
 17687  07C1  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17688  07C2  0086               	movwf	6
 17689  07C3  3001               	movlw	1	; select bank2/3
 17690  07C4  0087               	movwf	7
 17691  07C5  0181               	clrf	1
 17692                           
 17693                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 17694  07C6  0142               	movlb	2	; select bank2
 17695  07C7  1D1D               	btfss	29,2	;volatile
 17696  07C8  2FD6               	goto	i1l3810
 17697                           
 17698                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 17699  07C9  0140               	movlb	0	; select bank0
 17700  07CA  086F               	movf	_eusart1RxHead,w	;volatile
 17701  07CB  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17702  07CC  0086               	movwf	6
 17703  07CD  3001               	movlw	1	; select bank2/3
 17704  07CE  0087               	movwf	7
 17705  07CF  1481               	bsf	1,1
 17706                           
 17707                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 17708  07D0  0142               	movlb	2	; select bank2
 17709  07D1  085D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 17710  07D2  008A               	movwf	10
 17711  07D3  085C               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 17712  07D4  000A               	callw
 17713  07D5  3187               	pagesel	$
 17714  07D6                     i1l3810:	
 17715                           
 17716                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 17717  07D6  0142               	movlb	2	; select bank2
 17718  07D7  1C9D               	btfss	29,1	;volatile
 17719  07D8  2FE6               	goto	i1l3816
 17720                           
 17721                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17722  07D9  0140               	movlb	0	; select bank0
 17723  07DA  086F               	movf	_eusart1RxHead,w	;volatile
 17724  07DB  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17725  07DC  0086               	movwf	6
 17726  07DD  3001               	movlw	1	; select bank2/3
 17727  07DE  0087               	movwf	7
 17728  07DF  1501               	bsf	1,2
 17729                           
 17730                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 17731  07E0  0142               	movlb	2	; select bank2
 17732  07E1  085B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 17733  07E2  008A               	movwf	10
 17734  07E3  085A               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 17735  07E4  000A               	callw
 17736  07E5  3187               	pagesel	$
 17737  07E6                     i1l3816:	
 17738                           
 17739                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17740  07E6  0140               	movlb	0	; select bank0
 17741  07E7  086F               	movf	_eusart1RxHead,w	;volatile
 17742  07E8  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17743  07E9  0086               	movwf	6
 17744  07EA  3001               	movlw	1	; select bank2/3
 17745  07EB  0087               	movwf	7
 17746  07EC  0801               	movf	1,w
 17747  07ED  1903               	btfsc	3,2
 17748  07EE  2FF6               	goto	i1l3820
 17749                           
 17750                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 17751  07EF  0142               	movlb	2	; select bank2
 17752  07F0  0859               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 17753  07F1  008A               	movwf	10
 17754  07F2  0858               	movf	_EUSART1_ErrorHandler^(0+256),w
 17755  07F3  000A               	callw
 17756  07F4  3187               	pagesel	$
 17757                           
 17758                           ;mcc_generated_files/eusart1.c: 188:     } else {
 17759  07F5  0008               	return
 17760  07F6                     i1l3820:	
 17761                           
 17762                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 17763  07F6  318C  240A         	fcall	_EUSART1_RxDataHandler
 17764  07F8  0008               	return
 17765  07F9                     __end_of_EUSART1_Receive_ISR:	
 17766                           
 17767                           	psect	text73
 17768  09FB                     __ptext73:	
 17769 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17770 ;; Defined at:
 17771 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 17772 ;; Parameters:    Size  Location     Type
 17773 ;;		None
 17774 ;; Auto vars:     Size  Location     Type
 17775 ;;		None
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  1    wreg      void 
 17778 ;; Registers used:
 17779 ;;		None
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/0
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17789 ;;Total ram usage:        0 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; This function calls:
 17792 ;;		Nothing
 17793 ;; This function is called by:
 17794 ;;		_EUSART1_Initialize
 17795 ;;		_EUSART1_Receive_ISR
 17796 ;; This function uses a non-reentrant model
 17797 ;;
 17798                           
 17799                           
 17800                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 17801  09FB                     _EUSART1_DefaultOverrunErrorHandler:	
 17802                           
 17803                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 17804                           
 17805                           ;incstack = 0
 17806 ;; hardware stack exceeded
 17807                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 17808  09FB  0142               	movlb	2	; select bank2
 17809  09FC  121D               	bcf	29,4	;volatile
 17810                           
 17811                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 17812  09FD  161D               	bsf	29,4	;volatile
 17813  09FE  0008               	return
 17814  09FF                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 17815                           
 17816                           	psect	text74
 17817  0003                     __ptext74:	
 17818 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 17819 ;; Defined at:
 17820 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 17821 ;; Parameters:    Size  Location     Type
 17822 ;;		None
 17823 ;; Auto vars:     Size  Location     Type
 17824 ;;		None
 17825 ;; Return value:  Size  Location     Type
 17826 ;;                  1    wreg      void 
 17827 ;; Registers used:
 17828 ;;		None
 17829 ;; Tracked objects:
 17830 ;;		On entry : 0/0
 17831 ;;		On exit  : 0/0
 17832 ;;		Unchanged: 0/0
 17833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17838 ;;Total ram usage:        0 bytes
 17839 ;; Hardware stack levels used:    1
 17840 ;; This function calls:
 17841 ;;		Nothing
 17842 ;; This function is called by:
 17843 ;;		_EUSART1_Initialize
 17844 ;;		_EUSART1_Receive_ISR
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           
 17849                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 17850  0003                     _EUSART1_DefaultFramingErrorHandler:	
 17851                           
 17852                           ;incstack = 0
 17853 ;; hardware stack exceeded
 17854                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 17855  0003  0008               	return
 17856  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 17857                           
 17858                           	psect	text75
 17859  09F1                     __ptext75:	
 17860 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17861 ;; Defined at:
 17862 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 17863 ;; Parameters:    Size  Location     Type
 17864 ;;		None
 17865 ;; Auto vars:     Size  Location     Type
 17866 ;;		None
 17867 ;; Return value:  Size  Location     Type
 17868 ;;                  1    wreg      void 
 17869 ;; Registers used:
 17870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17871 ;; Tracked objects:
 17872 ;;		On entry : 0/0
 17873 ;;		On exit  : 0/0
 17874 ;;		Unchanged: 0/0
 17875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17880 ;;Total ram usage:        0 bytes
 17881 ;; Hardware stack levels used:    1
 17882 ;; Hardware stack levels required when called:    1
 17883 ;; This function calls:
 17884 ;;		_EUSART1_RxDataHandler
 17885 ;; This function is called by:
 17886 ;;		_EUSART1_Initialize
 17887 ;;		_EUSART1_Receive_ISR
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           
 17892                           ;psect for function _EUSART1_DefaultErrorHandler
 17893  09F1                     _EUSART1_DefaultErrorHandler:	
 17894                           
 17895                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 17896                           
 17897                           ;incstack = 0
 17898 ;; hardware stack exceeded
 17899                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17900  09F1  318C  240A         	fcall	_EUSART1_RxDataHandler
 17901  09F3  0008               	return
 17902  09F4                     __end_of_EUSART1_DefaultErrorHandler:	
 17903                           
 17904                           	psect	text76
 17905  0C0A                     __ptext76:	
 17906 ;; *************** function _EUSART1_RxDataHandler *****************
 17907 ;; Defined at:
 17908 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;		None
 17911 ;; Auto vars:     Size  Location     Type
 17912 ;;		None
 17913 ;; Return value:  Size  Location     Type
 17914 ;;                  1    wreg      void 
 17915 ;; Registers used:
 17916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17917 ;; Tracked objects:
 17918 ;;		On entry : 0/0
 17919 ;;		On exit  : 0/0
 17920 ;;		Unchanged: 0/0
 17921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17926 ;;Total ram usage:        1 bytes
 17927 ;; Hardware stack levels used:    1
 17928 ;; This function calls:
 17929 ;;		Nothing
 17930 ;; This function is called by:
 17931 ;;		_EUSART1_Receive_ISR
 17932 ;;		_EUSART1_DefaultErrorHandler
 17933 ;; This function uses a non-reentrant model
 17934 ;;
 17935                           
 17936                           
 17937                           ;psect for function _EUSART1_RxDataHandler
 17938  0C0A                     _EUSART1_RxDataHandler:	
 17939                           
 17940                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 17941                           
 17942                           ;incstack = 0
 17943 ;; hardware stack exceeded
 17944                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17945  0C0A  0142               	movlb	2	; select bank2
 17946  0C0B  0819               	movf	25,w	;volatile
 17947  0C0C  00F7               	movwf	??_EUSART1_RxDataHandler
 17948  0C0D  0140               	movlb	0	; select bank0
 17949  0C0E  086F               	movf	_eusart1RxHead,w
 17950  0C0F  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 17951  0C10  0086               	movwf	6
 17952  0C11  3001               	movlw	1	; select bank2/3
 17953  0C12  0087               	movwf	7
 17954  0C13  0877               	movf	??_EUSART1_RxDataHandler,w
 17955  0C14  0081               	movwf	1
 17956  0C15  3001               	movlw	1
 17957  0C16  00F7               	movwf	??_EUSART1_RxDataHandler
 17958  0C17  0877               	movf	??_EUSART1_RxDataHandler,w
 17959  0C18  07EF               	addwf	_eusart1RxHead,f	;volatile
 17960                           
 17961                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 17962  0C19  3008               	movlw	8
 17963  0C1A  026F               	subwf	_eusart1RxHead,w	;volatile
 17964  0C1B  1803               	btfsc	3,0
 17965                           
 17966                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 17967  0C1C  01EF               	clrf	_eusart1RxHead	;volatile
 17968                           
 17969                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 17970  0C1D  3001               	movlw	1
 17971  0C1E  00F7               	movwf	??_EUSART1_RxDataHandler
 17972  0C1F  0877               	movf	??_EUSART1_RxDataHandler,w
 17973  0C20  0141               	movlb	1	; select bank1
 17974  0C21  07D0               	addwf	_eusart1RxCount^(0+128),f	;volatile
 17975  0C22  0008               	return
 17976  0C23                     __end_of_EUSART1_RxDataHandler:	
 17977                           
 17978                           	psect	text77
 17979  0ADA                     __ptext77:	
 17980 ;; *************** function _ADCC_ThresholdISR *****************
 17981 ;; Defined at:
 17982 ;;		line 308 in file "mcc_generated_files/adcc.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;		None
 17985 ;; Auto vars:     Size  Location     Type
 17986 ;;		None
 17987 ;; Return value:  Size  Location     Type
 17988 ;;                  1    wreg      void 
 17989 ;; Registers used:
 17990 ;;		wreg, status,2, status,0, pclath, cstack
 17991 ;; Tracked objects:
 17992 ;;		On entry : 0/0
 17993 ;;		On exit  : 0/0
 17994 ;;		Unchanged: 0/0
 17995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18000 ;;Total ram usage:        0 bytes
 18001 ;; Hardware stack levels used:    1
 18002 ;; Hardware stack levels required when called:    1
 18003 ;; This function calls:
 18004 ;;		Absolute function
 18005 ;;		_ADCC_DefaultInterruptHandler
 18006 ;;		_adcThresholdHandler
 18007 ;; This function is called by:
 18008 ;;		_INTERRUPT_InterruptManager
 18009 ;; This function uses a non-reentrant model
 18010 ;;
 18011                           
 18012                           
 18013                           ;psect for function _ADCC_ThresholdISR
 18014  0ADA                     _ADCC_ThresholdISR:	
 18015                           
 18016                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 18017                           
 18018                           ;incstack = 0
 18019 ;; hardware stack exceeded
 18020                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 18021  0ADA  014E               	movlb	14	; select bank14
 18022  0ADB  108D               	bcf	13,1	;volatile
 18023                           
 18024                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 18025  0ADC  0141               	movlb	1	; select bank1
 18026  0ADD  0868               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 18027  0ADE  0469               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 18028  0ADF  1903               	btfsc	3,2
 18029  0AE0  0008               	return
 18030                           
 18031                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 18032  0AE1  0869               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 18033  0AE2  008A               	movwf	10
 18034  0AE3  0868               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 18035  0AE4  000A               	callw
 18036  0AE5  318A               	pagesel	$
 18037  0AE6  0008               	return
 18038  0AE7                     __end_of_ADCC_ThresholdISR:	
 18039                           
 18040                           	psect	text78
 18041  0002                     __ptext78:	
 18042 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 18043 ;; Defined at:
 18044 ;;		line 320 in file "mcc_generated_files/adcc.c"
 18045 ;; Parameters:    Size  Location     Type
 18046 ;;		None
 18047 ;; Auto vars:     Size  Location     Type
 18048 ;;		None
 18049 ;; Return value:  Size  Location     Type
 18050 ;;                  1    wreg      void 
 18051 ;; Registers used:
 18052 ;;		None
 18053 ;; Tracked objects:
 18054 ;;		On entry : 0/0
 18055 ;;		On exit  : 0/0
 18056 ;;		Unchanged: 0/0
 18057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18062 ;;Total ram usage:        0 bytes
 18063 ;; Hardware stack levels used:    1
 18064 ;; This function calls:
 18065 ;;		Nothing
 18066 ;; This function is called by:
 18067 ;;		_ADCC_Initialize
 18068 ;;		_ADCC_ThresholdISR
 18069 ;; This function uses a non-reentrant model
 18070 ;;
 18071                           
 18072                           
 18073                           ;psect for function _ADCC_DefaultInterruptHandler
 18074  0002                     _ADCC_DefaultInterruptHandler:	
 18075                           
 18076                           ;incstack = 0
 18077 ;; hardware stack exceeded
 18078                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 18079  0002  0008               	return
 18080  0003                     __end_of_ADCC_DefaultInterruptHandler:	
 18081                           
 18082                           	psect	text79
 18083  09F7                     __ptext79:	
 18084 ;; *************** function _adcThresholdHandler *****************
 18085 ;; Defined at:
 18086 ;;		line 37 in file "beat.c"
 18087 ;; Parameters:    Size  Location     Type
 18088 ;;		None
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;		None
 18091 ;; Return value:  Size  Location     Type
 18092 ;;                  1    wreg      void 
 18093 ;; Registers used:
 18094 ;;		None
 18095 ;; Tracked objects:
 18096 ;;		On entry : 0/0
 18097 ;;		On exit  : 0/0
 18098 ;;		Unchanged: 0/0
 18099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18104 ;;Total ram usage:        0 bytes
 18105 ;; Hardware stack levels used:    1
 18106 ;; This function calls:
 18107 ;;		Nothing
 18108 ;; This function is called by:
 18109 ;;		_BEAT_init
 18110 ;;		_ADCC_ThresholdISR
 18111 ;; This function uses a non-reentrant model
 18112 ;;
 18113                           
 18114                           
 18115                           ;psect for function _adcThresholdHandler
 18116  09F7                     _adcThresholdHandler:	
 18117                           
 18118                           ;beat.c: 38:     thresholdExceeded = 1;
 18119                           
 18120                           ;incstack = 0
 18121 ;; hardware stack exceeded
 18122                           ; Regs used in _adcThresholdHandler: []
 18123  09F7  0141               	movlb	1	; select bank1
 18124  09F8  01C2               	clrf	_thresholdExceeded^(0+128)
 18125  09F9  0AC2               	incf	_thresholdExceeded^(0+128),f
 18126  09FA  0008               	return
 18127  09FB                     __end_of_adcThresholdHandler:	
 18128  007E                     btemp	set	126	;btemp
 18129  007E                     int$flags	set	126
 18130  007E                     wtemp0	set	126


Data Sizes:
    Strings     78
    Constant    96
    Data        10
    BSS         148
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80     10      76
    BANK2            80      0      64
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_3(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_3(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_2(CODE[2]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2927_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_2(CODE[2]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_2(CODE[2]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1927$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_CLOCK_getTime
    _LED_task->_PWM1_LoadDutyValue
    _LED_task->_PWM2_LoadDutyValue
    _LED_task->_PWM3_LoadDutyValue
    _LED_task->_PWM4_LoadDutyValue
    _DMX_init->_EUSART1_SetRxInterruptHandler
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TM1650_init->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   51356
                                             77 BANK0      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   22728
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   19379
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   18203
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   17631
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   11950
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   11646
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    5299
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    4815
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    3665
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    3497
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0    3884
                                              2 BANK0      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0     211
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   14492
                                             23 BANK0      3     3      0
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    5372
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    5372
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    3349
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0     211
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     134
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    5372
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  3     1      2    5372
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    3307
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1735
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     676
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0      32
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C1_ISR                                            4     4      0      31
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (17) _I2C1_Stop                                           2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (16) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (17) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _address_dec
       _TM1650_fastPrintNum
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
     _address_inc
       _TM1650_fastPrintNum
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _PWM1_LoadDutyValue
     _PWM2_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     10A       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     10A      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 27 00:37:36 2019

                      ??_ADCC_SetUpperThreshold 0022                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                              _up 0073  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00CB  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 09F7  
                                           l917 0327                                             l919 038C  
                                           _PR2 028D                                             _bpm 00B5  
                                           _pad 071A                         __size_of_PMD_Initialize 000A  
                               _TMR2_Initialize 0AF4                                 _PWM4_Initialize 0AB7  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                 __CFG_BBEN$OFF 0000                                __end_of_I2C1_ISR 01C5  
                                          l1361 0732                                            l1364 0752  
                                          l3350 0BF7                                            l5120 0363  
                                          l5112 033F                                            l3352 0C03  
                                          l5122 036D                                            l5106 0321  
                                          l3460 0ED2                                            l3452 0EB4  
                                          l5204 04B1                                            l4404 09FF  
                                          l3454 0EC0                            _ADCC_StartConversion 0A26  
                                          l3464 0EDB                                            l5240 052D  
                                          l5224 04E9                                            l5208 04B7  
                                          l5226 04FC                                            l3482 0E0D  
                                          l3476 0DF5                                            l3478 0E01  
                                          l3486 0E16                                            l5270 0221  
                                          l5262 027C                                            ?_pad 0049  
                                          l5264 021D                                            l5256 0206  
                                          l5098 02E0                                            l5282 0231  
                                          l5514 0728                                            l5602 0E24  
                                          l5452 07AC                                            l5620 0BE4  
                                          l5612 0C2E                                            l5700 045C  
                                          l4740 0CC6                                            l5276 022D  
                                          l5508 0DA2                                            l5524 0734  
                                          l5604 0E41                                            l5454 07B2  
                                          l5470 0C6F                                            l5630 0B8F  
                                          l5622 0BE8                                            l5614 0C32  
                                          l5294 0259                                            l5518 0730  
                                          l5448 07A5                                            l5464 0DE7  
                                          l4832 0B57                                            l5288 024D  
                                          l5480 0D62                                            l5528 075E  
                                          l5536 0E59                                            l4842 0B0F  
                                          l5706 0481                                            l5482 0D64  
                                          l5538 0E62                                            l5570 0686  
                                          l5660 03C7                                            l4772 0C8A  
                                          l4756 0CE4                                            l5564 0665  
                                          l5580 0697                                            l5732 0E9E  
                                          l5494 0F8B                                            l5574 068C  
                                          l5672 0407                                            l5656 03BC  
                                          l5594 057B                                            l5690 043A  
                                          l5498 0FAE                                            l5684 042A  
                                          l4788 0CA8                                            l4886 0A51  
                                          l5696 044D                                            l5688 0438  
                                ?_TM1650_enable 0077                                            STR_1 1049  
                                          STR_2 1047                                            STR_3 101C  
                                          STR_4 103C                                            STR_5 102D  
                                          STR_6 1013                                            STR_7 1000  
                                          STR_8 100A                                            STR_9 1025  
                       __end_of_PWM1_Initialize 0AA1                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u3215 0CE0                                            _T2PR 028D  
                                          u3245 0C86                                            u4205 0FAC  
                                          u1815 0DF8                                            u1745 0EB7  
                                          u3185 0CC2                                            u3515 02E3  
                                          u1835 0E07                                            u3275 0CA4  
                                          u3524 0302                                            u1765 0EC1  
                                          u3525 0301                                            u1845 0E0E  
                                          u4245 073E                                            u1775 0ECB  
                                          u4415 0424                                            u1785 0ED3  
                                          _PMD0 0796                                            u4517 0E83  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u3825 050E                                            u4385 03E4  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u4395 03FF                                            _PMD7 079D  
                                          u3775 049C                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0077  
                                          _ctoa 0E4A                                            _main 0E7A  
                                          _down 0072                                            _init 0CED  
                                          _menu 00C7                                            _prec 00A9  
                                          _nout 00A5                                            pad@i 004D  
                                          pad@p 004A                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 004F  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                       __end_of_TM1650_setDigit 0B45                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                _BUTTONS_isHeld 0B02                                           ??_pad 004C  
                       __end_of_PWM2_Initialize 0AAC                         __end_of_TMR0_Initialize 0B6D  
                                    _i2c1_state 00CE                  ??_TMR0_DefaultInterruptHandler 0077  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 0A77                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0052  
                              __end_of_LED_task 02BE                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                                         _ADREF 0116                               __end_of_I2C1_Stop 0BDA  
                                         STR_10 1035                                           STR_11 1043  
                                 __CFG_WDTE$OFF 0000                                __end_of_DMX_init 0A14  
                                         _ADRPT 009A                                           _T2CON 028E  
                                         _T2HLT 028F                                 __end_of___lwdiv 0EE0  
                    _ADCC_ADTI_InterruptHandler 00E8                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l432 0017  
                                         i1l441 002E                                 __end_of___lwmod 0E1B  
                                         i1l434 001E                                           i1l436 0025  
                                         i1l429 000E                                           i1l560 00D8  
                                         i1l561 00E4                                           i1l554 00B5  
                                         i1l571 0121                                           i1l555 00B6  
                                         i1l549 008A                                           i1l590 0B1F  
                                         i1l583 0185                                           i1l575 0141  
                                         i1l578 0150                                           i1l579 015E  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 0058  
                            _PWM4_LoadDutyValue 0CCF                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 09F7  
                     ?_TMR0_SetInterruptHandler 0020                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 0AF4                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 00D6                                           _flags 00AB  
                                         _enter 00C6                           ?_ADCC_StartConversion 0077  
                                         _fputc 0F81                                           _fputs 0D9E  
                           ?_PWM4_LoadDutyValue 0020                                           pad@fp 0051  
                                         _width 00A7                                           ctoa@c 0052  
                                         _putch 0D54                                           ctoa@w 0056  
                       __end_of_PWM3_Initialize 0AB7                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 0BC2  
                             __end_of_BEAT_task 0550                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0004  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0077  
           ?_EUSART1_DefaultFramingErrorHandler 0077              _EUSART1_DefaultFramingErrorHandler 0003  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 0B11  
                               __initialization 0032                            TM1650_setDigit@digit 0036  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                                  __end_of_ctoa 0E7A                      __end_of_EUSART1_Initialize 0F15  
                                  __end_of_main 0EAB                                    __end_of_init 0D0D  
                               _CONTROLLER_init 0A8B                                 _CONTROLLER_task 03A3  
                          ??_PWM4_LoadDutyValue 0022                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 0A38                         __end_of_PWM4_Initialize 0AC2  
                       __end_of_TMR2_Initialize 0B02                     ?_INTERRUPT_InterruptManager 0077  
                                   _i2c1_object 00A0                                          ??_ctoa 0054  
                                        ??_main 006D                                          ??_init 0023  
                             __end_of_GPIO_init 0B33                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          ?_fputc 0039  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0041                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0077  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0077  
                                        _RC5PPS 1F25                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5012 0144                                          i1l5004 012F  
                                        i1l4240 0F7E                                          i1l5040 0189  
                                        i1l5024 0165                                          i1l5042 018C  
                                        i1l5050 0198                                          i1l4236 0F74  
                                        i1l4228 0F4F                                          i1l5044 0190  
                                        i1l5028 016C                                          i1l3810 07D6  
                                        i1l3820 07F6                                          i1l3816 07E6  
                                __CFG_WDTCCS$SC 0000                                          i1l4802 0BD8  
                                        i1l4950 00C2                                          i1l4942 00AF  
                                        i1l5818 01A1                                          i1l4970 00FD  
                                        i1l4938 00A8                                          i1l4956 00D2  
                                        i1l4990 0116                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0037                                          _TX1REG 011A  
                                        _TX1STA 011E                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                               ?_BUTTONS_isHeld 0077                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0067  
                                _p_i2c1_current 00CB                     __size_of_PWM3_LoadDutyValue 001E  
                   __end_of_TM1650_fastPrintNum 0612                               _ADCC_ThresholdISR 0ADA  
                                __CFG_STVREN$ON 0000                                       ??___lwdiv 0024  
                                     ??___lwmod 002C                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                ?_TMR0_Initialize 0077  
                              ?_PWM2_Initialize 0077                              ?_ADCC_ThresholdISR 0077  
                                     ?_I2C1_ISR 0077                                          _printf 0B96  
                        __size_of_BEAT_detected 0009                                          pad@buf 0049  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0055                                  _lastActiveTime 00B9  
                                        _strlen 0BF2                            __size_of_TM1650_init 0014  
                               _ADCC_Initialize 0D78                                          fputc@c 0039  
                                _PMD_Initialize 0A77                                          fputs@c 0045  
                                  ??_CLOCK_init 0022                                          fputs@i 0047  
                                        fputs@s 0046                             ??_ADCC_ThresholdISR 0077  
                        ??_ADCC_StartConversion 0020                                          putch@n 0038  
                              __end_of_vfprintf 0E4A            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 0A1D                   I2C1_MasterWriteTRBBuild@pdata 0020  
                                 _tm1650_status 00C5                                 _eusart1RxBuffer 0128  
                              ?_PWM3_Initialize 0077                               _SYSTEM_Initialize 0D30  
                       __end_of__initialization 0073                         __end_of_CONTROLLER_init 0A96  
                       __end_of_CONTROLLER_task 0485                              ?_SYSTEM_Initialize 0077  
                    __end_of_PWM2_LoadDutyValue 0CB1                                       ?_LED_task 0077  
                                     ?_DMX_init 0077                                  _i2c1_trb_count 00CD  
                   PWM1_LoadDutyValue@dutyValue 0020                  __size_of_EUSART1_RxDataHandler 0019  
                     __end_of_ADCC_ThresholdISR 0AE7                   __end_of_EUSART1_RxDataHandler 0C23  
                         _I2C1_FunctionComplete 0B11                            _I2C1_BusCollisionISR 09F4  
                                __pcstackCOMMON 0077                              __end_of_CLOCK_init 0A0C  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 0A81  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0077  
                                 __end_of_fputc 0FB8                                   __end_of_fputs 0DC4  
                                 __end_of_putch 0D78                              _PWM1_LoadDutyValue 0C75  
                                    ??_I2C1_ISR 0079                                ?_TMR2_Initialize 0077  
                              ?_PWM4_Initialize 0077                                   _DMX_interrupt 0F4A  
                          __end_of_BUTTONS_init 1000                          __end_of_PMD_Initialize 0A81  
                          __end_of_BUTTONS_task 03A3                     PWM4_LoadDutyValue@dutyValue 0020  
                           ?_PWM1_LoadDutyValue 0020                     __end_of_EUSART1_Receive_ISR 07F9  
                             _thresholdExceeded 00C2                     ADCC_StartConversion@channel 0020  
                                       ??_fputc 003C                       __end_of_SYSTEM_Initialize 0D54  
                                       ??_fputs 0042                                         ??_putch 0037  
                                 _eusart1RxHead 006F                                   _eusart1RxTail 0074  
                                    __pbssBANK0 006F                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 0A4A  
                                    ??_LED_task 0022                                      ??_DMX_init 0022  
                          ??_PWM1_LoadDutyValue 0022                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 0A5C                                      __pmaintext 0E7A  
              __end_of_TMR0_SetInterruptHandler 0A41                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 0D9E                                      __pintentry 0004  
                               _I2C1_Initialize 0C3C                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0077  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 0A1D  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 0A14  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00DE  
                               ?_PMD_Initialize 0077                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 0A65         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 0A5C                    ?_EUSART1_DefaultErrorHandler 0077  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 00A8                                       _I2C1_Stop 0BC2  
                                    _arrayIndex 00AF                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                               __end_of_charTable 071A  
                           _CLOCK_timerCallback 07F9                                  ?_BEAT_detected 0077  
                 I2C1_MasterTRBInsert@ptrb_list 0020                              __size_of_writeData 001D  
                                 ??_address_dec 0037                                ?_CONTROLLER_init 0077  
                                 ??_address_inc 0037                                ?_CONTROLLER_task 0077  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 0BAB                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 0485                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 00CC                            ?_CLOCK_timerCallback 0077  
                                       ___lwdiv 0EAB                                         ___lwmod 0DEE  
                                     ?_vfprintf 0061                                         _address 00DC  
                                       __ptext1 0B6D                                         __ptext2 0B96  
                                       __ptext3 0E1B                                         __ptext4 0612  
                                       __ptext5 0E4A                                         __ptext6 071A  
                                       __ptext7 0BF2                                         __ptext8 0D9E  
                                       __ptext9 0F81                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 00B3  
                         _OSCILLATOR_Initialize 0A6E                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 00D4  
                                       _buttons 0130                              _EUSART1_Initialize 0EE0  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 09FB                   ??_EUSART1_DefaultErrorHandler 0078  
                    __size_of_SYSTEM_Initialize 0024                            I2C1_ISR@pi2c_buf_ptr 00CA  
                                       clrloop0 0AC3                            end_of_initialization 0073  
                                     _T2RSTbits 0291                                       _GPIO_init 0B22  
                           ?_EUSART1_Initialize 0077                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003B                                         init_ram 0ACE  
                   _EUSART1_OverrunErrorHandler 015A                                         fputs@fp 0041  
                                       initloop 0ACF                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 0C58           __end_of_EUSART1_SetRxInterruptHandler 0A4A  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 0A41  
                                    ?_BEAT_init 0077                                      ?_BEAT_task 0077  
                             __end_of_vfpfcnvrt 06BA                           __size_of_BUTTONS_init 0048  
                         __size_of_BUTTONS_task 00E5                           ??_CLOCK_timerCallback 0077  
                               ??_DMX_interrupt 0077                             __end_of_address_dec 0BF2  
                   __size_of_PWM4_LoadDutyValue 001E                             __end_of_address_inc 0C3C  
                              ?_ADCC_Initialize 0077                                      ??_vfprintf 0064  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                      _TMR0_SetInterruptHandler 0A38                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 014E                               __end_of_writeData 0C75  
                       ?_ADCC_SetUpperThreshold 0020                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 0B96               I2C1_ISR@i2c_10bit_address_restart 00C8  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                  _BUTTONS_init 0FB8                                    _BUTTONS_task 02BE  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 0CCF  
          __size_of_EUSART1_DefaultErrorHandler 0003                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_task 00F9                               __size_of_DMX_init 0008  
                ??_ADCC_DefaultInterruptHandler 0077                                   ??_TM1650_init 006D  
                                   vfpfcnvrt@ap 0059                                     vfpfcnvrt@fp 0060  
                       I2C1_MasterWrite@trBlock 0154                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0078                              _PWM2_LoadDutyValue 0C93  
                      __size_of_TM1650_setDigit 0012                          ?_OSCILLATOR_Initialize 0077  
                __end_of_ADCC_SetUpperThreshold 0A26                    __size_of_TM1650_fastPrintNum 00C2  
                                __end_of_printf 0BAB                                  __end_of_strlen 0C0A  
                                  _lastDetected 00C1                             start_initialization 0032  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 0020  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0034  
                                   __end_of_pad 076D   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 0B45  
                            ?_BUTTONS_isClicked 0077                                     _address_dec 0BDA  
                                   _address_inc 0C23                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 0022  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0061  
                   PWM2_LoadDutyValue@dutyValue 0020                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 0C0A  
                ?_EUSART1_SetRxInterruptHandler 0020                                     __pdataBANK1 00D4  
                                 _CLOCK_getTime 0A2F                                        ??_printf 0069  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00D0                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 0B81                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 015E                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00DE  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 00D1                       __end_of_BUTTONS_isClicked 0B59  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0077  
                  __size_of_EUSART1_Receive_ISR 003A                                    _currentState 0070  
                                     _charTable 06BA                           _TMR0_InterruptHandler 00EA  
                                     __pnvBANK1 00E8                                       __pnvBANK2 0158  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 0F15                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0077                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 007E                                 writeData@status 0033  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 0DC4  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 07BF  
    __end_of_EUSART1_DefaultOverrunErrorHandler 09FF     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 09FB                            _EUSART1_ErrorHandler 0158  
                       _EUSART1_SetErrorHandler 0A53                               ??_TM1650_setDigit 0035  
                              ___lwdiv@quotient 0025                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 0A04  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 09FF  
                        I2C1_MasterRead@trBlock 0150                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 0AC2  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 01C5  
                                      _DMX_init 0A0C             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00DA                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                       CONTROLLER_task@isActive 0039                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 0AE7                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_init 000B                        __size_of_CONTROLLER_task 00E2  
                                   _TM1650_init 0B6D                                       _threshold 00D8  
                                     _vfpfcnvrt 0612                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                            DMX_interrupt@dummy 007D                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 0C58  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 005F  
                                   _lastIncTime 00BB                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 07FF                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0550                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 0CED                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0063                                      vfprintf@fp 0066  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00C9  
                       ??_OSCILLATOR_Initialize 0020                           __end_of_DMX_interrupt 0F81  
                   __size_of_EUSART1_Initialize 0035                                      ?_vfpfcnvrt 0058  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 0D30                              _PWM3_LoadDutyValue 0CB1  
                                    _ANSELAbits 1F38                                      _ANSELCbits 1F4E  
                          ?_TM1650_fastPrintNum 0034                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0034  
           __end_of_EUSART1_DefaultErrorHandler 09F4                     _EUSART1_DefaultErrorHandler 09F1  
                                   _currentTime 00BD                                      _CLOCK_init 0A04  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0075  
                               ___lwdiv@counter 0027                                        _detected 00C3  
                                    ?_writeData 002E                                        __ptext10 0D54  
                                      __ptext11 0B33                                        __ptext20 0F15  
                                      __ptext12 0D30                                        __ptext21 0A6E  
                                      __ptext13 0AF4                                        __ptext30 0CB1  
                                      __ptext22 0C3C                                        __ptext14 0B59  
                                      __ptext31 0C93                                        __ptext23 0EE0  
                                      __ptext15 0AB7                                        __ptext40 0B02  
                                      __ptext32 0C75                                        __ptext24 0A65  
                                      __ptext16 0AAC                                        __ptext41 0B45  
                                      __ptext33 0A4A                                        __ptext25 0A5C  
                                      __ptext17 0AA1                                        __ptext50 0A04  
                                      __ptext42 0A8B                                        __ptext34 0A0C  
                                      __ptext26 0A53                                        __ptext18 0A96  
                                      __ptext51 0A38                                        __ptext43 0550  
                                      __ptext35 0A41                                        __ptext27 0D78  
                                      __ptext19 0A77                                        __ptext60 0A26  
                                      __ptext52 02BE                                        __ptext44 0C58  
                                      __ptext36 03A3                                        __ptext28 01C5  
                                      __ptext61 0A1D                                        __ptext53 0FB8  
                                      __ptext45 0DC4                                        __ptext37 0C23  
                                      __ptext29 0CCF                                        __ptext70 09F4  
                                      __ptext62 0A14                                        __ptext54 0CED  
                                      __ptext46 0D0D                                        __ptext38 0BDA  
                                      __ptext71 0F4A                                        __ptext55 0B22  
                                      __ptext47 076D                                        __ptext39 0B81  
                                      __ptext72 07BF                                        __ptext64 0AE7  
                                      __ptext56 0485                                        __ptext48 09FF  
                                      __ptext73 09FB                                        __ptext65 07F9  
                                      __ptext57 0EAB                                        __ptext49 0DEE  
                                      __ptext74 0003                                        __ptext66 07FF  
                                      __ptext58 0A2F                             ?_PWM3_LoadDutyValue 0020  
                                      __ptext75 09F1                                        __ptext67 0077  
                                      __ptext59 0BAB                                        __ptext76 0C0A  
                                      __ptext68 0BC2                                        __ptext77 0ADA  
                                      __ptext69 0B11                                        __ptext78 0002  
                                      __ptext79 09F7                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 0A53  
                                      _lastBeat 00B7                                        _lastTime 00BF  
                                 __size_of_ctoa 0030                                   __size_of_main 0031  
                                 __size_of_init 0020                                    ?_address_dec 0077  
          __end_of_TMR0_DefaultInterruptHandler 0800           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FF                                    ?_address_inc 0077  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 076D  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                          ??_PWM3_LoadDutyValue 0022                    __end_of_ADCC_StartConversion 0A2F  
                                      int$flags 007E                                        _position 00C4  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 0E1B  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00DE                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 015C                             _EUSART1_Receive_ISR 07BF  
                         ??_TM1650_fastPrintNum 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0037                               ??_CONTROLLER_task 0037  
                                      init@port 0020                                  __pstringtext10 1043  
                                __pstringtext11 1049                                  __pstringtext12 0000  
          __end_of_ADCC_DefaultInterruptHandler 0003           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 0002                                        intlevel1 0000  
                                _thresholdCount 00B1                            ?_EUSART1_Receive_ISR 0077  
                                 writeData@data 002E                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0077                        __end_of_I2C1_MasterWrite 0DEE  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 0A6E         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 0A65                   __end_of_I2C1_FunctionComplete 0B22  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 0A96  
                 ?_TMR0_DefaultInterruptHandler 0077                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0034                               _lastLedActiveTime 00AD  
                                      printf@ap 006C  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 0020                                 _TM1650_setDigit 0B33  
                                   ??_vfpfcnvrt 005A                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00CF                                   __pstringtext1 06BA  
                                 __pstringtext2 1000                                   __pstringtext3 100A  
                                 __pstringtext4 1013                                   __pstringtext5 101C  
                                 __pstringtext6 1025                                   __pstringtext7 102D  
                                 __pstringtext8 1035                                   __pstringtext9 103C  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0077  
                               _TMR0_Initialize 0B59                                 _PWM2_Initialize 0AA1  
                               ___lwmod@counter 002D                        _I2C1_MasterWriteTRBBuild 0D0D  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0078  
                __end_of_PIN_MANAGER_Initialize 0F4A                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 0B81                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0077                      __end_of_PWM1_LoadDutyValue 0C93  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 0AAC  
