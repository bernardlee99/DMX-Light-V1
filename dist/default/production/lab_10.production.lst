

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 28 21:17:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	stringtext18,global,class=STRCODE,delta=2
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    31                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,merge=1,delta=2
    42                           	psect	text4,local,class=CODE,merge=1,delta=2
    43                           	psect	text5,local,class=CODE,merge=1,delta=2
    44                           	psect	text6,local,class=CODE,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2
    50                           	psect	text12,local,class=CODE,merge=1,delta=2
    51                           	psect	text13,local,class=CODE,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,merge=1,delta=2
    54                           	psect	text16,local,class=CODE,merge=1,delta=2
    55                           	psect	text17,local,class=CODE,merge=1,delta=2
    56                           	psect	text18,local,class=CODE,merge=1,delta=2
    57                           	psect	text19,local,class=CODE,merge=1,delta=2
    58                           	psect	text20,local,class=CODE,merge=1,delta=2
    59                           	psect	text21,local,class=CODE,merge=1,delta=2
    60                           	psect	text22,local,class=CODE,merge=1,delta=2
    61                           	psect	text23,local,class=CODE,merge=1,delta=2
    62                           	psect	text24,local,class=CODE,merge=1,delta=2
    63                           	psect	text25,local,class=CODE,merge=1,delta=2
    64                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text31,local,class=CODE,merge=1,delta=2
    70                           	psect	text32,local,class=CODE,merge=1,delta=2
    71                           	psect	text33,local,class=CODE,merge=1,delta=2
    72                           	psect	text34,local,class=CODE,merge=1,delta=2
    73                           	psect	text35,local,class=CODE,merge=1,delta=2
    74                           	psect	text36,local,class=CODE,merge=1,delta=2
    75                           	psect	text37,local,class=CODE,merge=1,delta=2
    76                           	psect	text38,local,class=CODE,merge=1,delta=2
    77                           	psect	text39,local,class=CODE,merge=1,delta=2
    78                           	psect	text40,local,class=CODE,merge=1,delta=2
    79                           	psect	text41,local,class=CODE,merge=1,delta=2
    80                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text43,local,class=CODE,merge=1,delta=2
    82                           	psect	text44,local,class=CODE,merge=1,delta=2
    83                           	psect	text45,local,class=CODE,merge=1,delta=2
    84                           	psect	text46,local,class=CODE,merge=1,delta=2
    85                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text50,local,class=CODE,merge=1,delta=2
    89                           	psect	text51,local,class=CODE,merge=1,delta=2
    90                           	psect	text52,local,class=CODE,merge=1,delta=2
    91                           	psect	text53,local,class=CODE,merge=1,delta=2
    92                           	psect	text54,local,class=CODE,merge=1,delta=2
    93                           	psect	text55,local,class=CODE,merge=1,delta=2
    94                           	psect	text56,local,class=CODE,merge=1,delta=2
    95                           	psect	text57,local,class=CODE,merge=1,delta=2
    96                           	psect	text58,local,class=CODE,merge=1,delta=2
    97                           	psect	text59,local,class=CODE,merge=1,delta=2
    98                           	psect	text60,local,class=CODE,merge=1,delta=2
    99                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text63,local,class=CODE,merge=1,delta=2
   102                           	psect	text64,local,class=CODE,merge=1,delta=2
   103                           	psect	text65,local,class=CODE,merge=1,delta=2
   104                           	psect	text66,local,class=CODE,merge=1,delta=2
   105                           	psect	text67,local,class=CODE,merge=1,delta=2
   106                           	psect	text68,local,class=CODE,merge=1,delta=2
   107                           	psect	text69,local,class=CODE,merge=1,delta=2
   108                           	psect	text70,local,class=CODE,merge=1,delta=2
   109                           	psect	text71,local,class=CODE,merge=1,delta=2
   110                           	psect	text72,local,class=CODE,merge=1,delta=2
   111                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   112                           	psect	text74,local,class=CODE,merge=1,delta=2
   113                           	psect	text75,local,class=CODE,merge=1,delta=2
   114                           	psect	text76,local,class=CODE,merge=1,delta=2
   115                           	psect	text77,local,class=CODE,merge=1,delta=2
   116                           	psect	text78,local,class=CODE,merge=1,delta=2
   117                           	psect	intentry,global,class=CODE,delta=2
   118                           	psect	text80,local,class=CODE,merge=1,delta=2
   119                           	psect	text81,local,class=CODE,merge=1,delta=2
   120                           	psect	text82,local,class=CODE,merge=1,delta=2
   121                           	psect	text83,local,class=CODE,merge=1,delta=2
   122                           	psect	text84,local,class=CODE,merge=1,delta=2
   123                           	psect	text85,local,class=CODE,merge=1,delta=2
   124                           	psect	text86,local,class=CODE,merge=1,delta=2
   125                           	psect	text87,local,class=CODE,merge=1,delta=2
   126                           	psect	text88,local,class=CODE,merge=1,delta=2
   127                           	psect	text89,local,class=CODE,merge=1,delta=2
   128                           	psect	text90,local,class=CODE,merge=1,delta=2
   129                           	psect	text91,local,class=CODE,merge=1,delta=2
   130                           	psect	text92,local,class=CODE,merge=1,delta=2
   131                           	psect	text93,local,class=CODE,merge=1,delta=2
   132                           	psect	text94,local,class=CODE,merge=1,delta=2
   133                           	psect	text95,local,class=CODE,merge=1,delta=2
   134                           	dabs	1,0xCA0,32
   135                           	dabs	1,0xC20,80
   136                           	dabs	1,0xBA0,80
   137                           	dabs	1,0xB20,80
   138                           	dabs	1,0xAA0,80
   139                           	dabs	1,0xA20,80
   140                           	dabs	1,0x9A0,80
   141                           	dabs	1,0x920,80
   142                           	dabs	1,0x8A0,80
   143                           	dabs	1,0x820,80
   144                           	dabs	1,0x7A0,80
   145                           	dabs	1,0x720,80
   146                           	dabs	1,0x6A0,80
   147                           	dabs	1,0x64E,34
   148                           	dabs	1,0x23EE,0,_dmxArray
   149                           	dabs	1,0x7E,2
   150  0000                     
   151                           ; Version 2.05
   152                           ; Generated 20/12/2018 GMT
   153                           ; 
   154                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   155                           ; All rights reserved.
   156                           ; 
   157                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   158                           ; 
   159                           ; Redistribution and use in source and binary forms, with or without modification, are
   160                           ; permitted provided that the following conditions are met:
   161                           ; 
   162                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   163                           ;        conditions and the following disclaimer.
   164                           ; 
   165                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   166                           ;        of conditions and the following disclaimer in the documentation and/or other
   167                           ;        materials provided with the distribution.
   168                           ; 
   169                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   170                           ;        software without specific prior written permission.
   171                           ; 
   172                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   173                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   174                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   175                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   176                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   177                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   178                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   179                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   180                           ; 
   181                           ; 
   182                           ; Code-generator required, PIC16F18446 Definitions
   183                           ; 
   184                           ; SFR Addresses
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  008C                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  010F                     	;# 
   240  0110                     	;# 
   241  0111                     	;# 
   242  0112                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0115                     	;# 
   246  0116                     	;# 
   247  0117                     	;# 
   248  0118                     	;# 
   249  0119                     	;# 
   250  0119                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011A                     	;# 
   254  011A                     	;# 
   255  011B                     	;# 
   256  011B                     	;# 
   257  011B                     	;# 
   258  011B                     	;# 
   259  011B                     	;# 
   260  011C                     	;# 
   261  011C                     	;# 
   262  011C                     	;# 
   263  011D                     	;# 
   264  011D                     	;# 
   265  011D                     	;# 
   266  011E                     	;# 
   267  011E                     	;# 
   268  011E                     	;# 
   269  011F                     	;# 
   270  011F                     	;# 
   271  011F                     	;# 
   272  011F                     	;# 
   273  011F                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  018E                     	;# 
   277  018F                     	;# 
   278  0190                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0196                     	;# 
   282  0197                     	;# 
   283  0198                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  020C                     	;# 
   289  020D                     	;# 
   290  020E                     	;# 
   291  020E                     	;# 
   292  020F                     	;# 
   293  020F                     	;# 
   294  0210                     	;# 
   295  0210                     	;# 
   296  0211                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0214                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0218                     	;# 
   309  0219                     	;# 
   310  021A                     	;# 
   311  021A                     	;# 
   312  021B                     	;# 
   313  021B                     	;# 
   314  021C                     	;# 
   315  021C                     	;# 
   316  021D                     	;# 
   317  021D                     	;# 
   318  021E                     	;# 
   319  021F                     	;# 
   320  028C                     	;# 
   321  028C                     	;# 
   322  028D                     	;# 
   323  028D                     	;# 
   324  028E                     	;# 
   325  028F                     	;# 
   326  0290                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0297                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  0299                     	;# 
   340  029A                     	;# 
   341  029B                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029F                     	;# 
   345  030C                     	;# 
   346  030C                     	;# 
   347  030D                     	;# 
   348  030E                     	;# 
   349  030F                     	;# 
   350  0310                     	;# 
   351  0310                     	;# 
   352  0311                     	;# 
   353  0312                     	;# 
   354  0313                     	;# 
   355  0314                     	;# 
   356  0314                     	;# 
   357  0315                     	;# 
   358  0316                     	;# 
   359  0317                     	;# 
   360  0318                     	;# 
   361  0318                     	;# 
   362  0319                     	;# 
   363  031A                     	;# 
   364  031B                     	;# 
   365  038C                     	;# 
   366  038C                     	;# 
   367  038D                     	;# 
   368  038E                     	;# 
   369  0390                     	;# 
   370  0390                     	;# 
   371  0391                     	;# 
   372  0392                     	;# 
   373  048C                     	;# 
   374  048C                     	;# 
   375  048D                     	;# 
   376  048E                     	;# 
   377  048F                     	;# 
   378  048F                     	;# 
   379  0490                     	;# 
   380  0491                     	;# 
   381  0492                     	;# 
   382  0492                     	;# 
   383  0493                     	;# 
   384  0494                     	;# 
   385  0495                     	;# 
   386  0495                     	;# 
   387  0496                     	;# 
   388  0497                     	;# 
   389  0498                     	;# 
   390  0499                     	;# 
   391  049A                     	;# 
   392  049B                     	;# 
   393  049C                     	;# 
   394  049D                     	;# 
   395  058C                     	;# 
   396  058C                     	;# 
   397  058D                     	;# 
   398  058E                     	;# 
   399  058F                     	;# 
   400  058F                     	;# 
   401  0590                     	;# 
   402  0591                     	;# 
   403  0592                     	;# 
   404  0593                     	;# 
   405  059C                     	;# 
   406  059C                     	;# 
   407  059D                     	;# 
   408  059D                     	;# 
   409  059E                     	;# 
   410  059F                     	;# 
   411  060C                     	;# 
   412  060C                     	;# 
   413  060D                     	;# 
   414  060D                     	;# 
   415  060E                     	;# 
   416  060F                     	;# 
   417  0610                     	;# 
   418  0611                     	;# 
   419  0612                     	;# 
   420  0613                     	;# 
   421  0614                     	;# 
   422  0616                     	;# 
   423  0616                     	;# 
   424  0617                     	;# 
   425  0617                     	;# 
   426  0618                     	;# 
   427  0619                     	;# 
   428  061A                     	;# 
   429  061B                     	;# 
   430  061C                     	;# 
   431  061D                     	;# 
   432  061E                     	;# 
   433  070C                     	;# 
   434  070D                     	;# 
   435  070E                     	;# 
   436  070F                     	;# 
   437  0710                     	;# 
   438  0711                     	;# 
   439  0712                     	;# 
   440  0713                     	;# 
   441  0714                     	;# 
   442  0716                     	;# 
   443  0717                     	;# 
   444  0718                     	;# 
   445  0719                     	;# 
   446  071A                     	;# 
   447  071B                     	;# 
   448  071C                     	;# 
   449  071D                     	;# 
   450  071E                     	;# 
   451  0796                     	;# 
   452  0797                     	;# 
   453  0798                     	;# 
   454  0799                     	;# 
   455  079A                     	;# 
   456  079B                     	;# 
   457  079C                     	;# 
   458  079D                     	;# 
   459  080C                     	;# 
   460  080D                     	;# 
   461  080E                     	;# 
   462  080F                     	;# 
   463  0810                     	;# 
   464  0811                     	;# 
   465  0812                     	;# 
   466  0813                     	;# 
   467  0814                     	;# 
   468  081A                     	;# 
   469  081A                     	;# 
   470  081B                     	;# 
   471  081C                     	;# 
   472  081C                     	;# 
   473  081D                     	;# 
   474  081E                     	;# 
   475  081F                     	;# 
   476  088C                     	;# 
   477  088D                     	;# 
   478  088E                     	;# 
   479  088F                     	;# 
   480  0890                     	;# 
   481  0891                     	;# 
   482  0892                     	;# 
   483  0893                     	;# 
   484  0895                     	;# 
   485  0896                     	;# 
   486  0897                     	;# 
   487  0898                     	;# 
   488  0899                     	;# 
   489  089A                     	;# 
   490  089B                     	;# 
   491  090C                     	;# 
   492  090E                     	;# 
   493  090F                     	;# 
   494  091F                     	;# 
   495  098F                     	;# 
   496  098F                     	;# 
   497  0990                     	;# 
   498  0991                     	;# 
   499  0992                     	;# 
   500  0993                     	;# 
   501  0994                     	;# 
   502  0995                     	;# 
   503  0996                     	;# 
   504  0997                     	;# 
   505  1E0F                     	;# 
   506  1E10                     	;# 
   507  1E11                     	;# 
   508  1E12                     	;# 
   509  1E13                     	;# 
   510  1E14                     	;# 
   511  1E15                     	;# 
   512  1E16                     	;# 
   513  1E17                     	;# 
   514  1E18                     	;# 
   515  1E19                     	;# 
   516  1E1A                     	;# 
   517  1E1B                     	;# 
   518  1E1C                     	;# 
   519  1E1D                     	;# 
   520  1E1E                     	;# 
   521  1E1F                     	;# 
   522  1E20                     	;# 
   523  1E21                     	;# 
   524  1E22                     	;# 
   525  1E23                     	;# 
   526  1E24                     	;# 
   527  1E25                     	;# 
   528  1E26                     	;# 
   529  1E27                     	;# 
   530  1E28                     	;# 
   531  1E29                     	;# 
   532  1E2A                     	;# 
   533  1E2B                     	;# 
   534  1E2C                     	;# 
   535  1E2D                     	;# 
   536  1E2E                     	;# 
   537  1E2F                     	;# 
   538  1E30                     	;# 
   539  1E31                     	;# 
   540  1E32                     	;# 
   541  1E33                     	;# 
   542  1E34                     	;# 
   543  1E35                     	;# 
   544  1E36                     	;# 
   545  1E37                     	;# 
   546  1E8F                     	;# 
   547  1E90                     	;# 
   548  1E91                     	;# 
   549  1E92                     	;# 
   550  1E93                     	;# 
   551  1E94                     	;# 
   552  1E95                     	;# 
   553  1E96                     	;# 
   554  1E97                     	;# 
   555  1E9C                     	;# 
   556  1E9D                     	;# 
   557  1E9E                     	;# 
   558  1EA1                     	;# 
   559  1EA2                     	;# 
   560  1EA3                     	;# 
   561  1EA4                     	;# 
   562  1EA9                     	;# 
   563  1EAA                     	;# 
   564  1EB1                     	;# 
   565  1EB2                     	;# 
   566  1EB8                     	;# 
   567  1EB9                     	;# 
   568  1EBA                     	;# 
   569  1EBB                     	;# 
   570  1EBC                     	;# 
   571  1EBD                     	;# 
   572  1EBE                     	;# 
   573  1EC3                     	;# 
   574  1EC5                     	;# 
   575  1EC6                     	;# 
   576  1EC7                     	;# 
   577  1EC8                     	;# 
   578  1EC9                     	;# 
   579  1ECA                     	;# 
   580  1ECB                     	;# 
   581  1ECB                     	;# 
   582  1ECB                     	;# 
   583  1ECC                     	;# 
   584  1ECC                     	;# 
   585  1ECC                     	;# 
   586  1F10                     	;# 
   587  1F11                     	;# 
   588  1F12                     	;# 
   589  1F14                     	;# 
   590  1F15                     	;# 
   591  1F1C                     	;# 
   592  1F1D                     	;# 
   593  1F1E                     	;# 
   594  1F1F                     	;# 
   595  1F20                     	;# 
   596  1F21                     	;# 
   597  1F22                     	;# 
   598  1F23                     	;# 
   599  1F24                     	;# 
   600  1F25                     	;# 
   601  1F26                     	;# 
   602  1F27                     	;# 
   603  1F38                     	;# 
   604  1F39                     	;# 
   605  1F3A                     	;# 
   606  1F3B                     	;# 
   607  1F3C                     	;# 
   608  1F3D                     	;# 
   609  1F3E                     	;# 
   610  1F3F                     	;# 
   611  1F43                     	;# 
   612  1F44                     	;# 
   613  1F45                     	;# 
   614  1F46                     	;# 
   615  1F47                     	;# 
   616  1F48                     	;# 
   617  1F49                     	;# 
   618  1F4A                     	;# 
   619  1F4E                     	;# 
   620  1F4F                     	;# 
   621  1F50                     	;# 
   622  1F51                     	;# 
   623  1F52                     	;# 
   624  1F53                     	;# 
   625  1F54                     	;# 
   626  1F55                     	;# 
   627  1FE4                     	;# 
   628  1FE5                     	;# 
   629  1FE6                     	;# 
   630  1FE7                     	;# 
   631  1FE8                     	;# 
   632  1FE8                     	;# 
   633  1FE9                     	;# 
   634  1FEA                     	;# 
   635  1FEB                     	;# 
   636  1FED                     	;# 
   637  1FEE                     	;# 
   638  1FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0014                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  008C                     	;# 
   661  008C                     	;# 
   662  008D                     	;# 
   663  008E                     	;# 
   664  008E                     	;# 
   665  008F                     	;# 
   666  0090                     	;# 
   667  0090                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0092                     	;# 
   671  0093                     	;# 
   672  0094                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0098                     	;# 
   679  0099                     	;# 
   680  009A                     	;# 
   681  009B                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010E                     	;# 
   692  010F                     	;# 
   693  010F                     	;# 
   694  0110                     	;# 
   695  0111                     	;# 
   696  0112                     	;# 
   697  0113                     	;# 
   698  0114                     	;# 
   699  0115                     	;# 
   700  0116                     	;# 
   701  0117                     	;# 
   702  0118                     	;# 
   703  0119                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011C                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0196                     	;# 
   736  0197                     	;# 
   737  0198                     	;# 
   738  0199                     	;# 
   739  019A                     	;# 
   740  019B                     	;# 
   741  019C                     	;# 
   742  020C                     	;# 
   743  020D                     	;# 
   744  020E                     	;# 
   745  020E                     	;# 
   746  020F                     	;# 
   747  020F                     	;# 
   748  0210                     	;# 
   749  0210                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0213                     	;# 
   754  0214                     	;# 
   755  0214                     	;# 
   756  0215                     	;# 
   757  0215                     	;# 
   758  0216                     	;# 
   759  0216                     	;# 
   760  0217                     	;# 
   761  0217                     	;# 
   762  0218                     	;# 
   763  0219                     	;# 
   764  021A                     	;# 
   765  021A                     	;# 
   766  021B                     	;# 
   767  021B                     	;# 
   768  021C                     	;# 
   769  021C                     	;# 
   770  021D                     	;# 
   771  021D                     	;# 
   772  021E                     	;# 
   773  021F                     	;# 
   774  028C                     	;# 
   775  028C                     	;# 
   776  028D                     	;# 
   777  028D                     	;# 
   778  028E                     	;# 
   779  028F                     	;# 
   780  0290                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0293                     	;# 
   786  0294                     	;# 
   787  0295                     	;# 
   788  0296                     	;# 
   789  0297                     	;# 
   790  0298                     	;# 
   791  0298                     	;# 
   792  0299                     	;# 
   793  0299                     	;# 
   794  029A                     	;# 
   795  029B                     	;# 
   796  029C                     	;# 
   797  029D                     	;# 
   798  029F                     	;# 
   799  030C                     	;# 
   800  030C                     	;# 
   801  030D                     	;# 
   802  030E                     	;# 
   803  030F                     	;# 
   804  0310                     	;# 
   805  0310                     	;# 
   806  0311                     	;# 
   807  0312                     	;# 
   808  0313                     	;# 
   809  0314                     	;# 
   810  0314                     	;# 
   811  0315                     	;# 
   812  0316                     	;# 
   813  0317                     	;# 
   814  0318                     	;# 
   815  0318                     	;# 
   816  0319                     	;# 
   817  031A                     	;# 
   818  031B                     	;# 
   819  038C                     	;# 
   820  038C                     	;# 
   821  038D                     	;# 
   822  038E                     	;# 
   823  0390                     	;# 
   824  0390                     	;# 
   825  0391                     	;# 
   826  0392                     	;# 
   827  048C                     	;# 
   828  048C                     	;# 
   829  048D                     	;# 
   830  048E                     	;# 
   831  048F                     	;# 
   832  048F                     	;# 
   833  0490                     	;# 
   834  0491                     	;# 
   835  0492                     	;# 
   836  0492                     	;# 
   837  0493                     	;# 
   838  0494                     	;# 
   839  0495                     	;# 
   840  0495                     	;# 
   841  0496                     	;# 
   842  0497                     	;# 
   843  0498                     	;# 
   844  0499                     	;# 
   845  049A                     	;# 
   846  049B                     	;# 
   847  049C                     	;# 
   848  049D                     	;# 
   849  058C                     	;# 
   850  058C                     	;# 
   851  058D                     	;# 
   852  058E                     	;# 
   853  058F                     	;# 
   854  058F                     	;# 
   855  0590                     	;# 
   856  0591                     	;# 
   857  0592                     	;# 
   858  0593                     	;# 
   859  059C                     	;# 
   860  059C                     	;# 
   861  059D                     	;# 
   862  059D                     	;# 
   863  059E                     	;# 
   864  059F                     	;# 
   865  060C                     	;# 
   866  060C                     	;# 
   867  060D                     	;# 
   868  060D                     	;# 
   869  060E                     	;# 
   870  060F                     	;# 
   871  0610                     	;# 
   872  0611                     	;# 
   873  0612                     	;# 
   874  0613                     	;# 
   875  0614                     	;# 
   876  0616                     	;# 
   877  0616                     	;# 
   878  0617                     	;# 
   879  0617                     	;# 
   880  0618                     	;# 
   881  0619                     	;# 
   882  061A                     	;# 
   883  061B                     	;# 
   884  061C                     	;# 
   885  061D                     	;# 
   886  061E                     	;# 
   887  070C                     	;# 
   888  070D                     	;# 
   889  070E                     	;# 
   890  070F                     	;# 
   891  0710                     	;# 
   892  0711                     	;# 
   893  0712                     	;# 
   894  0713                     	;# 
   895  0714                     	;# 
   896  0716                     	;# 
   897  0717                     	;# 
   898  0718                     	;# 
   899  0719                     	;# 
   900  071A                     	;# 
   901  071B                     	;# 
   902  071C                     	;# 
   903  071D                     	;# 
   904  071E                     	;# 
   905  0796                     	;# 
   906  0797                     	;# 
   907  0798                     	;# 
   908  0799                     	;# 
   909  079A                     	;# 
   910  079B                     	;# 
   911  079C                     	;# 
   912  079D                     	;# 
   913  080C                     	;# 
   914  080D                     	;# 
   915  080E                     	;# 
   916  080F                     	;# 
   917  0810                     	;# 
   918  0811                     	;# 
   919  0812                     	;# 
   920  0813                     	;# 
   921  0814                     	;# 
   922  081A                     	;# 
   923  081A                     	;# 
   924  081B                     	;# 
   925  081C                     	;# 
   926  081C                     	;# 
   927  081D                     	;# 
   928  081E                     	;# 
   929  081F                     	;# 
   930  088C                     	;# 
   931  088D                     	;# 
   932  088E                     	;# 
   933  088F                     	;# 
   934  0890                     	;# 
   935  0891                     	;# 
   936  0892                     	;# 
   937  0893                     	;# 
   938  0895                     	;# 
   939  0896                     	;# 
   940  0897                     	;# 
   941  0898                     	;# 
   942  0899                     	;# 
   943  089A                     	;# 
   944  089B                     	;# 
   945  090C                     	;# 
   946  090E                     	;# 
   947  090F                     	;# 
   948  091F                     	;# 
   949  098F                     	;# 
   950  098F                     	;# 
   951  0990                     	;# 
   952  0991                     	;# 
   953  0992                     	;# 
   954  0993                     	;# 
   955  0994                     	;# 
   956  0995                     	;# 
   957  0996                     	;# 
   958  0997                     	;# 
   959  1E0F                     	;# 
   960  1E10                     	;# 
   961  1E11                     	;# 
   962  1E12                     	;# 
   963  1E13                     	;# 
   964  1E14                     	;# 
   965  1E15                     	;# 
   966  1E16                     	;# 
   967  1E17                     	;# 
   968  1E18                     	;# 
   969  1E19                     	;# 
   970  1E1A                     	;# 
   971  1E1B                     	;# 
   972  1E1C                     	;# 
   973  1E1D                     	;# 
   974  1E1E                     	;# 
   975  1E1F                     	;# 
   976  1E20                     	;# 
   977  1E21                     	;# 
   978  1E22                     	;# 
   979  1E23                     	;# 
   980  1E24                     	;# 
   981  1E25                     	;# 
   982  1E26                     	;# 
   983  1E27                     	;# 
   984  1E28                     	;# 
   985  1E29                     	;# 
   986  1E2A                     	;# 
   987  1E2B                     	;# 
   988  1E2C                     	;# 
   989  1E2D                     	;# 
   990  1E2E                     	;# 
   991  1E2F                     	;# 
   992  1E30                     	;# 
   993  1E31                     	;# 
   994  1E32                     	;# 
   995  1E33                     	;# 
   996  1E34                     	;# 
   997  1E35                     	;# 
   998  1E36                     	;# 
   999  1E37                     	;# 
  1000  1E8F                     	;# 
  1001  1E90                     	;# 
  1002  1E91                     	;# 
  1003  1E92                     	;# 
  1004  1E93                     	;# 
  1005  1E94                     	;# 
  1006  1E95                     	;# 
  1007  1E96                     	;# 
  1008  1E97                     	;# 
  1009  1E9C                     	;# 
  1010  1E9D                     	;# 
  1011  1E9E                     	;# 
  1012  1EA1                     	;# 
  1013  1EA2                     	;# 
  1014  1EA3                     	;# 
  1015  1EA4                     	;# 
  1016  1EA9                     	;# 
  1017  1EAA                     	;# 
  1018  1EB1                     	;# 
  1019  1EB2                     	;# 
  1020  1EB8                     	;# 
  1021  1EB9                     	;# 
  1022  1EBA                     	;# 
  1023  1EBB                     	;# 
  1024  1EBC                     	;# 
  1025  1EBD                     	;# 
  1026  1EBE                     	;# 
  1027  1EC3                     	;# 
  1028  1EC5                     	;# 
  1029  1EC6                     	;# 
  1030  1EC7                     	;# 
  1031  1EC8                     	;# 
  1032  1EC9                     	;# 
  1033  1ECA                     	;# 
  1034  1ECB                     	;# 
  1035  1ECB                     	;# 
  1036  1ECB                     	;# 
  1037  1ECC                     	;# 
  1038  1ECC                     	;# 
  1039  1ECC                     	;# 
  1040  1F10                     	;# 
  1041  1F11                     	;# 
  1042  1F12                     	;# 
  1043  1F14                     	;# 
  1044  1F15                     	;# 
  1045  1F1C                     	;# 
  1046  1F1D                     	;# 
  1047  1F1E                     	;# 
  1048  1F1F                     	;# 
  1049  1F20                     	;# 
  1050  1F21                     	;# 
  1051  1F22                     	;# 
  1052  1F23                     	;# 
  1053  1F24                     	;# 
  1054  1F25                     	;# 
  1055  1F26                     	;# 
  1056  1F27                     	;# 
  1057  1F38                     	;# 
  1058  1F39                     	;# 
  1059  1F3A                     	;# 
  1060  1F3B                     	;# 
  1061  1F3C                     	;# 
  1062  1F3D                     	;# 
  1063  1F3E                     	;# 
  1064  1F3F                     	;# 
  1065  1F43                     	;# 
  1066  1F44                     	;# 
  1067  1F45                     	;# 
  1068  1F46                     	;# 
  1069  1F47                     	;# 
  1070  1F48                     	;# 
  1071  1F49                     	;# 
  1072  1F4A                     	;# 
  1073  1F4E                     	;# 
  1074  1F4F                     	;# 
  1075  1F50                     	;# 
  1076  1F51                     	;# 
  1077  1F52                     	;# 
  1078  1F53                     	;# 
  1079  1F54                     	;# 
  1080  1F55                     	;# 
  1081  1FE4                     	;# 
  1082  1FE5                     	;# 
  1083  1FE6                     	;# 
  1084  1FE7                     	;# 
  1085  1FE8                     	;# 
  1086  1FE8                     	;# 
  1087  1FE9                     	;# 
  1088  1FEA                     	;# 
  1089  1FEB                     	;# 
  1090  1FED                     	;# 
  1091  1FEE                     	;# 
  1092  1FEF                     	;# 
  1093  0000                     	;# 
  1094  0001                     	;# 
  1095  0002                     	;# 
  1096  0003                     	;# 
  1097  0004                     	;# 
  1098  0005                     	;# 
  1099  0006                     	;# 
  1100  0007                     	;# 
  1101  0008                     	;# 
  1102  0009                     	;# 
  1103  000A                     	;# 
  1104  000B                     	;# 
  1105  000C                     	;# 
  1106  000D                     	;# 
  1107  000E                     	;# 
  1108  0012                     	;# 
  1109  0013                     	;# 
  1110  0014                     	;# 
  1111  0018                     	;# 
  1112  0019                     	;# 
  1113  001A                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0092                     	;# 
  1124  0092                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0094                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0096                     	;# 
  1131  0097                     	;# 
  1132  0098                     	;# 
  1133  0099                     	;# 
  1134  009A                     	;# 
  1135  009B                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010C                     	;# 
  1144  010D                     	;# 
  1145  010E                     	;# 
  1146  010F                     	;# 
  1147  010F                     	;# 
  1148  0110                     	;# 
  1149  0111                     	;# 
  1150  0112                     	;# 
  1151  0113                     	;# 
  1152  0114                     	;# 
  1153  0115                     	;# 
  1154  0116                     	;# 
  1155  0117                     	;# 
  1156  0118                     	;# 
  1157  0119                     	;# 
  1158  0119                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011A                     	;# 
  1162  011A                     	;# 
  1163  011B                     	;# 
  1164  011B                     	;# 
  1165  011B                     	;# 
  1166  011B                     	;# 
  1167  011B                     	;# 
  1168  011C                     	;# 
  1169  011C                     	;# 
  1170  011C                     	;# 
  1171  011D                     	;# 
  1172  011D                     	;# 
  1173  011D                     	;# 
  1174  011E                     	;# 
  1175  011E                     	;# 
  1176  011E                     	;# 
  1177  011F                     	;# 
  1178  011F                     	;# 
  1179  011F                     	;# 
  1180  011F                     	;# 
  1181  011F                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  018E                     	;# 
  1185  018F                     	;# 
  1186  0190                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0196                     	;# 
  1190  0197                     	;# 
  1191  0198                     	;# 
  1192  0199                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  020C                     	;# 
  1197  020D                     	;# 
  1198  020E                     	;# 
  1199  020E                     	;# 
  1200  020F                     	;# 
  1201  020F                     	;# 
  1202  0210                     	;# 
  1203  0210                     	;# 
  1204  0211                     	;# 
  1205  0211                     	;# 
  1206  0212                     	;# 
  1207  0213                     	;# 
  1208  0214                     	;# 
  1209  0214                     	;# 
  1210  0215                     	;# 
  1211  0215                     	;# 
  1212  0216                     	;# 
  1213  0216                     	;# 
  1214  0217                     	;# 
  1215  0217                     	;# 
  1216  0218                     	;# 
  1217  0219                     	;# 
  1218  021A                     	;# 
  1219  021A                     	;# 
  1220  021B                     	;# 
  1221  021B                     	;# 
  1222  021C                     	;# 
  1223  021C                     	;# 
  1224  021D                     	;# 
  1225  021D                     	;# 
  1226  021E                     	;# 
  1227  021F                     	;# 
  1228  028C                     	;# 
  1229  028C                     	;# 
  1230  028D                     	;# 
  1231  028D                     	;# 
  1232  028E                     	;# 
  1233  028F                     	;# 
  1234  0290                     	;# 
  1235  0291                     	;# 
  1236  0292                     	;# 
  1237  0292                     	;# 
  1238  0293                     	;# 
  1239  0293                     	;# 
  1240  0294                     	;# 
  1241  0295                     	;# 
  1242  0296                     	;# 
  1243  0297                     	;# 
  1244  0298                     	;# 
  1245  0298                     	;# 
  1246  0299                     	;# 
  1247  0299                     	;# 
  1248  029A                     	;# 
  1249  029B                     	;# 
  1250  029C                     	;# 
  1251  029D                     	;# 
  1252  029F                     	;# 
  1253  030C                     	;# 
  1254  030C                     	;# 
  1255  030D                     	;# 
  1256  030E                     	;# 
  1257  030F                     	;# 
  1258  0310                     	;# 
  1259  0310                     	;# 
  1260  0311                     	;# 
  1261  0312                     	;# 
  1262  0313                     	;# 
  1263  0314                     	;# 
  1264  0314                     	;# 
  1265  0315                     	;# 
  1266  0316                     	;# 
  1267  0317                     	;# 
  1268  0318                     	;# 
  1269  0318                     	;# 
  1270  0319                     	;# 
  1271  031A                     	;# 
  1272  031B                     	;# 
  1273  038C                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  0390                     	;# 
  1278  0390                     	;# 
  1279  0391                     	;# 
  1280  0392                     	;# 
  1281  048C                     	;# 
  1282  048C                     	;# 
  1283  048D                     	;# 
  1284  048E                     	;# 
  1285  048F                     	;# 
  1286  048F                     	;# 
  1287  0490                     	;# 
  1288  0491                     	;# 
  1289  0492                     	;# 
  1290  0492                     	;# 
  1291  0493                     	;# 
  1292  0494                     	;# 
  1293  0495                     	;# 
  1294  0495                     	;# 
  1295  0496                     	;# 
  1296  0497                     	;# 
  1297  0498                     	;# 
  1298  0499                     	;# 
  1299  049A                     	;# 
  1300  049B                     	;# 
  1301  049C                     	;# 
  1302  049D                     	;# 
  1303  058C                     	;# 
  1304  058C                     	;# 
  1305  058D                     	;# 
  1306  058E                     	;# 
  1307  058F                     	;# 
  1308  058F                     	;# 
  1309  0590                     	;# 
  1310  0591                     	;# 
  1311  0592                     	;# 
  1312  0593                     	;# 
  1313  059C                     	;# 
  1314  059C                     	;# 
  1315  059D                     	;# 
  1316  059D                     	;# 
  1317  059E                     	;# 
  1318  059F                     	;# 
  1319  060C                     	;# 
  1320  060C                     	;# 
  1321  060D                     	;# 
  1322  060D                     	;# 
  1323  060E                     	;# 
  1324  060F                     	;# 
  1325  0610                     	;# 
  1326  0611                     	;# 
  1327  0612                     	;# 
  1328  0613                     	;# 
  1329  0614                     	;# 
  1330  0616                     	;# 
  1331  0616                     	;# 
  1332  0617                     	;# 
  1333  0617                     	;# 
  1334  0618                     	;# 
  1335  0619                     	;# 
  1336  061A                     	;# 
  1337  061B                     	;# 
  1338  061C                     	;# 
  1339  061D                     	;# 
  1340  061E                     	;# 
  1341  070C                     	;# 
  1342  070D                     	;# 
  1343  070E                     	;# 
  1344  070F                     	;# 
  1345  0710                     	;# 
  1346  0711                     	;# 
  1347  0712                     	;# 
  1348  0713                     	;# 
  1349  0714                     	;# 
  1350  0716                     	;# 
  1351  0717                     	;# 
  1352  0718                     	;# 
  1353  0719                     	;# 
  1354  071A                     	;# 
  1355  071B                     	;# 
  1356  071C                     	;# 
  1357  071D                     	;# 
  1358  071E                     	;# 
  1359  0796                     	;# 
  1360  0797                     	;# 
  1361  0798                     	;# 
  1362  0799                     	;# 
  1363  079A                     	;# 
  1364  079B                     	;# 
  1365  079C                     	;# 
  1366  079D                     	;# 
  1367  080C                     	;# 
  1368  080D                     	;# 
  1369  080E                     	;# 
  1370  080F                     	;# 
  1371  0810                     	;# 
  1372  0811                     	;# 
  1373  0812                     	;# 
  1374  0813                     	;# 
  1375  0814                     	;# 
  1376  081A                     	;# 
  1377  081A                     	;# 
  1378  081B                     	;# 
  1379  081C                     	;# 
  1380  081C                     	;# 
  1381  081D                     	;# 
  1382  081E                     	;# 
  1383  081F                     	;# 
  1384  088C                     	;# 
  1385  088D                     	;# 
  1386  088E                     	;# 
  1387  088F                     	;# 
  1388  0890                     	;# 
  1389  0891                     	;# 
  1390  0892                     	;# 
  1391  0893                     	;# 
  1392  0895                     	;# 
  1393  0896                     	;# 
  1394  0897                     	;# 
  1395  0898                     	;# 
  1396  0899                     	;# 
  1397  089A                     	;# 
  1398  089B                     	;# 
  1399  090C                     	;# 
  1400  090E                     	;# 
  1401  090F                     	;# 
  1402  091F                     	;# 
  1403  098F                     	;# 
  1404  098F                     	;# 
  1405  0990                     	;# 
  1406  0991                     	;# 
  1407  0992                     	;# 
  1408  0993                     	;# 
  1409  0994                     	;# 
  1410  0995                     	;# 
  1411  0996                     	;# 
  1412  0997                     	;# 
  1413  1E0F                     	;# 
  1414  1E10                     	;# 
  1415  1E11                     	;# 
  1416  1E12                     	;# 
  1417  1E13                     	;# 
  1418  1E14                     	;# 
  1419  1E15                     	;# 
  1420  1E16                     	;# 
  1421  1E17                     	;# 
  1422  1E18                     	;# 
  1423  1E19                     	;# 
  1424  1E1A                     	;# 
  1425  1E1B                     	;# 
  1426  1E1C                     	;# 
  1427  1E1D                     	;# 
  1428  1E1E                     	;# 
  1429  1E1F                     	;# 
  1430  1E20                     	;# 
  1431  1E21                     	;# 
  1432  1E22                     	;# 
  1433  1E23                     	;# 
  1434  1E24                     	;# 
  1435  1E25                     	;# 
  1436  1E26                     	;# 
  1437  1E27                     	;# 
  1438  1E28                     	;# 
  1439  1E29                     	;# 
  1440  1E2A                     	;# 
  1441  1E2B                     	;# 
  1442  1E2C                     	;# 
  1443  1E2D                     	;# 
  1444  1E2E                     	;# 
  1445  1E2F                     	;# 
  1446  1E30                     	;# 
  1447  1E31                     	;# 
  1448  1E32                     	;# 
  1449  1E33                     	;# 
  1450  1E34                     	;# 
  1451  1E35                     	;# 
  1452  1E36                     	;# 
  1453  1E37                     	;# 
  1454  1E8F                     	;# 
  1455  1E90                     	;# 
  1456  1E91                     	;# 
  1457  1E92                     	;# 
  1458  1E93                     	;# 
  1459  1E94                     	;# 
  1460  1E95                     	;# 
  1461  1E96                     	;# 
  1462  1E97                     	;# 
  1463  1E9C                     	;# 
  1464  1E9D                     	;# 
  1465  1E9E                     	;# 
  1466  1EA1                     	;# 
  1467  1EA2                     	;# 
  1468  1EA3                     	;# 
  1469  1EA4                     	;# 
  1470  1EA9                     	;# 
  1471  1EAA                     	;# 
  1472  1EB1                     	;# 
  1473  1EB2                     	;# 
  1474  1EB8                     	;# 
  1475  1EB9                     	;# 
  1476  1EBA                     	;# 
  1477  1EBB                     	;# 
  1478  1EBC                     	;# 
  1479  1EBD                     	;# 
  1480  1EBE                     	;# 
  1481  1EC3                     	;# 
  1482  1EC5                     	;# 
  1483  1EC6                     	;# 
  1484  1EC7                     	;# 
  1485  1EC8                     	;# 
  1486  1EC9                     	;# 
  1487  1ECA                     	;# 
  1488  1ECB                     	;# 
  1489  1ECB                     	;# 
  1490  1ECB                     	;# 
  1491  1ECC                     	;# 
  1492  1ECC                     	;# 
  1493  1ECC                     	;# 
  1494  1F10                     	;# 
  1495  1F11                     	;# 
  1496  1F12                     	;# 
  1497  1F14                     	;# 
  1498  1F15                     	;# 
  1499  1F1C                     	;# 
  1500  1F1D                     	;# 
  1501  1F1E                     	;# 
  1502  1F1F                     	;# 
  1503  1F20                     	;# 
  1504  1F21                     	;# 
  1505  1F22                     	;# 
  1506  1F23                     	;# 
  1507  1F24                     	;# 
  1508  1F25                     	;# 
  1509  1F26                     	;# 
  1510  1F27                     	;# 
  1511  1F38                     	;# 
  1512  1F39                     	;# 
  1513  1F3A                     	;# 
  1514  1F3B                     	;# 
  1515  1F3C                     	;# 
  1516  1F3D                     	;# 
  1517  1F3E                     	;# 
  1518  1F3F                     	;# 
  1519  1F43                     	;# 
  1520  1F44                     	;# 
  1521  1F45                     	;# 
  1522  1F46                     	;# 
  1523  1F47                     	;# 
  1524  1F48                     	;# 
  1525  1F49                     	;# 
  1526  1F4A                     	;# 
  1527  1F4E                     	;# 
  1528  1F4F                     	;# 
  1529  1F50                     	;# 
  1530  1F51                     	;# 
  1531  1F52                     	;# 
  1532  1F53                     	;# 
  1533  1F54                     	;# 
  1534  1F55                     	;# 
  1535  1FE4                     	;# 
  1536  1FE5                     	;# 
  1537  1FE6                     	;# 
  1538  1FE7                     	;# 
  1539  1FE8                     	;# 
  1540  1FE8                     	;# 
  1541  1FE9                     	;# 
  1542  1FEA                     	;# 
  1543  1FEB                     	;# 
  1544  1FED                     	;# 
  1545  1FEE                     	;# 
  1546  1FEF                     	;# 
  1547  0000                     	;# 
  1548  0001                     	;# 
  1549  0002                     	;# 
  1550  0003                     	;# 
  1551  0004                     	;# 
  1552  0005                     	;# 
  1553  0006                     	;# 
  1554  0007                     	;# 
  1555  0008                     	;# 
  1556  0009                     	;# 
  1557  000A                     	;# 
  1558  000B                     	;# 
  1559  000C                     	;# 
  1560  000D                     	;# 
  1561  000E                     	;# 
  1562  0012                     	;# 
  1563  0013                     	;# 
  1564  0014                     	;# 
  1565  0018                     	;# 
  1566  0019                     	;# 
  1567  001A                     	;# 
  1568  008C                     	;# 
  1569  008C                     	;# 
  1570  008D                     	;# 
  1571  008E                     	;# 
  1572  008E                     	;# 
  1573  008F                     	;# 
  1574  0090                     	;# 
  1575  0090                     	;# 
  1576  0091                     	;# 
  1577  0092                     	;# 
  1578  0092                     	;# 
  1579  0093                     	;# 
  1580  0094                     	;# 
  1581  0094                     	;# 
  1582  0095                     	;# 
  1583  0096                     	;# 
  1584  0096                     	;# 
  1585  0097                     	;# 
  1586  0098                     	;# 
  1587  0099                     	;# 
  1588  009A                     	;# 
  1589  009B                     	;# 
  1590  009B                     	;# 
  1591  009C                     	;# 
  1592  009D                     	;# 
  1593  009D                     	;# 
  1594  009E                     	;# 
  1595  009F                     	;# 
  1596  010C                     	;# 
  1597  010C                     	;# 
  1598  010D                     	;# 
  1599  010E                     	;# 
  1600  010F                     	;# 
  1601  010F                     	;# 
  1602  0110                     	;# 
  1603  0111                     	;# 
  1604  0112                     	;# 
  1605  0113                     	;# 
  1606  0114                     	;# 
  1607  0115                     	;# 
  1608  0116                     	;# 
  1609  0117                     	;# 
  1610  0118                     	;# 
  1611  0119                     	;# 
  1612  0119                     	;# 
  1613  0119                     	;# 
  1614  011A                     	;# 
  1615  011A                     	;# 
  1616  011A                     	;# 
  1617  011B                     	;# 
  1618  011B                     	;# 
  1619  011B                     	;# 
  1620  011B                     	;# 
  1621  011B                     	;# 
  1622  011C                     	;# 
  1623  011C                     	;# 
  1624  011C                     	;# 
  1625  011D                     	;# 
  1626  011D                     	;# 
  1627  011D                     	;# 
  1628  011E                     	;# 
  1629  011E                     	;# 
  1630  011E                     	;# 
  1631  011F                     	;# 
  1632  011F                     	;# 
  1633  011F                     	;# 
  1634  011F                     	;# 
  1635  011F                     	;# 
  1636  018C                     	;# 
  1637  018D                     	;# 
  1638  018E                     	;# 
  1639  018F                     	;# 
  1640  0190                     	;# 
  1641  0191                     	;# 
  1642  0192                     	;# 
  1643  0196                     	;# 
  1644  0197                     	;# 
  1645  0198                     	;# 
  1646  0199                     	;# 
  1647  019A                     	;# 
  1648  019B                     	;# 
  1649  019C                     	;# 
  1650  020C                     	;# 
  1651  020D                     	;# 
  1652  020E                     	;# 
  1653  020E                     	;# 
  1654  020F                     	;# 
  1655  020F                     	;# 
  1656  0210                     	;# 
  1657  0210                     	;# 
  1658  0211                     	;# 
  1659  0211                     	;# 
  1660  0212                     	;# 
  1661  0213                     	;# 
  1662  0214                     	;# 
  1663  0214                     	;# 
  1664  0215                     	;# 
  1665  0215                     	;# 
  1666  0216                     	;# 
  1667  0216                     	;# 
  1668  0217                     	;# 
  1669  0217                     	;# 
  1670  0218                     	;# 
  1671  0219                     	;# 
  1672  021A                     	;# 
  1673  021A                     	;# 
  1674  021B                     	;# 
  1675  021B                     	;# 
  1676  021C                     	;# 
  1677  021C                     	;# 
  1678  021D                     	;# 
  1679  021D                     	;# 
  1680  021E                     	;# 
  1681  021F                     	;# 
  1682  028C                     	;# 
  1683  028C                     	;# 
  1684  028D                     	;# 
  1685  028D                     	;# 
  1686  028E                     	;# 
  1687  028F                     	;# 
  1688  0290                     	;# 
  1689  0291                     	;# 
  1690  0292                     	;# 
  1691  0292                     	;# 
  1692  0293                     	;# 
  1693  0293                     	;# 
  1694  0294                     	;# 
  1695  0295                     	;# 
  1696  0296                     	;# 
  1697  0297                     	;# 
  1698  0298                     	;# 
  1699  0298                     	;# 
  1700  0299                     	;# 
  1701  0299                     	;# 
  1702  029A                     	;# 
  1703  029B                     	;# 
  1704  029C                     	;# 
  1705  029D                     	;# 
  1706  029F                     	;# 
  1707  030C                     	;# 
  1708  030C                     	;# 
  1709  030D                     	;# 
  1710  030E                     	;# 
  1711  030F                     	;# 
  1712  0310                     	;# 
  1713  0310                     	;# 
  1714  0311                     	;# 
  1715  0312                     	;# 
  1716  0313                     	;# 
  1717  0314                     	;# 
  1718  0314                     	;# 
  1719  0315                     	;# 
  1720  0316                     	;# 
  1721  0317                     	;# 
  1722  0318                     	;# 
  1723  0318                     	;# 
  1724  0319                     	;# 
  1725  031A                     	;# 
  1726  031B                     	;# 
  1727  038C                     	;# 
  1728  038C                     	;# 
  1729  038D                     	;# 
  1730  038E                     	;# 
  1731  0390                     	;# 
  1732  0390                     	;# 
  1733  0391                     	;# 
  1734  0392                     	;# 
  1735  048C                     	;# 
  1736  048C                     	;# 
  1737  048D                     	;# 
  1738  048E                     	;# 
  1739  048F                     	;# 
  1740  048F                     	;# 
  1741  0490                     	;# 
  1742  0491                     	;# 
  1743  0492                     	;# 
  1744  0492                     	;# 
  1745  0493                     	;# 
  1746  0494                     	;# 
  1747  0495                     	;# 
  1748  0495                     	;# 
  1749  0496                     	;# 
  1750  0497                     	;# 
  1751  0498                     	;# 
  1752  0499                     	;# 
  1753  049A                     	;# 
  1754  049B                     	;# 
  1755  049C                     	;# 
  1756  049D                     	;# 
  1757  058C                     	;# 
  1758  058C                     	;# 
  1759  058D                     	;# 
  1760  058E                     	;# 
  1761  058F                     	;# 
  1762  058F                     	;# 
  1763  0590                     	;# 
  1764  0591                     	;# 
  1765  0592                     	;# 
  1766  0593                     	;# 
  1767  059C                     	;# 
  1768  059C                     	;# 
  1769  059D                     	;# 
  1770  059D                     	;# 
  1771  059E                     	;# 
  1772  059F                     	;# 
  1773  060C                     	;# 
  1774  060C                     	;# 
  1775  060D                     	;# 
  1776  060D                     	;# 
  1777  060E                     	;# 
  1778  060F                     	;# 
  1779  0610                     	;# 
  1780  0611                     	;# 
  1781  0612                     	;# 
  1782  0613                     	;# 
  1783  0614                     	;# 
  1784  0616                     	;# 
  1785  0616                     	;# 
  1786  0617                     	;# 
  1787  0617                     	;# 
  1788  0618                     	;# 
  1789  0619                     	;# 
  1790  061A                     	;# 
  1791  061B                     	;# 
  1792  061C                     	;# 
  1793  061D                     	;# 
  1794  061E                     	;# 
  1795  070C                     	;# 
  1796  070D                     	;# 
  1797  070E                     	;# 
  1798  070F                     	;# 
  1799  0710                     	;# 
  1800  0711                     	;# 
  1801  0712                     	;# 
  1802  0713                     	;# 
  1803  0714                     	;# 
  1804  0716                     	;# 
  1805  0717                     	;# 
  1806  0718                     	;# 
  1807  0719                     	;# 
  1808  071A                     	;# 
  1809  071B                     	;# 
  1810  071C                     	;# 
  1811  071D                     	;# 
  1812  071E                     	;# 
  1813  0796                     	;# 
  1814  0797                     	;# 
  1815  0798                     	;# 
  1816  0799                     	;# 
  1817  079A                     	;# 
  1818  079B                     	;# 
  1819  079C                     	;# 
  1820  079D                     	;# 
  1821  080C                     	;# 
  1822  080D                     	;# 
  1823  080E                     	;# 
  1824  080F                     	;# 
  1825  0810                     	;# 
  1826  0811                     	;# 
  1827  0812                     	;# 
  1828  0813                     	;# 
  1829  0814                     	;# 
  1830  081A                     	;# 
  1831  081A                     	;# 
  1832  081B                     	;# 
  1833  081C                     	;# 
  1834  081C                     	;# 
  1835  081D                     	;# 
  1836  081E                     	;# 
  1837  081F                     	;# 
  1838  088C                     	;# 
  1839  088D                     	;# 
  1840  088E                     	;# 
  1841  088F                     	;# 
  1842  0890                     	;# 
  1843  0891                     	;# 
  1844  0892                     	;# 
  1845  0893                     	;# 
  1846  0895                     	;# 
  1847  0896                     	;# 
  1848  0897                     	;# 
  1849  0898                     	;# 
  1850  0899                     	;# 
  1851  089A                     	;# 
  1852  089B                     	;# 
  1853  090C                     	;# 
  1854  090E                     	;# 
  1855  090F                     	;# 
  1856  091F                     	;# 
  1857  098F                     	;# 
  1858  098F                     	;# 
  1859  0990                     	;# 
  1860  0991                     	;# 
  1861  0992                     	;# 
  1862  0993                     	;# 
  1863  0994                     	;# 
  1864  0995                     	;# 
  1865  0996                     	;# 
  1866  0997                     	;# 
  1867  1E0F                     	;# 
  1868  1E10                     	;# 
  1869  1E11                     	;# 
  1870  1E12                     	;# 
  1871  1E13                     	;# 
  1872  1E14                     	;# 
  1873  1E15                     	;# 
  1874  1E16                     	;# 
  1875  1E17                     	;# 
  1876  1E18                     	;# 
  1877  1E19                     	;# 
  1878  1E1A                     	;# 
  1879  1E1B                     	;# 
  1880  1E1C                     	;# 
  1881  1E1D                     	;# 
  1882  1E1E                     	;# 
  1883  1E1F                     	;# 
  1884  1E20                     	;# 
  1885  1E21                     	;# 
  1886  1E22                     	;# 
  1887  1E23                     	;# 
  1888  1E24                     	;# 
  1889  1E25                     	;# 
  1890  1E26                     	;# 
  1891  1E27                     	;# 
  1892  1E28                     	;# 
  1893  1E29                     	;# 
  1894  1E2A                     	;# 
  1895  1E2B                     	;# 
  1896  1E2C                     	;# 
  1897  1E2D                     	;# 
  1898  1E2E                     	;# 
  1899  1E2F                     	;# 
  1900  1E30                     	;# 
  1901  1E31                     	;# 
  1902  1E32                     	;# 
  1903  1E33                     	;# 
  1904  1E34                     	;# 
  1905  1E35                     	;# 
  1906  1E36                     	;# 
  1907  1E37                     	;# 
  1908  1E8F                     	;# 
  1909  1E90                     	;# 
  1910  1E91                     	;# 
  1911  1E92                     	;# 
  1912  1E93                     	;# 
  1913  1E94                     	;# 
  1914  1E95                     	;# 
  1915  1E96                     	;# 
  1916  1E97                     	;# 
  1917  1E9C                     	;# 
  1918  1E9D                     	;# 
  1919  1E9E                     	;# 
  1920  1EA1                     	;# 
  1921  1EA2                     	;# 
  1922  1EA3                     	;# 
  1923  1EA4                     	;# 
  1924  1EA9                     	;# 
  1925  1EAA                     	;# 
  1926  1EB1                     	;# 
  1927  1EB2                     	;# 
  1928  1EB8                     	;# 
  1929  1EB9                     	;# 
  1930  1EBA                     	;# 
  1931  1EBB                     	;# 
  1932  1EBC                     	;# 
  1933  1EBD                     	;# 
  1934  1EBE                     	;# 
  1935  1EC3                     	;# 
  1936  1EC5                     	;# 
  1937  1EC6                     	;# 
  1938  1EC7                     	;# 
  1939  1EC8                     	;# 
  1940  1EC9                     	;# 
  1941  1ECA                     	;# 
  1942  1ECB                     	;# 
  1943  1ECB                     	;# 
  1944  1ECB                     	;# 
  1945  1ECC                     	;# 
  1946  1ECC                     	;# 
  1947  1ECC                     	;# 
  1948  1F10                     	;# 
  1949  1F11                     	;# 
  1950  1F12                     	;# 
  1951  1F14                     	;# 
  1952  1F15                     	;# 
  1953  1F1C                     	;# 
  1954  1F1D                     	;# 
  1955  1F1E                     	;# 
  1956  1F1F                     	;# 
  1957  1F20                     	;# 
  1958  1F21                     	;# 
  1959  1F22                     	;# 
  1960  1F23                     	;# 
  1961  1F24                     	;# 
  1962  1F25                     	;# 
  1963  1F26                     	;# 
  1964  1F27                     	;# 
  1965  1F38                     	;# 
  1966  1F39                     	;# 
  1967  1F3A                     	;# 
  1968  1F3B                     	;# 
  1969  1F3C                     	;# 
  1970  1F3D                     	;# 
  1971  1F3E                     	;# 
  1972  1F3F                     	;# 
  1973  1F43                     	;# 
  1974  1F44                     	;# 
  1975  1F45                     	;# 
  1976  1F46                     	;# 
  1977  1F47                     	;# 
  1978  1F48                     	;# 
  1979  1F49                     	;# 
  1980  1F4A                     	;# 
  1981  1F4E                     	;# 
  1982  1F4F                     	;# 
  1983  1F50                     	;# 
  1984  1F51                     	;# 
  1985  1F52                     	;# 
  1986  1F53                     	;# 
  1987  1F54                     	;# 
  1988  1F55                     	;# 
  1989  1FE4                     	;# 
  1990  1FE5                     	;# 
  1991  1FE6                     	;# 
  1992  1FE7                     	;# 
  1993  1FE8                     	;# 
  1994  1FE8                     	;# 
  1995  1FE9                     	;# 
  1996  1FEA                     	;# 
  1997  1FEB                     	;# 
  1998  1FED                     	;# 
  1999  1FEE                     	;# 
  2000  1FEF                     	;# 
  2001  0000                     	;# 
  2002  0001                     	;# 
  2003  0002                     	;# 
  2004  0003                     	;# 
  2005  0004                     	;# 
  2006  0005                     	;# 
  2007  0006                     	;# 
  2008  0007                     	;# 
  2009  0008                     	;# 
  2010  0009                     	;# 
  2011  000A                     	;# 
  2012  000B                     	;# 
  2013  000C                     	;# 
  2014  000D                     	;# 
  2015  000E                     	;# 
  2016  0012                     	;# 
  2017  0013                     	;# 
  2018  0014                     	;# 
  2019  0018                     	;# 
  2020  0019                     	;# 
  2021  001A                     	;# 
  2022  008C                     	;# 
  2023  008C                     	;# 
  2024  008D                     	;# 
  2025  008E                     	;# 
  2026  008E                     	;# 
  2027  008F                     	;# 
  2028  0090                     	;# 
  2029  0090                     	;# 
  2030  0091                     	;# 
  2031  0092                     	;# 
  2032  0092                     	;# 
  2033  0093                     	;# 
  2034  0094                     	;# 
  2035  0094                     	;# 
  2036  0095                     	;# 
  2037  0096                     	;# 
  2038  0096                     	;# 
  2039  0097                     	;# 
  2040  0098                     	;# 
  2041  0099                     	;# 
  2042  009A                     	;# 
  2043  009B                     	;# 
  2044  009B                     	;# 
  2045  009C                     	;# 
  2046  009D                     	;# 
  2047  009D                     	;# 
  2048  009E                     	;# 
  2049  009F                     	;# 
  2050  010C                     	;# 
  2051  010C                     	;# 
  2052  010D                     	;# 
  2053  010E                     	;# 
  2054  010F                     	;# 
  2055  010F                     	;# 
  2056  0110                     	;# 
  2057  0111                     	;# 
  2058  0112                     	;# 
  2059  0113                     	;# 
  2060  0114                     	;# 
  2061  0115                     	;# 
  2062  0116                     	;# 
  2063  0117                     	;# 
  2064  0118                     	;# 
  2065  0119                     	;# 
  2066  0119                     	;# 
  2067  0119                     	;# 
  2068  011A                     	;# 
  2069  011A                     	;# 
  2070  011A                     	;# 
  2071  011B                     	;# 
  2072  011B                     	;# 
  2073  011B                     	;# 
  2074  011B                     	;# 
  2075  011B                     	;# 
  2076  011C                     	;# 
  2077  011C                     	;# 
  2078  011C                     	;# 
  2079  011D                     	;# 
  2080  011D                     	;# 
  2081  011D                     	;# 
  2082  011E                     	;# 
  2083  011E                     	;# 
  2084  011E                     	;# 
  2085  011F                     	;# 
  2086  011F                     	;# 
  2087  011F                     	;# 
  2088  011F                     	;# 
  2089  011F                     	;# 
  2090  018C                     	;# 
  2091  018D                     	;# 
  2092  018E                     	;# 
  2093  018F                     	;# 
  2094  0190                     	;# 
  2095  0191                     	;# 
  2096  0192                     	;# 
  2097  0196                     	;# 
  2098  0197                     	;# 
  2099  0198                     	;# 
  2100  0199                     	;# 
  2101  019A                     	;# 
  2102  019B                     	;# 
  2103  019C                     	;# 
  2104  020C                     	;# 
  2105  020D                     	;# 
  2106  020E                     	;# 
  2107  020E                     	;# 
  2108  020F                     	;# 
  2109  020F                     	;# 
  2110  0210                     	;# 
  2111  0210                     	;# 
  2112  0211                     	;# 
  2113  0211                     	;# 
  2114  0212                     	;# 
  2115  0213                     	;# 
  2116  0214                     	;# 
  2117  0214                     	;# 
  2118  0215                     	;# 
  2119  0215                     	;# 
  2120  0216                     	;# 
  2121  0216                     	;# 
  2122  0217                     	;# 
  2123  0217                     	;# 
  2124  0218                     	;# 
  2125  0219                     	;# 
  2126  021A                     	;# 
  2127  021A                     	;# 
  2128  021B                     	;# 
  2129  021B                     	;# 
  2130  021C                     	;# 
  2131  021C                     	;# 
  2132  021D                     	;# 
  2133  021D                     	;# 
  2134  021E                     	;# 
  2135  021F                     	;# 
  2136  028C                     	;# 
  2137  028C                     	;# 
  2138  028D                     	;# 
  2139  028D                     	;# 
  2140  028E                     	;# 
  2141  028F                     	;# 
  2142  0290                     	;# 
  2143  0291                     	;# 
  2144  0292                     	;# 
  2145  0292                     	;# 
  2146  0293                     	;# 
  2147  0293                     	;# 
  2148  0294                     	;# 
  2149  0295                     	;# 
  2150  0296                     	;# 
  2151  0297                     	;# 
  2152  0298                     	;# 
  2153  0298                     	;# 
  2154  0299                     	;# 
  2155  0299                     	;# 
  2156  029A                     	;# 
  2157  029B                     	;# 
  2158  029C                     	;# 
  2159  029D                     	;# 
  2160  029F                     	;# 
  2161  030C                     	;# 
  2162  030C                     	;# 
  2163  030D                     	;# 
  2164  030E                     	;# 
  2165  030F                     	;# 
  2166  0310                     	;# 
  2167  0310                     	;# 
  2168  0311                     	;# 
  2169  0312                     	;# 
  2170  0313                     	;# 
  2171  0314                     	;# 
  2172  0314                     	;# 
  2173  0315                     	;# 
  2174  0316                     	;# 
  2175  0317                     	;# 
  2176  0318                     	;# 
  2177  0318                     	;# 
  2178  0319                     	;# 
  2179  031A                     	;# 
  2180  031B                     	;# 
  2181  038C                     	;# 
  2182  038C                     	;# 
  2183  038D                     	;# 
  2184  038E                     	;# 
  2185  0390                     	;# 
  2186  0390                     	;# 
  2187  0391                     	;# 
  2188  0392                     	;# 
  2189  048C                     	;# 
  2190  048C                     	;# 
  2191  048D                     	;# 
  2192  048E                     	;# 
  2193  048F                     	;# 
  2194  048F                     	;# 
  2195  0490                     	;# 
  2196  0491                     	;# 
  2197  0492                     	;# 
  2198  0492                     	;# 
  2199  0493                     	;# 
  2200  0494                     	;# 
  2201  0495                     	;# 
  2202  0495                     	;# 
  2203  0496                     	;# 
  2204  0497                     	;# 
  2205  0498                     	;# 
  2206  0499                     	;# 
  2207  049A                     	;# 
  2208  049B                     	;# 
  2209  049C                     	;# 
  2210  049D                     	;# 
  2211  058C                     	;# 
  2212  058C                     	;# 
  2213  058D                     	;# 
  2214  058E                     	;# 
  2215  058F                     	;# 
  2216  058F                     	;# 
  2217  0590                     	;# 
  2218  0591                     	;# 
  2219  0592                     	;# 
  2220  0593                     	;# 
  2221  059C                     	;# 
  2222  059C                     	;# 
  2223  059D                     	;# 
  2224  059D                     	;# 
  2225  059E                     	;# 
  2226  059F                     	;# 
  2227  060C                     	;# 
  2228  060C                     	;# 
  2229  060D                     	;# 
  2230  060D                     	;# 
  2231  060E                     	;# 
  2232  060F                     	;# 
  2233  0610                     	;# 
  2234  0611                     	;# 
  2235  0612                     	;# 
  2236  0613                     	;# 
  2237  0614                     	;# 
  2238  0616                     	;# 
  2239  0616                     	;# 
  2240  0617                     	;# 
  2241  0617                     	;# 
  2242  0618                     	;# 
  2243  0619                     	;# 
  2244  061A                     	;# 
  2245  061B                     	;# 
  2246  061C                     	;# 
  2247  061D                     	;# 
  2248  061E                     	;# 
  2249  070C                     	;# 
  2250  070D                     	;# 
  2251  070E                     	;# 
  2252  070F                     	;# 
  2253  0710                     	;# 
  2254  0711                     	;# 
  2255  0712                     	;# 
  2256  0713                     	;# 
  2257  0714                     	;# 
  2258  0716                     	;# 
  2259  0717                     	;# 
  2260  0718                     	;# 
  2261  0719                     	;# 
  2262  071A                     	;# 
  2263  071B                     	;# 
  2264  071C                     	;# 
  2265  071D                     	;# 
  2266  071E                     	;# 
  2267  0796                     	;# 
  2268  0797                     	;# 
  2269  0798                     	;# 
  2270  0799                     	;# 
  2271  079A                     	;# 
  2272  079B                     	;# 
  2273  079C                     	;# 
  2274  079D                     	;# 
  2275  080C                     	;# 
  2276  080D                     	;# 
  2277  080E                     	;# 
  2278  080F                     	;# 
  2279  0810                     	;# 
  2280  0811                     	;# 
  2281  0812                     	;# 
  2282  0813                     	;# 
  2283  0814                     	;# 
  2284  081A                     	;# 
  2285  081A                     	;# 
  2286  081B                     	;# 
  2287  081C                     	;# 
  2288  081C                     	;# 
  2289  081D                     	;# 
  2290  081E                     	;# 
  2291  081F                     	;# 
  2292  088C                     	;# 
  2293  088D                     	;# 
  2294  088E                     	;# 
  2295  088F                     	;# 
  2296  0890                     	;# 
  2297  0891                     	;# 
  2298  0892                     	;# 
  2299  0893                     	;# 
  2300  0895                     	;# 
  2301  0896                     	;# 
  2302  0897                     	;# 
  2303  0898                     	;# 
  2304  0899                     	;# 
  2305  089A                     	;# 
  2306  089B                     	;# 
  2307  090C                     	;# 
  2308  090E                     	;# 
  2309  090F                     	;# 
  2310  091F                     	;# 
  2311  098F                     	;# 
  2312  098F                     	;# 
  2313  0990                     	;# 
  2314  0991                     	;# 
  2315  0992                     	;# 
  2316  0993                     	;# 
  2317  0994                     	;# 
  2318  0995                     	;# 
  2319  0996                     	;# 
  2320  0997                     	;# 
  2321  1E0F                     	;# 
  2322  1E10                     	;# 
  2323  1E11                     	;# 
  2324  1E12                     	;# 
  2325  1E13                     	;# 
  2326  1E14                     	;# 
  2327  1E15                     	;# 
  2328  1E16                     	;# 
  2329  1E17                     	;# 
  2330  1E18                     	;# 
  2331  1E19                     	;# 
  2332  1E1A                     	;# 
  2333  1E1B                     	;# 
  2334  1E1C                     	;# 
  2335  1E1D                     	;# 
  2336  1E1E                     	;# 
  2337  1E1F                     	;# 
  2338  1E20                     	;# 
  2339  1E21                     	;# 
  2340  1E22                     	;# 
  2341  1E23                     	;# 
  2342  1E24                     	;# 
  2343  1E25                     	;# 
  2344  1E26                     	;# 
  2345  1E27                     	;# 
  2346  1E28                     	;# 
  2347  1E29                     	;# 
  2348  1E2A                     	;# 
  2349  1E2B                     	;# 
  2350  1E2C                     	;# 
  2351  1E2D                     	;# 
  2352  1E2E                     	;# 
  2353  1E2F                     	;# 
  2354  1E30                     	;# 
  2355  1E31                     	;# 
  2356  1E32                     	;# 
  2357  1E33                     	;# 
  2358  1E34                     	;# 
  2359  1E35                     	;# 
  2360  1E36                     	;# 
  2361  1E37                     	;# 
  2362  1E8F                     	;# 
  2363  1E90                     	;# 
  2364  1E91                     	;# 
  2365  1E92                     	;# 
  2366  1E93                     	;# 
  2367  1E94                     	;# 
  2368  1E95                     	;# 
  2369  1E96                     	;# 
  2370  1E97                     	;# 
  2371  1E9C                     	;# 
  2372  1E9D                     	;# 
  2373  1E9E                     	;# 
  2374  1EA1                     	;# 
  2375  1EA2                     	;# 
  2376  1EA3                     	;# 
  2377  1EA4                     	;# 
  2378  1EA9                     	;# 
  2379  1EAA                     	;# 
  2380  1EB1                     	;# 
  2381  1EB2                     	;# 
  2382  1EB8                     	;# 
  2383  1EB9                     	;# 
  2384  1EBA                     	;# 
  2385  1EBB                     	;# 
  2386  1EBC                     	;# 
  2387  1EBD                     	;# 
  2388  1EBE                     	;# 
  2389  1EC3                     	;# 
  2390  1EC5                     	;# 
  2391  1EC6                     	;# 
  2392  1EC7                     	;# 
  2393  1EC8                     	;# 
  2394  1EC9                     	;# 
  2395  1ECA                     	;# 
  2396  1ECB                     	;# 
  2397  1ECB                     	;# 
  2398  1ECB                     	;# 
  2399  1ECC                     	;# 
  2400  1ECC                     	;# 
  2401  1ECC                     	;# 
  2402  1F10                     	;# 
  2403  1F11                     	;# 
  2404  1F12                     	;# 
  2405  1F14                     	;# 
  2406  1F15                     	;# 
  2407  1F1C                     	;# 
  2408  1F1D                     	;# 
  2409  1F1E                     	;# 
  2410  1F1F                     	;# 
  2411  1F20                     	;# 
  2412  1F21                     	;# 
  2413  1F22                     	;# 
  2414  1F23                     	;# 
  2415  1F24                     	;# 
  2416  1F25                     	;# 
  2417  1F26                     	;# 
  2418  1F27                     	;# 
  2419  1F38                     	;# 
  2420  1F39                     	;# 
  2421  1F3A                     	;# 
  2422  1F3B                     	;# 
  2423  1F3C                     	;# 
  2424  1F3D                     	;# 
  2425  1F3E                     	;# 
  2426  1F3F                     	;# 
  2427  1F43                     	;# 
  2428  1F44                     	;# 
  2429  1F45                     	;# 
  2430  1F46                     	;# 
  2431  1F47                     	;# 
  2432  1F48                     	;# 
  2433  1F49                     	;# 
  2434  1F4A                     	;# 
  2435  1F4E                     	;# 
  2436  1F4F                     	;# 
  2437  1F50                     	;# 
  2438  1F51                     	;# 
  2439  1F52                     	;# 
  2440  1F53                     	;# 
  2441  1F54                     	;# 
  2442  1F55                     	;# 
  2443  1FE4                     	;# 
  2444  1FE5                     	;# 
  2445  1FE6                     	;# 
  2446  1FE7                     	;# 
  2447  1FE8                     	;# 
  2448  1FE8                     	;# 
  2449  1FE9                     	;# 
  2450  1FEA                     	;# 
  2451  1FEB                     	;# 
  2452  1FED                     	;# 
  2453  1FEE                     	;# 
  2454  1FEF                     	;# 
  2455  0000                     	;# 
  2456  0001                     	;# 
  2457  0002                     	;# 
  2458  0003                     	;# 
  2459  0004                     	;# 
  2460  0005                     	;# 
  2461  0006                     	;# 
  2462  0007                     	;# 
  2463  0008                     	;# 
  2464  0009                     	;# 
  2465  000A                     	;# 
  2466  000B                     	;# 
  2467  000C                     	;# 
  2468  000D                     	;# 
  2469  000E                     	;# 
  2470  0012                     	;# 
  2471  0013                     	;# 
  2472  0014                     	;# 
  2473  0018                     	;# 
  2474  0019                     	;# 
  2475  001A                     	;# 
  2476  008C                     	;# 
  2477  008C                     	;# 
  2478  008D                     	;# 
  2479  008E                     	;# 
  2480  008E                     	;# 
  2481  008F                     	;# 
  2482  0090                     	;# 
  2483  0090                     	;# 
  2484  0091                     	;# 
  2485  0092                     	;# 
  2486  0092                     	;# 
  2487  0093                     	;# 
  2488  0094                     	;# 
  2489  0094                     	;# 
  2490  0095                     	;# 
  2491  0096                     	;# 
  2492  0096                     	;# 
  2493  0097                     	;# 
  2494  0098                     	;# 
  2495  0099                     	;# 
  2496  009A                     	;# 
  2497  009B                     	;# 
  2498  009B                     	;# 
  2499  009C                     	;# 
  2500  009D                     	;# 
  2501  009D                     	;# 
  2502  009E                     	;# 
  2503  009F                     	;# 
  2504  010C                     	;# 
  2505  010C                     	;# 
  2506  010D                     	;# 
  2507  010E                     	;# 
  2508  010F                     	;# 
  2509  010F                     	;# 
  2510  0110                     	;# 
  2511  0111                     	;# 
  2512  0112                     	;# 
  2513  0113                     	;# 
  2514  0114                     	;# 
  2515  0115                     	;# 
  2516  0116                     	;# 
  2517  0117                     	;# 
  2518  0118                     	;# 
  2519  0119                     	;# 
  2520  0119                     	;# 
  2521  0119                     	;# 
  2522  011A                     	;# 
  2523  011A                     	;# 
  2524  011A                     	;# 
  2525  011B                     	;# 
  2526  011B                     	;# 
  2527  011B                     	;# 
  2528  011B                     	;# 
  2529  011B                     	;# 
  2530  011C                     	;# 
  2531  011C                     	;# 
  2532  011C                     	;# 
  2533  011D                     	;# 
  2534  011D                     	;# 
  2535  011D                     	;# 
  2536  011E                     	;# 
  2537  011E                     	;# 
  2538  011E                     	;# 
  2539  011F                     	;# 
  2540  011F                     	;# 
  2541  011F                     	;# 
  2542  011F                     	;# 
  2543  011F                     	;# 
  2544  018C                     	;# 
  2545  018D                     	;# 
  2546  018E                     	;# 
  2547  018F                     	;# 
  2548  0190                     	;# 
  2549  0191                     	;# 
  2550  0192                     	;# 
  2551  0196                     	;# 
  2552  0197                     	;# 
  2553  0198                     	;# 
  2554  0199                     	;# 
  2555  019A                     	;# 
  2556  019B                     	;# 
  2557  019C                     	;# 
  2558  020C                     	;# 
  2559  020D                     	;# 
  2560  020E                     	;# 
  2561  020E                     	;# 
  2562  020F                     	;# 
  2563  020F                     	;# 
  2564  0210                     	;# 
  2565  0210                     	;# 
  2566  0211                     	;# 
  2567  0211                     	;# 
  2568  0212                     	;# 
  2569  0213                     	;# 
  2570  0214                     	;# 
  2571  0214                     	;# 
  2572  0215                     	;# 
  2573  0215                     	;# 
  2574  0216                     	;# 
  2575  0216                     	;# 
  2576  0217                     	;# 
  2577  0217                     	;# 
  2578  0218                     	;# 
  2579  0219                     	;# 
  2580  021A                     	;# 
  2581  021A                     	;# 
  2582  021B                     	;# 
  2583  021B                     	;# 
  2584  021C                     	;# 
  2585  021C                     	;# 
  2586  021D                     	;# 
  2587  021D                     	;# 
  2588  021E                     	;# 
  2589  021F                     	;# 
  2590  028C                     	;# 
  2591  028C                     	;# 
  2592  028D                     	;# 
  2593  028D                     	;# 
  2594  028E                     	;# 
  2595  028F                     	;# 
  2596  0290                     	;# 
  2597  0291                     	;# 
  2598  0292                     	;# 
  2599  0292                     	;# 
  2600  0293                     	;# 
  2601  0293                     	;# 
  2602  0294                     	;# 
  2603  0295                     	;# 
  2604  0296                     	;# 
  2605  0297                     	;# 
  2606  0298                     	;# 
  2607  0298                     	;# 
  2608  0299                     	;# 
  2609  0299                     	;# 
  2610  029A                     	;# 
  2611  029B                     	;# 
  2612  029C                     	;# 
  2613  029D                     	;# 
  2614  029F                     	;# 
  2615  030C                     	;# 
  2616  030C                     	;# 
  2617  030D                     	;# 
  2618  030E                     	;# 
  2619  030F                     	;# 
  2620  0310                     	;# 
  2621  0310                     	;# 
  2622  0311                     	;# 
  2623  0312                     	;# 
  2624  0313                     	;# 
  2625  0314                     	;# 
  2626  0314                     	;# 
  2627  0315                     	;# 
  2628  0316                     	;# 
  2629  0317                     	;# 
  2630  0318                     	;# 
  2631  0318                     	;# 
  2632  0319                     	;# 
  2633  031A                     	;# 
  2634  031B                     	;# 
  2635  038C                     	;# 
  2636  038C                     	;# 
  2637  038D                     	;# 
  2638  038E                     	;# 
  2639  0390                     	;# 
  2640  0390                     	;# 
  2641  0391                     	;# 
  2642  0392                     	;# 
  2643  048C                     	;# 
  2644  048C                     	;# 
  2645  048D                     	;# 
  2646  048E                     	;# 
  2647  048F                     	;# 
  2648  048F                     	;# 
  2649  0490                     	;# 
  2650  0491                     	;# 
  2651  0492                     	;# 
  2652  0492                     	;# 
  2653  0493                     	;# 
  2654  0494                     	;# 
  2655  0495                     	;# 
  2656  0495                     	;# 
  2657  0496                     	;# 
  2658  0497                     	;# 
  2659  0498                     	;# 
  2660  0499                     	;# 
  2661  049A                     	;# 
  2662  049B                     	;# 
  2663  049C                     	;# 
  2664  049D                     	;# 
  2665  058C                     	;# 
  2666  058C                     	;# 
  2667  058D                     	;# 
  2668  058E                     	;# 
  2669  058F                     	;# 
  2670  058F                     	;# 
  2671  0590                     	;# 
  2672  0591                     	;# 
  2673  0592                     	;# 
  2674  0593                     	;# 
  2675  059C                     	;# 
  2676  059C                     	;# 
  2677  059D                     	;# 
  2678  059D                     	;# 
  2679  059E                     	;# 
  2680  059F                     	;# 
  2681  060C                     	;# 
  2682  060C                     	;# 
  2683  060D                     	;# 
  2684  060D                     	;# 
  2685  060E                     	;# 
  2686  060F                     	;# 
  2687  0610                     	;# 
  2688  0611                     	;# 
  2689  0612                     	;# 
  2690  0613                     	;# 
  2691  0614                     	;# 
  2692  0616                     	;# 
  2693  0616                     	;# 
  2694  0617                     	;# 
  2695  0617                     	;# 
  2696  0618                     	;# 
  2697  0619                     	;# 
  2698  061A                     	;# 
  2699  061B                     	;# 
  2700  061C                     	;# 
  2701  061D                     	;# 
  2702  061E                     	;# 
  2703  070C                     	;# 
  2704  070D                     	;# 
  2705  070E                     	;# 
  2706  070F                     	;# 
  2707  0710                     	;# 
  2708  0711                     	;# 
  2709  0712                     	;# 
  2710  0713                     	;# 
  2711  0714                     	;# 
  2712  0716                     	;# 
  2713  0717                     	;# 
  2714  0718                     	;# 
  2715  0719                     	;# 
  2716  071A                     	;# 
  2717  071B                     	;# 
  2718  071C                     	;# 
  2719  071D                     	;# 
  2720  071E                     	;# 
  2721  0796                     	;# 
  2722  0797                     	;# 
  2723  0798                     	;# 
  2724  0799                     	;# 
  2725  079A                     	;# 
  2726  079B                     	;# 
  2727  079C                     	;# 
  2728  079D                     	;# 
  2729  080C                     	;# 
  2730  080D                     	;# 
  2731  080E                     	;# 
  2732  080F                     	;# 
  2733  0810                     	;# 
  2734  0811                     	;# 
  2735  0812                     	;# 
  2736  0813                     	;# 
  2737  0814                     	;# 
  2738  081A                     	;# 
  2739  081A                     	;# 
  2740  081B                     	;# 
  2741  081C                     	;# 
  2742  081C                     	;# 
  2743  081D                     	;# 
  2744  081E                     	;# 
  2745  081F                     	;# 
  2746  088C                     	;# 
  2747  088D                     	;# 
  2748  088E                     	;# 
  2749  088F                     	;# 
  2750  0890                     	;# 
  2751  0891                     	;# 
  2752  0892                     	;# 
  2753  0893                     	;# 
  2754  0895                     	;# 
  2755  0896                     	;# 
  2756  0897                     	;# 
  2757  0898                     	;# 
  2758  0899                     	;# 
  2759  089A                     	;# 
  2760  089B                     	;# 
  2761  090C                     	;# 
  2762  090E                     	;# 
  2763  090F                     	;# 
  2764  091F                     	;# 
  2765  098F                     	;# 
  2766  098F                     	;# 
  2767  0990                     	;# 
  2768  0991                     	;# 
  2769  0992                     	;# 
  2770  0993                     	;# 
  2771  0994                     	;# 
  2772  0995                     	;# 
  2773  0996                     	;# 
  2774  0997                     	;# 
  2775  1E0F                     	;# 
  2776  1E10                     	;# 
  2777  1E11                     	;# 
  2778  1E12                     	;# 
  2779  1E13                     	;# 
  2780  1E14                     	;# 
  2781  1E15                     	;# 
  2782  1E16                     	;# 
  2783  1E17                     	;# 
  2784  1E18                     	;# 
  2785  1E19                     	;# 
  2786  1E1A                     	;# 
  2787  1E1B                     	;# 
  2788  1E1C                     	;# 
  2789  1E1D                     	;# 
  2790  1E1E                     	;# 
  2791  1E1F                     	;# 
  2792  1E20                     	;# 
  2793  1E21                     	;# 
  2794  1E22                     	;# 
  2795  1E23                     	;# 
  2796  1E24                     	;# 
  2797  1E25                     	;# 
  2798  1E26                     	;# 
  2799  1E27                     	;# 
  2800  1E28                     	;# 
  2801  1E29                     	;# 
  2802  1E2A                     	;# 
  2803  1E2B                     	;# 
  2804  1E2C                     	;# 
  2805  1E2D                     	;# 
  2806  1E2E                     	;# 
  2807  1E2F                     	;# 
  2808  1E30                     	;# 
  2809  1E31                     	;# 
  2810  1E32                     	;# 
  2811  1E33                     	;# 
  2812  1E34                     	;# 
  2813  1E35                     	;# 
  2814  1E36                     	;# 
  2815  1E37                     	;# 
  2816  1E8F                     	;# 
  2817  1E90                     	;# 
  2818  1E91                     	;# 
  2819  1E92                     	;# 
  2820  1E93                     	;# 
  2821  1E94                     	;# 
  2822  1E95                     	;# 
  2823  1E96                     	;# 
  2824  1E97                     	;# 
  2825  1E9C                     	;# 
  2826  1E9D                     	;# 
  2827  1E9E                     	;# 
  2828  1EA1                     	;# 
  2829  1EA2                     	;# 
  2830  1EA3                     	;# 
  2831  1EA4                     	;# 
  2832  1EA9                     	;# 
  2833  1EAA                     	;# 
  2834  1EB1                     	;# 
  2835  1EB2                     	;# 
  2836  1EB8                     	;# 
  2837  1EB9                     	;# 
  2838  1EBA                     	;# 
  2839  1EBB                     	;# 
  2840  1EBC                     	;# 
  2841  1EBD                     	;# 
  2842  1EBE                     	;# 
  2843  1EC3                     	;# 
  2844  1EC5                     	;# 
  2845  1EC6                     	;# 
  2846  1EC7                     	;# 
  2847  1EC8                     	;# 
  2848  1EC9                     	;# 
  2849  1ECA                     	;# 
  2850  1ECB                     	;# 
  2851  1ECB                     	;# 
  2852  1ECB                     	;# 
  2853  1ECC                     	;# 
  2854  1ECC                     	;# 
  2855  1ECC                     	;# 
  2856  1F10                     	;# 
  2857  1F11                     	;# 
  2858  1F12                     	;# 
  2859  1F14                     	;# 
  2860  1F15                     	;# 
  2861  1F1C                     	;# 
  2862  1F1D                     	;# 
  2863  1F1E                     	;# 
  2864  1F1F                     	;# 
  2865  1F20                     	;# 
  2866  1F21                     	;# 
  2867  1F22                     	;# 
  2868  1F23                     	;# 
  2869  1F24                     	;# 
  2870  1F25                     	;# 
  2871  1F26                     	;# 
  2872  1F27                     	;# 
  2873  1F38                     	;# 
  2874  1F39                     	;# 
  2875  1F3A                     	;# 
  2876  1F3B                     	;# 
  2877  1F3C                     	;# 
  2878  1F3D                     	;# 
  2879  1F3E                     	;# 
  2880  1F3F                     	;# 
  2881  1F43                     	;# 
  2882  1F44                     	;# 
  2883  1F45                     	;# 
  2884  1F46                     	;# 
  2885  1F47                     	;# 
  2886  1F48                     	;# 
  2887  1F49                     	;# 
  2888  1F4A                     	;# 
  2889  1F4E                     	;# 
  2890  1F4F                     	;# 
  2891  1F50                     	;# 
  2892  1F51                     	;# 
  2893  1F52                     	;# 
  2894  1F53                     	;# 
  2895  1F54                     	;# 
  2896  1F55                     	;# 
  2897  1FE4                     	;# 
  2898  1FE5                     	;# 
  2899  1FE6                     	;# 
  2900  1FE7                     	;# 
  2901  1FE8                     	;# 
  2902  1FE8                     	;# 
  2903  1FE9                     	;# 
  2904  1FEA                     	;# 
  2905  1FEB                     	;# 
  2906  1FED                     	;# 
  2907  1FEE                     	;# 
  2908  1FEF                     	;# 
  2909  0000                     	;# 
  2910  0001                     	;# 
  2911  0002                     	;# 
  2912  0003                     	;# 
  2913  0004                     	;# 
  2914  0005                     	;# 
  2915  0006                     	;# 
  2916  0007                     	;# 
  2917  0008                     	;# 
  2918  0009                     	;# 
  2919  000A                     	;# 
  2920  000B                     	;# 
  2921  000C                     	;# 
  2922  000D                     	;# 
  2923  000E                     	;# 
  2924  0012                     	;# 
  2925  0013                     	;# 
  2926  0014                     	;# 
  2927  0018                     	;# 
  2928  0019                     	;# 
  2929  001A                     	;# 
  2930  008C                     	;# 
  2931  008C                     	;# 
  2932  008D                     	;# 
  2933  008E                     	;# 
  2934  008E                     	;# 
  2935  008F                     	;# 
  2936  0090                     	;# 
  2937  0090                     	;# 
  2938  0091                     	;# 
  2939  0092                     	;# 
  2940  0092                     	;# 
  2941  0093                     	;# 
  2942  0094                     	;# 
  2943  0094                     	;# 
  2944  0095                     	;# 
  2945  0096                     	;# 
  2946  0096                     	;# 
  2947  0097                     	;# 
  2948  0098                     	;# 
  2949  0099                     	;# 
  2950  009A                     	;# 
  2951  009B                     	;# 
  2952  009B                     	;# 
  2953  009C                     	;# 
  2954  009D                     	;# 
  2955  009D                     	;# 
  2956  009E                     	;# 
  2957  009F                     	;# 
  2958  010C                     	;# 
  2959  010C                     	;# 
  2960  010D                     	;# 
  2961  010E                     	;# 
  2962  010F                     	;# 
  2963  010F                     	;# 
  2964  0110                     	;# 
  2965  0111                     	;# 
  2966  0112                     	;# 
  2967  0113                     	;# 
  2968  0114                     	;# 
  2969  0115                     	;# 
  2970  0116                     	;# 
  2971  0117                     	;# 
  2972  0118                     	;# 
  2973  0119                     	;# 
  2974  0119                     	;# 
  2975  0119                     	;# 
  2976  011A                     	;# 
  2977  011A                     	;# 
  2978  011A                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011B                     	;# 
  2982  011B                     	;# 
  2983  011B                     	;# 
  2984  011C                     	;# 
  2985  011C                     	;# 
  2986  011C                     	;# 
  2987  011D                     	;# 
  2988  011D                     	;# 
  2989  011D                     	;# 
  2990  011E                     	;# 
  2991  011E                     	;# 
  2992  011E                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  011F                     	;# 
  2996  011F                     	;# 
  2997  011F                     	;# 
  2998  018C                     	;# 
  2999  018D                     	;# 
  3000  018E                     	;# 
  3001  018F                     	;# 
  3002  0190                     	;# 
  3003  0191                     	;# 
  3004  0192                     	;# 
  3005  0196                     	;# 
  3006  0197                     	;# 
  3007  0198                     	;# 
  3008  0199                     	;# 
  3009  019A                     	;# 
  3010  019B                     	;# 
  3011  019C                     	;# 
  3012  020C                     	;# 
  3013  020D                     	;# 
  3014  020E                     	;# 
  3015  020E                     	;# 
  3016  020F                     	;# 
  3017  020F                     	;# 
  3018  0210                     	;# 
  3019  0210                     	;# 
  3020  0211                     	;# 
  3021  0211                     	;# 
  3022  0212                     	;# 
  3023  0213                     	;# 
  3024  0214                     	;# 
  3025  0214                     	;# 
  3026  0215                     	;# 
  3027  0215                     	;# 
  3028  0216                     	;# 
  3029  0216                     	;# 
  3030  0217                     	;# 
  3031  0217                     	;# 
  3032  0218                     	;# 
  3033  0219                     	;# 
  3034  021A                     	;# 
  3035  021A                     	;# 
  3036  021B                     	;# 
  3037  021B                     	;# 
  3038  021C                     	;# 
  3039  021C                     	;# 
  3040  021D                     	;# 
  3041  021D                     	;# 
  3042  021E                     	;# 
  3043  021F                     	;# 
  3044  028C                     	;# 
  3045  028C                     	;# 
  3046  028D                     	;# 
  3047  028D                     	;# 
  3048  028E                     	;# 
  3049  028F                     	;# 
  3050  0290                     	;# 
  3051  0291                     	;# 
  3052  0292                     	;# 
  3053  0292                     	;# 
  3054  0293                     	;# 
  3055  0293                     	;# 
  3056  0294                     	;# 
  3057  0295                     	;# 
  3058  0296                     	;# 
  3059  0297                     	;# 
  3060  0298                     	;# 
  3061  0298                     	;# 
  3062  0299                     	;# 
  3063  0299                     	;# 
  3064  029A                     	;# 
  3065  029B                     	;# 
  3066  029C                     	;# 
  3067  029D                     	;# 
  3068  029F                     	;# 
  3069  030C                     	;# 
  3070  030C                     	;# 
  3071  030D                     	;# 
  3072  030E                     	;# 
  3073  030F                     	;# 
  3074  0310                     	;# 
  3075  0310                     	;# 
  3076  0311                     	;# 
  3077  0312                     	;# 
  3078  0313                     	;# 
  3079  0314                     	;# 
  3080  0314                     	;# 
  3081  0315                     	;# 
  3082  0316                     	;# 
  3083  0317                     	;# 
  3084  0318                     	;# 
  3085  0318                     	;# 
  3086  0319                     	;# 
  3087  031A                     	;# 
  3088  031B                     	;# 
  3089  038C                     	;# 
  3090  038C                     	;# 
  3091  038D                     	;# 
  3092  038E                     	;# 
  3093  0390                     	;# 
  3094  0390                     	;# 
  3095  0391                     	;# 
  3096  0392                     	;# 
  3097  048C                     	;# 
  3098  048C                     	;# 
  3099  048D                     	;# 
  3100  048E                     	;# 
  3101  048F                     	;# 
  3102  048F                     	;# 
  3103  0490                     	;# 
  3104  0491                     	;# 
  3105  0492                     	;# 
  3106  0492                     	;# 
  3107  0493                     	;# 
  3108  0494                     	;# 
  3109  0495                     	;# 
  3110  0495                     	;# 
  3111  0496                     	;# 
  3112  0497                     	;# 
  3113  0498                     	;# 
  3114  0499                     	;# 
  3115  049A                     	;# 
  3116  049B                     	;# 
  3117  049C                     	;# 
  3118  049D                     	;# 
  3119  058C                     	;# 
  3120  058C                     	;# 
  3121  058D                     	;# 
  3122  058E                     	;# 
  3123  058F                     	;# 
  3124  058F                     	;# 
  3125  0590                     	;# 
  3126  0591                     	;# 
  3127  0592                     	;# 
  3128  0593                     	;# 
  3129  059C                     	;# 
  3130  059C                     	;# 
  3131  059D                     	;# 
  3132  059D                     	;# 
  3133  059E                     	;# 
  3134  059F                     	;# 
  3135  060C                     	;# 
  3136  060C                     	;# 
  3137  060D                     	;# 
  3138  060D                     	;# 
  3139  060E                     	;# 
  3140  060F                     	;# 
  3141  0610                     	;# 
  3142  0611                     	;# 
  3143  0612                     	;# 
  3144  0613                     	;# 
  3145  0614                     	;# 
  3146  0616                     	;# 
  3147  0616                     	;# 
  3148  0617                     	;# 
  3149  0617                     	;# 
  3150  0618                     	;# 
  3151  0619                     	;# 
  3152  061A                     	;# 
  3153  061B                     	;# 
  3154  061C                     	;# 
  3155  061D                     	;# 
  3156  061E                     	;# 
  3157  070C                     	;# 
  3158  070D                     	;# 
  3159  070E                     	;# 
  3160  070F                     	;# 
  3161  0710                     	;# 
  3162  0711                     	;# 
  3163  0712                     	;# 
  3164  0713                     	;# 
  3165  0714                     	;# 
  3166  0716                     	;# 
  3167  0717                     	;# 
  3168  0718                     	;# 
  3169  0719                     	;# 
  3170  071A                     	;# 
  3171  071B                     	;# 
  3172  071C                     	;# 
  3173  071D                     	;# 
  3174  071E                     	;# 
  3175  0796                     	;# 
  3176  0797                     	;# 
  3177  0798                     	;# 
  3178  0799                     	;# 
  3179  079A                     	;# 
  3180  079B                     	;# 
  3181  079C                     	;# 
  3182  079D                     	;# 
  3183  080C                     	;# 
  3184  080D                     	;# 
  3185  080E                     	;# 
  3186  080F                     	;# 
  3187  0810                     	;# 
  3188  0811                     	;# 
  3189  0812                     	;# 
  3190  0813                     	;# 
  3191  0814                     	;# 
  3192  081A                     	;# 
  3193  081A                     	;# 
  3194  081B                     	;# 
  3195  081C                     	;# 
  3196  081C                     	;# 
  3197  081D                     	;# 
  3198  081E                     	;# 
  3199  081F                     	;# 
  3200  088C                     	;# 
  3201  088D                     	;# 
  3202  088E                     	;# 
  3203  088F                     	;# 
  3204  0890                     	;# 
  3205  0891                     	;# 
  3206  0892                     	;# 
  3207  0893                     	;# 
  3208  0895                     	;# 
  3209  0896                     	;# 
  3210  0897                     	;# 
  3211  0898                     	;# 
  3212  0899                     	;# 
  3213  089A                     	;# 
  3214  089B                     	;# 
  3215  090C                     	;# 
  3216  090E                     	;# 
  3217  090F                     	;# 
  3218  091F                     	;# 
  3219  098F                     	;# 
  3220  098F                     	;# 
  3221  0990                     	;# 
  3222  0991                     	;# 
  3223  0992                     	;# 
  3224  0993                     	;# 
  3225  0994                     	;# 
  3226  0995                     	;# 
  3227  0996                     	;# 
  3228  0997                     	;# 
  3229  1E0F                     	;# 
  3230  1E10                     	;# 
  3231  1E11                     	;# 
  3232  1E12                     	;# 
  3233  1E13                     	;# 
  3234  1E14                     	;# 
  3235  1E15                     	;# 
  3236  1E16                     	;# 
  3237  1E17                     	;# 
  3238  1E18                     	;# 
  3239  1E19                     	;# 
  3240  1E1A                     	;# 
  3241  1E1B                     	;# 
  3242  1E1C                     	;# 
  3243  1E1D                     	;# 
  3244  1E1E                     	;# 
  3245  1E1F                     	;# 
  3246  1E20                     	;# 
  3247  1E21                     	;# 
  3248  1E22                     	;# 
  3249  1E23                     	;# 
  3250  1E24                     	;# 
  3251  1E25                     	;# 
  3252  1E26                     	;# 
  3253  1E27                     	;# 
  3254  1E28                     	;# 
  3255  1E29                     	;# 
  3256  1E2A                     	;# 
  3257  1E2B                     	;# 
  3258  1E2C                     	;# 
  3259  1E2D                     	;# 
  3260  1E2E                     	;# 
  3261  1E2F                     	;# 
  3262  1E30                     	;# 
  3263  1E31                     	;# 
  3264  1E32                     	;# 
  3265  1E33                     	;# 
  3266  1E34                     	;# 
  3267  1E35                     	;# 
  3268  1E36                     	;# 
  3269  1E37                     	;# 
  3270  1E8F                     	;# 
  3271  1E90                     	;# 
  3272  1E91                     	;# 
  3273  1E92                     	;# 
  3274  1E93                     	;# 
  3275  1E94                     	;# 
  3276  1E95                     	;# 
  3277  1E96                     	;# 
  3278  1E97                     	;# 
  3279  1E9C                     	;# 
  3280  1E9D                     	;# 
  3281  1E9E                     	;# 
  3282  1EA1                     	;# 
  3283  1EA2                     	;# 
  3284  1EA3                     	;# 
  3285  1EA4                     	;# 
  3286  1EA9                     	;# 
  3287  1EAA                     	;# 
  3288  1EB1                     	;# 
  3289  1EB2                     	;# 
  3290  1EB8                     	;# 
  3291  1EB9                     	;# 
  3292  1EBA                     	;# 
  3293  1EBB                     	;# 
  3294  1EBC                     	;# 
  3295  1EBD                     	;# 
  3296  1EBE                     	;# 
  3297  1EC3                     	;# 
  3298  1EC5                     	;# 
  3299  1EC6                     	;# 
  3300  1EC7                     	;# 
  3301  1EC8                     	;# 
  3302  1EC9                     	;# 
  3303  1ECA                     	;# 
  3304  1ECB                     	;# 
  3305  1ECB                     	;# 
  3306  1ECB                     	;# 
  3307  1ECC                     	;# 
  3308  1ECC                     	;# 
  3309  1ECC                     	;# 
  3310  1F10                     	;# 
  3311  1F11                     	;# 
  3312  1F12                     	;# 
  3313  1F14                     	;# 
  3314  1F15                     	;# 
  3315  1F1C                     	;# 
  3316  1F1D                     	;# 
  3317  1F1E                     	;# 
  3318  1F1F                     	;# 
  3319  1F20                     	;# 
  3320  1F21                     	;# 
  3321  1F22                     	;# 
  3322  1F23                     	;# 
  3323  1F24                     	;# 
  3324  1F25                     	;# 
  3325  1F26                     	;# 
  3326  1F27                     	;# 
  3327  1F38                     	;# 
  3328  1F39                     	;# 
  3329  1F3A                     	;# 
  3330  1F3B                     	;# 
  3331  1F3C                     	;# 
  3332  1F3D                     	;# 
  3333  1F3E                     	;# 
  3334  1F3F                     	;# 
  3335  1F43                     	;# 
  3336  1F44                     	;# 
  3337  1F45                     	;# 
  3338  1F46                     	;# 
  3339  1F47                     	;# 
  3340  1F48                     	;# 
  3341  1F49                     	;# 
  3342  1F4A                     	;# 
  3343  1F4E                     	;# 
  3344  1F4F                     	;# 
  3345  1F50                     	;# 
  3346  1F51                     	;# 
  3347  1F52                     	;# 
  3348  1F53                     	;# 
  3349  1F54                     	;# 
  3350  1F55                     	;# 
  3351  1FE4                     	;# 
  3352  1FE5                     	;# 
  3353  1FE6                     	;# 
  3354  1FE7                     	;# 
  3355  1FE8                     	;# 
  3356  1FE8                     	;# 
  3357  1FE9                     	;# 
  3358  1FEA                     	;# 
  3359  1FEB                     	;# 
  3360  1FED                     	;# 
  3361  1FEE                     	;# 
  3362  1FEF                     	;# 
  3363  0000                     	;# 
  3364  0001                     	;# 
  3365  0002                     	;# 
  3366  0003                     	;# 
  3367  0004                     	;# 
  3368  0005                     	;# 
  3369  0006                     	;# 
  3370  0007                     	;# 
  3371  0008                     	;# 
  3372  0009                     	;# 
  3373  000A                     	;# 
  3374  000B                     	;# 
  3375  000C                     	;# 
  3376  000D                     	;# 
  3377  000E                     	;# 
  3378  0012                     	;# 
  3379  0013                     	;# 
  3380  0014                     	;# 
  3381  0018                     	;# 
  3382  0019                     	;# 
  3383  001A                     	;# 
  3384  008C                     	;# 
  3385  008C                     	;# 
  3386  008D                     	;# 
  3387  008E                     	;# 
  3388  008E                     	;# 
  3389  008F                     	;# 
  3390  0090                     	;# 
  3391  0090                     	;# 
  3392  0091                     	;# 
  3393  0092                     	;# 
  3394  0092                     	;# 
  3395  0093                     	;# 
  3396  0094                     	;# 
  3397  0094                     	;# 
  3398  0095                     	;# 
  3399  0096                     	;# 
  3400  0096                     	;# 
  3401  0097                     	;# 
  3402  0098                     	;# 
  3403  0099                     	;# 
  3404  009A                     	;# 
  3405  009B                     	;# 
  3406  009B                     	;# 
  3407  009C                     	;# 
  3408  009D                     	;# 
  3409  009D                     	;# 
  3410  009E                     	;# 
  3411  009F                     	;# 
  3412  010C                     	;# 
  3413  010C                     	;# 
  3414  010D                     	;# 
  3415  010E                     	;# 
  3416  010F                     	;# 
  3417  010F                     	;# 
  3418  0110                     	;# 
  3419  0111                     	;# 
  3420  0112                     	;# 
  3421  0113                     	;# 
  3422  0114                     	;# 
  3423  0115                     	;# 
  3424  0116                     	;# 
  3425  0117                     	;# 
  3426  0118                     	;# 
  3427  0119                     	;# 
  3428  0119                     	;# 
  3429  0119                     	;# 
  3430  011A                     	;# 
  3431  011A                     	;# 
  3432  011A                     	;# 
  3433  011B                     	;# 
  3434  011B                     	;# 
  3435  011B                     	;# 
  3436  011B                     	;# 
  3437  011B                     	;# 
  3438  011C                     	;# 
  3439  011C                     	;# 
  3440  011C                     	;# 
  3441  011D                     	;# 
  3442  011D                     	;# 
  3443  011D                     	;# 
  3444  011E                     	;# 
  3445  011E                     	;# 
  3446  011E                     	;# 
  3447  011F                     	;# 
  3448  011F                     	;# 
  3449  011F                     	;# 
  3450  011F                     	;# 
  3451  011F                     	;# 
  3452  018C                     	;# 
  3453  018D                     	;# 
  3454  018E                     	;# 
  3455  018F                     	;# 
  3456  0190                     	;# 
  3457  0191                     	;# 
  3458  0192                     	;# 
  3459  0196                     	;# 
  3460  0197                     	;# 
  3461  0198                     	;# 
  3462  0199                     	;# 
  3463  019A                     	;# 
  3464  019B                     	;# 
  3465  019C                     	;# 
  3466  020C                     	;# 
  3467  020D                     	;# 
  3468  020E                     	;# 
  3469  020E                     	;# 
  3470  020F                     	;# 
  3471  020F                     	;# 
  3472  0210                     	;# 
  3473  0210                     	;# 
  3474  0211                     	;# 
  3475  0211                     	;# 
  3476  0212                     	;# 
  3477  0213                     	;# 
  3478  0214                     	;# 
  3479  0214                     	;# 
  3480  0215                     	;# 
  3481  0215                     	;# 
  3482  0216                     	;# 
  3483  0216                     	;# 
  3484  0217                     	;# 
  3485  0217                     	;# 
  3486  0218                     	;# 
  3487  0219                     	;# 
  3488  021A                     	;# 
  3489  021A                     	;# 
  3490  021B                     	;# 
  3491  021B                     	;# 
  3492  021C                     	;# 
  3493  021C                     	;# 
  3494  021D                     	;# 
  3495  021D                     	;# 
  3496  021E                     	;# 
  3497  021F                     	;# 
  3498  028C                     	;# 
  3499  028C                     	;# 
  3500  028D                     	;# 
  3501  028D                     	;# 
  3502  028E                     	;# 
  3503  028F                     	;# 
  3504  0290                     	;# 
  3505  0291                     	;# 
  3506  0292                     	;# 
  3507  0292                     	;# 
  3508  0293                     	;# 
  3509  0293                     	;# 
  3510  0294                     	;# 
  3511  0295                     	;# 
  3512  0296                     	;# 
  3513  0297                     	;# 
  3514  0298                     	;# 
  3515  0298                     	;# 
  3516  0299                     	;# 
  3517  0299                     	;# 
  3518  029A                     	;# 
  3519  029B                     	;# 
  3520  029C                     	;# 
  3521  029D                     	;# 
  3522  029F                     	;# 
  3523  030C                     	;# 
  3524  030C                     	;# 
  3525  030D                     	;# 
  3526  030E                     	;# 
  3527  030F                     	;# 
  3528  0310                     	;# 
  3529  0310                     	;# 
  3530  0311                     	;# 
  3531  0312                     	;# 
  3532  0313                     	;# 
  3533  0314                     	;# 
  3534  0314                     	;# 
  3535  0315                     	;# 
  3536  0316                     	;# 
  3537  0317                     	;# 
  3538  0318                     	;# 
  3539  0318                     	;# 
  3540  0319                     	;# 
  3541  031A                     	;# 
  3542  031B                     	;# 
  3543  038C                     	;# 
  3544  038C                     	;# 
  3545  038D                     	;# 
  3546  038E                     	;# 
  3547  0390                     	;# 
  3548  0390                     	;# 
  3549  0391                     	;# 
  3550  0392                     	;# 
  3551  048C                     	;# 
  3552  048C                     	;# 
  3553  048D                     	;# 
  3554  048E                     	;# 
  3555  048F                     	;# 
  3556  048F                     	;# 
  3557  0490                     	;# 
  3558  0491                     	;# 
  3559  0492                     	;# 
  3560  0492                     	;# 
  3561  0493                     	;# 
  3562  0494                     	;# 
  3563  0495                     	;# 
  3564  0495                     	;# 
  3565  0496                     	;# 
  3566  0497                     	;# 
  3567  0498                     	;# 
  3568  0499                     	;# 
  3569  049A                     	;# 
  3570  049B                     	;# 
  3571  049C                     	;# 
  3572  049D                     	;# 
  3573  058C                     	;# 
  3574  058C                     	;# 
  3575  058D                     	;# 
  3576  058E                     	;# 
  3577  058F                     	;# 
  3578  058F                     	;# 
  3579  0590                     	;# 
  3580  0591                     	;# 
  3581  0592                     	;# 
  3582  0593                     	;# 
  3583  059C                     	;# 
  3584  059C                     	;# 
  3585  059D                     	;# 
  3586  059D                     	;# 
  3587  059E                     	;# 
  3588  059F                     	;# 
  3589  060C                     	;# 
  3590  060C                     	;# 
  3591  060D                     	;# 
  3592  060D                     	;# 
  3593  060E                     	;# 
  3594  060F                     	;# 
  3595  0610                     	;# 
  3596  0611                     	;# 
  3597  0612                     	;# 
  3598  0613                     	;# 
  3599  0614                     	;# 
  3600  0616                     	;# 
  3601  0616                     	;# 
  3602  0617                     	;# 
  3603  0617                     	;# 
  3604  0618                     	;# 
  3605  0619                     	;# 
  3606  061A                     	;# 
  3607  061B                     	;# 
  3608  061C                     	;# 
  3609  061D                     	;# 
  3610  061E                     	;# 
  3611  070C                     	;# 
  3612  070D                     	;# 
  3613  070E                     	;# 
  3614  070F                     	;# 
  3615  0710                     	;# 
  3616  0711                     	;# 
  3617  0712                     	;# 
  3618  0713                     	;# 
  3619  0714                     	;# 
  3620  0716                     	;# 
  3621  0717                     	;# 
  3622  0718                     	;# 
  3623  0719                     	;# 
  3624  071A                     	;# 
  3625  071B                     	;# 
  3626  071C                     	;# 
  3627  071D                     	;# 
  3628  071E                     	;# 
  3629  0796                     	;# 
  3630  0797                     	;# 
  3631  0798                     	;# 
  3632  0799                     	;# 
  3633  079A                     	;# 
  3634  079B                     	;# 
  3635  079C                     	;# 
  3636  079D                     	;# 
  3637  080C                     	;# 
  3638  080D                     	;# 
  3639  080E                     	;# 
  3640  080F                     	;# 
  3641  0810                     	;# 
  3642  0811                     	;# 
  3643  0812                     	;# 
  3644  0813                     	;# 
  3645  0814                     	;# 
  3646  081A                     	;# 
  3647  081A                     	;# 
  3648  081B                     	;# 
  3649  081C                     	;# 
  3650  081C                     	;# 
  3651  081D                     	;# 
  3652  081E                     	;# 
  3653  081F                     	;# 
  3654  088C                     	;# 
  3655  088D                     	;# 
  3656  088E                     	;# 
  3657  088F                     	;# 
  3658  0890                     	;# 
  3659  0891                     	;# 
  3660  0892                     	;# 
  3661  0893                     	;# 
  3662  0895                     	;# 
  3663  0896                     	;# 
  3664  0897                     	;# 
  3665  0898                     	;# 
  3666  0899                     	;# 
  3667  089A                     	;# 
  3668  089B                     	;# 
  3669  090C                     	;# 
  3670  090E                     	;# 
  3671  090F                     	;# 
  3672  091F                     	;# 
  3673  098F                     	;# 
  3674  098F                     	;# 
  3675  0990                     	;# 
  3676  0991                     	;# 
  3677  0992                     	;# 
  3678  0993                     	;# 
  3679  0994                     	;# 
  3680  0995                     	;# 
  3681  0996                     	;# 
  3682  0997                     	;# 
  3683  1E0F                     	;# 
  3684  1E10                     	;# 
  3685  1E11                     	;# 
  3686  1E12                     	;# 
  3687  1E13                     	;# 
  3688  1E14                     	;# 
  3689  1E15                     	;# 
  3690  1E16                     	;# 
  3691  1E17                     	;# 
  3692  1E18                     	;# 
  3693  1E19                     	;# 
  3694  1E1A                     	;# 
  3695  1E1B                     	;# 
  3696  1E1C                     	;# 
  3697  1E1D                     	;# 
  3698  1E1E                     	;# 
  3699  1E1F                     	;# 
  3700  1E20                     	;# 
  3701  1E21                     	;# 
  3702  1E22                     	;# 
  3703  1E23                     	;# 
  3704  1E24                     	;# 
  3705  1E25                     	;# 
  3706  1E26                     	;# 
  3707  1E27                     	;# 
  3708  1E28                     	;# 
  3709  1E29                     	;# 
  3710  1E2A                     	;# 
  3711  1E2B                     	;# 
  3712  1E2C                     	;# 
  3713  1E2D                     	;# 
  3714  1E2E                     	;# 
  3715  1E2F                     	;# 
  3716  1E30                     	;# 
  3717  1E31                     	;# 
  3718  1E32                     	;# 
  3719  1E33                     	;# 
  3720  1E34                     	;# 
  3721  1E35                     	;# 
  3722  1E36                     	;# 
  3723  1E37                     	;# 
  3724  1E8F                     	;# 
  3725  1E90                     	;# 
  3726  1E91                     	;# 
  3727  1E92                     	;# 
  3728  1E93                     	;# 
  3729  1E94                     	;# 
  3730  1E95                     	;# 
  3731  1E96                     	;# 
  3732  1E97                     	;# 
  3733  1E9C                     	;# 
  3734  1E9D                     	;# 
  3735  1E9E                     	;# 
  3736  1EA1                     	;# 
  3737  1EA2                     	;# 
  3738  1EA3                     	;# 
  3739  1EA4                     	;# 
  3740  1EA9                     	;# 
  3741  1EAA                     	;# 
  3742  1EB1                     	;# 
  3743  1EB2                     	;# 
  3744  1EB8                     	;# 
  3745  1EB9                     	;# 
  3746  1EBA                     	;# 
  3747  1EBB                     	;# 
  3748  1EBC                     	;# 
  3749  1EBD                     	;# 
  3750  1EBE                     	;# 
  3751  1EC3                     	;# 
  3752  1EC5                     	;# 
  3753  1EC6                     	;# 
  3754  1EC7                     	;# 
  3755  1EC8                     	;# 
  3756  1EC9                     	;# 
  3757  1ECA                     	;# 
  3758  1ECB                     	;# 
  3759  1ECB                     	;# 
  3760  1ECB                     	;# 
  3761  1ECC                     	;# 
  3762  1ECC                     	;# 
  3763  1ECC                     	;# 
  3764  1F10                     	;# 
  3765  1F11                     	;# 
  3766  1F12                     	;# 
  3767  1F14                     	;# 
  3768  1F15                     	;# 
  3769  1F1C                     	;# 
  3770  1F1D                     	;# 
  3771  1F1E                     	;# 
  3772  1F1F                     	;# 
  3773  1F20                     	;# 
  3774  1F21                     	;# 
  3775  1F22                     	;# 
  3776  1F23                     	;# 
  3777  1F24                     	;# 
  3778  1F25                     	;# 
  3779  1F26                     	;# 
  3780  1F27                     	;# 
  3781  1F38                     	;# 
  3782  1F39                     	;# 
  3783  1F3A                     	;# 
  3784  1F3B                     	;# 
  3785  1F3C                     	;# 
  3786  1F3D                     	;# 
  3787  1F3E                     	;# 
  3788  1F3F                     	;# 
  3789  1F43                     	;# 
  3790  1F44                     	;# 
  3791  1F45                     	;# 
  3792  1F46                     	;# 
  3793  1F47                     	;# 
  3794  1F48                     	;# 
  3795  1F49                     	;# 
  3796  1F4A                     	;# 
  3797  1F4E                     	;# 
  3798  1F4F                     	;# 
  3799  1F50                     	;# 
  3800  1F51                     	;# 
  3801  1F52                     	;# 
  3802  1F53                     	;# 
  3803  1F54                     	;# 
  3804  1F55                     	;# 
  3805  1FE4                     	;# 
  3806  1FE5                     	;# 
  3807  1FE6                     	;# 
  3808  1FE7                     	;# 
  3809  1FE8                     	;# 
  3810  1FE8                     	;# 
  3811  1FE9                     	;# 
  3812  1FEA                     	;# 
  3813  1FEB                     	;# 
  3814  1FED                     	;# 
  3815  1FEE                     	;# 
  3816  1FEF                     	;# 
  3817  0000                     	;# 
  3818  0001                     	;# 
  3819  0002                     	;# 
  3820  0003                     	;# 
  3821  0004                     	;# 
  3822  0005                     	;# 
  3823  0006                     	;# 
  3824  0007                     	;# 
  3825  0008                     	;# 
  3826  0009                     	;# 
  3827  000A                     	;# 
  3828  000B                     	;# 
  3829  000C                     	;# 
  3830  000D                     	;# 
  3831  000E                     	;# 
  3832  0012                     	;# 
  3833  0013                     	;# 
  3834  0014                     	;# 
  3835  0018                     	;# 
  3836  0019                     	;# 
  3837  001A                     	;# 
  3838  008C                     	;# 
  3839  008C                     	;# 
  3840  008D                     	;# 
  3841  008E                     	;# 
  3842  008E                     	;# 
  3843  008F                     	;# 
  3844  0090                     	;# 
  3845  0090                     	;# 
  3846  0091                     	;# 
  3847  0092                     	;# 
  3848  0092                     	;# 
  3849  0093                     	;# 
  3850  0094                     	;# 
  3851  0094                     	;# 
  3852  0095                     	;# 
  3853  0096                     	;# 
  3854  0096                     	;# 
  3855  0097                     	;# 
  3856  0098                     	;# 
  3857  0099                     	;# 
  3858  009A                     	;# 
  3859  009B                     	;# 
  3860  009B                     	;# 
  3861  009C                     	;# 
  3862  009D                     	;# 
  3863  009D                     	;# 
  3864  009E                     	;# 
  3865  009F                     	;# 
  3866  010C                     	;# 
  3867  010C                     	;# 
  3868  010D                     	;# 
  3869  010E                     	;# 
  3870  010F                     	;# 
  3871  010F                     	;# 
  3872  0110                     	;# 
  3873  0111                     	;# 
  3874  0112                     	;# 
  3875  0113                     	;# 
  3876  0114                     	;# 
  3877  0115                     	;# 
  3878  0116                     	;# 
  3879  0117                     	;# 
  3880  0118                     	;# 
  3881  0119                     	;# 
  3882  0119                     	;# 
  3883  0119                     	;# 
  3884  011A                     	;# 
  3885  011A                     	;# 
  3886  011A                     	;# 
  3887  011B                     	;# 
  3888  011B                     	;# 
  3889  011B                     	;# 
  3890  011B                     	;# 
  3891  011B                     	;# 
  3892  011C                     	;# 
  3893  011C                     	;# 
  3894  011C                     	;# 
  3895  011D                     	;# 
  3896  011D                     	;# 
  3897  011D                     	;# 
  3898  011E                     	;# 
  3899  011E                     	;# 
  3900  011E                     	;# 
  3901  011F                     	;# 
  3902  011F                     	;# 
  3903  011F                     	;# 
  3904  011F                     	;# 
  3905  011F                     	;# 
  3906  018C                     	;# 
  3907  018D                     	;# 
  3908  018E                     	;# 
  3909  018F                     	;# 
  3910  0190                     	;# 
  3911  0191                     	;# 
  3912  0192                     	;# 
  3913  0196                     	;# 
  3914  0197                     	;# 
  3915  0198                     	;# 
  3916  0199                     	;# 
  3917  019A                     	;# 
  3918  019B                     	;# 
  3919  019C                     	;# 
  3920  020C                     	;# 
  3921  020D                     	;# 
  3922  020E                     	;# 
  3923  020E                     	;# 
  3924  020F                     	;# 
  3925  020F                     	;# 
  3926  0210                     	;# 
  3927  0210                     	;# 
  3928  0211                     	;# 
  3929  0211                     	;# 
  3930  0212                     	;# 
  3931  0213                     	;# 
  3932  0214                     	;# 
  3933  0214                     	;# 
  3934  0215                     	;# 
  3935  0215                     	;# 
  3936  0216                     	;# 
  3937  0216                     	;# 
  3938  0217                     	;# 
  3939  0217                     	;# 
  3940  0218                     	;# 
  3941  0219                     	;# 
  3942  021A                     	;# 
  3943  021A                     	;# 
  3944  021B                     	;# 
  3945  021B                     	;# 
  3946  021C                     	;# 
  3947  021C                     	;# 
  3948  021D                     	;# 
  3949  021D                     	;# 
  3950  021E                     	;# 
  3951  021F                     	;# 
  3952  028C                     	;# 
  3953  028C                     	;# 
  3954  028D                     	;# 
  3955  028D                     	;# 
  3956  028E                     	;# 
  3957  028F                     	;# 
  3958  0290                     	;# 
  3959  0291                     	;# 
  3960  0292                     	;# 
  3961  0292                     	;# 
  3962  0293                     	;# 
  3963  0293                     	;# 
  3964  0294                     	;# 
  3965  0295                     	;# 
  3966  0296                     	;# 
  3967  0297                     	;# 
  3968  0298                     	;# 
  3969  0298                     	;# 
  3970  0299                     	;# 
  3971  0299                     	;# 
  3972  029A                     	;# 
  3973  029B                     	;# 
  3974  029C                     	;# 
  3975  029D                     	;# 
  3976  029F                     	;# 
  3977  030C                     	;# 
  3978  030C                     	;# 
  3979  030D                     	;# 
  3980  030E                     	;# 
  3981  030F                     	;# 
  3982  0310                     	;# 
  3983  0310                     	;# 
  3984  0311                     	;# 
  3985  0312                     	;# 
  3986  0313                     	;# 
  3987  0314                     	;# 
  3988  0314                     	;# 
  3989  0315                     	;# 
  3990  0316                     	;# 
  3991  0317                     	;# 
  3992  0318                     	;# 
  3993  0318                     	;# 
  3994  0319                     	;# 
  3995  031A                     	;# 
  3996  031B                     	;# 
  3997  038C                     	;# 
  3998  038C                     	;# 
  3999  038D                     	;# 
  4000  038E                     	;# 
  4001  0390                     	;# 
  4002  0390                     	;# 
  4003  0391                     	;# 
  4004  0392                     	;# 
  4005  048C                     	;# 
  4006  048C                     	;# 
  4007  048D                     	;# 
  4008  048E                     	;# 
  4009  048F                     	;# 
  4010  048F                     	;# 
  4011  0490                     	;# 
  4012  0491                     	;# 
  4013  0492                     	;# 
  4014  0492                     	;# 
  4015  0493                     	;# 
  4016  0494                     	;# 
  4017  0495                     	;# 
  4018  0495                     	;# 
  4019  0496                     	;# 
  4020  0497                     	;# 
  4021  0498                     	;# 
  4022  0499                     	;# 
  4023  049A                     	;# 
  4024  049B                     	;# 
  4025  049C                     	;# 
  4026  049D                     	;# 
  4027  058C                     	;# 
  4028  058C                     	;# 
  4029  058D                     	;# 
  4030  058E                     	;# 
  4031  058F                     	;# 
  4032  058F                     	;# 
  4033  0590                     	;# 
  4034  0591                     	;# 
  4035  0592                     	;# 
  4036  0593                     	;# 
  4037  059C                     	;# 
  4038  059C                     	;# 
  4039  059D                     	;# 
  4040  059D                     	;# 
  4041  059E                     	;# 
  4042  059F                     	;# 
  4043  060C                     	;# 
  4044  060C                     	;# 
  4045  060D                     	;# 
  4046  060D                     	;# 
  4047  060E                     	;# 
  4048  060F                     	;# 
  4049  0610                     	;# 
  4050  0611                     	;# 
  4051  0612                     	;# 
  4052  0613                     	;# 
  4053  0614                     	;# 
  4054  0616                     	;# 
  4055  0616                     	;# 
  4056  0617                     	;# 
  4057  0617                     	;# 
  4058  0618                     	;# 
  4059  0619                     	;# 
  4060  061A                     	;# 
  4061  061B                     	;# 
  4062  061C                     	;# 
  4063  061D                     	;# 
  4064  061E                     	;# 
  4065  070C                     	;# 
  4066  070D                     	;# 
  4067  070E                     	;# 
  4068  070F                     	;# 
  4069  0710                     	;# 
  4070  0711                     	;# 
  4071  0712                     	;# 
  4072  0713                     	;# 
  4073  0714                     	;# 
  4074  0716                     	;# 
  4075  0717                     	;# 
  4076  0718                     	;# 
  4077  0719                     	;# 
  4078  071A                     	;# 
  4079  071B                     	;# 
  4080  071C                     	;# 
  4081  071D                     	;# 
  4082  071E                     	;# 
  4083  0796                     	;# 
  4084  0797                     	;# 
  4085  0798                     	;# 
  4086  0799                     	;# 
  4087  079A                     	;# 
  4088  079B                     	;# 
  4089  079C                     	;# 
  4090  079D                     	;# 
  4091  080C                     	;# 
  4092  080D                     	;# 
  4093  080E                     	;# 
  4094  080F                     	;# 
  4095  0810                     	;# 
  4096  0811                     	;# 
  4097  0812                     	;# 
  4098  0813                     	;# 
  4099  0814                     	;# 
  4100  081A                     	;# 
  4101  081A                     	;# 
  4102  081B                     	;# 
  4103  081C                     	;# 
  4104  081C                     	;# 
  4105  081D                     	;# 
  4106  081E                     	;# 
  4107  081F                     	;# 
  4108  088C                     	;# 
  4109  088D                     	;# 
  4110  088E                     	;# 
  4111  088F                     	;# 
  4112  0890                     	;# 
  4113  0891                     	;# 
  4114  0892                     	;# 
  4115  0893                     	;# 
  4116  0895                     	;# 
  4117  0896                     	;# 
  4118  0897                     	;# 
  4119  0898                     	;# 
  4120  0899                     	;# 
  4121  089A                     	;# 
  4122  089B                     	;# 
  4123  090C                     	;# 
  4124  090E                     	;# 
  4125  090F                     	;# 
  4126  091F                     	;# 
  4127  098F                     	;# 
  4128  098F                     	;# 
  4129  0990                     	;# 
  4130  0991                     	;# 
  4131  0992                     	;# 
  4132  0993                     	;# 
  4133  0994                     	;# 
  4134  0995                     	;# 
  4135  0996                     	;# 
  4136  0997                     	;# 
  4137  1E0F                     	;# 
  4138  1E10                     	;# 
  4139  1E11                     	;# 
  4140  1E12                     	;# 
  4141  1E13                     	;# 
  4142  1E14                     	;# 
  4143  1E15                     	;# 
  4144  1E16                     	;# 
  4145  1E17                     	;# 
  4146  1E18                     	;# 
  4147  1E19                     	;# 
  4148  1E1A                     	;# 
  4149  1E1B                     	;# 
  4150  1E1C                     	;# 
  4151  1E1D                     	;# 
  4152  1E1E                     	;# 
  4153  1E1F                     	;# 
  4154  1E20                     	;# 
  4155  1E21                     	;# 
  4156  1E22                     	;# 
  4157  1E23                     	;# 
  4158  1E24                     	;# 
  4159  1E25                     	;# 
  4160  1E26                     	;# 
  4161  1E27                     	;# 
  4162  1E28                     	;# 
  4163  1E29                     	;# 
  4164  1E2A                     	;# 
  4165  1E2B                     	;# 
  4166  1E2C                     	;# 
  4167  1E2D                     	;# 
  4168  1E2E                     	;# 
  4169  1E2F                     	;# 
  4170  1E30                     	;# 
  4171  1E31                     	;# 
  4172  1E32                     	;# 
  4173  1E33                     	;# 
  4174  1E34                     	;# 
  4175  1E35                     	;# 
  4176  1E36                     	;# 
  4177  1E37                     	;# 
  4178  1E8F                     	;# 
  4179  1E90                     	;# 
  4180  1E91                     	;# 
  4181  1E92                     	;# 
  4182  1E93                     	;# 
  4183  1E94                     	;# 
  4184  1E95                     	;# 
  4185  1E96                     	;# 
  4186  1E97                     	;# 
  4187  1E9C                     	;# 
  4188  1E9D                     	;# 
  4189  1E9E                     	;# 
  4190  1EA1                     	;# 
  4191  1EA2                     	;# 
  4192  1EA3                     	;# 
  4193  1EA4                     	;# 
  4194  1EA9                     	;# 
  4195  1EAA                     	;# 
  4196  1EB1                     	;# 
  4197  1EB2                     	;# 
  4198  1EB8                     	;# 
  4199  1EB9                     	;# 
  4200  1EBA                     	;# 
  4201  1EBB                     	;# 
  4202  1EBC                     	;# 
  4203  1EBD                     	;# 
  4204  1EBE                     	;# 
  4205  1EC3                     	;# 
  4206  1EC5                     	;# 
  4207  1EC6                     	;# 
  4208  1EC7                     	;# 
  4209  1EC8                     	;# 
  4210  1EC9                     	;# 
  4211  1ECA                     	;# 
  4212  1ECB                     	;# 
  4213  1ECB                     	;# 
  4214  1ECB                     	;# 
  4215  1ECC                     	;# 
  4216  1ECC                     	;# 
  4217  1ECC                     	;# 
  4218  1F10                     	;# 
  4219  1F11                     	;# 
  4220  1F12                     	;# 
  4221  1F14                     	;# 
  4222  1F15                     	;# 
  4223  1F1C                     	;# 
  4224  1F1D                     	;# 
  4225  1F1E                     	;# 
  4226  1F1F                     	;# 
  4227  1F20                     	;# 
  4228  1F21                     	;# 
  4229  1F22                     	;# 
  4230  1F23                     	;# 
  4231  1F24                     	;# 
  4232  1F25                     	;# 
  4233  1F26                     	;# 
  4234  1F27                     	;# 
  4235  1F38                     	;# 
  4236  1F39                     	;# 
  4237  1F3A                     	;# 
  4238  1F3B                     	;# 
  4239  1F3C                     	;# 
  4240  1F3D                     	;# 
  4241  1F3E                     	;# 
  4242  1F3F                     	;# 
  4243  1F43                     	;# 
  4244  1F44                     	;# 
  4245  1F45                     	;# 
  4246  1F46                     	;# 
  4247  1F47                     	;# 
  4248  1F48                     	;# 
  4249  1F49                     	;# 
  4250  1F4A                     	;# 
  4251  1F4E                     	;# 
  4252  1F4F                     	;# 
  4253  1F50                     	;# 
  4254  1F51                     	;# 
  4255  1F52                     	;# 
  4256  1F53                     	;# 
  4257  1F54                     	;# 
  4258  1F55                     	;# 
  4259  1FE4                     	;# 
  4260  1FE5                     	;# 
  4261  1FE6                     	;# 
  4262  1FE7                     	;# 
  4263  1FE8                     	;# 
  4264  1FE8                     	;# 
  4265  1FE9                     	;# 
  4266  1FEA                     	;# 
  4267  1FEB                     	;# 
  4268  1FED                     	;# 
  4269  1FEE                     	;# 
  4270  1FEF                     	;# 
  4271  0000                     	;# 
  4272  0001                     	;# 
  4273  0002                     	;# 
  4274  0003                     	;# 
  4275  0004                     	;# 
  4276  0005                     	;# 
  4277  0006                     	;# 
  4278  0007                     	;# 
  4279  0008                     	;# 
  4280  0009                     	;# 
  4281  000A                     	;# 
  4282  000B                     	;# 
  4283  000C                     	;# 
  4284  000D                     	;# 
  4285  000E                     	;# 
  4286  0012                     	;# 
  4287  0013                     	;# 
  4288  0014                     	;# 
  4289  0018                     	;# 
  4290  0019                     	;# 
  4291  001A                     	;# 
  4292  008C                     	;# 
  4293  008C                     	;# 
  4294  008D                     	;# 
  4295  008E                     	;# 
  4296  008E                     	;# 
  4297  008F                     	;# 
  4298  0090                     	;# 
  4299  0090                     	;# 
  4300  0091                     	;# 
  4301  0092                     	;# 
  4302  0092                     	;# 
  4303  0093                     	;# 
  4304  0094                     	;# 
  4305  0094                     	;# 
  4306  0095                     	;# 
  4307  0096                     	;# 
  4308  0096                     	;# 
  4309  0097                     	;# 
  4310  0098                     	;# 
  4311  0099                     	;# 
  4312  009A                     	;# 
  4313  009B                     	;# 
  4314  009B                     	;# 
  4315  009C                     	;# 
  4316  009D                     	;# 
  4317  009D                     	;# 
  4318  009E                     	;# 
  4319  009F                     	;# 
  4320  010C                     	;# 
  4321  010C                     	;# 
  4322  010D                     	;# 
  4323  010E                     	;# 
  4324  010F                     	;# 
  4325  010F                     	;# 
  4326  0110                     	;# 
  4327  0111                     	;# 
  4328  0112                     	;# 
  4329  0113                     	;# 
  4330  0114                     	;# 
  4331  0115                     	;# 
  4332  0116                     	;# 
  4333  0117                     	;# 
  4334  0118                     	;# 
  4335  0119                     	;# 
  4336  0119                     	;# 
  4337  0119                     	;# 
  4338  011A                     	;# 
  4339  011A                     	;# 
  4340  011A                     	;# 
  4341  011B                     	;# 
  4342  011B                     	;# 
  4343  011B                     	;# 
  4344  011B                     	;# 
  4345  011B                     	;# 
  4346  011C                     	;# 
  4347  011C                     	;# 
  4348  011C                     	;# 
  4349  011D                     	;# 
  4350  011D                     	;# 
  4351  011D                     	;# 
  4352  011E                     	;# 
  4353  011E                     	;# 
  4354  011E                     	;# 
  4355  011F                     	;# 
  4356  011F                     	;# 
  4357  011F                     	;# 
  4358  011F                     	;# 
  4359  011F                     	;# 
  4360  018C                     	;# 
  4361  018D                     	;# 
  4362  018E                     	;# 
  4363  018F                     	;# 
  4364  0190                     	;# 
  4365  0191                     	;# 
  4366  0192                     	;# 
  4367  0196                     	;# 
  4368  0197                     	;# 
  4369  0198                     	;# 
  4370  0199                     	;# 
  4371  019A                     	;# 
  4372  019B                     	;# 
  4373  019C                     	;# 
  4374  020C                     	;# 
  4375  020D                     	;# 
  4376  020E                     	;# 
  4377  020E                     	;# 
  4378  020F                     	;# 
  4379  020F                     	;# 
  4380  0210                     	;# 
  4381  0210                     	;# 
  4382  0211                     	;# 
  4383  0211                     	;# 
  4384  0212                     	;# 
  4385  0213                     	;# 
  4386  0214                     	;# 
  4387  0214                     	;# 
  4388  0215                     	;# 
  4389  0215                     	;# 
  4390  0216                     	;# 
  4391  0216                     	;# 
  4392  0217                     	;# 
  4393  0217                     	;# 
  4394  0218                     	;# 
  4395  0219                     	;# 
  4396  021A                     	;# 
  4397  021A                     	;# 
  4398  021B                     	;# 
  4399  021B                     	;# 
  4400  021C                     	;# 
  4401  021C                     	;# 
  4402  021D                     	;# 
  4403  021D                     	;# 
  4404  021E                     	;# 
  4405  021F                     	;# 
  4406  028C                     	;# 
  4407  028C                     	;# 
  4408  028D                     	;# 
  4409  028D                     	;# 
  4410  028E                     	;# 
  4411  028F                     	;# 
  4412  0290                     	;# 
  4413  0291                     	;# 
  4414  0292                     	;# 
  4415  0292                     	;# 
  4416  0293                     	;# 
  4417  0293                     	;# 
  4418  0294                     	;# 
  4419  0295                     	;# 
  4420  0296                     	;# 
  4421  0297                     	;# 
  4422  0298                     	;# 
  4423  0298                     	;# 
  4424  0299                     	;# 
  4425  0299                     	;# 
  4426  029A                     	;# 
  4427  029B                     	;# 
  4428  029C                     	;# 
  4429  029D                     	;# 
  4430  029F                     	;# 
  4431  030C                     	;# 
  4432  030C                     	;# 
  4433  030D                     	;# 
  4434  030E                     	;# 
  4435  030F                     	;# 
  4436  0310                     	;# 
  4437  0310                     	;# 
  4438  0311                     	;# 
  4439  0312                     	;# 
  4440  0313                     	;# 
  4441  0314                     	;# 
  4442  0314                     	;# 
  4443  0315                     	;# 
  4444  0316                     	;# 
  4445  0317                     	;# 
  4446  0318                     	;# 
  4447  0318                     	;# 
  4448  0319                     	;# 
  4449  031A                     	;# 
  4450  031B                     	;# 
  4451  038C                     	;# 
  4452  038C                     	;# 
  4453  038D                     	;# 
  4454  038E                     	;# 
  4455  0390                     	;# 
  4456  0390                     	;# 
  4457  0391                     	;# 
  4458  0392                     	;# 
  4459  048C                     	;# 
  4460  048C                     	;# 
  4461  048D                     	;# 
  4462  048E                     	;# 
  4463  048F                     	;# 
  4464  048F                     	;# 
  4465  0490                     	;# 
  4466  0491                     	;# 
  4467  0492                     	;# 
  4468  0492                     	;# 
  4469  0493                     	;# 
  4470  0494                     	;# 
  4471  0495                     	;# 
  4472  0495                     	;# 
  4473  0496                     	;# 
  4474  0497                     	;# 
  4475  0498                     	;# 
  4476  0499                     	;# 
  4477  049A                     	;# 
  4478  049B                     	;# 
  4479  049C                     	;# 
  4480  049D                     	;# 
  4481  058C                     	;# 
  4482  058C                     	;# 
  4483  058D                     	;# 
  4484  058E                     	;# 
  4485  058F                     	;# 
  4486  058F                     	;# 
  4487  0590                     	;# 
  4488  0591                     	;# 
  4489  0592                     	;# 
  4490  0593                     	;# 
  4491  059C                     	;# 
  4492  059C                     	;# 
  4493  059D                     	;# 
  4494  059D                     	;# 
  4495  059E                     	;# 
  4496  059F                     	;# 
  4497  060C                     	;# 
  4498  060C                     	;# 
  4499  060D                     	;# 
  4500  060D                     	;# 
  4501  060E                     	;# 
  4502  060F                     	;# 
  4503  0610                     	;# 
  4504  0611                     	;# 
  4505  0612                     	;# 
  4506  0613                     	;# 
  4507  0614                     	;# 
  4508  0616                     	;# 
  4509  0616                     	;# 
  4510  0617                     	;# 
  4511  0617                     	;# 
  4512  0618                     	;# 
  4513  0619                     	;# 
  4514  061A                     	;# 
  4515  061B                     	;# 
  4516  061C                     	;# 
  4517  061D                     	;# 
  4518  061E                     	;# 
  4519  070C                     	;# 
  4520  070D                     	;# 
  4521  070E                     	;# 
  4522  070F                     	;# 
  4523  0710                     	;# 
  4524  0711                     	;# 
  4525  0712                     	;# 
  4526  0713                     	;# 
  4527  0714                     	;# 
  4528  0716                     	;# 
  4529  0717                     	;# 
  4530  0718                     	;# 
  4531  0719                     	;# 
  4532  071A                     	;# 
  4533  071B                     	;# 
  4534  071C                     	;# 
  4535  071D                     	;# 
  4536  071E                     	;# 
  4537  0796                     	;# 
  4538  0797                     	;# 
  4539  0798                     	;# 
  4540  0799                     	;# 
  4541  079A                     	;# 
  4542  079B                     	;# 
  4543  079C                     	;# 
  4544  079D                     	;# 
  4545  080C                     	;# 
  4546  080D                     	;# 
  4547  080E                     	;# 
  4548  080F                     	;# 
  4549  0810                     	;# 
  4550  0811                     	;# 
  4551  0812                     	;# 
  4552  0813                     	;# 
  4553  0814                     	;# 
  4554  081A                     	;# 
  4555  081A                     	;# 
  4556  081B                     	;# 
  4557  081C                     	;# 
  4558  081C                     	;# 
  4559  081D                     	;# 
  4560  081E                     	;# 
  4561  081F                     	;# 
  4562  088C                     	;# 
  4563  088D                     	;# 
  4564  088E                     	;# 
  4565  088F                     	;# 
  4566  0890                     	;# 
  4567  0891                     	;# 
  4568  0892                     	;# 
  4569  0893                     	;# 
  4570  0895                     	;# 
  4571  0896                     	;# 
  4572  0897                     	;# 
  4573  0898                     	;# 
  4574  0899                     	;# 
  4575  089A                     	;# 
  4576  089B                     	;# 
  4577  090C                     	;# 
  4578  090E                     	;# 
  4579  090F                     	;# 
  4580  091F                     	;# 
  4581  098F                     	;# 
  4582  098F                     	;# 
  4583  0990                     	;# 
  4584  0991                     	;# 
  4585  0992                     	;# 
  4586  0993                     	;# 
  4587  0994                     	;# 
  4588  0995                     	;# 
  4589  0996                     	;# 
  4590  0997                     	;# 
  4591  1E0F                     	;# 
  4592  1E10                     	;# 
  4593  1E11                     	;# 
  4594  1E12                     	;# 
  4595  1E13                     	;# 
  4596  1E14                     	;# 
  4597  1E15                     	;# 
  4598  1E16                     	;# 
  4599  1E17                     	;# 
  4600  1E18                     	;# 
  4601  1E19                     	;# 
  4602  1E1A                     	;# 
  4603  1E1B                     	;# 
  4604  1E1C                     	;# 
  4605  1E1D                     	;# 
  4606  1E1E                     	;# 
  4607  1E1F                     	;# 
  4608  1E20                     	;# 
  4609  1E21                     	;# 
  4610  1E22                     	;# 
  4611  1E23                     	;# 
  4612  1E24                     	;# 
  4613  1E25                     	;# 
  4614  1E26                     	;# 
  4615  1E27                     	;# 
  4616  1E28                     	;# 
  4617  1E29                     	;# 
  4618  1E2A                     	;# 
  4619  1E2B                     	;# 
  4620  1E2C                     	;# 
  4621  1E2D                     	;# 
  4622  1E2E                     	;# 
  4623  1E2F                     	;# 
  4624  1E30                     	;# 
  4625  1E31                     	;# 
  4626  1E32                     	;# 
  4627  1E33                     	;# 
  4628  1E34                     	;# 
  4629  1E35                     	;# 
  4630  1E36                     	;# 
  4631  1E37                     	;# 
  4632  1E8F                     	;# 
  4633  1E90                     	;# 
  4634  1E91                     	;# 
  4635  1E92                     	;# 
  4636  1E93                     	;# 
  4637  1E94                     	;# 
  4638  1E95                     	;# 
  4639  1E96                     	;# 
  4640  1E97                     	;# 
  4641  1E9C                     	;# 
  4642  1E9D                     	;# 
  4643  1E9E                     	;# 
  4644  1EA1                     	;# 
  4645  1EA2                     	;# 
  4646  1EA3                     	;# 
  4647  1EA4                     	;# 
  4648  1EA9                     	;# 
  4649  1EAA                     	;# 
  4650  1EB1                     	;# 
  4651  1EB2                     	;# 
  4652  1EB8                     	;# 
  4653  1EB9                     	;# 
  4654  1EBA                     	;# 
  4655  1EBB                     	;# 
  4656  1EBC                     	;# 
  4657  1EBD                     	;# 
  4658  1EBE                     	;# 
  4659  1EC3                     	;# 
  4660  1EC5                     	;# 
  4661  1EC6                     	;# 
  4662  1EC7                     	;# 
  4663  1EC8                     	;# 
  4664  1EC9                     	;# 
  4665  1ECA                     	;# 
  4666  1ECB                     	;# 
  4667  1ECB                     	;# 
  4668  1ECB                     	;# 
  4669  1ECC                     	;# 
  4670  1ECC                     	;# 
  4671  1ECC                     	;# 
  4672  1F10                     	;# 
  4673  1F11                     	;# 
  4674  1F12                     	;# 
  4675  1F14                     	;# 
  4676  1F15                     	;# 
  4677  1F1C                     	;# 
  4678  1F1D                     	;# 
  4679  1F1E                     	;# 
  4680  1F1F                     	;# 
  4681  1F20                     	;# 
  4682  1F21                     	;# 
  4683  1F22                     	;# 
  4684  1F23                     	;# 
  4685  1F24                     	;# 
  4686  1F25                     	;# 
  4687  1F26                     	;# 
  4688  1F27                     	;# 
  4689  1F38                     	;# 
  4690  1F39                     	;# 
  4691  1F3A                     	;# 
  4692  1F3B                     	;# 
  4693  1F3C                     	;# 
  4694  1F3D                     	;# 
  4695  1F3E                     	;# 
  4696  1F3F                     	;# 
  4697  1F43                     	;# 
  4698  1F44                     	;# 
  4699  1F45                     	;# 
  4700  1F46                     	;# 
  4701  1F47                     	;# 
  4702  1F48                     	;# 
  4703  1F49                     	;# 
  4704  1F4A                     	;# 
  4705  1F4E                     	;# 
  4706  1F4F                     	;# 
  4707  1F50                     	;# 
  4708  1F51                     	;# 
  4709  1F52                     	;# 
  4710  1F53                     	;# 
  4711  1F54                     	;# 
  4712  1F55                     	;# 
  4713  1FE4                     	;# 
  4714  1FE5                     	;# 
  4715  1FE6                     	;# 
  4716  1FE7                     	;# 
  4717  1FE8                     	;# 
  4718  1FE8                     	;# 
  4719  1FE9                     	;# 
  4720  1FEA                     	;# 
  4721  1FEB                     	;# 
  4722  1FED                     	;# 
  4723  1FEE                     	;# 
  4724  1FEF                     	;# 
  4725  0000                     	;# 
  4726  0001                     	;# 
  4727  0002                     	;# 
  4728  0003                     	;# 
  4729  0004                     	;# 
  4730  0005                     	;# 
  4731  0006                     	;# 
  4732  0007                     	;# 
  4733  0008                     	;# 
  4734  0009                     	;# 
  4735  000A                     	;# 
  4736  000B                     	;# 
  4737  000C                     	;# 
  4738  000D                     	;# 
  4739  000E                     	;# 
  4740  0012                     	;# 
  4741  0013                     	;# 
  4742  0014                     	;# 
  4743  0018                     	;# 
  4744  0019                     	;# 
  4745  001A                     	;# 
  4746  008C                     	;# 
  4747  008C                     	;# 
  4748  008D                     	;# 
  4749  008E                     	;# 
  4750  008E                     	;# 
  4751  008F                     	;# 
  4752  0090                     	;# 
  4753  0090                     	;# 
  4754  0091                     	;# 
  4755  0092                     	;# 
  4756  0092                     	;# 
  4757  0093                     	;# 
  4758  0094                     	;# 
  4759  0094                     	;# 
  4760  0095                     	;# 
  4761  0096                     	;# 
  4762  0096                     	;# 
  4763  0097                     	;# 
  4764  0098                     	;# 
  4765  0099                     	;# 
  4766  009A                     	;# 
  4767  009B                     	;# 
  4768  009B                     	;# 
  4769  009C                     	;# 
  4770  009D                     	;# 
  4771  009D                     	;# 
  4772  009E                     	;# 
  4773  009F                     	;# 
  4774  010C                     	;# 
  4775  010C                     	;# 
  4776  010D                     	;# 
  4777  010E                     	;# 
  4778  010F                     	;# 
  4779  010F                     	;# 
  4780  0110                     	;# 
  4781  0111                     	;# 
  4782  0112                     	;# 
  4783  0113                     	;# 
  4784  0114                     	;# 
  4785  0115                     	;# 
  4786  0116                     	;# 
  4787  0117                     	;# 
  4788  0118                     	;# 
  4789  0119                     	;# 
  4790  0119                     	;# 
  4791  0119                     	;# 
  4792  011A                     	;# 
  4793  011A                     	;# 
  4794  011A                     	;# 
  4795  011B                     	;# 
  4796  011B                     	;# 
  4797  011B                     	;# 
  4798  011B                     	;# 
  4799  011B                     	;# 
  4800  011C                     	;# 
  4801  011C                     	;# 
  4802  011C                     	;# 
  4803  011D                     	;# 
  4804  011D                     	;# 
  4805  011D                     	;# 
  4806  011E                     	;# 
  4807  011E                     	;# 
  4808  011E                     	;# 
  4809  011F                     	;# 
  4810  011F                     	;# 
  4811  011F                     	;# 
  4812  011F                     	;# 
  4813  011F                     	;# 
  4814  018C                     	;# 
  4815  018D                     	;# 
  4816  018E                     	;# 
  4817  018F                     	;# 
  4818  0190                     	;# 
  4819  0191                     	;# 
  4820  0192                     	;# 
  4821  0196                     	;# 
  4822  0197                     	;# 
  4823  0198                     	;# 
  4824  0199                     	;# 
  4825  019A                     	;# 
  4826  019B                     	;# 
  4827  019C                     	;# 
  4828  020C                     	;# 
  4829  020D                     	;# 
  4830  020E                     	;# 
  4831  020E                     	;# 
  4832  020F                     	;# 
  4833  020F                     	;# 
  4834  0210                     	;# 
  4835  0210                     	;# 
  4836  0211                     	;# 
  4837  0211                     	;# 
  4838  0212                     	;# 
  4839  0213                     	;# 
  4840  0214                     	;# 
  4841  0214                     	;# 
  4842  0215                     	;# 
  4843  0215                     	;# 
  4844  0216                     	;# 
  4845  0216                     	;# 
  4846  0217                     	;# 
  4847  0217                     	;# 
  4848  0218                     	;# 
  4849  0219                     	;# 
  4850  021A                     	;# 
  4851  021A                     	;# 
  4852  021B                     	;# 
  4853  021B                     	;# 
  4854  021C                     	;# 
  4855  021C                     	;# 
  4856  021D                     	;# 
  4857  021D                     	;# 
  4858  021E                     	;# 
  4859  021F                     	;# 
  4860  028C                     	;# 
  4861  028C                     	;# 
  4862  028D                     	;# 
  4863  028D                     	;# 
  4864  028E                     	;# 
  4865  028F                     	;# 
  4866  0290                     	;# 
  4867  0291                     	;# 
  4868  0292                     	;# 
  4869  0292                     	;# 
  4870  0293                     	;# 
  4871  0293                     	;# 
  4872  0294                     	;# 
  4873  0295                     	;# 
  4874  0296                     	;# 
  4875  0297                     	;# 
  4876  0298                     	;# 
  4877  0298                     	;# 
  4878  0299                     	;# 
  4879  0299                     	;# 
  4880  029A                     	;# 
  4881  029B                     	;# 
  4882  029C                     	;# 
  4883  029D                     	;# 
  4884  029F                     	;# 
  4885  030C                     	;# 
  4886  030C                     	;# 
  4887  030D                     	;# 
  4888  030E                     	;# 
  4889  030F                     	;# 
  4890  0310                     	;# 
  4891  0310                     	;# 
  4892  0311                     	;# 
  4893  0312                     	;# 
  4894  0313                     	;# 
  4895  0314                     	;# 
  4896  0314                     	;# 
  4897  0315                     	;# 
  4898  0316                     	;# 
  4899  0317                     	;# 
  4900  0318                     	;# 
  4901  0318                     	;# 
  4902  0319                     	;# 
  4903  031A                     	;# 
  4904  031B                     	;# 
  4905  038C                     	;# 
  4906  038C                     	;# 
  4907  038D                     	;# 
  4908  038E                     	;# 
  4909  0390                     	;# 
  4910  0390                     	;# 
  4911  0391                     	;# 
  4912  0392                     	;# 
  4913  048C                     	;# 
  4914  048C                     	;# 
  4915  048D                     	;# 
  4916  048E                     	;# 
  4917  048F                     	;# 
  4918  048F                     	;# 
  4919  0490                     	;# 
  4920  0491                     	;# 
  4921  0492                     	;# 
  4922  0492                     	;# 
  4923  0493                     	;# 
  4924  0494                     	;# 
  4925  0495                     	;# 
  4926  0495                     	;# 
  4927  0496                     	;# 
  4928  0497                     	;# 
  4929  0498                     	;# 
  4930  0499                     	;# 
  4931  049A                     	;# 
  4932  049B                     	;# 
  4933  049C                     	;# 
  4934  049D                     	;# 
  4935  058C                     	;# 
  4936  058C                     	;# 
  4937  058D                     	;# 
  4938  058E                     	;# 
  4939  058F                     	;# 
  4940  058F                     	;# 
  4941  0590                     	;# 
  4942  0591                     	;# 
  4943  0592                     	;# 
  4944  0593                     	;# 
  4945  059C                     	;# 
  4946  059C                     	;# 
  4947  059D                     	;# 
  4948  059D                     	;# 
  4949  059E                     	;# 
  4950  059F                     	;# 
  4951  060C                     	;# 
  4952  060C                     	;# 
  4953  060D                     	;# 
  4954  060D                     	;# 
  4955  060E                     	;# 
  4956  060F                     	;# 
  4957  0610                     	;# 
  4958  0611                     	;# 
  4959  0612                     	;# 
  4960  0613                     	;# 
  4961  0614                     	;# 
  4962  0616                     	;# 
  4963  0616                     	;# 
  4964  0617                     	;# 
  4965  0617                     	;# 
  4966  0618                     	;# 
  4967  0619                     	;# 
  4968  061A                     	;# 
  4969  061B                     	;# 
  4970  061C                     	;# 
  4971  061D                     	;# 
  4972  061E                     	;# 
  4973  070C                     	;# 
  4974  070D                     	;# 
  4975  070E                     	;# 
  4976  070F                     	;# 
  4977  0710                     	;# 
  4978  0711                     	;# 
  4979  0712                     	;# 
  4980  0713                     	;# 
  4981  0714                     	;# 
  4982  0716                     	;# 
  4983  0717                     	;# 
  4984  0718                     	;# 
  4985  0719                     	;# 
  4986  071A                     	;# 
  4987  071B                     	;# 
  4988  071C                     	;# 
  4989  071D                     	;# 
  4990  071E                     	;# 
  4991  0796                     	;# 
  4992  0797                     	;# 
  4993  0798                     	;# 
  4994  0799                     	;# 
  4995  079A                     	;# 
  4996  079B                     	;# 
  4997  079C                     	;# 
  4998  079D                     	;# 
  4999  080C                     	;# 
  5000  080D                     	;# 
  5001  080E                     	;# 
  5002  080F                     	;# 
  5003  0810                     	;# 
  5004  0811                     	;# 
  5005  0812                     	;# 
  5006  0813                     	;# 
  5007  0814                     	;# 
  5008  081A                     	;# 
  5009  081A                     	;# 
  5010  081B                     	;# 
  5011  081C                     	;# 
  5012  081C                     	;# 
  5013  081D                     	;# 
  5014  081E                     	;# 
  5015  081F                     	;# 
  5016  088C                     	;# 
  5017  088D                     	;# 
  5018  088E                     	;# 
  5019  088F                     	;# 
  5020  0890                     	;# 
  5021  0891                     	;# 
  5022  0892                     	;# 
  5023  0893                     	;# 
  5024  0895                     	;# 
  5025  0896                     	;# 
  5026  0897                     	;# 
  5027  0898                     	;# 
  5028  0899                     	;# 
  5029  089A                     	;# 
  5030  089B                     	;# 
  5031  090C                     	;# 
  5032  090E                     	;# 
  5033  090F                     	;# 
  5034  091F                     	;# 
  5035  098F                     	;# 
  5036  098F                     	;# 
  5037  0990                     	;# 
  5038  0991                     	;# 
  5039  0992                     	;# 
  5040  0993                     	;# 
  5041  0994                     	;# 
  5042  0995                     	;# 
  5043  0996                     	;# 
  5044  0997                     	;# 
  5045  1E0F                     	;# 
  5046  1E10                     	;# 
  5047  1E11                     	;# 
  5048  1E12                     	;# 
  5049  1E13                     	;# 
  5050  1E14                     	;# 
  5051  1E15                     	;# 
  5052  1E16                     	;# 
  5053  1E17                     	;# 
  5054  1E18                     	;# 
  5055  1E19                     	;# 
  5056  1E1A                     	;# 
  5057  1E1B                     	;# 
  5058  1E1C                     	;# 
  5059  1E1D                     	;# 
  5060  1E1E                     	;# 
  5061  1E1F                     	;# 
  5062  1E20                     	;# 
  5063  1E21                     	;# 
  5064  1E22                     	;# 
  5065  1E23                     	;# 
  5066  1E24                     	;# 
  5067  1E25                     	;# 
  5068  1E26                     	;# 
  5069  1E27                     	;# 
  5070  1E28                     	;# 
  5071  1E29                     	;# 
  5072  1E2A                     	;# 
  5073  1E2B                     	;# 
  5074  1E2C                     	;# 
  5075  1E2D                     	;# 
  5076  1E2E                     	;# 
  5077  1E2F                     	;# 
  5078  1E30                     	;# 
  5079  1E31                     	;# 
  5080  1E32                     	;# 
  5081  1E33                     	;# 
  5082  1E34                     	;# 
  5083  1E35                     	;# 
  5084  1E36                     	;# 
  5085  1E37                     	;# 
  5086  1E8F                     	;# 
  5087  1E90                     	;# 
  5088  1E91                     	;# 
  5089  1E92                     	;# 
  5090  1E93                     	;# 
  5091  1E94                     	;# 
  5092  1E95                     	;# 
  5093  1E96                     	;# 
  5094  1E97                     	;# 
  5095  1E9C                     	;# 
  5096  1E9D                     	;# 
  5097  1E9E                     	;# 
  5098  1EA1                     	;# 
  5099  1EA2                     	;# 
  5100  1EA3                     	;# 
  5101  1EA4                     	;# 
  5102  1EA9                     	;# 
  5103  1EAA                     	;# 
  5104  1EB1                     	;# 
  5105  1EB2                     	;# 
  5106  1EB8                     	;# 
  5107  1EB9                     	;# 
  5108  1EBA                     	;# 
  5109  1EBB                     	;# 
  5110  1EBC                     	;# 
  5111  1EBD                     	;# 
  5112  1EBE                     	;# 
  5113  1EC3                     	;# 
  5114  1EC5                     	;# 
  5115  1EC6                     	;# 
  5116  1EC7                     	;# 
  5117  1EC8                     	;# 
  5118  1EC9                     	;# 
  5119  1ECA                     	;# 
  5120  1ECB                     	;# 
  5121  1ECB                     	;# 
  5122  1ECB                     	;# 
  5123  1ECC                     	;# 
  5124  1ECC                     	;# 
  5125  1ECC                     	;# 
  5126  1F10                     	;# 
  5127  1F11                     	;# 
  5128  1F12                     	;# 
  5129  1F14                     	;# 
  5130  1F15                     	;# 
  5131  1F1C                     	;# 
  5132  1F1D                     	;# 
  5133  1F1E                     	;# 
  5134  1F1F                     	;# 
  5135  1F20                     	;# 
  5136  1F21                     	;# 
  5137  1F22                     	;# 
  5138  1F23                     	;# 
  5139  1F24                     	;# 
  5140  1F25                     	;# 
  5141  1F26                     	;# 
  5142  1F27                     	;# 
  5143  1F38                     	;# 
  5144  1F39                     	;# 
  5145  1F3A                     	;# 
  5146  1F3B                     	;# 
  5147  1F3C                     	;# 
  5148  1F3D                     	;# 
  5149  1F3E                     	;# 
  5150  1F3F                     	;# 
  5151  1F43                     	;# 
  5152  1F44                     	;# 
  5153  1F45                     	;# 
  5154  1F46                     	;# 
  5155  1F47                     	;# 
  5156  1F48                     	;# 
  5157  1F49                     	;# 
  5158  1F4A                     	;# 
  5159  1F4E                     	;# 
  5160  1F4F                     	;# 
  5161  1F50                     	;# 
  5162  1F51                     	;# 
  5163  1F52                     	;# 
  5164  1F53                     	;# 
  5165  1F54                     	;# 
  5166  1F55                     	;# 
  5167  1FE4                     	;# 
  5168  1FE5                     	;# 
  5169  1FE6                     	;# 
  5170  1FE7                     	;# 
  5171  1FE8                     	;# 
  5172  1FE8                     	;# 
  5173  1FE9                     	;# 
  5174  1FEA                     	;# 
  5175  1FEB                     	;# 
  5176  1FED                     	;# 
  5177  1FEE                     	;# 
  5178  1FEF                     	;# 
  5179  0000                     	;# 
  5180  0001                     	;# 
  5181  0002                     	;# 
  5182  0003                     	;# 
  5183  0004                     	;# 
  5184  0005                     	;# 
  5185  0006                     	;# 
  5186  0007                     	;# 
  5187  0008                     	;# 
  5188  0009                     	;# 
  5189  000A                     	;# 
  5190  000B                     	;# 
  5191  000C                     	;# 
  5192  000D                     	;# 
  5193  000E                     	;# 
  5194  0012                     	;# 
  5195  0013                     	;# 
  5196  0014                     	;# 
  5197  0018                     	;# 
  5198  0019                     	;# 
  5199  001A                     	;# 
  5200  008C                     	;# 
  5201  008C                     	;# 
  5202  008D                     	;# 
  5203  008E                     	;# 
  5204  008E                     	;# 
  5205  008F                     	;# 
  5206  0090                     	;# 
  5207  0090                     	;# 
  5208  0091                     	;# 
  5209  0092                     	;# 
  5210  0092                     	;# 
  5211  0093                     	;# 
  5212  0094                     	;# 
  5213  0094                     	;# 
  5214  0095                     	;# 
  5215  0096                     	;# 
  5216  0096                     	;# 
  5217  0097                     	;# 
  5218  0098                     	;# 
  5219  0099                     	;# 
  5220  009A                     	;# 
  5221  009B                     	;# 
  5222  009B                     	;# 
  5223  009C                     	;# 
  5224  009D                     	;# 
  5225  009D                     	;# 
  5226  009E                     	;# 
  5227  009F                     	;# 
  5228  010C                     	;# 
  5229  010C                     	;# 
  5230  010D                     	;# 
  5231  010E                     	;# 
  5232  010F                     	;# 
  5233  010F                     	;# 
  5234  0110                     	;# 
  5235  0111                     	;# 
  5236  0112                     	;# 
  5237  0113                     	;# 
  5238  0114                     	;# 
  5239  0115                     	;# 
  5240  0116                     	;# 
  5241  0117                     	;# 
  5242  0118                     	;# 
  5243  0119                     	;# 
  5244  0119                     	;# 
  5245  0119                     	;# 
  5246  011A                     	;# 
  5247  011A                     	;# 
  5248  011A                     	;# 
  5249  011B                     	;# 
  5250  011B                     	;# 
  5251  011B                     	;# 
  5252  011B                     	;# 
  5253  011B                     	;# 
  5254  011C                     	;# 
  5255  011C                     	;# 
  5256  011C                     	;# 
  5257  011D                     	;# 
  5258  011D                     	;# 
  5259  011D                     	;# 
  5260  011E                     	;# 
  5261  011E                     	;# 
  5262  011E                     	;# 
  5263  011F                     	;# 
  5264  011F                     	;# 
  5265  011F                     	;# 
  5266  011F                     	;# 
  5267  011F                     	;# 
  5268  018C                     	;# 
  5269  018D                     	;# 
  5270  018E                     	;# 
  5271  018F                     	;# 
  5272  0190                     	;# 
  5273  0191                     	;# 
  5274  0192                     	;# 
  5275  0196                     	;# 
  5276  0197                     	;# 
  5277  0198                     	;# 
  5278  0199                     	;# 
  5279  019A                     	;# 
  5280  019B                     	;# 
  5281  019C                     	;# 
  5282  020C                     	;# 
  5283  020D                     	;# 
  5284  020E                     	;# 
  5285  020E                     	;# 
  5286  020F                     	;# 
  5287  020F                     	;# 
  5288  0210                     	;# 
  5289  0210                     	;# 
  5290  0211                     	;# 
  5291  0211                     	;# 
  5292  0212                     	;# 
  5293  0213                     	;# 
  5294  0214                     	;# 
  5295  0214                     	;# 
  5296  0215                     	;# 
  5297  0215                     	;# 
  5298  0216                     	;# 
  5299  0216                     	;# 
  5300  0217                     	;# 
  5301  0217                     	;# 
  5302  0218                     	;# 
  5303  0219                     	;# 
  5304  021A                     	;# 
  5305  021A                     	;# 
  5306  021B                     	;# 
  5307  021B                     	;# 
  5308  021C                     	;# 
  5309  021C                     	;# 
  5310  021D                     	;# 
  5311  021D                     	;# 
  5312  021E                     	;# 
  5313  021F                     	;# 
  5314  028C                     	;# 
  5315  028C                     	;# 
  5316  028D                     	;# 
  5317  028D                     	;# 
  5318  028E                     	;# 
  5319  028F                     	;# 
  5320  0290                     	;# 
  5321  0291                     	;# 
  5322  0292                     	;# 
  5323  0292                     	;# 
  5324  0293                     	;# 
  5325  0293                     	;# 
  5326  0294                     	;# 
  5327  0295                     	;# 
  5328  0296                     	;# 
  5329  0297                     	;# 
  5330  0298                     	;# 
  5331  0298                     	;# 
  5332  0299                     	;# 
  5333  0299                     	;# 
  5334  029A                     	;# 
  5335  029B                     	;# 
  5336  029C                     	;# 
  5337  029D                     	;# 
  5338  029F                     	;# 
  5339  030C                     	;# 
  5340  030C                     	;# 
  5341  030D                     	;# 
  5342  030E                     	;# 
  5343  030F                     	;# 
  5344  0310                     	;# 
  5345  0310                     	;# 
  5346  0311                     	;# 
  5347  0312                     	;# 
  5348  0313                     	;# 
  5349  0314                     	;# 
  5350  0314                     	;# 
  5351  0315                     	;# 
  5352  0316                     	;# 
  5353  0317                     	;# 
  5354  0318                     	;# 
  5355  0318                     	;# 
  5356  0319                     	;# 
  5357  031A                     	;# 
  5358  031B                     	;# 
  5359  038C                     	;# 
  5360  038C                     	;# 
  5361  038D                     	;# 
  5362  038E                     	;# 
  5363  0390                     	;# 
  5364  0390                     	;# 
  5365  0391                     	;# 
  5366  0392                     	;# 
  5367  048C                     	;# 
  5368  048C                     	;# 
  5369  048D                     	;# 
  5370  048E                     	;# 
  5371  048F                     	;# 
  5372  048F                     	;# 
  5373  0490                     	;# 
  5374  0491                     	;# 
  5375  0492                     	;# 
  5376  0492                     	;# 
  5377  0493                     	;# 
  5378  0494                     	;# 
  5379  0495                     	;# 
  5380  0495                     	;# 
  5381  0496                     	;# 
  5382  0497                     	;# 
  5383  0498                     	;# 
  5384  0499                     	;# 
  5385  049A                     	;# 
  5386  049B                     	;# 
  5387  049C                     	;# 
  5388  049D                     	;# 
  5389  058C                     	;# 
  5390  058C                     	;# 
  5391  058D                     	;# 
  5392  058E                     	;# 
  5393  058F                     	;# 
  5394  058F                     	;# 
  5395  0590                     	;# 
  5396  0591                     	;# 
  5397  0592                     	;# 
  5398  0593                     	;# 
  5399  059C                     	;# 
  5400  059C                     	;# 
  5401  059D                     	;# 
  5402  059D                     	;# 
  5403  059E                     	;# 
  5404  059F                     	;# 
  5405  060C                     	;# 
  5406  060C                     	;# 
  5407  060D                     	;# 
  5408  060D                     	;# 
  5409  060E                     	;# 
  5410  060F                     	;# 
  5411  0610                     	;# 
  5412  0611                     	;# 
  5413  0612                     	;# 
  5414  0613                     	;# 
  5415  0614                     	;# 
  5416  0616                     	;# 
  5417  0616                     	;# 
  5418  0617                     	;# 
  5419  0617                     	;# 
  5420  0618                     	;# 
  5421  0619                     	;# 
  5422  061A                     	;# 
  5423  061B                     	;# 
  5424  061C                     	;# 
  5425  061D                     	;# 
  5426  061E                     	;# 
  5427  070C                     	;# 
  5428  070D                     	;# 
  5429  070E                     	;# 
  5430  070F                     	;# 
  5431  0710                     	;# 
  5432  0711                     	;# 
  5433  0712                     	;# 
  5434  0713                     	;# 
  5435  0714                     	;# 
  5436  0716                     	;# 
  5437  0717                     	;# 
  5438  0718                     	;# 
  5439  0719                     	;# 
  5440  071A                     	;# 
  5441  071B                     	;# 
  5442  071C                     	;# 
  5443  071D                     	;# 
  5444  071E                     	;# 
  5445  0796                     	;# 
  5446  0797                     	;# 
  5447  0798                     	;# 
  5448  0799                     	;# 
  5449  079A                     	;# 
  5450  079B                     	;# 
  5451  079C                     	;# 
  5452  079D                     	;# 
  5453  080C                     	;# 
  5454  080D                     	;# 
  5455  080E                     	;# 
  5456  080F                     	;# 
  5457  0810                     	;# 
  5458  0811                     	;# 
  5459  0812                     	;# 
  5460  0813                     	;# 
  5461  0814                     	;# 
  5462  081A                     	;# 
  5463  081A                     	;# 
  5464  081B                     	;# 
  5465  081C                     	;# 
  5466  081C                     	;# 
  5467  081D                     	;# 
  5468  081E                     	;# 
  5469  081F                     	;# 
  5470  088C                     	;# 
  5471  088D                     	;# 
  5472  088E                     	;# 
  5473  088F                     	;# 
  5474  0890                     	;# 
  5475  0891                     	;# 
  5476  0892                     	;# 
  5477  0893                     	;# 
  5478  0895                     	;# 
  5479  0896                     	;# 
  5480  0897                     	;# 
  5481  0898                     	;# 
  5482  0899                     	;# 
  5483  089A                     	;# 
  5484  089B                     	;# 
  5485  090C                     	;# 
  5486  090E                     	;# 
  5487  090F                     	;# 
  5488  091F                     	;# 
  5489  098F                     	;# 
  5490  098F                     	;# 
  5491  0990                     	;# 
  5492  0991                     	;# 
  5493  0992                     	;# 
  5494  0993                     	;# 
  5495  0994                     	;# 
  5496  0995                     	;# 
  5497  0996                     	;# 
  5498  0997                     	;# 
  5499  1E0F                     	;# 
  5500  1E10                     	;# 
  5501  1E11                     	;# 
  5502  1E12                     	;# 
  5503  1E13                     	;# 
  5504  1E14                     	;# 
  5505  1E15                     	;# 
  5506  1E16                     	;# 
  5507  1E17                     	;# 
  5508  1E18                     	;# 
  5509  1E19                     	;# 
  5510  1E1A                     	;# 
  5511  1E1B                     	;# 
  5512  1E1C                     	;# 
  5513  1E1D                     	;# 
  5514  1E1E                     	;# 
  5515  1E1F                     	;# 
  5516  1E20                     	;# 
  5517  1E21                     	;# 
  5518  1E22                     	;# 
  5519  1E23                     	;# 
  5520  1E24                     	;# 
  5521  1E25                     	;# 
  5522  1E26                     	;# 
  5523  1E27                     	;# 
  5524  1E28                     	;# 
  5525  1E29                     	;# 
  5526  1E2A                     	;# 
  5527  1E2B                     	;# 
  5528  1E2C                     	;# 
  5529  1E2D                     	;# 
  5530  1E2E                     	;# 
  5531  1E2F                     	;# 
  5532  1E30                     	;# 
  5533  1E31                     	;# 
  5534  1E32                     	;# 
  5535  1E33                     	;# 
  5536  1E34                     	;# 
  5537  1E35                     	;# 
  5538  1E36                     	;# 
  5539  1E37                     	;# 
  5540  1E8F                     	;# 
  5541  1E90                     	;# 
  5542  1E91                     	;# 
  5543  1E92                     	;# 
  5544  1E93                     	;# 
  5545  1E94                     	;# 
  5546  1E95                     	;# 
  5547  1E96                     	;# 
  5548  1E97                     	;# 
  5549  1E9C                     	;# 
  5550  1E9D                     	;# 
  5551  1E9E                     	;# 
  5552  1EA1                     	;# 
  5553  1EA2                     	;# 
  5554  1EA3                     	;# 
  5555  1EA4                     	;# 
  5556  1EA9                     	;# 
  5557  1EAA                     	;# 
  5558  1EB1                     	;# 
  5559  1EB2                     	;# 
  5560  1EB8                     	;# 
  5561  1EB9                     	;# 
  5562  1EBA                     	;# 
  5563  1EBB                     	;# 
  5564  1EBC                     	;# 
  5565  1EBD                     	;# 
  5566  1EBE                     	;# 
  5567  1EC3                     	;# 
  5568  1EC5                     	;# 
  5569  1EC6                     	;# 
  5570  1EC7                     	;# 
  5571  1EC8                     	;# 
  5572  1EC9                     	;# 
  5573  1ECA                     	;# 
  5574  1ECB                     	;# 
  5575  1ECB                     	;# 
  5576  1ECB                     	;# 
  5577  1ECC                     	;# 
  5578  1ECC                     	;# 
  5579  1ECC                     	;# 
  5580  1F10                     	;# 
  5581  1F11                     	;# 
  5582  1F12                     	;# 
  5583  1F14                     	;# 
  5584  1F15                     	;# 
  5585  1F1C                     	;# 
  5586  1F1D                     	;# 
  5587  1F1E                     	;# 
  5588  1F1F                     	;# 
  5589  1F20                     	;# 
  5590  1F21                     	;# 
  5591  1F22                     	;# 
  5592  1F23                     	;# 
  5593  1F24                     	;# 
  5594  1F25                     	;# 
  5595  1F26                     	;# 
  5596  1F27                     	;# 
  5597  1F38                     	;# 
  5598  1F39                     	;# 
  5599  1F3A                     	;# 
  5600  1F3B                     	;# 
  5601  1F3C                     	;# 
  5602  1F3D                     	;# 
  5603  1F3E                     	;# 
  5604  1F3F                     	;# 
  5605  1F43                     	;# 
  5606  1F44                     	;# 
  5607  1F45                     	;# 
  5608  1F46                     	;# 
  5609  1F47                     	;# 
  5610  1F48                     	;# 
  5611  1F49                     	;# 
  5612  1F4A                     	;# 
  5613  1F4E                     	;# 
  5614  1F4F                     	;# 
  5615  1F50                     	;# 
  5616  1F51                     	;# 
  5617  1F52                     	;# 
  5618  1F53                     	;# 
  5619  1F54                     	;# 
  5620  1F55                     	;# 
  5621  1FE4                     	;# 
  5622  1FE5                     	;# 
  5623  1FE6                     	;# 
  5624  1FE7                     	;# 
  5625  1FE8                     	;# 
  5626  1FE8                     	;# 
  5627  1FE9                     	;# 
  5628  1FEA                     	;# 
  5629  1FEB                     	;# 
  5630  1FED                     	;# 
  5631  1FEE                     	;# 
  5632  1FEF                     	;# 
  5633  0000                     	;# 
  5634  0001                     	;# 
  5635  0002                     	;# 
  5636  0003                     	;# 
  5637  0004                     	;# 
  5638  0005                     	;# 
  5639  0006                     	;# 
  5640  0007                     	;# 
  5641  0008                     	;# 
  5642  0009                     	;# 
  5643  000A                     	;# 
  5644  000B                     	;# 
  5645  000C                     	;# 
  5646  000D                     	;# 
  5647  000E                     	;# 
  5648  0012                     	;# 
  5649  0013                     	;# 
  5650  0014                     	;# 
  5651  0018                     	;# 
  5652  0019                     	;# 
  5653  001A                     	;# 
  5654  008C                     	;# 
  5655  008C                     	;# 
  5656  008D                     	;# 
  5657  008E                     	;# 
  5658  008E                     	;# 
  5659  008F                     	;# 
  5660  0090                     	;# 
  5661  0090                     	;# 
  5662  0091                     	;# 
  5663  0092                     	;# 
  5664  0092                     	;# 
  5665  0093                     	;# 
  5666  0094                     	;# 
  5667  0094                     	;# 
  5668  0095                     	;# 
  5669  0096                     	;# 
  5670  0096                     	;# 
  5671  0097                     	;# 
  5672  0098                     	;# 
  5673  0099                     	;# 
  5674  009A                     	;# 
  5675  009B                     	;# 
  5676  009B                     	;# 
  5677  009C                     	;# 
  5678  009D                     	;# 
  5679  009D                     	;# 
  5680  009E                     	;# 
  5681  009F                     	;# 
  5682  010C                     	;# 
  5683  010C                     	;# 
  5684  010D                     	;# 
  5685  010E                     	;# 
  5686  010F                     	;# 
  5687  010F                     	;# 
  5688  0110                     	;# 
  5689  0111                     	;# 
  5690  0112                     	;# 
  5691  0113                     	;# 
  5692  0114                     	;# 
  5693  0115                     	;# 
  5694  0116                     	;# 
  5695  0117                     	;# 
  5696  0118                     	;# 
  5697  0119                     	;# 
  5698  0119                     	;# 
  5699  0119                     	;# 
  5700  011A                     	;# 
  5701  011A                     	;# 
  5702  011A                     	;# 
  5703  011B                     	;# 
  5704  011B                     	;# 
  5705  011B                     	;# 
  5706  011B                     	;# 
  5707  011B                     	;# 
  5708  011C                     	;# 
  5709  011C                     	;# 
  5710  011C                     	;# 
  5711  011D                     	;# 
  5712  011D                     	;# 
  5713  011D                     	;# 
  5714  011E                     	;# 
  5715  011E                     	;# 
  5716  011E                     	;# 
  5717  011F                     	;# 
  5718  011F                     	;# 
  5719  011F                     	;# 
  5720  011F                     	;# 
  5721  011F                     	;# 
  5722  018C                     	;# 
  5723  018D                     	;# 
  5724  018E                     	;# 
  5725  018F                     	;# 
  5726  0190                     	;# 
  5727  0191                     	;# 
  5728  0192                     	;# 
  5729  0196                     	;# 
  5730  0197                     	;# 
  5731  0198                     	;# 
  5732  0199                     	;# 
  5733  019A                     	;# 
  5734  019B                     	;# 
  5735  019C                     	;# 
  5736  020C                     	;# 
  5737  020D                     	;# 
  5738  020E                     	;# 
  5739  020E                     	;# 
  5740  020F                     	;# 
  5741  020F                     	;# 
  5742  0210                     	;# 
  5743  0210                     	;# 
  5744  0211                     	;# 
  5745  0211                     	;# 
  5746  0212                     	;# 
  5747  0213                     	;# 
  5748  0214                     	;# 
  5749  0214                     	;# 
  5750  0215                     	;# 
  5751  0215                     	;# 
  5752  0216                     	;# 
  5753  0216                     	;# 
  5754  0217                     	;# 
  5755  0217                     	;# 
  5756  0218                     	;# 
  5757  0219                     	;# 
  5758  021A                     	;# 
  5759  021A                     	;# 
  5760  021B                     	;# 
  5761  021B                     	;# 
  5762  021C                     	;# 
  5763  021C                     	;# 
  5764  021D                     	;# 
  5765  021D                     	;# 
  5766  021E                     	;# 
  5767  021F                     	;# 
  5768  028C                     	;# 
  5769  028C                     	;# 
  5770  028D                     	;# 
  5771  028D                     	;# 
  5772  028E                     	;# 
  5773  028F                     	;# 
  5774  0290                     	;# 
  5775  0291                     	;# 
  5776  0292                     	;# 
  5777  0292                     	;# 
  5778  0293                     	;# 
  5779  0293                     	;# 
  5780  0294                     	;# 
  5781  0295                     	;# 
  5782  0296                     	;# 
  5783  0297                     	;# 
  5784  0298                     	;# 
  5785  0298                     	;# 
  5786  0299                     	;# 
  5787  0299                     	;# 
  5788  029A                     	;# 
  5789  029B                     	;# 
  5790  029C                     	;# 
  5791  029D                     	;# 
  5792  029F                     	;# 
  5793  030C                     	;# 
  5794  030C                     	;# 
  5795  030D                     	;# 
  5796  030E                     	;# 
  5797  030F                     	;# 
  5798  0310                     	;# 
  5799  0310                     	;# 
  5800  0311                     	;# 
  5801  0312                     	;# 
  5802  0313                     	;# 
  5803  0314                     	;# 
  5804  0314                     	;# 
  5805  0315                     	;# 
  5806  0316                     	;# 
  5807  0317                     	;# 
  5808  0318                     	;# 
  5809  0318                     	;# 
  5810  0319                     	;# 
  5811  031A                     	;# 
  5812  031B                     	;# 
  5813  038C                     	;# 
  5814  038C                     	;# 
  5815  038D                     	;# 
  5816  038E                     	;# 
  5817  0390                     	;# 
  5818  0390                     	;# 
  5819  0391                     	;# 
  5820  0392                     	;# 
  5821  048C                     	;# 
  5822  048C                     	;# 
  5823  048D                     	;# 
  5824  048E                     	;# 
  5825  048F                     	;# 
  5826  048F                     	;# 
  5827  0490                     	;# 
  5828  0491                     	;# 
  5829  0492                     	;# 
  5830  0492                     	;# 
  5831  0493                     	;# 
  5832  0494                     	;# 
  5833  0495                     	;# 
  5834  0495                     	;# 
  5835  0496                     	;# 
  5836  0497                     	;# 
  5837  0498                     	;# 
  5838  0499                     	;# 
  5839  049A                     	;# 
  5840  049B                     	;# 
  5841  049C                     	;# 
  5842  049D                     	;# 
  5843  058C                     	;# 
  5844  058C                     	;# 
  5845  058D                     	;# 
  5846  058E                     	;# 
  5847  058F                     	;# 
  5848  058F                     	;# 
  5849  0590                     	;# 
  5850  0591                     	;# 
  5851  0592                     	;# 
  5852  0593                     	;# 
  5853  059C                     	;# 
  5854  059C                     	;# 
  5855  059D                     	;# 
  5856  059D                     	;# 
  5857  059E                     	;# 
  5858  059F                     	;# 
  5859  060C                     	;# 
  5860  060C                     	;# 
  5861  060D                     	;# 
  5862  060D                     	;# 
  5863  060E                     	;# 
  5864  060F                     	;# 
  5865  0610                     	;# 
  5866  0611                     	;# 
  5867  0612                     	;# 
  5868  0613                     	;# 
  5869  0614                     	;# 
  5870  0616                     	;# 
  5871  0616                     	;# 
  5872  0617                     	;# 
  5873  0617                     	;# 
  5874  0618                     	;# 
  5875  0619                     	;# 
  5876  061A                     	;# 
  5877  061B                     	;# 
  5878  061C                     	;# 
  5879  061D                     	;# 
  5880  061E                     	;# 
  5881  070C                     	;# 
  5882  070D                     	;# 
  5883  070E                     	;# 
  5884  070F                     	;# 
  5885  0710                     	;# 
  5886  0711                     	;# 
  5887  0712                     	;# 
  5888  0713                     	;# 
  5889  0714                     	;# 
  5890  0716                     	;# 
  5891  0717                     	;# 
  5892  0718                     	;# 
  5893  0719                     	;# 
  5894  071A                     	;# 
  5895  071B                     	;# 
  5896  071C                     	;# 
  5897  071D                     	;# 
  5898  071E                     	;# 
  5899  0796                     	;# 
  5900  0797                     	;# 
  5901  0798                     	;# 
  5902  0799                     	;# 
  5903  079A                     	;# 
  5904  079B                     	;# 
  5905  079C                     	;# 
  5906  079D                     	;# 
  5907  080C                     	;# 
  5908  080D                     	;# 
  5909  080E                     	;# 
  5910  080F                     	;# 
  5911  0810                     	;# 
  5912  0811                     	;# 
  5913  0812                     	;# 
  5914  0813                     	;# 
  5915  0814                     	;# 
  5916  081A                     	;# 
  5917  081A                     	;# 
  5918  081B                     	;# 
  5919  081C                     	;# 
  5920  081C                     	;# 
  5921  081D                     	;# 
  5922  081E                     	;# 
  5923  081F                     	;# 
  5924  088C                     	;# 
  5925  088D                     	;# 
  5926  088E                     	;# 
  5927  088F                     	;# 
  5928  0890                     	;# 
  5929  0891                     	;# 
  5930  0892                     	;# 
  5931  0893                     	;# 
  5932  0895                     	;# 
  5933  0896                     	;# 
  5934  0897                     	;# 
  5935  0898                     	;# 
  5936  0899                     	;# 
  5937  089A                     	;# 
  5938  089B                     	;# 
  5939  090C                     	;# 
  5940  090E                     	;# 
  5941  090F                     	;# 
  5942  091F                     	;# 
  5943  098F                     	;# 
  5944  098F                     	;# 
  5945  0990                     	;# 
  5946  0991                     	;# 
  5947  0992                     	;# 
  5948  0993                     	;# 
  5949  0994                     	;# 
  5950  0995                     	;# 
  5951  0996                     	;# 
  5952  0997                     	;# 
  5953  1E0F                     	;# 
  5954  1E10                     	;# 
  5955  1E11                     	;# 
  5956  1E12                     	;# 
  5957  1E13                     	;# 
  5958  1E14                     	;# 
  5959  1E15                     	;# 
  5960  1E16                     	;# 
  5961  1E17                     	;# 
  5962  1E18                     	;# 
  5963  1E19                     	;# 
  5964  1E1A                     	;# 
  5965  1E1B                     	;# 
  5966  1E1C                     	;# 
  5967  1E1D                     	;# 
  5968  1E1E                     	;# 
  5969  1E1F                     	;# 
  5970  1E20                     	;# 
  5971  1E21                     	;# 
  5972  1E22                     	;# 
  5973  1E23                     	;# 
  5974  1E24                     	;# 
  5975  1E25                     	;# 
  5976  1E26                     	;# 
  5977  1E27                     	;# 
  5978  1E28                     	;# 
  5979  1E29                     	;# 
  5980  1E2A                     	;# 
  5981  1E2B                     	;# 
  5982  1E2C                     	;# 
  5983  1E2D                     	;# 
  5984  1E2E                     	;# 
  5985  1E2F                     	;# 
  5986  1E30                     	;# 
  5987  1E31                     	;# 
  5988  1E32                     	;# 
  5989  1E33                     	;# 
  5990  1E34                     	;# 
  5991  1E35                     	;# 
  5992  1E36                     	;# 
  5993  1E37                     	;# 
  5994  1E8F                     	;# 
  5995  1E90                     	;# 
  5996  1E91                     	;# 
  5997  1E92                     	;# 
  5998  1E93                     	;# 
  5999  1E94                     	;# 
  6000  1E95                     	;# 
  6001  1E96                     	;# 
  6002  1E97                     	;# 
  6003  1E9C                     	;# 
  6004  1E9D                     	;# 
  6005  1E9E                     	;# 
  6006  1EA1                     	;# 
  6007  1EA2                     	;# 
  6008  1EA3                     	;# 
  6009  1EA4                     	;# 
  6010  1EA9                     	;# 
  6011  1EAA                     	;# 
  6012  1EB1                     	;# 
  6013  1EB2                     	;# 
  6014  1EB8                     	;# 
  6015  1EB9                     	;# 
  6016  1EBA                     	;# 
  6017  1EBB                     	;# 
  6018  1EBC                     	;# 
  6019  1EBD                     	;# 
  6020  1EBE                     	;# 
  6021  1EC3                     	;# 
  6022  1EC5                     	;# 
  6023  1EC6                     	;# 
  6024  1EC7                     	;# 
  6025  1EC8                     	;# 
  6026  1EC9                     	;# 
  6027  1ECA                     	;# 
  6028  1ECB                     	;# 
  6029  1ECB                     	;# 
  6030  1ECB                     	;# 
  6031  1ECC                     	;# 
  6032  1ECC                     	;# 
  6033  1ECC                     	;# 
  6034  1F10                     	;# 
  6035  1F11                     	;# 
  6036  1F12                     	;# 
  6037  1F14                     	;# 
  6038  1F15                     	;# 
  6039  1F1C                     	;# 
  6040  1F1D                     	;# 
  6041  1F1E                     	;# 
  6042  1F1F                     	;# 
  6043  1F20                     	;# 
  6044  1F21                     	;# 
  6045  1F22                     	;# 
  6046  1F23                     	;# 
  6047  1F24                     	;# 
  6048  1F25                     	;# 
  6049  1F26                     	;# 
  6050  1F27                     	;# 
  6051  1F38                     	;# 
  6052  1F39                     	;# 
  6053  1F3A                     	;# 
  6054  1F3B                     	;# 
  6055  1F3C                     	;# 
  6056  1F3D                     	;# 
  6057  1F3E                     	;# 
  6058  1F3F                     	;# 
  6059  1F43                     	;# 
  6060  1F44                     	;# 
  6061  1F45                     	;# 
  6062  1F46                     	;# 
  6063  1F47                     	;# 
  6064  1F48                     	;# 
  6065  1F49                     	;# 
  6066  1F4A                     	;# 
  6067  1F4E                     	;# 
  6068  1F4F                     	;# 
  6069  1F50                     	;# 
  6070  1F51                     	;# 
  6071  1F52                     	;# 
  6072  1F53                     	;# 
  6073  1F54                     	;# 
  6074  1F55                     	;# 
  6075  1FE4                     	;# 
  6076  1FE5                     	;# 
  6077  1FE6                     	;# 
  6078  1FE7                     	;# 
  6079  1FE8                     	;# 
  6080  1FE8                     	;# 
  6081  1FE9                     	;# 
  6082  1FEA                     	;# 
  6083  1FEB                     	;# 
  6084  1FED                     	;# 
  6085  1FEE                     	;# 
  6086  1FEF                     	;# 
  6087  0000                     	;# 
  6088  0001                     	;# 
  6089  0002                     	;# 
  6090  0003                     	;# 
  6091  0004                     	;# 
  6092  0005                     	;# 
  6093  0006                     	;# 
  6094  0007                     	;# 
  6095  0008                     	;# 
  6096  0009                     	;# 
  6097  000A                     	;# 
  6098  000B                     	;# 
  6099  000C                     	;# 
  6100  000D                     	;# 
  6101  000E                     	;# 
  6102  0012                     	;# 
  6103  0013                     	;# 
  6104  0014                     	;# 
  6105  0018                     	;# 
  6106  0019                     	;# 
  6107  001A                     	;# 
  6108  008C                     	;# 
  6109  008C                     	;# 
  6110  008D                     	;# 
  6111  008E                     	;# 
  6112  008E                     	;# 
  6113  008F                     	;# 
  6114  0090                     	;# 
  6115  0090                     	;# 
  6116  0091                     	;# 
  6117  0092                     	;# 
  6118  0092                     	;# 
  6119  0093                     	;# 
  6120  0094                     	;# 
  6121  0094                     	;# 
  6122  0095                     	;# 
  6123  0096                     	;# 
  6124  0096                     	;# 
  6125  0097                     	;# 
  6126  0098                     	;# 
  6127  0099                     	;# 
  6128  009A                     	;# 
  6129  009B                     	;# 
  6130  009B                     	;# 
  6131  009C                     	;# 
  6132  009D                     	;# 
  6133  009D                     	;# 
  6134  009E                     	;# 
  6135  009F                     	;# 
  6136  010C                     	;# 
  6137  010C                     	;# 
  6138  010D                     	;# 
  6139  010E                     	;# 
  6140  010F                     	;# 
  6141  010F                     	;# 
  6142  0110                     	;# 
  6143  0111                     	;# 
  6144  0112                     	;# 
  6145  0113                     	;# 
  6146  0114                     	;# 
  6147  0115                     	;# 
  6148  0116                     	;# 
  6149  0117                     	;# 
  6150  0118                     	;# 
  6151  0119                     	;# 
  6152  0119                     	;# 
  6153  0119                     	;# 
  6154  011A                     	;# 
  6155  011A                     	;# 
  6156  011A                     	;# 
  6157  011B                     	;# 
  6158  011B                     	;# 
  6159  011B                     	;# 
  6160  011B                     	;# 
  6161  011B                     	;# 
  6162  011C                     	;# 
  6163  011C                     	;# 
  6164  011C                     	;# 
  6165  011D                     	;# 
  6166  011D                     	;# 
  6167  011D                     	;# 
  6168  011E                     	;# 
  6169  011E                     	;# 
  6170  011E                     	;# 
  6171  011F                     	;# 
  6172  011F                     	;# 
  6173  011F                     	;# 
  6174  011F                     	;# 
  6175  011F                     	;# 
  6176  018C                     	;# 
  6177  018D                     	;# 
  6178  018E                     	;# 
  6179  018F                     	;# 
  6180  0190                     	;# 
  6181  0191                     	;# 
  6182  0192                     	;# 
  6183  0196                     	;# 
  6184  0197                     	;# 
  6185  0198                     	;# 
  6186  0199                     	;# 
  6187  019A                     	;# 
  6188  019B                     	;# 
  6189  019C                     	;# 
  6190  020C                     	;# 
  6191  020D                     	;# 
  6192  020E                     	;# 
  6193  020E                     	;# 
  6194  020F                     	;# 
  6195  020F                     	;# 
  6196  0210                     	;# 
  6197  0210                     	;# 
  6198  0211                     	;# 
  6199  0211                     	;# 
  6200  0212                     	;# 
  6201  0213                     	;# 
  6202  0214                     	;# 
  6203  0214                     	;# 
  6204  0215                     	;# 
  6205  0215                     	;# 
  6206  0216                     	;# 
  6207  0216                     	;# 
  6208  0217                     	;# 
  6209  0217                     	;# 
  6210  0218                     	;# 
  6211  0219                     	;# 
  6212  021A                     	;# 
  6213  021A                     	;# 
  6214  021B                     	;# 
  6215  021B                     	;# 
  6216  021C                     	;# 
  6217  021C                     	;# 
  6218  021D                     	;# 
  6219  021D                     	;# 
  6220  021E                     	;# 
  6221  021F                     	;# 
  6222  028C                     	;# 
  6223  028C                     	;# 
  6224  028D                     	;# 
  6225  028D                     	;# 
  6226  028E                     	;# 
  6227  028F                     	;# 
  6228  0290                     	;# 
  6229  0291                     	;# 
  6230  0292                     	;# 
  6231  0292                     	;# 
  6232  0293                     	;# 
  6233  0293                     	;# 
  6234  0294                     	;# 
  6235  0295                     	;# 
  6236  0296                     	;# 
  6237  0297                     	;# 
  6238  0298                     	;# 
  6239  0298                     	;# 
  6240  0299                     	;# 
  6241  0299                     	;# 
  6242  029A                     	;# 
  6243  029B                     	;# 
  6244  029C                     	;# 
  6245  029D                     	;# 
  6246  029F                     	;# 
  6247  030C                     	;# 
  6248  030C                     	;# 
  6249  030D                     	;# 
  6250  030E                     	;# 
  6251  030F                     	;# 
  6252  0310                     	;# 
  6253  0310                     	;# 
  6254  0311                     	;# 
  6255  0312                     	;# 
  6256  0313                     	;# 
  6257  0314                     	;# 
  6258  0314                     	;# 
  6259  0315                     	;# 
  6260  0316                     	;# 
  6261  0317                     	;# 
  6262  0318                     	;# 
  6263  0318                     	;# 
  6264  0319                     	;# 
  6265  031A                     	;# 
  6266  031B                     	;# 
  6267  038C                     	;# 
  6268  038C                     	;# 
  6269  038D                     	;# 
  6270  038E                     	;# 
  6271  0390                     	;# 
  6272  0390                     	;# 
  6273  0391                     	;# 
  6274  0392                     	;# 
  6275  048C                     	;# 
  6276  048C                     	;# 
  6277  048D                     	;# 
  6278  048E                     	;# 
  6279  048F                     	;# 
  6280  048F                     	;# 
  6281  0490                     	;# 
  6282  0491                     	;# 
  6283  0492                     	;# 
  6284  0492                     	;# 
  6285  0493                     	;# 
  6286  0494                     	;# 
  6287  0495                     	;# 
  6288  0495                     	;# 
  6289  0496                     	;# 
  6290  0497                     	;# 
  6291  0498                     	;# 
  6292  0499                     	;# 
  6293  049A                     	;# 
  6294  049B                     	;# 
  6295  049C                     	;# 
  6296  049D                     	;# 
  6297  058C                     	;# 
  6298  058C                     	;# 
  6299  058D                     	;# 
  6300  058E                     	;# 
  6301  058F                     	;# 
  6302  058F                     	;# 
  6303  0590                     	;# 
  6304  0591                     	;# 
  6305  0592                     	;# 
  6306  0593                     	;# 
  6307  059C                     	;# 
  6308  059C                     	;# 
  6309  059D                     	;# 
  6310  059D                     	;# 
  6311  059E                     	;# 
  6312  059F                     	;# 
  6313  060C                     	;# 
  6314  060C                     	;# 
  6315  060D                     	;# 
  6316  060D                     	;# 
  6317  060E                     	;# 
  6318  060F                     	;# 
  6319  0610                     	;# 
  6320  0611                     	;# 
  6321  0612                     	;# 
  6322  0613                     	;# 
  6323  0614                     	;# 
  6324  0616                     	;# 
  6325  0616                     	;# 
  6326  0617                     	;# 
  6327  0617                     	;# 
  6328  0618                     	;# 
  6329  0619                     	;# 
  6330  061A                     	;# 
  6331  061B                     	;# 
  6332  061C                     	;# 
  6333  061D                     	;# 
  6334  061E                     	;# 
  6335  070C                     	;# 
  6336  070D                     	;# 
  6337  070E                     	;# 
  6338  070F                     	;# 
  6339  0710                     	;# 
  6340  0711                     	;# 
  6341  0712                     	;# 
  6342  0713                     	;# 
  6343  0714                     	;# 
  6344  0716                     	;# 
  6345  0717                     	;# 
  6346  0718                     	;# 
  6347  0719                     	;# 
  6348  071A                     	;# 
  6349  071B                     	;# 
  6350  071C                     	;# 
  6351  071D                     	;# 
  6352  071E                     	;# 
  6353  0796                     	;# 
  6354  0797                     	;# 
  6355  0798                     	;# 
  6356  0799                     	;# 
  6357  079A                     	;# 
  6358  079B                     	;# 
  6359  079C                     	;# 
  6360  079D                     	;# 
  6361  080C                     	;# 
  6362  080D                     	;# 
  6363  080E                     	;# 
  6364  080F                     	;# 
  6365  0810                     	;# 
  6366  0811                     	;# 
  6367  0812                     	;# 
  6368  0813                     	;# 
  6369  0814                     	;# 
  6370  081A                     	;# 
  6371  081A                     	;# 
  6372  081B                     	;# 
  6373  081C                     	;# 
  6374  081C                     	;# 
  6375  081D                     	;# 
  6376  081E                     	;# 
  6377  081F                     	;# 
  6378  088C                     	;# 
  6379  088D                     	;# 
  6380  088E                     	;# 
  6381  088F                     	;# 
  6382  0890                     	;# 
  6383  0891                     	;# 
  6384  0892                     	;# 
  6385  0893                     	;# 
  6386  0895                     	;# 
  6387  0896                     	;# 
  6388  0897                     	;# 
  6389  0898                     	;# 
  6390  0899                     	;# 
  6391  089A                     	;# 
  6392  089B                     	;# 
  6393  090C                     	;# 
  6394  090E                     	;# 
  6395  090F                     	;# 
  6396  091F                     	;# 
  6397  098F                     	;# 
  6398  098F                     	;# 
  6399  0990                     	;# 
  6400  0991                     	;# 
  6401  0992                     	;# 
  6402  0993                     	;# 
  6403  0994                     	;# 
  6404  0995                     	;# 
  6405  0996                     	;# 
  6406  0997                     	;# 
  6407  1E0F                     	;# 
  6408  1E10                     	;# 
  6409  1E11                     	;# 
  6410  1E12                     	;# 
  6411  1E13                     	;# 
  6412  1E14                     	;# 
  6413  1E15                     	;# 
  6414  1E16                     	;# 
  6415  1E17                     	;# 
  6416  1E18                     	;# 
  6417  1E19                     	;# 
  6418  1E1A                     	;# 
  6419  1E1B                     	;# 
  6420  1E1C                     	;# 
  6421  1E1D                     	;# 
  6422  1E1E                     	;# 
  6423  1E1F                     	;# 
  6424  1E20                     	;# 
  6425  1E21                     	;# 
  6426  1E22                     	;# 
  6427  1E23                     	;# 
  6428  1E24                     	;# 
  6429  1E25                     	;# 
  6430  1E26                     	;# 
  6431  1E27                     	;# 
  6432  1E28                     	;# 
  6433  1E29                     	;# 
  6434  1E2A                     	;# 
  6435  1E2B                     	;# 
  6436  1E2C                     	;# 
  6437  1E2D                     	;# 
  6438  1E2E                     	;# 
  6439  1E2F                     	;# 
  6440  1E30                     	;# 
  6441  1E31                     	;# 
  6442  1E32                     	;# 
  6443  1E33                     	;# 
  6444  1E34                     	;# 
  6445  1E35                     	;# 
  6446  1E36                     	;# 
  6447  1E37                     	;# 
  6448  1E8F                     	;# 
  6449  1E90                     	;# 
  6450  1E91                     	;# 
  6451  1E92                     	;# 
  6452  1E93                     	;# 
  6453  1E94                     	;# 
  6454  1E95                     	;# 
  6455  1E96                     	;# 
  6456  1E97                     	;# 
  6457  1E9C                     	;# 
  6458  1E9D                     	;# 
  6459  1E9E                     	;# 
  6460  1EA1                     	;# 
  6461  1EA2                     	;# 
  6462  1EA3                     	;# 
  6463  1EA4                     	;# 
  6464  1EA9                     	;# 
  6465  1EAA                     	;# 
  6466  1EB1                     	;# 
  6467  1EB2                     	;# 
  6468  1EB8                     	;# 
  6469  1EB9                     	;# 
  6470  1EBA                     	;# 
  6471  1EBB                     	;# 
  6472  1EBC                     	;# 
  6473  1EBD                     	;# 
  6474  1EBE                     	;# 
  6475  1EC3                     	;# 
  6476  1EC5                     	;# 
  6477  1EC6                     	;# 
  6478  1EC7                     	;# 
  6479  1EC8                     	;# 
  6480  1EC9                     	;# 
  6481  1ECA                     	;# 
  6482  1ECB                     	;# 
  6483  1ECB                     	;# 
  6484  1ECB                     	;# 
  6485  1ECC                     	;# 
  6486  1ECC                     	;# 
  6487  1ECC                     	;# 
  6488  1F10                     	;# 
  6489  1F11                     	;# 
  6490  1F12                     	;# 
  6491  1F14                     	;# 
  6492  1F15                     	;# 
  6493  1F1C                     	;# 
  6494  1F1D                     	;# 
  6495  1F1E                     	;# 
  6496  1F1F                     	;# 
  6497  1F20                     	;# 
  6498  1F21                     	;# 
  6499  1F22                     	;# 
  6500  1F23                     	;# 
  6501  1F24                     	;# 
  6502  1F25                     	;# 
  6503  1F26                     	;# 
  6504  1F27                     	;# 
  6505  1F38                     	;# 
  6506  1F39                     	;# 
  6507  1F3A                     	;# 
  6508  1F3B                     	;# 
  6509  1F3C                     	;# 
  6510  1F3D                     	;# 
  6511  1F3E                     	;# 
  6512  1F3F                     	;# 
  6513  1F43                     	;# 
  6514  1F44                     	;# 
  6515  1F45                     	;# 
  6516  1F46                     	;# 
  6517  1F47                     	;# 
  6518  1F48                     	;# 
  6519  1F49                     	;# 
  6520  1F4A                     	;# 
  6521  1F4E                     	;# 
  6522  1F4F                     	;# 
  6523  1F50                     	;# 
  6524  1F51                     	;# 
  6525  1F52                     	;# 
  6526  1F53                     	;# 
  6527  1F54                     	;# 
  6528  1F55                     	;# 
  6529  1FE4                     	;# 
  6530  1FE5                     	;# 
  6531  1FE6                     	;# 
  6532  1FE7                     	;# 
  6533  1FE8                     	;# 
  6534  1FE8                     	;# 
  6535  1FE9                     	;# 
  6536  1FEA                     	;# 
  6537  1FEB                     	;# 
  6538  1FED                     	;# 
  6539  1FEE                     	;# 
  6540  1FEF                     	;# 
  6541  0000                     	;# 
  6542  0001                     	;# 
  6543  0002                     	;# 
  6544  0003                     	;# 
  6545  0004                     	;# 
  6546  0005                     	;# 
  6547  0006                     	;# 
  6548  0007                     	;# 
  6549  0008                     	;# 
  6550  0009                     	;# 
  6551  000A                     	;# 
  6552  000B                     	;# 
  6553  000C                     	;# 
  6554  000D                     	;# 
  6555  000E                     	;# 
  6556  0012                     	;# 
  6557  0013                     	;# 
  6558  0014                     	;# 
  6559  0018                     	;# 
  6560  0019                     	;# 
  6561  001A                     	;# 
  6562  008C                     	;# 
  6563  008C                     	;# 
  6564  008D                     	;# 
  6565  008E                     	;# 
  6566  008E                     	;# 
  6567  008F                     	;# 
  6568  0090                     	;# 
  6569  0090                     	;# 
  6570  0091                     	;# 
  6571  0092                     	;# 
  6572  0092                     	;# 
  6573  0093                     	;# 
  6574  0094                     	;# 
  6575  0094                     	;# 
  6576  0095                     	;# 
  6577  0096                     	;# 
  6578  0096                     	;# 
  6579  0097                     	;# 
  6580  0098                     	;# 
  6581  0099                     	;# 
  6582  009A                     	;# 
  6583  009B                     	;# 
  6584  009B                     	;# 
  6585  009C                     	;# 
  6586  009D                     	;# 
  6587  009D                     	;# 
  6588  009E                     	;# 
  6589  009F                     	;# 
  6590  010C                     	;# 
  6591  010C                     	;# 
  6592  010D                     	;# 
  6593  010E                     	;# 
  6594  010F                     	;# 
  6595  010F                     	;# 
  6596  0110                     	;# 
  6597  0111                     	;# 
  6598  0112                     	;# 
  6599  0113                     	;# 
  6600  0114                     	;# 
  6601  0115                     	;# 
  6602  0116                     	;# 
  6603  0117                     	;# 
  6604  0118                     	;# 
  6605  0119                     	;# 
  6606  0119                     	;# 
  6607  0119                     	;# 
  6608  011A                     	;# 
  6609  011A                     	;# 
  6610  011A                     	;# 
  6611  011B                     	;# 
  6612  011B                     	;# 
  6613  011B                     	;# 
  6614  011B                     	;# 
  6615  011B                     	;# 
  6616  011C                     	;# 
  6617  011C                     	;# 
  6618  011C                     	;# 
  6619  011D                     	;# 
  6620  011D                     	;# 
  6621  011D                     	;# 
  6622  011E                     	;# 
  6623  011E                     	;# 
  6624  011E                     	;# 
  6625  011F                     	;# 
  6626  011F                     	;# 
  6627  011F                     	;# 
  6628  011F                     	;# 
  6629  011F                     	;# 
  6630  018C                     	;# 
  6631  018D                     	;# 
  6632  018E                     	;# 
  6633  018F                     	;# 
  6634  0190                     	;# 
  6635  0191                     	;# 
  6636  0192                     	;# 
  6637  0196                     	;# 
  6638  0197                     	;# 
  6639  0198                     	;# 
  6640  0199                     	;# 
  6641  019A                     	;# 
  6642  019B                     	;# 
  6643  019C                     	;# 
  6644  020C                     	;# 
  6645  020D                     	;# 
  6646  020E                     	;# 
  6647  020E                     	;# 
  6648  020F                     	;# 
  6649  020F                     	;# 
  6650  0210                     	;# 
  6651  0210                     	;# 
  6652  0211                     	;# 
  6653  0211                     	;# 
  6654  0212                     	;# 
  6655  0213                     	;# 
  6656  0214                     	;# 
  6657  0214                     	;# 
  6658  0215                     	;# 
  6659  0215                     	;# 
  6660  0216                     	;# 
  6661  0216                     	;# 
  6662  0217                     	;# 
  6663  0217                     	;# 
  6664  0218                     	;# 
  6665  0219                     	;# 
  6666  021A                     	;# 
  6667  021A                     	;# 
  6668  021B                     	;# 
  6669  021B                     	;# 
  6670  021C                     	;# 
  6671  021C                     	;# 
  6672  021D                     	;# 
  6673  021D                     	;# 
  6674  021E                     	;# 
  6675  021F                     	;# 
  6676  028C                     	;# 
  6677  028C                     	;# 
  6678  028D                     	;# 
  6679  028D                     	;# 
  6680  028E                     	;# 
  6681  028F                     	;# 
  6682  0290                     	;# 
  6683  0291                     	;# 
  6684  0292                     	;# 
  6685  0292                     	;# 
  6686  0293                     	;# 
  6687  0293                     	;# 
  6688  0294                     	;# 
  6689  0295                     	;# 
  6690  0296                     	;# 
  6691  0297                     	;# 
  6692  0298                     	;# 
  6693  0298                     	;# 
  6694  0299                     	;# 
  6695  0299                     	;# 
  6696  029A                     	;# 
  6697  029B                     	;# 
  6698  029C                     	;# 
  6699  029D                     	;# 
  6700  029F                     	;# 
  6701  030C                     	;# 
  6702  030C                     	;# 
  6703  030D                     	;# 
  6704  030E                     	;# 
  6705  030F                     	;# 
  6706  0310                     	;# 
  6707  0310                     	;# 
  6708  0311                     	;# 
  6709  0312                     	;# 
  6710  0313                     	;# 
  6711  0314                     	;# 
  6712  0314                     	;# 
  6713  0315                     	;# 
  6714  0316                     	;# 
  6715  0317                     	;# 
  6716  0318                     	;# 
  6717  0318                     	;# 
  6718  0319                     	;# 
  6719  031A                     	;# 
  6720  031B                     	;# 
  6721  038C                     	;# 
  6722  038C                     	;# 
  6723  038D                     	;# 
  6724  038E                     	;# 
  6725  0390                     	;# 
  6726  0390                     	;# 
  6727  0391                     	;# 
  6728  0392                     	;# 
  6729  048C                     	;# 
  6730  048C                     	;# 
  6731  048D                     	;# 
  6732  048E                     	;# 
  6733  048F                     	;# 
  6734  048F                     	;# 
  6735  0490                     	;# 
  6736  0491                     	;# 
  6737  0492                     	;# 
  6738  0492                     	;# 
  6739  0493                     	;# 
  6740  0494                     	;# 
  6741  0495                     	;# 
  6742  0495                     	;# 
  6743  0496                     	;# 
  6744  0497                     	;# 
  6745  0498                     	;# 
  6746  0499                     	;# 
  6747  049A                     	;# 
  6748  049B                     	;# 
  6749  049C                     	;# 
  6750  049D                     	;# 
  6751  058C                     	;# 
  6752  058C                     	;# 
  6753  058D                     	;# 
  6754  058E                     	;# 
  6755  058F                     	;# 
  6756  058F                     	;# 
  6757  0590                     	;# 
  6758  0591                     	;# 
  6759  0592                     	;# 
  6760  0593                     	;# 
  6761  059C                     	;# 
  6762  059C                     	;# 
  6763  059D                     	;# 
  6764  059D                     	;# 
  6765  059E                     	;# 
  6766  059F                     	;# 
  6767  060C                     	;# 
  6768  060C                     	;# 
  6769  060D                     	;# 
  6770  060D                     	;# 
  6771  060E                     	;# 
  6772  060F                     	;# 
  6773  0610                     	;# 
  6774  0611                     	;# 
  6775  0612                     	;# 
  6776  0613                     	;# 
  6777  0614                     	;# 
  6778  0616                     	;# 
  6779  0616                     	;# 
  6780  0617                     	;# 
  6781  0617                     	;# 
  6782  0618                     	;# 
  6783  0619                     	;# 
  6784  061A                     	;# 
  6785  061B                     	;# 
  6786  061C                     	;# 
  6787  061D                     	;# 
  6788  061E                     	;# 
  6789  070C                     	;# 
  6790  070D                     	;# 
  6791  070E                     	;# 
  6792  070F                     	;# 
  6793  0710                     	;# 
  6794  0711                     	;# 
  6795  0712                     	;# 
  6796  0713                     	;# 
  6797  0714                     	;# 
  6798  0716                     	;# 
  6799  0717                     	;# 
  6800  0718                     	;# 
  6801  0719                     	;# 
  6802  071A                     	;# 
  6803  071B                     	;# 
  6804  071C                     	;# 
  6805  071D                     	;# 
  6806  071E                     	;# 
  6807  0796                     	;# 
  6808  0797                     	;# 
  6809  0798                     	;# 
  6810  0799                     	;# 
  6811  079A                     	;# 
  6812  079B                     	;# 
  6813  079C                     	;# 
  6814  079D                     	;# 
  6815  080C                     	;# 
  6816  080D                     	;# 
  6817  080E                     	;# 
  6818  080F                     	;# 
  6819  0810                     	;# 
  6820  0811                     	;# 
  6821  0812                     	;# 
  6822  0813                     	;# 
  6823  0814                     	;# 
  6824  081A                     	;# 
  6825  081A                     	;# 
  6826  081B                     	;# 
  6827  081C                     	;# 
  6828  081C                     	;# 
  6829  081D                     	;# 
  6830  081E                     	;# 
  6831  081F                     	;# 
  6832  088C                     	;# 
  6833  088D                     	;# 
  6834  088E                     	;# 
  6835  088F                     	;# 
  6836  0890                     	;# 
  6837  0891                     	;# 
  6838  0892                     	;# 
  6839  0893                     	;# 
  6840  0895                     	;# 
  6841  0896                     	;# 
  6842  0897                     	;# 
  6843  0898                     	;# 
  6844  0899                     	;# 
  6845  089A                     	;# 
  6846  089B                     	;# 
  6847  090C                     	;# 
  6848  090E                     	;# 
  6849  090F                     	;# 
  6850  091F                     	;# 
  6851  098F                     	;# 
  6852  098F                     	;# 
  6853  0990                     	;# 
  6854  0991                     	;# 
  6855  0992                     	;# 
  6856  0993                     	;# 
  6857  0994                     	;# 
  6858  0995                     	;# 
  6859  0996                     	;# 
  6860  0997                     	;# 
  6861  1E0F                     	;# 
  6862  1E10                     	;# 
  6863  1E11                     	;# 
  6864  1E12                     	;# 
  6865  1E13                     	;# 
  6866  1E14                     	;# 
  6867  1E15                     	;# 
  6868  1E16                     	;# 
  6869  1E17                     	;# 
  6870  1E18                     	;# 
  6871  1E19                     	;# 
  6872  1E1A                     	;# 
  6873  1E1B                     	;# 
  6874  1E1C                     	;# 
  6875  1E1D                     	;# 
  6876  1E1E                     	;# 
  6877  1E1F                     	;# 
  6878  1E20                     	;# 
  6879  1E21                     	;# 
  6880  1E22                     	;# 
  6881  1E23                     	;# 
  6882  1E24                     	;# 
  6883  1E25                     	;# 
  6884  1E26                     	;# 
  6885  1E27                     	;# 
  6886  1E28                     	;# 
  6887  1E29                     	;# 
  6888  1E2A                     	;# 
  6889  1E2B                     	;# 
  6890  1E2C                     	;# 
  6891  1E2D                     	;# 
  6892  1E2E                     	;# 
  6893  1E2F                     	;# 
  6894  1E30                     	;# 
  6895  1E31                     	;# 
  6896  1E32                     	;# 
  6897  1E33                     	;# 
  6898  1E34                     	;# 
  6899  1E35                     	;# 
  6900  1E36                     	;# 
  6901  1E37                     	;# 
  6902  1E8F                     	;# 
  6903  1E90                     	;# 
  6904  1E91                     	;# 
  6905  1E92                     	;# 
  6906  1E93                     	;# 
  6907  1E94                     	;# 
  6908  1E95                     	;# 
  6909  1E96                     	;# 
  6910  1E97                     	;# 
  6911  1E9C                     	;# 
  6912  1E9D                     	;# 
  6913  1E9E                     	;# 
  6914  1EA1                     	;# 
  6915  1EA2                     	;# 
  6916  1EA3                     	;# 
  6917  1EA4                     	;# 
  6918  1EA9                     	;# 
  6919  1EAA                     	;# 
  6920  1EB1                     	;# 
  6921  1EB2                     	;# 
  6922  1EB8                     	;# 
  6923  1EB9                     	;# 
  6924  1EBA                     	;# 
  6925  1EBB                     	;# 
  6926  1EBC                     	;# 
  6927  1EBD                     	;# 
  6928  1EBE                     	;# 
  6929  1EC3                     	;# 
  6930  1EC5                     	;# 
  6931  1EC6                     	;# 
  6932  1EC7                     	;# 
  6933  1EC8                     	;# 
  6934  1EC9                     	;# 
  6935  1ECA                     	;# 
  6936  1ECB                     	;# 
  6937  1ECB                     	;# 
  6938  1ECB                     	;# 
  6939  1ECC                     	;# 
  6940  1ECC                     	;# 
  6941  1ECC                     	;# 
  6942  1F10                     	;# 
  6943  1F11                     	;# 
  6944  1F12                     	;# 
  6945  1F14                     	;# 
  6946  1F15                     	;# 
  6947  1F1C                     	;# 
  6948  1F1D                     	;# 
  6949  1F1E                     	;# 
  6950  1F1F                     	;# 
  6951  1F20                     	;# 
  6952  1F21                     	;# 
  6953  1F22                     	;# 
  6954  1F23                     	;# 
  6955  1F24                     	;# 
  6956  1F25                     	;# 
  6957  1F26                     	;# 
  6958  1F27                     	;# 
  6959  1F38                     	;# 
  6960  1F39                     	;# 
  6961  1F3A                     	;# 
  6962  1F3B                     	;# 
  6963  1F3C                     	;# 
  6964  1F3D                     	;# 
  6965  1F3E                     	;# 
  6966  1F3F                     	;# 
  6967  1F43                     	;# 
  6968  1F44                     	;# 
  6969  1F45                     	;# 
  6970  1F46                     	;# 
  6971  1F47                     	;# 
  6972  1F48                     	;# 
  6973  1F49                     	;# 
  6974  1F4A                     	;# 
  6975  1F4E                     	;# 
  6976  1F4F                     	;# 
  6977  1F50                     	;# 
  6978  1F51                     	;# 
  6979  1F52                     	;# 
  6980  1F53                     	;# 
  6981  1F54                     	;# 
  6982  1F55                     	;# 
  6983  1FE4                     	;# 
  6984  1FE5                     	;# 
  6985  1FE6                     	;# 
  6986  1FE7                     	;# 
  6987  1FE8                     	;# 
  6988  1FE8                     	;# 
  6989  1FE9                     	;# 
  6990  1FEA                     	;# 
  6991  1FEB                     	;# 
  6992  1FED                     	;# 
  6993  1FEE                     	;# 
  6994  1FEF                     	;# 
  6995  0000                     	;# 
  6996  0001                     	;# 
  6997  0002                     	;# 
  6998  0003                     	;# 
  6999  0004                     	;# 
  7000  0005                     	;# 
  7001  0006                     	;# 
  7002  0007                     	;# 
  7003  0008                     	;# 
  7004  0009                     	;# 
  7005  000A                     	;# 
  7006  000B                     	;# 
  7007  000C                     	;# 
  7008  000D                     	;# 
  7009  000E                     	;# 
  7010  0012                     	;# 
  7011  0013                     	;# 
  7012  0014                     	;# 
  7013  0018                     	;# 
  7014  0019                     	;# 
  7015  001A                     	;# 
  7016  008C                     	;# 
  7017  008C                     	;# 
  7018  008D                     	;# 
  7019  008E                     	;# 
  7020  008E                     	;# 
  7021  008F                     	;# 
  7022  0090                     	;# 
  7023  0090                     	;# 
  7024  0091                     	;# 
  7025  0092                     	;# 
  7026  0092                     	;# 
  7027  0093                     	;# 
  7028  0094                     	;# 
  7029  0094                     	;# 
  7030  0095                     	;# 
  7031  0096                     	;# 
  7032  0096                     	;# 
  7033  0097                     	;# 
  7034  0098                     	;# 
  7035  0099                     	;# 
  7036  009A                     	;# 
  7037  009B                     	;# 
  7038  009B                     	;# 
  7039  009C                     	;# 
  7040  009D                     	;# 
  7041  009D                     	;# 
  7042  009E                     	;# 
  7043  009F                     	;# 
  7044  010C                     	;# 
  7045  010C                     	;# 
  7046  010D                     	;# 
  7047  010E                     	;# 
  7048  010F                     	;# 
  7049  010F                     	;# 
  7050  0110                     	;# 
  7051  0111                     	;# 
  7052  0112                     	;# 
  7053  0113                     	;# 
  7054  0114                     	;# 
  7055  0115                     	;# 
  7056  0116                     	;# 
  7057  0117                     	;# 
  7058  0118                     	;# 
  7059  0119                     	;# 
  7060  0119                     	;# 
  7061  0119                     	;# 
  7062  011A                     	;# 
  7063  011A                     	;# 
  7064  011A                     	;# 
  7065  011B                     	;# 
  7066  011B                     	;# 
  7067  011B                     	;# 
  7068  011B                     	;# 
  7069  011B                     	;# 
  7070  011C                     	;# 
  7071  011C                     	;# 
  7072  011C                     	;# 
  7073  011D                     	;# 
  7074  011D                     	;# 
  7075  011D                     	;# 
  7076  011E                     	;# 
  7077  011E                     	;# 
  7078  011E                     	;# 
  7079  011F                     	;# 
  7080  011F                     	;# 
  7081  011F                     	;# 
  7082  011F                     	;# 
  7083  011F                     	;# 
  7084  018C                     	;# 
  7085  018D                     	;# 
  7086  018E                     	;# 
  7087  018F                     	;# 
  7088  0190                     	;# 
  7089  0191                     	;# 
  7090  0192                     	;# 
  7091  0196                     	;# 
  7092  0197                     	;# 
  7093  0198                     	;# 
  7094  0199                     	;# 
  7095  019A                     	;# 
  7096  019B                     	;# 
  7097  019C                     	;# 
  7098  020C                     	;# 
  7099  020D                     	;# 
  7100  020E                     	;# 
  7101  020E                     	;# 
  7102  020F                     	;# 
  7103  020F                     	;# 
  7104  0210                     	;# 
  7105  0210                     	;# 
  7106  0211                     	;# 
  7107  0211                     	;# 
  7108  0212                     	;# 
  7109  0213                     	;# 
  7110  0214                     	;# 
  7111  0214                     	;# 
  7112  0215                     	;# 
  7113  0215                     	;# 
  7114  0216                     	;# 
  7115  0216                     	;# 
  7116  0217                     	;# 
  7117  0217                     	;# 
  7118  0218                     	;# 
  7119  0219                     	;# 
  7120  021A                     	;# 
  7121  021A                     	;# 
  7122  021B                     	;# 
  7123  021B                     	;# 
  7124  021C                     	;# 
  7125  021C                     	;# 
  7126  021D                     	;# 
  7127  021D                     	;# 
  7128  021E                     	;# 
  7129  021F                     	;# 
  7130  028C                     	;# 
  7131  028C                     	;# 
  7132  028D                     	;# 
  7133  028D                     	;# 
  7134  028E                     	;# 
  7135  028F                     	;# 
  7136  0290                     	;# 
  7137  0291                     	;# 
  7138  0292                     	;# 
  7139  0292                     	;# 
  7140  0293                     	;# 
  7141  0293                     	;# 
  7142  0294                     	;# 
  7143  0295                     	;# 
  7144  0296                     	;# 
  7145  0297                     	;# 
  7146  0298                     	;# 
  7147  0298                     	;# 
  7148  0299                     	;# 
  7149  0299                     	;# 
  7150  029A                     	;# 
  7151  029B                     	;# 
  7152  029C                     	;# 
  7153  029D                     	;# 
  7154  029F                     	;# 
  7155  030C                     	;# 
  7156  030C                     	;# 
  7157  030D                     	;# 
  7158  030E                     	;# 
  7159  030F                     	;# 
  7160  0310                     	;# 
  7161  0310                     	;# 
  7162  0311                     	;# 
  7163  0312                     	;# 
  7164  0313                     	;# 
  7165  0314                     	;# 
  7166  0314                     	;# 
  7167  0315                     	;# 
  7168  0316                     	;# 
  7169  0317                     	;# 
  7170  0318                     	;# 
  7171  0318                     	;# 
  7172  0319                     	;# 
  7173  031A                     	;# 
  7174  031B                     	;# 
  7175  038C                     	;# 
  7176  038C                     	;# 
  7177  038D                     	;# 
  7178  038E                     	;# 
  7179  0390                     	;# 
  7180  0390                     	;# 
  7181  0391                     	;# 
  7182  0392                     	;# 
  7183  048C                     	;# 
  7184  048C                     	;# 
  7185  048D                     	;# 
  7186  048E                     	;# 
  7187  048F                     	;# 
  7188  048F                     	;# 
  7189  0490                     	;# 
  7190  0491                     	;# 
  7191  0492                     	;# 
  7192  0492                     	;# 
  7193  0493                     	;# 
  7194  0494                     	;# 
  7195  0495                     	;# 
  7196  0495                     	;# 
  7197  0496                     	;# 
  7198  0497                     	;# 
  7199  0498                     	;# 
  7200  0499                     	;# 
  7201  049A                     	;# 
  7202  049B                     	;# 
  7203  049C                     	;# 
  7204  049D                     	;# 
  7205  058C                     	;# 
  7206  058C                     	;# 
  7207  058D                     	;# 
  7208  058E                     	;# 
  7209  058F                     	;# 
  7210  058F                     	;# 
  7211  0590                     	;# 
  7212  0591                     	;# 
  7213  0592                     	;# 
  7214  0593                     	;# 
  7215  059C                     	;# 
  7216  059C                     	;# 
  7217  059D                     	;# 
  7218  059D                     	;# 
  7219  059E                     	;# 
  7220  059F                     	;# 
  7221  060C                     	;# 
  7222  060C                     	;# 
  7223  060D                     	;# 
  7224  060D                     	;# 
  7225  060E                     	;# 
  7226  060F                     	;# 
  7227  0610                     	;# 
  7228  0611                     	;# 
  7229  0612                     	;# 
  7230  0613                     	;# 
  7231  0614                     	;# 
  7232  0616                     	;# 
  7233  0616                     	;# 
  7234  0617                     	;# 
  7235  0617                     	;# 
  7236  0618                     	;# 
  7237  0619                     	;# 
  7238  061A                     	;# 
  7239  061B                     	;# 
  7240  061C                     	;# 
  7241  061D                     	;# 
  7242  061E                     	;# 
  7243  070C                     	;# 
  7244  070D                     	;# 
  7245  070E                     	;# 
  7246  070F                     	;# 
  7247  0710                     	;# 
  7248  0711                     	;# 
  7249  0712                     	;# 
  7250  0713                     	;# 
  7251  0714                     	;# 
  7252  0716                     	;# 
  7253  0717                     	;# 
  7254  0718                     	;# 
  7255  0719                     	;# 
  7256  071A                     	;# 
  7257  071B                     	;# 
  7258  071C                     	;# 
  7259  071D                     	;# 
  7260  071E                     	;# 
  7261  0796                     	;# 
  7262  0797                     	;# 
  7263  0798                     	;# 
  7264  0799                     	;# 
  7265  079A                     	;# 
  7266  079B                     	;# 
  7267  079C                     	;# 
  7268  079D                     	;# 
  7269  080C                     	;# 
  7270  080D                     	;# 
  7271  080E                     	;# 
  7272  080F                     	;# 
  7273  0810                     	;# 
  7274  0811                     	;# 
  7275  0812                     	;# 
  7276  0813                     	;# 
  7277  0814                     	;# 
  7278  081A                     	;# 
  7279  081A                     	;# 
  7280  081B                     	;# 
  7281  081C                     	;# 
  7282  081C                     	;# 
  7283  081D                     	;# 
  7284  081E                     	;# 
  7285  081F                     	;# 
  7286  088C                     	;# 
  7287  088D                     	;# 
  7288  088E                     	;# 
  7289  088F                     	;# 
  7290  0890                     	;# 
  7291  0891                     	;# 
  7292  0892                     	;# 
  7293  0893                     	;# 
  7294  0895                     	;# 
  7295  0896                     	;# 
  7296  0897                     	;# 
  7297  0898                     	;# 
  7298  0899                     	;# 
  7299  089A                     	;# 
  7300  089B                     	;# 
  7301  090C                     	;# 
  7302  090E                     	;# 
  7303  090F                     	;# 
  7304  091F                     	;# 
  7305  098F                     	;# 
  7306  098F                     	;# 
  7307  0990                     	;# 
  7308  0991                     	;# 
  7309  0992                     	;# 
  7310  0993                     	;# 
  7311  0994                     	;# 
  7312  0995                     	;# 
  7313  0996                     	;# 
  7314  0997                     	;# 
  7315  1E0F                     	;# 
  7316  1E10                     	;# 
  7317  1E11                     	;# 
  7318  1E12                     	;# 
  7319  1E13                     	;# 
  7320  1E14                     	;# 
  7321  1E15                     	;# 
  7322  1E16                     	;# 
  7323  1E17                     	;# 
  7324  1E18                     	;# 
  7325  1E19                     	;# 
  7326  1E1A                     	;# 
  7327  1E1B                     	;# 
  7328  1E1C                     	;# 
  7329  1E1D                     	;# 
  7330  1E1E                     	;# 
  7331  1E1F                     	;# 
  7332  1E20                     	;# 
  7333  1E21                     	;# 
  7334  1E22                     	;# 
  7335  1E23                     	;# 
  7336  1E24                     	;# 
  7337  1E25                     	;# 
  7338  1E26                     	;# 
  7339  1E27                     	;# 
  7340  1E28                     	;# 
  7341  1E29                     	;# 
  7342  1E2A                     	;# 
  7343  1E2B                     	;# 
  7344  1E2C                     	;# 
  7345  1E2D                     	;# 
  7346  1E2E                     	;# 
  7347  1E2F                     	;# 
  7348  1E30                     	;# 
  7349  1E31                     	;# 
  7350  1E32                     	;# 
  7351  1E33                     	;# 
  7352  1E34                     	;# 
  7353  1E35                     	;# 
  7354  1E36                     	;# 
  7355  1E37                     	;# 
  7356  1E8F                     	;# 
  7357  1E90                     	;# 
  7358  1E91                     	;# 
  7359  1E92                     	;# 
  7360  1E93                     	;# 
  7361  1E94                     	;# 
  7362  1E95                     	;# 
  7363  1E96                     	;# 
  7364  1E97                     	;# 
  7365  1E9C                     	;# 
  7366  1E9D                     	;# 
  7367  1E9E                     	;# 
  7368  1EA1                     	;# 
  7369  1EA2                     	;# 
  7370  1EA3                     	;# 
  7371  1EA4                     	;# 
  7372  1EA9                     	;# 
  7373  1EAA                     	;# 
  7374  1EB1                     	;# 
  7375  1EB2                     	;# 
  7376  1EB8                     	;# 
  7377  1EB9                     	;# 
  7378  1EBA                     	;# 
  7379  1EBB                     	;# 
  7380  1EBC                     	;# 
  7381  1EBD                     	;# 
  7382  1EBE                     	;# 
  7383  1EC3                     	;# 
  7384  1EC5                     	;# 
  7385  1EC6                     	;# 
  7386  1EC7                     	;# 
  7387  1EC8                     	;# 
  7388  1EC9                     	;# 
  7389  1ECA                     	;# 
  7390  1ECB                     	;# 
  7391  1ECB                     	;# 
  7392  1ECB                     	;# 
  7393  1ECC                     	;# 
  7394  1ECC                     	;# 
  7395  1ECC                     	;# 
  7396  1F10                     	;# 
  7397  1F11                     	;# 
  7398  1F12                     	;# 
  7399  1F14                     	;# 
  7400  1F15                     	;# 
  7401  1F1C                     	;# 
  7402  1F1D                     	;# 
  7403  1F1E                     	;# 
  7404  1F1F                     	;# 
  7405  1F20                     	;# 
  7406  1F21                     	;# 
  7407  1F22                     	;# 
  7408  1F23                     	;# 
  7409  1F24                     	;# 
  7410  1F25                     	;# 
  7411  1F26                     	;# 
  7412  1F27                     	;# 
  7413  1F38                     	;# 
  7414  1F39                     	;# 
  7415  1F3A                     	;# 
  7416  1F3B                     	;# 
  7417  1F3C                     	;# 
  7418  1F3D                     	;# 
  7419  1F3E                     	;# 
  7420  1F3F                     	;# 
  7421  1F43                     	;# 
  7422  1F44                     	;# 
  7423  1F45                     	;# 
  7424  1F46                     	;# 
  7425  1F47                     	;# 
  7426  1F48                     	;# 
  7427  1F49                     	;# 
  7428  1F4A                     	;# 
  7429  1F4E                     	;# 
  7430  1F4F                     	;# 
  7431  1F50                     	;# 
  7432  1F51                     	;# 
  7433  1F52                     	;# 
  7434  1F53                     	;# 
  7435  1F54                     	;# 
  7436  1F55                     	;# 
  7437  1FE4                     	;# 
  7438  1FE5                     	;# 
  7439  1FE6                     	;# 
  7440  1FE7                     	;# 
  7441  1FE8                     	;# 
  7442  1FE8                     	;# 
  7443  1FE9                     	;# 
  7444  1FEA                     	;# 
  7445  1FEB                     	;# 
  7446  1FED                     	;# 
  7447  1FEE                     	;# 
  7448  1FEF                     	;# 
  7449  0000                     	;# 
  7450  0001                     	;# 
  7451  0002                     	;# 
  7452  0003                     	;# 
  7453  0004                     	;# 
  7454  0005                     	;# 
  7455  0006                     	;# 
  7456  0007                     	;# 
  7457  0008                     	;# 
  7458  0009                     	;# 
  7459  000A                     	;# 
  7460  000B                     	;# 
  7461  000C                     	;# 
  7462  000D                     	;# 
  7463  000E                     	;# 
  7464  0012                     	;# 
  7465  0013                     	;# 
  7466  0014                     	;# 
  7467  0018                     	;# 
  7468  0019                     	;# 
  7469  001A                     	;# 
  7470  008C                     	;# 
  7471  008C                     	;# 
  7472  008D                     	;# 
  7473  008E                     	;# 
  7474  008E                     	;# 
  7475  008F                     	;# 
  7476  0090                     	;# 
  7477  0090                     	;# 
  7478  0091                     	;# 
  7479  0092                     	;# 
  7480  0092                     	;# 
  7481  0093                     	;# 
  7482  0094                     	;# 
  7483  0094                     	;# 
  7484  0095                     	;# 
  7485  0096                     	;# 
  7486  0096                     	;# 
  7487  0097                     	;# 
  7488  0098                     	;# 
  7489  0099                     	;# 
  7490  009A                     	;# 
  7491  009B                     	;# 
  7492  009B                     	;# 
  7493  009C                     	;# 
  7494  009D                     	;# 
  7495  009D                     	;# 
  7496  009E                     	;# 
  7497  009F                     	;# 
  7498  010C                     	;# 
  7499  010C                     	;# 
  7500  010D                     	;# 
  7501  010E                     	;# 
  7502  010F                     	;# 
  7503  010F                     	;# 
  7504  0110                     	;# 
  7505  0111                     	;# 
  7506  0112                     	;# 
  7507  0113                     	;# 
  7508  0114                     	;# 
  7509  0115                     	;# 
  7510  0116                     	;# 
  7511  0117                     	;# 
  7512  0118                     	;# 
  7513  0119                     	;# 
  7514  0119                     	;# 
  7515  0119                     	;# 
  7516  011A                     	;# 
  7517  011A                     	;# 
  7518  011A                     	;# 
  7519  011B                     	;# 
  7520  011B                     	;# 
  7521  011B                     	;# 
  7522  011B                     	;# 
  7523  011B                     	;# 
  7524  011C                     	;# 
  7525  011C                     	;# 
  7526  011C                     	;# 
  7527  011D                     	;# 
  7528  011D                     	;# 
  7529  011D                     	;# 
  7530  011E                     	;# 
  7531  011E                     	;# 
  7532  011E                     	;# 
  7533  011F                     	;# 
  7534  011F                     	;# 
  7535  011F                     	;# 
  7536  011F                     	;# 
  7537  011F                     	;# 
  7538  018C                     	;# 
  7539  018D                     	;# 
  7540  018E                     	;# 
  7541  018F                     	;# 
  7542  0190                     	;# 
  7543  0191                     	;# 
  7544  0192                     	;# 
  7545  0196                     	;# 
  7546  0197                     	;# 
  7547  0198                     	;# 
  7548  0199                     	;# 
  7549  019A                     	;# 
  7550  019B                     	;# 
  7551  019C                     	;# 
  7552  020C                     	;# 
  7553  020D                     	;# 
  7554  020E                     	;# 
  7555  020E                     	;# 
  7556  020F                     	;# 
  7557  020F                     	;# 
  7558  0210                     	;# 
  7559  0210                     	;# 
  7560  0211                     	;# 
  7561  0211                     	;# 
  7562  0212                     	;# 
  7563  0213                     	;# 
  7564  0214                     	;# 
  7565  0214                     	;# 
  7566  0215                     	;# 
  7567  0215                     	;# 
  7568  0216                     	;# 
  7569  0216                     	;# 
  7570  0217                     	;# 
  7571  0217                     	;# 
  7572  0218                     	;# 
  7573  0219                     	;# 
  7574  021A                     	;# 
  7575  021A                     	;# 
  7576  021B                     	;# 
  7577  021B                     	;# 
  7578  021C                     	;# 
  7579  021C                     	;# 
  7580  021D                     	;# 
  7581  021D                     	;# 
  7582  021E                     	;# 
  7583  021F                     	;# 
  7584  028C                     	;# 
  7585  028C                     	;# 
  7586  028D                     	;# 
  7587  028D                     	;# 
  7588  028E                     	;# 
  7589  028F                     	;# 
  7590  0290                     	;# 
  7591  0291                     	;# 
  7592  0292                     	;# 
  7593  0292                     	;# 
  7594  0293                     	;# 
  7595  0293                     	;# 
  7596  0294                     	;# 
  7597  0295                     	;# 
  7598  0296                     	;# 
  7599  0297                     	;# 
  7600  0298                     	;# 
  7601  0298                     	;# 
  7602  0299                     	;# 
  7603  0299                     	;# 
  7604  029A                     	;# 
  7605  029B                     	;# 
  7606  029C                     	;# 
  7607  029D                     	;# 
  7608  029F                     	;# 
  7609  030C                     	;# 
  7610  030C                     	;# 
  7611  030D                     	;# 
  7612  030E                     	;# 
  7613  030F                     	;# 
  7614  0310                     	;# 
  7615  0310                     	;# 
  7616  0311                     	;# 
  7617  0312                     	;# 
  7618  0313                     	;# 
  7619  0314                     	;# 
  7620  0314                     	;# 
  7621  0315                     	;# 
  7622  0316                     	;# 
  7623  0317                     	;# 
  7624  0318                     	;# 
  7625  0318                     	;# 
  7626  0319                     	;# 
  7627  031A                     	;# 
  7628  031B                     	;# 
  7629  038C                     	;# 
  7630  038C                     	;# 
  7631  038D                     	;# 
  7632  038E                     	;# 
  7633  0390                     	;# 
  7634  0390                     	;# 
  7635  0391                     	;# 
  7636  0392                     	;# 
  7637  048C                     	;# 
  7638  048C                     	;# 
  7639  048D                     	;# 
  7640  048E                     	;# 
  7641  048F                     	;# 
  7642  048F                     	;# 
  7643  0490                     	;# 
  7644  0491                     	;# 
  7645  0492                     	;# 
  7646  0492                     	;# 
  7647  0493                     	;# 
  7648  0494                     	;# 
  7649  0495                     	;# 
  7650  0495                     	;# 
  7651  0496                     	;# 
  7652  0497                     	;# 
  7653  0498                     	;# 
  7654  0499                     	;# 
  7655  049A                     	;# 
  7656  049B                     	;# 
  7657  049C                     	;# 
  7658  049D                     	;# 
  7659  058C                     	;# 
  7660  058C                     	;# 
  7661  058D                     	;# 
  7662  058E                     	;# 
  7663  058F                     	;# 
  7664  058F                     	;# 
  7665  0590                     	;# 
  7666  0591                     	;# 
  7667  0592                     	;# 
  7668  0593                     	;# 
  7669  059C                     	;# 
  7670  059C                     	;# 
  7671  059D                     	;# 
  7672  059D                     	;# 
  7673  059E                     	;# 
  7674  059F                     	;# 
  7675  060C                     	;# 
  7676  060C                     	;# 
  7677  060D                     	;# 
  7678  060D                     	;# 
  7679  060E                     	;# 
  7680  060F                     	;# 
  7681  0610                     	;# 
  7682  0611                     	;# 
  7683  0612                     	;# 
  7684  0613                     	;# 
  7685  0614                     	;# 
  7686  0616                     	;# 
  7687  0616                     	;# 
  7688  0617                     	;# 
  7689  0617                     	;# 
  7690  0618                     	;# 
  7691  0619                     	;# 
  7692  061A                     	;# 
  7693  061B                     	;# 
  7694  061C                     	;# 
  7695  061D                     	;# 
  7696  061E                     	;# 
  7697  070C                     	;# 
  7698  070D                     	;# 
  7699  070E                     	;# 
  7700  070F                     	;# 
  7701  0710                     	;# 
  7702  0711                     	;# 
  7703  0712                     	;# 
  7704  0713                     	;# 
  7705  0714                     	;# 
  7706  0716                     	;# 
  7707  0717                     	;# 
  7708  0718                     	;# 
  7709  0719                     	;# 
  7710  071A                     	;# 
  7711  071B                     	;# 
  7712  071C                     	;# 
  7713  071D                     	;# 
  7714  071E                     	;# 
  7715  0796                     	;# 
  7716  0797                     	;# 
  7717  0798                     	;# 
  7718  0799                     	;# 
  7719  079A                     	;# 
  7720  079B                     	;# 
  7721  079C                     	;# 
  7722  079D                     	;# 
  7723  080C                     	;# 
  7724  080D                     	;# 
  7725  080E                     	;# 
  7726  080F                     	;# 
  7727  0810                     	;# 
  7728  0811                     	;# 
  7729  0812                     	;# 
  7730  0813                     	;# 
  7731  0814                     	;# 
  7732  081A                     	;# 
  7733  081A                     	;# 
  7734  081B                     	;# 
  7735  081C                     	;# 
  7736  081C                     	;# 
  7737  081D                     	;# 
  7738  081E                     	;# 
  7739  081F                     	;# 
  7740  088C                     	;# 
  7741  088D                     	;# 
  7742  088E                     	;# 
  7743  088F                     	;# 
  7744  0890                     	;# 
  7745  0891                     	;# 
  7746  0892                     	;# 
  7747  0893                     	;# 
  7748  0895                     	;# 
  7749  0896                     	;# 
  7750  0897                     	;# 
  7751  0898                     	;# 
  7752  0899                     	;# 
  7753  089A                     	;# 
  7754  089B                     	;# 
  7755  090C                     	;# 
  7756  090E                     	;# 
  7757  090F                     	;# 
  7758  091F                     	;# 
  7759  098F                     	;# 
  7760  098F                     	;# 
  7761  0990                     	;# 
  7762  0991                     	;# 
  7763  0992                     	;# 
  7764  0993                     	;# 
  7765  0994                     	;# 
  7766  0995                     	;# 
  7767  0996                     	;# 
  7768  0997                     	;# 
  7769  1E0F                     	;# 
  7770  1E10                     	;# 
  7771  1E11                     	;# 
  7772  1E12                     	;# 
  7773  1E13                     	;# 
  7774  1E14                     	;# 
  7775  1E15                     	;# 
  7776  1E16                     	;# 
  7777  1E17                     	;# 
  7778  1E18                     	;# 
  7779  1E19                     	;# 
  7780  1E1A                     	;# 
  7781  1E1B                     	;# 
  7782  1E1C                     	;# 
  7783  1E1D                     	;# 
  7784  1E1E                     	;# 
  7785  1E1F                     	;# 
  7786  1E20                     	;# 
  7787  1E21                     	;# 
  7788  1E22                     	;# 
  7789  1E23                     	;# 
  7790  1E24                     	;# 
  7791  1E25                     	;# 
  7792  1E26                     	;# 
  7793  1E27                     	;# 
  7794  1E28                     	;# 
  7795  1E29                     	;# 
  7796  1E2A                     	;# 
  7797  1E2B                     	;# 
  7798  1E2C                     	;# 
  7799  1E2D                     	;# 
  7800  1E2E                     	;# 
  7801  1E2F                     	;# 
  7802  1E30                     	;# 
  7803  1E31                     	;# 
  7804  1E32                     	;# 
  7805  1E33                     	;# 
  7806  1E34                     	;# 
  7807  1E35                     	;# 
  7808  1E36                     	;# 
  7809  1E37                     	;# 
  7810  1E8F                     	;# 
  7811  1E90                     	;# 
  7812  1E91                     	;# 
  7813  1E92                     	;# 
  7814  1E93                     	;# 
  7815  1E94                     	;# 
  7816  1E95                     	;# 
  7817  1E96                     	;# 
  7818  1E97                     	;# 
  7819  1E9C                     	;# 
  7820  1E9D                     	;# 
  7821  1E9E                     	;# 
  7822  1EA1                     	;# 
  7823  1EA2                     	;# 
  7824  1EA3                     	;# 
  7825  1EA4                     	;# 
  7826  1EA9                     	;# 
  7827  1EAA                     	;# 
  7828  1EB1                     	;# 
  7829  1EB2                     	;# 
  7830  1EB8                     	;# 
  7831  1EB9                     	;# 
  7832  1EBA                     	;# 
  7833  1EBB                     	;# 
  7834  1EBC                     	;# 
  7835  1EBD                     	;# 
  7836  1EBE                     	;# 
  7837  1EC3                     	;# 
  7838  1EC5                     	;# 
  7839  1EC6                     	;# 
  7840  1EC7                     	;# 
  7841  1EC8                     	;# 
  7842  1EC9                     	;# 
  7843  1ECA                     	;# 
  7844  1ECB                     	;# 
  7845  1ECB                     	;# 
  7846  1ECB                     	;# 
  7847  1ECC                     	;# 
  7848  1ECC                     	;# 
  7849  1ECC                     	;# 
  7850  1F10                     	;# 
  7851  1F11                     	;# 
  7852  1F12                     	;# 
  7853  1F14                     	;# 
  7854  1F15                     	;# 
  7855  1F1C                     	;# 
  7856  1F1D                     	;# 
  7857  1F1E                     	;# 
  7858  1F1F                     	;# 
  7859  1F20                     	;# 
  7860  1F21                     	;# 
  7861  1F22                     	;# 
  7862  1F23                     	;# 
  7863  1F24                     	;# 
  7864  1F25                     	;# 
  7865  1F26                     	;# 
  7866  1F27                     	;# 
  7867  1F38                     	;# 
  7868  1F39                     	;# 
  7869  1F3A                     	;# 
  7870  1F3B                     	;# 
  7871  1F3C                     	;# 
  7872  1F3D                     	;# 
  7873  1F3E                     	;# 
  7874  1F3F                     	;# 
  7875  1F43                     	;# 
  7876  1F44                     	;# 
  7877  1F45                     	;# 
  7878  1F46                     	;# 
  7879  1F47                     	;# 
  7880  1F48                     	;# 
  7881  1F49                     	;# 
  7882  1F4A                     	;# 
  7883  1F4E                     	;# 
  7884  1F4F                     	;# 
  7885  1F50                     	;# 
  7886  1F51                     	;# 
  7887  1F52                     	;# 
  7888  1F53                     	;# 
  7889  1F54                     	;# 
  7890  1F55                     	;# 
  7891  1FE4                     	;# 
  7892  1FE5                     	;# 
  7893  1FE6                     	;# 
  7894  1FE7                     	;# 
  7895  1FE8                     	;# 
  7896  1FE8                     	;# 
  7897  1FE9                     	;# 
  7898  1FEA                     	;# 
  7899  1FEB                     	;# 
  7900  1FED                     	;# 
  7901  1FEE                     	;# 
  7902  1FEF                     	;# 
  7903  0000                     	;# 
  7904  0001                     	;# 
  7905  0002                     	;# 
  7906  0003                     	;# 
  7907  0004                     	;# 
  7908  0005                     	;# 
  7909  0006                     	;# 
  7910  0007                     	;# 
  7911  0008                     	;# 
  7912  0009                     	;# 
  7913  000A                     	;# 
  7914  000B                     	;# 
  7915  000C                     	;# 
  7916  000D                     	;# 
  7917  000E                     	;# 
  7918  0012                     	;# 
  7919  0013                     	;# 
  7920  0014                     	;# 
  7921  0018                     	;# 
  7922  0019                     	;# 
  7923  001A                     	;# 
  7924  008C                     	;# 
  7925  008C                     	;# 
  7926  008D                     	;# 
  7927  008E                     	;# 
  7928  008E                     	;# 
  7929  008F                     	;# 
  7930  0090                     	;# 
  7931  0090                     	;# 
  7932  0091                     	;# 
  7933  0092                     	;# 
  7934  0092                     	;# 
  7935  0093                     	;# 
  7936  0094                     	;# 
  7937  0094                     	;# 
  7938  0095                     	;# 
  7939  0096                     	;# 
  7940  0096                     	;# 
  7941  0097                     	;# 
  7942  0098                     	;# 
  7943  0099                     	;# 
  7944  009A                     	;# 
  7945  009B                     	;# 
  7946  009B                     	;# 
  7947  009C                     	;# 
  7948  009D                     	;# 
  7949  009D                     	;# 
  7950  009E                     	;# 
  7951  009F                     	;# 
  7952  010C                     	;# 
  7953  010C                     	;# 
  7954  010D                     	;# 
  7955  010E                     	;# 
  7956  010F                     	;# 
  7957  010F                     	;# 
  7958  0110                     	;# 
  7959  0111                     	;# 
  7960  0112                     	;# 
  7961  0113                     	;# 
  7962  0114                     	;# 
  7963  0115                     	;# 
  7964  0116                     	;# 
  7965  0117                     	;# 
  7966  0118                     	;# 
  7967  0119                     	;# 
  7968  0119                     	;# 
  7969  0119                     	;# 
  7970  011A                     	;# 
  7971  011A                     	;# 
  7972  011A                     	;# 
  7973  011B                     	;# 
  7974  011B                     	;# 
  7975  011B                     	;# 
  7976  011B                     	;# 
  7977  011B                     	;# 
  7978  011C                     	;# 
  7979  011C                     	;# 
  7980  011C                     	;# 
  7981  011D                     	;# 
  7982  011D                     	;# 
  7983  011D                     	;# 
  7984  011E                     	;# 
  7985  011E                     	;# 
  7986  011E                     	;# 
  7987  011F                     	;# 
  7988  011F                     	;# 
  7989  011F                     	;# 
  7990  011F                     	;# 
  7991  011F                     	;# 
  7992  018C                     	;# 
  7993  018D                     	;# 
  7994  018E                     	;# 
  7995  018F                     	;# 
  7996  0190                     	;# 
  7997  0191                     	;# 
  7998  0192                     	;# 
  7999  0196                     	;# 
  8000  0197                     	;# 
  8001  0198                     	;# 
  8002  0199                     	;# 
  8003  019A                     	;# 
  8004  019B                     	;# 
  8005  019C                     	;# 
  8006  020C                     	;# 
  8007  020D                     	;# 
  8008  020E                     	;# 
  8009  020E                     	;# 
  8010  020F                     	;# 
  8011  020F                     	;# 
  8012  0210                     	;# 
  8013  0210                     	;# 
  8014  0211                     	;# 
  8015  0211                     	;# 
  8016  0212                     	;# 
  8017  0213                     	;# 
  8018  0214                     	;# 
  8019  0214                     	;# 
  8020  0215                     	;# 
  8021  0215                     	;# 
  8022  0216                     	;# 
  8023  0216                     	;# 
  8024  0217                     	;# 
  8025  0217                     	;# 
  8026  0218                     	;# 
  8027  0219                     	;# 
  8028  021A                     	;# 
  8029  021A                     	;# 
  8030  021B                     	;# 
  8031  021B                     	;# 
  8032  021C                     	;# 
  8033  021C                     	;# 
  8034  021D                     	;# 
  8035  021D                     	;# 
  8036  021E                     	;# 
  8037  021F                     	;# 
  8038  028C                     	;# 
  8039  028C                     	;# 
  8040  028D                     	;# 
  8041  028D                     	;# 
  8042  028E                     	;# 
  8043  028F                     	;# 
  8044  0290                     	;# 
  8045  0291                     	;# 
  8046  0292                     	;# 
  8047  0292                     	;# 
  8048  0293                     	;# 
  8049  0293                     	;# 
  8050  0294                     	;# 
  8051  0295                     	;# 
  8052  0296                     	;# 
  8053  0297                     	;# 
  8054  0298                     	;# 
  8055  0298                     	;# 
  8056  0299                     	;# 
  8057  0299                     	;# 
  8058  029A                     	;# 
  8059  029B                     	;# 
  8060  029C                     	;# 
  8061  029D                     	;# 
  8062  029F                     	;# 
  8063  030C                     	;# 
  8064  030C                     	;# 
  8065  030D                     	;# 
  8066  030E                     	;# 
  8067  030F                     	;# 
  8068  0310                     	;# 
  8069  0310                     	;# 
  8070  0311                     	;# 
  8071  0312                     	;# 
  8072  0313                     	;# 
  8073  0314                     	;# 
  8074  0314                     	;# 
  8075  0315                     	;# 
  8076  0316                     	;# 
  8077  0317                     	;# 
  8078  0318                     	;# 
  8079  0318                     	;# 
  8080  0319                     	;# 
  8081  031A                     	;# 
  8082  031B                     	;# 
  8083  038C                     	;# 
  8084  038C                     	;# 
  8085  038D                     	;# 
  8086  038E                     	;# 
  8087  0390                     	;# 
  8088  0390                     	;# 
  8089  0391                     	;# 
  8090  0392                     	;# 
  8091  048C                     	;# 
  8092  048C                     	;# 
  8093  048D                     	;# 
  8094  048E                     	;# 
  8095  048F                     	;# 
  8096  048F                     	;# 
  8097  0490                     	;# 
  8098  0491                     	;# 
  8099  0492                     	;# 
  8100  0492                     	;# 
  8101  0493                     	;# 
  8102  0494                     	;# 
  8103  0495                     	;# 
  8104  0495                     	;# 
  8105  0496                     	;# 
  8106  0497                     	;# 
  8107  0498                     	;# 
  8108  0499                     	;# 
  8109  049A                     	;# 
  8110  049B                     	;# 
  8111  049C                     	;# 
  8112  049D                     	;# 
  8113  058C                     	;# 
  8114  058C                     	;# 
  8115  058D                     	;# 
  8116  058E                     	;# 
  8117  058F                     	;# 
  8118  058F                     	;# 
  8119  0590                     	;# 
  8120  0591                     	;# 
  8121  0592                     	;# 
  8122  0593                     	;# 
  8123  059C                     	;# 
  8124  059C                     	;# 
  8125  059D                     	;# 
  8126  059D                     	;# 
  8127  059E                     	;# 
  8128  059F                     	;# 
  8129  060C                     	;# 
  8130  060C                     	;# 
  8131  060D                     	;# 
  8132  060D                     	;# 
  8133  060E                     	;# 
  8134  060F                     	;# 
  8135  0610                     	;# 
  8136  0611                     	;# 
  8137  0612                     	;# 
  8138  0613                     	;# 
  8139  0614                     	;# 
  8140  0616                     	;# 
  8141  0616                     	;# 
  8142  0617                     	;# 
  8143  0617                     	;# 
  8144  0618                     	;# 
  8145  0619                     	;# 
  8146  061A                     	;# 
  8147  061B                     	;# 
  8148  061C                     	;# 
  8149  061D                     	;# 
  8150  061E                     	;# 
  8151  070C                     	;# 
  8152  070D                     	;# 
  8153  070E                     	;# 
  8154  070F                     	;# 
  8155  0710                     	;# 
  8156  0711                     	;# 
  8157  0712                     	;# 
  8158  0713                     	;# 
  8159  0714                     	;# 
  8160  0716                     	;# 
  8161  0717                     	;# 
  8162  0718                     	;# 
  8163  0719                     	;# 
  8164  071A                     	;# 
  8165  071B                     	;# 
  8166  071C                     	;# 
  8167  071D                     	;# 
  8168  071E                     	;# 
  8169  0796                     	;# 
  8170  0797                     	;# 
  8171  0798                     	;# 
  8172  0799                     	;# 
  8173  079A                     	;# 
  8174  079B                     	;# 
  8175  079C                     	;# 
  8176  079D                     	;# 
  8177  080C                     	;# 
  8178  080D                     	;# 
  8179  080E                     	;# 
  8180  080F                     	;# 
  8181  0810                     	;# 
  8182  0811                     	;# 
  8183  0812                     	;# 
  8184  0813                     	;# 
  8185  0814                     	;# 
  8186  081A                     	;# 
  8187  081A                     	;# 
  8188  081B                     	;# 
  8189  081C                     	;# 
  8190  081C                     	;# 
  8191  081D                     	;# 
  8192  081E                     	;# 
  8193  081F                     	;# 
  8194  088C                     	;# 
  8195  088D                     	;# 
  8196  088E                     	;# 
  8197  088F                     	;# 
  8198  0890                     	;# 
  8199  0891                     	;# 
  8200  0892                     	;# 
  8201  0893                     	;# 
  8202  0895                     	;# 
  8203  0896                     	;# 
  8204  0897                     	;# 
  8205  0898                     	;# 
  8206  0899                     	;# 
  8207  089A                     	;# 
  8208  089B                     	;# 
  8209  090C                     	;# 
  8210  090E                     	;# 
  8211  090F                     	;# 
  8212  091F                     	;# 
  8213  098F                     	;# 
  8214  098F                     	;# 
  8215  0990                     	;# 
  8216  0991                     	;# 
  8217  0992                     	;# 
  8218  0993                     	;# 
  8219  0994                     	;# 
  8220  0995                     	;# 
  8221  0996                     	;# 
  8222  0997                     	;# 
  8223  1E0F                     	;# 
  8224  1E10                     	;# 
  8225  1E11                     	;# 
  8226  1E12                     	;# 
  8227  1E13                     	;# 
  8228  1E14                     	;# 
  8229  1E15                     	;# 
  8230  1E16                     	;# 
  8231  1E17                     	;# 
  8232  1E18                     	;# 
  8233  1E19                     	;# 
  8234  1E1A                     	;# 
  8235  1E1B                     	;# 
  8236  1E1C                     	;# 
  8237  1E1D                     	;# 
  8238  1E1E                     	;# 
  8239  1E1F                     	;# 
  8240  1E20                     	;# 
  8241  1E21                     	;# 
  8242  1E22                     	;# 
  8243  1E23                     	;# 
  8244  1E24                     	;# 
  8245  1E25                     	;# 
  8246  1E26                     	;# 
  8247  1E27                     	;# 
  8248  1E28                     	;# 
  8249  1E29                     	;# 
  8250  1E2A                     	;# 
  8251  1E2B                     	;# 
  8252  1E2C                     	;# 
  8253  1E2D                     	;# 
  8254  1E2E                     	;# 
  8255  1E2F                     	;# 
  8256  1E30                     	;# 
  8257  1E31                     	;# 
  8258  1E32                     	;# 
  8259  1E33                     	;# 
  8260  1E34                     	;# 
  8261  1E35                     	;# 
  8262  1E36                     	;# 
  8263  1E37                     	;# 
  8264  1E8F                     	;# 
  8265  1E90                     	;# 
  8266  1E91                     	;# 
  8267  1E92                     	;# 
  8268  1E93                     	;# 
  8269  1E94                     	;# 
  8270  1E95                     	;# 
  8271  1E96                     	;# 
  8272  1E97                     	;# 
  8273  1E9C                     	;# 
  8274  1E9D                     	;# 
  8275  1E9E                     	;# 
  8276  1EA1                     	;# 
  8277  1EA2                     	;# 
  8278  1EA3                     	;# 
  8279  1EA4                     	;# 
  8280  1EA9                     	;# 
  8281  1EAA                     	;# 
  8282  1EB1                     	;# 
  8283  1EB2                     	;# 
  8284  1EB8                     	;# 
  8285  1EB9                     	;# 
  8286  1EBA                     	;# 
  8287  1EBB                     	;# 
  8288  1EBC                     	;# 
  8289  1EBD                     	;# 
  8290  1EBE                     	;# 
  8291  1EC3                     	;# 
  8292  1EC5                     	;# 
  8293  1EC6                     	;# 
  8294  1EC7                     	;# 
  8295  1EC8                     	;# 
  8296  1EC9                     	;# 
  8297  1ECA                     	;# 
  8298  1ECB                     	;# 
  8299  1ECB                     	;# 
  8300  1ECB                     	;# 
  8301  1ECC                     	;# 
  8302  1ECC                     	;# 
  8303  1ECC                     	;# 
  8304  1F10                     	;# 
  8305  1F11                     	;# 
  8306  1F12                     	;# 
  8307  1F14                     	;# 
  8308  1F15                     	;# 
  8309  1F1C                     	;# 
  8310  1F1D                     	;# 
  8311  1F1E                     	;# 
  8312  1F1F                     	;# 
  8313  1F20                     	;# 
  8314  1F21                     	;# 
  8315  1F22                     	;# 
  8316  1F23                     	;# 
  8317  1F24                     	;# 
  8318  1F25                     	;# 
  8319  1F26                     	;# 
  8320  1F27                     	;# 
  8321  1F38                     	;# 
  8322  1F39                     	;# 
  8323  1F3A                     	;# 
  8324  1F3B                     	;# 
  8325  1F3C                     	;# 
  8326  1F3D                     	;# 
  8327  1F3E                     	;# 
  8328  1F3F                     	;# 
  8329  1F43                     	;# 
  8330  1F44                     	;# 
  8331  1F45                     	;# 
  8332  1F46                     	;# 
  8333  1F47                     	;# 
  8334  1F48                     	;# 
  8335  1F49                     	;# 
  8336  1F4A                     	;# 
  8337  1F4E                     	;# 
  8338  1F4F                     	;# 
  8339  1F50                     	;# 
  8340  1F51                     	;# 
  8341  1F52                     	;# 
  8342  1F53                     	;# 
  8343  1F54                     	;# 
  8344  1F55                     	;# 
  8345  1FE4                     	;# 
  8346  1FE5                     	;# 
  8347  1FE6                     	;# 
  8348  1FE7                     	;# 
  8349  1FE8                     	;# 
  8350  1FE8                     	;# 
  8351  1FE9                     	;# 
  8352  1FEA                     	;# 
  8353  1FEB                     	;# 
  8354  1FED                     	;# 
  8355  1FEE                     	;# 
  8356  1FEF                     	;# 
  8357  0000                     	;# 
  8358  0001                     	;# 
  8359  0002                     	;# 
  8360  0003                     	;# 
  8361  0004                     	;# 
  8362  0005                     	;# 
  8363  0006                     	;# 
  8364  0007                     	;# 
  8365  0008                     	;# 
  8366  0009                     	;# 
  8367  000A                     	;# 
  8368  000B                     	;# 
  8369  000C                     	;# 
  8370  000D                     	;# 
  8371  000E                     	;# 
  8372  0012                     	;# 
  8373  0013                     	;# 
  8374  0014                     	;# 
  8375  0018                     	;# 
  8376  0019                     	;# 
  8377  001A                     	;# 
  8378  008C                     	;# 
  8379  008C                     	;# 
  8380  008D                     	;# 
  8381  008E                     	;# 
  8382  008E                     	;# 
  8383  008F                     	;# 
  8384  0090                     	;# 
  8385  0090                     	;# 
  8386  0091                     	;# 
  8387  0092                     	;# 
  8388  0092                     	;# 
  8389  0093                     	;# 
  8390  0094                     	;# 
  8391  0094                     	;# 
  8392  0095                     	;# 
  8393  0096                     	;# 
  8394  0096                     	;# 
  8395  0097                     	;# 
  8396  0098                     	;# 
  8397  0099                     	;# 
  8398  009A                     	;# 
  8399  009B                     	;# 
  8400  009B                     	;# 
  8401  009C                     	;# 
  8402  009D                     	;# 
  8403  009D                     	;# 
  8404  009E                     	;# 
  8405  009F                     	;# 
  8406  010C                     	;# 
  8407  010C                     	;# 
  8408  010D                     	;# 
  8409  010E                     	;# 
  8410  010F                     	;# 
  8411  010F                     	;# 
  8412  0110                     	;# 
  8413  0111                     	;# 
  8414  0112                     	;# 
  8415  0113                     	;# 
  8416  0114                     	;# 
  8417  0115                     	;# 
  8418  0116                     	;# 
  8419  0117                     	;# 
  8420  0118                     	;# 
  8421  0119                     	;# 
  8422  0119                     	;# 
  8423  0119                     	;# 
  8424  011A                     	;# 
  8425  011A                     	;# 
  8426  011A                     	;# 
  8427  011B                     	;# 
  8428  011B                     	;# 
  8429  011B                     	;# 
  8430  011B                     	;# 
  8431  011B                     	;# 
  8432  011C                     	;# 
  8433  011C                     	;# 
  8434  011C                     	;# 
  8435  011D                     	;# 
  8436  011D                     	;# 
  8437  011D                     	;# 
  8438  011E                     	;# 
  8439  011E                     	;# 
  8440  011E                     	;# 
  8441  011F                     	;# 
  8442  011F                     	;# 
  8443  011F                     	;# 
  8444  011F                     	;# 
  8445  011F                     	;# 
  8446  018C                     	;# 
  8447  018D                     	;# 
  8448  018E                     	;# 
  8449  018F                     	;# 
  8450  0190                     	;# 
  8451  0191                     	;# 
  8452  0192                     	;# 
  8453  0196                     	;# 
  8454  0197                     	;# 
  8455  0198                     	;# 
  8456  0199                     	;# 
  8457  019A                     	;# 
  8458  019B                     	;# 
  8459  019C                     	;# 
  8460  020C                     	;# 
  8461  020D                     	;# 
  8462  020E                     	;# 
  8463  020E                     	;# 
  8464  020F                     	;# 
  8465  020F                     	;# 
  8466  0210                     	;# 
  8467  0210                     	;# 
  8468  0211                     	;# 
  8469  0211                     	;# 
  8470  0212                     	;# 
  8471  0213                     	;# 
  8472  0214                     	;# 
  8473  0214                     	;# 
  8474  0215                     	;# 
  8475  0215                     	;# 
  8476  0216                     	;# 
  8477  0216                     	;# 
  8478  0217                     	;# 
  8479  0217                     	;# 
  8480  0218                     	;# 
  8481  0219                     	;# 
  8482  021A                     	;# 
  8483  021A                     	;# 
  8484  021B                     	;# 
  8485  021B                     	;# 
  8486  021C                     	;# 
  8487  021C                     	;# 
  8488  021D                     	;# 
  8489  021D                     	;# 
  8490  021E                     	;# 
  8491  021F                     	;# 
  8492  028C                     	;# 
  8493  028C                     	;# 
  8494  028D                     	;# 
  8495  028D                     	;# 
  8496  028E                     	;# 
  8497  028F                     	;# 
  8498  0290                     	;# 
  8499  0291                     	;# 
  8500  0292                     	;# 
  8501  0292                     	;# 
  8502  0293                     	;# 
  8503  0293                     	;# 
  8504  0294                     	;# 
  8505  0295                     	;# 
  8506  0296                     	;# 
  8507  0297                     	;# 
  8508  0298                     	;# 
  8509  0298                     	;# 
  8510  0299                     	;# 
  8511  0299                     	;# 
  8512  029A                     	;# 
  8513  029B                     	;# 
  8514  029C                     	;# 
  8515  029D                     	;# 
  8516  029F                     	;# 
  8517  030C                     	;# 
  8518  030C                     	;# 
  8519  030D                     	;# 
  8520  030E                     	;# 
  8521  030F                     	;# 
  8522  0310                     	;# 
  8523  0310                     	;# 
  8524  0311                     	;# 
  8525  0312                     	;# 
  8526  0313                     	;# 
  8527  0314                     	;# 
  8528  0314                     	;# 
  8529  0315                     	;# 
  8530  0316                     	;# 
  8531  0317                     	;# 
  8532  0318                     	;# 
  8533  0318                     	;# 
  8534  0319                     	;# 
  8535  031A                     	;# 
  8536  031B                     	;# 
  8537  038C                     	;# 
  8538  038C                     	;# 
  8539  038D                     	;# 
  8540  038E                     	;# 
  8541  0390                     	;# 
  8542  0390                     	;# 
  8543  0391                     	;# 
  8544  0392                     	;# 
  8545  048C                     	;# 
  8546  048C                     	;# 
  8547  048D                     	;# 
  8548  048E                     	;# 
  8549  048F                     	;# 
  8550  048F                     	;# 
  8551  0490                     	;# 
  8552  0491                     	;# 
  8553  0492                     	;# 
  8554  0492                     	;# 
  8555  0493                     	;# 
  8556  0494                     	;# 
  8557  0495                     	;# 
  8558  0495                     	;# 
  8559  0496                     	;# 
  8560  0497                     	;# 
  8561  0498                     	;# 
  8562  0499                     	;# 
  8563  049A                     	;# 
  8564  049B                     	;# 
  8565  049C                     	;# 
  8566  049D                     	;# 
  8567  058C                     	;# 
  8568  058C                     	;# 
  8569  058D                     	;# 
  8570  058E                     	;# 
  8571  058F                     	;# 
  8572  058F                     	;# 
  8573  0590                     	;# 
  8574  0591                     	;# 
  8575  0592                     	;# 
  8576  0593                     	;# 
  8577  059C                     	;# 
  8578  059C                     	;# 
  8579  059D                     	;# 
  8580  059D                     	;# 
  8581  059E                     	;# 
  8582  059F                     	;# 
  8583  060C                     	;# 
  8584  060C                     	;# 
  8585  060D                     	;# 
  8586  060D                     	;# 
  8587  060E                     	;# 
  8588  060F                     	;# 
  8589  0610                     	;# 
  8590  0611                     	;# 
  8591  0612                     	;# 
  8592  0613                     	;# 
  8593  0614                     	;# 
  8594  0616                     	;# 
  8595  0616                     	;# 
  8596  0617                     	;# 
  8597  0617                     	;# 
  8598  0618                     	;# 
  8599  0619                     	;# 
  8600  061A                     	;# 
  8601  061B                     	;# 
  8602  061C                     	;# 
  8603  061D                     	;# 
  8604  061E                     	;# 
  8605  070C                     	;# 
  8606  070D                     	;# 
  8607  070E                     	;# 
  8608  070F                     	;# 
  8609  0710                     	;# 
  8610  0711                     	;# 
  8611  0712                     	;# 
  8612  0713                     	;# 
  8613  0714                     	;# 
  8614  0716                     	;# 
  8615  0717                     	;# 
  8616  0718                     	;# 
  8617  0719                     	;# 
  8618  071A                     	;# 
  8619  071B                     	;# 
  8620  071C                     	;# 
  8621  071D                     	;# 
  8622  071E                     	;# 
  8623  0796                     	;# 
  8624  0797                     	;# 
  8625  0798                     	;# 
  8626  0799                     	;# 
  8627  079A                     	;# 
  8628  079B                     	;# 
  8629  079C                     	;# 
  8630  079D                     	;# 
  8631  080C                     	;# 
  8632  080D                     	;# 
  8633  080E                     	;# 
  8634  080F                     	;# 
  8635  0810                     	;# 
  8636  0811                     	;# 
  8637  0812                     	;# 
  8638  0813                     	;# 
  8639  0814                     	;# 
  8640  081A                     	;# 
  8641  081A                     	;# 
  8642  081B                     	;# 
  8643  081C                     	;# 
  8644  081C                     	;# 
  8645  081D                     	;# 
  8646  081E                     	;# 
  8647  081F                     	;# 
  8648  088C                     	;# 
  8649  088D                     	;# 
  8650  088E                     	;# 
  8651  088F                     	;# 
  8652  0890                     	;# 
  8653  0891                     	;# 
  8654  0892                     	;# 
  8655  0893                     	;# 
  8656  0895                     	;# 
  8657  0896                     	;# 
  8658  0897                     	;# 
  8659  0898                     	;# 
  8660  0899                     	;# 
  8661  089A                     	;# 
  8662  089B                     	;# 
  8663  090C                     	;# 
  8664  090E                     	;# 
  8665  090F                     	;# 
  8666  091F                     	;# 
  8667  098F                     	;# 
  8668  098F                     	;# 
  8669  0990                     	;# 
  8670  0991                     	;# 
  8671  0992                     	;# 
  8672  0993                     	;# 
  8673  0994                     	;# 
  8674  0995                     	;# 
  8675  0996                     	;# 
  8676  0997                     	;# 
  8677  1E0F                     	;# 
  8678  1E10                     	;# 
  8679  1E11                     	;# 
  8680  1E12                     	;# 
  8681  1E13                     	;# 
  8682  1E14                     	;# 
  8683  1E15                     	;# 
  8684  1E16                     	;# 
  8685  1E17                     	;# 
  8686  1E18                     	;# 
  8687  1E19                     	;# 
  8688  1E1A                     	;# 
  8689  1E1B                     	;# 
  8690  1E1C                     	;# 
  8691  1E1D                     	;# 
  8692  1E1E                     	;# 
  8693  1E1F                     	;# 
  8694  1E20                     	;# 
  8695  1E21                     	;# 
  8696  1E22                     	;# 
  8697  1E23                     	;# 
  8698  1E24                     	;# 
  8699  1E25                     	;# 
  8700  1E26                     	;# 
  8701  1E27                     	;# 
  8702  1E28                     	;# 
  8703  1E29                     	;# 
  8704  1E2A                     	;# 
  8705  1E2B                     	;# 
  8706  1E2C                     	;# 
  8707  1E2D                     	;# 
  8708  1E2E                     	;# 
  8709  1E2F                     	;# 
  8710  1E30                     	;# 
  8711  1E31                     	;# 
  8712  1E32                     	;# 
  8713  1E33                     	;# 
  8714  1E34                     	;# 
  8715  1E35                     	;# 
  8716  1E36                     	;# 
  8717  1E37                     	;# 
  8718  1E8F                     	;# 
  8719  1E90                     	;# 
  8720  1E91                     	;# 
  8721  1E92                     	;# 
  8722  1E93                     	;# 
  8723  1E94                     	;# 
  8724  1E95                     	;# 
  8725  1E96                     	;# 
  8726  1E97                     	;# 
  8727  1E9C                     	;# 
  8728  1E9D                     	;# 
  8729  1E9E                     	;# 
  8730  1EA1                     	;# 
  8731  1EA2                     	;# 
  8732  1EA3                     	;# 
  8733  1EA4                     	;# 
  8734  1EA9                     	;# 
  8735  1EAA                     	;# 
  8736  1EB1                     	;# 
  8737  1EB2                     	;# 
  8738  1EB8                     	;# 
  8739  1EB9                     	;# 
  8740  1EBA                     	;# 
  8741  1EBB                     	;# 
  8742  1EBC                     	;# 
  8743  1EBD                     	;# 
  8744  1EBE                     	;# 
  8745  1EC3                     	;# 
  8746  1EC5                     	;# 
  8747  1EC6                     	;# 
  8748  1EC7                     	;# 
  8749  1EC8                     	;# 
  8750  1EC9                     	;# 
  8751  1ECA                     	;# 
  8752  1ECB                     	;# 
  8753  1ECB                     	;# 
  8754  1ECB                     	;# 
  8755  1ECC                     	;# 
  8756  1ECC                     	;# 
  8757  1ECC                     	;# 
  8758  1F10                     	;# 
  8759  1F11                     	;# 
  8760  1F12                     	;# 
  8761  1F14                     	;# 
  8762  1F15                     	;# 
  8763  1F1C                     	;# 
  8764  1F1D                     	;# 
  8765  1F1E                     	;# 
  8766  1F1F                     	;# 
  8767  1F20                     	;# 
  8768  1F21                     	;# 
  8769  1F22                     	;# 
  8770  1F23                     	;# 
  8771  1F24                     	;# 
  8772  1F25                     	;# 
  8773  1F26                     	;# 
  8774  1F27                     	;# 
  8775  1F38                     	;# 
  8776  1F39                     	;# 
  8777  1F3A                     	;# 
  8778  1F3B                     	;# 
  8779  1F3C                     	;# 
  8780  1F3D                     	;# 
  8781  1F3E                     	;# 
  8782  1F3F                     	;# 
  8783  1F43                     	;# 
  8784  1F44                     	;# 
  8785  1F45                     	;# 
  8786  1F46                     	;# 
  8787  1F47                     	;# 
  8788  1F48                     	;# 
  8789  1F49                     	;# 
  8790  1F4A                     	;# 
  8791  1F4E                     	;# 
  8792  1F4F                     	;# 
  8793  1F50                     	;# 
  8794  1F51                     	;# 
  8795  1F52                     	;# 
  8796  1F53                     	;# 
  8797  1F54                     	;# 
  8798  1F55                     	;# 
  8799  1FE4                     	;# 
  8800  1FE5                     	;# 
  8801  1FE6                     	;# 
  8802  1FE7                     	;# 
  8803  1FE8                     	;# 
  8804  1FE8                     	;# 
  8805  1FE9                     	;# 
  8806  1FEA                     	;# 
  8807  1FEB                     	;# 
  8808  1FED                     	;# 
  8809  1FEE                     	;# 
  8810  1FEF                     	;# 
  8811  0000                     	;# 
  8812  0001                     	;# 
  8813  0002                     	;# 
  8814  0003                     	;# 
  8815  0004                     	;# 
  8816  0005                     	;# 
  8817  0006                     	;# 
  8818  0007                     	;# 
  8819  0008                     	;# 
  8820  0009                     	;# 
  8821  000A                     	;# 
  8822  000B                     	;# 
  8823  000C                     	;# 
  8824  000D                     	;# 
  8825  000E                     	;# 
  8826  0012                     	;# 
  8827  0013                     	;# 
  8828  0014                     	;# 
  8829  0018                     	;# 
  8830  0019                     	;# 
  8831  001A                     	;# 
  8832  008C                     	;# 
  8833  008C                     	;# 
  8834  008D                     	;# 
  8835  008E                     	;# 
  8836  008E                     	;# 
  8837  008F                     	;# 
  8838  0090                     	;# 
  8839  0090                     	;# 
  8840  0091                     	;# 
  8841  0092                     	;# 
  8842  0092                     	;# 
  8843  0093                     	;# 
  8844  0094                     	;# 
  8845  0094                     	;# 
  8846  0095                     	;# 
  8847  0096                     	;# 
  8848  0096                     	;# 
  8849  0097                     	;# 
  8850  0098                     	;# 
  8851  0099                     	;# 
  8852  009A                     	;# 
  8853  009B                     	;# 
  8854  009B                     	;# 
  8855  009C                     	;# 
  8856  009D                     	;# 
  8857  009D                     	;# 
  8858  009E                     	;# 
  8859  009F                     	;# 
  8860  010C                     	;# 
  8861  010C                     	;# 
  8862  010D                     	;# 
  8863  010E                     	;# 
  8864  010F                     	;# 
  8865  010F                     	;# 
  8866  0110                     	;# 
  8867  0111                     	;# 
  8868  0112                     	;# 
  8869  0113                     	;# 
  8870  0114                     	;# 
  8871  0115                     	;# 
  8872  0116                     	;# 
  8873  0117                     	;# 
  8874  0118                     	;# 
  8875  0119                     	;# 
  8876  0119                     	;# 
  8877  0119                     	;# 
  8878  011A                     	;# 
  8879  011A                     	;# 
  8880  011A                     	;# 
  8881  011B                     	;# 
  8882  011B                     	;# 
  8883  011B                     	;# 
  8884  011B                     	;# 
  8885  011B                     	;# 
  8886  011C                     	;# 
  8887  011C                     	;# 
  8888  011C                     	;# 
  8889  011D                     	;# 
  8890  011D                     	;# 
  8891  011D                     	;# 
  8892  011E                     	;# 
  8893  011E                     	;# 
  8894  011E                     	;# 
  8895  011F                     	;# 
  8896  011F                     	;# 
  8897  011F                     	;# 
  8898  011F                     	;# 
  8899  011F                     	;# 
  8900  018C                     	;# 
  8901  018D                     	;# 
  8902  018E                     	;# 
  8903  018F                     	;# 
  8904  0190                     	;# 
  8905  0191                     	;# 
  8906  0192                     	;# 
  8907  0196                     	;# 
  8908  0197                     	;# 
  8909  0198                     	;# 
  8910  0199                     	;# 
  8911  019A                     	;# 
  8912  019B                     	;# 
  8913  019C                     	;# 
  8914  020C                     	;# 
  8915  020D                     	;# 
  8916  020E                     	;# 
  8917  020E                     	;# 
  8918  020F                     	;# 
  8919  020F                     	;# 
  8920  0210                     	;# 
  8921  0210                     	;# 
  8922  0211                     	;# 
  8923  0211                     	;# 
  8924  0212                     	;# 
  8925  0213                     	;# 
  8926  0214                     	;# 
  8927  0214                     	;# 
  8928  0215                     	;# 
  8929  0215                     	;# 
  8930  0216                     	;# 
  8931  0216                     	;# 
  8932  0217                     	;# 
  8933  0217                     	;# 
  8934  0218                     	;# 
  8935  0219                     	;# 
  8936  021A                     	;# 
  8937  021A                     	;# 
  8938  021B                     	;# 
  8939  021B                     	;# 
  8940  021C                     	;# 
  8941  021C                     	;# 
  8942  021D                     	;# 
  8943  021D                     	;# 
  8944  021E                     	;# 
  8945  021F                     	;# 
  8946  028C                     	;# 
  8947  028C                     	;# 
  8948  028D                     	;# 
  8949  028D                     	;# 
  8950  028E                     	;# 
  8951  028F                     	;# 
  8952  0290                     	;# 
  8953  0291                     	;# 
  8954  0292                     	;# 
  8955  0292                     	;# 
  8956  0293                     	;# 
  8957  0293                     	;# 
  8958  0294                     	;# 
  8959  0295                     	;# 
  8960  0296                     	;# 
  8961  0297                     	;# 
  8962  0298                     	;# 
  8963  0298                     	;# 
  8964  0299                     	;# 
  8965  0299                     	;# 
  8966  029A                     	;# 
  8967  029B                     	;# 
  8968  029C                     	;# 
  8969  029D                     	;# 
  8970  029F                     	;# 
  8971  030C                     	;# 
  8972  030C                     	;# 
  8973  030D                     	;# 
  8974  030E                     	;# 
  8975  030F                     	;# 
  8976  0310                     	;# 
  8977  0310                     	;# 
  8978  0311                     	;# 
  8979  0312                     	;# 
  8980  0313                     	;# 
  8981  0314                     	;# 
  8982  0314                     	;# 
  8983  0315                     	;# 
  8984  0316                     	;# 
  8985  0317                     	;# 
  8986  0318                     	;# 
  8987  0318                     	;# 
  8988  0319                     	;# 
  8989  031A                     	;# 
  8990  031B                     	;# 
  8991  038C                     	;# 
  8992  038C                     	;# 
  8993  038D                     	;# 
  8994  038E                     	;# 
  8995  0390                     	;# 
  8996  0390                     	;# 
  8997  0391                     	;# 
  8998  0392                     	;# 
  8999  048C                     	;# 
  9000  048C                     	;# 
  9001  048D                     	;# 
  9002  048E                     	;# 
  9003  048F                     	;# 
  9004  048F                     	;# 
  9005  0490                     	;# 
  9006  0491                     	;# 
  9007  0492                     	;# 
  9008  0492                     	;# 
  9009  0493                     	;# 
  9010  0494                     	;# 
  9011  0495                     	;# 
  9012  0495                     	;# 
  9013  0496                     	;# 
  9014  0497                     	;# 
  9015  0498                     	;# 
  9016  0499                     	;# 
  9017  049A                     	;# 
  9018  049B                     	;# 
  9019  049C                     	;# 
  9020  049D                     	;# 
  9021  058C                     	;# 
  9022  058C                     	;# 
  9023  058D                     	;# 
  9024  058E                     	;# 
  9025  058F                     	;# 
  9026  058F                     	;# 
  9027  0590                     	;# 
  9028  0591                     	;# 
  9029  0592                     	;# 
  9030  0593                     	;# 
  9031  059C                     	;# 
  9032  059C                     	;# 
  9033  059D                     	;# 
  9034  059D                     	;# 
  9035  059E                     	;# 
  9036  059F                     	;# 
  9037  060C                     	;# 
  9038  060C                     	;# 
  9039  060D                     	;# 
  9040  060D                     	;# 
  9041  060E                     	;# 
  9042  060F                     	;# 
  9043  0610                     	;# 
  9044  0611                     	;# 
  9045  0612                     	;# 
  9046  0613                     	;# 
  9047  0614                     	;# 
  9048  0616                     	;# 
  9049  0616                     	;# 
  9050  0617                     	;# 
  9051  0617                     	;# 
  9052  0618                     	;# 
  9053  0619                     	;# 
  9054  061A                     	;# 
  9055  061B                     	;# 
  9056  061C                     	;# 
  9057  061D                     	;# 
  9058  061E                     	;# 
  9059  070C                     	;# 
  9060  070D                     	;# 
  9061  070E                     	;# 
  9062  070F                     	;# 
  9063  0710                     	;# 
  9064  0711                     	;# 
  9065  0712                     	;# 
  9066  0713                     	;# 
  9067  0714                     	;# 
  9068  0716                     	;# 
  9069  0717                     	;# 
  9070  0718                     	;# 
  9071  0719                     	;# 
  9072  071A                     	;# 
  9073  071B                     	;# 
  9074  071C                     	;# 
  9075  071D                     	;# 
  9076  071E                     	;# 
  9077  0796                     	;# 
  9078  0797                     	;# 
  9079  0798                     	;# 
  9080  0799                     	;# 
  9081  079A                     	;# 
  9082  079B                     	;# 
  9083  079C                     	;# 
  9084  079D                     	;# 
  9085  080C                     	;# 
  9086  080D                     	;# 
  9087  080E                     	;# 
  9088  080F                     	;# 
  9089  0810                     	;# 
  9090  0811                     	;# 
  9091  0812                     	;# 
  9092  0813                     	;# 
  9093  0814                     	;# 
  9094  081A                     	;# 
  9095  081A                     	;# 
  9096  081B                     	;# 
  9097  081C                     	;# 
  9098  081C                     	;# 
  9099  081D                     	;# 
  9100  081E                     	;# 
  9101  081F                     	;# 
  9102  088C                     	;# 
  9103  088D                     	;# 
  9104  088E                     	;# 
  9105  088F                     	;# 
  9106  0890                     	;# 
  9107  0891                     	;# 
  9108  0892                     	;# 
  9109  0893                     	;# 
  9110  0895                     	;# 
  9111  0896                     	;# 
  9112  0897                     	;# 
  9113  0898                     	;# 
  9114  0899                     	;# 
  9115  089A                     	;# 
  9116  089B                     	;# 
  9117  090C                     	;# 
  9118  090E                     	;# 
  9119  090F                     	;# 
  9120  091F                     	;# 
  9121  098F                     	;# 
  9122  098F                     	;# 
  9123  0990                     	;# 
  9124  0991                     	;# 
  9125  0992                     	;# 
  9126  0993                     	;# 
  9127  0994                     	;# 
  9128  0995                     	;# 
  9129  0996                     	;# 
  9130  0997                     	;# 
  9131  1E0F                     	;# 
  9132  1E10                     	;# 
  9133  1E11                     	;# 
  9134  1E12                     	;# 
  9135  1E13                     	;# 
  9136  1E14                     	;# 
  9137  1E15                     	;# 
  9138  1E16                     	;# 
  9139  1E17                     	;# 
  9140  1E18                     	;# 
  9141  1E19                     	;# 
  9142  1E1A                     	;# 
  9143  1E1B                     	;# 
  9144  1E1C                     	;# 
  9145  1E1D                     	;# 
  9146  1E1E                     	;# 
  9147  1E1F                     	;# 
  9148  1E20                     	;# 
  9149  1E21                     	;# 
  9150  1E22                     	;# 
  9151  1E23                     	;# 
  9152  1E24                     	;# 
  9153  1E25                     	;# 
  9154  1E26                     	;# 
  9155  1E27                     	;# 
  9156  1E28                     	;# 
  9157  1E29                     	;# 
  9158  1E2A                     	;# 
  9159  1E2B                     	;# 
  9160  1E2C                     	;# 
  9161  1E2D                     	;# 
  9162  1E2E                     	;# 
  9163  1E2F                     	;# 
  9164  1E30                     	;# 
  9165  1E31                     	;# 
  9166  1E32                     	;# 
  9167  1E33                     	;# 
  9168  1E34                     	;# 
  9169  1E35                     	;# 
  9170  1E36                     	;# 
  9171  1E37                     	;# 
  9172  1E8F                     	;# 
  9173  1E90                     	;# 
  9174  1E91                     	;# 
  9175  1E92                     	;# 
  9176  1E93                     	;# 
  9177  1E94                     	;# 
  9178  1E95                     	;# 
  9179  1E96                     	;# 
  9180  1E97                     	;# 
  9181  1E9C                     	;# 
  9182  1E9D                     	;# 
  9183  1E9E                     	;# 
  9184  1EA1                     	;# 
  9185  1EA2                     	;# 
  9186  1EA3                     	;# 
  9187  1EA4                     	;# 
  9188  1EA9                     	;# 
  9189  1EAA                     	;# 
  9190  1EB1                     	;# 
  9191  1EB2                     	;# 
  9192  1EB8                     	;# 
  9193  1EB9                     	;# 
  9194  1EBA                     	;# 
  9195  1EBB                     	;# 
  9196  1EBC                     	;# 
  9197  1EBD                     	;# 
  9198  1EBE                     	;# 
  9199  1EC3                     	;# 
  9200  1EC5                     	;# 
  9201  1EC6                     	;# 
  9202  1EC7                     	;# 
  9203  1EC8                     	;# 
  9204  1EC9                     	;# 
  9205  1ECA                     	;# 
  9206  1ECB                     	;# 
  9207  1ECB                     	;# 
  9208  1ECB                     	;# 
  9209  1ECC                     	;# 
  9210  1ECC                     	;# 
  9211  1ECC                     	;# 
  9212  1F10                     	;# 
  9213  1F11                     	;# 
  9214  1F12                     	;# 
  9215  1F14                     	;# 
  9216  1F15                     	;# 
  9217  1F1C                     	;# 
  9218  1F1D                     	;# 
  9219  1F1E                     	;# 
  9220  1F1F                     	;# 
  9221  1F20                     	;# 
  9222  1F21                     	;# 
  9223  1F22                     	;# 
  9224  1F23                     	;# 
  9225  1F24                     	;# 
  9226  1F25                     	;# 
  9227  1F26                     	;# 
  9228  1F27                     	;# 
  9229  1F38                     	;# 
  9230  1F39                     	;# 
  9231  1F3A                     	;# 
  9232  1F3B                     	;# 
  9233  1F3C                     	;# 
  9234  1F3D                     	;# 
  9235  1F3E                     	;# 
  9236  1F3F                     	;# 
  9237  1F43                     	;# 
  9238  1F44                     	;# 
  9239  1F45                     	;# 
  9240  1F46                     	;# 
  9241  1F47                     	;# 
  9242  1F48                     	;# 
  9243  1F49                     	;# 
  9244  1F4A                     	;# 
  9245  1F4E                     	;# 
  9246  1F4F                     	;# 
  9247  1F50                     	;# 
  9248  1F51                     	;# 
  9249  1F52                     	;# 
  9250  1F53                     	;# 
  9251  1F54                     	;# 
  9252  1F55                     	;# 
  9253  1FE4                     	;# 
  9254  1FE5                     	;# 
  9255  1FE6                     	;# 
  9256  1FE7                     	;# 
  9257  1FE8                     	;# 
  9258  1FE8                     	;# 
  9259  1FE9                     	;# 
  9260  1FEA                     	;# 
  9261  1FEB                     	;# 
  9262  1FED                     	;# 
  9263  1FEE                     	;# 
  9264  1FEF                     	;# 
  9265  0000                     	;# 
  9266  0001                     	;# 
  9267  0002                     	;# 
  9268  0003                     	;# 
  9269  0004                     	;# 
  9270  0005                     	;# 
  9271  0006                     	;# 
  9272  0007                     	;# 
  9273  0008                     	;# 
  9274  0009                     	;# 
  9275  000A                     	;# 
  9276  000B                     	;# 
  9277  000C                     	;# 
  9278  000D                     	;# 
  9279  000E                     	;# 
  9280  0012                     	;# 
  9281  0013                     	;# 
  9282  0014                     	;# 
  9283  0018                     	;# 
  9284  0019                     	;# 
  9285  001A                     	;# 
  9286  008C                     	;# 
  9287  008C                     	;# 
  9288  008D                     	;# 
  9289  008E                     	;# 
  9290  008E                     	;# 
  9291  008F                     	;# 
  9292  0090                     	;# 
  9293  0090                     	;# 
  9294  0091                     	;# 
  9295  0092                     	;# 
  9296  0092                     	;# 
  9297  0093                     	;# 
  9298  0094                     	;# 
  9299  0094                     	;# 
  9300  0095                     	;# 
  9301  0096                     	;# 
  9302  0096                     	;# 
  9303  0097                     	;# 
  9304  0098                     	;# 
  9305  0099                     	;# 
  9306  009A                     	;# 
  9307  009B                     	;# 
  9308  009B                     	;# 
  9309  009C                     	;# 
  9310  009D                     	;# 
  9311  009D                     	;# 
  9312  009E                     	;# 
  9313  009F                     	;# 
  9314  010C                     	;# 
  9315  010C                     	;# 
  9316  010D                     	;# 
  9317  010E                     	;# 
  9318  010F                     	;# 
  9319  010F                     	;# 
  9320  0110                     	;# 
  9321  0111                     	;# 
  9322  0112                     	;# 
  9323  0113                     	;# 
  9324  0114                     	;# 
  9325  0115                     	;# 
  9326  0116                     	;# 
  9327  0117                     	;# 
  9328  0118                     	;# 
  9329  0119                     	;# 
  9330  0119                     	;# 
  9331  0119                     	;# 
  9332  011A                     	;# 
  9333  011A                     	;# 
  9334  011A                     	;# 
  9335  011B                     	;# 
  9336  011B                     	;# 
  9337  011B                     	;# 
  9338  011B                     	;# 
  9339  011B                     	;# 
  9340  011C                     	;# 
  9341  011C                     	;# 
  9342  011C                     	;# 
  9343  011D                     	;# 
  9344  011D                     	;# 
  9345  011D                     	;# 
  9346  011E                     	;# 
  9347  011E                     	;# 
  9348  011E                     	;# 
  9349  011F                     	;# 
  9350  011F                     	;# 
  9351  011F                     	;# 
  9352  011F                     	;# 
  9353  011F                     	;# 
  9354  018C                     	;# 
  9355  018D                     	;# 
  9356  018E                     	;# 
  9357  018F                     	;# 
  9358  0190                     	;# 
  9359  0191                     	;# 
  9360  0192                     	;# 
  9361  0196                     	;# 
  9362  0197                     	;# 
  9363  0198                     	;# 
  9364  0199                     	;# 
  9365  019A                     	;# 
  9366  019B                     	;# 
  9367  019C                     	;# 
  9368  020C                     	;# 
  9369  020D                     	;# 
  9370  020E                     	;# 
  9371  020E                     	;# 
  9372  020F                     	;# 
  9373  020F                     	;# 
  9374  0210                     	;# 
  9375  0210                     	;# 
  9376  0211                     	;# 
  9377  0211                     	;# 
  9378  0212                     	;# 
  9379  0213                     	;# 
  9380  0214                     	;# 
  9381  0214                     	;# 
  9382  0215                     	;# 
  9383  0215                     	;# 
  9384  0216                     	;# 
  9385  0216                     	;# 
  9386  0217                     	;# 
  9387  0217                     	;# 
  9388  0218                     	;# 
  9389  0219                     	;# 
  9390  021A                     	;# 
  9391  021A                     	;# 
  9392  021B                     	;# 
  9393  021B                     	;# 
  9394  021C                     	;# 
  9395  021C                     	;# 
  9396  021D                     	;# 
  9397  021D                     	;# 
  9398  021E                     	;# 
  9399  021F                     	;# 
  9400  028C                     	;# 
  9401  028C                     	;# 
  9402  028D                     	;# 
  9403  028D                     	;# 
  9404  028E                     	;# 
  9405  028F                     	;# 
  9406  0290                     	;# 
  9407  0291                     	;# 
  9408  0292                     	;# 
  9409  0292                     	;# 
  9410  0293                     	;# 
  9411  0293                     	;# 
  9412  0294                     	;# 
  9413  0295                     	;# 
  9414  0296                     	;# 
  9415  0297                     	;# 
  9416  0298                     	;# 
  9417  0298                     	;# 
  9418  0299                     	;# 
  9419  0299                     	;# 
  9420  029A                     	;# 
  9421  029B                     	;# 
  9422  029C                     	;# 
  9423  029D                     	;# 
  9424  029F                     	;# 
  9425  030C                     	;# 
  9426  030C                     	;# 
  9427  030D                     	;# 
  9428  030E                     	;# 
  9429  030F                     	;# 
  9430  0310                     	;# 
  9431  0310                     	;# 
  9432  0311                     	;# 
  9433  0312                     	;# 
  9434  0313                     	;# 
  9435  0314                     	;# 
  9436  0314                     	;# 
  9437  0315                     	;# 
  9438  0316                     	;# 
  9439  0317                     	;# 
  9440  0318                     	;# 
  9441  0318                     	;# 
  9442  0319                     	;# 
  9443  031A                     	;# 
  9444  031B                     	;# 
  9445  038C                     	;# 
  9446  038C                     	;# 
  9447  038D                     	;# 
  9448  038E                     	;# 
  9449  0390                     	;# 
  9450  0390                     	;# 
  9451  0391                     	;# 
  9452  0392                     	;# 
  9453  048C                     	;# 
  9454  048C                     	;# 
  9455  048D                     	;# 
  9456  048E                     	;# 
  9457  048F                     	;# 
  9458  048F                     	;# 
  9459  0490                     	;# 
  9460  0491                     	;# 
  9461  0492                     	;# 
  9462  0492                     	;# 
  9463  0493                     	;# 
  9464  0494                     	;# 
  9465  0495                     	;# 
  9466  0495                     	;# 
  9467  0496                     	;# 
  9468  0497                     	;# 
  9469  0498                     	;# 
  9470  0499                     	;# 
  9471  049A                     	;# 
  9472  049B                     	;# 
  9473  049C                     	;# 
  9474  049D                     	;# 
  9475  058C                     	;# 
  9476  058C                     	;# 
  9477  058D                     	;# 
  9478  058E                     	;# 
  9479  058F                     	;# 
  9480  058F                     	;# 
  9481  0590                     	;# 
  9482  0591                     	;# 
  9483  0592                     	;# 
  9484  0593                     	;# 
  9485  059C                     	;# 
  9486  059C                     	;# 
  9487  059D                     	;# 
  9488  059D                     	;# 
  9489  059E                     	;# 
  9490  059F                     	;# 
  9491  060C                     	;# 
  9492  060C                     	;# 
  9493  060D                     	;# 
  9494  060D                     	;# 
  9495  060E                     	;# 
  9496  060F                     	;# 
  9497  0610                     	;# 
  9498  0611                     	;# 
  9499  0612                     	;# 
  9500  0613                     	;# 
  9501  0614                     	;# 
  9502  0616                     	;# 
  9503  0616                     	;# 
  9504  0617                     	;# 
  9505  0617                     	;# 
  9506  0618                     	;# 
  9507  0619                     	;# 
  9508  061A                     	;# 
  9509  061B                     	;# 
  9510  061C                     	;# 
  9511  061D                     	;# 
  9512  061E                     	;# 
  9513  070C                     	;# 
  9514  070D                     	;# 
  9515  070E                     	;# 
  9516  070F                     	;# 
  9517  0710                     	;# 
  9518  0711                     	;# 
  9519  0712                     	;# 
  9520  0713                     	;# 
  9521  0714                     	;# 
  9522  0716                     	;# 
  9523  0717                     	;# 
  9524  0718                     	;# 
  9525  0719                     	;# 
  9526  071A                     	;# 
  9527  071B                     	;# 
  9528  071C                     	;# 
  9529  071D                     	;# 
  9530  071E                     	;# 
  9531  0796                     	;# 
  9532  0797                     	;# 
  9533  0798                     	;# 
  9534  0799                     	;# 
  9535  079A                     	;# 
  9536  079B                     	;# 
  9537  079C                     	;# 
  9538  079D                     	;# 
  9539  080C                     	;# 
  9540  080D                     	;# 
  9541  080E                     	;# 
  9542  080F                     	;# 
  9543  0810                     	;# 
  9544  0811                     	;# 
  9545  0812                     	;# 
  9546  0813                     	;# 
  9547  0814                     	;# 
  9548  081A                     	;# 
  9549  081A                     	;# 
  9550  081B                     	;# 
  9551  081C                     	;# 
  9552  081C                     	;# 
  9553  081D                     	;# 
  9554  081E                     	;# 
  9555  081F                     	;# 
  9556  088C                     	;# 
  9557  088D                     	;# 
  9558  088E                     	;# 
  9559  088F                     	;# 
  9560  0890                     	;# 
  9561  0891                     	;# 
  9562  0892                     	;# 
  9563  0893                     	;# 
  9564  0895                     	;# 
  9565  0896                     	;# 
  9566  0897                     	;# 
  9567  0898                     	;# 
  9568  0899                     	;# 
  9569  089A                     	;# 
  9570  089B                     	;# 
  9571  090C                     	;# 
  9572  090E                     	;# 
  9573  090F                     	;# 
  9574  091F                     	;# 
  9575  098F                     	;# 
  9576  098F                     	;# 
  9577  0990                     	;# 
  9578  0991                     	;# 
  9579  0992                     	;# 
  9580  0993                     	;# 
  9581  0994                     	;# 
  9582  0995                     	;# 
  9583  0996                     	;# 
  9584  0997                     	;# 
  9585  1E0F                     	;# 
  9586  1E10                     	;# 
  9587  1E11                     	;# 
  9588  1E12                     	;# 
  9589  1E13                     	;# 
  9590  1E14                     	;# 
  9591  1E15                     	;# 
  9592  1E16                     	;# 
  9593  1E17                     	;# 
  9594  1E18                     	;# 
  9595  1E19                     	;# 
  9596  1E1A                     	;# 
  9597  1E1B                     	;# 
  9598  1E1C                     	;# 
  9599  1E1D                     	;# 
  9600  1E1E                     	;# 
  9601  1E1F                     	;# 
  9602  1E20                     	;# 
  9603  1E21                     	;# 
  9604  1E22                     	;# 
  9605  1E23                     	;# 
  9606  1E24                     	;# 
  9607  1E25                     	;# 
  9608  1E26                     	;# 
  9609  1E27                     	;# 
  9610  1E28                     	;# 
  9611  1E29                     	;# 
  9612  1E2A                     	;# 
  9613  1E2B                     	;# 
  9614  1E2C                     	;# 
  9615  1E2D                     	;# 
  9616  1E2E                     	;# 
  9617  1E2F                     	;# 
  9618  1E30                     	;# 
  9619  1E31                     	;# 
  9620  1E32                     	;# 
  9621  1E33                     	;# 
  9622  1E34                     	;# 
  9623  1E35                     	;# 
  9624  1E36                     	;# 
  9625  1E37                     	;# 
  9626  1E8F                     	;# 
  9627  1E90                     	;# 
  9628  1E91                     	;# 
  9629  1E92                     	;# 
  9630  1E93                     	;# 
  9631  1E94                     	;# 
  9632  1E95                     	;# 
  9633  1E96                     	;# 
  9634  1E97                     	;# 
  9635  1E9C                     	;# 
  9636  1E9D                     	;# 
  9637  1E9E                     	;# 
  9638  1EA1                     	;# 
  9639  1EA2                     	;# 
  9640  1EA3                     	;# 
  9641  1EA4                     	;# 
  9642  1EA9                     	;# 
  9643  1EAA                     	;# 
  9644  1EB1                     	;# 
  9645  1EB2                     	;# 
  9646  1EB8                     	;# 
  9647  1EB9                     	;# 
  9648  1EBA                     	;# 
  9649  1EBB                     	;# 
  9650  1EBC                     	;# 
  9651  1EBD                     	;# 
  9652  1EBE                     	;# 
  9653  1EC3                     	;# 
  9654  1EC5                     	;# 
  9655  1EC6                     	;# 
  9656  1EC7                     	;# 
  9657  1EC8                     	;# 
  9658  1EC9                     	;# 
  9659  1ECA                     	;# 
  9660  1ECB                     	;# 
  9661  1ECB                     	;# 
  9662  1ECB                     	;# 
  9663  1ECC                     	;# 
  9664  1ECC                     	;# 
  9665  1ECC                     	;# 
  9666  1F10                     	;# 
  9667  1F11                     	;# 
  9668  1F12                     	;# 
  9669  1F14                     	;# 
  9670  1F15                     	;# 
  9671  1F1C                     	;# 
  9672  1F1D                     	;# 
  9673  1F1E                     	;# 
  9674  1F1F                     	;# 
  9675  1F20                     	;# 
  9676  1F21                     	;# 
  9677  1F22                     	;# 
  9678  1F23                     	;# 
  9679  1F24                     	;# 
  9680  1F25                     	;# 
  9681  1F26                     	;# 
  9682  1F27                     	;# 
  9683  1F38                     	;# 
  9684  1F39                     	;# 
  9685  1F3A                     	;# 
  9686  1F3B                     	;# 
  9687  1F3C                     	;# 
  9688  1F3D                     	;# 
  9689  1F3E                     	;# 
  9690  1F3F                     	;# 
  9691  1F43                     	;# 
  9692  1F44                     	;# 
  9693  1F45                     	;# 
  9694  1F46                     	;# 
  9695  1F47                     	;# 
  9696  1F48                     	;# 
  9697  1F49                     	;# 
  9698  1F4A                     	;# 
  9699  1F4E                     	;# 
  9700  1F4F                     	;# 
  9701  1F50                     	;# 
  9702  1F51                     	;# 
  9703  1F52                     	;# 
  9704  1F53                     	;# 
  9705  1F54                     	;# 
  9706  1F55                     	;# 
  9707  1FE4                     	;# 
  9708  1FE5                     	;# 
  9709  1FE6                     	;# 
  9710  1FE7                     	;# 
  9711  1FE8                     	;# 
  9712  1FE8                     	;# 
  9713  1FE9                     	;# 
  9714  1FEA                     	;# 
  9715  1FEB                     	;# 
  9716  1FED                     	;# 
  9717  1FEE                     	;# 
  9718  1FEF                     	;_dmxArray
  9719                           
  9720                           	psect	idataBANK1
  9721  11A0                     __pidataBANK1:	
  9722                           
  9723                           ;initializer for _threshold
  9724  11A0  3490               	retlw	144
  9725  11A1  3406               	retlw	6
  9726                           
  9727                           ;initializer for _incInterval
  9728  11A2  3464               	retlw	100
  9729  11A3  3400               	retlw	0
  9730                           
  9731                           ;initializer for _address
  9732  11A4  3401               	retlw	1
  9733  11A5  3400               	retlw	0
  9734                           
  9735                           ;initializer for _currentSelection
  9736  11A6  3402               	retlw	2
  9737                           
  9738                           ;initializer for _menuSelected
  9739  11A7  3402               	retlw	2
  9740                           
  9741                           ;initializer for _startup
  9742  11A8  3401               	retlw	1
  9743                           
  9744                           ;initializer for _beatBrightness
  9745  11A9  3401               	retlw	1
  9746                           
  9747                           	psect	idataBANK2
  9748  111C                     __pidataBANK2:	
  9749                           
  9750                           ;initializer for _initial
  9751  111C  3401               	retlw	1
  9752  111D  3400               	retlw	0
  9753                           
  9754                           ;initializer for _delay
  9755  111E  340A               	retlw	10
  9756  111F  3400               	retlw	0
  9757                           
  9758                           	psect	stringtext1
  9759  1000                     __pstringtext1:	
  9760  1000                     _charTable:	
  9761  1000  3400               	retlw	0
  9762  1001  3482               	retlw	130
  9763  1002  3421               	retlw	33
  9764  1003  3400               	retlw	0
  9765  1004  3400               	retlw	0
  9766  1005  3400               	retlw	0
  9767  1006  3400               	retlw	0
  9768  1007  3402               	retlw	2
  9769  1008  3439               	retlw	57
  9770  1009  340F               	retlw	15
  9771  100A  3400               	retlw	0
  9772  100B  3400               	retlw	0
  9773  100C  3400               	retlw	0
  9774  100D  3440               	retlw	64
  9775  100E  3480               	retlw	128
  9776  100F  3400               	retlw	0
  9777  1010  343F               	retlw	63
  9778  1011  3406               	retlw	6
  9779  1012  345B               	retlw	91
  9780  1013  344F               	retlw	79
  9781  1014  3466               	retlw	102
  9782  1015  346D               	retlw	109
  9783  1016  347D               	retlw	125
  9784  1017  3407               	retlw	7
  9785  1018  347F               	retlw	127
  9786  1019  346F               	retlw	111
  9787  101A  3400               	retlw	0
  9788  101B  3400               	retlw	0
  9789  101C  3400               	retlw	0
  9790  101D  3448               	retlw	72
  9791  101E  3400               	retlw	0
  9792  101F  3453               	retlw	83
  9793  1020  3400               	retlw	0
  9794  1021  3477               	retlw	119
  9795  1022  347C               	retlw	124
  9796  1023  3439               	retlw	57
  9797  1024  345E               	retlw	94
  9798  1025  3479               	retlw	121
  9799  1026  3471               	retlw	113
  9800  1027  346F               	retlw	111
  9801  1028  3476               	retlw	118
  9802  1029  3406               	retlw	6
  9803  102A  341E               	retlw	30
  9804  102B  3400               	retlw	0
  9805  102C  3438               	retlw	56
  9806  102D  3400               	retlw	0
  9807  102E  3454               	retlw	84
  9808  102F  343F               	retlw	63
  9809  1030  3473               	retlw	115
  9810  1031  3467               	retlw	103
  9811  1032  3450               	retlw	80
  9812  1033  346D               	retlw	109
  9813  1034  3478               	retlw	120
  9814  1035  343E               	retlw	62
  9815  1036  3400               	retlw	0
  9816  1037  3400               	retlw	0
  9817  1038  3400               	retlw	0
  9818  1039  346E               	retlw	110
  9819  103A  3400               	retlw	0
  9820  103B  3439               	retlw	57
  9821  103C  3400               	retlw	0
  9822  103D  340F               	retlw	15
  9823  103E  3400               	retlw	0
  9824  103F  3408               	retlw	8
  9825  1040  3463               	retlw	99
  9826  1041  345F               	retlw	95
  9827  1042  347C               	retlw	124
  9828  1043  3458               	retlw	88
  9829  1044  345E               	retlw	94
  9830  1045  347B               	retlw	123
  9831  1046  3471               	retlw	113
  9832  1047  346F               	retlw	111
  9833  1048  3474               	retlw	116
  9834  1049  3402               	retlw	2
  9835  104A  341E               	retlw	30
  9836  104B  3400               	retlw	0
  9837  104C  3406               	retlw	6
  9838  104D  3400               	retlw	0
  9839  104E  3454               	retlw	84
  9840  104F  345C               	retlw	92
  9841  1050  3473               	retlw	115
  9842  1051  3467               	retlw	103
  9843  1052  3450               	retlw	80
  9844  1053  346D               	retlw	109
  9845  1054  3478               	retlw	120
  9846  1055  341C               	retlw	28
  9847  1056  3400               	retlw	0
  9848  1057  3400               	retlw	0
  9849  1058  3400               	retlw	0
  9850  1059  346E               	retlw	110
  9851  105A  3400               	retlw	0
  9852  105B  3439               	retlw	57
  9853  105C  3430               	retlw	48
  9854  105D  340F               	retlw	15
  9855  105E  3400               	retlw	0
  9856  105F  3400               	retlw	0
  9857  1060                     __end_of_charTable:	
  9858                           
  9859                           	psect	nvBANK2
  9860  0155                     __pnvBANK2:	
  9861  0155                     _ADCC_ADTI_InterruptHandler:	
  9862  0155                     	ds	2
  9863  0157                     _TMR0_InterruptHandler:	
  9864  0157                     	ds	2
  9865  0159                     _EUSART1_ErrorHandler:	
  9866  0159                     	ds	2
  9867  015B                     _EUSART1_OverrunErrorHandler:	
  9868  015B                     	ds	2
  9869  015D                     _EUSART1_FramingErrorHandler:	
  9870  015D                     	ds	2
  9871  015F                     _EUSART1_RxDefaultInterruptHandler:	
  9872  015F                     	ds	2
  9873  0014                     _TRISCbits	set	20
  9874  0012                     _TRISAbits	set	18
  9875  000B                     _INTCONbits	set	11
  9876  0014                     _TRISC	set	20
  9877  0013                     _TRISB	set	19
  9878  0012                     _TRISA	set	18
  9879  001A                     _LATC	set	26
  9880  0019                     _LATB	set	25
  9881  0018                     _LATA	set	24
  9882  000C                     _PORTA	set	12
  9883  000E                     _PORTC	set	14
  9884  0090                     _ADERRL	set	144
  9885  0091                     _ADERRH	set	145
  9886  009B                     _ADPREVL	set	155
  9887  009C                     _ADPREVH	set	156
  9888  0094                     _ADFLTRL	set	148
  9889  0095                     _ADFLTRH	set	149
  9890  0096                     _ADACCL	set	150
  9891  0097                     _ADACCH	set	151
  9892  0099                     _ADCNT	set	153
  9893  009D                     _ADRESL	set	157
  9894  009E                     _ADRESH	set	158
  9895  009F                     _ADPCH	set	159
  9896  009A                     _ADRPT	set	154
  9897  0098                     _ADACCU	set	152
  9898  0093                     _ADSTPTH	set	147
  9899  0092                     _ADSTPTL	set	146
  9900  008F                     _ADUTHH	set	143
  9901  008E                     _ADUTHL	set	142
  9902  008D                     _ADLTHH	set	141
  9903  008C                     _ADLTHL	set	140
  9904  0112                     _ADCON1bits	set	274
  9905  0115                     _ADSTATbits	set	277
  9906  0113                     _ADCON2bits	set	275
  9907  0114                     _ADCON3bits	set	276
  9908  0111                     _ADCON0bits	set	273
  9909  0111                     _ADCON0	set	273
  9910  0118                     _ADCLK	set	280
  9911  0117                     _ADACT	set	279
  9912  0116                     _ADREF	set	278
  9913  0115                     _ADSTAT	set	277
  9914  0114                     _ADCON3	set	276
  9915  0113                     _ADCON2	set	275
  9916  0112                     _ADCON1	set	274
  9917  0110                     _ADPREH	set	272
  9918  010F                     _ADPREL	set	271
  9919  010E                     _ADCAP	set	270
  9920  010D                     _ADACQH	set	269
  9921  010C                     _ADACQL	set	268
  9922  0119                     _RC1REG	set	281
  9923  011D                     _RC1STAbits	set	285
  9924  011A                     _TX1REG	set	282
  9925  011E                     _TX1STAbits	set	286
  9926  011C                     _SP1BRGH	set	284
  9927  011B                     _SP1BRGL	set	283
  9928  011E                     _TX1STA	set	286
  9929  011D                     _RC1STA	set	285
  9930  011F                     _BAUD1CON	set	287
  9931  018C                     _SSP1BUF	set	396
  9932  0191                     _SSP1CON2bits	set	401
  9933  0190                     _SSP1CON1bits	set	400
  9934  018D                     _SSP1ADD	set	397
  9935  0192                     _SSP1CON3	set	402
  9936  0190                     _SSP1CON1	set	400
  9937  018F                     _SSP1STAT	set	399
  9938  021E                     _CCPTMRS0bits	set	542
  9939  028D                     _PR2	set	653
  9940  028C                     _TMR2	set	652
  9941  028E                     _T2CONbits	set	654
  9942  0291                     _T2RSTbits	set	657
  9943  028F                     _T2HLTbits	set	655
  9944  028E                     _T2CON	set	654
  9945  028C                     _T2TMR	set	652
  9946  028D                     _T2PR	set	653
  9947  0291                     _T2RST	set	657
  9948  028F                     _T2HLT	set	655
  9949  0290                     _T2CLKCON	set	656
  9950  0312                     _CCP2CONbits	set	786
  9951  0310                     _CCPR2L	set	784
  9952  0311                     _CCPR2H	set	785
  9953  0312                     _CCP2CON	set	786
  9954  030E                     _CCP1CONbits	set	782
  9955  030C                     _CCPR1L	set	780
  9956  030D                     _CCPR1H	set	781
  9957  030E                     _CCP1CON	set	782
  9958  031A                     _CCP4CONbits	set	794
  9959  0318                     _CCPR4L	set	792
  9960  0319                     _CCPR4H	set	793
  9961  031A                     _CCP4CON	set	794
  9962  0316                     _CCP3CONbits	set	790
  9963  0314                     _CCPR3L	set	788
  9964  0315                     _CCPR3H	set	789
  9965  0316                     _CCP3CON	set	790
  9966  059E                     _T0CON0bits	set	1438
  9967  059E                     _T0CON0	set	1438
  9968  059C                     _TMR0L	set	1436
  9969  059D                     _TMR0H	set	1437
  9970  059F                     _T0CON1	set	1439
  9971  070D                     _PIR1bits	set	1805
  9972  0717                     _PIE1bits	set	1815
  9973  070C                     _PIR0bits	set	1804
  9974  0716                     _PIE0bits	set	1814
  9975  070F                     _PIR3bits	set	1807
  9976  0719                     _PIE3bits	set	1817
  9977  0710                     _PIR4bits	set	1808
  9978  079D                     _PMD7	set	1949
  9979  079C                     _PMD6	set	1948
  9980  079B                     _PMD5	set	1947
  9981  079A                     _PMD4	set	1946
  9982  0799                     _PMD3	set	1945
  9983  0798                     _PMD2	set	1944
  9984  0797                     _PMD1	set	1943
  9985  0796                     _PMD0	set	1942
  9986  0892                     _OSCTUNE	set	2194
  9987  0893                     _OSCFRQ	set	2195
  9988  0891                     _OSCEN	set	2193
  9989  088F                     _OSCCON3	set	2191
  9990  088D                     _OSCCON1	set	2189
  9991  1ECB                     _RX1DTPPS	set	7883
  9992  1EC6                     _SSP1DATPPS	set	7878
  9993  1EC5                     _SSP1CLKPPS	set	7877
  9994  1F4F                     _WPUCbits	set	8015
  9995  1F4E                     _ANSELCbits	set	8014
  9996  1F39                     _WPUAbits	set	7993
  9997  1F38                     _ANSELAbits	set	7992
  9998  1F27                     _RC7PPS	set	7975
  9999  1F26                     _RC6PPS	set	7974
 10000  1F25                     _RC5PPS	set	7973
 10001  1F15                     _RA5PPS	set	7957
 10002  1F24                     _RC4PPS	set	7972
 10003  1F23                     _RC3PPS	set	7971
 10004  1F14                     _RA4PPS	set	7956
 10005  1F51                     _SLRCONC	set	8017
 10006  1F46                     _SLRCONB	set	8006
 10007  1F3B                     _SLRCONA	set	7995
 10008  1F50                     _ODCONC	set	8016
 10009  1F45                     _ODCONB	set	8005
 10010  1F3A                     _ODCONA	set	7994
 10011  1F4F                     _WPUC	set	8015
 10012  1F39                     _WPUA	set	7993
 10013  1F44                     _WPUB	set	8004
 10014  1F38                     _ANSELA	set	7992
 10015  1F43                     _ANSELB	set	8003
 10016  1F4E                     _ANSELC	set	8014
 10017                           
 10018                           	psect	stringtext2
 10019  1800                     __pstringtext2:	
 10020  1800                     STR_14:	
 10021  1800  3425               	retlw	37	;'%'
 10022  1801  3463               	retlw	99	;'c'
 10023  1802  3425               	retlw	37	;'%'
 10024  1803  3463               	retlw	99	;'c'
 10025  1804  3425               	retlw	37	;'%'
 10026  1805  3463               	retlw	99	;'c'
 10027  1806  3425               	retlw	37	;'%'
 10028  1807  3463               	retlw	99	;'c'
 10029  1808  340D               	retlw	13
 10030  1809  3400               	retlw	0
 10031                           
 10032                           	psect	stringtext3
 10033  180A                     __pstringtext3:	
 10034  180A                     STR_15:	
 10035  180A  3425               	retlw	37	;'%'
 10036  180B  3463               	retlw	99	;'c'
 10037  180C  3425               	retlw	37	;'%'
 10038  180D  3463               	retlw	99	;'c'
 10039  180E  3425               	retlw	37	;'%'
 10040  180F  3463               	retlw	99	;'c'
 10041  1810  3420               	retlw	32	;' '
 10042  1811  340D               	retlw	13
 10043  1812  3400               	retlw	0
 10044                           
 10045                           	psect	stringtext4
 10046  1813                     __pstringtext4:	
 10047  1813                     STR_13:	
 10048  1813  3420               	retlw	32	;' '
 10049  1814  3425               	retlw	37	;'%'
 10050  1815  3463               	retlw	99	;'c'
 10051  1816  3425               	retlw	37	;'%'
 10052  1817  3463               	retlw	99	;'c'
 10053  1818  3425               	retlw	37	;'%'
 10054  1819  3463               	retlw	99	;'c'
 10055  181A  340D               	retlw	13
 10056  181B  3400               	retlw	0
 10057                           
 10058                           	psect	stringtext5
 10059  181C                     __pstringtext5:	
 10060  181C                     STR_10:	
 10061  181C  3448               	retlw	72	;'H'
 10062  181D  3445               	retlw	69	;'E'
 10063  181E  3459               	retlw	89	;'Y'
 10064  181F  3459               	retlw	89	;'Y'
 10065  1820  3459               	retlw	89	;'Y'
 10066  1821  3459               	retlw	89	;'Y'
 10067  1822  3459               	retlw	89	;'Y'
 10068  1823  3459               	retlw	89	;'Y'
 10069  1824  3400               	retlw	0
 10070                           
 10071                           	psect	stringtext6
 10072  1825                     __pstringtext6:	
 10073  1825                     STR_16:	
 10074  1825  3425               	retlw	37	;'%'
 10075  1826  3463               	retlw	99	;'c'
 10076  1827  3425               	retlw	37	;'%'
 10077  1828  3463               	retlw	99	;'c'
 10078  1829  3420               	retlw	32	;' '
 10079  182A  3420               	retlw	32	;' '
 10080  182B  340D               	retlw	13
 10081  182C  3400               	retlw	0
 10082                           
 10083                           	psect	stringtext7
 10084  182D                     __pstringtext7:	
 10085  182D                     STR_12:	
 10086  182D  3420               	retlw	32	;' '
 10087  182E  3420               	retlw	32	;' '
 10088  182F  3425               	retlw	37	;'%'
 10089  1830  3463               	retlw	99	;'c'
 10090  1831  3425               	retlw	37	;'%'
 10091  1832  3463               	retlw	99	;'c'
 10092  1833  340D               	retlw	13
 10093  1834  3400               	retlw	0
 10094                           
 10095                           	psect	stringtext8
 10096  1835                     __pstringtext8:	
 10097  1835                     STR_2:	
 10098  1835  3442               	retlw	66	;'B'
 10099  1836  342D               	retlw	45	;'-'
 10100  1837  3425               	retlw	37	;'%'
 10101  1838  3475               	retlw	117	;'u'
 10102  1839  3420               	retlw	32	;' '
 10103  183A  3420               	retlw	32	;' '
 10104  183B  340D               	retlw	13
 10105  183C  3400               	retlw	0
 10106                           
 10107                           	psect	stringtext9
 10108  183D                     __pstringtext9:	
 10109  183D                     STR_3:	
 10110  183D  3446               	retlw	70	;'F'
 10111  183E  342D               	retlw	45	;'-'
 10112  183F  3425               	retlw	37	;'%'
 10113  1840  3475               	retlw	117	;'u'
 10114  1841  3420               	retlw	32	;' '
 10115  1842  3420               	retlw	32	;' '
 10116  1843  340D               	retlw	13
 10117  1844  3400               	retlw	0
 10118                           
 10119                           	psect	stringtext10
 10120  1845                     __pstringtext10:	
 10121  1845                     STR_17:	
 10122  1845  3425               	retlw	37	;'%'
 10123  1846  3463               	retlw	99	;'c'
 10124  1847  3420               	retlw	32	;' '
 10125  1848  3420               	retlw	32	;' '
 10126  1849  3420               	retlw	32	;' '
 10127  184A  340D               	retlw	13
 10128  184B  3400               	retlw	0
 10129                           
 10130                           	psect	stringtext11
 10131  184C                     __pstringtext11:	
 10132  184C                     STR_11:	
 10133  184C  3420               	retlw	32	;' '
 10134  184D  3420               	retlw	32	;' '
 10135  184E  3420               	retlw	32	;' '
 10136  184F  3425               	retlw	37	;'%'
 10137  1850  3463               	retlw	99	;'c'
 10138  1851  340D               	retlw	13
 10139  1852  3400               	retlw	0
 10140                           
 10141                           	psect	stringtext12
 10142  1853                     __pstringtext12:	
 10143  1853                     STR_18:	
 10144  1853  3420               	retlw	32	;' '
 10145  1854  3420               	retlw	32	;' '
 10146  1855  3420               	retlw	32	;' '
 10147  1856  3420               	retlw	32	;' '
 10148  1857  340D               	retlw	13
 10149  1858  3400               	retlw	0
 10150                           
 10151                           	psect	stringtext13
 10152  1859                     __pstringtext13:	
 10153  1859                     STR_7:	
 10154  1859  3450               	retlw	80	;'P'
 10155  185A  3443               	retlw	67	;'C'
 10156  185B  3420               	retlw	32	;' '
 10157  185C  3420               	retlw	32	;' '
 10158  185D  340D               	retlw	13
 10159  185E  3400               	retlw	0
 10160                           
 10161                           	psect	stringtext14
 10162  185F                     __pstringtext14:	
 10163  185F                     STR_4:	
 10164  185F  3441               	retlw	65	;'A'
 10165  1860  344E               	retlw	78	;'N'
 10166  1861  3449               	retlw	73	;'I'
 10167  1862  3420               	retlw	32	;' '
 10168  1863  340D               	retlw	13
 10169  1864  3400               	retlw	0
 10170                           
 10171                           	psect	stringtext15
 10172  1865                     __pstringtext15:	
 10173  1865                     STR_1:	
 10174  1865  3453               	retlw	83	;'S'
 10175  1866  3445               	retlw	69	;'E'
 10176  1867  344C               	retlw	76	;'L'
 10177  1868  3431               	retlw	49	;'1'
 10178  1869  340D               	retlw	13
 10179  186A  3400               	retlw	0
 10180                           
 10181                           	psect	stringtext16
 10182  186B                     __pstringtext16:	
 10183  186B                     STR_5:	
 10184  186B  3442               	retlw	66	;'B'
 10185  186C  3445               	retlw	69	;'E'
 10186  186D  3441               	retlw	65	;'A'
 10187  186E  3454               	retlw	84	;'T'
 10188  186F  340D               	retlw	13
 10189  1870  3400               	retlw	0
 10190                           
 10191                           	psect	stringtext17
 10192  1871                     __pstringtext17:	
 10193  1871                     STR_8:	
 10194  1871  3420               	retlw	32	;' '
 10195  1872  3420               	retlw	32	;' '
 10196  1873  3420               	retlw	32	;' '
 10197  1874  3420               	retlw	32	;' '
 10198  1875  3400               	retlw	0
 10199                           
 10200                           	psect	stringtext18
 10201  0000                     __pstringtext18:	
 10202  1857                     
 10203                           ; #config settings
 10204  0000                     
 10205                           	psect	cinit
 10206  0032                     start_initialization:	
 10207  0032                     __initialization:		;BIGRAM
 10208                           
 10209                           ; Initialize objects allocated to BANK1
 10210  0032  30A0               	movlw	low __pidataBANK1
 10211  0033  0084               	movwf	4
 10212  0034  3091               	movlw	(high __pidataBANK1)| (0+128)
 10213  0035  0085               	movwf	5
 10214  0036  30E5               	movlw	low __pdataBANK1
 10215  0037  0086               	movwf	6
 10216  0038  3000               	movlw	high __pdataBANK1
 10217  0039  0087               	movwf	7
 10218  003A  3000               	movlw	0
 10219  003B  00FF               	movwf	btemp+1
 10220  003C  300A               	movlw	10
 10221  003D  3191  21E2  3180   	fcall	init_ram
 10222                           
 10223                           ; Initialize objects allocated to BANK2
 10224  0040  301C               	movlw	low __pidataBANK2
 10225  0041  0084               	movwf	4
 10226  0042  3091               	movlw	(high __pidataBANK2)| (0+128)
 10227  0043  0085               	movwf	5
 10228  0044  3067               	movlw	low __pdataBANK2
 10229  0045  0086               	movwf	6
 10230  0046  3001               	movlw	high __pdataBANK2
 10231  0047  0087               	movwf	7
 10232  0048  3000               	movlw	0
 10233  0049  00FF               	movwf	btemp+1
 10234  004A  3004               	movlw	4
 10235  004B  3191  21E2  3180   	fcall	init_ram
 10236                           
 10237                           ; Clear objects allocated to BIGRAM
 10238  004E  30EE               	movlw	low (0+9198)
 10239  004F  0084               	movwf	4
 10240  0050  3023               	movlw	high (0+9198)
 10241  0051  0085               	movwf	5
 10242  0052  3002               	movlw	2
 10243  0053  00FE               	movwf	btemp
 10244  0054  3004               	movlw	4
 10245  0055  00FF               	movwf	btemp+1
 10246  0056  3191  21D6  3180   	fcall	clear_ram0
 10247                           
 10248                           ; Clear objects allocated to COMMON
 10249  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10250  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10251  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10252  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10253  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10254  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10255  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10256                           
 10257                           ; Clear objects allocated to BANK1
 10258  0060  30C5               	movlw	low __pbssBANK1
 10259  0061  0084               	movwf	4
 10260  0062  3000               	movlw	high __pbssBANK1
 10261  0063  0085               	movwf	5
 10262  0064  3020               	movlw	32
 10263  0065  00FE               	movwf	btemp
 10264  0066  3000               	movlw	0
 10265  0067  00FF               	movwf	btemp+1
 10266  0068  3191  21D6  3180   	fcall	clear_ram0
 10267                           
 10268                           ; Clear objects allocated to BANK2
 10269  006B  3020               	movlw	low __pbssBANK2
 10270  006C  0084               	movwf	4
 10271  006D  3001               	movlw	high __pbssBANK2
 10272  006E  0085               	movwf	5
 10273  006F  3035               	movlw	53
 10274  0070  00FE               	movwf	btemp
 10275  0071  3000               	movlw	0
 10276  0072  00FF               	movwf	btemp+1
 10277  0073  3191  21D6  3180   	fcall	clear_ram0
 10278                           
 10279                           ; Clear objects allocated to BANK3
 10280  0076  30A0               	movlw	low __pbssBANK3
 10281  0077  0084               	movwf	4
 10282  0078  3001               	movlw	high __pbssBANK3
 10283  0079  0085               	movwf	5
 10284  007A  3040               	movlw	64
 10285  007B  00FE               	movwf	btemp
 10286  007C  3000               	movlw	0
 10287  007D  00FF               	movwf	btemp+1
 10288  007E  3191  21D6         	fcall	clear_ram0
 10289  0080                     end_of_initialization:	
 10290                           ;End of C runtime variable initialization code
 10291                           
 10292  0080                     __end_of__initialization:	
 10293  0080  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10294  0081  0140               	movlb	0
 10295  0082  3197  2F26         	ljmp	_main	;jump to C main() function
 10296                           
 10297                           	psect	bssCOMMON
 10298  0070                     __pbssCOMMON:	
 10299  0070                     _thresholdExceeded:	
 10300  0070                     	ds	1
 10301  0071                     _p_i2c1_current:	
 10302  0071                     	ds	1
 10303  0072                     _p_i2c1_trb_current:	
 10304  0072                     	ds	1
 10305  0073                     _eusart1RxTail:	
 10306  0073                     	ds	1
 10307  0074                     _eusart1RxHead:	
 10308  0074                     	ds	1
 10309  0075                     I2C1_ISR@i2c_address:	
 10310  0075                     	ds	2
 10311                           
 10312                           	psect	bssBANK1
 10313  00C5                     __pbssBANK1:	
 10314  00C5                     _i2c1_object:	
 10315  00C5                     	ds	5
 10316  00CA                     _width:	
 10317  00CA                     	ds	2
 10318  00CC                     _currentState:	
 10319  00CC                     	ds	2
 10320  00CE                     _lastIncTime:	
 10321  00CE                     	ds	2
 10322  00D0                     _lastDetected:	
 10323  00D0                     	ds	1
 10324  00D1                     _detected:	
 10325  00D1                     	ds	1
 10326  00D2                     _position:	
 10327  00D2                     	ds	1
 10328  00D3                     _tm1650_status:	
 10329  00D3                     	ds	1
 10330  00D4                     _enterState:	
 10331  00D4                     	ds	1
 10332  00D5                     _menuState:	
 10333  00D5                     	ds	1
 10334  00D6                     _downState:	
 10335  00D6                     	ds	1
 10336  00D7                     _upState:	
 10337  00D7                     	ds	1
 10338  00D8                     _enterPressed:	
 10339  00D8                     	ds	1
 10340  00D9                     _menuPressed:	
 10341  00D9                     	ds	1
 10342  00DA                     _enter:	
 10343  00DA                     	ds	1
 10344  00DB                     _down:	
 10345  00DB                     	ds	1
 10346  00DC                     _up:	
 10347  00DC                     	ds	1
 10348  00DD                     _menu:	
 10349  00DD                     	ds	1
 10350  00DE                     I2C1_ISR@i2c_10bit_address_restart:	
 10351  00DE                     	ds	1
 10352  00DF                     I2C1_ISR@i2c_bytes_left:	
 10353  00DF                     	ds	1
 10354  00E0                     I2C1_ISR@pi2c_buf_ptr:	
 10355  00E0                     	ds	1
 10356  00E1                     _i2c1_trb_count:	
 10357  00E1                     	ds	1
 10358  00E2                     _i2c1_state:	
 10359  00E2                     	ds	1
 10360  00E3                     _eusart1RxLastError:	
 10361  00E3                     	ds	1
 10362  00E4                     _eusart1RxCount:	
 10363  00E4                     	ds	1
 10364                           
 10365                           	psect	dataBANK1
 10366  00E5                     __pdataBANK1:	
 10367  00E5                     _threshold:	
 10368  00E5                     	ds	2
 10369  00E7                     _incInterval:	
 10370  00E7                     	ds	2
 10371  00E9                     _address:	
 10372  00E9                     	ds	2
 10373  00EB                     _currentSelection:	
 10374  00EB                     	ds	1
 10375  00EC                     _menuSelected:	
 10376  00EC                     	ds	1
 10377  00ED                     _startup:	
 10378  00ED                     	ds	1
 10379  00EE                     _beatBrightness:	
 10380  00EE                     	ds	1
 10381                           
 10382                           	psect	bssBANK2
 10383  0120                     __pbssBANK2:	
 10384  0120                     _eusart1RxStatusBuffer:	
 10385  0120                     	ds	8
 10386  0128                     _eusart1RxBuffer:	
 10387  0128                     	ds	8
 10388  0130                     _nout:	
 10389  0130                     	ds	2
 10390  0132                     _prec:	
 10391  0132                     	ds	2
 10392  0134                     _flags:	
 10393  0134                     	ds	2
 10394  0136                     _lastLedActiveTime:	
 10395  0136                     	ds	2
 10396  0138                     _arrayIndex:	
 10397  0138                     	ds	2
 10398  013A                     _thresholdCount:	
 10399  013A                     	ds	2
 10400  013C                     _lastRun:	
 10401  013C                     	ds	2
 10402  013E                     _bpm:	
 10403  013E                     	ds	2
 10404  0140                     _lastBeat:	
 10405  0140                     	ds	2
 10406  0142                     _lastActiveTime:	
 10407  0142                     	ds	2
 10408  0144                     _currentTime:	
 10409  0144                     	ds	2
 10410  0146                     _lastTime:	
 10411  0146                     	ds	2
 10412  0148                     _startTime:	
 10413  0148                     	ds	2
 10414  014A                     I2C1_MasterRead@trBlock:	
 10415  014A                     	ds	4
 10416  014E                     I2C1_MasterWrite@trBlock:	
 10417  014E                     	ds	4
 10418  0152                     _i2c1_tr_queue:	
 10419  0152                     	ds	3
 10420                           
 10421                           	psect	dataBANK2
 10422  0167                     __pdataBANK2:	
 10423  0167                     _initial:	
 10424  0167                     	ds	2
 10425  0169                     _delay:	
 10426  0169                     	ds	2
 10427                           
 10428                           	psect	bssBANK3
 10429  01A0                     __pbssBANK3:	
 10430  01A0                     _dbuf:	
 10431  01A0                     	ds	32
 10432  01C0                     _buttons:	
 10433  01C0                     	ds	32
 10434                           
 10435                           	psect	inittext
 10436  11E2                     init_ram:	
 10437  11E2  00FE               	movwf	126
 10438  11E3                     initloop:	
 10439  11E3  0012               	moviw fsr0++
 10440  11E4  001E               	movwi fsr1++
 10441  11E5  3001               	movlw	1
 10442  11E6  02FE               	subwf	126,f
 10443  11E7  3000               	movlw	0
 10444  11E8  3BFF               	subwfb	127,f
 10445  11E9  087F               	movf	127,w
 10446  11EA  047E               	iorwf	126,w
 10447  11EB  1903               	btfsc	3,2
 10448  11EC  3400               	retlw	0
 10449  11ED  29E3               	goto	initloop
 10450                           
 10451                           	psect	clrtext
 10452  11D6                     clear_ram0:	
 10453                           ;	Called with FSR0 containing the base address, and
 10454                           ;	btemp/btemp+1 has the size to clear
 10455                           
 10456  11D6  0064               	clrwdt	;clear the watchdog before getting into this loop
 10457  11D7                     clrloop0:	
 10458  11D7  0180               	clrf	0	;clear RAM location pointed to by FSR
 10459  11D8  3101               	addfsr 0,1
 10460  11D9  3001               	movlw	1
 10461  11DA  02FE               	subwf	126,f
 10462  11DB  3000               	movlw	0
 10463  11DC  3BFF               	subwfb	127,f
 10464  11DD  087F               	movf	127,w
 10465  11DE  047E               	iorwf	126,w
 10466  11DF  1903               	btfsc	3,2
 10467  11E0  3400               	retlw	0	;all done for this memory range, return
 10468  11E1  29D7               	goto	clrloop0	;have we reached the end yet?
 10469                           
 10470                           	psect	cstackBANK2
 10471  0161                     __pcstackBANK2:	
 10472  0161                     LED_task_DMX@dmx:	
 10473                           
 10474                           ; 4 bytes @ 0x0
 10475  0161                     	ds	4
 10476  0165                     ??_main:	
 10477                           
 10478                           ; 1 bytes @ 0x4
 10479  0165                     	ds	2
 10480                           
 10481                           	psect	cstackBANK1
 10482  00A0                     __pcstackBANK1:	
 10483  00A0                     ?_PWM3_LoadDutyValue:	
 10484  00A0                     ?_PWM4_LoadDutyValue:	
 10485                           ; 1 bytes @ 0x0
 10486                           
 10487  00A0                     ?_PWM1_LoadDutyValue:	
 10488                           ; 1 bytes @ 0x0
 10489                           
 10490  00A0                     ?_PWM2_LoadDutyValue:	
 10491                           ; 1 bytes @ 0x0
 10492                           
 10493  00A0                     ?_printf:	
 10494                           ; 1 bytes @ 0x0
 10495                           
 10496  00A0                     ?_beatBrightnessCalculation:	
 10497                           ; 2 bytes @ 0x0
 10498                           
 10499  00A0                     PWM3_LoadDutyValue@dutyValue:	
 10500                           ; 4 bytes @ 0x0
 10501                           
 10502  00A0                     PWM4_LoadDutyValue@dutyValue:	
 10503                           ; 2 bytes @ 0x0
 10504                           
 10505  00A0                     PWM1_LoadDutyValue@dutyValue:	
 10506                           ; 2 bytes @ 0x0
 10507                           
 10508  00A0                     PWM2_LoadDutyValue@dutyValue:	
 10509                           ; 2 bytes @ 0x0
 10510                           
 10511  00A0                     printf@fmt:	
 10512                           ; 2 bytes @ 0x0
 10513                           
 10514                           
 10515                           ; 2 bytes @ 0x0
 10516  00A0                     	ds	4
 10517  00A4                     ??_beatBrightnessCalculation:	
 10518                           
 10519                           ; 1 bytes @ 0x4
 10520  00A4                     	ds	5
 10521  00A9                     ?_beatColorCreator:	
 10522  00A9                     beatColorCreator@inGreen:	
 10523                           ; 4 bytes @ 0x9
 10524                           
 10525                           
 10526                           ; 1 bytes @ 0x9
 10527  00A9                     	ds	1
 10528  00AA                     ??_CONTROLLER_task:	
 10529  00AA                     beatColorCreator@inBlue:	
 10530                           ; 1 bytes @ 0xA
 10531                           
 10532                           
 10533                           ; 1 bytes @ 0xA
 10534  00AA                     	ds	1
 10535  00AB                     beatColorCreator@inWhite:	
 10536                           
 10537                           ; 1 bytes @ 0xB
 10538  00AB                     	ds	2
 10539  00AD                     beatColorCreator@inRed:	
 10540                           
 10541                           ; 1 bytes @ 0xD
 10542  00AD                     	ds	1
 10543  00AE                     _beatColorCreator$3475:	
 10544                           
 10545                           ; 4 bytes @ 0xE
 10546  00AE                     	ds	4
 10547  00B2                     beatColorCreator@tempColor:	
 10548                           
 10549                           ; 4 bytes @ 0x12
 10550  00B2                     	ds	4
 10551  00B6                     ?_LED_setColor:	
 10552  00B6                     LED_setColor@input:	
 10553                           ; 1 bytes @ 0x16
 10554                           
 10555                           
 10556                           ; 4 bytes @ 0x16
 10557  00B6                     	ds	4
 10558  00BA                     ??_LED_setColor:	
 10559                           
 10560                           ; 1 bytes @ 0x1A
 10561  00BA                     	ds	4
 10562  00BE                     ??_LED_task_BEAT_STROBE:	
 10563  00BE                     ??_LED_task_DMX:	
 10564                           ; 1 bytes @ 0x1E
 10565                           
 10566                           
 10567                           ; 1 bytes @ 0x1E
 10568  00BE                     	ds	5
 10569  00C3                     ??_LED_task:	
 10570                           
 10571                           ; 1 bytes @ 0x23
 10572  00C3                     	ds	2
 10573                           
 10574                           	psect	cstackCOMMON
 10575  0077                     __pcstackCOMMON:	
 10576  0077                     ?_PMD_Initialize:	
 10577  0077                     ?_PIN_MANAGER_Initialize:	
 10578                           ; 1 bytes @ 0x0
 10579                           
 10580  0077                     ?_OSCILLATOR_Initialize:	
 10581                           ; 1 bytes @ 0x0
 10582                           
 10583  0077                     ?_I2C1_Initialize:	
 10584                           ; 1 bytes @ 0x0
 10585                           
 10586  0077                     ?_PWM1_Initialize:	
 10587                           ; 1 bytes @ 0x0
 10588                           
 10589  0077                     ?_PWM2_Initialize:	
 10590                           ; 1 bytes @ 0x0
 10591                           
 10592  0077                     ?_ADCC_Initialize:	
 10593                           ; 1 bytes @ 0x0
 10594                           
 10595  0077                     ?_PWM4_Initialize:	
 10596                           ; 1 bytes @ 0x0
 10597                           
 10598  0077                     ?_PWM3_Initialize:	
 10599                           ; 1 bytes @ 0x0
 10600                           
 10601  0077                     ?_TMR2_Initialize:	
 10602                           ; 1 bytes @ 0x0
 10603                           
 10604  0077                     ?_TMR0_Initialize:	
 10605                           ; 1 bytes @ 0x0
 10606                           
 10607  0077                     ?_EUSART1_Initialize:	
 10608                           ; 1 bytes @ 0x0
 10609                           
 10610  0077                     ?_EUSART1_Receive_ISR:	
 10611                           ; 1 bytes @ 0x0
 10612                           
 10613  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10614                           ; 1 bytes @ 0x0
 10615                           
 10616  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10617                           ; 1 bytes @ 0x0
 10618                           
 10619  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10620                           ; 1 bytes @ 0x0
 10621                           
 10622  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10623                           ; 1 bytes @ 0x0
 10624                           
 10625  0077                     ?_EUSART1_DefaultErrorHandler:	
 10626                           ; 1 bytes @ 0x0
 10627                           
 10628  0077                     ?_EUSART1_RxDataHandler:	
 10629                           ; 1 bytes @ 0x0
 10630                           
 10631  0077                     ??_EUSART1_RxDataHandler:	
 10632                           ; 1 bytes @ 0x0
 10633                           
 10634  0077                     ?_TMR0_ISR:	
 10635                           ; 1 bytes @ 0x0
 10636                           
 10637  0077                     ??_TMR0_ISR:	
 10638                           ; 1 bytes @ 0x0
 10639                           
 10640  0077                     ?_I2C1_BusCollisionISR:	
 10641                           ; 1 bytes @ 0x0
 10642                           
 10643  0077                     ??_I2C1_BusCollisionISR:	
 10644                           ; 1 bytes @ 0x0
 10645                           
 10646  0077                     ?_I2C1_ISR:	
 10647                           ; 1 bytes @ 0x0
 10648                           
 10649  0077                     ?_ADCC_ThresholdISR:	
 10650                           ; 1 bytes @ 0x0
 10651                           
 10652  0077                     ??_ADCC_ThresholdISR:	
 10653                           ; 1 bytes @ 0x0
 10654                           
 10655  0077                     ?_TMR0_DefaultInterruptHandler:	
 10656                           ; 1 bytes @ 0x0
 10657                           
 10658  0077                     ??_TMR0_DefaultInterruptHandler:	
 10659                           ; 1 bytes @ 0x0
 10660                           
 10661  0077                     ?_I2C1_Stop:	
 10662                           ; 1 bytes @ 0x0
 10663                           
 10664  0077                     ??_I2C1_Stop:	
 10665                           ; 1 bytes @ 0x0
 10666                           
 10667  0077                     ?_I2C1_FunctionComplete:	
 10668                           ; 1 bytes @ 0x0
 10669                           
 10670  0077                     ??_I2C1_FunctionComplete:	
 10671                           ; 1 bytes @ 0x0
 10672                           
 10673  0077                     ?_ADCC_DefaultInterruptHandler:	
 10674                           ; 1 bytes @ 0x0
 10675                           
 10676  0077                     ??_ADCC_DefaultInterruptHandler:	
 10677                           ; 1 bytes @ 0x0
 10678                           
 10679  0077                     ?_CLOCK_init:	
 10680                           ; 1 bytes @ 0x0
 10681                           
 10682  0077                     ?_BUTTONS_init:	
 10683                           ; 1 bytes @ 0x0
 10684                           
 10685  0077                     ?_BEAT_init:	
 10686                           ; 1 bytes @ 0x0
 10687                           
 10688  0077                     ?_TM1650_init:	
 10689                           ; 1 bytes @ 0x0
 10690                           
 10691  0077                     ?_DMX_init:	
 10692                           ; 1 bytes @ 0x0
 10693                           
 10694  0077                     ?_BUTTONS_task:	
 10695                           ; 1 bytes @ 0x0
 10696                           
 10697  0077                     ?_CONTROLLER_task:	
 10698                           ; 1 bytes @ 0x0
 10699                           
 10700  0077                     ?_BEAT_task:	
 10701                           ; 1 bytes @ 0x0
 10702                           
 10703  0077                     ?_LED_task:	
 10704                           ; 1 bytes @ 0x0
 10705                           
 10706  0077                     ?_GPIO_init:	
 10707                           ; 1 bytes @ 0x0
 10708                           
 10709  0077                     ?_CLOCK_timerCallback:	
 10710                           ; 1 bytes @ 0x0
 10711                           
 10712  0077                     ??_CLOCK_timerCallback:	
 10713                           ; 1 bytes @ 0x0
 10714                           
 10715  0077                     ?_menuSelection:	
 10716                           ; 1 bytes @ 0x0
 10717                           
 10718  0077                     ?_CONTROL_DMX:	
 10719                           ; 1 bytes @ 0x0
 10720                           
 10721  0077                     ?_CONTROL_BEAT:	
 10722                           ; 1 bytes @ 0x0
 10723                           
 10724  0077                     ?_TM1650_enable:	
 10725                           ; 1 bytes @ 0x0
 10726                           
 10727  0077                     ?_address_inc:	
 10728                           ; 1 bytes @ 0x0
 10729                           
 10730  0077                     ?_address_dec:	
 10731                           ; 1 bytes @ 0x0
 10732                           
 10733  0077                     ?_DMX_interrupt:	
 10734                           ; 1 bytes @ 0x0
 10735                           
 10736  0077                     ??_DMX_interrupt:	
 10737                           ; 1 bytes @ 0x0
 10738                           
 10739  0077                     ?_LED_task_BEAT_STROBE:	
 10740                           ; 1 bytes @ 0x0
 10741                           
 10742  0077                     ?_LED_task_BEAT_FADE:	
 10743                           ; 1 bytes @ 0x0
 10744                           
 10745  0077                     ?_LED_task_ANIMATION:	
 10746                           ; 1 bytes @ 0x0
 10747                           
 10748  0077                     ?_SYSTEM_Initialize:	
 10749                           ; 1 bytes @ 0x0
 10750                           
 10751  0077                     ?_INTERRUPT_InterruptManager:	
 10752                           ; 1 bytes @ 0x0
 10753                           
 10754  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10755                           ; 1 bytes @ 0x0
 10756                           
 10757  0077                     ?_ADCC_StartConversion:	
 10758                           ; 1 bytes @ 0x0
 10759                           
 10760  0077                     ?_main:	
 10761                           ; 1 bytes @ 0x0
 10762                           
 10763  0077                     ?_BUTTONS_isClicked:	
 10764                           ; 1 bytes @ 0x0
 10765                           
 10766  0077                     ?_BUTTONS_isHeld:	
 10767                           ; 1 bytes @ 0x0
 10768                           
 10769  0077                     ?_getMode:	
 10770                           ; 1 bytes @ 0x0
 10771                           
 10772  0077                     ?_putch:	
 10773                           ; 1 bytes @ 0x0
 10774                           
 10775  0077                     ?_adcThresholdHandler:	
 10776                           ; 1 bytes @ 0x0
 10777                           
 10778  0077                     ??_adcThresholdHandler:	
 10779                           ; 1 bytes @ 0x0
 10780                           
 10781  0077                     ?_BEAT_detected:	
 10782                           ; 1 bytes @ 0x0
 10783                           
 10784  0077                     ?_DMX_getAddress:	
 10785                           ; 1 bytes @ 0x0
 10786                           
 10787  0077                     ?_LED_task_DMX:	
 10788                           ; 1 bytes @ 0x0
 10789                           
 10790                           
 10791                           ; 1 bytes @ 0x0
 10792  0077                     	ds	1
 10793  0078                     ??_EUSART1_Receive_ISR:	
 10794  0078                     ??_EUSART1_DefaultErrorHandler:	
 10795                           ; 1 bytes @ 0x1
 10796                           
 10797  0078                     I2C1_Stop@completion_code:	
 10798                           ; 1 bytes @ 0x1
 10799                           
 10800                           
 10801                           ; 1 bytes @ 0x1
 10802  0078                     	ds	1
 10803  0079                     ??_I2C1_ISR:	
 10804                           
 10805                           ; 1 bytes @ 0x2
 10806  0079                     	ds	4
 10807  007D                     DMX_interrupt@dummy:	
 10808                           
 10809                           ; 1 bytes @ 0x6
 10810  007D                     	ds	1
 10811  007E                     ??_INTERRUPT_InterruptManager:	
 10812                           
 10813                           	psect	cstackBANK0
 10814  0020                     __pcstackBANK0:	
 10815                           ; 1 bytes @ 0x7
 10816                           
 10817  0020                     ??_PMD_Initialize:	
 10818  0020                     ??_PIN_MANAGER_Initialize:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0020                     ??_OSCILLATOR_Initialize:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0020                     ??_I2C1_Initialize:	
 10825                           ; 1 bytes @ 0x0
 10826                           
 10827  0020                     ??_PWM1_Initialize:	
 10828                           ; 1 bytes @ 0x0
 10829                           
 10830  0020                     ??_PWM2_Initialize:	
 10831                           ; 1 bytes @ 0x0
 10832                           
 10833  0020                     ??_PWM4_Initialize:	
 10834                           ; 1 bytes @ 0x0
 10835                           
 10836  0020                     ??_PWM3_Initialize:	
 10837                           ; 1 bytes @ 0x0
 10838                           
 10839  0020                     ??_TMR2_Initialize:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0020                     ?_EUSART1_SetErrorHandler:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0020                     ?_TMR0_SetInterruptHandler:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10858                           ; 1 bytes @ 0x0
 10859                           
 10860  0020                     ?_I2C1_MasterTRBInsert:	
 10861                           ; 1 bytes @ 0x0
 10862                           
 10863  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10864                           ; 1 bytes @ 0x0
 10865                           
 10866  0020                     ??_GPIO_init:	
 10867                           ; 1 bytes @ 0x0
 10868                           
 10869  0020                     ??_CONTROL_BEAT:	
 10870                           ; 1 bytes @ 0x0
 10871                           
 10872  0020                     ??_LED_task_BEAT_FADE:	
 10873                           ; 1 bytes @ 0x0
 10874                           
 10875  0020                     ??_LED_task_ANIMATION:	
 10876                           ; 1 bytes @ 0x0
 10877                           
 10878  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10879                           ; 1 bytes @ 0x0
 10880                           
 10881  0020                     ??_ADCC_StartConversion:	
 10882                           ; 1 bytes @ 0x0
 10883                           
 10884  0020                     ?_ADCC_SetUpperThreshold:	
 10885                           ; 1 bytes @ 0x0
 10886                           
 10887  0020                     ?_init:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890  0020                     ??_BUTTONS_isClicked:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893  0020                     ??_BUTTONS_isHeld:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896  0020                     ??_getMode:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899  0020                     ??_BEAT_detected:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902  0020                     ??_DMX_getAddress:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905  0020                     ?_CLOCK_getTime:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908  0020                     ?_strlen:	
 10909                           ; 2 bytes @ 0x0
 10910                           
 10911  0020                     ?__Umul8_16:	
 10912                           ; 2 bytes @ 0x0
 10913                           
 10914  0020                     ?___lwdiv:	
 10915                           ; 2 bytes @ 0x0
 10916                           
 10917  0020                     ?___xxtofl:	
 10918                           ; 2 bytes @ 0x0
 10919                           
 10920  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 10921                           ; 4 bytes @ 0x0
 10922                           
 10923  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926  0020                     ADCC_StartConversion@channel:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929  0020                     BUTTONS_isClicked@button:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932  0020                     BUTTONS_isHeld@button:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935  0020                     __Umul8_16@multiplicand:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10942                           ; 2 bytes @ 0x0
 10943                           
 10944  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 10945                           ; 2 bytes @ 0x0
 10946                           
 10947  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10948                           ; 2 bytes @ 0x0
 10949                           
 10950  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 10951                           ; 2 bytes @ 0x0
 10952                           
 10953  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 10954                           ; 2 bytes @ 0x0
 10955                           
 10956  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 10957                           ; 2 bytes @ 0x0
 10958                           
 10959  0020                     init@port:	
 10960                           ; 2 bytes @ 0x0
 10961                           
 10962  0020                     ___lwdiv@divisor:	
 10963                           ; 2 bytes @ 0x0
 10964                           
 10965  0020                     strlen@s:	
 10966                           ; 2 bytes @ 0x0
 10967                           
 10968  0020                     ___xxtofl@val:	
 10969                           ; 2 bytes @ 0x0
 10970                           
 10971                           
 10972                           ; 4 bytes @ 0x0
 10973  0020                     	ds	1
 10974  0021                     I2C1_MasterTRBInsert@pflag:	
 10975  0021                     I2C1_MasterWriteTRBBuild@length:	
 10976                           ; 1 bytes @ 0x1
 10977                           
 10978                           
 10979                           ; 1 bytes @ 0x1
 10980  0021                     	ds	1
 10981  0022                     ??_ADCC_Initialize:	
 10982  0022                     ??_TMR0_Initialize:	
 10983                           ; 1 bytes @ 0x2
 10984                           
 10985  0022                     ??_EUSART1_Initialize:	
 10986                           ; 1 bytes @ 0x2
 10987                           
 10988  0022                     ??_EUSART1_SetRxInterruptHandler:	
 10989                           ; 1 bytes @ 0x2
 10990                           
 10991  0022                     ??_EUSART1_SetFramingErrorHandler:	
 10992                           ; 1 bytes @ 0x2
 10993                           
 10994  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 10995                           ; 1 bytes @ 0x2
 10996                           
 10997  0022                     ??_EUSART1_SetErrorHandler:	
 10998                           ; 1 bytes @ 0x2
 10999                           
 11000  0022                     ??_TMR0_SetInterruptHandler:	
 11001                           ; 1 bytes @ 0x2
 11002                           
 11003  0022                     ??_I2C1_MasterTRBInsert:	
 11004                           ; 1 bytes @ 0x2
 11005                           
 11006  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11007                           ; 1 bytes @ 0x2
 11008                           
 11009  0022                     ??_CLOCK_init:	
 11010                           ; 1 bytes @ 0x2
 11011                           
 11012  0022                     ??_BEAT_init:	
 11013                           ; 1 bytes @ 0x2
 11014                           
 11015  0022                     ??_CLOCK_getTime:	
 11016                           ; 1 bytes @ 0x2
 11017                           
 11018  0022                     ??_BUTTONS_task:	
 11019                           ; 1 bytes @ 0x2
 11020                           
 11021  0022                     ??_strlen:	
 11022                           ; 1 bytes @ 0x2
 11023                           
 11024  0022                     ??__Umul8_16:	
 11025                           ; 1 bytes @ 0x2
 11026                           
 11027  0022                     ??_SYSTEM_Initialize:	
 11028                           ; 1 bytes @ 0x2
 11029                           
 11030  0022                     ??_ADCC_SetUpperThreshold:	
 11031                           ; 1 bytes @ 0x2
 11032                           
 11033  0022                     init@pin:	
 11034                           ; 1 bytes @ 0x2
 11035                           
 11036  0022                     I2C1_MasterWriteTRBBuild@address:	
 11037                           ; 1 bytes @ 0x2
 11038                           
 11039  0022                     ___lwdiv@dividend:	
 11040                           ; 2 bytes @ 0x2
 11041                           
 11042                           
 11043                           ; 2 bytes @ 0x2
 11044  0022                     	ds	1
 11045  0023                     ??_init:	
 11046  0023                     I2C1_MasterTRBInsert@count:	
 11047                           ; 1 bytes @ 0x3
 11048                           
 11049  0023                     strlen@a:	
 11050                           ; 1 bytes @ 0x3
 11051                           
 11052                           
 11053                           ; 2 bytes @ 0x3
 11054  0023                     	ds	1
 11055  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11056  0024                     ??___lwdiv:	
 11057                           ; 1 bytes @ 0x4
 11058                           
 11059  0024                     ??___xxtofl:	
 11060                           ; 1 bytes @ 0x4
 11061                           
 11062  0024                     init@btn:	
 11063                           ; 1 bytes @ 0x4
 11064                           
 11065  0024                     __Umul8_16@product:	
 11066                           ; 1 bytes @ 0x4
 11067                           
 11068                           
 11069                           ; 2 bytes @ 0x4
 11070  0024                     	ds	1
 11071  0025                     ??_BUTTONS_init:	
 11072  0025                     BUTTONS_task@i:	
 11073                           ; 1 bytes @ 0x5
 11074                           
 11075  0025                     ___lwdiv@quotient:	
 11076                           ; 1 bytes @ 0x5
 11077                           
 11078                           
 11079                           ; 2 bytes @ 0x5
 11080  0025                     	ds	1
 11081  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11082  0026                     BUTTONS_task@time:	
 11083                           ; 1 bytes @ 0x6
 11084                           
 11085  0026                     __Umul8_16@word_mpld:	
 11086                           ; 2 bytes @ 0x6
 11087                           
 11088                           
 11089                           ; 2 bytes @ 0x6
 11090  0026                     	ds	1
 11091  0027                     ?_I2C1_MasterWrite:	
 11092  0027                     I2C1_MasterWrite@length:	
 11093                           ; 1 bytes @ 0x7
 11094                           
 11095  0027                     ___lwdiv@counter:	
 11096                           ; 1 bytes @ 0x7
 11097                           
 11098                           
 11099                           ; 1 bytes @ 0x7
 11100  0027                     	ds	1
 11101  0028                     ??_BEAT_task:	
 11102  0028                     ?___lwmod:	
 11103                           ; 1 bytes @ 0x8
 11104                           
 11105  0028                     BUTTONS_task@btn:	
 11106                           ; 2 bytes @ 0x8
 11107                           
 11108  0028                     ___xxtofl@sign:	
 11109                           ; 1 bytes @ 0x8
 11110                           
 11111  0028                     __Umul8_16@multiplier:	
 11112                           ; 1 bytes @ 0x8
 11113                           
 11114  0028                     I2C1_MasterWrite@address:	
 11115                           ; 1 bytes @ 0x8
 11116                           
 11117  0028                     ___lwmod@divisor:	
 11118                           ; 2 bytes @ 0x8
 11119                           
 11120                           
 11121                           ; 2 bytes @ 0x8
 11122  0028                     	ds	1
 11123  0029                     ___xxtofl@exp:	
 11124                           
 11125                           ; 1 bytes @ 0x9
 11126  0029                     	ds	1
 11127  002A                     I2C1_MasterWrite@pflag:	
 11128  002A                     BEAT_task@offset:	
 11129                           ; 1 bytes @ 0xA
 11130                           
 11131  002A                     ___lwmod@dividend:	
 11132                           ; 2 bytes @ 0xA
 11133                           
 11134  002A                     ___xxtofl@arg:	
 11135                           ; 2 bytes @ 0xA
 11136                           
 11137                           
 11138                           ; 4 bytes @ 0xA
 11139  002A                     	ds	1
 11140  002B                     ??_I2C1_MasterWrite:	
 11141                           
 11142                           ; 1 bytes @ 0xB
 11143  002B                     	ds	1
 11144  002C                     ??___lwmod:	
 11145                           
 11146                           ; 1 bytes @ 0xC
 11147  002C                     	ds	1
 11148  002D                     I2C1_MasterWrite@pdata:	
 11149  002D                     ___lwmod@counter:	
 11150                           ; 1 bytes @ 0xD
 11151                           
 11152                           
 11153                           ; 1 bytes @ 0xD
 11154  002D                     	ds	1
 11155  002E                     ?_writeData:	
 11156  002E                     ?___fldiv:	
 11157                           ; 1 bytes @ 0xE
 11158                           
 11159  002E                     writeData@data:	
 11160                           ; 4 bytes @ 0xE
 11161                           
 11162  002E                     ___fldiv@a:	
 11163                           ; 1 bytes @ 0xE
 11164                           
 11165                           
 11166                           ; 4 bytes @ 0xE
 11167  002E                     	ds	1
 11168  002F                     ??_writeData:	
 11169                           
 11170                           ; 1 bytes @ 0xF
 11171  002F                     	ds	3
 11172  0032                     writeData@address:	
 11173  0032                     ___fldiv@b:	
 11174                           ; 1 bytes @ 0x12
 11175                           
 11176                           
 11177                           ; 4 bytes @ 0x12
 11178  0032                     	ds	1
 11179  0033                     writeData@status:	
 11180                           
 11181                           ; 1 bytes @ 0x13
 11182  0033                     	ds	1
 11183  0034                     ??_TM1650_enable:	
 11184  0034                     ?_TM1650_fastPrintNum:	
 11185                           ; 1 bytes @ 0x14
 11186                           
 11187  0034                     ?_TM1650_setDigit:	
 11188                           ; 1 bytes @ 0x14
 11189                           
 11190  0034                     TM1650_enable@enable:	
 11191                           ; 1 bytes @ 0x14
 11192                           
 11193  0034                     TM1650_setDigit@data:	
 11194                           ; 1 bytes @ 0x14
 11195                           
 11196  0034                     TM1650_fastPrintNum@num:	
 11197                           ; 1 bytes @ 0x14
 11198                           
 11199                           
 11200                           ; 2 bytes @ 0x14
 11201  0034                     	ds	1
 11202  0035                     ??_TM1650_setDigit:	
 11203                           
 11204                           ; 1 bytes @ 0x15
 11205  0035                     	ds	1
 11206  0036                     ??_TM1650_fastPrintNum:	
 11207  0036                     ??___fldiv:	
 11208                           ; 1 bytes @ 0x16
 11209                           
 11210  0036                     TM1650_setDigit@digit:	
 11211                           ; 1 bytes @ 0x16
 11212                           
 11213                           
 11214                           ; 1 bytes @ 0x16
 11215  0036                     	ds	1
 11216  0037                     ??_DMX_init:	
 11217  0037                     ??_CONTROL_DMX:	
 11218                           ; 1 bytes @ 0x17
 11219                           
 11220  0037                     ??_address_inc:	
 11221                           ; 1 bytes @ 0x17
 11222                           
 11223  0037                     ??_address_dec:	
 11224                           ; 1 bytes @ 0x17
 11225                           
 11226  0037                     ??_putch:	
 11227                           ; 1 bytes @ 0x17
 11228                           
 11229                           
 11230                           ; 1 bytes @ 0x17
 11231  0037                     	ds	1
 11232  0038                     putch@n:	
 11233                           
 11234                           ; 1 bytes @ 0x18
 11235  0038                     	ds	1
 11236  0039                     ?_fputc:	
 11237  0039                     fputc@c:	
 11238                           ; 2 bytes @ 0x19
 11239                           
 11240                           
 11241                           ; 2 bytes @ 0x19
 11242  0039                     	ds	2
 11243  003B                     fputc@fp:	
 11244  003B                     ___fldiv@rem:	
 11245                           ; 1 bytes @ 0x1B
 11246                           
 11247                           
 11248                           ; 4 bytes @ 0x1B
 11249  003B                     	ds	1
 11250  003C                     ??_fputc:	
 11251                           
 11252                           ; 1 bytes @ 0x1C
 11253  003C                     	ds	3
 11254  003F                     ___fldiv@sign:	
 11255                           
 11256                           ; 1 bytes @ 0x1F
 11257  003F                     	ds	1
 11258  0040                     ___fldiv@new_exp:	
 11259                           
 11260                           ; 2 bytes @ 0x20
 11261  0040                     	ds	1
 11262  0041                     ?_fputs:	
 11263  0041                     fputs@fp:	
 11264                           ; 2 bytes @ 0x21
 11265                           
 11266                           
 11267                           ; 1 bytes @ 0x21
 11268  0041                     	ds	1
 11269  0042                     ??_fputs:	
 11270  0042                     ___fldiv@grs:	
 11271                           ; 1 bytes @ 0x22
 11272                           
 11273                           
 11274                           ; 4 bytes @ 0x22
 11275  0042                     	ds	3
 11276  0045                     fputs@c:	
 11277                           
 11278                           ; 1 bytes @ 0x25
 11279  0045                     	ds	1
 11280  0046                     ___fldiv@bexp:	
 11281  0046                     fputs@i:	
 11282                           ; 1 bytes @ 0x26
 11283                           
 11284                           
 11285                           ; 2 bytes @ 0x26
 11286  0046                     	ds	1
 11287  0047                     ___fldiv@aexp:	
 11288                           
 11289                           ; 1 bytes @ 0x27
 11290  0047                     	ds	1
 11291  0048                     ?___flmul:	
 11292  0048                     fputs@s:	
 11293                           ; 4 bytes @ 0x28
 11294                           
 11295  0048                     ___flmul@b:	
 11296                           ; 1 bytes @ 0x28
 11297                           
 11298                           
 11299                           ; 4 bytes @ 0x28
 11300  0048                     	ds	1
 11301  0049                     ?_pad:	
 11302  0049                     pad@buf:	
 11303                           ; 2 bytes @ 0x29
 11304                           
 11305                           
 11306                           ; 1 bytes @ 0x29
 11307  0049                     	ds	1
 11308  004A                     pad@p:	
 11309                           
 11310                           ; 2 bytes @ 0x2A
 11311  004A                     	ds	2
 11312  004C                     ??_pad:	
 11313  004C                     ___flmul@a:	
 11314                           ; 1 bytes @ 0x2C
 11315                           
 11316                           
 11317                           ; 4 bytes @ 0x2C
 11318  004C                     	ds	1
 11319  004D                     pad@i:	
 11320                           
 11321                           ; 2 bytes @ 0x2D
 11322  004D                     	ds	2
 11323  004F                     pad@w:	
 11324                           
 11325                           ; 2 bytes @ 0x2F
 11326  004F                     	ds	1
 11327  0050                     ??___flmul:	
 11328                           
 11329                           ; 1 bytes @ 0x30
 11330  0050                     	ds	1
 11331  0051                     pad@fp:	
 11332                           
 11333                           ; 1 bytes @ 0x31
 11334  0051                     	ds	1
 11335  0052                     ?_ctoa:	
 11336  0052                     ctoa@c:	
 11337                           ; 2 bytes @ 0x32
 11338                           
 11339                           
 11340                           ; 1 bytes @ 0x32
 11341  0052                     	ds	2
 11342  0054                     ??_ctoa:	
 11343                           
 11344                           ; 1 bytes @ 0x34
 11345  0054                     	ds	1
 11346  0055                     ___flmul@sign:	
 11347  0055                     ctoa@w:	
 11348                           ; 1 bytes @ 0x35
 11349                           
 11350                           
 11351                           ; 2 bytes @ 0x35
 11352  0055                     	ds	1
 11353  0056                     ___flmul@aexp:	
 11354                           
 11355                           ; 1 bytes @ 0x36
 11356  0056                     	ds	1
 11357  0057                     ctoa@fp:	
 11358  0057                     ___flmul@grs:	
 11359                           ; 1 bytes @ 0x37
 11360                           
 11361                           
 11362                           ; 4 bytes @ 0x37
 11363  0057                     	ds	1
 11364  0058                     ?_vfpfcnvrt:	
 11365  0058                     vfpfcnvrt@fmt:	
 11366                           ; 2 bytes @ 0x38
 11367                           
 11368                           
 11369                           ; 1 bytes @ 0x38
 11370  0058                     	ds	1
 11371  0059                     vfpfcnvrt@ap:	
 11372                           
 11373                           ; 1 bytes @ 0x39
 11374  0059                     	ds	1
 11375  005A                     ??_vfpfcnvrt:	
 11376                           
 11377                           ; 1 bytes @ 0x3A
 11378  005A                     	ds	1
 11379  005B                     ___flmul@bexp:	
 11380                           
 11381                           ; 1 bytes @ 0x3B
 11382  005B                     	ds	1
 11383  005C                     ___flmul@prod:	
 11384                           
 11385                           ; 4 bytes @ 0x3C
 11386  005C                     	ds	3
 11387  005F                     vfpfcnvrt@c:	
 11388                           
 11389                           ; 1 bytes @ 0x3F
 11390  005F                     	ds	1
 11391  0060                     vfpfcnvrt@fp:	
 11392  0060                     ___flmul@temp:	
 11393                           ; 1 bytes @ 0x40
 11394                           
 11395                           
 11396                           ; 2 bytes @ 0x40
 11397  0060                     	ds	1
 11398  0061                     ?_vfprintf:	
 11399  0061                     vfprintf@fmt:	
 11400                           ; 2 bytes @ 0x41
 11401                           
 11402                           
 11403                           ; 2 bytes @ 0x41
 11404  0061                     	ds	1
 11405  0062                     ?___fltol:	
 11406  0062                     ___fltol@f1:	
 11407                           ; 4 bytes @ 0x42
 11408                           
 11409                           
 11410                           ; 4 bytes @ 0x42
 11411  0062                     	ds	1
 11412  0063                     vfprintf@ap:	
 11413                           
 11414                           ; 1 bytes @ 0x43
 11415  0063                     	ds	1
 11416  0064                     ??_vfprintf:	
 11417                           
 11418                           ; 1 bytes @ 0x44
 11419  0064                     	ds	2
 11420  0066                     ??___fltol:	
 11421  0066                     vfprintf@fp:	
 11422                           ; 1 bytes @ 0x46
 11423                           
 11424                           
 11425                           ; 1 bytes @ 0x46
 11426  0066                     	ds	1
 11427  0067                     vfprintf@cfmt:	
 11428                           
 11429                           ; 2 bytes @ 0x47
 11430  0067                     	ds	2
 11431  0069                     ??_printf:	
 11432                           
 11433                           ; 1 bytes @ 0x49
 11434  0069                     	ds	2
 11435  006B                     ___fltol@sign1:	
 11436                           
 11437                           ; 1 bytes @ 0x4B
 11438  006B                     	ds	1
 11439  006C                     ___fltol@exp1:	
 11440  006C                     printf@ap:	
 11441                           ; 1 bytes @ 0x4C
 11442                           
 11443                           
 11444                           ; 1 bytes @ 0x4C
 11445  006C                     	ds	1
 11446  006D                     ??_TM1650_init:	
 11447  006D                     ??_menuSelection:	
 11448                           ; 1 bytes @ 0x4D
 11449                           
 11450  006D                     ??_PWM3_LoadDutyValue:	
 11451                           ; 1 bytes @ 0x4D
 11452                           
 11453  006D                     ??_PWM4_LoadDutyValue:	
 11454                           ; 1 bytes @ 0x4D
 11455                           
 11456  006D                     ??_PWM1_LoadDutyValue:	
 11457                           ; 1 bytes @ 0x4D
 11458                           
 11459  006D                     ??_PWM2_LoadDutyValue:	
 11460                           ; 1 bytes @ 0x4D
 11461                           
 11462  006D                     beatBrightnessCalculation@temp:	
 11463                           ; 1 bytes @ 0x4D
 11464                           
 11465                           
 11466                           ; 1 bytes @ 0x4D
 11467  006D                     	ds	1
 11468  006E                     ??_beatColorCreator:	
 11469                           
 11470                           ; 1 bytes @ 0x4E
 11471  006E                     	ds	1
 11472  006F                     CONTROLLER_task@isActive:	
 11473                           
 11474                           ; 1 bytes @ 0x4F
 11475  006F                     	ds	1
 11476                           
 11477                           	psect	maintext
 11478  1726                     __pmaintext:	
 11479 ;;
 11480 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11481 ;;
 11482 ;; *************** function _main *****************
 11483 ;; Defined at:
 11484 ;;		line 58 in file "main.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;		None
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      void 
 11491 ;; Registers used:
 11492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : B3F/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11501 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11502 ;;Total ram usage:        2 bytes
 11503 ;; Hardware stack levels required when called:   19
 11504 ;; This function calls:
 11505 ;;		_BEAT_init
 11506 ;;		_BEAT_task
 11507 ;;		_BUTTONS_init
 11508 ;;		_BUTTONS_task
 11509 ;;		_CLOCK_getTime
 11510 ;;		_CLOCK_init
 11511 ;;		_CONTROLLER_task
 11512 ;;		_DMX_init
 11513 ;;		_LED_task
 11514 ;;		_SYSTEM_Initialize
 11515 ;;		_TM1650_init
 11516 ;; This function is called by:
 11517 ;;		Startup code after reset
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           
 11522                           ;psect for function _main
 11523  1726                     _main:	
 11524                           
 11525                           ;main.c: 61:     SYSTEM_Initialize();
 11526                           
 11527                           ;incstack = 0
 11528 ;; hardware stack exceeded
 11529                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11530  1726  3194  2467  3197   	fcall	_SYSTEM_Initialize
 11531                           
 11532                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11533  1729  3015               	movlw	21
 11534  172A  0142               	movlb	2	; select bank2
 11535  172B  00E6               	movwf	(??_main^(0+256)+1)
 11536  172C  304B               	movlw	75
 11537  172D  00E5               	movwf	??_main^(0+256)
 11538  172E  30BE               	movlw	190
 11539  172F                     u7597:	
 11540  172F  0B89               	decfsz	9,f
 11541  1730  2F2F               	goto	u7597
 11542  1731  0BE5               	decfsz	??_main^(0+256),f
 11543  1732  2F2F               	goto	u7597
 11544  1733  0BE6               	decfsz	(??_main^(0+256)+1),f
 11545  1734  2F2F               	goto	u7597
 11546  1735  0000               	nop
 11547                           
 11548                           ;main.c: 63:     CLOCK_init();
 11549  1736  3191  212B  3197   	fcall	_CLOCK_init
 11550                           
 11551                           ;main.c: 64:     BUTTONS_init();
 11552  1739  3197  275F  3197   	fcall	_BUTTONS_init
 11553                           
 11554                           ;main.c: 65:     BEAT_init();
 11555  173C  3192  22BD  3197   	fcall	_BEAT_init
 11556                           
 11557                           ;main.c: 67:     (INTCONbits.GIE = 1);
 11558  173F  178B               	bsf	11,7	;volatile
 11559                           
 11560                           ;main.c: 68:     (INTCONbits.PEIE = 1);
 11561  1740  170B               	bsf	11,6	;volatile
 11562                           
 11563                           ;main.c: 70:     TM1650_init();
 11564  1741  3192  2294  3197   	fcall	_TM1650_init
 11565                           
 11566                           ;main.c: 71:     DMX_init();
 11567  1744  3192  2259  3197   	fcall	_DMX_init
 11568                           
 11569                           ;main.c: 72:     startTime = CLOCK_getTime();
 11570  1747  3191  214E  3197   	fcall	_CLOCK_getTime
 11571  174A  0140               	movlb	0	; select bank0
 11572  174B  0821               	movf	?_CLOCK_getTime+1,w
 11573  174C  0142               	movlb	2	; select bank2
 11574  174D  00C9               	movwf	(_startTime+1)^(0+256)
 11575  174E  0140               	movlb	0	; select bank0
 11576  174F  0820               	movf	?_CLOCK_getTime,w
 11577  1750  0142               	movlb	2	; select bank2
 11578  1751  00C8               	movwf	_startTime^(0+256)
 11579  1752                     l7487:	
 11580                           
 11581                           ;main.c: 75:     {;main.c: 76:         BUTTONS_task();
 11582  1752  318F  271B  3197   	fcall	_BUTTONS_task
 11583                           
 11584                           ;main.c: 77:         CONTROLLER_task();
 11585  1755  3186  26DF  3197   	fcall	_CONTROLLER_task
 11586                           
 11587                           ;main.c: 78:         BEAT_task();
 11588  1758  318D  2578  3197   	fcall	_BEAT_task
 11589                           
 11590                           ;main.c: 79:         LED_task();
 11591  175B  3194  24D7  3197   	fcall	_LED_task
 11592  175E  2F52               	goto	l7487
 11593  175F                     __end_of_main:	
 11594                           
 11595                           	psect	text1
 11596  1294                     __ptext1:	
 11597 ;; *************** function _TM1650_init *****************
 11598 ;; Defined at:
 11599 ;;		line 51 in file "tm1650.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;		None
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11617 ;;Total ram usage:        0 bytes
 11618 ;; Hardware stack levels used:    1
 11619 ;; Hardware stack levels required when called:   17
 11620 ;; This function calls:
 11621 ;;		_TM1650_enable
 11622 ;;		_printf
 11623 ;; This function is called by:
 11624 ;;		_main
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           
 11629                           ;psect for function _TM1650_init
 11630  1294                     _TM1650_init:	
 11631                           
 11632                           ;tm1650.c: 53:     TM1650_enable(1);
 11633                           
 11634                           ;incstack = 0
 11635 ;; hardware stack exceeded
 11636                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11637  1294  3001               	movlw	1
 11638  1295  3192  22A8  3192   	fcall	_TM1650_enable
 11639                           
 11640                           ;tm1650.c: 54:     printf("    ");
 11641  1298  3071               	movlw	low (STR_8| (0+32768))
 11642  1299  0141               	movlb	1	; select bank1
 11643  129A  00A0               	movwf	printf@fmt^(0+128)
 11644  129B  3098               	movlw	high (STR_8| (0+32768))
 11645  129C  00A1               	movwf	(printf@fmt^(0+128)+1)
 11646  129D  3188  2000  3192   	fcall	_printf
 11647                           
 11648                           ;tm1650.c: 55:     printf("\r");
 11649  12A0  3057               	movlw	low ((STR_18+4)| (0+32768))
 11650  12A1  0141               	movlb	1	; select bank1
 11651  12A2  00A0               	movwf	printf@fmt^(0+128)
 11652  12A3  3098               	movlw	high ((STR_18+4)| (0+32768))
 11653  12A4  00A1               	movwf	(printf@fmt^(0+128)+1)
 11654  12A5  3188  2000         	fcall	_printf
 11655  12A7  0008               	return
 11656  12A8                     __end_of_TM1650_init:	
 11657                           
 11658                           	psect	text2
 11659  1467                     __ptext2:	
 11660 ;; *************** function _SYSTEM_Initialize *****************
 11661 ;; Defined at:
 11662 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;		None
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;		None
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  1    wreg      void 
 11669 ;; Registers used:
 11670 ;;		wreg, status,2, status,0, pclath, cstack
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11680 ;;Total ram usage:        0 bytes
 11681 ;; Hardware stack levels used:    1
 11682 ;; Hardware stack levels required when called:    6
 11683 ;; This function calls:
 11684 ;;		_ADCC_Initialize
 11685 ;;		_EUSART1_Initialize
 11686 ;;		_I2C1_Initialize
 11687 ;;		_OSCILLATOR_Initialize
 11688 ;;		_PIN_MANAGER_Initialize
 11689 ;;		_PMD_Initialize
 11690 ;;		_PWM1_Initialize
 11691 ;;		_PWM2_Initialize
 11692 ;;		_PWM3_Initialize
 11693 ;;		_PWM4_Initialize
 11694 ;;		_TMR0_Initialize
 11695 ;;		_TMR2_Initialize
 11696 ;; This function is called by:
 11697 ;;		_main
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           
 11702                           ;psect for function _SYSTEM_Initialize
 11703  1467                     _SYSTEM_Initialize:	
 11704                           
 11705                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11709  1467  3191  2196  3194   	fcall	_PMD_Initialize
 11710                           
 11711                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11712  146A  3196  2681  3194   	fcall	_PIN_MANAGER_Initialize
 11713                           
 11714                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11715  146D  3191  218D  3194   	fcall	_OSCILLATOR_Initialize
 11716                           
 11717                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11718  1470  3193  234F  3194   	fcall	_I2C1_Initialize
 11719                           
 11720                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11721  1473  3191  21AA  3194   	fcall	_PWM1_Initialize
 11722                           
 11723                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11724  1476  3191  21B5  3194   	fcall	_PWM2_Initialize
 11725                           
 11726                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11727  1479  3194  24B1  3194   	fcall	_ADCC_Initialize
 11728                           
 11729                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11730  147C  3191  21CB  3194   	fcall	_PWM4_Initialize
 11731                           
 11732                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11733  147F  3191  21C0  3194   	fcall	_PWM3_Initialize
 11734                           
 11735                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11736  1482  3192  2208  3194   	fcall	_TMR2_Initialize
 11737                           
 11738                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11739  1485  3192  2280  3194   	fcall	_TMR0_Initialize
 11740                           
 11741                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11742  1488  3195  25E5         	fcall	_EUSART1_Initialize
 11743  148A  0008               	return
 11744  148B                     __end_of_SYSTEM_Initialize:	
 11745                           
 11746                           	psect	text3
 11747  1208                     __ptext3:	
 11748 ;; *************** function _TMR2_Initialize *****************
 11749 ;; Defined at:
 11750 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;		None
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;		None
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1    wreg      void 
 11757 ;; Registers used:
 11758 ;;		wreg, status,2
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11768 ;;Total ram usage:        0 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    4
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_SYSTEM_Initialize
 11775 ;; This function uses a non-reentrant model
 11776 ;;
 11777                           
 11778                           
 11779                           ;psect for function _TMR2_Initialize
 11780  1208                     _TMR2_Initialize:	
 11781                           
 11782                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11783                           
 11784                           ;incstack = 0
 11785                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11786  1208  3001               	movlw	1
 11787  1209  0145               	movlb	5	; select bank5
 11788  120A  0090               	movwf	16	;volatile
 11789                           
 11790                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11791  120B  018F               	clrf	15	;volatile
 11792                           
 11793                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11794  120C  0191               	clrf	17	;volatile
 11795                           
 11796                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11797  120D  30FF               	movlw	255
 11798  120E  008D               	movwf	13	;volatile
 11799                           
 11800                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11801  120F  018C               	clrf	12	;volatile
 11802                           
 11803                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11804  1210  014E               	movlb	14	; select bank14
 11805  1211  1090               	bcf	16,1	;volatile
 11806                           
 11807                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 11808  1212  30F0               	movlw	240
 11809  1213  0145               	movlb	5	; select bank5
 11810  1214  008E               	movwf	14	;volatile
 11811  1215  0008               	return
 11812  1216                     __end_of_TMR2_Initialize:	
 11813                           
 11814                           	psect	text4
 11815  1280                     __ptext4:	
 11816 ;; *************** function _TMR0_Initialize *****************
 11817 ;; Defined at:
 11818 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;		None
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;		None
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  1    wreg      void 
 11825 ;; Registers used:
 11826 ;;		wreg, status,2, status,0, pclath, cstack
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11836 ;;Total ram usage:        0 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; Hardware stack levels required when called:    5
 11839 ;; This function calls:
 11840 ;;		_TMR0_SetInterruptHandler
 11841 ;; This function is called by:
 11842 ;;		_SYSTEM_Initialize
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           
 11847                           ;psect for function _TMR0_Initialize
 11848  1280                     _TMR0_Initialize:	
 11849                           
 11850                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11851                           
 11852                           ;incstack = 0
 11853                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11854  1280  3045               	movlw	69
 11855  1281  014B               	movlb	11	; select bank11
 11856  1282  009F               	movwf	31	;volatile
 11857                           
 11858                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11859  1283  30F9               	movlw	249
 11860  1284  009D               	movwf	29	;volatile
 11861                           
 11862                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11863  1285  019C               	clrf	28	;volatile
 11864                           
 11865                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11866  1286  014E               	movlb	14	; select bank14
 11867  1287  128C               	bcf	12,5	;volatile
 11868                           
 11869                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11870  1288  1696               	bsf	22,5	;volatile
 11871                           
 11872                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11873  1289  3002               	movlw	low _TMR0_DefaultInterruptHandler
 11874  128A  0140               	movlb	0	; select bank0
 11875  128B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11876  128C  3000               	movlw	high _TMR0_DefaultInterruptHandler
 11877  128D  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11878  128E  3191  2157         	fcall	_TMR0_SetInterruptHandler
 11879                           
 11880                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 11881  1290  3080               	movlw	128
 11882  1291  014B               	movlb	11	; select bank11
 11883  1292  009E               	movwf	30	;volatile
 11884  1293  0008               	return
 11885  1294                     __end_of_TMR0_Initialize:	
 11886                           
 11887                           	psect	text5
 11888  11CB                     __ptext5:	
 11889 ;; *************** function _PWM4_Initialize *****************
 11890 ;; Defined at:
 11891 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;		None
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, status,2, status,0
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11909 ;;Total ram usage:        0 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:    4
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_SYSTEM_Initialize
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           
 11920                           ;psect for function _PWM4_Initialize
 11921  11CB                     _PWM4_Initialize:	
 11922                           
 11923                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 11924                           
 11925                           ;incstack = 0
 11926                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 11927  11CB  308C               	movlw	140
 11928  11CC  0146               	movlb	6	; select bank6
 11929  11CD  009A               	movwf	26	;volatile
 11930                           
 11931                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 11932  11CE  0199               	clrf	25	;volatile
 11933                           
 11934                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 11935  11CF  0198               	clrf	24	;volatile
 11936                           
 11937                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 11938  11D0  0144               	movlb	4	; select bank4
 11939  11D1  081E               	movf	30,w	;volatile
 11940  11D2  393F               	andlw	-193
 11941  11D3  3840               	iorlw	64
 11942  11D4  009E               	movwf	30	;volatile
 11943  11D5  0008               	return
 11944  11D6                     __end_of_PWM4_Initialize:	
 11945                           
 11946                           	psect	text6
 11947  11C0                     __ptext6:	
 11948 ;; *************** function _PWM3_Initialize *****************
 11949 ;; Defined at:
 11950 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 11951 ;; Parameters:    Size  Location     Type
 11952 ;;		None
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;		None
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  1    wreg      void 
 11957 ;; Registers used:
 11958 ;;		wreg, status,2, status,0
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11968 ;;Total ram usage:        0 bytes
 11969 ;; Hardware stack levels used:    1
 11970 ;; Hardware stack levels required when called:    4
 11971 ;; This function calls:
 11972 ;;		Nothing
 11973 ;; This function is called by:
 11974 ;;		_SYSTEM_Initialize
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           
 11979                           ;psect for function _PWM3_Initialize
 11980  11C0                     _PWM3_Initialize:	
 11981                           
 11982                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 11983                           
 11984                           ;incstack = 0
 11985                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 11986  11C0  308C               	movlw	140
 11987  11C1  0146               	movlb	6	; select bank6
 11988  11C2  0096               	movwf	22	;volatile
 11989                           
 11990                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 11991  11C3  0195               	clrf	21	;volatile
 11992                           
 11993                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 11994  11C4  0194               	clrf	20	;volatile
 11995                           
 11996                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 11997  11C5  0144               	movlb	4	; select bank4
 11998  11C6  081E               	movf	30,w	;volatile
 11999  11C7  39CF               	andlw	-49
 12000  11C8  3810               	iorlw	16
 12001  11C9  009E               	movwf	30	;volatile
 12002  11CA  0008               	return
 12003  11CB                     __end_of_PWM3_Initialize:	
 12004                           
 12005                           	psect	text7
 12006  11B5                     __ptext7:	
 12007 ;; *************** function _PWM2_Initialize *****************
 12008 ;; Defined at:
 12009 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;		None
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      void 
 12016 ;; Registers used:
 12017 ;;		wreg, status,2, status,0
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12027 ;;Total ram usage:        0 bytes
 12028 ;; Hardware stack levels used:    1
 12029 ;; Hardware stack levels required when called:    4
 12030 ;; This function calls:
 12031 ;;		Nothing
 12032 ;; This function is called by:
 12033 ;;		_SYSTEM_Initialize
 12034 ;; This function uses a non-reentrant model
 12035 ;;
 12036                           
 12037                           
 12038                           ;psect for function _PWM2_Initialize
 12039  11B5                     _PWM2_Initialize:	
 12040                           
 12041                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12042                           
 12043                           ;incstack = 0
 12044                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12045  11B5  308C               	movlw	140
 12046  11B6  0146               	movlb	6	; select bank6
 12047  11B7  0092               	movwf	18	;volatile
 12048                           
 12049                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12050  11B8  0191               	clrf	17	;volatile
 12051                           
 12052                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12053  11B9  0190               	clrf	16	;volatile
 12054                           
 12055                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12056  11BA  0144               	movlb	4	; select bank4
 12057  11BB  081E               	movf	30,w	;volatile
 12058  11BC  39F3               	andlw	-13
 12059  11BD  3804               	iorlw	4
 12060  11BE  009E               	movwf	30	;volatile
 12061  11BF  0008               	return
 12062  11C0                     __end_of_PWM2_Initialize:	
 12063                           
 12064                           	psect	text8
 12065  11AA                     __ptext8:	
 12066 ;; *************** function _PWM1_Initialize *****************
 12067 ;; Defined at:
 12068 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;		None
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;		None
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  1    wreg      void 
 12075 ;; Registers used:
 12076 ;;		wreg, status,2, status,0
 12077 ;; Tracked objects:
 12078 ;;		On entry : 0/0
 12079 ;;		On exit  : 0/0
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12086 ;;Total ram usage:        0 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; Hardware stack levels required when called:    4
 12089 ;; This function calls:
 12090 ;;		Nothing
 12091 ;; This function is called by:
 12092 ;;		_SYSTEM_Initialize
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           
 12097                           ;psect for function _PWM1_Initialize
 12098  11AA                     _PWM1_Initialize:	
 12099                           
 12100                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12101                           
 12102                           ;incstack = 0
 12103                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12104  11AA  308C               	movlw	140
 12105  11AB  0146               	movlb	6	; select bank6
 12106  11AC  008E               	movwf	14	;volatile
 12107                           
 12108                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12109  11AD  018D               	clrf	13	;volatile
 12110                           
 12111                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12112  11AE  018C               	clrf	12	;volatile
 12113                           
 12114                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12115  11AF  0144               	movlb	4	; select bank4
 12116  11B0  081E               	movf	30,w	;volatile
 12117  11B1  39FC               	andlw	-4
 12118  11B2  3801               	iorlw	1
 12119  11B3  009E               	movwf	30	;volatile
 12120  11B4  0008               	return
 12121  11B5                     __end_of_PWM1_Initialize:	
 12122                           
 12123                           	psect	text9
 12124  1196                     __ptext9:	
 12125 ;; *************** function _PMD_Initialize *****************
 12126 ;; Defined at:
 12127 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;		None
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;		None
 12132 ;; Return value:  Size  Location     Type
 12133 ;;                  1    wreg      void 
 12134 ;; Registers used:
 12135 ;;		status,2
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12145 ;;Total ram usage:        0 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:    4
 12148 ;; This function calls:
 12149 ;;		Nothing
 12150 ;; This function is called by:
 12151 ;;		_SYSTEM_Initialize
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           
 12156                           ;psect for function _PMD_Initialize
 12157  1196                     _PMD_Initialize:	
 12158                           
 12159                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12160                           
 12161                           ;incstack = 0
 12162                           ; Regs used in _PMD_Initialize: [status,2]
 12163  1196  014F               	movlb	15	; select bank15
 12164  1197  0196               	clrf	22	;volatile
 12165                           
 12166                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12167  1198  0197               	clrf	23	;volatile
 12168                           
 12169                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12170  1199  0198               	clrf	24	;volatile
 12171                           
 12172                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12173  119A  0199               	clrf	25	;volatile
 12174                           
 12175                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12176  119B  019A               	clrf	26	;volatile
 12177                           
 12178                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12179  119C  019B               	clrf	27	;volatile
 12180                           
 12181                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12182  119D  019C               	clrf	28	;volatile
 12183                           
 12184                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12185  119E  019D               	clrf	29	;volatile
 12186  119F  0008               	return
 12187  11A0                     __end_of_PMD_Initialize:	
 12188                           
 12189                           	psect	text10
 12190  1681                     __ptext10:	
 12191 ;; *************** function _PIN_MANAGER_Initialize *****************
 12192 ;; Defined at:
 12193 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12194 ;; Parameters:    Size  Location     Type
 12195 ;;		None
 12196 ;; Auto vars:     Size  Location     Type
 12197 ;;		None
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  1    wreg      void 
 12200 ;; Registers used:
 12201 ;;		wreg, status,2
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;Total ram usage:        0 bytes
 12212 ;; Hardware stack levels used:    1
 12213 ;; Hardware stack levels required when called:    4
 12214 ;; This function calls:
 12215 ;;		Nothing
 12216 ;; This function is called by:
 12217 ;;		_SYSTEM_Initialize
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           
 12222                           ;psect for function _PIN_MANAGER_Initialize
 12223  1681                     _PIN_MANAGER_Initialize:	
 12224                           
 12225                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12226                           
 12227                           ;incstack = 0
 12228                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12229  1681  0140               	movlb	0	; select bank0
 12230  1682  0198               	clrf	24	;volatile
 12231                           
 12232                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12233  1683  0199               	clrf	25	;volatile
 12234                           
 12235                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12236  1684  019A               	clrf	26	;volatile
 12237                           
 12238                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12239  1685  303F               	movlw	63
 12240  1686  0092               	movwf	18	;volatile
 12241                           
 12242                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12243  1687  30F0               	movlw	240
 12244  1688  0093               	movwf	19	;volatile
 12245                           
 12246                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12247  1689  3006               	movlw	6
 12248  168A  0094               	movwf	20	;volatile
 12249                           
 12250                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12251  168B  30FF               	movlw	255
 12252  168C  017E               	movlb	62	; select bank62
 12253  168D  00CE               	movwf	78	;volatile
 12254                           
 12255                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12256  168E  30E0               	movlw	224
 12257  168F  00C3               	movwf	67	;volatile
 12258                           
 12259                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12260  1690  3007               	movlw	7
 12261  1691  00B8               	movwf	56	;volatile
 12262                           
 12263                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12264  1692  01C4               	clrf	68	;volatile
 12265                           
 12266                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12267  1693  01B9               	clrf	57	;volatile
 12268                           
 12269                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12270  1694  01CF               	clrf	79	;volatile
 12271                           
 12272                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12273  1695  01BA               	clrf	58	;volatile
 12274                           
 12275                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12276  1696  01C5               	clrf	69	;volatile
 12277                           
 12278                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12279  1697  01D0               	clrf	80	;volatile
 12280                           
 12281                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12282  1698  3037               	movlw	55
 12283  1699  00BB               	movwf	59	;volatile
 12284                           
 12285                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12286  169A  30F0               	movlw	240
 12287  169B  00C6               	movwf	70	;volatile
 12288                           
 12289                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12290  169C  30FF               	movlw	255
 12291  169D  00D1               	movwf	81	;volatile
 12292                           
 12293                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12294  169E  3005               	movlw	5
 12295  169F  017D               	movlb	61	; select bank61
 12296  16A0  00C5               	movwf	69	;volatile
 12297                           
 12298                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12299  16A1  3014               	movlw	20
 12300  16A2  017E               	movlb	62	; select bank62
 12301  16A3  0094               	movwf	20	;volatile
 12302                           
 12303                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12304  16A4  300B               	movlw	11
 12305  16A5  00A3               	movwf	35	;volatile
 12306                           
 12307                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12308  16A6  300C               	movlw	12
 12309  16A7  00A4               	movwf	36	;volatile
 12310                           
 12311                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12312  16A8  3013               	movlw	19
 12313  16A9  0095               	movwf	21	;volatile
 12314                           
 12315                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12316  16AA  3009               	movlw	9
 12317  16AB  00A5               	movwf	37	;volatile
 12318                           
 12319                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12320  16AC  300A               	movlw	10
 12321  16AD  00A6               	movwf	38	;volatile
 12322                           
 12323                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12324  16AE  3009               	movlw	9
 12325  16AF  00A7               	movwf	39	;volatile
 12326                           
 12327                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12328  16B0  3004               	movlw	4
 12329  16B1  017D               	movlb	61	; select bank61
 12330  16B2  00C6               	movwf	70	;volatile
 12331                           
 12332                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12333  16B3  300C               	movlw	12
 12334  16B4  00CB               	movwf	75	;volatile
 12335  16B5  0008               	return
 12336  16B6                     __end_of_PIN_MANAGER_Initialize:	
 12337                           
 12338                           	psect	text11
 12339  118D                     __ptext11:	
 12340 ;; *************** function _OSCILLATOR_Initialize *****************
 12341 ;; Defined at:
 12342 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;		None
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1    wreg      void 
 12349 ;; Registers used:
 12350 ;;		wreg, status,2
 12351 ;; Tracked objects:
 12352 ;;		On entry : 0/0
 12353 ;;		On exit  : 0/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12360 ;;Total ram usage:        0 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; Hardware stack levels required when called:    4
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_SYSTEM_Initialize
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370                           
 12371                           ;psect for function _OSCILLATOR_Initialize
 12372  118D                     _OSCILLATOR_Initialize:	
 12373                           
 12374                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12375                           
 12376                           ;incstack = 0
 12377                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12378  118D  3060               	movlw	96
 12379  118E  0151               	movlb	17	; select bank17
 12380  118F  008D               	movwf	13	;volatile
 12381                           
 12382                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12383  1190  018F               	clrf	15	;volatile
 12384                           
 12385                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12386  1191  0191               	clrf	17	;volatile
 12387                           
 12388                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12389  1192  3006               	movlw	6
 12390  1193  0093               	movwf	19	;volatile
 12391                           
 12392                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12393  1194  0192               	clrf	18	;volatile
 12394  1195  0008               	return
 12395  1196                     __end_of_OSCILLATOR_Initialize:	
 12396                           
 12397                           	psect	text12
 12398  134F                     __ptext12:	
 12399 ;; *************** function _I2C1_Initialize *****************
 12400 ;; Defined at:
 12401 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;		None
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;		None
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12419 ;;Total ram usage:        1 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    4
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		_SYSTEM_Initialize
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function _I2C1_Initialize
 12431  134F                     _I2C1_Initialize:	
 12432                           
 12433                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12434                           
 12435                           ;incstack = 0
 12436                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12437  134F  3052               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12438  1350  0140               	movlb	0	; select bank0
 12439  1351  00A0               	movwf	??_I2C1_Initialize
 12440  1352  0820               	movf	??_I2C1_Initialize,w
 12441  1353  0141               	movlb	1	; select bank1
 12442  1354  00C6               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12443                           
 12444                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12445  1355  3052               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12446  1356  0140               	movlb	0	; select bank0
 12447  1357  00A0               	movwf	??_I2C1_Initialize
 12448  1358  0820               	movf	??_I2C1_Initialize,w
 12449  1359  0141               	movlb	1	; select bank1
 12450  135A  00C5               	movwf	_i2c1_object^(0+128)
 12451                           
 12452                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12453  135B  14C7               	bsf	(_i2c1_object^(0+128)+2),1
 12454                           
 12455                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12456  135C  1047               	bcf	(_i2c1_object^(0+128)+2),0
 12457                           
 12458                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12459  135D  01C9               	clrf	(_i2c1_object^(0+128)+4)
 12460                           
 12461                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12462  135E  0143               	movlb	3	; select bank3
 12463  135F  018F               	clrf	15	;volatile
 12464                           
 12465                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12466  1360  3028               	movlw	40
 12467  1361  0090               	movwf	16	;volatile
 12468                           
 12469                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12470  1362  0192               	clrf	18	;volatile
 12471                           
 12472                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12473  1363  304F               	movlw	79
 12474  1364  008D               	movwf	13	;volatile
 12475                           
 12476                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12477  1365  014E               	movlb	14	; select bank14
 12478  1366  100F               	bcf	15,0	;volatile
 12479                           
 12480                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12481  1367  108F               	bcf	15,1	;volatile
 12482                           
 12483                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12484  1368  1419               	bsf	25,0	;volatile
 12485                           
 12486                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12487  1369  1499               	bsf	25,1	;volatile
 12488  136A  0008               	return
 12489  136B                     __end_of_I2C1_Initialize:	
 12490                           
 12491                           	psect	text13
 12492  15E5                     __ptext13:	
 12493 ;; *************** function _EUSART1_Initialize *****************
 12494 ;; Defined at:
 12495 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;		None
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0, pclath, cstack
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12513 ;;Total ram usage:        0 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    5
 12516 ;; This function calls:
 12517 ;;		_EUSART1_SetErrorHandler
 12518 ;;		_EUSART1_SetFramingErrorHandler
 12519 ;;		_EUSART1_SetOverrunErrorHandler
 12520 ;;		_EUSART1_SetRxInterruptHandler
 12521 ;; This function is called by:
 12522 ;;		_SYSTEM_Initialize
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           
 12527                           ;psect for function _EUSART1_Initialize
 12528  15E5                     _EUSART1_Initialize:	
 12529                           
 12530                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12531                           
 12532                           ;incstack = 0
 12533                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12534  15E5  014E               	movlb	14	; select bank14
 12535  15E6  1299               	bcf	25,5	;volatile
 12536                           
 12537                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12538  15E7  3018               	movlw	low _EUSART1_Receive_ISR
 12539  15E8  0140               	movlb	0	; select bank0
 12540  15E9  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12541  15EA  3016               	movlw	high _EUSART1_Receive_ISR
 12542  15EB  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12543  15EC  3191  2160  3195   	fcall	_EUSART1_SetRxInterruptHandler
 12544                           
 12545                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12546  15EF  3008               	movlw	8
 12547  15F0  0142               	movlb	2	; select bank2
 12548  15F1  009F               	movwf	31	;volatile
 12549                           
 12550                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12551  15F2  3090               	movlw	144
 12552  15F3  009D               	movwf	29	;volatile
 12553                           
 12554                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12555  15F4  3004               	movlw	4
 12556  15F5  009E               	movwf	30	;volatile
 12557                           
 12558                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12559  15F6  301F               	movlw	31
 12560  15F7  009B               	movwf	27	;volatile
 12561                           
 12562                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12563  15F8  019C               	clrf	28	;volatile
 12564                           
 12565                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12566  15F9  3008               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12567  15FA  0140               	movlb	0	; select bank0
 12568  15FB  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12569  15FC  3011               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12570  15FD  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12571  15FE  3191  217B  3195   	fcall	_EUSART1_SetFramingErrorHandler
 12572                           
 12573                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12574  1601  3018               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12575  1602  0140               	movlb	0	; select bank0
 12576  1603  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12577  1604  3011               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12578  1605  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12579  1606  3191  2184  3195   	fcall	_EUSART1_SetOverrunErrorHandler
 12580                           
 12581                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12582  1609  300C               	movlw	low _EUSART1_DefaultErrorHandler
 12583  160A  0140               	movlb	0	; select bank0
 12584  160B  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12585  160C  3011               	movlw	high _EUSART1_DefaultErrorHandler
 12586  160D  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12587  160E  3191  2172         	fcall	_EUSART1_SetErrorHandler
 12588                           
 12589                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12590  1610  0141               	movlb	1	; select bank1
 12591  1611  01E3               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12592                           
 12593                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12594  1612  01F4               	clrf	_eusart1RxHead	;volatile
 12595                           
 12596                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12597  1613  01F3               	clrf	_eusart1RxTail	;volatile
 12598                           
 12599                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12600  1614  01E4               	clrf	_eusart1RxCount^(0+128)	;volatile
 12601                           
 12602                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12603  1615  014E               	movlb	14	; select bank14
 12604  1616  1699               	bsf	25,5	;volatile
 12605  1617  0008               	return
 12606  1618                     __end_of_EUSART1_Initialize:	
 12607                           
 12608                           	psect	text14
 12609  1184                     __ptext14:	
 12610 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12611 ;; Defined at:
 12612 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12615 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;		None
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;Total ram usage:        2 bytes
 12632 ;; Hardware stack levels used:    1
 12633 ;; Hardware stack levels required when called:    4
 12634 ;; This function calls:
 12635 ;;		Nothing
 12636 ;; This function is called by:
 12637 ;;		_EUSART1_Initialize
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641                           
 12642                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12643  1184                     _EUSART1_SetOverrunErrorHandler:	
 12644                           
 12645                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12646                           
 12647                           ;incstack = 0
 12648                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12649  1184  0140               	movlb	0	; select bank0
 12650  1185  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12651  1186  0142               	movlb	2	; select bank2
 12652  1187  00DC               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12653  1188  0140               	movlb	0	; select bank0
 12654  1189  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12655  118A  0142               	movlb	2	; select bank2
 12656  118B  00DB               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12657  118C  0008               	return
 12658  118D                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12659                           
 12660                           	psect	text15
 12661  117B                     __ptext15:	
 12662 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12663 ;; Defined at:
 12664 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12667 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;		None
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      void 
 12672 ;; Registers used:
 12673 ;;		wreg
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12683 ;;Total ram usage:        2 bytes
 12684 ;; Hardware stack levels used:    1
 12685 ;; Hardware stack levels required when called:    4
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		_EUSART1_Initialize
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           
 12694                           ;psect for function _EUSART1_SetFramingErrorHandler
 12695  117B                     _EUSART1_SetFramingErrorHandler:	
 12696                           
 12697                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12698                           
 12699                           ;incstack = 0
 12700                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12701  117B  0140               	movlb	0	; select bank0
 12702  117C  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12703  117D  0142               	movlb	2	; select bank2
 12704  117E  00DE               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12705  117F  0140               	movlb	0	; select bank0
 12706  1180  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12707  1181  0142               	movlb	2	; select bank2
 12708  1182  00DD               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12709  1183  0008               	return
 12710  1184                     __end_of_EUSART1_SetFramingErrorHandler:	
 12711                           
 12712                           	psect	text16
 12713  1172                     __ptext16:	
 12714 ;; *************** function _EUSART1_SetErrorHandler *****************
 12715 ;; Defined at:
 12716 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12719 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;		None
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      void 
 12724 ;; Registers used:
 12725 ;;		wreg
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12735 ;;Total ram usage:        2 bytes
 12736 ;; Hardware stack levels used:    1
 12737 ;; Hardware stack levels required when called:    4
 12738 ;; This function calls:
 12739 ;;		Nothing
 12740 ;; This function is called by:
 12741 ;;		_EUSART1_Initialize
 12742 ;; This function uses a non-reentrant model
 12743 ;;
 12744                           
 12745                           
 12746                           ;psect for function _EUSART1_SetErrorHandler
 12747  1172                     _EUSART1_SetErrorHandler:	
 12748                           
 12749                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12750                           
 12751                           ;incstack = 0
 12752                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12753  1172  0140               	movlb	0	; select bank0
 12754  1173  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12755  1174  0142               	movlb	2	; select bank2
 12756  1175  00DA               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12757  1176  0140               	movlb	0	; select bank0
 12758  1177  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12759  1178  0142               	movlb	2	; select bank2
 12760  1179  00D9               	movwf	_EUSART1_ErrorHandler^(0+256)
 12761  117A  0008               	return
 12762  117B                     __end_of_EUSART1_SetErrorHandler:	
 12763                           
 12764                           	psect	text17
 12765  14B1                     __ptext17:	
 12766 ;; *************** function _ADCC_Initialize *****************
 12767 ;; Defined at:
 12768 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;		None
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;		None
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  1    wreg      void 
 12775 ;; Registers used:
 12776 ;;		wreg, status,2, status,0, pclath, cstack
 12777 ;; Tracked objects:
 12778 ;;		On entry : 0/0
 12779 ;;		On exit  : 0/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12786 ;;Total ram usage:        0 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:    5
 12789 ;; This function calls:
 12790 ;;		_ADCC_SetADTIInterruptHandler
 12791 ;; This function is called by:
 12792 ;;		_SYSTEM_Initialize
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796                           
 12797                           ;psect for function _ADCC_Initialize
 12798  14B1                     _ADCC_Initialize:	
 12799                           
 12800                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12801                           
 12802                           ;incstack = 0
 12803                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12804  14B1  0141               	movlb	1	; select bank1
 12805  14B2  018C               	clrf	12	;volatile
 12806                           
 12807                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12808  14B3  018D               	clrf	13	;volatile
 12809                           
 12810                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12811  14B4  018E               	clrf	14	;volatile
 12812                           
 12813                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12814  14B5  018F               	clrf	15	;volatile
 12815                           
 12816                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12817  14B6  0192               	clrf	18	;volatile
 12818                           
 12819                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12820  14B7  0193               	clrf	19	;volatile
 12821                           
 12822                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12823  14B8  0198               	clrf	24	;volatile
 12824                           
 12825                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12826  14B9  019A               	clrf	26	;volatile
 12827                           
 12828                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12829  14BA  019F               	clrf	31	;volatile
 12830                           
 12831                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12832  14BB  0142               	movlb	2	; select bank2
 12833  14BC  018C               	clrf	12	;volatile
 12834                           
 12835                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12836  14BD  018D               	clrf	13	;volatile
 12837                           
 12838                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12839  14BE  018E               	clrf	14	;volatile
 12840                           
 12841                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12842  14BF  018F               	clrf	15	;volatile
 12843                           
 12844                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12845  14C0  0190               	clrf	16	;volatile
 12846                           
 12847                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12848  14C1  0192               	clrf	18	;volatile
 12849                           
 12850                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12851  14C2  3054               	movlw	84
 12852  14C3  0093               	movwf	19	;volatile
 12853                           
 12854                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12855  14C4  3056               	movlw	86
 12856  14C5  0094               	movwf	20	;volatile
 12857                           
 12858                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12859  14C6  0195               	clrf	21	;volatile
 12860                           
 12861                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12862  14C7  0196               	clrf	22	;volatile
 12863                           
 12864                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12865  14C8  0197               	clrf	23	;volatile
 12866                           
 12867                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12868  14C9  0198               	clrf	24	;volatile
 12869                           
 12870                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12871  14CA  30D4               	movlw	212
 12872  14CB  0091               	movwf	17	;volatile
 12873                           
 12874                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12875  14CC  014E               	movlb	14	; select bank14
 12876  14CD  108D               	bcf	13,1	;volatile
 12877                           
 12878                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12879  14CE  1497               	bsf	23,1	;volatile
 12880                           
 12881                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12882  14CF  3007               	movlw	low _ADCC_DefaultInterruptHandler
 12883  14D0  0140               	movlb	0	; select bank0
 12884  14D1  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 12885  14D2  3011               	movlw	high _ADCC_DefaultInterruptHandler
 12886  14D3  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 12887  14D4  3191  2133         	fcall	_ADCC_SetADTIInterruptHandler
 12888  14D6  0008               	return
 12889  14D7                     __end_of_ADCC_Initialize:	
 12890                           
 12891                           	psect	text18
 12892  14D7                     __ptext18:	
 12893 ;; *************** function _LED_task *****************
 12894 ;; Defined at:
 12895 ;;		line 44 in file "led.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;		None
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12912 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12913 ;;Total ram usage:        2 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; Hardware stack levels required when called:    9
 12916 ;; This function calls:
 12917 ;;		_LED_task_ANIMATION
 12918 ;;		_LED_task_BEAT_FADE
 12919 ;;		_LED_task_BEAT_STROBE
 12920 ;;		_LED_task_DMX
 12921 ;;		_getMode
 12922 ;; This function is called by:
 12923 ;;		_main
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           
 12928                           ;psect for function _LED_task
 12929  14D7                     _LED_task:	
 12930                           
 12931                           ;led.c: 46:     switch(getMode()){
 12932                           
 12933                           ;incstack = 0
 12934                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12935  14D7  2CE4               	goto	l7455
 12936  14D8                     l7445:	
 12937                           
 12938                           ;led.c: 48:             LED_task_DMX();
 12939  14D8  3189  213B         	fcall	_LED_task_DMX
 12940                           
 12941                           ;led.c: 49:             break;
 12942  14DA  0008               	return
 12943  14DB                     l7447:	
 12944                           
 12945                           ;led.c: 52:             LED_task_BEAT_STROBE();
 12946  14DB  318E  2646         	fcall	_LED_task_BEAT_STROBE
 12947                           
 12948                           ;led.c: 53:             break;
 12949  14DD  0008               	return
 12950  14DE                     l7449:	
 12951                           
 12952                           ;led.c: 56:             LED_task_BEAT_FADE();
 12953  14DE  3187  27FF         	fcall	_LED_task_BEAT_FADE
 12954                           
 12955                           ;led.c: 57:             break;
 12956  14E0  0008               	return
 12957  14E1                     l7451:	
 12958                           
 12959                           ;led.c: 60:             LED_task_ANIMATION();
 12960  14E1  3180  2003         	fcall	_LED_task_ANIMATION
 12961                           
 12962                           ;led.c: 61:             break;
 12963  14E3  0008               	return
 12964  14E4                     l7455:	
 12965  14E4  3191  2115  3194   	fcall	_getMode
 12966  14E7  0141               	movlb	1	; select bank1
 12967  14E8  00C3               	movwf	??_LED_task^(0+128)
 12968  14E9  01C4               	clrf	(??_LED_task^(0+128)+1)
 12969                           
 12970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12971                           ; Switch size 1, requested type "simple"
 12972                           ; Number of cases is 1, Range of values is 0 to 0
 12973                           ; switch strategies available:
 12974                           ; Name         Instructions Cycles
 12975                           ; simple_byte            4     3 (average)
 12976                           ; direct_byte            8     6 (fixed)
 12977                           ; jumptable            260     6 (fixed)
 12978                           ;	Chosen strategy is simple_byte
 12979  14EA  0844               	movf	(??_LED_task+1)^(0+128),w
 12980  14EB  3A00               	xorlw	0	; case 0
 12981  14EC  1903               	skipnz
 12982  14ED  2CEF               	goto	l7623
 12983  14EE  2CFD               	goto	l1288
 12984  14EF                     l7623:	
 12985                           
 12986                           ; Switch size 1, requested type "simple"
 12987                           ; Number of cases is 4, Range of values is 0 to 3
 12988                           ; switch strategies available:
 12989                           ; Name         Instructions Cycles
 12990                           ; simple_byte           13     7 (average)
 12991                           ; direct_byte           14     6 (fixed)
 12992                           ; jumptable            260     6 (fixed)
 12993                           ;	Chosen strategy is simple_byte
 12994  14EF  0843               	movf	??_LED_task^(0+128),w
 12995  14F0  3A00               	xorlw	0	; case 0
 12996  14F1  1903               	skipnz
 12997  14F2  2CE1               	goto	l7451
 12998  14F3  3A01               	xorlw	1	; case 1
 12999  14F4  1903               	skipnz
 13000  14F5  2CDB               	goto	l7447
 13001  14F6  3A03               	xorlw	3	; case 2
 13002  14F7  1903               	skipnz
 13003  14F8  2CD8               	goto	l7445
 13004  14F9  3A01               	xorlw	1	; case 3
 13005  14FA  1903               	skipnz
 13006  14FB  2CDE               	goto	l7449
 13007  14FC  2CFD               	goto	l1288
 13008  14FD                     l1288:	
 13009  14FD  0008               	return
 13010  14FE                     __end_of_LED_task:	
 13011                           
 13012                           	psect	text19
 13013  1115                     __ptext19:	
 13014 ;; *************** function _getMode *****************
 13015 ;; Defined at:
 13016 ;;		line 128 in file "controller.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;		None
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      enum E10869
 13023 ;; Registers used:
 13024 ;;		wreg
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;Total ram usage:        0 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:    4
 13037 ;; This function calls:
 13038 ;;		Nothing
 13039 ;; This function is called by:
 13040 ;;		_LED_task
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           
 13045                           ;psect for function _getMode
 13046  1115                     _getMode:	
 13047                           
 13048                           ;controller.c: 129:     return currentSelection;
 13049                           
 13050                           ;incstack = 0
 13051                           ; Regs used in _getMode: [wreg]
 13052  1115  0141               	movlb	1	; select bank1
 13053  1116  086B               	movf	_currentSelection^(0+128),w
 13054  1117  0008               	return
 13055  1118                     __end_of_getMode:	
 13056                           
 13057                           	psect	text20
 13058  093B                     __ptext20:	
 13059 ;; *************** function _LED_task_DMX *****************
 13060 ;; Defined at:
 13061 ;;		line 31 in file "led.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;		None
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;  dmx             4    0[BANK2 ] struct .
 13066 ;; Return value:  Size  Location     Type
 13067 ;;                  1    wreg      void 
 13068 ;; Registers used:
 13069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13070 ;; Tracked objects:
 13071 ;;		On entry : 0/0
 13072 ;;		On exit  : 0/0
 13073 ;;		Unchanged: 0/0
 13074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13076 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13077 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13078 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13079 ;;Total ram usage:        9 bytes
 13080 ;; Hardware stack levels used:    1
 13081 ;; Hardware stack levels required when called:    7
 13082 ;; This function calls:
 13083 ;;		_DMX_getAddress
 13084 ;;		_LED_setColor
 13085 ;; This function is called by:
 13086 ;;		_LED_task
 13087 ;; This function uses a non-reentrant model
 13088 ;;
 13089                           
 13090                           
 13091                           ;psect for function _LED_task_DMX
 13092  093B                     _LED_task_DMX:	
 13093                           
 13094                           ;led.c: 33:     color_t dmx;;led.c: 35:     dmx.red = dmxArray[DMX_getAddress()];
 13095                           
 13096                           ;incstack = 0
 13097                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13098  093B  3191  2112  3189   	fcall	_DMX_getAddress
 13099  093E  0141               	movlb	1	; select bank1
 13100  093F  00BE               	movwf	??_LED_task_DMX^(0+128)
 13101  0940  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13102  0941  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13103  0942  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13104  0943  30EE               	movlw	238
 13105  0944  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13106  0945  3023               	movlw	35
 13107  0946  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13108  0947  083E               	movf	??_LED_task_DMX^(0+128),w
 13109  0948  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13110  0949  0086               	movwf	6
 13111  094A  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13112  094B  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13113  094C  0087               	movwf	7
 13114  094D  0801               	movf	1,w
 13115  094E  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13116  094F  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13117  0950  0142               	movlb	2	; select bank2
 13118  0951  00E2               	movwf	(LED_task_DMX@dmx^(0+256)+1)
 13119                           
 13120                           ;led.c: 36:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13121  0952  3191  2112  3189   	fcall	_DMX_getAddress
 13122  0955  0141               	movlb	1	; select bank1
 13123  0956  00BE               	movwf	??_LED_task_DMX^(0+128)
 13124  0957  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13125  0958  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13126  0959  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13127  095A  30F0               	movlw	240
 13128  095B  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13129  095C  3023               	movlw	35
 13130  095D  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13131  095E  083E               	movf	??_LED_task_DMX^(0+128),w
 13132  095F  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13133  0960  0086               	movwf	6
 13134  0961  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13135  0962  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13136  0963  0087               	movwf	7
 13137  0964  0801               	movf	1,w
 13138  0965  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13139  0966  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13140  0967  0142               	movlb	2	; select bank2
 13141  0968  00E3               	movwf	(LED_task_DMX@dmx^(0+256)+2)
 13142                           
 13143                           ;led.c: 37:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13144  0969  3191  2112  3189   	fcall	_DMX_getAddress
 13145  096C  0141               	movlb	1	; select bank1
 13146  096D  00BE               	movwf	??_LED_task_DMX^(0+128)
 13147  096E  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13148  096F  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13149  0970  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13150  0971  30F2               	movlw	242
 13151  0972  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13152  0973  3023               	movlw	35
 13153  0974  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13154  0975  083E               	movf	??_LED_task_DMX^(0+128),w
 13155  0976  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13156  0977  0086               	movwf	6
 13157  0978  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13158  0979  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13159  097A  0087               	movwf	7
 13160  097B  0801               	movf	1,w
 13161  097C  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13162  097D  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13163  097E  0142               	movlb	2	; select bank2
 13164  097F  00E4               	movwf	(LED_task_DMX@dmx^(0+256)+3)
 13165                           
 13166                           ;led.c: 38:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13167  0980  3191  2112  3189   	fcall	_DMX_getAddress
 13168  0983  0141               	movlb	1	; select bank1
 13169  0984  00BE               	movwf	??_LED_task_DMX^(0+128)
 13170  0985  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13171  0986  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13172  0987  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13173  0988  30F4               	movlw	244
 13174  0989  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13175  098A  3023               	movlw	35
 13176  098B  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13177  098C  083E               	movf	??_LED_task_DMX^(0+128),w
 13178  098D  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13179  098E  0086               	movwf	6
 13180  098F  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13181  0990  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13182  0991  0087               	movwf	7
 13183  0992  0801               	movf	1,w
 13184  0993  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13185  0994  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13186  0995  0142               	movlb	2	; select bank2
 13187  0996  00E1               	movwf	LED_task_DMX@dmx^(0+256)
 13188                           
 13189                           ;led.c: 40:     LED_setColor(dmx);
 13190  0997  0864               	movf	(LED_task_DMX@dmx+3)^(0+256),w
 13191  0998  0141               	movlb	1	; select bank1
 13192  0999  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13193  099A  0142               	movlb	2	; select bank2
 13194  099B  0863               	movf	(LED_task_DMX@dmx+2)^(0+256),w
 13195  099C  0141               	movlb	1	; select bank1
 13196  099D  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13197  099E  0142               	movlb	2	; select bank2
 13198  099F  0862               	movf	(LED_task_DMX@dmx+1)^(0+256),w
 13199  09A0  0141               	movlb	1	; select bank1
 13200  09A1  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13201  09A2  0142               	movlb	2	; select bank2
 13202  09A3  0861               	movf	LED_task_DMX@dmx^(0+256),w
 13203  09A4  0141               	movlb	1	; select bank1
 13204  09A5  00B6               	movwf	LED_setColor@input^(0+128)
 13205  09A6  3184  242A         	fcall	_LED_setColor
 13206  09A8  0008               	return
 13207  09A9                     __end_of_LED_task_DMX:	
 13208                           
 13209                           	psect	text21
 13210  1112                     __ptext21:	
 13211 ;; *************** function _DMX_getAddress *****************
 13212 ;; Defined at:
 13213 ;;		line 73 in file "dmx.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;		None
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;		None
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  1    wreg      unsigned char 
 13220 ;; Registers used:
 13221 ;;		wreg
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13231 ;;Total ram usage:        0 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:    4
 13234 ;; This function calls:
 13235 ;;		Nothing
 13236 ;; This function is called by:
 13237 ;;		_LED_task_DMX
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           
 13242                           ;psect for function _DMX_getAddress
 13243  1112                     _DMX_getAddress:	
 13244                           
 13245                           ;dmx.c: 74:     return address;
 13246                           
 13247                           ;incstack = 0
 13248                           ; Regs used in _DMX_getAddress: [wreg]
 13249  1112  0141               	movlb	1	; select bank1
 13250  1113  0869               	movf	_address^(0+128),w
 13251  1114  0008               	return
 13252  1115                     __end_of_DMX_getAddress:	
 13253                           
 13254                           	psect	text22
 13255  0E46                     __ptext22:	
 13256 ;; *************** function _LED_task_BEAT_STROBE *****************
 13257 ;; Defined at:
 13258 ;;		line 66 in file "led.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;		None
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		wreg, status,2, status,0, pclath, cstack
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13274 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13275 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13276 ;;Total ram usage:        2 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:    8
 13279 ;; This function calls:
 13280 ;;		_BEAT_detected
 13281 ;;		_CLOCK_getTime
 13282 ;;		_LED_setColor
 13283 ;;		_beatColorCreator
 13284 ;; This function is called by:
 13285 ;;		_LED_task
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           
 13290                           ;psect for function _LED_task_BEAT_STROBE
 13291  0E46                     _LED_task_BEAT_STROBE:	
 13292                           
 13293                           ;led.c: 68:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 13294                           
 13295                           ;incstack = 0
 13296                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 13297  0E46  3191  214E  318E   	fcall	_CLOCK_getTime
 13298  0E49  0142               	movlb	2	; select bank2
 13299  0E4A  0836               	movf	_lastLedActiveTime^(0+256),w
 13300  0E4B  0140               	movlb	0	; select bank0
 13301  0E4C  0220               	subwf	?_CLOCK_getTime,w
 13302  0E4D  0141               	movlb	1	; select bank1
 13303  0E4E  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13304  0E4F  0142               	movlb	2	; select bank2
 13305  0E50  0837               	movf	(_lastLedActiveTime+1)^(0+256),w
 13306  0E51  0140               	movlb	0	; select bank0
 13307  0E52  3B21               	subwfb	?_CLOCK_getTime+1,w
 13308  0E53  0141               	movlb	1	; select bank1
 13309  0E54  00BF               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 13310  0E55  3000               	movlw	0
 13311  0E56  023F               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 13312  0E57  3032               	movlw	50
 13313  0E58  1903               	skipnz
 13314  0E59  023E               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 13315  0E5A  1C03               	btfss	3,0
 13316  0E5B  0008               	return
 13317                           
 13318                           ;led.c: 72:     lastLedActiveTime = CLOCK_getTime();
 13319  0E5C  3191  214E  318E   	fcall	_CLOCK_getTime
 13320  0E5F  0140               	movlb	0	; select bank0
 13321  0E60  0821               	movf	?_CLOCK_getTime+1,w
 13322  0E61  0142               	movlb	2	; select bank2
 13323  0E62  00B7               	movwf	(_lastLedActiveTime+1)^(0+256)
 13324  0E63  0140               	movlb	0	; select bank0
 13325  0E64  0820               	movf	?_CLOCK_getTime,w
 13326  0E65  0142               	movlb	2	; select bank2
 13327  0E66  00B6               	movwf	_lastLedActiveTime^(0+256)
 13328                           
 13329                           ;led.c: 74:      if(!BEAT_detected()){
 13330  0E67  3191  2169  318E   	fcall	_BEAT_detected
 13331  0E6A  3A00               	xorlw	0
 13332  0E6B  1D03               	skipz
 13333  0E6C  2E81               	goto	l7113
 13334                           
 13335                           ;led.c: 75:          LED_setColor(beatColorCreator(0,0,0,0));
 13336  0E6D  0141               	movlb	1	; select bank1
 13337  0E6E  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13338  0E6F  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13339  0E70  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13340  0E71  3000               	movlw	0
 13341  0E72  318C  2407  318E   	fcall	_beatColorCreator
 13342  0E75  0141               	movlb	1	; select bank1
 13343  0E76  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13344  0E77  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13345  0E78  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13346  0E79  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13347  0E7A  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13348  0E7B  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13349  0E7C  0829               	movf	?_beatColorCreator^(0+128),w
 13350  0E7D  00B6               	movwf	LED_setColor@input^(0+128)
 13351  0E7E  3184  242A         	fcall	_LED_setColor
 13352                           
 13353                           ;led.c: 76:     } else if (currentState == 1){
 13354  0E80  0008               	return
 13355  0E81                     l7113:	
 13356  0E81  0141               	movlb	1	; select bank1
 13357  0E82  034C               	decf	_currentState^(0+128),w
 13358  0E83  044D               	iorwf	(_currentState+1)^(0+128),w
 13359  0E84  1D03               	btfss	3,2
 13360  0E85  2EC4               	goto	l7119
 13361                           
 13362                           ;led.c: 77:         LED_setColor(beatColorCreator(0,0,0,1));
 13363  0E86  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13364  0E87  2EAC               	goto	L1
 13365  0E88                     l7133:	
 13366                           ;led.c: 83:          LED_setColor(beatColorCreator(0,1,1,0));
 13367                           
 13368                           ;led.c: 80:          LED_setColor(beatColorCreator(0,1,0,1));
 13369                           
 13370                           
 13371                           ;led.c: 86:          LED_setColor(beatColorCreator(1,0,1,1));
 13372  0E88  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13373  0E89  2EA4               	goto	L13
 13374  0E8A                     l7139:	
 13375                           
 13376                           ;led.c: 89:         LED_setColor(beatColorCreator(0,1,1,0));
 13377  0E8A  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13378  0E8B  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 13379  0E8C  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13380  0E8D  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 13381  0E8E  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13382  0E8F  2EAF               	goto	L2
 13383  0E90                     l7145:	
 13384                           
 13385                           ;led.c: 92:         LED_setColor(beatColorCreator(1,1,1,0));
 13386  0E90  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13387  0E91  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 13388  0E92  2E9B               	goto	L10
 13389  0E93                     l7151:	
 13390                           
 13391                           ;led.c: 95:         LED_setColor(beatColorCreator(1,1,0,1));
 13392  0E93  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13393  0E94  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 13394  0E95  2EA0               	goto	L12
 13395  0E96                     l7163:	
 13396                           ;led.c: 98:          LED_setColor(beatColorCreator(0,1,0,1));
 13397                           
 13398                           
 13399                           ;led.c: 101:          LED_setColor(beatColorCreator(0,0,1,1));
 13400  0E96  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13401  0E97  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13402  0E98  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 13403  0E99  2EAD               	goto	L9
 13404  0E9A                     l7169:	
 13405                           
 13406                           ;led.c: 104:          LED_setColor(beatColorCreator(1,0,1,0));
 13407  0E9A  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13408  0E9B                     L10:	
 13409  0E9B  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13410  0E9C  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 13411  0E9D  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13412  0E9E  2EA8               	goto	L8
 13413  0E9F                     l7175:	
 13414                           
 13415                           ;led.c: 107:         LED_setColor(beatColorCreator(1,0,0,1));
 13416  0E9F  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13417  0EA0                     L12:	
 13418  0EA0  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13419  0EA1  2EA6               	goto	L11
 13420  0EA2                     l7181:	
 13421                           
 13422                           ;led.c: 110:         LED_setColor(beatColorCreator(1,1,1,1));
 13423  0EA2  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13424  0EA3  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 13425  0EA4                     L13:	
 13426  0EA4  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13427  0EA5  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 13428  0EA6                     L11:	
 13429  0EA6  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13430  0EA7  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 13431  0EA8                     L8:	
 13432  0EA8  3001               	movlw	1
 13433  0EA9  2EB0               	goto	L3
 13434  0EAA                     l7187:	
 13435                           
 13436                           ;led.c: 113:         LED_setColor(beatColorCreator(0,1,0,1));
 13437  0EAA  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13438  0EAB  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 13439  0EAC                     L1:	
 13440  0EAC  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13441  0EAD                     L9:	
 13442  0EAD  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13443  0EAE  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 13444  0EAF                     L2:	
 13445  0EAF  3000               	movlw	0
 13446  0EB0                     L3:	
 13447  0EB0  318C  2407  318E   	fcall	_beatColorCreator
 13448  0EB3  0141               	movlb	1	; select bank1
 13449  0EB4  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13450  0EB5  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13451  0EB6  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13452  0EB7  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13453  0EB8  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13454  0EB9  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13455  0EBA  0829               	movf	?_beatColorCreator^(0+128),w
 13456  0EBB  00B6               	movwf	LED_setColor@input^(0+128)
 13457  0EBC  3184  242A         	fcall	_LED_setColor
 13458                           
 13459                           ;led.c: 78:         currentState++;
 13460  0EBE  3001               	movlw	1
 13461  0EBF  0141               	movlb	1	; select bank1
 13462  0EC0  07CC               	addwf	_currentState^(0+128),f
 13463  0EC1  3000               	movlw	0
 13464  0EC2  3DCD               	addwfc	(_currentState+1)^(0+128),f
 13465                           
 13466                           ;led.c: 79:     } else if(currentState == 2){
 13467  0EC3  0008               	return
 13468  0EC4                     l7119:	
 13469  0EC4  3002               	movlw	2
 13470  0EC5  064C               	xorwf	_currentState^(0+128),w
 13471  0EC6  044D               	iorwf	(_currentState+1)^(0+128),w
 13472  0EC7  1903               	btfsc	3,2
 13473  0EC8  2EAA               	goto	l7187
 13474  0EC9  3003               	movlw	3
 13475  0ECA  064C               	xorwf	_currentState^(0+128),w
 13476  0ECB  044D               	iorwf	(_currentState+1)^(0+128),w
 13477  0ECC  1903               	btfsc	3,2
 13478  0ECD  2E8A               	goto	l7139
 13479  0ECE  3004               	movlw	4
 13480  0ECF  064C               	xorwf	_currentState^(0+128),w
 13481  0ED0  044D               	iorwf	(_currentState+1)^(0+128),w
 13482  0ED1  1903               	btfsc	3,2
 13483  0ED2  2E88               	goto	l7133
 13484  0ED3  3005               	movlw	5
 13485  0ED4  064C               	xorwf	_currentState^(0+128),w
 13486  0ED5  044D               	iorwf	(_currentState+1)^(0+128),w
 13487  0ED6  1903               	btfsc	3,2
 13488  0ED7  2E8A               	goto	l7139
 13489  0ED8  3006               	movlw	6
 13490  0ED9  064C               	xorwf	_currentState^(0+128),w
 13491  0EDA  044D               	iorwf	(_currentState+1)^(0+128),w
 13492  0EDB  1903               	btfsc	3,2
 13493  0EDC  2E90               	goto	l7145
 13494  0EDD  3008               	movlw	8
 13495  0EDE  064C               	xorwf	_currentState^(0+128),w
 13496  0EDF  044D               	iorwf	(_currentState+1)^(0+128),w
 13497  0EE0  1903               	btfsc	3,2
 13498  0EE1  2E93               	goto	l7151
 13499  0EE2  3009               	movlw	9
 13500  0EE3  064C               	xorwf	_currentState^(0+128),w
 13501  0EE4  044D               	iorwf	(_currentState+1)^(0+128),w
 13502  0EE5  1903               	btfsc	3,2
 13503  0EE6  2EAA               	goto	l7187
 13504  0EE7  300A               	movlw	10
 13505  0EE8  064C               	xorwf	_currentState^(0+128),w
 13506  0EE9  044D               	iorwf	(_currentState+1)^(0+128),w
 13507  0EEA  1903               	btfsc	3,2
 13508  0EEB  2E96               	goto	l7163
 13509  0EEC  300B               	movlw	11
 13510  0EED  064C               	xorwf	_currentState^(0+128),w
 13511  0EEE  044D               	iorwf	(_currentState+1)^(0+128),w
 13512  0EEF  1903               	btfsc	3,2
 13513  0EF0  2E9A               	goto	l7169
 13514  0EF1  300C               	movlw	12
 13515  0EF2  064C               	xorwf	_currentState^(0+128),w
 13516  0EF3  044D               	iorwf	(_currentState+1)^(0+128),w
 13517  0EF4  1903               	btfsc	3,2
 13518  0EF5  2E9F               	goto	l7175
 13519  0EF6  300D               	movlw	13
 13520  0EF7  064C               	xorwf	_currentState^(0+128),w
 13521  0EF8  044D               	iorwf	(_currentState+1)^(0+128),w
 13522  0EF9  1903               	btfsc	3,2
 13523  0EFA  2EA2               	goto	l7181
 13524  0EFB  300E               	movlw	14
 13525  0EFC  064C               	xorwf	_currentState^(0+128),w
 13526  0EFD  044D               	iorwf	(_currentState+1)^(0+128),w
 13527  0EFE  1903               	btfsc	3,2
 13528  0EFF  2EAA               	goto	l7187
 13529                           
 13530                           ;led.c: 116:         LED_setColor(beatColorCreator(0,1,1,1));
 13531  0F00  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13532  0F01  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 13533  0F02  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13534  0F03  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 13535  0F04  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13536  0F05  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 13537  0F06  3000               	movlw	0
 13538  0F07  318C  2407  318E   	fcall	_beatColorCreator
 13539  0F0A  0141               	movlb	1	; select bank1
 13540  0F0B  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13541  0F0C  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13542  0F0D  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13543  0F0E  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13544  0F0F  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13545  0F10  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13546  0F11  0829               	movf	?_beatColorCreator^(0+128),w
 13547  0F12  00B6               	movwf	LED_setColor@input^(0+128)
 13548  0F13  3184  242A         	fcall	_LED_setColor
 13549                           
 13550                           ;led.c: 117:         currentState = 1;
 13551  0F15  3001               	movlw	1
 13552  0F16  0141               	movlb	1	; select bank1
 13553  0F17  00CC               	movwf	_currentState^(0+128)
 13554  0F18  3000               	movlw	0
 13555  0F19  00CD               	movwf	(_currentState^(0+128)+1)
 13556  0F1A  0008               	return
 13557  0F1B                     __end_of_LED_task_BEAT_STROBE:	
 13558                           
 13559                           	psect	text23
 13560  0C07                     __ptext23:	
 13561 ;; *************** function _beatColorCreator *****************
 13562 ;; Defined at:
 13563 ;;		line 137 in file "led.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;  inRed           1    wreg     _Bool 
 13566 ;;  inGreen         1    9[BANK1 ] _Bool 
 13567 ;;  inBlue          1   10[BANK1 ] _Bool 
 13568 ;;  inWhite         1   11[BANK1 ] _Bool 
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;  inRed           1   13[BANK1 ] _Bool 
 13571 ;;  tempColor       4   18[BANK1 ] struct .
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  4    9[BANK1 ] struct .
 13574 ;; Registers used:
 13575 ;;		wreg, status,2, status,0, pclath, cstack
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13581 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13582 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13584 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13585 ;;Total ram usage:       14 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:    7
 13588 ;; This function calls:
 13589 ;;		___fltol
 13590 ;;		_beatBrightnessCalculation
 13591 ;; This function is called by:
 13592 ;;		_LED_task_BEAT_STROBE
 13593 ;; This function uses a non-reentrant model
 13594 ;;
 13595                           
 13596                           
 13597                           ;psect for function _beatColorCreator
 13598  0C07                     _beatColorCreator:	
 13599                           
 13600                           ;incstack = 0
 13601                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 13602                           ;beatColorCreator@inRed stored from wreg
 13603  0C07  0141               	movlb	1	; select bank1
 13604  0C08  00AD               	movwf	beatColorCreator@inRed^(0+128)
 13605                           
 13606                           ;led.c: 138:     color_t tempColor;;led.c: 140:     if(inRed)
 13607  0C09  082D               	movf	beatColorCreator@inRed^(0+128),w
 13608  0C0A  1903               	btfsc	3,2
 13609  0C0B  2C31               	goto	l6763
 13610                           
 13611                           ;led.c: 141:         tempColor.red = beatBrightnessCalculation();
 13612  0C0C  3189  21A9  318C   	fcall	_beatBrightnessCalculation
 13613  0C0F  0141               	movlb	1	; select bank1
 13614  0C10  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13615  0C11  00B1               	movwf	(_beatColorCreator$3475+3)^(0+128)
 13616  0C12  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13617  0C13  00B0               	movwf	(_beatColorCreator$3475+2)^(0+128)
 13618  0C14  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13619  0C15  00AF               	movwf	(_beatColorCreator$3475+1)^(0+128)
 13620  0C16  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 13621  0C17  00AE               	movwf	_beatColorCreator$3475^(0+128)
 13622                           
 13623                           ;led.c: 141:         tempColor.red = beatBrightnessCalculation();
 13624  0C18  0831               	movf	(_beatColorCreator$3475+3)^(0+128),w
 13625  0C19  0140               	movlb	0	; select bank0
 13626  0C1A  00E5               	movwf	___fltol@f1+3
 13627  0C1B  0141               	movlb	1	; select bank1
 13628  0C1C  0830               	movf	(_beatColorCreator$3475+2)^(0+128),w
 13629  0C1D  0140               	movlb	0	; select bank0
 13630  0C1E  00E4               	movwf	___fltol@f1+2
 13631  0C1F  0141               	movlb	1	; select bank1
 13632  0C20  082F               	movf	(_beatColorCreator$3475+1)^(0+128),w
 13633  0C21  0140               	movlb	0	; select bank0
 13634  0C22  00E3               	movwf	___fltol@f1+1
 13635  0C23  0141               	movlb	1	; select bank1
 13636  0C24  082E               	movf	_beatColorCreator$3475^(0+128),w
 13637  0C25  0140               	movlb	0	; select bank0
 13638  0C26  00E2               	movwf	___fltol@f1
 13639  0C27  3188  206A  318C   	fcall	___fltol
 13640  0C2A  0140               	movlb	0	; select bank0
 13641  0C2B  0862               	movf	?___fltol,w
 13642  0C2C  00EE               	movwf	??_beatColorCreator
 13643  0C2D  086E               	movf	??_beatColorCreator,w
 13644  0C2E  0141               	movlb	1	; select bank1
 13645  0C2F  00B3               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 13646  0C30  2C32               	goto	l6765
 13647  0C31                     l6763:	
 13648                           
 13649                           ;led.c: 143:         tempColor.red = 0;
 13650  0C31  01B3               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 13651  0C32                     l6765:	
 13652                           
 13653                           ;led.c: 145:     if(inBlue)
 13654  0C32  082A               	movf	beatColorCreator@inBlue^(0+128),w
 13655  0C33  1903               	btfsc	3,2
 13656  0C34  2C5A               	goto	l6769
 13657                           
 13658                           ;led.c: 146:         tempColor.blue = beatBrightnessCalculation();
 13659  0C35  3189  21A9  318C   	fcall	_beatBrightnessCalculation
 13660  0C38  0141               	movlb	1	; select bank1
 13661  0C39  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13662  0C3A  00B1               	movwf	(_beatColorCreator$3475+3)^(0+128)
 13663  0C3B  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13664  0C3C  00B0               	movwf	(_beatColorCreator$3475+2)^(0+128)
 13665  0C3D  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13666  0C3E  00AF               	movwf	(_beatColorCreator$3475+1)^(0+128)
 13667  0C3F  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 13668  0C40  00AE               	movwf	_beatColorCreator$3475^(0+128)
 13669                           
 13670                           ;led.c: 146:         tempColor.blue = beatBrightnessCalculation();
 13671  0C41  0831               	movf	(_beatColorCreator$3475+3)^(0+128),w
 13672  0C42  0140               	movlb	0	; select bank0
 13673  0C43  00E5               	movwf	___fltol@f1+3
 13674  0C44  0141               	movlb	1	; select bank1
 13675  0C45  0830               	movf	(_beatColorCreator$3475+2)^(0+128),w
 13676  0C46  0140               	movlb	0	; select bank0
 13677  0C47  00E4               	movwf	___fltol@f1+2
 13678  0C48  0141               	movlb	1	; select bank1
 13679  0C49  082F               	movf	(_beatColorCreator$3475+1)^(0+128),w
 13680  0C4A  0140               	movlb	0	; select bank0
 13681  0C4B  00E3               	movwf	___fltol@f1+1
 13682  0C4C  0141               	movlb	1	; select bank1
 13683  0C4D  082E               	movf	_beatColorCreator$3475^(0+128),w
 13684  0C4E  0140               	movlb	0	; select bank0
 13685  0C4F  00E2               	movwf	___fltol@f1
 13686  0C50  3188  206A  318C   	fcall	___fltol
 13687  0C53  0140               	movlb	0	; select bank0
 13688  0C54  0862               	movf	?___fltol,w
 13689  0C55  00EE               	movwf	??_beatColorCreator
 13690  0C56  086E               	movf	??_beatColorCreator,w
 13691  0C57  0141               	movlb	1	; select bank1
 13692  0C58  00B5               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 13693  0C59  2C5B               	goto	l6771
 13694  0C5A                     l6769:	
 13695                           
 13696                           ;led.c: 148:         tempColor.blue = 0;
 13697  0C5A  01B5               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 13698  0C5B                     l6771:	
 13699                           
 13700                           ;led.c: 150:     if(inGreen)
 13701  0C5B  0829               	movf	beatColorCreator@inGreen^(0+128),w
 13702  0C5C  1903               	btfsc	3,2
 13703  0C5D  2C83               	goto	l6775
 13704                           
 13705                           ;led.c: 151:         tempColor.green = beatBrightnessCalculation();
 13706  0C5E  3189  21A9  318C   	fcall	_beatBrightnessCalculation
 13707  0C61  0141               	movlb	1	; select bank1
 13708  0C62  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13709  0C63  00B1               	movwf	(_beatColorCreator$3475+3)^(0+128)
 13710  0C64  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13711  0C65  00B0               	movwf	(_beatColorCreator$3475+2)^(0+128)
 13712  0C66  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13713  0C67  00AF               	movwf	(_beatColorCreator$3475+1)^(0+128)
 13714  0C68  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 13715  0C69  00AE               	movwf	_beatColorCreator$3475^(0+128)
 13716                           
 13717                           ;led.c: 151:         tempColor.green = beatBrightnessCalculation();
 13718  0C6A  0831               	movf	(_beatColorCreator$3475+3)^(0+128),w
 13719  0C6B  0140               	movlb	0	; select bank0
 13720  0C6C  00E5               	movwf	___fltol@f1+3
 13721  0C6D  0141               	movlb	1	; select bank1
 13722  0C6E  0830               	movf	(_beatColorCreator$3475+2)^(0+128),w
 13723  0C6F  0140               	movlb	0	; select bank0
 13724  0C70  00E4               	movwf	___fltol@f1+2
 13725  0C71  0141               	movlb	1	; select bank1
 13726  0C72  082F               	movf	(_beatColorCreator$3475+1)^(0+128),w
 13727  0C73  0140               	movlb	0	; select bank0
 13728  0C74  00E3               	movwf	___fltol@f1+1
 13729  0C75  0141               	movlb	1	; select bank1
 13730  0C76  082E               	movf	_beatColorCreator$3475^(0+128),w
 13731  0C77  0140               	movlb	0	; select bank0
 13732  0C78  00E2               	movwf	___fltol@f1
 13733  0C79  3188  206A  318C   	fcall	___fltol
 13734  0C7C  0140               	movlb	0	; select bank0
 13735  0C7D  0862               	movf	?___fltol,w
 13736  0C7E  00EE               	movwf	??_beatColorCreator
 13737  0C7F  086E               	movf	??_beatColorCreator,w
 13738  0C80  0141               	movlb	1	; select bank1
 13739  0C81  00B4               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 13740  0C82  2C84               	goto	l6777
 13741  0C83                     l6775:	
 13742                           
 13743                           ;led.c: 153:         tempColor.green = 0;
 13744  0C83  01B4               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 13745  0C84                     l6777:	
 13746                           
 13747                           ;led.c: 155:     if(inWhite)
 13748  0C84  082B               	movf	beatColorCreator@inWhite^(0+128),w
 13749  0C85  1903               	btfsc	3,2
 13750  0C86  2CAC               	goto	l6781
 13751                           
 13752                           ;led.c: 156:         tempColor.white = beatBrightnessCalculation();
 13753  0C87  3189  21A9  318C   	fcall	_beatBrightnessCalculation
 13754  0C8A  0141               	movlb	1	; select bank1
 13755  0C8B  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13756  0C8C  00B1               	movwf	(_beatColorCreator$3475+3)^(0+128)
 13757  0C8D  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13758  0C8E  00B0               	movwf	(_beatColorCreator$3475+2)^(0+128)
 13759  0C8F  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13760  0C90  00AF               	movwf	(_beatColorCreator$3475+1)^(0+128)
 13761  0C91  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 13762  0C92  00AE               	movwf	_beatColorCreator$3475^(0+128)
 13763                           
 13764                           ;led.c: 156:         tempColor.white = beatBrightnessCalculation();
 13765  0C93  0831               	movf	(_beatColorCreator$3475+3)^(0+128),w
 13766  0C94  0140               	movlb	0	; select bank0
 13767  0C95  00E5               	movwf	___fltol@f1+3
 13768  0C96  0141               	movlb	1	; select bank1
 13769  0C97  0830               	movf	(_beatColorCreator$3475+2)^(0+128),w
 13770  0C98  0140               	movlb	0	; select bank0
 13771  0C99  00E4               	movwf	___fltol@f1+2
 13772  0C9A  0141               	movlb	1	; select bank1
 13773  0C9B  082F               	movf	(_beatColorCreator$3475+1)^(0+128),w
 13774  0C9C  0140               	movlb	0	; select bank0
 13775  0C9D  00E3               	movwf	___fltol@f1+1
 13776  0C9E  0141               	movlb	1	; select bank1
 13777  0C9F  082E               	movf	_beatColorCreator$3475^(0+128),w
 13778  0CA0  0140               	movlb	0	; select bank0
 13779  0CA1  00E2               	movwf	___fltol@f1
 13780  0CA2  3188  206A  318C   	fcall	___fltol
 13781  0CA5  0140               	movlb	0	; select bank0
 13782  0CA6  0862               	movf	?___fltol,w
 13783  0CA7  00EE               	movwf	??_beatColorCreator
 13784  0CA8  086E               	movf	??_beatColorCreator,w
 13785  0CA9  0141               	movlb	1	; select bank1
 13786  0CAA  00B2               	movwf	beatColorCreator@tempColor^(0+128)
 13787  0CAB  2CAD               	goto	l6783
 13788  0CAC                     l6781:	
 13789                           
 13790                           ;led.c: 158:         tempColor.white = 0;
 13791  0CAC  01B2               	clrf	beatColorCreator@tempColor^(0+128)
 13792  0CAD                     l6783:	
 13793                           
 13794                           ;led.c: 160:     return tempColor;
 13795  0CAD  0835               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 13796  0CAE  00AC               	movwf	(?_beatColorCreator+3)^(0+128)
 13797  0CAF  0834               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 13798  0CB0  00AB               	movwf	(?_beatColorCreator+2)^(0+128)
 13799  0CB1  0833               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 13800  0CB2  00AA               	movwf	(?_beatColorCreator+1)^(0+128)
 13801  0CB3  0832               	movf	beatColorCreator@tempColor^(0+128),w
 13802  0CB4  00A9               	movwf	?_beatColorCreator^(0+128)
 13803  0CB5  0008               	return
 13804  0CB6                     __end_of_beatColorCreator:	
 13805                           
 13806                           	psect	text24
 13807  09A9                     __ptext24:	
 13808 ;; *************** function _beatBrightnessCalculation *****************
 13809 ;; Defined at:
 13810 ;;		line 122 in file "led.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;		None
 13813 ;; Auto vars:     Size  Location     Type
 13814 ;;  temp            1   77[BANK0 ] unsigned char 
 13815 ;; Return value:  Size  Location     Type
 13816 ;;                  4    0[BANK1 ] float 
 13817 ;; Registers used:
 13818 ;;		wreg, status,2, status,0, pclath, cstack
 13819 ;; Tracked objects:
 13820 ;;		On entry : 0/0
 13821 ;;		On exit  : 0/0
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13824 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13826 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13827 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13828 ;;Total ram usage:       10 bytes
 13829 ;; Hardware stack levels used:    1
 13830 ;; Hardware stack levels required when called:    6
 13831 ;; This function calls:
 13832 ;;		___fldiv
 13833 ;;		___flmul
 13834 ;;		___fltol
 13835 ;;		___xxtofl
 13836 ;; This function is called by:
 13837 ;;		_beatColorCreator
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           
 13842                           ;psect for function _beatBrightnessCalculation
 13843  09A9                     _beatBrightnessCalculation:	
 13844                           
 13845                           ;led.c: 123:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 13846                           
 13847                           ;incstack = 0
 13848                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 13849  09A9  0141               	movlb	1	; select bank1
 13850  09AA  086E               	movf	_beatBrightness^(0+128),w
 13851  09AB  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 13852  09AC  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 13853  09AD  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 13854  09AE  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 13855  09AF  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 13856  09B0  0140               	movlb	0	; select bank0
 13857  09B1  00A3               	movwf	___xxtofl@val+3
 13858  09B2  0141               	movlb	1	; select bank1
 13859  09B3  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 13860  09B4  0140               	movlb	0	; select bank0
 13861  09B5  00A2               	movwf	___xxtofl@val+2
 13862  09B6  0141               	movlb	1	; select bank1
 13863  09B7  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 13864  09B8  0140               	movlb	0	; select bank0
 13865  09B9  00A1               	movwf	___xxtofl@val+1
 13866  09BA  0141               	movlb	1	; select bank1
 13867  09BB  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 13868  09BC  0140               	movlb	0	; select bank0
 13869  09BD  00A0               	movwf	___xxtofl@val
 13870  09BE  3001               	movlw	1
 13871  09BF  318A  2226  3189   	fcall	___xxtofl
 13872  09C2  0140               	movlb	0	; select bank0
 13873  09C3  0823               	movf	?___xxtofl+3,w
 13874  09C4  00B5               	movwf	___fldiv@b+3
 13875  09C5  0822               	movf	?___xxtofl+2,w
 13876  09C6  00B4               	movwf	___fldiv@b+2
 13877  09C7  0821               	movf	?___xxtofl+1,w
 13878  09C8  00B3               	movwf	___fldiv@b+1
 13879  09C9  0820               	movf	?___xxtofl,w
 13880  09CA  00B2               	movwf	___fldiv@b
 13881  09CB  3041               	movlw	65
 13882  09CC  00B1               	movwf	___fldiv@a+3
 13883  09CD  3010               	movlw	16
 13884  09CE  00B0               	movwf	___fldiv@a+2
 13885  09CF  3000               	movlw	0
 13886  09D0  00AF               	movwf	___fldiv@a+1
 13887  09D1  3000               	movlw	0
 13888  09D2  00AE               	movwf	___fldiv@a
 13889  09D3  3182  22B0  3189   	fcall	___fldiv
 13890  09D6  0140               	movlb	0	; select bank0
 13891  09D7  0831               	movf	?___fldiv+3,w
 13892  09D8  00CF               	movwf	___flmul@a+3
 13893  09D9  0830               	movf	?___fldiv+2,w
 13894  09DA  00CE               	movwf	___flmul@a+2
 13895  09DB  082F               	movf	?___fldiv+1,w
 13896  09DC  00CD               	movwf	___flmul@a+1
 13897  09DD  082E               	movf	?___fldiv,w
 13898  09DE  00CC               	movwf	___flmul@a
 13899  09DF  3043               	movlw	67
 13900  09E0  00CB               	movwf	___flmul@b+3
 13901  09E1  307F               	movlw	127
 13902  09E2  00CA               	movwf	___flmul@b+2
 13903  09E3  3000               	movlw	0
 13904  09E4  00C9               	movwf	___flmul@b+1
 13905  09E5  3000               	movlw	0
 13906  09E6  00C8               	movwf	___flmul@b
 13907  09E7  3180  2084  3189   	fcall	___flmul
 13908  09EA  0140               	movlb	0	; select bank0
 13909  09EB  084B               	movf	?___flmul+3,w
 13910  09EC  00E5               	movwf	___fltol@f1+3
 13911  09ED  084A               	movf	?___flmul+2,w
 13912  09EE  00E4               	movwf	___fltol@f1+2
 13913  09EF  0849               	movf	?___flmul+1,w
 13914  09F0  00E3               	movwf	___fltol@f1+1
 13915  09F1  0848               	movf	?___flmul,w
 13916  09F2  00E2               	movwf	___fltol@f1
 13917  09F3  3188  206A  3189   	fcall	___fltol
 13918  09F6  0140               	movlb	0	; select bank0
 13919  09F7  0862               	movf	?___fltol,w
 13920  09F8  0141               	movlb	1	; select bank1
 13921  09F9  00A8               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 13922  09FA  0828               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 13923  09FB  0140               	movlb	0	; select bank0
 13924  09FC  00ED               	movwf	beatBrightnessCalculation@temp
 13925                           
 13926                           ;led.c: 124:     return temp;
 13927  09FD  086D               	movf	beatBrightnessCalculation@temp,w
 13928  09FE  0141               	movlb	1	; select bank1
 13929  09FF  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 13930  0A00  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 13931  0A01  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 13932  0A02  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 13933  0A03  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 13934  0A04  0140               	movlb	0	; select bank0
 13935  0A05  00A3               	movwf	___xxtofl@val+3
 13936  0A06  0141               	movlb	1	; select bank1
 13937  0A07  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 13938  0A08  0140               	movlb	0	; select bank0
 13939  0A09  00A2               	movwf	___xxtofl@val+2
 13940  0A0A  0141               	movlb	1	; select bank1
 13941  0A0B  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 13942  0A0C  0140               	movlb	0	; select bank0
 13943  0A0D  00A1               	movwf	___xxtofl@val+1
 13944  0A0E  0141               	movlb	1	; select bank1
 13945  0A0F  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 13946  0A10  0140               	movlb	0	; select bank0
 13947  0A11  00A0               	movwf	___xxtofl@val
 13948  0A12  3000               	movlw	0
 13949  0A13  318A  2226         	fcall	___xxtofl
 13950  0A15  0140               	movlb	0	; select bank0
 13951  0A16  0823               	movf	?___xxtofl+3,w
 13952  0A17  0141               	movlb	1	; select bank1
 13953  0A18  00A3               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 13954  0A19  0140               	movlb	0	; select bank0
 13955  0A1A  0822               	movf	?___xxtofl+2,w
 13956  0A1B  0141               	movlb	1	; select bank1
 13957  0A1C  00A2               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 13958  0A1D  0140               	movlb	0	; select bank0
 13959  0A1E  0821               	movf	?___xxtofl+1,w
 13960  0A1F  0141               	movlb	1	; select bank1
 13961  0A20  00A1               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 13962  0A21  0140               	movlb	0	; select bank0
 13963  0A22  0820               	movf	?___xxtofl,w
 13964  0A23  0141               	movlb	1	; select bank1
 13965  0A24  00A0               	movwf	?_beatBrightnessCalculation^(0+128)
 13966  0A25  0008               	return
 13967  0A26                     __end_of_beatBrightnessCalculation:	
 13968                           
 13969                           	psect	text25
 13970  042A                     __ptext25:	
 13971 ;; *************** function _LED_setColor *****************
 13972 ;; Defined at:
 13973 ;;		line 22 in file "led.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;  input           4   22[BANK1 ] struct .
 13976 ;; Auto vars:     Size  Location     Type
 13977 ;;		None
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  1    wreg      void 
 13980 ;; Registers used:
 13981 ;;		wreg, status,2, status,0, pclath, cstack
 13982 ;; Tracked objects:
 13983 ;;		On entry : 0/0
 13984 ;;		On exit  : 0/0
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13987 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13989 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13990 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13991 ;;Total ram usage:        8 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; Hardware stack levels required when called:    6
 13994 ;; This function calls:
 13995 ;;		_PWM1_LoadDutyValue
 13996 ;;		_PWM2_LoadDutyValue
 13997 ;;		_PWM3_LoadDutyValue
 13998 ;;		_PWM4_LoadDutyValue
 13999 ;;		___fldiv
 14000 ;;		___flmul
 14001 ;;		___fltol
 14002 ;;		___xxtofl
 14003 ;; This function is called by:
 14004 ;;		_LED_task_DMX
 14005 ;;		_LED_task_BEAT_STROBE
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           
 14010                           ;psect for function _LED_setColor
 14011  042A                     _LED_setColor:	
 14012                           
 14013                           ;led.c: 23:     if(!startup){
 14014                           
 14015                           ;incstack = 0
 14016                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 14017  042A  0141               	movlb	1	; select bank1
 14018  042B  086D               	movf	_startup^(0+128),w
 14019  042C  1D03               	btfss	3,2
 14020  042D  0008               	return
 14021                           
 14022                           ;led.c: 24:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 14023  042E  0837               	movf	(LED_setColor@input^(0+128)+1),w
 14024  042F  00BA               	movwf	??_LED_setColor^(0+128)
 14025  0430  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 14026  0431  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 14027  0432  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 14028  0433  083D               	movf	(??_LED_setColor+3)^(0+128),w
 14029  0434  0140               	movlb	0	; select bank0
 14030  0435  00A3               	movwf	___xxtofl@val+3
 14031  0436  0141               	movlb	1	; select bank1
 14032  0437  083C               	movf	(??_LED_setColor+2)^(0+128),w
 14033  0438  0140               	movlb	0	; select bank0
 14034  0439  00A2               	movwf	___xxtofl@val+2
 14035  043A  0141               	movlb	1	; select bank1
 14036  043B  083B               	movf	(??_LED_setColor+1)^(0+128),w
 14037  043C  0140               	movlb	0	; select bank0
 14038  043D  00A1               	movwf	___xxtofl@val+1
 14039  043E  0141               	movlb	1	; select bank1
 14040  043F  083A               	movf	??_LED_setColor^(0+128),w
 14041  0440  0140               	movlb	0	; select bank0
 14042  0441  00A0               	movwf	___xxtofl@val
 14043  0442  3001               	movlw	1
 14044  0443  318A  2226  3184   	fcall	___xxtofl
 14045  0446  0140               	movlb	0	; select bank0
 14046  0447  0823               	movf	?___xxtofl+3,w
 14047  0448  00B5               	movwf	___fldiv@b+3
 14048  0449  0822               	movf	?___xxtofl+2,w
 14049  044A  00B4               	movwf	___fldiv@b+2
 14050  044B  0821               	movf	?___xxtofl+1,w
 14051  044C  00B3               	movwf	___fldiv@b+1
 14052  044D  0820               	movf	?___xxtofl,w
 14053  044E  00B2               	movwf	___fldiv@b
 14054  044F  3043               	movlw	67
 14055  0450  00B1               	movwf	___fldiv@a+3
 14056  0451  307F               	movlw	127
 14057  0452  00B0               	movwf	___fldiv@a+2
 14058  0453  3000               	movlw	0
 14059  0454  00AF               	movwf	___fldiv@a+1
 14060  0455  3000               	movlw	0
 14061  0456  00AE               	movwf	___fldiv@a
 14062  0457  3182  22B0  3184   	fcall	___fldiv
 14063  045A  0140               	movlb	0	; select bank0
 14064  045B  0831               	movf	?___fldiv+3,w
 14065  045C  00CF               	movwf	___flmul@a+3
 14066  045D  0830               	movf	?___fldiv+2,w
 14067  045E  00CE               	movwf	___flmul@a+2
 14068  045F  082F               	movf	?___fldiv+1,w
 14069  0460  00CD               	movwf	___flmul@a+1
 14070  0461  082E               	movf	?___fldiv,w
 14071  0462  00CC               	movwf	___flmul@a
 14072  0463  3042               	movlw	66
 14073  0464  00CB               	movwf	___flmul@b+3
 14074  0465  30FE               	movlw	254
 14075  0466  00CA               	movwf	___flmul@b+2
 14076  0467  3000               	movlw	0
 14077  0468  00C9               	movwf	___flmul@b+1
 14078  0469  3000               	movlw	0
 14079  046A  00C8               	movwf	___flmul@b
 14080  046B  3180  2084  3184   	fcall	___flmul
 14081  046E  0140               	movlb	0	; select bank0
 14082  046F  084B               	movf	?___flmul+3,w
 14083  0470  00E5               	movwf	___fltol@f1+3
 14084  0471  084A               	movf	?___flmul+2,w
 14085  0472  00E4               	movwf	___fltol@f1+2
 14086  0473  0849               	movf	?___flmul+1,w
 14087  0474  00E3               	movwf	___fltol@f1+1
 14088  0475  0848               	movf	?___flmul,w
 14089  0476  00E2               	movwf	___fltol@f1
 14090  0477  3188  206A  3184   	fcall	___fltol
 14091  047A  0140               	movlb	0	; select bank0
 14092  047B  0863               	movf	?___fltol+1,w
 14093  047C  0141               	movlb	1	; select bank1
 14094  047D  00A1               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 14095  047E  0140               	movlb	0	; select bank0
 14096  047F  0862               	movf	?___fltol,w
 14097  0480  0141               	movlb	1	; select bank1
 14098  0481  00A0               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 14099  0482  3193  2388  3184   	fcall	_PWM1_LoadDutyValue
 14100                           
 14101                           ;led.c: 25:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 14102  0485  0141               	movlb	1	; select bank1
 14103  0486  0838               	movf	(LED_setColor@input^(0+128)+2),w
 14104  0487  00BA               	movwf	??_LED_setColor^(0+128)
 14105  0488  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 14106  0489  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 14107  048A  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 14108  048B  083D               	movf	(??_LED_setColor+3)^(0+128),w
 14109  048C  0140               	movlb	0	; select bank0
 14110  048D  00A3               	movwf	___xxtofl@val+3
 14111  048E  0141               	movlb	1	; select bank1
 14112  048F  083C               	movf	(??_LED_setColor+2)^(0+128),w
 14113  0490  0140               	movlb	0	; select bank0
 14114  0491  00A2               	movwf	___xxtofl@val+2
 14115  0492  0141               	movlb	1	; select bank1
 14116  0493  083B               	movf	(??_LED_setColor+1)^(0+128),w
 14117  0494  0140               	movlb	0	; select bank0
 14118  0495  00A1               	movwf	___xxtofl@val+1
 14119  0496  0141               	movlb	1	; select bank1
 14120  0497  083A               	movf	??_LED_setColor^(0+128),w
 14121  0498  0140               	movlb	0	; select bank0
 14122  0499  00A0               	movwf	___xxtofl@val
 14123  049A  3001               	movlw	1
 14124  049B  318A  2226  3184   	fcall	___xxtofl
 14125  049E  0140               	movlb	0	; select bank0
 14126  049F  0823               	movf	?___xxtofl+3,w
 14127  04A0  00B5               	movwf	___fldiv@b+3
 14128  04A1  0822               	movf	?___xxtofl+2,w
 14129  04A2  00B4               	movwf	___fldiv@b+2
 14130  04A3  0821               	movf	?___xxtofl+1,w
 14131  04A4  00B3               	movwf	___fldiv@b+1
 14132  04A5  0820               	movf	?___xxtofl,w
 14133  04A6  00B2               	movwf	___fldiv@b
 14134  04A7  3043               	movlw	67
 14135  04A8  00B1               	movwf	___fldiv@a+3
 14136  04A9  307F               	movlw	127
 14137  04AA  00B0               	movwf	___fldiv@a+2
 14138  04AB  3000               	movlw	0
 14139  04AC  00AF               	movwf	___fldiv@a+1
 14140  04AD  3000               	movlw	0
 14141  04AE  00AE               	movwf	___fldiv@a
 14142  04AF  3182  22B0  3184   	fcall	___fldiv
 14143  04B2  0140               	movlb	0	; select bank0
 14144  04B3  0831               	movf	?___fldiv+3,w
 14145  04B4  00CF               	movwf	___flmul@a+3
 14146  04B5  0830               	movf	?___fldiv+2,w
 14147  04B6  00CE               	movwf	___flmul@a+2
 14148  04B7  082F               	movf	?___fldiv+1,w
 14149  04B8  00CD               	movwf	___flmul@a+1
 14150  04B9  082E               	movf	?___fldiv,w
 14151  04BA  00CC               	movwf	___flmul@a
 14152  04BB  3042               	movlw	66
 14153  04BC  00CB               	movwf	___flmul@b+3
 14154  04BD  30FE               	movlw	254
 14155  04BE  00CA               	movwf	___flmul@b+2
 14156  04BF  3000               	movlw	0
 14157  04C0  00C9               	movwf	___flmul@b+1
 14158  04C1  3000               	movlw	0
 14159  04C2  00C8               	movwf	___flmul@b
 14160  04C3  3180  2084  3184   	fcall	___flmul
 14161  04C6  0140               	movlb	0	; select bank0
 14162  04C7  084B               	movf	?___flmul+3,w
 14163  04C8  00E5               	movwf	___fltol@f1+3
 14164  04C9  084A               	movf	?___flmul+2,w
 14165  04CA  00E4               	movwf	___fltol@f1+2
 14166  04CB  0849               	movf	?___flmul+1,w
 14167  04CC  00E3               	movwf	___fltol@f1+1
 14168  04CD  0848               	movf	?___flmul,w
 14169  04CE  00E2               	movwf	___fltol@f1
 14170  04CF  3188  206A  3184   	fcall	___fltol
 14171  04D2  0140               	movlb	0	; select bank0
 14172  04D3  0863               	movf	?___fltol+1,w
 14173  04D4  0141               	movlb	1	; select bank1
 14174  04D5  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 14175  04D6  0140               	movlb	0	; select bank0
 14176  04D7  0862               	movf	?___fltol,w
 14177  04D8  0141               	movlb	1	; select bank1
 14178  04D9  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 14179  04DA  3193  23A6  3184   	fcall	_PWM2_LoadDutyValue
 14180                           
 14181                           ;led.c: 26:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 14182  04DD  0141               	movlb	1	; select bank1
 14183  04DE  0839               	movf	(LED_setColor@input^(0+128)+3),w
 14184  04DF  00BA               	movwf	??_LED_setColor^(0+128)
 14185  04E0  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 14186  04E1  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 14187  04E2  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 14188  04E3  083D               	movf	(??_LED_setColor+3)^(0+128),w
 14189  04E4  0140               	movlb	0	; select bank0
 14190  04E5  00A3               	movwf	___xxtofl@val+3
 14191  04E6  0141               	movlb	1	; select bank1
 14192  04E7  083C               	movf	(??_LED_setColor+2)^(0+128),w
 14193  04E8  0140               	movlb	0	; select bank0
 14194  04E9  00A2               	movwf	___xxtofl@val+2
 14195  04EA  0141               	movlb	1	; select bank1
 14196  04EB  083B               	movf	(??_LED_setColor+1)^(0+128),w
 14197  04EC  0140               	movlb	0	; select bank0
 14198  04ED  00A1               	movwf	___xxtofl@val+1
 14199  04EE  0141               	movlb	1	; select bank1
 14200  04EF  083A               	movf	??_LED_setColor^(0+128),w
 14201  04F0  0140               	movlb	0	; select bank0
 14202  04F1  00A0               	movwf	___xxtofl@val
 14203  04F2  3001               	movlw	1
 14204  04F3  318A  2226  3184   	fcall	___xxtofl
 14205  04F6  0140               	movlb	0	; select bank0
 14206  04F7  0823               	movf	?___xxtofl+3,w
 14207  04F8  00B5               	movwf	___fldiv@b+3
 14208  04F9  0822               	movf	?___xxtofl+2,w
 14209  04FA  00B4               	movwf	___fldiv@b+2
 14210  04FB  0821               	movf	?___xxtofl+1,w
 14211  04FC  00B3               	movwf	___fldiv@b+1
 14212  04FD  0820               	movf	?___xxtofl,w
 14213  04FE  00B2               	movwf	___fldiv@b
 14214  04FF  3043               	movlw	67
 14215  0500  00B1               	movwf	___fldiv@a+3
 14216  0501  307F               	movlw	127
 14217  0502  00B0               	movwf	___fldiv@a+2
 14218  0503  3000               	movlw	0
 14219  0504  00AF               	movwf	___fldiv@a+1
 14220  0505  3000               	movlw	0
 14221  0506  00AE               	movwf	___fldiv@a
 14222  0507  3182  22B0  3184   	fcall	___fldiv
 14223  050A  0140               	movlb	0	; select bank0
 14224  050B  0831               	movf	?___fldiv+3,w
 14225  050C  00CF               	movwf	___flmul@a+3
 14226  050D  0830               	movf	?___fldiv+2,w
 14227  050E  00CE               	movwf	___flmul@a+2
 14228  050F  082F               	movf	?___fldiv+1,w
 14229  0510  00CD               	movwf	___flmul@a+1
 14230  0511  082E               	movf	?___fldiv,w
 14231  0512  00CC               	movwf	___flmul@a
 14232  0513  3042               	movlw	66
 14233  0514  00CB               	movwf	___flmul@b+3
 14234  0515  30FE               	movlw	254
 14235  0516  00CA               	movwf	___flmul@b+2
 14236  0517  3000               	movlw	0
 14237  0518  00C9               	movwf	___flmul@b+1
 14238  0519  3000               	movlw	0
 14239  051A  00C8               	movwf	___flmul@b
 14240  051B  3180  2084  3184   	fcall	___flmul
 14241  051E  0140               	movlb	0	; select bank0
 14242  051F  084B               	movf	?___flmul+3,w
 14243  0520  00E5               	movwf	___fltol@f1+3
 14244  0521  084A               	movf	?___flmul+2,w
 14245  0522  00E4               	movwf	___fltol@f1+2
 14246  0523  0849               	movf	?___flmul+1,w
 14247  0524  00E3               	movwf	___fltol@f1+1
 14248  0525  0848               	movf	?___flmul,w
 14249  0526  00E2               	movwf	___fltol@f1
 14250  0527  3188  206A  3184   	fcall	___fltol
 14251  052A  0140               	movlb	0	; select bank0
 14252  052B  0863               	movf	?___fltol+1,w
 14253  052C  0141               	movlb	1	; select bank1
 14254  052D  00A1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 14255  052E  0140               	movlb	0	; select bank0
 14256  052F  0862               	movf	?___fltol,w
 14257  0530  0141               	movlb	1	; select bank1
 14258  0531  00A0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 14259  0532  3193  23C4  3184   	fcall	_PWM3_LoadDutyValue
 14260                           
 14261                           ;led.c: 27:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 14262  0535  0141               	movlb	1	; select bank1
 14263  0536  0836               	movf	LED_setColor@input^(0+128),w
 14264  0537  00BA               	movwf	??_LED_setColor^(0+128)
 14265  0538  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 14266  0539  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 14267  053A  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 14268  053B  083D               	movf	(??_LED_setColor+3)^(0+128),w
 14269  053C  0140               	movlb	0	; select bank0
 14270  053D  00A3               	movwf	___xxtofl@val+3
 14271  053E  0141               	movlb	1	; select bank1
 14272  053F  083C               	movf	(??_LED_setColor+2)^(0+128),w
 14273  0540  0140               	movlb	0	; select bank0
 14274  0541  00A2               	movwf	___xxtofl@val+2
 14275  0542  0141               	movlb	1	; select bank1
 14276  0543  083B               	movf	(??_LED_setColor+1)^(0+128),w
 14277  0544  0140               	movlb	0	; select bank0
 14278  0545  00A1               	movwf	___xxtofl@val+1
 14279  0546  0141               	movlb	1	; select bank1
 14280  0547  083A               	movf	??_LED_setColor^(0+128),w
 14281  0548  0140               	movlb	0	; select bank0
 14282  0549  00A0               	movwf	___xxtofl@val
 14283  054A  3001               	movlw	1
 14284  054B  318A  2226  3184   	fcall	___xxtofl
 14285  054E  0140               	movlb	0	; select bank0
 14286  054F  0823               	movf	?___xxtofl+3,w
 14287  0550  00B5               	movwf	___fldiv@b+3
 14288  0551  0822               	movf	?___xxtofl+2,w
 14289  0552  00B4               	movwf	___fldiv@b+2
 14290  0553  0821               	movf	?___xxtofl+1,w
 14291  0554  00B3               	movwf	___fldiv@b+1
 14292  0555  0820               	movf	?___xxtofl,w
 14293  0556  00B2               	movwf	___fldiv@b
 14294  0557  3043               	movlw	67
 14295  0558  00B1               	movwf	___fldiv@a+3
 14296  0559  307F               	movlw	127
 14297  055A  00B0               	movwf	___fldiv@a+2
 14298  055B  3000               	movlw	0
 14299  055C  00AF               	movwf	___fldiv@a+1
 14300  055D  3000               	movlw	0
 14301  055E  00AE               	movwf	___fldiv@a
 14302  055F  3182  22B0  3184   	fcall	___fldiv
 14303  0562  0140               	movlb	0	; select bank0
 14304  0563  0831               	movf	?___fldiv+3,w
 14305  0564  00CF               	movwf	___flmul@a+3
 14306  0565  0830               	movf	?___fldiv+2,w
 14307  0566  00CE               	movwf	___flmul@a+2
 14308  0567  082F               	movf	?___fldiv+1,w
 14309  0568  00CD               	movwf	___flmul@a+1
 14310  0569  082E               	movf	?___fldiv,w
 14311  056A  00CC               	movwf	___flmul@a
 14312  056B  3042               	movlw	66
 14313  056C  00CB               	movwf	___flmul@b+3
 14314  056D  30FE               	movlw	254
 14315  056E  00CA               	movwf	___flmul@b+2
 14316  056F  3000               	movlw	0
 14317  0570  00C9               	movwf	___flmul@b+1
 14318  0571  3000               	movlw	0
 14319  0572  00C8               	movwf	___flmul@b
 14320  0573  3180  2084  3184   	fcall	___flmul
 14321  0576  0140               	movlb	0	; select bank0
 14322  0577  084B               	movf	?___flmul+3,w
 14323  0578  00E5               	movwf	___fltol@f1+3
 14324  0579  084A               	movf	?___flmul+2,w
 14325  057A  00E4               	movwf	___fltol@f1+2
 14326  057B  0849               	movf	?___flmul+1,w
 14327  057C  00E3               	movwf	___fltol@f1+1
 14328  057D  0848               	movf	?___flmul,w
 14329  057E  00E2               	movwf	___fltol@f1
 14330  057F  3188  206A  3184   	fcall	___fltol
 14331  0582  0140               	movlb	0	; select bank0
 14332  0583  0863               	movf	?___fltol+1,w
 14333  0584  0141               	movlb	1	; select bank1
 14334  0585  00A1               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 14335  0586  0140               	movlb	0	; select bank0
 14336  0587  0862               	movf	?___fltol,w
 14337  0588  0141               	movlb	1	; select bank1
 14338  0589  00A0               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 14339  058A  3193  23E2         	fcall	_PWM4_LoadDutyValue
 14340  058C  0008               	return
 14341  058D                     __end_of_LED_setColor:	
 14342                           
 14343                           	psect	text26
 14344  0A26                     __ptext26:	
 14345 ;; *************** function ___xxtofl *****************
 14346 ;; Defined at:
 14347 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;  sign            1    wreg     unsigned char 
 14350 ;;  val             4    0[BANK0 ] long 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  sign            1    8[BANK0 ] unsigned char 
 14353 ;;  arg             4   10[BANK0 ] unsigned long 
 14354 ;;  exp             1    9[BANK0 ] unsigned char 
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  4    0[BANK0 ] unsigned char 
 14357 ;; Registers used:
 14358 ;;		wreg, status,2, status,0
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14365 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14367 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14368 ;;Total ram usage:       14 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:    4
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_LED_setColor
 14375 ;;		_beatBrightnessCalculation
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           
 14380                           ;psect for function ___xxtofl
 14381  0A26                     ___xxtofl:	
 14382                           
 14383                           ;incstack = 0
 14384                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14385                           ;___xxtofl@sign stored from wreg
 14386  0A26  0140               	movlb	0	; select bank0
 14387  0A27  00A8               	movwf	___xxtofl@sign
 14388  0A28  0828               	movf	___xxtofl@sign,w
 14389  0A29  1D03               	btfss	3,2
 14390  0A2A  1FA3               	btfss	___xxtofl@val+3,7
 14391  0A2B  2A3C               	goto	l6565
 14392  0A2C  0920               	comf	___xxtofl@val,w
 14393  0A2D  00AA               	movwf	___xxtofl@arg
 14394  0A2E  0921               	comf	___xxtofl@val+1,w
 14395  0A2F  00AB               	movwf	___xxtofl@arg+1
 14396  0A30  0922               	comf	___xxtofl@val+2,w
 14397  0A31  00AC               	movwf	___xxtofl@arg+2
 14398  0A32  0923               	comf	___xxtofl@val+3,w
 14399  0A33  00AD               	movwf	___xxtofl@arg+3
 14400  0A34  0AAA               	incf	___xxtofl@arg,f
 14401  0A35  1903               	skipnz
 14402  0A36  0AAB               	incf	___xxtofl@arg+1,f
 14403  0A37  1903               	skipnz
 14404  0A38  0AAC               	incf	___xxtofl@arg+2,f
 14405  0A39  1903               	skipnz
 14406  0A3A  0AAD               	incf	___xxtofl@arg+3,f
 14407  0A3B  2A44               	goto	l1979
 14408  0A3C                     l6565:	
 14409  0A3C  0823               	movf	___xxtofl@val+3,w
 14410  0A3D  00AD               	movwf	___xxtofl@arg+3
 14411  0A3E  0822               	movf	___xxtofl@val+2,w
 14412  0A3F  00AC               	movwf	___xxtofl@arg+2
 14413  0A40  0821               	movf	___xxtofl@val+1,w
 14414  0A41  00AB               	movwf	___xxtofl@arg+1
 14415  0A42  0820               	movf	___xxtofl@val,w
 14416  0A43  00AA               	movwf	___xxtofl@arg
 14417  0A44                     l1979:	
 14418  0A44  0823               	movf	___xxtofl@val+3,w
 14419  0A45  0422               	iorwf	___xxtofl@val+2,w
 14420  0A46  0421               	iorwf	___xxtofl@val+1,w
 14421  0A47  0420               	iorwf	___xxtofl@val,w
 14422  0A48  1D03               	skipz
 14423  0A49  2A53               	goto	l6571
 14424  0A4A  3000               	movlw	0
 14425  0A4B  00A3               	movwf	?___xxtofl+3
 14426  0A4C  3000               	movlw	0
 14427  0A4D  00A2               	movwf	?___xxtofl+2
 14428  0A4E  3000               	movlw	0
 14429  0A4F  00A1               	movwf	?___xxtofl+1
 14430  0A50  3000               	movlw	0
 14431  0A51  00A0               	movwf	?___xxtofl
 14432  0A52  0008               	return
 14433  0A53                     l6571:	
 14434  0A53  3096               	movlw	150
 14435  0A54  00A4               	movwf	??___xxtofl
 14436  0A55  0824               	movf	??___xxtofl,w
 14437  0A56  00A9               	movwf	___xxtofl@exp
 14438  0A57                     l6575:	
 14439  0A57  30FE               	movlw	254
 14440  0A58  052D               	andwf	___xxtofl@arg+3,w
 14441  0A59  1903               	btfsc	3,2
 14442  0A5A  2A7A               	goto	l1985
 14443  0A5B  3001               	movlw	1
 14444  0A5C  00A4               	movwf	??___xxtofl
 14445  0A5D  0824               	movf	??___xxtofl,w
 14446  0A5E  07A9               	addwf	___xxtofl@exp,f
 14447  0A5F  3001               	movlw	1
 14448  0A60                     u6405:	
 14449  0A60  36AD               	lsrf	___xxtofl@arg+3,f
 14450  0A61  0CAC               	rrf	___xxtofl@arg+2,f
 14451  0A62  0CAB               	rrf	___xxtofl@arg+1,f
 14452  0A63  0CAA               	rrf	___xxtofl@arg,f
 14453  0A64  0B89               	decfsz	9,f
 14454  0A65  2A60               	goto	u6405
 14455  0A66  2A57               	goto	l6575
 14456  0A67                     l6577:	
 14457  0A67  3001               	movlw	1
 14458  0A68  00A4               	movwf	??___xxtofl
 14459  0A69  0824               	movf	??___xxtofl,w
 14460  0A6A  07A9               	addwf	___xxtofl@exp,f
 14461  0A6B  3001               	movlw	1
 14462  0A6C  07AA               	addwf	___xxtofl@arg,f
 14463  0A6D  3000               	movlw	0
 14464  0A6E  3DAB               	addwfc	___xxtofl@arg+1,f
 14465  0A6F  3000               	movlw	0
 14466  0A70  3DAC               	addwfc	___xxtofl@arg+2,f
 14467  0A71  3000               	movlw	0
 14468  0A72  3DAD               	addwfc	___xxtofl@arg+3,f
 14469  0A73  3001               	movlw	1
 14470  0A74                     u6425:	
 14471  0A74  36AD               	lsrf	___xxtofl@arg+3,f
 14472  0A75  0CAC               	rrf	___xxtofl@arg+2,f
 14473  0A76  0CAB               	rrf	___xxtofl@arg+1,f
 14474  0A77  0CAA               	rrf	___xxtofl@arg,f
 14475  0A78  0B89               	decfsz	9,f
 14476  0A79  2A74               	goto	u6425
 14477  0A7A                     l1985:	
 14478  0A7A  30FF               	movlw	255
 14479  0A7B  052D               	andwf	___xxtofl@arg+3,w
 14480  0A7C  1903               	btfsc	3,2
 14481  0A7D  2A8C               	goto	l6585
 14482  0A7E  2A67               	goto	l6577
 14483  0A7F                     l6587:	
 14484  0A7F  3002               	movlw	2
 14485  0A80  0229               	subwf	___xxtofl@exp,w
 14486  0A81  1C03               	btfss	3,0
 14487  0A82  2A8E               	goto	l1992
 14488  0A83  3001               	movlw	1
 14489  0A84  02A9               	subwf	___xxtofl@exp,f
 14490  0A85  3001               	movlw	1
 14491  0A86                     u6445:	
 14492  0A86  35AA               	lslf	___xxtofl@arg,f
 14493  0A87  0DAB               	rlf	___xxtofl@arg+1,f
 14494  0A88  0DAC               	rlf	___xxtofl@arg+2,f
 14495  0A89  0DAD               	rlf	___xxtofl@arg+3,f
 14496  0A8A  0B89               	decfsz	9,f
 14497  0A8B  2A86               	goto	u6445
 14498  0A8C                     l6585:	
 14499  0A8C  1FAC               	btfss	___xxtofl@arg+2,7
 14500  0A8D  2A7F               	goto	l6587
 14501  0A8E                     l1992:	
 14502  0A8E  1829               	btfsc	___xxtofl@exp,0
 14503  0A8F  2A98               	goto	l1993
 14504  0A90  30FF               	movlw	255
 14505  0A91  05AA               	andwf	___xxtofl@arg,f
 14506  0A92  30FF               	movlw	255
 14507  0A93  05AB               	andwf	___xxtofl@arg+1,f
 14508  0A94  307F               	movlw	127
 14509  0A95  05AC               	andwf	___xxtofl@arg+2,f
 14510  0A96  30FF               	movlw	255
 14511  0A97  05AD               	andwf	___xxtofl@arg+3,f
 14512  0A98                     l1993:	
 14513  0A98  1003               	clrc
 14514  0A99  0CA9               	rrf	___xxtofl@exp,f
 14515  0A9A  0829               	movf	___xxtofl@exp,w
 14516  0A9B  00A4               	movwf	??___xxtofl
 14517  0A9C  01A5               	clrf	??___xxtofl+1
 14518  0A9D  01A6               	clrf	??___xxtofl+2
 14519  0A9E  01A7               	clrf	??___xxtofl+3
 14520  0A9F  3018               	movlw	24
 14521  0AA0                     u6485:	
 14522  0AA0  35A4               	lslf	??___xxtofl,f
 14523  0AA1  0DA5               	rlf	??___xxtofl+1,f
 14524  0AA2  0DA6               	rlf	??___xxtofl+2,f
 14525  0AA3  0DA7               	rlf	??___xxtofl+3,f
 14526  0AA4  0B89               	decfsz	9,f
 14527  0AA5  2AA0               	goto	u6485
 14528  0AA6  0824               	movf	??___xxtofl,w
 14529  0AA7  04AA               	iorwf	___xxtofl@arg,f
 14530  0AA8  0825               	movf	??___xxtofl+1,w
 14531  0AA9  04AB               	iorwf	___xxtofl@arg+1,f
 14532  0AAA  0826               	movf	??___xxtofl+2,w
 14533  0AAB  04AC               	iorwf	___xxtofl@arg+2,f
 14534  0AAC  0827               	movf	??___xxtofl+3,w
 14535  0AAD  04AD               	iorwf	___xxtofl@arg+3,f
 14536  0AAE  0828               	movf	___xxtofl@sign,w
 14537  0AAF  1D03               	btfss	3,2
 14538  0AB0  1FA3               	btfss	___xxtofl@val+3,7
 14539  0AB1  2AB3               	goto	l6599
 14540  0AB2  17AD               	bsf	___xxtofl@arg+3,7
 14541  0AB3                     l6599:	
 14542  0AB3  082D               	movf	___xxtofl@arg+3,w
 14543  0AB4  00A3               	movwf	?___xxtofl+3
 14544  0AB5  082C               	movf	___xxtofl@arg+2,w
 14545  0AB6  00A2               	movwf	?___xxtofl+2
 14546  0AB7  082B               	movf	___xxtofl@arg+1,w
 14547  0AB8  00A1               	movwf	?___xxtofl+1
 14548  0AB9  082A               	movf	___xxtofl@arg,w
 14549  0ABA  00A0               	movwf	?___xxtofl
 14550  0ABB  0008               	return
 14551  0ABC                     __end_of___xxtofl:	
 14552                           
 14553                           	psect	text27
 14554  086A                     __ptext27:	
 14555 ;; *************** function ___fltol *****************
 14556 ;; Defined at:
 14557 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 14558 ;; Parameters:    Size  Location     Type
 14559 ;;  f1              4   66[BANK0 ] unsigned char 
 14560 ;; Auto vars:     Size  Location     Type
 14561 ;;  exp1            1   76[BANK0 ] unsigned char 
 14562 ;;  sign1           1   75[BANK0 ] unsigned char 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  4   66[BANK0 ] long 
 14565 ;; Registers used:
 14566 ;;		wreg, status,2, status,0
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14574 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14575 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14576 ;;Total ram usage:       11 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:    4
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_LED_setColor
 14583 ;;		_beatColorCreator
 14584 ;;		_beatBrightnessCalculation
 14585 ;; This function uses a non-reentrant model
 14586 ;;
 14587                           
 14588                           
 14589                           ;psect for function ___fltol
 14590  086A                     ___fltol:	
 14591                           
 14592                           ;incstack = 0
 14593                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14594  086A  1003               	clrc
 14595  086B  0140               	movlb	0	; select bank0
 14596  086C  0D64               	rlf	___fltol@f1+2,w
 14597  086D  0D65               	rlf	___fltol@f1+3,w
 14598  086E  00E6               	movwf	??___fltol
 14599  086F  0866               	movf	??___fltol,w
 14600  0870  00EC               	movwf	___fltol@exp1
 14601  0871  086C               	movf	___fltol@exp1,w
 14602  0872  1D03               	btfss	3,2
 14603  0873  287D               	goto	l6249
 14604  0874                     l6245:	
 14605  0874  3000               	movlw	0
 14606  0875  00E5               	movwf	?___fltol+3
 14607  0876  3000               	movlw	0
 14608  0877  00E4               	movwf	?___fltol+2
 14609  0878  3000               	movlw	0
 14610  0879  00E3               	movwf	?___fltol+1
 14611  087A  3000               	movlw	0
 14612  087B  00E2               	movwf	?___fltol
 14613  087C  0008               	return
 14614  087D                     l6249:	
 14615  087D  0862               	movf	___fltol@f1,w
 14616  087E  00E6               	movwf	??___fltol
 14617  087F  0863               	movf	___fltol@f1+1,w
 14618  0880  00E7               	movwf	??___fltol+1
 14619  0881  0864               	movf	___fltol@f1+2,w
 14620  0882  00E8               	movwf	??___fltol+2
 14621  0883  0865               	movf	___fltol@f1+3,w
 14622  0884  00E9               	movwf	??___fltol+3
 14623  0885  301F               	movlw	31
 14624  0886                     u5735:	
 14625  0886  36E9               	lsrf	??___fltol+3,f
 14626  0887  0CE8               	rrf	??___fltol+2,f
 14627  0888  0CE7               	rrf	??___fltol+1,f
 14628  0889  0CE6               	rrf	??___fltol,f
 14629  088A  0B89               	decfsz	9,f
 14630  088B  2886               	goto	u5735
 14631  088C  0866               	movf	??___fltol,w
 14632  088D  00EA               	movwf	??___fltol+4
 14633  088E  086A               	movf	??___fltol+4,w
 14634  088F  00EB               	movwf	___fltol@sign1
 14635  0890  17E4               	bsf	___fltol@f1+2,7
 14636  0891  30FF               	movlw	255
 14637  0892  05E2               	andwf	___fltol@f1,f
 14638  0893  30FF               	movlw	255
 14639  0894  05E3               	andwf	___fltol@f1+1,f
 14640  0895  30FF               	movlw	255
 14641  0896  05E4               	andwf	___fltol@f1+2,f
 14642  0897  3000               	movlw	0
 14643  0898  05E5               	andwf	___fltol@f1+3,f
 14644  0899  3096               	movlw	150
 14645  089A  02EC               	subwf	___fltol@exp1,f
 14646  089B  1FEC               	btfss	___fltol@exp1,7
 14647  089C  28B0               	goto	l6267
 14648  089D  086C               	movf	___fltol@exp1,w
 14649  089E  3A80               	xorlw	128
 14650  089F  3E97               	addlw	151
 14651  08A0  1C03               	btfss	3,0
 14652  08A1  2874               	goto	l6245
 14653  08A2                     l6265:	
 14654  08A2  3001               	movlw	1
 14655  08A3                     u5765:	
 14656  08A3  36E5               	lsrf	___fltol@f1+3,f
 14657  08A4  0CE4               	rrf	___fltol@f1+2,f
 14658  08A5  0CE3               	rrf	___fltol@f1+1,f
 14659  08A6  0CE2               	rrf	___fltol@f1,f
 14660  08A7  0B89               	decfsz	9,f
 14661  08A8  28A3               	goto	u5765
 14662  08A9  3001               	movlw	1
 14663  08AA  00E6               	movwf	??___fltol
 14664  08AB  0866               	movf	??___fltol,w
 14665  08AC  07EC               	addwf	___fltol@exp1,f
 14666  08AD  1903               	btfsc	3,2
 14667  08AE  28C1               	goto	l6275
 14668  08AF  28A2               	goto	l6265
 14669  08B0                     l6267:	
 14670  08B0  3020               	movlw	32
 14671  08B1  026C               	subwf	___fltol@exp1,w
 14672  08B2  1803               	btfsc	3,0
 14673  08B3  2874               	goto	l6245
 14674  08B4                     l1745:	
 14675  08B4  086C               	movf	___fltol@exp1,w
 14676  08B5  1903               	btfsc	3,2
 14677  08B6  28C1               	goto	l6275
 14678  08B7  3001               	movlw	1
 14679  08B8                     u5795:	
 14680  08B8  35E2               	lslf	___fltol@f1,f
 14681  08B9  0DE3               	rlf	___fltol@f1+1,f
 14682  08BA  0DE4               	rlf	___fltol@f1+2,f
 14683  08BB  0DE5               	rlf	___fltol@f1+3,f
 14684  08BC  0B89               	decfsz	9,f
 14685  08BD  28B8               	goto	u5795
 14686  08BE  3001               	movlw	1
 14687  08BF  02EC               	subwf	___fltol@exp1,f
 14688  08C0  28B4               	goto	l1745
 14689  08C1                     l6275:	
 14690  08C1  086B               	movf	___fltol@sign1,w
 14691  08C2  1903               	btfsc	3,2
 14692  08C3  0008               	return
 14693  08C4  09E2               	comf	___fltol@f1,f
 14694  08C5  09E3               	comf	___fltol@f1+1,f
 14695  08C6  09E4               	comf	___fltol@f1+2,f
 14696  08C7  09E5               	comf	___fltol@f1+3,f
 14697  08C8  0AE2               	incf	___fltol@f1,f
 14698  08C9  1903               	skipnz
 14699  08CA  0AE3               	incf	___fltol@f1+1,f
 14700  08CB  1903               	skipnz
 14701  08CC  0AE4               	incf	___fltol@f1+2,f
 14702  08CD  1903               	skipnz
 14703  08CE  0AE5               	incf	___fltol@f1+3,f
 14704  08CF  0008               	return
 14705  08D0                     __end_of___fltol:	
 14706                           
 14707                           	psect	text28
 14708  0084                     __ptext28:	
 14709 ;; *************** function ___flmul *****************
 14710 ;; Defined at:
 14711 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;  b               4   40[BANK0 ] long 
 14714 ;;  a               4   44[BANK0 ] long 
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;  prod            4   60[BANK0 ] struct .
 14717 ;;  grs             4   55[BANK0 ] unsigned long 
 14718 ;;  temp            2   64[BANK0 ] struct .
 14719 ;;  bexp            1   59[BANK0 ] unsigned char 
 14720 ;;  aexp            1   54[BANK0 ] unsigned char 
 14721 ;;  sign            1   53[BANK0 ] unsigned char 
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  4   40[BANK0 ] unsigned char 
 14724 ;; Registers used:
 14725 ;;		wreg, status,2, status,0, pclath, cstack
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14731 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;Total ram usage:       26 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    5
 14738 ;; This function calls:
 14739 ;;		__Umul8_16
 14740 ;; This function is called by:
 14741 ;;		_LED_setColor
 14742 ;;		_beatBrightnessCalculation
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function ___flmul
 14748  0084                     ___flmul:	
 14749                           
 14750                           ;incstack = 0
 14751                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14752  0084  0140               	movlb	0	; select bank0
 14753  0085  084B               	movf	___flmul@b+3,w
 14754  0086  3980               	andlw	128
 14755  0087  00D0               	movwf	??___flmul
 14756  0088  0850               	movf	??___flmul,w
 14757  0089  00D5               	movwf	___flmul@sign
 14758  008A  354B               	lslf	___flmul@b+3,w
 14759  008B  00D0               	movwf	??___flmul
 14760  008C  0850               	movf	??___flmul,w
 14761  008D  00DB               	movwf	___flmul@bexp
 14762  008E  1BCA               	btfsc	___flmul@b+2,7
 14763  008F  145B               	bsf	___flmul@bexp,0
 14764  0090  085B               	movf	___flmul@bexp,w
 14765  0091  1903               	btfsc	3,2
 14766  0092  28A0               	goto	l6435
 14767  0093  0A5B               	incf	___flmul@bexp,w
 14768  0094  1D03               	btfss	3,2
 14769  0095  289E               	goto	l6433
 14770  0096  3000               	movlw	0
 14771  0097  00CB               	movwf	___flmul@b+3
 14772  0098  3000               	movlw	0
 14773  0099  00CA               	movwf	___flmul@b+2
 14774  009A  3000               	movlw	0
 14775  009B  00C9               	movwf	___flmul@b+1
 14776  009C  3000               	movlw	0
 14777  009D  00C8               	movwf	___flmul@b
 14778  009E                     l6433:	
 14779  009E  17CA               	bsf	___flmul@b+2,7
 14780  009F  28A8               	goto	l6437
 14781  00A0                     l6435:	
 14782  00A0  3000               	movlw	0
 14783  00A1  00CB               	movwf	___flmul@b+3
 14784  00A2  3000               	movlw	0
 14785  00A3  00CA               	movwf	___flmul@b+2
 14786  00A4  3000               	movlw	0
 14787  00A5  00C9               	movwf	___flmul@b+1
 14788  00A6  3000               	movlw	0
 14789  00A7  00C8               	movwf	___flmul@b
 14790  00A8                     l6437:	
 14791  00A8  084F               	movf	___flmul@a+3,w
 14792  00A9  3980               	andlw	128
 14793  00AA  00D0               	movwf	??___flmul
 14794  00AB  0850               	movf	??___flmul,w
 14795  00AC  06D5               	xorwf	___flmul@sign,f
 14796  00AD  354F               	lslf	___flmul@a+3,w
 14797  00AE  00D0               	movwf	??___flmul
 14798  00AF  0850               	movf	??___flmul,w
 14799  00B0  00D6               	movwf	___flmul@aexp
 14800  00B1  1BCE               	btfsc	___flmul@a+2,7
 14801  00B2  1456               	bsf	___flmul@aexp,0
 14802  00B3  0856               	movf	___flmul@aexp,w
 14803  00B4  1903               	btfsc	3,2
 14804  00B5  28C3               	goto	l6453
 14805  00B6  0A56               	incf	___flmul@aexp,w
 14806  00B7  1D03               	btfss	3,2
 14807  00B8  28C1               	goto	l6451
 14808  00B9  3000               	movlw	0
 14809  00BA  00CF               	movwf	___flmul@a+3
 14810  00BB  3000               	movlw	0
 14811  00BC  00CE               	movwf	___flmul@a+2
 14812  00BD  3000               	movlw	0
 14813  00BE  00CD               	movwf	___flmul@a+1
 14814  00BF  3000               	movlw	0
 14815  00C0  00CC               	movwf	___flmul@a
 14816  00C1                     l6451:	
 14817  00C1  17CE               	bsf	___flmul@a+2,7
 14818  00C2  28CB               	goto	l6455
 14819  00C3                     l6453:	
 14820  00C3  3000               	movlw	0
 14821  00C4  00CF               	movwf	___flmul@a+3
 14822  00C5  3000               	movlw	0
 14823  00C6  00CE               	movwf	___flmul@a+2
 14824  00C7  3000               	movlw	0
 14825  00C8  00CD               	movwf	___flmul@a+1
 14826  00C9  3000               	movlw	0
 14827  00CA  00CC               	movwf	___flmul@a
 14828  00CB                     l6455:	
 14829  00CB  0856               	movf	___flmul@aexp,w
 14830  00CC  1D03               	btfss	3,2
 14831  00CD  085B               	movf	___flmul@bexp,w
 14832  00CE  1D03               	btfss	3,2
 14833  00CF  28D9               	goto	l6463
 14834  00D0  3000               	movlw	0
 14835  00D1  00CB               	movwf	?___flmul+3
 14836  00D2  3000               	movlw	0
 14837  00D3  00CA               	movwf	?___flmul+2
 14838  00D4  3000               	movlw	0
 14839  00D5  00C9               	movwf	?___flmul+1
 14840  00D6  3000               	movlw	0
 14841  00D7  00C8               	movwf	?___flmul
 14842  00D8  0008               	return
 14843  00D9                     l6463:	
 14844  00D9  0848               	movf	___flmul@b,w
 14845  00DA  00D0               	movwf	??___flmul
 14846  00DB  0850               	movf	??___flmul,w
 14847  00DC  00A0               	movwf	__Umul8_16@multiplicand
 14848  00DD  084E               	movf	___flmul@a+2,w
 14849  00DE  3187  27DF  3180   	fcall	__Umul8_16
 14850  00E1  0140               	movlb	0	; select bank0
 14851  00E2  0821               	movf	?__Umul8_16+1,w
 14852  00E3  00E1               	movwf	___flmul@temp+1
 14853  00E4  0820               	movf	?__Umul8_16,w
 14854  00E5  00E0               	movwf	___flmul@temp
 14855  00E6  0860               	movf	___flmul@temp,w
 14856  00E7  00D0               	movwf	??___flmul
 14857  00E8  01D1               	clrf	??___flmul+1
 14858  00E9  01D2               	clrf	??___flmul+2
 14859  00EA  01D3               	clrf	??___flmul+3
 14860  00EB  0853               	movf	??___flmul+3,w
 14861  00EC  00DA               	movwf	___flmul@grs+3
 14862  00ED  0852               	movf	??___flmul+2,w
 14863  00EE  00D9               	movwf	___flmul@grs+2
 14864  00EF  0851               	movf	??___flmul+1,w
 14865  00F0  00D8               	movwf	___flmul@grs+1
 14866  00F1  0850               	movf	??___flmul,w
 14867  00F2  00D7               	movwf	___flmul@grs
 14868  00F3  0861               	movf	___flmul@temp+1,w
 14869  00F4  00D0               	movwf	??___flmul
 14870  00F5  01D1               	clrf	??___flmul+1
 14871  00F6  01D2               	clrf	??___flmul+2
 14872  00F7  01D3               	clrf	??___flmul+3
 14873  00F8  0853               	movf	??___flmul+3,w
 14874  00F9  00DF               	movwf	___flmul@prod+3
 14875  00FA  0852               	movf	??___flmul+2,w
 14876  00FB  00DE               	movwf	___flmul@prod+2
 14877  00FC  0851               	movf	??___flmul+1,w
 14878  00FD  00DD               	movwf	___flmul@prod+1
 14879  00FE  0850               	movf	??___flmul,w
 14880  00FF  00DC               	movwf	___flmul@prod
 14881  0100  0849               	movf	___flmul@b+1,w
 14882  0101  00D0               	movwf	??___flmul
 14883  0102  0850               	movf	??___flmul,w
 14884  0103  00A0               	movwf	__Umul8_16@multiplicand
 14885  0104  084D               	movf	___flmul@a+1,w
 14886  0105  3187  27DF  3180   	fcall	__Umul8_16
 14887  0108  0140               	movlb	0	; select bank0
 14888  0109  0821               	movf	?__Umul8_16+1,w
 14889  010A  00E1               	movwf	___flmul@temp+1
 14890  010B  0820               	movf	?__Umul8_16,w
 14891  010C  00E0               	movwf	___flmul@temp
 14892  010D  0860               	movf	___flmul@temp,w
 14893  010E  00D0               	movwf	??___flmul
 14894  010F  01D1               	clrf	??___flmul+1
 14895  0110  01D2               	clrf	??___flmul+2
 14896  0111  01D3               	clrf	??___flmul+3
 14897  0112  0850               	movf	??___flmul,w
 14898  0113  07D7               	addwf	___flmul@grs,f
 14899  0114  0851               	movf	??___flmul+1,w
 14900  0115  3DD8               	addwfc	___flmul@grs+1,f
 14901  0116  0852               	movf	??___flmul+2,w
 14902  0117  3DD9               	addwfc	___flmul@grs+2,f
 14903  0118  0853               	movf	??___flmul+3,w
 14904  0119  3DDA               	addwfc	___flmul@grs+3,f
 14905  011A  0861               	movf	___flmul@temp+1,w
 14906  011B  00D0               	movwf	??___flmul
 14907  011C  01D1               	clrf	??___flmul+1
 14908  011D  01D2               	clrf	??___flmul+2
 14909  011E  01D3               	clrf	??___flmul+3
 14910  011F  0850               	movf	??___flmul,w
 14911  0120  07DC               	addwf	___flmul@prod,f
 14912  0121  0851               	movf	??___flmul+1,w
 14913  0122  3DDD               	addwfc	___flmul@prod+1,f
 14914  0123  0852               	movf	??___flmul+2,w
 14915  0124  3DDE               	addwfc	___flmul@prod+2,f
 14916  0125  0853               	movf	??___flmul+3,w
 14917  0126  3DDF               	addwfc	___flmul@prod+3,f
 14918  0127  084A               	movf	___flmul@b+2,w
 14919  0128  00D0               	movwf	??___flmul
 14920  0129  0850               	movf	??___flmul,w
 14921  012A  00A0               	movwf	__Umul8_16@multiplicand
 14922  012B  084C               	movf	___flmul@a,w
 14923  012C  3187  27DF  3180   	fcall	__Umul8_16
 14924  012F  0140               	movlb	0	; select bank0
 14925  0130  0821               	movf	?__Umul8_16+1,w
 14926  0131  00E1               	movwf	___flmul@temp+1
 14927  0132  0820               	movf	?__Umul8_16,w
 14928  0133  00E0               	movwf	___flmul@temp
 14929  0134  0860               	movf	___flmul@temp,w
 14930  0135  00D0               	movwf	??___flmul
 14931  0136  01D1               	clrf	??___flmul+1
 14932  0137  01D2               	clrf	??___flmul+2
 14933  0138  01D3               	clrf	??___flmul+3
 14934  0139  0850               	movf	??___flmul,w
 14935  013A  07D7               	addwf	___flmul@grs,f
 14936  013B  0851               	movf	??___flmul+1,w
 14937  013C  3DD8               	addwfc	___flmul@grs+1,f
 14938  013D  0852               	movf	??___flmul+2,w
 14939  013E  3DD9               	addwfc	___flmul@grs+2,f
 14940  013F  0853               	movf	??___flmul+3,w
 14941  0140  3DDA               	addwfc	___flmul@grs+3,f
 14942  0141  0861               	movf	___flmul@temp+1,w
 14943  0142  00D0               	movwf	??___flmul
 14944  0143  01D1               	clrf	??___flmul+1
 14945  0144  01D2               	clrf	??___flmul+2
 14946  0145  01D3               	clrf	??___flmul+3
 14947  0146  0850               	movf	??___flmul,w
 14948  0147  07DC               	addwf	___flmul@prod,f
 14949  0148  0851               	movf	??___flmul+1,w
 14950  0149  3DDD               	addwfc	___flmul@prod+1,f
 14951  014A  0852               	movf	??___flmul+2,w
 14952  014B  3DDE               	addwfc	___flmul@prod+2,f
 14953  014C  0853               	movf	??___flmul+3,w
 14954  014D  3DDF               	addwfc	___flmul@prod+3,f
 14955  014E  3008               	movlw	8
 14956  014F                     u6195:	
 14957  014F  35D7               	lslf	___flmul@grs,f
 14958  0150  0DD8               	rlf	___flmul@grs+1,f
 14959  0151  0DD9               	rlf	___flmul@grs+2,f
 14960  0152  0DDA               	rlf	___flmul@grs+3,f
 14961  0153  0B89               	decfsz	9,f
 14962  0154  294F               	goto	u6195
 14963  0155  0849               	movf	___flmul@b+1,w
 14964  0156  00D0               	movwf	??___flmul
 14965  0157  0850               	movf	??___flmul,w
 14966  0158  00A0               	movwf	__Umul8_16@multiplicand
 14967  0159  084C               	movf	___flmul@a,w
 14968  015A  3187  27DF  3180   	fcall	__Umul8_16
 14969  015D  0140               	movlb	0	; select bank0
 14970  015E  0821               	movf	?__Umul8_16+1,w
 14971  015F  00E1               	movwf	___flmul@temp+1
 14972  0160  0820               	movf	?__Umul8_16,w
 14973  0161  00E0               	movwf	___flmul@temp
 14974  0162  0860               	movf	___flmul@temp,w
 14975  0163  07D7               	addwf	___flmul@grs,f
 14976  0164  0861               	movf	___flmul@temp+1,w
 14977  0165  3DD8               	addwfc	___flmul@grs+1,f
 14978  0166  3000               	movlw	0
 14979  0167  3DD9               	addwfc	___flmul@grs+2,f
 14980  0168  3DDA               	addwfc	___flmul@grs+3,f
 14981  0169  0848               	movf	___flmul@b,w
 14982  016A  00D0               	movwf	??___flmul
 14983  016B  0850               	movf	??___flmul,w
 14984  016C  00A0               	movwf	__Umul8_16@multiplicand
 14985  016D  084D               	movf	___flmul@a+1,w
 14986  016E  3187  27DF  3180   	fcall	__Umul8_16
 14987  0171  0140               	movlb	0	; select bank0
 14988  0172  0821               	movf	?__Umul8_16+1,w
 14989  0173  00E1               	movwf	___flmul@temp+1
 14990  0174  0820               	movf	?__Umul8_16,w
 14991  0175  00E0               	movwf	___flmul@temp
 14992  0176  0860               	movf	___flmul@temp,w
 14993  0177  07D7               	addwf	___flmul@grs,f
 14994  0178  0861               	movf	___flmul@temp+1,w
 14995  0179  3DD8               	addwfc	___flmul@grs+1,f
 14996  017A  3000               	movlw	0
 14997  017B  3DD9               	addwfc	___flmul@grs+2,f
 14998  017C  3DDA               	addwfc	___flmul@grs+3,f
 14999  017D  3008               	movlw	8
 15000  017E                     u6205:	
 15001  017E  35D7               	lslf	___flmul@grs,f
 15002  017F  0DD8               	rlf	___flmul@grs+1,f
 15003  0180  0DD9               	rlf	___flmul@grs+2,f
 15004  0181  0DDA               	rlf	___flmul@grs+3,f
 15005  0182  0B89               	decfsz	9,f
 15006  0183  297E               	goto	u6205
 15007  0184  0848               	movf	___flmul@b,w
 15008  0185  00D0               	movwf	??___flmul
 15009  0186  0850               	movf	??___flmul,w
 15010  0187  00A0               	movwf	__Umul8_16@multiplicand
 15011  0188  084C               	movf	___flmul@a,w
 15012  0189  3187  27DF  3180   	fcall	__Umul8_16
 15013  018C  0140               	movlb	0	; select bank0
 15014  018D  0821               	movf	?__Umul8_16+1,w
 15015  018E  00E1               	movwf	___flmul@temp+1
 15016  018F  0820               	movf	?__Umul8_16,w
 15017  0190  00E0               	movwf	___flmul@temp
 15018  0191  0860               	movf	___flmul@temp,w
 15019  0192  07D7               	addwf	___flmul@grs,f
 15020  0193  0861               	movf	___flmul@temp+1,w
 15021  0194  3DD8               	addwfc	___flmul@grs+1,f
 15022  0195  3000               	movlw	0
 15023  0196  3DD9               	addwfc	___flmul@grs+2,f
 15024  0197  3DDA               	addwfc	___flmul@grs+3,f
 15025  0198  0849               	movf	___flmul@b+1,w
 15026  0199  00D0               	movwf	??___flmul
 15027  019A  0850               	movf	??___flmul,w
 15028  019B  00A0               	movwf	__Umul8_16@multiplicand
 15029  019C  084E               	movf	___flmul@a+2,w
 15030  019D  3187  27DF  3180   	fcall	__Umul8_16
 15031  01A0  0140               	movlb	0	; select bank0
 15032  01A1  0821               	movf	?__Umul8_16+1,w
 15033  01A2  00E1               	movwf	___flmul@temp+1
 15034  01A3  0820               	movf	?__Umul8_16,w
 15035  01A4  00E0               	movwf	___flmul@temp
 15036  01A5  0860               	movf	___flmul@temp,w
 15037  01A6  07DC               	addwf	___flmul@prod,f
 15038  01A7  0861               	movf	___flmul@temp+1,w
 15039  01A8  3DDD               	addwfc	___flmul@prod+1,f
 15040  01A9  3000               	movlw	0
 15041  01AA  3DDE               	addwfc	___flmul@prod+2,f
 15042  01AB  3DDF               	addwfc	___flmul@prod+3,f
 15043  01AC  084A               	movf	___flmul@b+2,w
 15044  01AD  00D0               	movwf	??___flmul
 15045  01AE  0850               	movf	??___flmul,w
 15046  01AF  00A0               	movwf	__Umul8_16@multiplicand
 15047  01B0  084D               	movf	___flmul@a+1,w
 15048  01B1  3187  27DF  3180   	fcall	__Umul8_16
 15049  01B4  0140               	movlb	0	; select bank0
 15050  01B5  0821               	movf	?__Umul8_16+1,w
 15051  01B6  00E1               	movwf	___flmul@temp+1
 15052  01B7  0820               	movf	?__Umul8_16,w
 15053  01B8  00E0               	movwf	___flmul@temp
 15054  01B9  0860               	movf	___flmul@temp,w
 15055  01BA  07DC               	addwf	___flmul@prod,f
 15056  01BB  0861               	movf	___flmul@temp+1,w
 15057  01BC  3DDD               	addwfc	___flmul@prod+1,f
 15058  01BD  3000               	movlw	0
 15059  01BE  3DDE               	addwfc	___flmul@prod+2,f
 15060  01BF  3DDF               	addwfc	___flmul@prod+3,f
 15061  01C0  084A               	movf	___flmul@b+2,w
 15062  01C1  00D0               	movwf	??___flmul
 15063  01C2  0850               	movf	??___flmul,w
 15064  01C3  00A0               	movwf	__Umul8_16@multiplicand
 15065  01C4  084E               	movf	___flmul@a+2,w
 15066  01C5  3187  27DF  3180   	fcall	__Umul8_16
 15067  01C8  0140               	movlb	0	; select bank0
 15068  01C9  0821               	movf	?__Umul8_16+1,w
 15069  01CA  00E1               	movwf	___flmul@temp+1
 15070  01CB  0820               	movf	?__Umul8_16,w
 15071  01CC  00E0               	movwf	___flmul@temp
 15072  01CD  0860               	movf	___flmul@temp,w
 15073  01CE  00D0               	movwf	??___flmul
 15074  01CF  0861               	movf	___flmul@temp+1,w
 15075  01D0  00D1               	movwf	??___flmul+1
 15076  01D1  01D2               	clrf	??___flmul+2
 15077  01D2  01D3               	clrf	??___flmul+3
 15078  01D3  3008               	movlw	8
 15079  01D4                     u6215:	
 15080  01D4  35D0               	lslf	??___flmul,f
 15081  01D5  0DD1               	rlf	??___flmul+1,f
 15082  01D6  0DD2               	rlf	??___flmul+2,f
 15083  01D7  0DD3               	rlf	??___flmul+3,f
 15084  01D8  0B89               	decfsz	9,f
 15085  01D9  29D4               	goto	u6215
 15086  01DA  0850               	movf	??___flmul,w
 15087  01DB  07DC               	addwf	___flmul@prod,f
 15088  01DC  0851               	movf	??___flmul+1,w
 15089  01DD  3DDD               	addwfc	___flmul@prod+1,f
 15090  01DE  0852               	movf	??___flmul+2,w
 15091  01DF  3DDE               	addwfc	___flmul@prod+2,f
 15092  01E0  0853               	movf	??___flmul+3,w
 15093  01E1  3DDF               	addwfc	___flmul@prod+3,f
 15094  01E2  0857               	movf	___flmul@grs,w
 15095  01E3  00D0               	movwf	??___flmul
 15096  01E4  0858               	movf	___flmul@grs+1,w
 15097  01E5  00D1               	movwf	??___flmul+1
 15098  01E6  0859               	movf	___flmul@grs+2,w
 15099  01E7  00D2               	movwf	??___flmul+2
 15100  01E8  085A               	movf	___flmul@grs+3,w
 15101  01E9  00D3               	movwf	??___flmul+3
 15102  01EA  3018               	movlw	24
 15103  01EB                     u6225:	
 15104  01EB  36D3               	lsrf	??___flmul+3,f
 15105  01EC  0CD2               	rrf	??___flmul+2,f
 15106  01ED  0CD1               	rrf	??___flmul+1,f
 15107  01EE  0CD0               	rrf	??___flmul,f
 15108  01EF  0B89               	decfsz	9,f
 15109  01F0  29EB               	goto	u6225
 15110  01F1  0850               	movf	??___flmul,w
 15111  01F2  07DC               	addwf	___flmul@prod,f
 15112  01F3  0851               	movf	??___flmul+1,w
 15113  01F4  3DDD               	addwfc	___flmul@prod+1,f
 15114  01F5  0852               	movf	??___flmul+2,w
 15115  01F6  3DDE               	addwfc	___flmul@prod+2,f
 15116  01F7  0853               	movf	??___flmul+3,w
 15117  01F8  3DDF               	addwfc	___flmul@prod+3,f
 15118  01F9  3008               	movlw	8
 15119  01FA                     u6235:	
 15120  01FA  35D7               	lslf	___flmul@grs,f
 15121  01FB  0DD8               	rlf	___flmul@grs+1,f
 15122  01FC  0DD9               	rlf	___flmul@grs+2,f
 15123  01FD  0DDA               	rlf	___flmul@grs+3,f
 15124  01FE  0B89               	decfsz	9,f
 15125  01FF  29FA               	goto	u6235
 15126  0200  085B               	movf	___flmul@bexp,w
 15127  0201  0756               	addwf	___flmul@aexp,w
 15128  0202  00D0               	movwf	??___flmul
 15129  0203  01D1               	clrf	??___flmul+1
 15130  0204  0DD1               	rlf	??___flmul+1,f
 15131  0205  0850               	movf	??___flmul,w
 15132  0206  3E82               	addlw	130
 15133  0207  00E0               	movwf	___flmul@temp
 15134  0208  30FF               	movlw	255
 15135  0209  3D51               	addwfc	??___flmul+1,w
 15136  020A  00E1               	movwf	___flmul@temp+1
 15137  020B                     l6515:	
 15138  020B  1BDE               	btfsc	___flmul@prod+2,7
 15139  020C  2A22               	goto	l6517
 15140  020D  3001               	movlw	1
 15141  020E                     u6245:	
 15142  020E  35DC               	lslf	___flmul@prod,f
 15143  020F  0DDD               	rlf	___flmul@prod+1,f
 15144  0210  0DDE               	rlf	___flmul@prod+2,f
 15145  0211  0DDF               	rlf	___flmul@prod+3,f
 15146  0212  0B89               	decfsz	9,f
 15147  0213  2A0E               	goto	u6245
 15148  0214  1BDA               	btfsc	___flmul@grs+3,7
 15149  0215  145C               	bsf	___flmul@prod,0
 15150  0216  3001               	movlw	1
 15151  0217                     u6265:	
 15152  0217  35D7               	lslf	___flmul@grs,f
 15153  0218  0DD8               	rlf	___flmul@grs+1,f
 15154  0219  0DD9               	rlf	___flmul@grs+2,f
 15155  021A  0DDA               	rlf	___flmul@grs+3,f
 15156  021B  0B89               	decfsz	9,f
 15157  021C  2A17               	goto	u6265
 15158  021D  30FF               	movlw	255
 15159  021E  07E0               	addwf	___flmul@temp,f
 15160  021F  30FF               	movlw	255
 15161  0220  3DE1               	addwfc	___flmul@temp+1,f
 15162  0221  2A0B               	goto	l6515
 15163  0222                     l6517:	
 15164  0222  01D6               	clrf	___flmul@aexp
 15165  0223  1FDA               	btfss	___flmul@grs+3,7
 15166  0224  2A3B               	goto	l6527
 15167  0225  30FF               	movlw	255
 15168  0226  0557               	andwf	___flmul@grs,w
 15169  0227  00D0               	movwf	??___flmul
 15170  0228  30FF               	movlw	255
 15171  0229  0558               	andwf	___flmul@grs+1,w
 15172  022A  00D1               	movwf	??___flmul+1
 15173  022B  30FF               	movlw	255
 15174  022C  0559               	andwf	___flmul@grs+2,w
 15175  022D  00D2               	movwf	??___flmul+2
 15176  022E  307F               	movlw	127
 15177  022F  055A               	andwf	___flmul@grs+3,w
 15178  0230  00D3               	movwf	??___flmul+3
 15179  0231  0853               	movf	??___flmul+3,w
 15180  0232  0452               	iorwf	??___flmul+2,w
 15181  0233  0451               	iorwf	??___flmul+1,w
 15182  0234  0450               	iorwf	??___flmul,w
 15183  0235  1903               	skipnz
 15184  0236  185C               	btfsc	___flmul@prod,0
 15185  0237  2A39               	goto	l6523
 15186  0238  2A3B               	goto	l6527
 15187  0239                     l6523:	
 15188  0239  01D6               	clrf	___flmul@aexp
 15189  023A  0AD6               	incf	___flmul@aexp,f
 15190  023B                     l6527:	
 15191  023B  0856               	movf	___flmul@aexp,w
 15192  023C  1903               	btfsc	3,2
 15193  023D  2A64               	goto	l6537
 15194  023E  3001               	movlw	1
 15195  023F  07DC               	addwf	___flmul@prod,f
 15196  0240  3000               	movlw	0
 15197  0241  3DDD               	addwfc	___flmul@prod+1,f
 15198  0242  3000               	movlw	0
 15199  0243  3DDE               	addwfc	___flmul@prod+2,f
 15200  0244  3000               	movlw	0
 15201  0245  3DDF               	addwfc	___flmul@prod+3,f
 15202  0246  1C5F               	btfss	___flmul@prod+3,0
 15203  0247  2A64               	goto	l6537
 15204  0248  085C               	movf	___flmul@prod,w
 15205  0249  00D0               	movwf	??___flmul
 15206  024A  085D               	movf	___flmul@prod+1,w
 15207  024B  00D1               	movwf	??___flmul+1
 15208  024C  085E               	movf	___flmul@prod+2,w
 15209  024D  00D2               	movwf	??___flmul+2
 15210  024E  085F               	movf	___flmul@prod+3,w
 15211  024F  00D3               	movwf	??___flmul+3
 15212  0250  3001               	movlw	1
 15213  0251  00D4               	movwf	??___flmul+4
 15214  0252                     u6335:	
 15215  0252  37D3               	asrf	??___flmul+3,f
 15216  0253  0CD2               	rrf	??___flmul+2,f
 15217  0254  0CD1               	rrf	??___flmul+1,f
 15218  0255  0CD0               	rrf	??___flmul,f
 15219  0256  0BD4               	decfsz	??___flmul+4,f
 15220  0257  2A52               	goto	u6335
 15221  0258  0853               	movf	??___flmul+3,w
 15222  0259  00DF               	movwf	___flmul@prod+3
 15223  025A  0852               	movf	??___flmul+2,w
 15224  025B  00DE               	movwf	___flmul@prod+2
 15225  025C  0851               	movf	??___flmul+1,w
 15226  025D  00DD               	movwf	___flmul@prod+1
 15227  025E  0850               	movf	??___flmul,w
 15228  025F  00DC               	movwf	___flmul@prod
 15229  0260  3001               	movlw	1
 15230  0261  07E0               	addwf	___flmul@temp,f
 15231  0262  3000               	movlw	0
 15232  0263  3DE1               	addwfc	___flmul@temp+1,f
 15233  0264                     l6537:	
 15234  0264  0861               	movf	___flmul@temp+1,w
 15235  0265  3A80               	xorlw	128
 15236  0266  00D0               	movwf	??___flmul
 15237  0267  3080               	movlw	128
 15238  0268  0250               	subwf	??___flmul,w
 15239  0269  1D03               	skipz
 15240  026A  2A6D               	goto	u6345
 15241  026B  30FF               	movlw	255
 15242  026C  0260               	subwf	___flmul@temp,w
 15243  026D                     u6345:	
 15244  026D  1C03               	skipc
 15245  026E  2A79               	goto	l6541
 15246  026F  307F               	movlw	127
 15247  0270  0140               	movlb	0	; select bank0
 15248  0271  00DF               	movwf	___flmul@prod+3
 15249  0272  3080               	movlw	128
 15250  0273  00DE               	movwf	___flmul@prod+2
 15251  0274  3000               	movlw	0
 15252  0275  00DD               	movwf	___flmul@prod+1
 15253  0276  3000               	movlw	0
 15254  0277  00DC               	movwf	___flmul@prod
 15255  0278  2AA3               	goto	l1953
 15256  0279                     l6541:	
 15257  0279  0140               	movlb	0	; select bank0
 15258  027A  0861               	movf	___flmul@temp+1,w
 15259  027B  3A80               	xorlw	128
 15260  027C  00D0               	movwf	??___flmul
 15261  027D  3080               	movlw	128
 15262  027E  0250               	subwf	??___flmul,w
 15263  027F  1D03               	skipz
 15264  0280  2A83               	goto	u6355
 15265  0281  3001               	movlw	1
 15266  0282  0260               	subwf	___flmul@temp,w
 15267  0283                     u6355:	
 15268  0283  1803               	skipnc
 15269  0284  2A90               	goto	l6547
 15270  0285  3000               	movlw	0
 15271  0286  0140               	movlb	0	; select bank0
 15272  0287  00DF               	movwf	___flmul@prod+3
 15273  0288  3000               	movlw	0
 15274  0289  00DE               	movwf	___flmul@prod+2
 15275  028A  3000               	movlw	0
 15276  028B  00DD               	movwf	___flmul@prod+1
 15277  028C  3000               	movlw	0
 15278  028D  00DC               	movwf	___flmul@prod
 15279  028E  01D5               	clrf	___flmul@sign
 15280  028F  2AA3               	goto	l1953
 15281  0290                     l6547:	
 15282  0290  0140               	movlb	0	; select bank0
 15283  0291  0860               	movf	___flmul@temp,w
 15284  0292  00D0               	movwf	??___flmul
 15285  0293  0850               	movf	??___flmul,w
 15286  0294  00DB               	movwf	___flmul@bexp
 15287  0295  30FF               	movlw	255
 15288  0296  05DC               	andwf	___flmul@prod,f
 15289  0297  30FF               	movlw	255
 15290  0298  05DD               	andwf	___flmul@prod+1,f
 15291  0299  307F               	movlw	127
 15292  029A  05DE               	andwf	___flmul@prod+2,f
 15293  029B  3000               	movlw	0
 15294  029C  05DF               	andwf	___flmul@prod+3,f
 15295  029D  185B               	btfsc	___flmul@bexp,0
 15296  029E  17DE               	bsf	___flmul@prod+2,7
 15297  029F  365B               	lsrf	___flmul@bexp,w
 15298  02A0  00D0               	movwf	??___flmul
 15299  02A1  0850               	movf	??___flmul,w
 15300  02A2  00DF               	movwf	___flmul@prod+3
 15301  02A3                     l1953:	
 15302  02A3  0855               	movf	___flmul@sign,w
 15303  02A4  00D0               	movwf	??___flmul
 15304  02A5  0850               	movf	??___flmul,w
 15305  02A6  04DF               	iorwf	___flmul@prod+3,f
 15306  02A7  085F               	movf	___flmul@prod+3,w
 15307  02A8  00CB               	movwf	?___flmul+3
 15308  02A9  085E               	movf	___flmul@prod+2,w
 15309  02AA  00CA               	movwf	?___flmul+2
 15310  02AB  085D               	movf	___flmul@prod+1,w
 15311  02AC  00C9               	movwf	?___flmul+1
 15312  02AD  085C               	movf	___flmul@prod,w
 15313  02AE  00C8               	movwf	?___flmul
 15314  02AF  0008               	return
 15315  02B0                     __end_of___flmul:	
 15316                           
 15317                           	psect	text29
 15318  07DF                     __ptext29:	
 15319 ;; *************** function __Umul8_16 *****************
 15320 ;; Defined at:
 15321 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  multiplier      1    wreg     unsigned char 
 15324 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15327 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15328 ;;  product         2    4[BANK0 ] unsigned int 
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  2    0[BANK0 ] unsigned int 
 15331 ;; Registers used:
 15332 ;;		wreg, status,2, status,0
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15339 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15341 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15342 ;;Total ram usage:        9 bytes
 15343 ;; Hardware stack levels used:    1
 15344 ;; Hardware stack levels required when called:    4
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		___flmul
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           
 15353                           ;psect for function __Umul8_16
 15354  07DF                     __Umul8_16:	
 15355                           
 15356                           ;incstack = 0
 15357                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15358                           ;__Umul8_16@multiplier stored from wreg
 15359  07DF  0140               	movlb	0	; select bank0
 15360  07E0  00A8               	movwf	__Umul8_16@multiplier
 15361  07E1  01A4               	clrf	__Umul8_16@product
 15362  07E2  01A5               	clrf	__Umul8_16@product+1
 15363  07E3  0820               	movf	__Umul8_16@multiplicand,w
 15364  07E4  00A2               	movwf	??__Umul8_16
 15365  07E5  01A3               	clrf	??__Umul8_16+1
 15366  07E6  0822               	movf	??__Umul8_16,w
 15367  07E7  00A6               	movwf	__Umul8_16@word_mpld
 15368  07E8  0823               	movf	??__Umul8_16+1,w
 15369  07E9  00A7               	movwf	__Umul8_16@word_mpld+1
 15370  07EA                     l6191:	
 15371  07EA  1C28               	btfss	__Umul8_16@multiplier,0
 15372  07EB  2FF0               	goto	l2031
 15373  07EC  0826               	movf	__Umul8_16@word_mpld,w
 15374  07ED  07A4               	addwf	__Umul8_16@product,f
 15375  07EE  0827               	movf	__Umul8_16@word_mpld+1,w
 15376  07EF  3DA5               	addwfc	__Umul8_16@product+1,f
 15377  07F0                     l2031:	
 15378  07F0  3001               	movlw	1
 15379  07F1                     u5675:	
 15380  07F1  35A6               	lslf	__Umul8_16@word_mpld,f
 15381  07F2  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15382  07F3  0B89               	decfsz	9,f
 15383  07F4  2FF1               	goto	u5675
 15384  07F5  1003               	clrc
 15385  07F6  0CA8               	rrf	__Umul8_16@multiplier,f
 15386  07F7  0828               	movf	__Umul8_16@multiplier,w
 15387  07F8  1D03               	btfss	3,2
 15388  07F9  2FEA               	goto	l6191
 15389  07FA  0825               	movf	__Umul8_16@product+1,w
 15390  07FB  00A1               	movwf	?__Umul8_16+1
 15391  07FC  0824               	movf	__Umul8_16@product,w
 15392  07FD  00A0               	movwf	?__Umul8_16
 15393  07FE  0008               	return
 15394  07FF                     __end_of__Umul8_16:	
 15395                           
 15396                           	psect	text30
 15397  02B0                     __ptext30:	
 15398 ;; *************** function ___fldiv *****************
 15399 ;; Defined at:
 15400 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;  a               4   14[BANK0 ] unsigned int 
 15403 ;;  b               4   18[BANK0 ] unsigned int 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  grs             4   34[BANK0 ] unsigned long 
 15406 ;;  rem             4   27[BANK0 ] unsigned long 
 15407 ;;  new_exp         2   32[BANK0 ] int 
 15408 ;;  aexp            1   39[BANK0 ] unsigned char 
 15409 ;;  bexp            1   38[BANK0 ] unsigned char 
 15410 ;;  sign            1   31[BANK0 ] unsigned char 
 15411 ;; Return value:  Size  Location     Type
 15412 ;;                  4   14[BANK0 ] unsigned char 
 15413 ;; Registers used:
 15414 ;;		wreg, status,2, status,0
 15415 ;; Tracked objects:
 15416 ;;		On entry : 0/0
 15417 ;;		On exit  : 0/0
 15418 ;;		Unchanged: 0/0
 15419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15420 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15422 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15423 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15424 ;;Total ram usage:       26 bytes
 15425 ;; Hardware stack levels used:    1
 15426 ;; Hardware stack levels required when called:    4
 15427 ;; This function calls:
 15428 ;;		Nothing
 15429 ;; This function is called by:
 15430 ;;		_LED_setColor
 15431 ;;		_beatBrightnessCalculation
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           
 15436                           ;psect for function ___fldiv
 15437  02B0                     ___fldiv:	
 15438                           
 15439                           ;incstack = 0
 15440                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15441  02B0  0140               	movlb	0	; select bank0
 15442  02B1  0835               	movf	___fldiv@b+3,w
 15443  02B2  3980               	andlw	128
 15444  02B3  00B6               	movwf	??___fldiv
 15445  02B4  0836               	movf	??___fldiv,w
 15446  02B5  00BF               	movwf	___fldiv@sign
 15447  02B6  3535               	lslf	___fldiv@b+3,w
 15448  02B7  00B6               	movwf	??___fldiv
 15449  02B8  0836               	movf	??___fldiv,w
 15450  02B9  00C6               	movwf	___fldiv@bexp
 15451  02BA  1BB4               	btfsc	___fldiv@b+2,7
 15452  02BB  1446               	bsf	___fldiv@bexp,0
 15453  02BC  0846               	movf	___fldiv@bexp,w
 15454  02BD  1903               	btfsc	3,2
 15455  02BE  2ACD               	goto	l6297
 15456  02BF  0A46               	incf	___fldiv@bexp,w
 15457  02C0  1D03               	btfss	3,2
 15458  02C1  2ACA               	goto	l6293
 15459  02C2  3000               	movlw	0
 15460  02C3  00B5               	movwf	___fldiv@b+3
 15461  02C4  3000               	movlw	0
 15462  02C5  00B4               	movwf	___fldiv@b+2
 15463  02C6  3000               	movlw	0
 15464  02C7  00B3               	movwf	___fldiv@b+1
 15465  02C8  3000               	movlw	0
 15466  02C9  00B2               	movwf	___fldiv@b
 15467  02CA                     l6293:	
 15468  02CA  17B4               	bsf	___fldiv@b+2,7
 15469  02CB  01B5               	clrf	___fldiv@b+3
 15470  02CC  2AD5               	goto	l6299
 15471  02CD                     l6297:	
 15472  02CD  3000               	movlw	0
 15473  02CE  00B5               	movwf	___fldiv@b+3
 15474  02CF  3000               	movlw	0
 15475  02D0  00B4               	movwf	___fldiv@b+2
 15476  02D1  3000               	movlw	0
 15477  02D2  00B3               	movwf	___fldiv@b+1
 15478  02D3  3000               	movlw	0
 15479  02D4  00B2               	movwf	___fldiv@b
 15480  02D5                     l6299:	
 15481  02D5  0831               	movf	___fldiv@a+3,w
 15482  02D6  3980               	andlw	128
 15483  02D7  00B6               	movwf	??___fldiv
 15484  02D8  0836               	movf	??___fldiv,w
 15485  02D9  06BF               	xorwf	___fldiv@sign,f
 15486  02DA  3531               	lslf	___fldiv@a+3,w
 15487  02DB  00B6               	movwf	??___fldiv
 15488  02DC  0836               	movf	??___fldiv,w
 15489  02DD  00C7               	movwf	___fldiv@aexp
 15490  02DE  1BB0               	btfsc	___fldiv@a+2,7
 15491  02DF  1447               	bsf	___fldiv@aexp,0
 15492  02E0  0847               	movf	___fldiv@aexp,w
 15493  02E1  1903               	btfsc	3,2
 15494  02E2  2AF1               	goto	l6317
 15495  02E3  0A47               	incf	___fldiv@aexp,w
 15496  02E4  1D03               	btfss	3,2
 15497  02E5  2AEE               	goto	l6313
 15498  02E6  3000               	movlw	0
 15499  02E7  00B1               	movwf	___fldiv@a+3
 15500  02E8  3000               	movlw	0
 15501  02E9  00B0               	movwf	___fldiv@a+2
 15502  02EA  3000               	movlw	0
 15503  02EB  00AF               	movwf	___fldiv@a+1
 15504  02EC  3000               	movlw	0
 15505  02ED  00AE               	movwf	___fldiv@a
 15506  02EE                     l6313:	
 15507  02EE  17B0               	bsf	___fldiv@a+2,7
 15508  02EF  01B1               	clrf	___fldiv@a+3
 15509  02F0  2AF9               	goto	l1901
 15510  02F1                     l6317:	
 15511  02F1  3000               	movlw	0
 15512  02F2  00B1               	movwf	___fldiv@a+3
 15513  02F3  3000               	movlw	0
 15514  02F4  00B0               	movwf	___fldiv@a+2
 15515  02F5  3000               	movlw	0
 15516  02F6  00AF               	movwf	___fldiv@a+1
 15517  02F7  3000               	movlw	0
 15518  02F8  00AE               	movwf	___fldiv@a
 15519  02F9                     l1901:	
 15520  02F9  0831               	movf	___fldiv@a+3,w
 15521  02FA  0430               	iorwf	___fldiv@a+2,w
 15522  02FB  042F               	iorwf	___fldiv@a+1,w
 15523  02FC  042E               	iorwf	___fldiv@a,w
 15524  02FD  1D03               	skipz
 15525  02FE  2B18               	goto	l6327
 15526  02FF  3000               	movlw	0
 15527  0300  00B5               	movwf	___fldiv@b+3
 15528  0301  3000               	movlw	0
 15529  0302  00B4               	movwf	___fldiv@b+2
 15530  0303  3000               	movlw	0
 15531  0304  00B3               	movwf	___fldiv@b+1
 15532  0305  3000               	movlw	0
 15533  0306  00B2               	movwf	___fldiv@b
 15534  0307  3080               	movlw	128
 15535  0308  04B4               	iorwf	___fldiv@b+2,f
 15536  0309  307F               	movlw	127
 15537  030A  04B5               	iorwf	___fldiv@b+3,f
 15538  030B                     L14:	
 15539  030B  083F               	movf	___fldiv@sign,w
 15540  030C  00B6               	movwf	??___fldiv
 15541  030D  0836               	movf	??___fldiv,w
 15542  030E  04B5               	iorwf	___fldiv@b+3,f
 15543  030F  0835               	movf	___fldiv@b+3,w
 15544  0310  00B1               	movwf	?___fldiv+3
 15545  0311  0834               	movf	___fldiv@b+2,w
 15546  0312  00B0               	movwf	?___fldiv+2
 15547  0313  0833               	movf	___fldiv@b+1,w
 15548  0314  00AF               	movwf	?___fldiv+1
 15549  0315  0832               	movf	___fldiv@b,w
 15550  0316  00AE               	movwf	?___fldiv
 15551  0317  0008               	return
 15552  0318                     l6327:	
 15553  0318  0846               	movf	___fldiv@bexp,w
 15554  0319  1D03               	btfss	3,2
 15555  031A  2B24               	goto	l6333
 15556  031B  3000               	movlw	0
 15557  031C  00B1               	movwf	?___fldiv+3
 15558  031D  3000               	movlw	0
 15559  031E  00B0               	movwf	?___fldiv+2
 15560  031F  3000               	movlw	0
 15561  0320  00AF               	movwf	?___fldiv+1
 15562  0321  3000               	movlw	0
 15563  0322  00AE               	movwf	?___fldiv
 15564  0323  0008               	return
 15565  0324                     l6333:	
 15566  0324  0846               	movf	___fldiv@bexp,w
 15567  0325  00B6               	movwf	??___fldiv
 15568  0326  01B7               	clrf	??___fldiv+1
 15569  0327  0837               	movf	??___fldiv+1,w
 15570  0328  00B9               	movwf	??___fldiv+3
 15571  0329  0847               	movf	___fldiv@aexp,w
 15572  032A  0236               	subwf	??___fldiv,w
 15573  032B  00B8               	movwf	??___fldiv+2
 15574  032C  1C03               	skipc
 15575  032D  03B9               	decf	??___fldiv+3,f
 15576  032E  0838               	movf	??___fldiv+2,w
 15577  032F  3E7F               	addlw	127
 15578  0330  00C0               	movwf	___fldiv@new_exp
 15579  0331  3000               	movlw	0
 15580  0332  3D39               	addwfc	??___fldiv+3,w
 15581  0333  00C1               	movwf	___fldiv@new_exp+1
 15582  0334  0835               	movf	___fldiv@b+3,w
 15583  0335  00BE               	movwf	___fldiv@rem+3
 15584  0336  0834               	movf	___fldiv@b+2,w
 15585  0337  00BD               	movwf	___fldiv@rem+2
 15586  0338  0833               	movf	___fldiv@b+1,w
 15587  0339  00BC               	movwf	___fldiv@rem+1
 15588  033A  0832               	movf	___fldiv@b,w
 15589  033B  00BB               	movwf	___fldiv@rem
 15590  033C  3000               	movlw	0
 15591  033D  00B5               	movwf	___fldiv@b+3
 15592  033E  3000               	movlw	0
 15593  033F  00B4               	movwf	___fldiv@b+2
 15594  0340  3000               	movlw	0
 15595  0341  00B3               	movwf	___fldiv@b+1
 15596  0342  3000               	movlw	0
 15597  0343  00B2               	movwf	___fldiv@b
 15598  0344  3000               	movlw	0
 15599  0345  00C5               	movwf	___fldiv@grs+3
 15600  0346  3000               	movlw	0
 15601  0347  00C4               	movwf	___fldiv@grs+2
 15602  0348  3000               	movlw	0
 15603  0349  00C3               	movwf	___fldiv@grs+1
 15604  034A  3000               	movlw	0
 15605  034B  00C2               	movwf	___fldiv@grs
 15606  034C  01C7               	clrf	___fldiv@aexp
 15607  034D                     l6361:	
 15608  034D  301A               	movlw	26
 15609  034E  0247               	subwf	___fldiv@aexp,w
 15610  034F  1803               	btfsc	3,0
 15611  0350  2B89               	goto	l6363
 15612  0351  0847               	movf	___fldiv@aexp,w
 15613  0352  1903               	btfsc	3,2
 15614  0353  2B6B               	goto	l6353
 15615  0354  3001               	movlw	1
 15616  0355                     u5915:	
 15617  0355  35BB               	lslf	___fldiv@rem,f
 15618  0356  0DBC               	rlf	___fldiv@rem+1,f
 15619  0357  0DBD               	rlf	___fldiv@rem+2,f
 15620  0358  0DBE               	rlf	___fldiv@rem+3,f
 15621  0359  0B89               	decfsz	9,f
 15622  035A  2B55               	goto	u5915
 15623  035B  3001               	movlw	1
 15624  035C                     u5925:	
 15625  035C  35B2               	lslf	___fldiv@b,f
 15626  035D  0DB3               	rlf	___fldiv@b+1,f
 15627  035E  0DB4               	rlf	___fldiv@b+2,f
 15628  035F  0DB5               	rlf	___fldiv@b+3,f
 15629  0360  0B89               	decfsz	9,f
 15630  0361  2B5C               	goto	u5925
 15631  0362  1BC5               	btfsc	___fldiv@grs+3,7
 15632  0363  1432               	bsf	___fldiv@b,0
 15633  0364  3001               	movlw	1
 15634  0365                     u5945:	
 15635  0365  35C2               	lslf	___fldiv@grs,f
 15636  0366  0DC3               	rlf	___fldiv@grs+1,f
 15637  0367  0DC4               	rlf	___fldiv@grs+2,f
 15638  0368  0DC5               	rlf	___fldiv@grs+3,f
 15639  0369  0B89               	decfsz	9,f
 15640  036A  2B65               	goto	u5945
 15641  036B                     l6353:	
 15642  036B  0831               	movf	___fldiv@a+3,w
 15643  036C  023E               	subwf	___fldiv@rem+3,w
 15644  036D  1D03               	skipz
 15645  036E  2B79               	goto	u5955
 15646  036F  0830               	movf	___fldiv@a+2,w
 15647  0370  023D               	subwf	___fldiv@rem+2,w
 15648  0371  1D03               	skipz
 15649  0372  2B79               	goto	u5955
 15650  0373  082F               	movf	___fldiv@a+1,w
 15651  0374  023C               	subwf	___fldiv@rem+1,w
 15652  0375  1D03               	skipz
 15653  0376  2B79               	goto	u5955
 15654  0377  082E               	movf	___fldiv@a,w
 15655  0378  023B               	subwf	___fldiv@rem,w
 15656  0379                     u5955:	
 15657  0379  1C03               	skipc
 15658  037A  2B84               	goto	l6359
 15659  037B  1745               	bsf	___fldiv@grs+3,6
 15660  037C  082E               	movf	___fldiv@a,w
 15661  037D  02BB               	subwf	___fldiv@rem,f
 15662  037E  082F               	movf	___fldiv@a+1,w
 15663  037F  3BBC               	subwfb	___fldiv@rem+1,f
 15664  0380  0830               	movf	___fldiv@a+2,w
 15665  0381  3BBD               	subwfb	___fldiv@rem+2,f
 15666  0382  0831               	movf	___fldiv@a+3,w
 15667  0383  3BBE               	subwfb	___fldiv@rem+3,f
 15668  0384                     l6359:	
 15669  0384  3001               	movlw	1
 15670  0385  00B6               	movwf	??___fldiv
 15671  0386  0836               	movf	??___fldiv,w
 15672  0387  07C7               	addwf	___fldiv@aexp,f
 15673  0388  2B4D               	goto	l6361
 15674  0389                     l6363:	
 15675  0389  083E               	movf	___fldiv@rem+3,w
 15676  038A  043D               	iorwf	___fldiv@rem+2,w
 15677  038B  043C               	iorwf	___fldiv@rem+1,w
 15678  038C  043B               	iorwf	___fldiv@rem,w
 15679  038D  1D03               	btfss	3,2
 15680  038E  1442               	bsf	___fldiv@grs,0
 15681  038F                     l6377:	
 15682  038F  1BB4               	btfsc	___fldiv@b+2,7
 15683  0390  2BA6               	goto	l6379
 15684  0391  3001               	movlw	1
 15685  0392                     u5985:	
 15686  0392  35B2               	lslf	___fldiv@b,f
 15687  0393  0DB3               	rlf	___fldiv@b+1,f
 15688  0394  0DB4               	rlf	___fldiv@b+2,f
 15689  0395  0DB5               	rlf	___fldiv@b+3,f
 15690  0396  0B89               	decfsz	9,f
 15691  0397  2B92               	goto	u5985
 15692  0398  1BC5               	btfsc	___fldiv@grs+3,7
 15693  0399  1432               	bsf	___fldiv@b,0
 15694  039A  3001               	movlw	1
 15695  039B                     u6005:	
 15696  039B  35C2               	lslf	___fldiv@grs,f
 15697  039C  0DC3               	rlf	___fldiv@grs+1,f
 15698  039D  0DC4               	rlf	___fldiv@grs+2,f
 15699  039E  0DC5               	rlf	___fldiv@grs+3,f
 15700  039F  0B89               	decfsz	9,f
 15701  03A0  2B9B               	goto	u6005
 15702  03A1  30FF               	movlw	255
 15703  03A2  07C0               	addwf	___fldiv@new_exp,f
 15704  03A3  30FF               	movlw	255
 15705  03A4  3DC1               	addwfc	___fldiv@new_exp+1,f
 15706  03A5  2B8F               	goto	l6377
 15707  03A6                     l6379:	
 15708  03A6  01C7               	clrf	___fldiv@aexp
 15709  03A7  1FC5               	btfss	___fldiv@grs+3,7
 15710  03A8  2BBF               	goto	l6389
 15711  03A9  30FF               	movlw	255
 15712  03AA  0542               	andwf	___fldiv@grs,w
 15713  03AB  00B6               	movwf	??___fldiv
 15714  03AC  30FF               	movlw	255
 15715  03AD  0543               	andwf	___fldiv@grs+1,w
 15716  03AE  00B7               	movwf	??___fldiv+1
 15717  03AF  30FF               	movlw	255
 15718  03B0  0544               	andwf	___fldiv@grs+2,w
 15719  03B1  00B8               	movwf	??___fldiv+2
 15720  03B2  307F               	movlw	127
 15721  03B3  0545               	andwf	___fldiv@grs+3,w
 15722  03B4  00B9               	movwf	??___fldiv+3
 15723  03B5  0839               	movf	??___fldiv+3,w
 15724  03B6  0438               	iorwf	??___fldiv+2,w
 15725  03B7  0437               	iorwf	??___fldiv+1,w
 15726  03B8  0436               	iorwf	??___fldiv,w
 15727  03B9  1903               	skipnz
 15728  03BA  1832               	btfsc	___fldiv@b,0
 15729  03BB  2BBD               	goto	l6385
 15730  03BC  2BBF               	goto	l6389
 15731  03BD                     l6385:	
 15732  03BD  01C7               	clrf	___fldiv@aexp
 15733  03BE  0AC7               	incf	___fldiv@aexp,f
 15734  03BF                     l6389:	
 15735  03BF  0847               	movf	___fldiv@aexp,w
 15736  03C0  1903               	btfsc	3,2
 15737  03C1  2BE8               	goto	l6399
 15738  03C2  3001               	movlw	1
 15739  03C3  07B2               	addwf	___fldiv@b,f
 15740  03C4  3000               	movlw	0
 15741  03C5  3DB3               	addwfc	___fldiv@b+1,f
 15742  03C6  3000               	movlw	0
 15743  03C7  3DB4               	addwfc	___fldiv@b+2,f
 15744  03C8  3000               	movlw	0
 15745  03C9  3DB5               	addwfc	___fldiv@b+3,f
 15746  03CA  1C35               	btfss	___fldiv@b+3,0
 15747  03CB  2BE8               	goto	l6399
 15748  03CC  0832               	movf	___fldiv@b,w
 15749  03CD  00B6               	movwf	??___fldiv
 15750  03CE  0833               	movf	___fldiv@b+1,w
 15751  03CF  00B7               	movwf	??___fldiv+1
 15752  03D0  0834               	movf	___fldiv@b+2,w
 15753  03D1  00B8               	movwf	??___fldiv+2
 15754  03D2  0835               	movf	___fldiv@b+3,w
 15755  03D3  00B9               	movwf	??___fldiv+3
 15756  03D4  3001               	movlw	1
 15757  03D5  00BA               	movwf	??___fldiv+4
 15758  03D6                     u6075:	
 15759  03D6  37B9               	asrf	??___fldiv+3,f
 15760  03D7  0CB8               	rrf	??___fldiv+2,f
 15761  03D8  0CB7               	rrf	??___fldiv+1,f
 15762  03D9  0CB6               	rrf	??___fldiv,f
 15763  03DA  0BBA               	decfsz	??___fldiv+4,f
 15764  03DB  2BD6               	goto	u6075
 15765  03DC  0839               	movf	??___fldiv+3,w
 15766  03DD  00B5               	movwf	___fldiv@b+3
 15767  03DE  0838               	movf	??___fldiv+2,w
 15768  03DF  00B4               	movwf	___fldiv@b+2
 15769  03E0  0837               	movf	??___fldiv+1,w
 15770  03E1  00B3               	movwf	___fldiv@b+1
 15771  03E2  0836               	movf	??___fldiv,w
 15772  03E3  00B2               	movwf	___fldiv@b
 15773  03E4  3001               	movlw	1
 15774  03E5  07C0               	addwf	___fldiv@new_exp,f
 15775  03E6  3000               	movlw	0
 15776  03E7  3DC1               	addwfc	___fldiv@new_exp+1,f
 15777  03E8                     l6399:	
 15778  03E8  0841               	movf	___fldiv@new_exp+1,w
 15779  03E9  3A80               	xorlw	128
 15780  03EA  00B6               	movwf	??___fldiv
 15781  03EB  3080               	movlw	128
 15782  03EC  0236               	subwf	??___fldiv,w
 15783  03ED  1D03               	skipz
 15784  03EE  2BF1               	goto	u6085
 15785  03EF  30FF               	movlw	255
 15786  03F0  0240               	subwf	___fldiv@new_exp,w
 15787  03F1                     u6085:	
 15788  03F1  1C03               	skipc
 15789  03F2  2C00               	goto	l1922
 15790  03F3  30FF               	movlw	255
 15791  03F4  0140               	movlb	0	; select bank0
 15792  03F5  00C0               	movwf	___fldiv@new_exp
 15793  03F6  3000               	movlw	0
 15794  03F7  00C1               	movwf	___fldiv@new_exp+1
 15795  03F8  3000               	movlw	0
 15796  03F9  00B5               	movwf	___fldiv@b+3
 15797  03FA  3000               	movlw	0
 15798  03FB  00B4               	movwf	___fldiv@b+2
 15799  03FC  3000               	movlw	0
 15800  03FD  00B3               	movwf	___fldiv@b+1
 15801  03FE  3000               	movlw	0
 15802  03FF  00B2               	movwf	___fldiv@b
 15803  0400                     l1922:	
 15804  0400  0140               	movlb	0	; select bank0
 15805  0401  0841               	movf	___fldiv@new_exp+1,w
 15806  0402  3A80               	xorlw	128
 15807  0403  00B6               	movwf	??___fldiv
 15808  0404  3080               	movlw	128
 15809  0405  0236               	subwf	??___fldiv,w
 15810  0406  1D03               	skipz
 15811  0407  2C0A               	goto	u6095
 15812  0408  3001               	movlw	1
 15813  0409  0240               	subwf	___fldiv@new_exp,w
 15814  040A                     u6095:	
 15815  040A  1803               	skipnc
 15816  040B  2C18               	goto	l1923
 15817  040C  0140               	movlb	0	; select bank0
 15818  040D  01C0               	clrf	___fldiv@new_exp
 15819  040E  01C1               	clrf	___fldiv@new_exp+1
 15820  040F  3000               	movlw	0
 15821  0410  00B5               	movwf	___fldiv@b+3
 15822  0411  3000               	movlw	0
 15823  0412  00B4               	movwf	___fldiv@b+2
 15824  0413  3000               	movlw	0
 15825  0414  00B3               	movwf	___fldiv@b+1
 15826  0415  3000               	movlw	0
 15827  0416  00B2               	movwf	___fldiv@b
 15828  0417  01BF               	clrf	___fldiv@sign
 15829  0418                     l1923:	
 15830  0418  0140               	movlb	0	; select bank0
 15831  0419  0840               	movf	___fldiv@new_exp,w
 15832  041A  00B6               	movwf	??___fldiv
 15833  041B  0836               	movf	??___fldiv,w
 15834  041C  00C6               	movwf	___fldiv@bexp
 15835  041D  1C46               	btfss	___fldiv@bexp,0
 15836  041E  2C21               	goto	l6413
 15837  041F  17B4               	bsf	___fldiv@b+2,7
 15838  0420  2C25               	goto	l1925
 15839  0421                     l6413:	
 15840  0421  307F               	movlw	127
 15841  0422  00B6               	movwf	??___fldiv
 15842  0423  0836               	movf	??___fldiv,w
 15843  0424  05B4               	andwf	___fldiv@b+2,f
 15844  0425                     l1925:	
 15845  0425  3646               	lsrf	___fldiv@bexp,w
 15846  0426  00B6               	movwf	??___fldiv
 15847  0427  0836               	movf	??___fldiv,w
 15848  0428  00B5               	movwf	___fldiv@b+3
 15849  0429  2B0B               	goto	L14
 15850  042A                     __end_of___fldiv:	
 15851                           
 15852                           	psect	text31
 15853  13E2                     __ptext31:	
 15854 ;; *************** function _PWM4_LoadDutyValue *****************
 15855 ;; Defined at:
 15856 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;		None
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  1    wreg      void 
 15863 ;; Registers used:
 15864 ;;		wreg, status,2
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/0
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15870 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15873 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15874 ;;Total ram usage:        2 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:    4
 15877 ;; This function calls:
 15878 ;;		Nothing
 15879 ;; This function is called by:
 15880 ;;		_LED_setColor
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           
 15885                           ;psect for function _PWM4_LoadDutyValue
 15886  13E2                     _PWM4_LoadDutyValue:	
 15887                           
 15888                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 15889                           
 15890                           ;incstack = 0
 15891                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 15892  13E2  3000               	movlw	0
 15893  13E3  0141               	movlb	1	; select bank1
 15894  13E4  0221               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 15895  13E5  3080               	movlw	128
 15896  13E6  1903               	skipnz
 15897  13E7  0220               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 15898  13E8  1803               	skipnc
 15899  13E9  0008               	return
 15900                           
 15901                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 15902  13EA  30FF               	movlw	255
 15903  13EB  05A0               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 15904  13EC  3003               	movlw	3
 15905  13ED  05A1               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 15906                           
 15907                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 15908  13EE  0146               	movlb	6	; select bank6
 15909  13EF  1E1A               	btfss	26,4	;volatile
 15910  13F0  2BF7               	goto	l6627
 15911                           
 15912                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 15913  13F1  3006               	movlw	6
 15914  13F2  0141               	movlb	1	; select bank1
 15915  13F3                     u6565:	
 15916  13F3  35A0               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 15917  13F4  0DA1               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 15918  13F5  0B89               	decfsz	9,f
 15919  13F6  2BF3               	goto	u6565
 15920  13F7                     l6627:	
 15921                           
 15922                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 15923  13F7  0141               	movlb	1	; select bank1
 15924  13F8  0821               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 15925  13F9  0146               	movlb	6	; select bank6
 15926  13FA  0099               	movwf	25	;volatile
 15927                           
 15928                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 15929  13FB  0141               	movlb	1	; select bank1
 15930  13FC  0820               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 15931  13FD  0146               	movlb	6	; select bank6
 15932  13FE  0098               	movwf	24	;volatile
 15933                           
 15934                           ;mcc_generated_files/pwm4.c: 93:         }
 15935  13FF  0008               	return
 15936  1400                     __end_of_PWM4_LoadDutyValue:	
 15937                           
 15938                           	psect	text32
 15939  13C4                     __ptext32:	
 15940 ;; *************** function _PWM3_LoadDutyValue *****************
 15941 ;; Defined at:
 15942 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 15945 ;; Auto vars:     Size  Location     Type
 15946 ;;		None
 15947 ;; Return value:  Size  Location     Type
 15948 ;;                  1    wreg      void 
 15949 ;; Registers used:
 15950 ;;		wreg, status,2
 15951 ;; Tracked objects:
 15952 ;;		On entry : 0/0
 15953 ;;		On exit  : 0/0
 15954 ;;		Unchanged: 0/0
 15955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15956 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15959 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15960 ;;Total ram usage:        2 bytes
 15961 ;; Hardware stack levels used:    1
 15962 ;; Hardware stack levels required when called:    4
 15963 ;; This function calls:
 15964 ;;		Nothing
 15965 ;; This function is called by:
 15966 ;;		_LED_setColor
 15967 ;; This function uses a non-reentrant model
 15968 ;;
 15969                           
 15970                           
 15971                           ;psect for function _PWM3_LoadDutyValue
 15972  13C4                     _PWM3_LoadDutyValue:	
 15973                           
 15974                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 15975                           
 15976                           ;incstack = 0
 15977                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 15978  13C4  3000               	movlw	0
 15979  13C5  0141               	movlb	1	; select bank1
 15980  13C6  0221               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 15981  13C7  3080               	movlw	128
 15982  13C8  1903               	skipnz
 15983  13C9  0220               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 15984  13CA  1803               	skipnc
 15985  13CB  0008               	return
 15986                           
 15987                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 15988  13CC  30FF               	movlw	255
 15989  13CD  05A0               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 15990  13CE  3003               	movlw	3
 15991  13CF  05A1               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 15992                           
 15993                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 15994  13D0  0146               	movlb	6	; select bank6
 15995  13D1  1E16               	btfss	22,4	;volatile
 15996  13D2  2BD9               	goto	l6611
 15997                           
 15998                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 15999  13D3  3006               	movlw	6
 16000  13D4  0141               	movlb	1	; select bank1
 16001  13D5                     u6535:	
 16002  13D5  35A0               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16003  13D6  0DA1               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16004  13D7  0B89               	decfsz	9,f
 16005  13D8  2BD5               	goto	u6535
 16006  13D9                     l6611:	
 16007                           
 16008                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16009  13D9  0141               	movlb	1	; select bank1
 16010  13DA  0821               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16011  13DB  0146               	movlb	6	; select bank6
 16012  13DC  0095               	movwf	21	;volatile
 16013                           
 16014                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16015  13DD  0141               	movlb	1	; select bank1
 16016  13DE  0820               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16017  13DF  0146               	movlb	6	; select bank6
 16018  13E0  0094               	movwf	20	;volatile
 16019                           
 16020                           ;mcc_generated_files/pwm3.c: 93:         }
 16021  13E1  0008               	return
 16022  13E2                     __end_of_PWM3_LoadDutyValue:	
 16023                           
 16024                           	psect	text33
 16025  13A6                     __ptext33:	
 16026 ;; *************** function _PWM2_LoadDutyValue *****************
 16027 ;; Defined at:
 16028 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16031 ;; Auto vars:     Size  Location     Type
 16032 ;;		None
 16033 ;; Return value:  Size  Location     Type
 16034 ;;                  1    wreg      void 
 16035 ;; Registers used:
 16036 ;;		wreg, status,2
 16037 ;; Tracked objects:
 16038 ;;		On entry : 0/0
 16039 ;;		On exit  : 0/0
 16040 ;;		Unchanged: 0/0
 16041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16042 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16045 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16046 ;;Total ram usage:        2 bytes
 16047 ;; Hardware stack levels used:    1
 16048 ;; Hardware stack levels required when called:    4
 16049 ;; This function calls:
 16050 ;;		Nothing
 16051 ;; This function is called by:
 16052 ;;		_LED_setColor
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           
 16057                           ;psect for function _PWM2_LoadDutyValue
 16058  13A6                     _PWM2_LoadDutyValue:	
 16059                           
 16060                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 16061                           
 16062                           ;incstack = 0
 16063                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16064  13A6  3000               	movlw	0
 16065  13A7  0141               	movlb	1	; select bank1
 16066  13A8  0221               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16067  13A9  3080               	movlw	128
 16068  13AA  1903               	skipnz
 16069  13AB  0220               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16070  13AC  1803               	skipnc
 16071  13AD  0008               	return
 16072                           
 16073                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16074  13AE  30FF               	movlw	255
 16075  13AF  05A0               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16076  13B0  3003               	movlw	3
 16077  13B1  05A1               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16078                           
 16079                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16080  13B2  0146               	movlb	6	; select bank6
 16081  13B3  1E12               	btfss	18,4	;volatile
 16082  13B4  2BBB               	goto	l6659
 16083                           
 16084                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16085  13B5  3006               	movlw	6
 16086  13B6  0141               	movlb	1	; select bank1
 16087  13B7                     u6625:	
 16088  13B7  35A0               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16089  13B8  0DA1               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16090  13B9  0B89               	decfsz	9,f
 16091  13BA  2BB7               	goto	u6625
 16092  13BB                     l6659:	
 16093                           
 16094                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16095  13BB  0141               	movlb	1	; select bank1
 16096  13BC  0821               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16097  13BD  0146               	movlb	6	; select bank6
 16098  13BE  0091               	movwf	17	;volatile
 16099                           
 16100                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16101  13BF  0141               	movlb	1	; select bank1
 16102  13C0  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16103  13C1  0146               	movlb	6	; select bank6
 16104  13C2  0090               	movwf	16	;volatile
 16105                           
 16106                           ;mcc_generated_files/pwm2.c: 93:         }
 16107  13C3  0008               	return
 16108  13C4                     __end_of_PWM2_LoadDutyValue:	
 16109                           
 16110                           	psect	text34
 16111  1388                     __ptext34:	
 16112 ;; *************** function _PWM1_LoadDutyValue *****************
 16113 ;; Defined at:
 16114 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16115 ;; Parameters:    Size  Location     Type
 16116 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;		None
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  1    wreg      void 
 16121 ;; Registers used:
 16122 ;;		wreg, status,2
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/0
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16128 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16131 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16132 ;;Total ram usage:        2 bytes
 16133 ;; Hardware stack levels used:    1
 16134 ;; Hardware stack levels required when called:    4
 16135 ;; This function calls:
 16136 ;;		Nothing
 16137 ;; This function is called by:
 16138 ;;		_LED_setColor
 16139 ;; This function uses a non-reentrant model
 16140 ;;
 16141                           
 16142                           
 16143                           ;psect for function _PWM1_LoadDutyValue
 16144  1388                     _PWM1_LoadDutyValue:	
 16145                           
 16146                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 16147                           
 16148                           ;incstack = 0
 16149                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16150  1388  3000               	movlw	0
 16151  1389  0141               	movlb	1	; select bank1
 16152  138A  0221               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16153  138B  3080               	movlw	128
 16154  138C  1903               	skipnz
 16155  138D  0220               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16156  138E  1803               	skipnc
 16157  138F  0008               	return
 16158                           
 16159                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16160  1390  30FF               	movlw	255
 16161  1391  05A0               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16162  1392  3003               	movlw	3
 16163  1393  05A1               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16164                           
 16165                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16166  1394  0146               	movlb	6	; select bank6
 16167  1395  1E0E               	btfss	14,4	;volatile
 16168  1396  2B9D               	goto	l6643
 16169                           
 16170                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16171  1397  3006               	movlw	6
 16172  1398  0141               	movlb	1	; select bank1
 16173  1399                     u6595:	
 16174  1399  35A0               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16175  139A  0DA1               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16176  139B  0B89               	decfsz	9,f
 16177  139C  2B99               	goto	u6595
 16178  139D                     l6643:	
 16179                           
 16180                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16181  139D  0141               	movlb	1	; select bank1
 16182  139E  0821               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16183  139F  0146               	movlb	6	; select bank6
 16184  13A0  008D               	movwf	13	;volatile
 16185                           
 16186                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16187  13A1  0141               	movlb	1	; select bank1
 16188  13A2  0820               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16189  13A3  0146               	movlb	6	; select bank6
 16190  13A4  008C               	movwf	12	;volatile
 16191                           
 16192                           ;mcc_generated_files/pwm1.c: 93:         }
 16193  13A5  0008               	return
 16194  13A6                     __end_of_PWM1_LoadDutyValue:	
 16195                           
 16196                           	psect	text35
 16197  1169                     __ptext35:	
 16198 ;; *************** function _BEAT_detected *****************
 16199 ;; Defined at:
 16200 ;;		line 49 in file "beat.c"
 16201 ;; Parameters:    Size  Location     Type
 16202 ;;		None
 16203 ;; Auto vars:     Size  Location     Type
 16204 ;;		None
 16205 ;; Return value:  Size  Location     Type
 16206 ;;                  1    wreg      _Bool 
 16207 ;; Registers used:
 16208 ;;		wreg, status,2, status,0
 16209 ;; Tracked objects:
 16210 ;;		On entry : 0/0
 16211 ;;		On exit  : 0/0
 16212 ;;		Unchanged: 0/0
 16213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16218 ;;Total ram usage:        0 bytes
 16219 ;; Hardware stack levels used:    1
 16220 ;; Hardware stack levels required when called:    4
 16221 ;; This function calls:
 16222 ;;		Nothing
 16223 ;; This function is called by:
 16224 ;;		_LED_task_BEAT_STROBE
 16225 ;; This function uses a non-reentrant model
 16226 ;;
 16227                           
 16228                           
 16229                           ;psect for function _BEAT_detected
 16230  1169                     _BEAT_detected:	
 16231                           
 16232                           ;beat.c: 50:     if (detected) {
 16233                           
 16234                           ;incstack = 0
 16235                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16236  1169  0141               	movlb	1	; select bank1
 16237  116A  0851               	movf	_detected^(0+128),w
 16238  116B  1903               	btfsc	3,2
 16239  116C  2970               	goto	l6747
 16240                           
 16241                           ;beat.c: 51:         detected = 0;
 16242  116D  01D1               	clrf	_detected^(0+128)
 16243                           
 16244                           ;beat.c: 52:         return 1;
 16245  116E  3001               	movlw	1
 16246  116F  0008               	return
 16247  1170                     l6747:	
 16248                           
 16249                           ;beat.c: 55:     return 0;
 16250  1170  3000               	movlw	0
 16251  1171  0008               	return
 16252  1172                     __end_of_BEAT_detected:	
 16253                           
 16254                           	psect	text36
 16255  07FF                     __ptext36:	
 16256 ;; *************** function _LED_task_BEAT_FADE *****************
 16257 ;; Defined at:
 16258 ;;		line 163 in file "led.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      void 
 16265 ;; Registers used:
 16266 ;;		None
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16276 ;;Total ram usage:        0 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    4
 16279 ;; This function calls:
 16280 ;;		Nothing
 16281 ;; This function is called by:
 16282 ;;		_LED_task
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           
 16287                           ;psect for function _LED_task_BEAT_FADE
 16288  07FF                     _LED_task_BEAT_FADE:	
 16289                           
 16290                           ;incstack = 0
 16291                           ; Regs used in _LED_task_BEAT_FADE: []
 16292  07FF  0008               	return
 16293  0800                     __end_of_LED_task_BEAT_FADE:	
 16294                           
 16295                           	psect	text37
 16296  0003                     __ptext37:	
 16297 ;; *************** function _LED_task_ANIMATION *****************
 16298 ;; Defined at:
 16299 ;;		line 168 in file "led.c"
 16300 ;; Parameters:    Size  Location     Type
 16301 ;;		None
 16302 ;; Auto vars:     Size  Location     Type
 16303 ;;		None
 16304 ;; Return value:  Size  Location     Type
 16305 ;;                  1    wreg      void 
 16306 ;; Registers used:
 16307 ;;		None
 16308 ;; Tracked objects:
 16309 ;;		On entry : 0/0
 16310 ;;		On exit  : 0/0
 16311 ;;		Unchanged: 0/0
 16312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16317 ;;Total ram usage:        0 bytes
 16318 ;; Hardware stack levels used:    1
 16319 ;; Hardware stack levels required when called:    4
 16320 ;; This function calls:
 16321 ;;		Nothing
 16322 ;; This function is called by:
 16323 ;;		_LED_task
 16324 ;; This function uses a non-reentrant model
 16325 ;;
 16326                           
 16327                           
 16328                           ;psect for function _LED_task_ANIMATION
 16329  0003                     _LED_task_ANIMATION:	
 16330                           
 16331                           ;incstack = 0
 16332                           ; Regs used in _LED_task_ANIMATION: []
 16333  0003  0008               	return
 16334  0004                     __end_of_LED_task_ANIMATION:	
 16335                           
 16336                           	psect	text38
 16337  1259                     __ptext38:	
 16338 ;; *************** function _DMX_init *****************
 16339 ;; Defined at:
 16340 ;;		line 21 in file "dmx.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;		None
 16343 ;; Auto vars:     Size  Location     Type
 16344 ;;		None
 16345 ;; Return value:  Size  Location     Type
 16346 ;;                  1    wreg      void 
 16347 ;; Registers used:
 16348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16349 ;; Tracked objects:
 16350 ;;		On entry : 0/0
 16351 ;;		On exit  : 0/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16358 ;;Total ram usage:        0 bytes
 16359 ;; Hardware stack levels used:    1
 16360 ;; Hardware stack levels required when called:    9
 16361 ;; This function calls:
 16362 ;;		_EUSART1_SetRxInterruptHandler
 16363 ;;		_TM1650_fastPrintNum
 16364 ;; This function is called by:
 16365 ;;		_main
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           
 16370                           ;psect for function _DMX_init
 16371  1259                     _DMX_init:	
 16372                           
 16373                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16374                           
 16375                           ;incstack = 0
 16376                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16377  1259  30B4               	movlw	low _DMX_interrupt
 16378  125A  0140               	movlb	0	; select bank0
 16379  125B  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16380  125C  3015               	movlw	high _DMX_interrupt
 16381  125D  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16382  125E  3191  2160  3192   	fcall	_EUSART1_SetRxInterruptHandler
 16383                           
 16384                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16385  1261  0141               	movlb	1	; select bank1
 16386  1262  086A               	movf	(_address+1)^(0+128),w
 16387  1263  0140               	movlb	0	; select bank0
 16388  1264  00B5               	movwf	TM1650_fastPrintNum@num+1
 16389  1265  0141               	movlb	1	; select bank1
 16390  1266  0869               	movf	_address^(0+128),w
 16391  1267  0140               	movlb	0	; select bank0
 16392  1268  00B4               	movwf	TM1650_fastPrintNum@num
 16393  1269  318C  24B6         	fcall	_TM1650_fastPrintNum
 16394  126B  0008               	return
 16395  126C                     __end_of_DMX_init:	
 16396                           
 16397                           	psect	text39
 16398  1160                     __ptext39:	
 16399 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16400 ;; Defined at:
 16401 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16404 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;		None
 16407 ;; Return value:  Size  Location     Type
 16408 ;;                  1    wreg      void 
 16409 ;; Registers used:
 16410 ;;		wreg
 16411 ;; Tracked objects:
 16412 ;;		On entry : 0/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16420 ;;Total ram usage:        2 bytes
 16421 ;; Hardware stack levels used:    1
 16422 ;; Hardware stack levels required when called:    4
 16423 ;; This function calls:
 16424 ;;		Nothing
 16425 ;; This function is called by:
 16426 ;;		_EUSART1_Initialize
 16427 ;;		_DMX_init
 16428 ;; This function uses a non-reentrant model
 16429 ;;
 16430                           
 16431                           
 16432                           ;psect for function _EUSART1_SetRxInterruptHandler
 16433  1160                     _EUSART1_SetRxInterruptHandler:	
 16434                           
 16435                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16436                           
 16437                           ;incstack = 0
 16438                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16439  1160  0140               	movlb	0	; select bank0
 16440  1161  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16441  1162  0142               	movlb	2	; select bank2
 16442  1163  00E0               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 16443  1164  0140               	movlb	0	; select bank0
 16444  1165  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16445  1166  0142               	movlb	2	; select bank2
 16446  1167  00DF               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 16447  1168  0008               	return
 16448  1169                     __end_of_EUSART1_SetRxInterruptHandler:	
 16449                           
 16450                           	psect	text40
 16451  06DF                     __ptext40:	
 16452 ;; *************** function _CONTROLLER_task *****************
 16453 ;; Defined at:
 16454 ;;		line 21 in file "controller.c"
 16455 ;; Parameters:    Size  Location     Type
 16456 ;;		None
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;  isActive        1   79[BANK0 ] _Bool 
 16459 ;; Return value:  Size  Location     Type
 16460 ;;                  1    wreg      void 
 16461 ;; Registers used:
 16462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16463 ;; Tracked objects:
 16464 ;;		On entry : 0/0
 16465 ;;		On exit  : 0/0
 16466 ;;		Unchanged: 0/0
 16467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16470 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16471 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16472 ;;Total ram usage:        3 bytes
 16473 ;; Hardware stack levels used:    1
 16474 ;; Hardware stack levels required when called:   18
 16475 ;; This function calls:
 16476 ;;		_BUTTONS_isClicked
 16477 ;;		_CLOCK_getTime
 16478 ;;		_CONTROL_BEAT
 16479 ;;		_CONTROL_DMX
 16480 ;;		_TM1650_enable
 16481 ;;		_TM1650_fastPrintNum
 16482 ;;		_menuSelection
 16483 ;;		_printf
 16484 ;; This function is called by:
 16485 ;;		_main
 16486 ;; This function uses a non-reentrant model
 16487 ;;
 16488                           
 16489                           
 16490                           ;psect for function _CONTROLLER_task
 16491  06DF                     _CONTROLLER_task:	
 16492                           
 16493                           ;controller.c: 23:     _Bool isActive = 1;
 16494                           
 16495                           ;incstack = 0
 16496 ;; hardware stack exceeded
 16497                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16498  06DF  0140               	movlb	0	; select bank0
 16499  06E0  01EF               	clrf	CONTROLLER_task@isActive
 16500  06E1  0AEF               	incf	CONTROLLER_task@isActive,f
 16501                           
 16502                           ;controller.c: 24:     upState = BUTTONS_isClicked(up);
 16503  06E2  0141               	movlb	1	; select bank1
 16504  06E3  085C               	movf	_up^(0+128),w
 16505  06E4  3192  226C  3186   	fcall	_BUTTONS_isClicked
 16506  06E7  0141               	movlb	1	; select bank1
 16507  06E8  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16508  06E9  082A               	movf	??_CONTROLLER_task^(0+128),w
 16509  06EA  00D7               	movwf	_upState^(0+128)
 16510                           
 16511                           ;controller.c: 25:     downState = BUTTONS_isClicked(down);
 16512  06EB  085B               	movf	_down^(0+128),w
 16513  06EC  3192  226C  3186   	fcall	_BUTTONS_isClicked
 16514  06EF  0141               	movlb	1	; select bank1
 16515  06F0  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16516  06F1  082A               	movf	??_CONTROLLER_task^(0+128),w
 16517  06F2  00D6               	movwf	_downState^(0+128)
 16518                           
 16519                           ;controller.c: 26:     menuState = BUTTONS_isClicked(menu);
 16520  06F3  085D               	movf	_menu^(0+128),w
 16521  06F4  3192  226C  3186   	fcall	_BUTTONS_isClicked
 16522  06F7  0141               	movlb	1	; select bank1
 16523  06F8  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16524  06F9  082A               	movf	??_CONTROLLER_task^(0+128),w
 16525  06FA  00D5               	movwf	_menuState^(0+128)
 16526                           
 16527                           ;controller.c: 27:     enterState = BUTTONS_isClicked(enter);
 16528  06FB  085A               	movf	_enter^(0+128),w
 16529  06FC  3192  226C  3186   	fcall	_BUTTONS_isClicked
 16530  06FF  0141               	movlb	1	; select bank1
 16531  0700  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16532  0701  082A               	movf	??_CONTROLLER_task^(0+128),w
 16533  0702  00D4               	movwf	_enterState^(0+128)
 16534                           
 16535                           ;controller.c: 29:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 16536  0703  036D               	decf	_startup^(0+128),w
 16537  0704  1D03               	btfss	3,2
 16538  0705  2F2B               	goto	l7313
 16539  0706  3191  214E  3186   	fcall	_CLOCK_getTime
 16540  0709  0142               	movlb	2	; select bank2
 16541  070A  0848               	movf	_startTime^(0+256),w
 16542  070B  0140               	movlb	0	; select bank0
 16543  070C  0220               	subwf	?_CLOCK_getTime,w
 16544  070D  0141               	movlb	1	; select bank1
 16545  070E  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16546  070F  0142               	movlb	2	; select bank2
 16547  0710  0849               	movf	(_startTime+1)^(0+256),w
 16548  0711  0140               	movlb	0	; select bank0
 16549  0712  3B21               	subwfb	?_CLOCK_getTime+1,w
 16550  0713  0141               	movlb	1	; select bank1
 16551  0714  00AB               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16552  0715  3013               	movlw	19
 16553  0716  022B               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16554  0717  3088               	movlw	136
 16555  0718  1903               	skipnz
 16556  0719  022A               	subwf	??_CONTROLLER_task^(0+128),w
 16557  071A  1803               	skipnc
 16558  071B  2F2B               	goto	l7313
 16559                           
 16560                           ;controller.c: 30:         menuSelection();
 16561  071C  3188  20D0  3186   	fcall	_menuSelection
 16562                           
 16563                           ;controller.c: 31:         if (upState || downState || menuState) {
 16564  071F  0141               	movlb	1	; select bank1
 16565  0720  0857               	movf	_upState^(0+128),w
 16566  0721  1D03               	btfss	3,2
 16567  0722  2F28               	goto	l1005
 16568  0723  0856               	movf	_downState^(0+128),w
 16569  0724  1903               	btfsc	3,2
 16570  0725  0855               	movf	_menuState^(0+128),w
 16571  0726  1903               	btfsc	3,2
 16572  0727  0008               	return
 16573  0728                     l1005:	
 16574                           
 16575                           ;controller.c: 32:             menuPressed = 1;
 16576  0728  01D9               	clrf	_menuPressed^(0+128)
 16577  0729  0AD9               	incf	_menuPressed^(0+128),f
 16578                           
 16579                           ;controller.c: 35:         return;
 16580                           
 16581                           ;controller.c: 33:         }
 16582  072A  0008               	return
 16583  072B                     l7313:	
 16584                           
 16585                           ;controller.c: 38:         if (menuPressed == 0 && startup == 1)
 16586  072B  0859               	movf	_menuPressed^(0+128),w
 16587  072C  1D03               	btfss	3,2
 16588  072D  2F35               	goto	l7319
 16589  072E  036D               	decf	_startup^(0+128),w
 16590  072F  1D03               	btfss	3,2
 16591  0730  2F35               	goto	l7319
 16592                           
 16593                           ;controller.c: 39:             currentSelection = MODE_DMX;
 16594  0731  3002               	movlw	2
 16595  0732  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16596  0733  082A               	movf	??_CONTROLLER_task^(0+128),w
 16597  0734  00EB               	movwf	_currentSelection^(0+128)
 16598  0735                     l7319:	
 16599                           
 16600                           ;controller.c: 40:         startup = 0;
 16601  0735  01ED               	clrf	_startup^(0+128)
 16602                           
 16603                           ;controller.c: 43:     if ((menuState || menuPressed) && !enterPressed) {
 16604  0736  0855               	movf	_menuState^(0+128),w
 16605  0737  1903               	btfsc	3,2
 16606  0738  0859               	movf	_menuPressed^(0+128),w
 16607  0739  1903               	btfsc	3,2
 16608  073A  2F44               	goto	l7331
 16609  073B  0858               	movf	_enterPressed^(0+128),w
 16610  073C  1D03               	btfss	3,2
 16611  073D  2F44               	goto	l7331
 16612                           
 16613                           ;controller.c: 44:         menuPressed = 1;
 16614  073E  01D9               	clrf	_menuPressed^(0+128)
 16615  073F  0AD9               	incf	_menuPressed^(0+128),f
 16616                           
 16617                           ;controller.c: 45:         menuSelection();
 16618  0740  3188  20D0  3186   	fcall	_menuSelection
 16619                           
 16620                           ;controller.c: 46:     } else if (currentSelection == MODE_DMX) {
 16621  0743  2F65               	goto	l7347
 16622  0744                     l7331:	
 16623  0744  3002               	movlw	2
 16624  0745  066B               	xorwf	_currentSelection^(0+128),w
 16625  0746  1D03               	btfss	3,2
 16626  0747  2F4C               	goto	l7335
 16627                           
 16628                           ;controller.c: 47:         isActive = CONTROL_DMX();
 16629  0748  318A  22BC  3186   	fcall	_CONTROL_DMX
 16630  074B  2F5D               	goto	L15
 16631  074C                     l7335:	
 16632                           ;controller.c: 48:     } else if (currentSelection == MODE_ANIMATION) {
 16633                           
 16634  074C  086B               	movf	_currentSelection^(0+128),w
 16635  074D  1D03               	btfss	3,2
 16636  074E  2F53               	goto	l7339
 16637                           
 16638                           ;controller.c: 49:         isActive = 1;
 16639  074F  0140               	movlb	0	; select bank0
 16640  0750  01EF               	clrf	CONTROLLER_task@isActive
 16641  0751  0AEF               	incf	CONTROLLER_task@isActive,f
 16642                           
 16643                           ;controller.c: 50:     } else if (currentSelection == MODE_BEAT_STROBE || currentSelecti
      +                          on == MODE_BEAT_FADE) {
 16644  0752  2F65               	goto	l7347
 16645  0753                     l7339:	
 16646  0753  036B               	decf	_currentSelection^(0+128),w
 16647  0754  1903               	btfsc	3,2
 16648  0755  2F5A               	goto	l7343
 16649  0756  3003               	movlw	3
 16650  0757  066B               	xorwf	_currentSelection^(0+128),w
 16651  0758  1D03               	btfss	3,2
 16652  0759  2F63               	goto	l7345
 16653  075A                     l7343:	
 16654                           
 16655                           ;controller.c: 51:         isActive = CONTROL_BEAT();
 16656  075A  3196  26ED  3186   	fcall	_CONTROL_BEAT
 16657  075D                     L15:	
 16658  075D  0141               	movlb	1	; select bank1
 16659  075E  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16660  075F  082A               	movf	??_CONTROLLER_task^(0+128),w
 16661  0760  0140               	movlb	0	; select bank0
 16662  0761  00EF               	movwf	CONTROLLER_task@isActive
 16663                           
 16664                           ;controller.c: 52:     } else {
 16665  0762  2F65               	goto	l7347
 16666  0763                     l7345:	
 16667                           
 16668                           ;controller.c: 53:         isActive = 0;
 16669  0763  0140               	movlb	0	; select bank0
 16670  0764  01EF               	clrf	CONTROLLER_task@isActive
 16671  0765                     l7347:	
 16672                           
 16673                           ;controller.c: 56:     if (isActive) {
 16674  0765  0140               	movlb	0	; select bank0
 16675  0766  086F               	movf	CONTROLLER_task@isActive,w
 16676  0767  1903               	btfsc	3,2
 16677  0768  2F74               	goto	l7351
 16678                           
 16679                           ;controller.c: 57:         lastActiveTime = CLOCK_getTime();
 16680  0769  3191  214E  3186   	fcall	_CLOCK_getTime
 16681  076C  0140               	movlb	0	; select bank0
 16682  076D  0821               	movf	?_CLOCK_getTime+1,w
 16683  076E  0142               	movlb	2	; select bank2
 16684  076F  00C3               	movwf	(_lastActiveTime+1)^(0+256)
 16685  0770  0140               	movlb	0	; select bank0
 16686  0771  0820               	movf	?_CLOCK_getTime,w
 16687  0772  0142               	movlb	2	; select bank2
 16688  0773  00C2               	movwf	_lastActiveTime^(0+256)
 16689  0774                     l7351:	
 16690                           
 16691                           ;controller.c: 60:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 16692  0774  3191  214E  3186   	fcall	_CLOCK_getTime
 16693  0777  0142               	movlb	2	; select bank2
 16694  0778  0842               	movf	_lastActiveTime^(0+256),w
 16695  0779  0140               	movlb	0	; select bank0
 16696  077A  0220               	subwf	?_CLOCK_getTime,w
 16697  077B  0141               	movlb	1	; select bank1
 16698  077C  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16699  077D  0142               	movlb	2	; select bank2
 16700  077E  0843               	movf	(_lastActiveTime+1)^(0+256),w
 16701  077F  0140               	movlb	0	; select bank0
 16702  0780  3B21               	subwfb	?_CLOCK_getTime+1,w
 16703  0781  0141               	movlb	1	; select bank1
 16704  0782  00AB               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16705  0783  3013               	movlw	19
 16706  0784  022B               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16707  0785  3088               	movlw	136
 16708  0786  1903               	skipnz
 16709  0787  022A               	subwf	??_CONTROLLER_task^(0+128),w
 16710  0788  1C03               	skipc
 16711  0789  2F9C               	goto	l7357
 16712                           
 16713                           ;controller.c: 61:         TM1650_enable(0);
 16714  078A  3000               	movlw	0
 16715  078B  3192  22A8  3186   	fcall	_TM1650_enable
 16716                           
 16717                           ;controller.c: 62:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 16718  078E  3191  214E  3186   	fcall	_CLOCK_getTime
 16719  0791  0140               	movlb	0	; select bank0
 16720  0792  0820               	movf	?_CLOCK_getTime,w
 16721  0793  3E77               	addlw	119
 16722  0794  0142               	movlb	2	; select bank2
 16723  0795  00C2               	movwf	_lastActiveTime^(0+256)
 16724  0796  30EC               	movlw	236
 16725  0797  0140               	movlb	0	; select bank0
 16726  0798  3D21               	addwfc	?_CLOCK_getTime+1,w
 16727  0799  0142               	movlb	2	; select bank2
 16728  079A  00C3               	movwf	(_lastActiveTime+1)^(0+256)
 16729                           
 16730                           ;controller.c: 63:     } else {
 16731  079B  2FA0               	goto	l7359
 16732  079C                     l7357:	
 16733                           
 16734                           ;controller.c: 64:         TM1650_enable(1);
 16735  079C  3001               	movlw	1
 16736  079D  3192  22A8  3186   	fcall	_TM1650_enable
 16737  07A0                     l7359:	
 16738                           
 16739                           ;controller.c: 67:     if (currentSelection == MODE_DMX && !menuPressed) {
 16740  07A0  3002               	movlw	2
 16741  07A1  0141               	movlb	1	; select bank1
 16742  07A2  066B               	xorwf	_currentSelection^(0+128),w
 16743  07A3  1D03               	btfss	3,2
 16744  07A4  2FCE               	goto	l7367
 16745  07A5  0859               	movf	_menuPressed^(0+128),w
 16746  07A6  1D03               	btfss	3,2
 16747  07A7  2FCE               	goto	l7367
 16748                           
 16749                           ;controller.c: 68:         TM1650_fastPrintNum(address);
 16750  07A8  086A               	movf	(_address+1)^(0+128),w
 16751  07A9  0140               	movlb	0	; select bank0
 16752  07AA  00B5               	movwf	TM1650_fastPrintNum@num+1
 16753  07AB  0141               	movlb	1	; select bank1
 16754  07AC  0869               	movf	_address^(0+128),w
 16755  07AD  0140               	movlb	0	; select bank0
 16756  07AE  00B4               	movwf	TM1650_fastPrintNum@num
 16757  07AF  318C  24B6  3186   	fcall	_TM1650_fastPrintNum
 16758  07B2  2FCB               	goto	l7365
 16759  07B3                     l7369:	
 16760  07B3  0859               	movf	_menuPressed^(0+128),w
 16761  07B4  1D03               	btfss	3,2
 16762  07B5  2FD1               	goto	l7375
 16763                           
 16764                           ;controller.c: 71:         printf("SEL1\r");
 16765  07B6  3065               	movlw	low (STR_1| (0+32768))
 16766  07B7  00A0               	movwf	printf@fmt^(0+128)
 16767  07B8  3098               	movlw	high (STR_1| (0+32768))
 16768  07B9  00A1               	movwf	(printf@fmt^(0+128)+1)
 16769  07BA  2FC9               	goto	L17
 16770  07BB                     l7377:	
 16771  07BB  0859               	movf	_menuPressed^(0+128),w
 16772  07BC  1D03               	btfss	3,2
 16773  07BD  2FD4               	goto	l7383
 16774                           
 16775                           ;controller.c: 74:         printf("B-%u  \r", beatBrightness);
 16776  07BE  3035               	movlw	low (STR_2| (0+32768))
 16777  07BF  00A0               	movwf	printf@fmt^(0+128)
 16778  07C0  3098               	movlw	high (STR_2| (0+32768))
 16779  07C1                     L16:	
 16780  07C1  00A1               	movwf	(printf@fmt^(0+128)+1)
 16781  07C2  086E               	movf	_beatBrightness^(0+128),w
 16782  07C3  00AA               	movwf	??_CONTROLLER_task^(0+128)
 16783  07C4  01AB               	clrf	(??_CONTROLLER_task^(0+128)+1)
 16784  07C5  082A               	movf	??_CONTROLLER_task^(0+128),w
 16785  07C6  00A2               	movwf	(?_printf^(0+128)+2)
 16786  07C7  082B               	movf	(??_CONTROLLER_task+1)^(0+128),w
 16787  07C8  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16788  07C9                     L17:	
 16789  07C9  3188  2000         	fcall	_printf
 16790  07CB                     l7365:	
 16791                           
 16792                           ;controller.c: 69:         enterPressed = 0;
 16793  07CB  0141               	movlb	1	; select bank1
 16794  07CC  01D8               	clrf	_enterPressed^(0+128)
 16795                           
 16796                           ;controller.c: 70:     } else if (currentSelection == MODE_ANIMATION && !menuPressed) {
 16797  07CD  0008               	return
 16798  07CE                     l7367:	
 16799  07CE  086B               	movf	_currentSelection^(0+128),w
 16800  07CF  1903               	btfsc	3,2
 16801  07D0  2FB3               	goto	l7369
 16802  07D1                     l7375:	
 16803  07D1  036B               	decf	_currentSelection^(0+128),w
 16804  07D2  1903               	btfsc	3,2
 16805  07D3  2FBB               	goto	l7377
 16806  07D4                     l7383:	
 16807  07D4  3003               	movlw	3
 16808  07D5  066B               	xorwf	_currentSelection^(0+128),w
 16809  07D6  1D03               	btfss	3,2
 16810  07D7  0008               	return
 16811  07D8  0859               	movf	_menuPressed^(0+128),w
 16812  07D9  1D03               	btfss	3,2
 16813  07DA  0008               	return
 16814                           
 16815                           ;controller.c: 77:         printf("F-%u  \r", beatBrightness);
 16816  07DB  303D               	movlw	low (STR_3| (0+32768))
 16817  07DC  00A0               	movwf	printf@fmt^(0+128)
 16818  07DD  3098               	movlw	high (STR_3| (0+32768))
 16819  07DE  2FC1               	goto	L16
 16820  07DF                     __end_of_CONTROLLER_task:	
 16821                           
 16822                           	psect	text41
 16823  08D0                     __ptext41:	
 16824 ;; *************** function _menuSelection *****************
 16825 ;; Defined at:
 16826 ;;		line 83 in file "controller.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;		None
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16844 ;;Total ram usage:        2 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; Hardware stack levels required when called:   17
 16847 ;; This function calls:
 16848 ;;		_printf
 16849 ;; This function is called by:
 16850 ;;		_CONTROLLER_task
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           
 16855                           ;psect for function _menuSelection
 16856  08D0                     _menuSelection:	
 16857                           
 16858                           ;controller.c: 85:     if(menuSelected == MODE_BEAT_FADE)
 16859                           
 16860                           ;incstack = 0
 16861 ;; hardware stack exceeded
 16862                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16863  08D0  3003               	movlw	3
 16864  08D1  0141               	movlb	1	; select bank1
 16865  08D2  066C               	xorwf	_menuSelected^(0+128),w
 16866  08D3  1D03               	btfss	3,2
 16867  08D4  28D7               	goto	l6957
 16868                           
 16869                           ;controller.c: 86:         menuSelected = MODE_BEAT_STROBE;
 16870  08D5  01EC               	clrf	_menuSelected^(0+128)
 16871  08D6  0AEC               	incf	_menuSelected^(0+128),f
 16872  08D7                     l6957:	
 16873                           
 16874                           ;controller.c: 88:     if(upState){
 16875  08D7  0857               	movf	_upState^(0+128),w
 16876  08D8  1903               	btfsc	3,2
 16877  08D9  28EC               	goto	l6965
 16878                           
 16879                           ;controller.c: 89:         if(menuSelected < 2){
 16880  08DA  3002               	movlw	2
 16881  08DB  026C               	subwf	_menuSelected^(0+128),w
 16882  08DC  1803               	skipnc
 16883  08DD  28E5               	goto	l6963
 16884                           
 16885                           ;controller.c: 90:             menuSelected++;
 16886  08DE  3001               	movlw	1
 16887  08DF  0140               	movlb	0	; select bank0
 16888  08E0  00ED               	movwf	??_menuSelection
 16889  08E1  086D               	movf	??_menuSelection,w
 16890  08E2  0141               	movlb	1	; select bank1
 16891  08E3  07EC               	addwf	_menuSelected^(0+128),f
 16892                           
 16893                           ;controller.c: 91:         } else {
 16894  08E4  28F6               	goto	l6973
 16895  08E5                     l6963:	
 16896                           
 16897                           ;controller.c: 92:             menuSelected = 2;
 16898  08E5  3002               	movlw	2
 16899  08E6  0140               	movlb	0	; select bank0
 16900  08E7  00ED               	movwf	??_menuSelection
 16901  08E8  086D               	movf	??_menuSelection,w
 16902  08E9  0141               	movlb	1	; select bank1
 16903  08EA  00EC               	movwf	_menuSelected^(0+128)
 16904  08EB  28F6               	goto	l6973
 16905  08EC                     l6965:	
 16906  08EC  0856               	movf	_downState^(0+128),w
 16907  08ED  1903               	btfsc	3,2
 16908  08EE  28F6               	goto	l6973
 16909                           
 16910                           ;controller.c: 95:         if(menuSelected > 0){
 16911  08EF  086C               	movf	_menuSelected^(0+128),w
 16912  08F0  1903               	btfsc	3,2
 16913  08F1  28F5               	goto	l6971
 16914                           
 16915                           ;controller.c: 96:             menuSelected--;
 16916  08F2  3001               	movlw	1
 16917  08F3  02EC               	subwf	_menuSelected^(0+128),f
 16918                           
 16919                           ;controller.c: 97:         } else {
 16920  08F4  28F6               	goto	l6973
 16921  08F5                     l6971:	
 16922                           
 16923                           ;controller.c: 98:             menuSelected = 0;
 16924  08F5  01EC               	clrf	_menuSelected^(0+128)
 16925  08F6                     l6973:	
 16926                           
 16927                           ;controller.c: 102:     if (enterState) {
 16928  08F6  0854               	movf	_enterState^(0+128),w
 16929  08F7  1903               	btfsc	3,2
 16930  08F8  2923               	goto	l6993
 16931                           
 16932                           ;controller.c: 103:         currentSelection = menuSelected;
 16933  08F9  086C               	movf	_menuSelected^(0+128),w
 16934  08FA  0140               	movlb	0	; select bank0
 16935  08FB  00ED               	movwf	??_menuSelection
 16936  08FC  086D               	movf	??_menuSelection,w
 16937  08FD  0141               	movlb	1	; select bank1
 16938  08FE  00EB               	movwf	_currentSelection^(0+128)
 16939                           
 16940                           ;controller.c: 104:         menuPressed = 0;
 16941  08FF  01D9               	clrf	_menuPressed^(0+128)
 16942                           
 16943                           ;controller.c: 105:         enterPressed = 1;
 16944  0900  01D8               	clrf	_enterPressed^(0+128)
 16945  0901  0AD8               	incf	_enterPressed^(0+128),f
 16946  0902  0008               	return
 16947  0903                     l6983:	
 16948                           
 16949                           ;controller.c: 111:             printf("ANI \r");
 16950  0903  305F               	movlw	low (STR_4| (0+32768))
 16951  0904  0141               	movlb	1	; select bank1
 16952  0905  00A0               	movwf	printf@fmt^(0+128)
 16953  0906  3098               	movlw	high (STR_4| (0+32768))
 16954  0907  00A1               	movwf	(printf@fmt^(0+128)+1)
 16955  0908  3188  2000         	fcall	_printf
 16956                           
 16957                           ;controller.c: 112:             break;
 16958  090A  0008               	return
 16959  090B                     l6985:	
 16960                           
 16961                           ;controller.c: 115:             printf("BEAT\r");
 16962  090B  306B               	movlw	low (STR_5| (0+32768))
 16963  090C  0141               	movlb	1	; select bank1
 16964  090D  00A0               	movwf	printf@fmt^(0+128)
 16965  090E  3098               	movlw	high (STR_5| (0+32768))
 16966  090F  00A1               	movwf	(printf@fmt^(0+128)+1)
 16967  0910  3188  2000         	fcall	_printf
 16968                           
 16969                           ;controller.c: 116:             break;
 16970  0912  0008               	return
 16971  0913                     l6987:	
 16972                           
 16973                           ;controller.c: 119:             printf("BEAT\r");
 16974  0913  306B               	movlw	low (STR_5| (0+32768))
 16975  0914  0141               	movlb	1	; select bank1
 16976  0915  00A0               	movwf	printf@fmt^(0+128)
 16977  0916  3098               	movlw	high (STR_5| (0+32768))
 16978  0917  00A1               	movwf	(printf@fmt^(0+128)+1)
 16979  0918  3188  2000         	fcall	_printf
 16980                           
 16981                           ;controller.c: 120:             break;
 16982  091A  0008               	return
 16983  091B                     l6989:	
 16984                           
 16985                           ;controller.c: 123:             printf("PC  \r");
 16986  091B  3059               	movlw	low (STR_7| (0+32768))
 16987  091C  0141               	movlb	1	; select bank1
 16988  091D  00A0               	movwf	printf@fmt^(0+128)
 16989  091E  3098               	movlw	high (STR_7| (0+32768))
 16990  091F  00A1               	movwf	(printf@fmt^(0+128)+1)
 16991  0920  3188  2000         	fcall	_printf
 16992                           
 16993                           ;controller.c: 124:             break;
 16994  0922  0008               	return
 16995  0923                     l6993:	
 16996  0923  086C               	movf	_menuSelected^(0+128),w
 16997  0924  0140               	movlb	0	; select bank0
 16998  0925  00ED               	movwf	??_menuSelection
 16999  0926  01EE               	clrf	??_menuSelection+1
 17000                           
 17001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17002                           ; Switch size 1, requested type "simple"
 17003                           ; Number of cases is 1, Range of values is 0 to 0
 17004                           ; switch strategies available:
 17005                           ; Name         Instructions Cycles
 17006                           ; simple_byte            4     3 (average)
 17007                           ; direct_byte            8     6 (fixed)
 17008                           ; jumptable            260     6 (fixed)
 17009                           ;	Chosen strategy is simple_byte
 17010  0927  086E               	movf	??_menuSelection+1,w
 17011  0928  3A00               	xorlw	0	; case 0
 17012  0929  1903               	skipnz
 17013  092A  292C               	goto	l7625
 17014  092B  293A               	goto	l1042
 17015  092C                     l7625:	
 17016                           
 17017                           ; Switch size 1, requested type "simple"
 17018                           ; Number of cases is 4, Range of values is 0 to 3
 17019                           ; switch strategies available:
 17020                           ; Name         Instructions Cycles
 17021                           ; simple_byte           13     7 (average)
 17022                           ; direct_byte           14     6 (fixed)
 17023                           ; jumptable            260     6 (fixed)
 17024                           ;	Chosen strategy is simple_byte
 17025  092C  086D               	movf	??_menuSelection,w
 17026  092D  3A00               	xorlw	0	; case 0
 17027  092E  1903               	skipnz
 17028  092F  2903               	goto	l6983
 17029  0930  3A01               	xorlw	1	; case 1
 17030  0931  1903               	skipnz
 17031  0932  290B               	goto	l6985
 17032  0933  3A03               	xorlw	3	; case 2
 17033  0934  1903               	skipnz
 17034  0935  291B               	goto	l6989
 17035  0936  3A01               	xorlw	1	; case 3
 17036  0937  1903               	skipnz
 17037  0938  2913               	goto	l6987
 17038  0939  293A               	goto	l1042
 17039  093A                     l1042:	
 17040  093A  0008               	return
 17041  093B                     __end_of_menuSelection:	
 17042                           
 17043                           	psect	text42
 17044  0800                     __ptext42:	
 17045 ;; *************** function _printf *****************
 17046 ;; Defined at:
 17047 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17048 ;; Parameters:    Size  Location     Type
 17049 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17050 ;;		 -> STR_18(6), STR_17(7), STR_16(8), STR_15(9), 
 17051 ;;		 -> STR_14(10), STR_13(9), STR_12(8), STR_11(7), 
 17052 ;;		 -> STR_9(2), STR_8(5), STR_7(6), STR_6(6), 
 17053 ;;		 -> STR_5(6), STR_4(6), STR_3(8), STR_2(8), 
 17054 ;;		 -> STR_1(6), 
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;  ret             2    0        int 
 17057 ;;  ap              1   76[BANK0 ] PTR void [1]
 17058 ;;		 -> ?_printf(2), 
 17059 ;; Return value:  Size  Location     Type
 17060 ;;                  2    0[BANK1 ] int 
 17061 ;; Registers used:
 17062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17063 ;; Tracked objects:
 17064 ;;		On entry : 0/0
 17065 ;;		On exit  : 0/0
 17066 ;;		Unchanged: 0/0
 17067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17068 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17069 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17071 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17072 ;;Total ram usage:       14 bytes
 17073 ;; Hardware stack levels used:    1
 17074 ;; Hardware stack levels required when called:   16
 17075 ;; This function calls:
 17076 ;;		_vfprintf
 17077 ;; This function is called by:
 17078 ;;		_CONTROLLER_task
 17079 ;;		_menuSelection
 17080 ;;		_TM1650_init
 17081 ;;		_TM1650_scrollPrint
 17082 ;; This function uses a non-reentrant model
 17083 ;;
 17084                           
 17085                           
 17086                           ;psect for function _printf
 17087  0800                     _printf:	
 17088                           
 17089                           ;incstack = 0
 17090 ;; hardware stack exceeded
 17091                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17092  0800  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17093  0801  0140               	movlb	0	; select bank0
 17094  0802  00E9               	movwf	??_printf
 17095  0803  0869               	movf	??_printf,w
 17096  0804  00EC               	movwf	printf@ap
 17097  0805  0141               	movlb	1	; select bank1
 17098  0806  0821               	movf	(printf@fmt+1)^(0+128),w
 17099  0807  0140               	movlb	0	; select bank0
 17100  0808  00E2               	movwf	vfprintf@fmt+1
 17101  0809  0141               	movlb	1	; select bank1
 17102  080A  0820               	movf	printf@fmt^(0+128),w
 17103  080B  0140               	movlb	0	; select bank0
 17104  080C  00E1               	movwf	vfprintf@fmt
 17105  080D  306C               	movlw	(low (printf@ap| 0))& (0+255)
 17106  080E  00E9               	movwf	??_printf
 17107  080F  0869               	movf	??_printf,w
 17108  0810  00E3               	movwf	vfprintf@ap
 17109  0811  3000               	movlw	0
 17110  0812  3195  2555         	fcall	_vfprintf
 17111  0814  0008               	return
 17112  0815                     __end_of_printf:	
 17113                           
 17114                           	psect	text43
 17115  1555                     __ptext43:	
 17116 ;; *************** function _vfprintf *****************
 17117 ;; Defined at:
 17118 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17119 ;; Parameters:    Size  Location     Type
 17120 ;;  fp              1    wreg     PTR struct _IO_FILE
 17121 ;;		 -> NULL(0), 
 17122 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 17123 ;;		 -> STR_18(6), STR_17(7), STR_16(8), STR_15(9), 
 17124 ;;		 -> STR_14(10), STR_13(9), STR_12(8), STR_11(7), 
 17125 ;;		 -> STR_9(2), STR_8(5), STR_7(6), STR_6(6), 
 17126 ;;		 -> STR_5(6), STR_4(6), STR_3(8), STR_2(8), 
 17127 ;;		 -> STR_1(6), 
 17128 ;;  ap              1   67[BANK0 ] PTR PTR void 
 17129 ;;		 -> printf@ap(1), 
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 17132 ;;		 -> NULL(0), 
 17133 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 17134 ;;		 -> STR_18(6), STR_17(7), STR_16(8), STR_15(9), 
 17135 ;;		 -> STR_14(10), STR_13(9), STR_12(8), STR_11(7), 
 17136 ;;		 -> STR_9(2), STR_8(5), STR_7(6), STR_6(6), 
 17137 ;;		 -> STR_5(6), STR_4(6), STR_3(8), STR_2(8), 
 17138 ;;		 -> STR_1(6), 
 17139 ;; Return value:  Size  Location     Type
 17140 ;;                  2   65[BANK0 ] int 
 17141 ;; Registers used:
 17142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17143 ;; Tracked objects:
 17144 ;;		On entry : 0/0
 17145 ;;		On exit  : 0/0
 17146 ;;		Unchanged: 0/0
 17147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17148 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17149 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17151 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17152 ;;Total ram usage:        8 bytes
 17153 ;; Hardware stack levels used:    1
 17154 ;; Hardware stack levels required when called:   15
 17155 ;; This function calls:
 17156 ;;		_vfpfcnvrt
 17157 ;; This function is called by:
 17158 ;;		_printf
 17159 ;; This function uses a non-reentrant model
 17160 ;;
 17161                           
 17162                           
 17163                           ;psect for function _vfprintf
 17164  1555                     _vfprintf:	
 17165                           
 17166                           ;incstack = 0
 17167 ;; hardware stack exceeded
 17168                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17169                           ;vfprintf@fp stored from wreg
 17170  1555  0140               	movlb	0	; select bank0
 17171  1556  00E6               	movwf	vfprintf@fp
 17172                           
 17173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 17174  1557  0862               	movf	vfprintf@fmt+1,w
 17175  1558  00E8               	movwf	vfprintf@cfmt+1
 17176  1559  0861               	movf	vfprintf@fmt,w
 17177  155A  00E7               	movwf	vfprintf@cfmt
 17178                           
 17179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 17180  155B  0142               	movlb	2	; select bank2
 17181  155C  01B0               	clrf	_nout^(0+256)
 17182  155D  01B1               	clrf	(_nout+1)^(0+256)
 17183  155E                     l6685:	
 17184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17185                           
 17186                           
 17187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17188  155E  0140               	movlb	0	; select bank0
 17189  155F  0867               	movf	vfprintf@cfmt,w
 17190  1560  0084               	movwf	4
 17191  1561  0868               	movf	vfprintf@cfmt+1,w
 17192  1562  0085               	movwf	5
 17193  1563  0012               	moviw fsr0++
 17194  1564  1903               	btfsc	3,2
 17195  1565  2D7B               	goto	l6687
 17196                           
 17197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 17198  1566  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 17199  1567  00E4               	movwf	??_vfprintf
 17200  1568  0864               	movf	??_vfprintf,w
 17201  1569  00D8               	movwf	vfpfcnvrt@fmt
 17202  156A  0863               	movf	vfprintf@ap,w
 17203  156B  00E5               	movwf	??_vfprintf+1
 17204  156C  0865               	movf	??_vfprintf+1,w
 17205  156D  00D9               	movwf	vfpfcnvrt@ap
 17206  156E  0866               	movf	vfprintf@fp,w
 17207  156F  318B  235E  3195   	fcall	_vfpfcnvrt
 17208  1572  0140               	movlb	0	; select bank0
 17209  1573  0858               	movf	?_vfpfcnvrt,w
 17210  1574  0142               	movlb	2	; select bank2
 17211  1575  07B0               	addwf	_nout^(0+256),f
 17212  1576  0140               	movlb	0	; select bank0
 17213  1577  0859               	movf	?_vfpfcnvrt+1,w
 17214  1578  0142               	movlb	2	; select bank2
 17215  1579  3DB1               	addwfc	(_nout+1)^(0+256),f
 17216  157A  2D5E               	goto	l6685
 17217  157B                     l6687:	
 17218                           
 17219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 17220  157B  0142               	movlb	2	; select bank2
 17221  157C  0831               	movf	(_nout+1)^(0+256),w
 17222  157D  0140               	movlb	0	; select bank0
 17223  157E  00E2               	movwf	?_vfprintf+1
 17224  157F  0142               	movlb	2	; select bank2
 17225  1580  0830               	movf	_nout^(0+256),w
 17226  1581  0140               	movlb	0	; select bank0
 17227  1582  00E1               	movwf	?_vfprintf
 17228  1583  0008               	return
 17229  1584                     __end_of_vfprintf:	
 17230                           
 17231                           	psect	text44
 17232  0B5E                     __ptext44:	
 17233 ;; *************** function _vfpfcnvrt *****************
 17234 ;; Defined at:
 17235 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17236 ;; Parameters:    Size  Location     Type
 17237 ;;  fp              1    wreg     PTR struct _IO_FILE
 17238 ;;		 -> NULL(0), 
 17239 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 17240 ;;		 -> vfprintf@cfmt(2), 
 17241 ;;  ap              1   57[BANK0 ] PTR PTR void 
 17242 ;;		 -> printf@ap(1), 
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 17245 ;;		 -> NULL(0), 
 17246 ;;  llu             8    0        unsigned long long 
 17247 ;;  ll              8    0        long long 
 17248 ;;  f               4    0        long long 
 17249 ;;  ct              3    0        unsigned char [3]
 17250 ;;  vp              2    0        PTR void 
 17251 ;;  i               2    0        int 
 17252 ;;  done            2    0        int 
 17253 ;;  cp              2    0        PTR unsigned char 
 17254 ;;  c               1   63[BANK0 ] unsigned char 
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  2   56[BANK0 ] int 
 17257 ;; Registers used:
 17258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17259 ;; Tracked objects:
 17260 ;;		On entry : 0/0
 17261 ;;		On exit  : 0/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17266 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17267 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17268 ;;Total ram usage:        9 bytes
 17269 ;; Hardware stack levels used:    1
 17270 ;; Hardware stack levels required when called:   14
 17271 ;; This function calls:
 17272 ;;		_ctoa
 17273 ;;		_fputc
 17274 ;; This function is called by:
 17275 ;;		_vfprintf
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           
 17280                           ;psect for function _vfpfcnvrt
 17281  0B5E                     _vfpfcnvrt:	
 17282                           
 17283                           ;incstack = 0
 17284 ;; hardware stack exceeded
 17285                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17286                           ;vfpfcnvrt@fp stored from wreg
 17287  0B5E  0140               	movlb	0	; select bank0
 17288  0B5F  00E0               	movwf	vfpfcnvrt@fp
 17289                           
 17290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 17291  0B60  0858               	movf	vfpfcnvrt@fmt,w
 17292  0B61  0086               	movwf	6
 17293  0B62  0187               	clrf	7
 17294  0B63  3F40               	moviw [0]fsr1
 17295  0B64  00DA               	movwf	??_vfpfcnvrt
 17296  0B65  3F41               	moviw [1]fsr1
 17297  0B66  00DB               	movwf	??_vfpfcnvrt+1
 17298  0B67  085A               	movf	??_vfpfcnvrt,w
 17299  0B68  0084               	movwf	4
 17300  0B69  085B               	movf	??_vfpfcnvrt+1,w
 17301  0B6A  0085               	movwf	5
 17302  0B6B  0012               	moviw fsr0++
 17303  0B6C  3A25               	xorlw	37
 17304  0B6D  1D03               	btfss	3,2
 17305  0B6E  2BE4               	goto	l6235
 17306                           
 17307                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 17308  0B6F  0858               	movf	vfpfcnvrt@fmt,w
 17309  0B70  0086               	movwf	6
 17310  0B71  0187               	clrf	7
 17311  0B72  3001               	movlw	1
 17312  0B73  0781               	addwf	1,f
 17313  0B74  3141               	addfsr 1,1
 17314  0B75  1803               	skipnc
 17315  0B76  0A81               	incf	1,f
 17316                           
 17317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 17318  0B77  0141               	movlb	1	; select bank1
 17319  0B78  01CA               	clrf	_width^(0+128)
 17320  0B79  01CB               	clrf	(_width+1)^(0+128)
 17321  0B7A  0142               	movlb	2	; select bank2
 17322  0B7B  01B4               	clrf	_flags^(0+256)
 17323  0B7C  01B5               	clrf	(_flags+1)^(0+256)
 17324                           
 17325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 17326  0B7D  30FF               	movlw	255
 17327  0B7E  00B2               	movwf	_prec^(0+256)
 17328  0B7F  30FF               	movlw	255
 17329  0B80  00B3               	movwf	(_prec^(0+256)+1)
 17330                           
 17331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 17332  0B81  0140               	movlb	0	; select bank0
 17333  0B82  0858               	movf	vfpfcnvrt@fmt,w
 17334  0B83  0086               	movwf	6
 17335  0B84  0187               	clrf	7
 17336  0B85  3F40               	moviw [0]fsr1
 17337  0B86  00DA               	movwf	??_vfpfcnvrt
 17338  0B87  3F41               	moviw [1]fsr1
 17339  0B88  00DB               	movwf	??_vfpfcnvrt+1
 17340  0B89  085A               	movf	??_vfpfcnvrt,w
 17341  0B8A  0084               	movwf	4
 17342  0B8B  085B               	movf	??_vfpfcnvrt+1,w
 17343  0B8C  0085               	movwf	5
 17344  0B8D  0012               	moviw fsr0++
 17345  0B8E  3A63               	xorlw	99
 17346  0B8F  1D03               	btfss	3,2
 17347  0B90  2BB2               	goto	l6219
 17348                           
 17349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 17350  0B91  0858               	movf	vfpfcnvrt@fmt,w
 17351  0B92  0086               	movwf	6
 17352  0B93  0187               	clrf	7
 17353  0B94  3001               	movlw	1
 17354  0B95  0781               	addwf	1,f
 17355  0B96  3141               	addfsr 1,1
 17356  0B97  1803               	skipnc
 17357  0B98  0A81               	incf	1,f
 17358                           
 17359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17360  0B99  0859               	movf	vfpfcnvrt@ap,w
 17361  0B9A  0086               	movwf	6
 17362  0B9B  0187               	clrf	7
 17363  0B9C  0801               	movf	1,w
 17364  0B9D  0084               	movwf	4
 17365  0B9E  0185               	clrf	5
 17366  0B9F  3002               	movlw	2
 17367  0BA0  0781               	addwf	1,f
 17368  0BA1  0800               	movf	0,w
 17369  0BA2  00DA               	movwf	??_vfpfcnvrt
 17370  0BA3  085A               	movf	??_vfpfcnvrt,w
 17371  0BA4  00DF               	movwf	vfpfcnvrt@c
 17372                           
 17373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 17374  0BA5  085F               	movf	vfpfcnvrt@c,w
 17375  0BA6  00DA               	movwf	??_vfpfcnvrt
 17376  0BA7  085A               	movf	??_vfpfcnvrt,w
 17377  0BA8  00D2               	movwf	ctoa@c
 17378  0BA9  0860               	movf	vfpfcnvrt@fp,w
 17379  0BAA  3195  2584         	fcall	_ctoa
 17380  0BAC  0140               	movlb	0	; select bank0
 17381  0BAD  0853               	movf	?_ctoa+1,w
 17382  0BAE  00D9               	movwf	?_vfpfcnvrt+1
 17383  0BAF  0852               	movf	?_ctoa,w
 17384  0BB0  00D8               	movwf	?_vfpfcnvrt
 17385  0BB1  0008               	return
 17386  0BB2                     l6219:	
 17387                           
 17388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 17389  0BB2  0858               	movf	vfpfcnvrt@fmt,w
 17390  0BB3  0086               	movwf	6
 17391  0BB4  0187               	clrf	7
 17392  0BB5  3F40               	moviw [0]fsr1
 17393  0BB6  00DA               	movwf	??_vfpfcnvrt
 17394  0BB7  3F41               	moviw [1]fsr1
 17395  0BB8  00DB               	movwf	??_vfpfcnvrt+1
 17396  0BB9  085A               	movf	??_vfpfcnvrt,w
 17397  0BBA  0084               	movwf	4
 17398  0BBB  085B               	movf	??_vfpfcnvrt+1,w
 17399  0BBC  0085               	movwf	5
 17400  0BBD  0012               	moviw fsr0++
 17401  0BBE  3A25               	xorlw	37
 17402  0BBF  1D03               	btfss	3,2
 17403  0BC0  2BD9               	goto	l6229
 17404                           
 17405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 17406  0BC1  0858               	movf	vfpfcnvrt@fmt,w
 17407  0BC2  0086               	movwf	6
 17408  0BC3  0187               	clrf	7
 17409  0BC4  3001               	movlw	1
 17410  0BC5  0781               	addwf	1,f
 17411  0BC6  3141               	addfsr 1,1
 17412  0BC7  1803               	skipnc
 17413  0BC8  0A81               	incf	1,f
 17414                           
 17415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 17416  0BC9  3025               	movlw	37
 17417  0BCA  00B9               	movwf	fputc@c
 17418  0BCB  3000               	movlw	0
 17419  0BCC  00BA               	movwf	fputc@c+1
 17420  0BCD  0860               	movf	vfpfcnvrt@fp,w
 17421  0BCE  00DA               	movwf	??_vfpfcnvrt
 17422  0BCF  085A               	movf	??_vfpfcnvrt,w
 17423  0BD0  00BB               	movwf	fputc@fp
 17424  0BD1  3196  26B6         	fcall	_fputc
 17425  0BD3                     l6225:	
 17426                           
 17427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 17428  0BD3  3001               	movlw	1
 17429  0BD4  0140               	movlb	0	; select bank0
 17430  0BD5  00D8               	movwf	?_vfpfcnvrt
 17431  0BD6  3000               	movlw	0
 17432  0BD7  00D9               	movwf	?_vfpfcnvrt+1
 17433  0BD8  0008               	return
 17434  0BD9                     l6229:	
 17435                           
 17436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 17437  0BD9  0858               	movf	vfpfcnvrt@fmt,w
 17438  0BDA  0086               	movwf	6
 17439  0BDB  0187               	clrf	7
 17440  0BDC  3001               	movlw	1
 17441  0BDD  0781               	addwf	1,f
 17442  0BDE  3141               	addfsr 1,1
 17443  0BDF  1803               	skipnc
 17444  0BE0  0A81               	incf	1,f
 17445                           
 17446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 17447  0BE1  01D8               	clrf	?_vfpfcnvrt
 17448  0BE2  01D9               	clrf	?_vfpfcnvrt+1
 17449  0BE3  0008               	return
 17450  0BE4                     l6235:	
 17451                           
 17452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 17453  0BE4  0858               	movf	vfpfcnvrt@fmt,w
 17454  0BE5  0086               	movwf	6
 17455  0BE6  0187               	clrf	7
 17456  0BE7  3F40               	moviw [0]fsr1
 17457  0BE8  00DA               	movwf	??_vfpfcnvrt
 17458  0BE9  3F41               	moviw [1]fsr1
 17459  0BEA  00DB               	movwf	??_vfpfcnvrt+1
 17460  0BEB  085A               	movf	??_vfpfcnvrt,w
 17461  0BEC  0084               	movwf	4
 17462  0BED  085B               	movf	??_vfpfcnvrt+1,w
 17463  0BEE  0085               	movwf	5
 17464  0BEF  0800               	movf	0,w	;code access
 17465  0BF0  00DC               	movwf	??_vfpfcnvrt+2
 17466  0BF1  01DD               	clrf	??_vfpfcnvrt+3
 17467  0BF2  085C               	movf	??_vfpfcnvrt+2,w
 17468  0BF3  00B9               	movwf	fputc@c
 17469  0BF4  085D               	movf	??_vfpfcnvrt+3,w
 17470  0BF5  00BA               	movwf	fputc@c+1
 17471  0BF6  0860               	movf	vfpfcnvrt@fp,w
 17472  0BF7  00DE               	movwf	??_vfpfcnvrt+4
 17473  0BF8  085E               	movf	??_vfpfcnvrt+4,w
 17474  0BF9  00BB               	movwf	fputc@fp
 17475  0BFA  3196  26B6  318B   	fcall	_fputc
 17476                           
 17477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 17478  0BFD  0140               	movlb	0	; select bank0
 17479  0BFE  0858               	movf	vfpfcnvrt@fmt,w
 17480  0BFF  0086               	movwf	6
 17481  0C00  0187               	clrf	7
 17482  0C01  3001               	movlw	1
 17483  0C02  0781               	addwf	1,f
 17484  0C03  3141               	addfsr 1,1
 17485  0C04  1803               	skipnc
 17486  0C05  0A81               	incf	1,f
 17487  0C06  2BD3               	goto	l6225
 17488  0C07                     __end_of_vfpfcnvrt:	
 17489                           
 17490                           	psect	text45
 17491  1584                     __ptext45:	
 17492 ;; *************** function _ctoa *****************
 17493 ;; Defined at:
 17494 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17495 ;; Parameters:    Size  Location     Type
 17496 ;;  fp              1    wreg     PTR struct _IO_FILE
 17497 ;;		 -> NULL(0), 
 17498 ;;  c               1   50[BANK0 ] unsigned char 
 17499 ;; Auto vars:     Size  Location     Type
 17500 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 17501 ;;		 -> NULL(0), 
 17502 ;;  w               2   53[BANK0 ] int 
 17503 ;;  l               2    0        int 
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  2   50[BANK0 ] int 
 17506 ;; Registers used:
 17507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17508 ;; Tracked objects:
 17509 ;;		On entry : 0/0
 17510 ;;		On exit  : 0/0
 17511 ;;		Unchanged: 0/0
 17512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17515 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17517 ;;Total ram usage:        6 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:   13
 17520 ;; This function calls:
 17521 ;;		_pad
 17522 ;; This function is called by:
 17523 ;;		_vfpfcnvrt
 17524 ;; This function uses a non-reentrant model
 17525 ;;
 17526                           
 17527                           
 17528                           ;psect for function _ctoa
 17529  1584                     _ctoa:	
 17530                           
 17531                           ;incstack = 0
 17532 ;; hardware stack exceeded
 17533                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17534                           ;ctoa@fp stored from wreg
 17535  1584  0140               	movlb	0	; select bank0
 17536  1585  00D7               	movwf	ctoa@fp
 17537                           
 17538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17539  1586  0141               	movlb	1	; select bank1
 17540  1587  084A               	movf	_width^(0+128),w
 17541  1588  044B               	iorwf	(_width+1)^(0+128),w
 17542  1589  1D03               	btfss	3,2
 17543  158A  2D93               	goto	l6177
 17544  158B  084B               	movf	(_width+1)^(0+128),w
 17545  158C  0140               	movlb	0	; select bank0
 17546  158D  00D6               	movwf	ctoa@w+1
 17547  158E  0141               	movlb	1	; select bank1
 17548  158F  084A               	movf	_width^(0+128),w
 17549  1590  0140               	movlb	0	; select bank0
 17550  1591  00D5               	movwf	ctoa@w
 17551  1592  2D9C               	goto	l6179
 17552  1593                     l6177:	
 17553  1593  084A               	movf	_width^(0+128),w
 17554  1594  3EFF               	addlw	255
 17555  1595  0140               	movlb	0	; select bank0
 17556  1596  00D5               	movwf	ctoa@w
 17557  1597  30FF               	movlw	255
 17558  1598  0141               	movlb	1	; select bank1
 17559  1599  3D4B               	addwfc	(_width+1)^(0+128),w
 17560  159A  0140               	movlb	0	; select bank0
 17561  159B  00D6               	movwf	ctoa@w+1
 17562  159C                     l6179:	
 17563                           
 17564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17565  159C  0852               	movf	ctoa@c,w
 17566  159D  00D4               	movwf	??_ctoa
 17567  159E  0854               	movf	??_ctoa,w
 17568  159F  0143               	movlb	3	; select bank3
 17569  15A0  00A0               	movwf	_dbuf^(0+384)
 17570                           
 17571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17572  15A1  01A1               	clrf	(_dbuf^(0+384)+1)
 17573                           
 17574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17575  15A2  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 17576  15A3  0140               	movlb	0	; select bank0
 17577  15A4  00D4               	movwf	??_ctoa
 17578  15A5  0854               	movf	??_ctoa,w
 17579  15A6  00C9               	movwf	pad@buf
 17580  15A7  0856               	movf	ctoa@w+1,w
 17581  15A8  00CB               	movwf	pad@p+1
 17582  15A9  0855               	movf	ctoa@w,w
 17583  15AA  00CA               	movwf	pad@p
 17584  15AB  0857               	movf	ctoa@fp,w
 17585  15AC  3197  27AD         	fcall	_pad
 17586  15AE  0140               	movlb	0	; select bank0
 17587  15AF  084A               	movf	?_pad+1,w
 17588  15B0  00D3               	movwf	?_ctoa+1
 17589  15B1  0849               	movf	?_pad,w
 17590  15B2  00D2               	movwf	?_ctoa
 17591  15B3  0008               	return
 17592  15B4                     __end_of_ctoa:	
 17593                           
 17594                           	psect	text46
 17595  17AD                     __ptext46:	
 17596 ;; *************** function _pad *****************
 17597 ;; Defined at:
 17598 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17599 ;; Parameters:    Size  Location     Type
 17600 ;;  fp              1    wreg     PTR struct _IO_FILE
 17601 ;;		 -> NULL(0), 
 17602 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 17603 ;;		 -> dbuf(32), 
 17604 ;;  p               2   42[BANK0 ] int 
 17605 ;; Auto vars:     Size  Location     Type
 17606 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 17607 ;;		 -> NULL(0), 
 17608 ;;  w               2   47[BANK0 ] int 
 17609 ;;  i               2   45[BANK0 ] int 
 17610 ;; Return value:  Size  Location     Type
 17611 ;;                  2   41[BANK0 ] int 
 17612 ;; Registers used:
 17613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17614 ;; Tracked objects:
 17615 ;;		On entry : 0/0
 17616 ;;		On exit  : 0/0
 17617 ;;		Unchanged: 0/0
 17618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17619 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17622 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17623 ;;Total ram usage:        9 bytes
 17624 ;; Hardware stack levels used:    1
 17625 ;; Hardware stack levels required when called:   12
 17626 ;; This function calls:
 17627 ;;		_fputc
 17628 ;;		_fputs
 17629 ;;		_strlen
 17630 ;; This function is called by:
 17631 ;;		_ctoa
 17632 ;; This function uses a non-reentrant model
 17633 ;;
 17634                           
 17635                           
 17636                           ;psect for function _pad
 17637  17AD                     _pad:	
 17638                           
 17639                           ;incstack = 0
 17640 ;; hardware stack exceeded
 17641                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17642                           ;pad@fp stored from wreg
 17643  17AD  0140               	movlb	0	; select bank0
 17644  17AE  00D1               	movwf	pad@fp
 17645                           
 17646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17647  17AF  0142               	movlb	2	; select bank2
 17648  17B0  1C34               	btfss	_flags^(0+256),0
 17649  17B1  2FBB               	goto	l6155
 17650                           
 17651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17652  17B2  0140               	movlb	0	; select bank0
 17653  17B3  0851               	movf	pad@fp,w
 17654  17B4  00CC               	movwf	??_pad
 17655  17B5  084C               	movf	??_pad,w
 17656  17B6  00C1               	movwf	fputs@fp
 17657  17B7  0849               	movf	pad@buf,w
 17658  17B8  3194  248B  3197   	fcall	_fputs
 17659  17BB                     l6155:	
 17660                           
 17661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17662  17BB  0140               	movlb	0	; select bank0
 17663  17BC  1BCB               	btfsc	pad@p+1,7
 17664  17BD  2FC3               	goto	l6159
 17665  17BE  084B               	movf	pad@p+1,w
 17666  17BF  00D0               	movwf	pad@w+1
 17667  17C0  084A               	movf	pad@p,w
 17668  17C1  00CF               	movwf	pad@w
 17669  17C2  2FC5               	goto	l1516
 17670  17C3                     l6159:	
 17671  17C3  01CF               	clrf	pad@w
 17672  17C4  01D0               	clrf	pad@w+1
 17673  17C5                     l1516:	
 17674                           
 17675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17676  17C5  01CD               	clrf	pad@i
 17677  17C6  01CE               	clrf	pad@i+1
 17678  17C7                     l6165:	
 17679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17680                           
 17681                           
 17682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17683  17C7  084E               	movf	pad@i+1,w
 17684  17C8  3A80               	xorlw	128
 17685  17C9  00CC               	movwf	??_pad
 17686  17CA  0850               	movf	pad@w+1,w
 17687  17CB  3A80               	xorlw	128
 17688  17CC  024C               	subwf	??_pad,w
 17689  17CD  1D03               	skipz
 17690  17CE  2FD1               	goto	u5635
 17691  17CF  084F               	movf	pad@w,w
 17692  17D0  024D               	subwf	pad@i,w
 17693  17D1                     u5635:	
 17694  17D1  1803               	btfsc	3,0
 17695  17D2  2FE5               	goto	l1519
 17696                           
 17697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17698  17D3  3020               	movlw	32
 17699  17D4  0140               	movlb	0	; select bank0
 17700  17D5  00B9               	movwf	fputc@c
 17701  17D6  3000               	movlw	0
 17702  17D7  00BA               	movwf	fputc@c+1
 17703  17D8  0851               	movf	pad@fp,w
 17704  17D9  00CC               	movwf	??_pad
 17705  17DA  084C               	movf	??_pad,w
 17706  17DB  00BB               	movwf	fputc@fp
 17707  17DC  3196  26B6  3197   	fcall	_fputc
 17708                           
 17709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17710  17DF  3001               	movlw	1
 17711  17E0  0140               	movlb	0	; select bank0
 17712  17E1  07CD               	addwf	pad@i,f
 17713  17E2  3000               	movlw	0
 17714  17E3  3DCE               	addwfc	pad@i+1,f
 17715  17E4  2FC7               	goto	l6165
 17716  17E5                     l1519:	
 17717                           
 17718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17719  17E5  0142               	movlb	2	; select bank2
 17720  17E6  1834               	btfsc	_flags^(0+256),0
 17721  17E7  2FF1               	goto	l6169
 17722                           
 17723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17724  17E8  0140               	movlb	0	; select bank0
 17725  17E9  0851               	movf	pad@fp,w
 17726  17EA  00CC               	movwf	??_pad
 17727  17EB  084C               	movf	??_pad,w
 17728  17EC  00C1               	movwf	fputs@fp
 17729  17ED  0849               	movf	pad@buf,w
 17730  17EE  3194  248B  3197   	fcall	_fputs
 17731  17F1                     l6169:	
 17732                           
 17733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17734  17F1  0140               	movlb	0	; select bank0
 17735  17F2  0849               	movf	pad@buf,w
 17736  17F3  00A0               	movwf	strlen@s
 17737  17F4  3001               	movlw	1
 17738  17F5  00A1               	movwf	strlen@s+1
 17739  17F6  3193  2304         	fcall	_strlen
 17740  17F8  0140               	movlb	0	; select bank0
 17741  17F9  084F               	movf	pad@w,w
 17742  17FA  0720               	addwf	?_strlen,w
 17743  17FB  00C9               	movwf	?_pad
 17744  17FC  0850               	movf	pad@w+1,w
 17745  17FD  3D21               	addwfc	?_strlen+1,w
 17746  17FE  00CA               	movwf	?_pad+1
 17747  17FF  0008               	return
 17748  1800                     __end_of_pad:	
 17749                           
 17750                           	psect	text47
 17751  1304                     __ptext47:	
 17752 ;; *************** function _strlen *****************
 17753 ;; Defined at:
 17754 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 17755 ;; Parameters:    Size  Location     Type
 17756 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 17757 ;;		 -> dbuf(32), STR_10(9), 
 17758 ;; Auto vars:     Size  Location     Type
 17759 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 17760 ;;		 -> dbuf(32), STR_10(9), 
 17761 ;; Return value:  Size  Location     Type
 17762 ;;                  2    0[BANK0 ] unsigned int 
 17763 ;; Registers used:
 17764 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17765 ;; Tracked objects:
 17766 ;;		On entry : 0/0
 17767 ;;		On exit  : 0/0
 17768 ;;		Unchanged: 0/0
 17769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17773 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17774 ;;Total ram usage:        5 bytes
 17775 ;; Hardware stack levels used:    1
 17776 ;; Hardware stack levels required when called:    4
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_pad
 17781 ;;		_TM1650_scrollPrint
 17782 ;; This function uses a non-reentrant model
 17783 ;;
 17784                           
 17785                           
 17786                           ;psect for function _strlen
 17787  1304                     _strlen:	
 17788                           
 17789                           ;incstack = 0
 17790                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 17791  1304  0140               	movlb	0	; select bank0
 17792  1305  0821               	movf	strlen@s+1,w
 17793  1306  00A4               	movwf	strlen@a+1
 17794  1307  0820               	movf	strlen@s,w
 17795  1308  00A3               	movwf	strlen@a
 17796  1309                     l4199:	
 17797  1309  0820               	movf	strlen@s,w
 17798  130A  0084               	movwf	4
 17799  130B  0821               	movf	strlen@s+1,w
 17800  130C  0085               	movwf	5
 17801  130D  0012               	moviw fsr0++
 17802  130E  1903               	btfsc	3,2
 17803  130F  2B15               	goto	l4201
 17804  1310  3001               	movlw	1
 17805  1311  07A0               	addwf	strlen@s,f
 17806  1312  3000               	movlw	0
 17807  1313  3DA1               	addwfc	strlen@s+1,f
 17808  1314  2B09               	goto	l4199
 17809  1315                     l4201:	
 17810  1315  0823               	movf	strlen@a,w
 17811  1316  0220               	subwf	strlen@s,w
 17812  1317  00A0               	movwf	?_strlen
 17813  1318  0824               	movf	strlen@a+1,w
 17814  1319  3B21               	subwfb	strlen@s+1,w
 17815  131A  00A1               	movwf	?_strlen+1
 17816  131B  0008               	return
 17817  131C                     __end_of_strlen:	
 17818                           
 17819                           	psect	text48
 17820  148B                     __ptext48:	
 17821 ;; *************** function _fputs *****************
 17822 ;; Defined at:
 17823 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 17824 ;; Parameters:    Size  Location     Type
 17825 ;;  s               1    wreg     PTR const unsigned char 
 17826 ;;		 -> dbuf(32), 
 17827 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 17828 ;;		 -> NULL(0), 
 17829 ;; Auto vars:     Size  Location     Type
 17830 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 17831 ;;		 -> dbuf(32), 
 17832 ;;  i               2   38[BANK0 ] int 
 17833 ;;  c               1   37[BANK0 ] unsigned char 
 17834 ;; Return value:  Size  Location     Type
 17835 ;;                  2   33[BANK0 ] int 
 17836 ;; Registers used:
 17837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17838 ;; Tracked objects:
 17839 ;;		On entry : 0/0
 17840 ;;		On exit  : 0/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17843 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17844 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17847 ;;Total ram usage:        8 bytes
 17848 ;; Hardware stack levels used:    1
 17849 ;; Hardware stack levels required when called:   11
 17850 ;; This function calls:
 17851 ;;		_fputc
 17852 ;; This function is called by:
 17853 ;;		_pad
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           
 17858                           ;psect for function _fputs
 17859  148B                     _fputs:	
 17860                           
 17861                           ;incstack = 0
 17862 ;; hardware stack exceeded
 17863                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17864                           ;fputs@s stored from wreg
 17865  148B  0140               	movlb	0	; select bank0
 17866  148C  00C8               	movwf	fputs@s
 17867  148D  01C6               	clrf	fputs@i
 17868  148E  01C7               	clrf	fputs@i+1
 17869  148F                     l6149:	
 17870  148F  0846               	movf	fputs@i,w
 17871  1490  0748               	addwf	fputs@s,w
 17872  1491  00C2               	movwf	??_fputs
 17873  1492  0842               	movf	??_fputs,w
 17874  1493  0086               	movwf	6
 17875  1494  3001               	movlw	1	; select bank2/3
 17876  1495  0087               	movwf	7
 17877  1496  0801               	movf	1,w
 17878  1497  00C3               	movwf	??_fputs+1
 17879  1498  0843               	movf	??_fputs+1,w
 17880  1499  00C5               	movwf	fputs@c
 17881  149A  0845               	movf	fputs@c,w
 17882  149B  1903               	btfsc	3,2
 17883  149C  0008               	return
 17884  149D  0845               	movf	fputs@c,w
 17885  149E  00C2               	movwf	??_fputs
 17886  149F  01C3               	clrf	??_fputs+1
 17887  14A0  0842               	movf	??_fputs,w
 17888  14A1  00B9               	movwf	fputc@c
 17889  14A2  0843               	movf	??_fputs+1,w
 17890  14A3  00BA               	movwf	fputc@c+1
 17891  14A4  0841               	movf	fputs@fp,w
 17892  14A5  00C4               	movwf	??_fputs+2
 17893  14A6  0844               	movf	??_fputs+2,w
 17894  14A7  00BB               	movwf	fputc@fp
 17895  14A8  3196  26B6  3194   	fcall	_fputc
 17896  14AB  3001               	movlw	1
 17897  14AC  0140               	movlb	0	; select bank0
 17898  14AD  07C6               	addwf	fputs@i,f
 17899  14AE  3000               	movlw	0
 17900  14AF  3DC7               	addwfc	fputs@i+1,f
 17901  14B0  2C8F               	goto	l6149
 17902  14B1                     __end_of_fputs:	
 17903                           
 17904                           	psect	text49
 17905  16B6                     __ptext49:	
 17906 ;; *************** function _fputc *****************
 17907 ;; Defined at:
 17908 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;  c               2   25[BANK0 ] int 
 17911 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 17912 ;;		 -> NULL(0), 
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;		None
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  2   25[BANK0 ] int 
 17917 ;; Registers used:
 17918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17924 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17926 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17927 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17928 ;;Total ram usage:        8 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:   10
 17931 ;; This function calls:
 17932 ;;		_putch
 17933 ;; This function is called by:
 17934 ;;		_pad
 17935 ;;		_vfpfcnvrt
 17936 ;;		_fputs
 17937 ;; This function uses a non-reentrant model
 17938 ;;
 17939                           
 17940                           
 17941                           ;psect for function _fputc
 17942  16B6                     _fputc:	
 17943                           
 17944                           ;incstack = 0
 17945                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17946  16B6  0140               	movlb	0	; select bank0
 17947  16B7  083B               	movf	fputc@fp,w
 17948  16B8  1D03               	btfss	3,2
 17949  16B9  083B               	movf	fputc@fp,w
 17950  16BA  1D03               	btfss	3,2
 17951  16BB  2EC0               	goto	l6135
 17952  16BC  0839               	movf	fputc@c,w
 17953  16BD  3194  2443         	fcall	_putch
 17954  16BF  0008               	return
 17955  16C0                     l6135:	
 17956  16C0  083B               	movf	fputc@fp,w
 17957  16C1  3E03               	addlw	3
 17958  16C2  0086               	movwf	6
 17959  16C3  0187               	clrf	7
 17960  16C4  0016               	moviw fsr1++
 17961  16C5  0401               	iorwf	1,w
 17962  16C6  1903               	btfsc	3,2
 17963  16C7  2EE3               	goto	l6139
 17964  16C8  083B               	movf	fputc@fp,w
 17965  16C9  3E03               	addlw	3
 17966  16CA  0086               	movwf	6
 17967  16CB  0187               	clrf	7
 17968  16CC  3F40               	moviw [0]fsr1
 17969  16CD  00BC               	movwf	??_fputc
 17970  16CE  3F41               	moviw [1]fsr1
 17971  16CF  00BD               	movwf	??_fputc+1
 17972  16D0  0A3B               	incf	fputc@fp,w
 17973  16D1  0086               	movwf	6
 17974  16D2  0187               	clrf	7
 17975  16D3  3F40               	moviw [0]fsr1
 17976  16D4  00BE               	movwf	??_fputc+2
 17977  16D5  3F41               	moviw [1]fsr1
 17978  16D6  00BF               	movwf	??_fputc+3
 17979  16D7  083F               	movf	??_fputc+3,w
 17980  16D8  3A80               	xorlw	128
 17981  16D9  00C0               	movwf	??_fputc+4
 17982  16DA  083D               	movf	??_fputc+1,w
 17983  16DB  3A80               	xorlw	128
 17984  16DC  0240               	subwf	??_fputc+4,w
 17985  16DD  1D03               	skipz
 17986  16DE  2EE1               	goto	u5595
 17987  16DF  083C               	movf	??_fputc,w
 17988  16E0  023E               	subwf	??_fputc+2,w
 17989  16E1                     u5595:	
 17990  16E1  1803               	skipnc
 17991  16E2  0008               	return
 17992  16E3                     l6139:	
 17993  16E3  0140               	movlb	0	; select bank0
 17994  16E4  0A3B               	incf	fputc@fp,w
 17995  16E5  0086               	movwf	6
 17996  16E6  0187               	clrf	7
 17997  16E7  3001               	movlw	1
 17998  16E8  0781               	addwf	1,f
 17999  16E9  3141               	addfsr 1,1
 18000  16EA  1803               	skipnc
 18001  16EB  0A81               	incf	1,f
 18002  16EC  0008               	return
 18003  16ED                     __end_of_fputc:	
 18004                           
 18005                           	psect	text50
 18006  1443                     __ptext50:	
 18007 ;; *************** function _putch *****************
 18008 ;; Defined at:
 18009 ;;		line 120 in file "tm1650.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;  n               1    wreg     unsigned char 
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;  n               1   24[BANK0 ] unsigned char 
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  1    wreg      void 
 18016 ;; Registers used:
 18017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18018 ;; Tracked objects:
 18019 ;;		On entry : 0/0
 18020 ;;		On exit  : 0/0
 18021 ;;		Unchanged: 0/0
 18022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18027 ;;Total ram usage:        2 bytes
 18028 ;; Hardware stack levels used:    1
 18029 ;; Hardware stack levels required when called:    9
 18030 ;; This function calls:
 18031 ;;		_TM1650_setDigit
 18032 ;; This function is called by:
 18033 ;;		_fputc
 18034 ;; This function uses a non-reentrant model
 18035 ;;
 18036                           
 18037                           
 18038                           ;psect for function _putch
 18039  1443                     _putch:	
 18040                           
 18041                           ;incstack = 0
 18042                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18043                           ;putch@n stored from wreg
 18044  1443  0140               	movlb	0	; select bank0
 18045  1444  00B8               	movwf	putch@n
 18046                           
 18047                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 18048  1445  3004               	movlw	4
 18049  1446  0141               	movlb	1	; select bank1
 18050  1447  0252               	subwf	_position^(0+128),w
 18051  1448  1803               	skipnc
 18052  1449  2C51               	goto	l6121
 18053  144A  300D               	movlw	13
 18054  144B  0140               	movlb	0	; select bank0
 18055  144C  0638               	xorwf	putch@n,w
 18056  144D  1D03               	btfss	3,2
 18057  144E  0838               	movf	putch@n,w
 18058  144F  1D03               	btfss	3,2
 18059  1450  2C53               	goto	l6123
 18060  1451                     l6121:	
 18061                           
 18062                           ;tm1650.c: 123:         position = 0;
 18063  1451  0141               	movlb	1	; select bank1
 18064  1452  01D2               	clrf	_position^(0+128)
 18065  1453                     l6123:	
 18066                           
 18067                           ;tm1650.c: 125:     if(n != '\r'){
 18068  1453  300D               	movlw	13
 18069  1454  0140               	movlb	0	; select bank0
 18070  1455  0638               	xorwf	putch@n,w
 18071  1456  1903               	btfsc	3,2
 18072  1457  0008               	return
 18073                           
 18074                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 18075  1458  0838               	movf	putch@n,w
 18076  1459  00B7               	movwf	??_putch
 18077  145A  0837               	movf	??_putch,w
 18078  145B  00B4               	movwf	TM1650_setDigit@data
 18079  145C  0141               	movlb	1	; select bank1
 18080  145D  0852               	movf	_position^(0+128),w
 18081  145E  3192  2247         	fcall	_TM1650_setDigit
 18082                           
 18083                           ;tm1650.c: 127:         position++;
 18084  1460  3001               	movlw	1
 18085  1461  0140               	movlb	0	; select bank0
 18086  1462  00B7               	movwf	??_putch
 18087  1463  0837               	movf	??_putch,w
 18088  1464  0141               	movlb	1	; select bank1
 18089  1465  07D2               	addwf	_position^(0+128),f
 18090  1466  0008               	return
 18091  1467                     __end_of_putch:	
 18092                           
 18093                           	psect	text51
 18094  1247                     __ptext51:	
 18095 ;; *************** function _TM1650_setDigit *****************
 18096 ;; Defined at:
 18097 ;;		line 95 in file "tm1650.c"
 18098 ;; Parameters:    Size  Location     Type
 18099 ;;  digit           1    wreg     unsigned char 
 18100 ;;  data            1   20[BANK0 ] unsigned char 
 18101 ;; Auto vars:     Size  Location     Type
 18102 ;;  digit           1   22[BANK0 ] unsigned char 
 18103 ;; Return value:  Size  Location     Type
 18104 ;;                  1    wreg      void 
 18105 ;; Registers used:
 18106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18107 ;; Tracked objects:
 18108 ;;		On entry : 0/0
 18109 ;;		On exit  : 0/0
 18110 ;;		Unchanged: 0/0
 18111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18112 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18113 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18115 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18116 ;;Total ram usage:        3 bytes
 18117 ;; Hardware stack levels used:    1
 18118 ;; Hardware stack levels required when called:    8
 18119 ;; This function calls:
 18120 ;;		_writeData
 18121 ;; This function is called by:
 18122 ;;		_putch
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           
 18127                           ;psect for function _TM1650_setDigit
 18128  1247                     _TM1650_setDigit:	
 18129                           
 18130                           ;incstack = 0
 18131                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18132                           ;TM1650_setDigit@digit stored from wreg
 18133  1247  0140               	movlb	0	; select bank0
 18134  1248  00B6               	movwf	TM1650_setDigit@digit
 18135                           
 18136                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 18137  1249  0834               	movf	TM1650_setDigit@data,w
 18138  124A  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 18139  124B  0084               	movwf	4
 18140  124C  308F               	movlw	high ((_charTable+65504)| (0+32768))
 18141  124D  1803               	skipnc
 18142  124E  3E01               	addlw	1
 18143  124F  0085               	movwf	5
 18144  1250  0800               	movf	0,w	;code access
 18145  1251  00B5               	movwf	??_TM1650_setDigit
 18146  1252  0835               	movf	??_TM1650_setDigit,w
 18147  1253  00AE               	movwf	writeData@data
 18148  1254  0836               	movf	TM1650_setDigit@digit,w
 18149  1255  3E34               	addlw	52
 18150  1256  3193  236B         	fcall	_writeData
 18151  1258  0008               	return
 18152  1259                     __end_of_TM1650_setDigit:	
 18153                           
 18154                           	psect	text52
 18155  12A8                     __ptext52:	
 18156 ;; *************** function _TM1650_enable *****************
 18157 ;; Defined at:
 18158 ;;		line 41 in file "tm1650.c"
 18159 ;; Parameters:    Size  Location     Type
 18160 ;;  enable          1    wreg     _Bool 
 18161 ;; Auto vars:     Size  Location     Type
 18162 ;;  enable          1   20[BANK0 ] _Bool 
 18163 ;; Return value:  Size  Location     Type
 18164 ;;                  1    wreg      void 
 18165 ;; Registers used:
 18166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18167 ;; Tracked objects:
 18168 ;;		On entry : 0/0
 18169 ;;		On exit  : 0/0
 18170 ;;		Unchanged: 0/0
 18171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18176 ;;Total ram usage:        1 bytes
 18177 ;; Hardware stack levels used:    1
 18178 ;; Hardware stack levels required when called:    8
 18179 ;; This function calls:
 18180 ;;		_writeData
 18181 ;; This function is called by:
 18182 ;;		_CONTROLLER_task
 18183 ;;		_TM1650_init
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           
 18188                           ;psect for function _TM1650_enable
 18189  12A8                     _TM1650_enable:	
 18190                           
 18191                           ;incstack = 0
 18192                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18193                           ;TM1650_enable@enable stored from wreg
 18194  12A8  0140               	movlb	0	; select bank0
 18195  12A9  00B4               	movwf	TM1650_enable@enable
 18196                           
 18197                           ;tm1650.c: 42:     if(enable){
 18198  12AA  0834               	movf	TM1650_enable@enable,w
 18199  12AB  1903               	btfsc	3,2
 18200  12AC  2AB6               	goto	l7091
 18201                           
 18202                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 18203  12AD  01AE               	clrf	writeData@data
 18204  12AE  0AAE               	incf	writeData@data,f
 18205  12AF  3024               	movlw	36
 18206  12B0  3193  236B         	fcall	_writeData
 18207                           
 18208                           ;tm1650.c: 44:         tm1650_status = 1;
 18209  12B2  0141               	movlb	1	; select bank1
 18210  12B3  01D3               	clrf	_tm1650_status^(0+128)
 18211  12B4  0AD3               	incf	_tm1650_status^(0+128),f
 18212                           
 18213                           ;tm1650.c: 45:     } else {
 18214  12B5  0008               	return
 18215  12B6                     l7091:	
 18216                           
 18217                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 18218  12B6  01AE               	clrf	writeData@data
 18219  12B7  3024               	movlw	36
 18220  12B8  3193  236B         	fcall	_writeData
 18221                           
 18222                           ;tm1650.c: 47:         tm1650_status = 0;
 18223  12BA  0141               	movlb	1	; select bank1
 18224  12BB  01D3               	clrf	_tm1650_status^(0+128)
 18225  12BC  0008               	return
 18226  12BD                     __end_of_TM1650_enable:	
 18227                           
 18228                           	psect	text53
 18229  0ABC                     __ptext53:	
 18230 ;; *************** function _CONTROL_DMX *****************
 18231 ;; Defined at:
 18232 ;;		line 132 in file "controller.c"
 18233 ;; Parameters:    Size  Location     Type
 18234 ;;		None
 18235 ;; Auto vars:     Size  Location     Type
 18236 ;;		None
 18237 ;; Return value:  Size  Location     Type
 18238 ;;                  1    wreg      _Bool 
 18239 ;; Registers used:
 18240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18241 ;; Tracked objects:
 18242 ;;		On entry : 0/0
 18243 ;;		On exit  : 0/0
 18244 ;;		Unchanged: 0/0
 18245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18249 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18250 ;;Total ram usage:        2 bytes
 18251 ;; Hardware stack levels used:    1
 18252 ;; Hardware stack levels required when called:   10
 18253 ;; This function calls:
 18254 ;;		_BUTTONS_isHeld
 18255 ;;		_CLOCK_getTime
 18256 ;;		_address_dec
 18257 ;;		_address_inc
 18258 ;; This function is called by:
 18259 ;;		_CONTROLLER_task
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263                           
 18264                           ;psect for function _CONTROL_DMX
 18265  0ABC                     _CONTROL_DMX:	
 18266                           
 18267                           ;controller.c: 134:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 18268                           
 18269                           ;incstack = 0
 18270                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18271  0ABC  0141               	movlb	1	; select bank1
 18272  0ABD  085C               	movf	_up^(0+128),w
 18273  0ABE  3192  2216  318A   	fcall	_BUTTONS_isHeld
 18274  0AC1  3A00               	xorlw	0
 18275  0AC2  1903               	skipnz
 18276  0AC3  2B1A               	goto	l7015
 18277  0AC4  3191  214E  318A   	fcall	_CLOCK_getTime
 18278  0AC7  0141               	movlb	1	; select bank1
 18279  0AC8  084E               	movf	_lastIncTime^(0+128),w
 18280  0AC9  0140               	movlb	0	; select bank0
 18281  0ACA  0220               	subwf	?_CLOCK_getTime,w
 18282  0ACB  00B7               	movwf	??_CONTROL_DMX
 18283  0ACC  0141               	movlb	1	; select bank1
 18284  0ACD  084F               	movf	(_lastIncTime+1)^(0+128),w
 18285  0ACE  0140               	movlb	0	; select bank0
 18286  0ACF  3B21               	subwfb	?_CLOCK_getTime+1,w
 18287  0AD0  00B8               	movwf	??_CONTROL_DMX+1
 18288  0AD1  0838               	movf	??_CONTROL_DMX+1,w
 18289  0AD2  0141               	movlb	1	; select bank1
 18290  0AD3  0268               	subwf	(_incInterval+1)^(0+128),w
 18291  0AD4  1D03               	skipz
 18292  0AD5  2ADA               	goto	u6825
 18293  0AD6  0140               	movlb	0	; select bank0
 18294  0AD7  0837               	movf	??_CONTROL_DMX,w
 18295  0AD8  0141               	movlb	1	; select bank1
 18296  0AD9  0267               	subwf	_incInterval^(0+128),w
 18297  0ADA                     u6825:	
 18298  0ADA  1803               	skipnc
 18299  0ADB  2B1A               	goto	l7015
 18300                           
 18301                           ;controller.c: 135:         address_inc();
 18302  0ADC  3193  231C  318A   	fcall	_address_inc
 18303  0ADF  2AFB               	goto	L18
 18304  0AE0                     l7017:	
 18305                           ;controller.c: 137:         if(incInterval > 20){
 18306                           
 18307                           ;controller.c: 136:         lastIncTime = CLOCK_getTime();
 18308                           
 18309  0AE0  3191  214E  318A   	fcall	_CLOCK_getTime
 18310  0AE3  0141               	movlb	1	; select bank1
 18311  0AE4  084E               	movf	_lastIncTime^(0+128),w
 18312  0AE5  0140               	movlb	0	; select bank0
 18313  0AE6  0220               	subwf	?_CLOCK_getTime,w
 18314  0AE7  00B7               	movwf	??_CONTROL_DMX
 18315  0AE8  0141               	movlb	1	; select bank1
 18316  0AE9  084F               	movf	(_lastIncTime+1)^(0+128),w
 18317  0AEA  0140               	movlb	0	; select bank0
 18318  0AEB  3B21               	subwfb	?_CLOCK_getTime+1,w
 18319  0AEC  00B8               	movwf	??_CONTROL_DMX+1
 18320  0AED  0838               	movf	??_CONTROL_DMX+1,w
 18321  0AEE  0141               	movlb	1	; select bank1
 18322  0AEF  0268               	subwf	(_incInterval+1)^(0+128),w
 18323  0AF0  1D03               	skipz
 18324  0AF1  2AF6               	goto	u6855
 18325  0AF2  0140               	movlb	0	; select bank0
 18326  0AF3  0837               	movf	??_CONTROL_DMX,w
 18327  0AF4  0141               	movlb	1	; select bank1
 18328  0AF5  0267               	subwf	_incInterval^(0+128),w
 18329  0AF6                     u6855:	
 18330  0AF6  1803               	skipnc
 18331  0AF7  2B22               	goto	l7031
 18332                           
 18333                           ;controller.c: 142:         address_dec();
 18334  0AF8  3192  22EC  318A   	fcall	_address_dec
 18335  0AFB                     L18:	
 18336                           
 18337                           ;controller.c: 143:         lastIncTime = CLOCK_getTime();
 18338  0AFB  3191  214E  318A   	fcall	_CLOCK_getTime
 18339  0AFE  0140               	movlb	0	; select bank0
 18340  0AFF  0821               	movf	?_CLOCK_getTime+1,w
 18341  0B00  0141               	movlb	1	; select bank1
 18342  0B01  00CF               	movwf	(_lastIncTime+1)^(0+128)
 18343  0B02  0140               	movlb	0	; select bank0
 18344  0B03  0820               	movf	?_CLOCK_getTime,w
 18345  0B04  0141               	movlb	1	; select bank1
 18346  0B05  00CE               	movwf	_lastIncTime^(0+128)
 18347                           
 18348                           ;controller.c: 144:         if(incInterval > 20){
 18349  0B06  0868               	movf	(_incInterval+1)^(0+128),w
 18350  0B07  3A80               	xorlw	128
 18351  0B08  0140               	movlb	0	; select bank0
 18352  0B09  00B7               	movwf	??_CONTROL_DMX
 18353  0B0A  3080               	movlw	128
 18354  0B0B  0237               	subwf	??_CONTROL_DMX,w
 18355  0B0C  1D03               	skipz
 18356  0B0D  2B11               	goto	u6865
 18357  0B0E  3015               	movlw	21
 18358  0B0F  0141               	movlb	1	; select bank1
 18359  0B10  0267               	subwf	_incInterval^(0+128),w
 18360  0B11                     u6865:	
 18361  0B11  1C03               	skipc
 18362  0B12  2B18               	goto	l1055
 18363                           
 18364                           ;controller.c: 138:             incInterval-=1;
 18365  0B13  30FF               	movlw	255
 18366  0B14  0141               	movlb	1	; select bank1
 18367  0B15  07E7               	addwf	_incInterval^(0+128),f
 18368  0B16  30FF               	movlw	255
 18369  0B17  3DE8               	addwfc	(_incInterval+1)^(0+128),f
 18370  0B18                     l1055:	
 18371                           ;controller.c: 139:         }
 18372                           
 18373                           
 18374                           ;controller.c: 140:         return 1;
 18375  0B18  3001               	movlw	1
 18376  0B19  0008               	return
 18377  0B1A                     l7015:	
 18378  0B1A  0141               	movlb	1	; select bank1
 18379  0B1B  085B               	movf	_down^(0+128),w
 18380  0B1C  3192  2216  318A   	fcall	_BUTTONS_isHeld
 18381  0B1F  3A00               	xorlw	0
 18382  0B20  1D03               	btfss	3,2
 18383  0B21  2AE0               	goto	l7017
 18384  0B22                     l7031:	
 18385  0B22  0141               	movlb	1	; select bank1
 18386  0B23  085A               	movf	_enter^(0+128),w
 18387  0B24  3192  2216  318A   	fcall	_BUTTONS_isHeld
 18388  0B27  3A00               	xorlw	0
 18389  0B28  1903               	skipnz
 18390  0B29  2B31               	goto	l7039
 18391                           
 18392                           ;controller.c: 149:         address = 1;
 18393  0B2A  3001               	movlw	1
 18394  0B2B  0141               	movlb	1	; select bank1
 18395  0B2C  00E9               	movwf	_address^(0+128)
 18396  0B2D  3000               	movlw	0
 18397  0B2E  00EA               	movwf	(_address^(0+128)+1)
 18398                           
 18399                           ;controller.c: 150:         return 1;
 18400  0B2F  3001               	movlw	1
 18401  0B30  0008               	return
 18402  0B31                     l7039:	
 18403  0B31  0141               	movlb	1	; select bank1
 18404  0B32  0857               	movf	_upState^(0+128),w
 18405  0B33  1903               	btfsc	3,2
 18406  0B34  2B39               	goto	l7049
 18407                           
 18408                           ;controller.c: 152:         address_inc();
 18409  0B35  3193  231C  318A   	fcall	_address_inc
 18410  0B38  2B18               	goto	l1055
 18411  0B39                     l7049:	
 18412  0B39  0856               	movf	_downState^(0+128),w
 18413  0B3A  1903               	btfsc	3,2
 18414  0B3B  2B40               	goto	l7059
 18415                           
 18416                           ;controller.c: 156:         address_dec();
 18417  0B3C  3192  22EC  318A   	fcall	_address_dec
 18418  0B3F  2B18               	goto	l1055
 18419  0B40                     l7059:	
 18420  0B40  0854               	movf	_enterState^(0+128),w
 18421  0B41  1D03               	btfss	3,2
 18422  0B42  2B18               	goto	l1055
 18423  0B43  0857               	movf	_upState^(0+128),w
 18424  0B44  1D03               	btfss	3,2
 18425  0B45  0856               	movf	_downState^(0+128),w
 18426  0B46  1D03               	btfss	3,2
 18427  0B47  2B5C               	goto	l7077
 18428  0B48  085B               	movf	_down^(0+128),w
 18429  0B49  3192  2216  318A   	fcall	_BUTTONS_isHeld
 18430  0B4C  3A00               	xorlw	0
 18431  0B4D  1D03               	skipz
 18432  0B4E  2B5C               	goto	l7077
 18433  0B4F  0141               	movlb	1	; select bank1
 18434  0B50  085C               	movf	_up^(0+128),w
 18435  0B51  3192  2216  318A   	fcall	_BUTTONS_isHeld
 18436  0B54  3A00               	xorlw	0
 18437  0B55  1D03               	skipz
 18438  0B56  2B5C               	goto	l7077
 18439                           
 18440                           ;controller.c: 161:         incInterval = 100;
 18441  0B57  3064               	movlw	100
 18442  0B58  0141               	movlb	1	; select bank1
 18443  0B59  00E7               	movwf	_incInterval^(0+128)
 18444  0B5A  3000               	movlw	0
 18445  0B5B  00E8               	movwf	(_incInterval^(0+128)+1)
 18446  0B5C                     l7077:	
 18447                           ;controller.c: 162:     } else {
 18448                           
 18449                           
 18450                           ;controller.c: 163:         return 0;
 18451  0B5C  3000               	movlw	0
 18452  0B5D  0008               	return
 18453  0B5E                     __end_of_CONTROL_DMX:	
 18454                           
 18455                           	psect	text54
 18456  131C                     __ptext54:	
 18457 ;; *************** function _address_inc *****************
 18458 ;; Defined at:
 18459 ;;		line 29 in file "dmx.c"
 18460 ;; Parameters:    Size  Location     Type
 18461 ;;		None
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;		None
 18464 ;; Return value:  Size  Location     Type
 18465 ;;                  1    wreg      void 
 18466 ;; Registers used:
 18467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18477 ;;Total ram usage:        0 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; Hardware stack levels required when called:    9
 18480 ;; This function calls:
 18481 ;;		_TM1650_fastPrintNum
 18482 ;; This function is called by:
 18483 ;;		_CONTROL_DMX
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           
 18488                           ;psect for function _address_inc
 18489  131C                     _address_inc:	
 18490                           
 18491                           ;dmx.c: 31:     if(address == 512)
 18492                           
 18493                           ;incstack = 0
 18494                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18495  131C  3002               	movlw	2
 18496  131D  0141               	movlb	1	; select bank1
 18497  131E  066A               	xorwf	(_address+1)^(0+128),w
 18498  131F  0469               	iorwf	_address^(0+128),w
 18499  1320  1D03               	btfss	3,2
 18500  1321  2B27               	goto	l6727
 18501                           
 18502                           ;dmx.c: 32:         address = 1;
 18503  1322  3001               	movlw	1
 18504  1323  00E9               	movwf	_address^(0+128)
 18505  1324  3000               	movlw	0
 18506  1325  00EA               	movwf	(_address^(0+128)+1)
 18507  1326  2B2B               	goto	l6729
 18508  1327                     l6727:	
 18509                           
 18510                           ;dmx.c: 34:         address++;
 18511  1327  3001               	movlw	1
 18512  1328  07E9               	addwf	_address^(0+128),f
 18513  1329  3000               	movlw	0
 18514  132A  3DEA               	addwfc	(_address+1)^(0+128),f
 18515  132B                     l6729:	
 18516                           
 18517                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 18518  132B  086A               	movf	(_address+1)^(0+128),w
 18519  132C  0140               	movlb	0	; select bank0
 18520  132D  00B5               	movwf	TM1650_fastPrintNum@num+1
 18521  132E  0141               	movlb	1	; select bank1
 18522  132F  0869               	movf	_address^(0+128),w
 18523  1330  0140               	movlb	0	; select bank0
 18524  1331  00B4               	movwf	TM1650_fastPrintNum@num
 18525  1332  318C  24B6         	fcall	_TM1650_fastPrintNum
 18526  1334  0008               	return
 18527  1335                     __end_of_address_inc:	
 18528                           
 18529                           	psect	text55
 18530  12EC                     __ptext55:	
 18531 ;; *************** function _address_dec *****************
 18532 ;; Defined at:
 18533 ;;		line 43 in file "dmx.c"
 18534 ;; Parameters:    Size  Location     Type
 18535 ;;		None
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;		None
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1    wreg      void 
 18540 ;; Registers used:
 18541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/0
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18551 ;;Total ram usage:        0 bytes
 18552 ;; Hardware stack levels used:    1
 18553 ;; Hardware stack levels required when called:    9
 18554 ;; This function calls:
 18555 ;;		_TM1650_fastPrintNum
 18556 ;; This function is called by:
 18557 ;;		_CONTROL_DMX
 18558 ;; This function uses a non-reentrant model
 18559 ;;
 18560                           
 18561                           
 18562                           ;psect for function _address_dec
 18563  12EC                     _address_dec:	
 18564                           
 18565                           ;dmx.c: 45:     if(address == 1)
 18566                           
 18567                           ;incstack = 0
 18568                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18569  12EC  0141               	movlb	1	; select bank1
 18570  12ED  0369               	decf	_address^(0+128),w
 18571  12EE  046A               	iorwf	(_address+1)^(0+128),w
 18572  12EF  1D03               	btfss	3,2
 18573  12F0  2AF6               	goto	l6735
 18574                           
 18575                           ;dmx.c: 46:         address = 512;
 18576  12F1  3000               	movlw	0
 18577  12F2  00E9               	movwf	_address^(0+128)
 18578  12F3  3002               	movlw	2
 18579  12F4  00EA               	movwf	(_address^(0+128)+1)
 18580  12F5  2AFA               	goto	l6737
 18581  12F6                     l6735:	
 18582                           
 18583                           ;dmx.c: 48:         address--;
 18584  12F6  3001               	movlw	1
 18585  12F7  02E9               	subwf	_address^(0+128),f
 18586  12F8  3000               	movlw	0
 18587  12F9  3BEA               	subwfb	(_address+1)^(0+128),f
 18588  12FA                     l6737:	
 18589                           
 18590                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 18591  12FA  086A               	movf	(_address+1)^(0+128),w
 18592  12FB  0140               	movlb	0	; select bank0
 18593  12FC  00B5               	movwf	TM1650_fastPrintNum@num+1
 18594  12FD  0141               	movlb	1	; select bank1
 18595  12FE  0869               	movf	_address^(0+128),w
 18596  12FF  0140               	movlb	0	; select bank0
 18597  1300  00B4               	movwf	TM1650_fastPrintNum@num
 18598  1301  318C  24B6         	fcall	_TM1650_fastPrintNum
 18599  1303  0008               	return
 18600  1304                     __end_of_address_dec:	
 18601                           
 18602                           	psect	text56
 18603  0CB6                     __ptext56:	
 18604 ;; *************** function _TM1650_fastPrintNum *****************
 18605 ;; Defined at:
 18606 ;;		line 101 in file "tm1650.c"
 18607 ;; Parameters:    Size  Location     Type
 18608 ;;  num             2   20[BANK0 ] unsigned short 
 18609 ;; Auto vars:     Size  Location     Type
 18610 ;;		None
 18611 ;; Return value:  Size  Location     Type
 18612 ;;                  1    wreg      void 
 18613 ;; Registers used:
 18614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18615 ;; Tracked objects:
 18616 ;;		On entry : 0/0
 18617 ;;		On exit  : 0/0
 18618 ;;		Unchanged: 0/0
 18619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18623 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18624 ;;Total ram usage:        3 bytes
 18625 ;; Hardware stack levels used:    1
 18626 ;; Hardware stack levels required when called:    8
 18627 ;; This function calls:
 18628 ;;		___lwdiv
 18629 ;;		___lwmod
 18630 ;;		_writeData
 18631 ;; This function is called by:
 18632 ;;		_CONTROLLER_task
 18633 ;;		_DMX_init
 18634 ;;		_address_inc
 18635 ;;		_address_dec
 18636 ;; This function uses a non-reentrant model
 18637 ;;
 18638                           
 18639                           
 18640                           ;psect for function _TM1650_fastPrintNum
 18641  0CB6                     _TM1650_fastPrintNum:	
 18642                           
 18643                           ;tm1650.c: 103:     if(num > 9999){
 18644                           
 18645                           ;incstack = 0
 18646                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18647  0CB6  3027               	movlw	39
 18648  0CB7  0140               	movlb	0	; select bank0
 18649  0CB8  0235               	subwf	TM1650_fastPrintNum@num+1,w
 18650  0CB9  3010               	movlw	16
 18651  0CBA  1903               	skipnz
 18652  0CBB  0234               	subwf	TM1650_fastPrintNum@num,w
 18653  0CBC  1C03               	skipc
 18654  0CBD  2CE1               	goto	l6673
 18655                           
 18656                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 18657  0CBE  3079               	movlw	121
 18658  0CBF  00B6               	movwf	??_TM1650_fastPrintNum
 18659  0CC0  0836               	movf	??_TM1650_fastPrintNum,w
 18660  0CC1  00AE               	movwf	writeData@data
 18661  0CC2  3034               	movlw	52
 18662  0CC3  3193  236B  318C   	fcall	_writeData
 18663                           
 18664                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 18665  0CC6  3079               	movlw	121
 18666  0CC7  0140               	movlb	0	; select bank0
 18667  0CC8  00B6               	movwf	??_TM1650_fastPrintNum
 18668  0CC9  0836               	movf	??_TM1650_fastPrintNum,w
 18669  0CCA  00AE               	movwf	writeData@data
 18670  0CCB  3035               	movlw	53
 18671  0CCC  3193  236B  318C   	fcall	_writeData
 18672                           
 18673                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 18674  0CCF  3079               	movlw	121
 18675  0CD0  0140               	movlb	0	; select bank0
 18676  0CD1  00B6               	movwf	??_TM1650_fastPrintNum
 18677  0CD2  0836               	movf	??_TM1650_fastPrintNum,w
 18678  0CD3  00AE               	movwf	writeData@data
 18679  0CD4  3036               	movlw	54
 18680  0CD5  3193  236B  318C   	fcall	_writeData
 18681                           
 18682                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 18683  0CD8  3079               	movlw	121
 18684  0CD9  0140               	movlb	0	; select bank0
 18685  0CDA  00B6               	movwf	??_TM1650_fastPrintNum
 18686  0CDB  0836               	movf	??_TM1650_fastPrintNum,w
 18687  0CDC  00AE               	movwf	writeData@data
 18688  0CDD  3037               	movlw	55
 18689  0CDE  3193  236B         	fcall	_writeData
 18690  0CE0  0008               	return
 18691  0CE1                     l6673:	
 18692                           
 18693                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 18694  0CE1  300A               	movlw	10
 18695  0CE2  00A8               	movwf	___lwmod@divisor
 18696  0CE3  3000               	movlw	0
 18697  0CE4  00A9               	movwf	___lwmod@divisor+1
 18698  0CE5  0835               	movf	TM1650_fastPrintNum@num+1,w
 18699  0CE6  00AB               	movwf	___lwmod@dividend+1
 18700  0CE7  0834               	movf	TM1650_fastPrintNum@num,w
 18701  0CE8  00AA               	movwf	___lwmod@dividend
 18702  0CE9  3195  2528  318C   	fcall	___lwmod
 18703  0CEC  0140               	movlb	0	; select bank0
 18704  0CED  0829               	movf	?___lwmod+1,w
 18705  0CEE  0085               	movwf	5
 18706  0CEF  0828               	movf	?___lwmod,w
 18707  0CF0  0084               	movwf	4
 18708  0CF1  3010               	movlw	low ((_charTable+16)| (0+32768))
 18709  0CF2  0784               	addwf	4,f
 18710  0CF3  3090               	movlw	high ((_charTable+16)| (0+32768))
 18711  0CF4  3D85               	addwfc	5,f
 18712  0CF5  0800               	movf	0,w	;code access
 18713  0CF6  00B6               	movwf	??_TM1650_fastPrintNum
 18714  0CF7  0836               	movf	??_TM1650_fastPrintNum,w
 18715  0CF8  00AE               	movwf	writeData@data
 18716  0CF9  3037               	movlw	55
 18717  0CFA  3193  236B  318C   	fcall	_writeData
 18718                           
 18719                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 18720  0CFD  300A               	movlw	10
 18721  0CFE  0140               	movlb	0	; select bank0
 18722  0CFF  00A8               	movwf	___lwmod@divisor
 18723  0D00  3000               	movlw	0
 18724  0D01  00A9               	movwf	___lwmod@divisor+1
 18725  0D02  300A               	movlw	10
 18726  0D03  00A0               	movwf	___lwdiv@divisor
 18727  0D04  3000               	movlw	0
 18728  0D05  00A1               	movwf	___lwdiv@divisor+1
 18729  0D06  0835               	movf	TM1650_fastPrintNum@num+1,w
 18730  0D07  00A3               	movwf	___lwdiv@dividend+1
 18731  0D08  0834               	movf	TM1650_fastPrintNum@num,w
 18732  0D09  00A2               	movwf	___lwdiv@dividend
 18733  0D0A  3196  264C  318C   	fcall	___lwdiv
 18734  0D0D  0140               	movlb	0	; select bank0
 18735  0D0E  0821               	movf	?___lwdiv+1,w
 18736  0D0F  00AB               	movwf	___lwmod@dividend+1
 18737  0D10  0820               	movf	?___lwdiv,w
 18738  0D11  00AA               	movwf	___lwmod@dividend
 18739  0D12  3195  2528  318C   	fcall	___lwmod
 18740  0D15  0140               	movlb	0	; select bank0
 18741  0D16  0829               	movf	?___lwmod+1,w
 18742  0D17  0085               	movwf	5
 18743  0D18  0828               	movf	?___lwmod,w
 18744  0D19  0084               	movwf	4
 18745  0D1A  3010               	movlw	low ((_charTable+16)| (0+32768))
 18746  0D1B  0784               	addwf	4,f
 18747  0D1C  3090               	movlw	high ((_charTable+16)| (0+32768))
 18748  0D1D  3D85               	addwfc	5,f
 18749  0D1E  0800               	movf	0,w	;code access
 18750  0D1F  00B6               	movwf	??_TM1650_fastPrintNum
 18751  0D20  0836               	movf	??_TM1650_fastPrintNum,w
 18752  0D21  00AE               	movwf	writeData@data
 18753  0D22  3036               	movlw	54
 18754  0D23  3193  236B  318C   	fcall	_writeData
 18755                           
 18756                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 18757  0D26  300A               	movlw	10
 18758  0D27  0140               	movlb	0	; select bank0
 18759  0D28  00A8               	movwf	___lwmod@divisor
 18760  0D29  3000               	movlw	0
 18761  0D2A  00A9               	movwf	___lwmod@divisor+1
 18762  0D2B  3064               	movlw	100
 18763  0D2C  00A0               	movwf	___lwdiv@divisor
 18764  0D2D  3000               	movlw	0
 18765  0D2E  00A1               	movwf	___lwdiv@divisor+1
 18766  0D2F  0835               	movf	TM1650_fastPrintNum@num+1,w
 18767  0D30  00A3               	movwf	___lwdiv@dividend+1
 18768  0D31  0834               	movf	TM1650_fastPrintNum@num,w
 18769  0D32  00A2               	movwf	___lwdiv@dividend
 18770  0D33  3196  264C  318C   	fcall	___lwdiv
 18771  0D36  0140               	movlb	0	; select bank0
 18772  0D37  0821               	movf	?___lwdiv+1,w
 18773  0D38  00AB               	movwf	___lwmod@dividend+1
 18774  0D39  0820               	movf	?___lwdiv,w
 18775  0D3A  00AA               	movwf	___lwmod@dividend
 18776  0D3B  3195  2528  318C   	fcall	___lwmod
 18777  0D3E  0140               	movlb	0	; select bank0
 18778  0D3F  0829               	movf	?___lwmod+1,w
 18779  0D40  0085               	movwf	5
 18780  0D41  0828               	movf	?___lwmod,w
 18781  0D42  0084               	movwf	4
 18782  0D43  3010               	movlw	low ((_charTable+16)| (0+32768))
 18783  0D44  0784               	addwf	4,f
 18784  0D45  3090               	movlw	high ((_charTable+16)| (0+32768))
 18785  0D46  3D85               	addwfc	5,f
 18786  0D47  0800               	movf	0,w	;code access
 18787  0D48  00B6               	movwf	??_TM1650_fastPrintNum
 18788  0D49  0836               	movf	??_TM1650_fastPrintNum,w
 18789  0D4A  00AE               	movwf	writeData@data
 18790  0D4B  3035               	movlw	53
 18791  0D4C  3193  236B  318C   	fcall	_writeData
 18792                           
 18793                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 18794  0D4F  300A               	movlw	10
 18795  0D50  0140               	movlb	0	; select bank0
 18796  0D51  00A8               	movwf	___lwmod@divisor
 18797  0D52  3000               	movlw	0
 18798  0D53  00A9               	movwf	___lwmod@divisor+1
 18799  0D54  30E8               	movlw	232
 18800  0D55  00A0               	movwf	___lwdiv@divisor
 18801  0D56  3003               	movlw	3
 18802  0D57  00A1               	movwf	___lwdiv@divisor+1
 18803  0D58  0835               	movf	TM1650_fastPrintNum@num+1,w
 18804  0D59  00A3               	movwf	___lwdiv@dividend+1
 18805  0D5A  0834               	movf	TM1650_fastPrintNum@num,w
 18806  0D5B  00A2               	movwf	___lwdiv@dividend
 18807  0D5C  3196  264C  318C   	fcall	___lwdiv
 18808  0D5F  0140               	movlb	0	; select bank0
 18809  0D60  0821               	movf	?___lwdiv+1,w
 18810  0D61  00AB               	movwf	___lwmod@dividend+1
 18811  0D62  0820               	movf	?___lwdiv,w
 18812  0D63  00AA               	movwf	___lwmod@dividend
 18813  0D64  3195  2528  318C   	fcall	___lwmod
 18814  0D67  0140               	movlb	0	; select bank0
 18815  0D68  0829               	movf	?___lwmod+1,w
 18816  0D69  0085               	movwf	5
 18817  0D6A  0828               	movf	?___lwmod,w
 18818  0D6B  0084               	movwf	4
 18819  0D6C  3010               	movlw	low ((_charTable+16)| (0+32768))
 18820  0D6D  0784               	addwf	4,f
 18821  0D6E  3090               	movlw	high ((_charTable+16)| (0+32768))
 18822  0D6F  3D85               	addwfc	5,f
 18823  0D70  0800               	movf	0,w	;code access
 18824  0D71  00B6               	movwf	??_TM1650_fastPrintNum
 18825  0D72  0836               	movf	??_TM1650_fastPrintNum,w
 18826  0D73  00AE               	movwf	writeData@data
 18827  0D74  3034               	movlw	52
 18828  0D75  3193  236B         	fcall	_writeData
 18829  0D77  0008               	return
 18830  0D78                     __end_of_TM1650_fastPrintNum:	
 18831                           
 18832                           	psect	text57
 18833  136B                     __ptext57:	
 18834 ;; *************** function _writeData *****************
 18835 ;; Defined at:
 18836 ;;		line 31 in file "tm1650.c"
 18837 ;; Parameters:    Size  Location     Type
 18838 ;;  address         1    wreg     unsigned char 
 18839 ;;  data            1   14[BANK0 ] unsigned char 
 18840 ;; Auto vars:     Size  Location     Type
 18841 ;;  address         1   18[BANK0 ] unsigned char 
 18842 ;;  status          1   19[BANK0 ] enum E11370
 18843 ;; Return value:  Size  Location     Type
 18844 ;;                  1    wreg      void 
 18845 ;; Registers used:
 18846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18847 ;; Tracked objects:
 18848 ;;		On entry : 0/0
 18849 ;;		On exit  : 0/0
 18850 ;;		Unchanged: 0/0
 18851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18852 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18854 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18856 ;;Total ram usage:        6 bytes
 18857 ;; Hardware stack levels used:    1
 18858 ;; Hardware stack levels required when called:    7
 18859 ;; This function calls:
 18860 ;;		_I2C1_MasterWrite
 18861 ;; This function is called by:
 18862 ;;		_TM1650_enable
 18863 ;;		_TM1650_setDigit
 18864 ;;		_TM1650_fastPrintNum
 18865 ;;		_TM1650_brightness
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           
 18870                           ;psect for function _writeData
 18871  136B                     _writeData:	
 18872                           
 18873                           ;incstack = 0
 18874                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18875                           ;writeData@address stored from wreg
 18876  136B  0140               	movlb	0	; select bank0
 18877  136C  00B2               	movwf	writeData@address
 18878                           
 18879                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 18880  136D  3002               	movlw	2
 18881  136E  00AF               	movwf	??_writeData
 18882  136F  082F               	movf	??_writeData,w
 18883  1370  00B3               	movwf	writeData@status
 18884                           
 18885                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 18886  1371  01A7               	clrf	I2C1_MasterWrite@length
 18887  1372  0AA7               	incf	I2C1_MasterWrite@length,f
 18888  1373  0832               	movf	writeData@address,w
 18889  1374  00AF               	movwf	??_writeData
 18890  1375  01B0               	clrf	??_writeData+1
 18891  1376  082F               	movf	??_writeData,w
 18892  1377  00A8               	movwf	I2C1_MasterWrite@address
 18893  1378  0830               	movf	??_writeData+1,w
 18894  1379  00A9               	movwf	I2C1_MasterWrite@address+1
 18895  137A  3033               	movlw	(low (writeData@status| 0))& (0+255)
 18896  137B  00B1               	movwf	??_writeData+2
 18897  137C  0831               	movf	??_writeData+2,w
 18898  137D  00AA               	movwf	I2C1_MasterWrite@pflag
 18899  137E  302E               	movlw	(low (writeData@data| 0))& (0+255)
 18900  137F  3194  24FE  3193   	fcall	_I2C1_MasterWrite
 18901  1382                     l6111:	
 18902                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 18903                           
 18904  1382  3002               	movlw	2
 18905  1383  0140               	movlb	0	; select bank0
 18906  1384  0633               	xorwf	writeData@status,w
 18907  1385  1D03               	btfss	3,2
 18908  1386  0008               	return
 18909  1387  2B82               	goto	l6111
 18910  1388                     __end_of_writeData:	
 18911                           
 18912                           	psect	text58
 18913  14FE                     __ptext58:	
 18914 ;; *************** function _I2C1_MasterWrite *****************
 18915 ;; Defined at:
 18916 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 18917 ;; Parameters:    Size  Location     Type
 18918 ;;  pdata           1    wreg     PTR unsigned char 
 18919 ;;		 -> writeData@data(1), 
 18920 ;;  length          1    7[BANK0 ] unsigned char 
 18921 ;;  address         2    8[BANK0 ] unsigned short 
 18922 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 18923 ;;		 -> writeData@status(1), 
 18924 ;; Auto vars:     Size  Location     Type
 18925 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 18926 ;;		 -> writeData@data(1), 
 18927 ;; Return value:  Size  Location     Type
 18928 ;;                  1    wreg      void 
 18929 ;; Registers used:
 18930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18931 ;; Tracked objects:
 18932 ;;		On entry : 0/0
 18933 ;;		On exit  : 0/0
 18934 ;;		Unchanged: 0/0
 18935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18939 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18940 ;;Total ram usage:        7 bytes
 18941 ;; Hardware stack levels used:    1
 18942 ;; Hardware stack levels required when called:    6
 18943 ;; This function calls:
 18944 ;;		_I2C1_MasterTRBInsert
 18945 ;;		_I2C1_MasterWriteTRBBuild
 18946 ;; This function is called by:
 18947 ;;		_writeData
 18948 ;; This function uses a non-reentrant model
 18949 ;;
 18950                           
 18951                           
 18952                           ;psect for function _I2C1_MasterWrite
 18953  14FE                     _I2C1_MasterWrite:	
 18954                           
 18955                           ;incstack = 0
 18956                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18957                           ;I2C1_MasterWrite@pdata stored from wreg
 18958  14FE  0140               	movlb	0	; select bank0
 18959  14FF  00AD               	movwf	I2C1_MasterWrite@pdata
 18960                           
 18961                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 18962  1500  0141               	movlb	1	; select bank1
 18963  1501  1847               	btfsc	(_i2c1_object^(0+128)+2),0
 18964  1502  2D21               	goto	l6105
 18965                           
 18966                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 18967  1503  0140               	movlb	0	; select bank0
 18968  1504  082D               	movf	I2C1_MasterWrite@pdata,w
 18969  1505  00AB               	movwf	??_I2C1_MasterWrite
 18970  1506  082B               	movf	??_I2C1_MasterWrite,w
 18971  1507  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 18972  1508  0827               	movf	I2C1_MasterWrite@length,w
 18973  1509  00AC               	movwf	??_I2C1_MasterWrite+1
 18974  150A  082C               	movf	??_I2C1_MasterWrite+1,w
 18975  150B  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 18976  150C  0829               	movf	I2C1_MasterWrite@address+1,w
 18977  150D  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 18978  150E  0828               	movf	I2C1_MasterWrite@address,w
 18979  150F  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 18980  1510  304E               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 18981  1511  3194  2420  3194   	fcall	_I2C1_MasterWriteTRBBuild
 18982                           
 18983                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 18984  1514  304E               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 18985  1515  0140               	movlb	0	; select bank0
 18986  1516  00AB               	movwf	??_I2C1_MasterWrite
 18987  1517  082B               	movf	??_I2C1_MasterWrite,w
 18988  1518  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 18989  1519  082A               	movf	I2C1_MasterWrite@pflag,w
 18990  151A  00AC               	movwf	??_I2C1_MasterWrite+1
 18991  151B  082C               	movf	??_I2C1_MasterWrite+1,w
 18992  151C  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 18993  151D  3001               	movlw	1
 18994  151E  3188  2015         	fcall	_I2C1_MasterTRBInsert
 18995                           
 18996                           ;mcc_generated_files/i2c1.c: 613:     }
 18997  1520  0008               	return
 18998  1521                     l6105:	
 18999                           
 19000                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19001  1521  0140               	movlb	0	; select bank0
 19002  1522  082A               	movf	I2C1_MasterWrite@pflag,w
 19003  1523  0086               	movwf	6
 19004  1524  0187               	clrf	7
 19005  1525  0181               	clrf	1
 19006  1526  0A81               	incf	1,f
 19007  1527  0008               	return
 19008  1528                     __end_of_I2C1_MasterWrite:	
 19009                           
 19010                           	psect	text59
 19011  1420                     __ptext59:	
 19012 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 19013 ;; Defined at:
 19014 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 19015 ;; Parameters:    Size  Location     Type
 19016 ;;  ptrb            1    wreg     PTR struct .
 19017 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19018 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 19019 ;;		 -> writeData@data(1), 
 19020 ;;  length          1    1[BANK0 ] unsigned char 
 19021 ;;  address         2    2[BANK0 ] unsigned short 
 19022 ;; Auto vars:     Size  Location     Type
 19023 ;;  ptrb            1    6[BANK0 ] PTR struct .
 19024 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19025 ;; Return value:  Size  Location     Type
 19026 ;;                  1    wreg      void 
 19027 ;; Registers used:
 19028 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19029 ;; Tracked objects:
 19030 ;;		On entry : 0/0
 19031 ;;		On exit  : 0/0
 19032 ;;		Unchanged: 0/0
 19033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19037 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19038 ;;Total ram usage:        7 bytes
 19039 ;; Hardware stack levels used:    1
 19040 ;; Hardware stack levels required when called:    4
 19041 ;; This function calls:
 19042 ;;		Nothing
 19043 ;; This function is called by:
 19044 ;;		_I2C1_MasterWrite
 19045 ;; This function uses a non-reentrant model
 19046 ;;
 19047                           
 19048                           
 19049                           ;psect for function _I2C1_MasterWriteTRBBuild
 19050  1420                     _I2C1_MasterWriteTRBBuild:	
 19051                           
 19052                           ;incstack = 0
 19053                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 19054                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 19055  1420  0140               	movlb	0	; select bank0
 19056  1421  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 19057                           
 19058                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 19059  1422  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 19060  1423  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 19061  1424  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 19062  1425  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19063  1426  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 19064  1427  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 19065  1428  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19066  1429  0086               	movwf	6
 19067  142A  3001               	movlw	1	; select bank2/3
 19068  142B  0087               	movwf	7
 19069  142C  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19070  142D  3FC0               	movwi [0]fsr1
 19071  142E  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 19072  142F  3FC1               	movwi [1]fsr1
 19073                           
 19074                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 19075  1430  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 19076  1431  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19077  1432  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19078  1433  3E02               	addlw	2
 19079  1434  0086               	movwf	6
 19080  1435  3001               	movlw	1	; select bank2/3
 19081  1436  0087               	movwf	7
 19082  1437  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19083  1438  0081               	movwf	1
 19084                           
 19085                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 19086  1439  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 19087  143A  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19088  143B  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19089  143C  3E03               	addlw	3
 19090  143D  0086               	movwf	6
 19091  143E  3001               	movlw	1	; select bank2/3
 19092  143F  0087               	movwf	7
 19093  1440  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19094  1441  0081               	movwf	1
 19095  1442  0008               	return
 19096  1443                     __end_of_I2C1_MasterWriteTRBBuild:	
 19097                           
 19098                           	psect	text60
 19099  0815                     __ptext60:	
 19100 ;; *************** function _I2C1_MasterTRBInsert *****************
 19101 ;; Defined at:
 19102 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 19103 ;; Parameters:    Size  Location     Type
 19104 ;;  count           1    wreg     unsigned char 
 19105 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 19106 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 19107 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 19108 ;;		 -> writeData@status(1), 
 19109 ;; Auto vars:     Size  Location     Type
 19110 ;;  count           1    3[BANK0 ] unsigned char 
 19111 ;; Return value:  Size  Location     Type
 19112 ;;                  1    wreg      void 
 19113 ;; Registers used:
 19114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19115 ;; Tracked objects:
 19116 ;;		On entry : 0/0
 19117 ;;		On exit  : 0/0
 19118 ;;		Unchanged: 0/0
 19119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19124 ;;Total ram usage:        4 bytes
 19125 ;; Hardware stack levels used:    1
 19126 ;; Hardware stack levels required when called:    5
 19127 ;; This function calls:
 19128 ;;		_I2C1_WaitForLastPacketToComplete
 19129 ;; This function is called by:
 19130 ;;		_I2C1_MasterWrite
 19131 ;;		_I2C1_MasterRead
 19132 ;; This function uses a non-reentrant model
 19133 ;;
 19134                           
 19135                           
 19136                           ;psect for function _I2C1_MasterTRBInsert
 19137  0815                     _I2C1_MasterTRBInsert:	
 19138                           
 19139                           ;incstack = 0
 19140                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19141                           ;I2C1_MasterTRBInsert@count stored from wreg
 19142  0815  0140               	movlb	0	; select bank0
 19143  0816  00A3               	movwf	I2C1_MasterTRBInsert@count
 19144                           
 19145                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 19146  0817  0141               	movlb	1	; select bank1
 19147  0818  1847               	btfsc	(_i2c1_object^(0+128)+2),0
 19148  0819  2857               	goto	l6093
 19149                           
 19150                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 19151  081A  3002               	movlw	2
 19152  081B  0140               	movlb	0	; select bank0
 19153  081C  00A2               	movwf	??_I2C1_MasterTRBInsert
 19154  081D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19155  081E  0086               	movwf	6
 19156  081F  0187               	clrf	7
 19157  0820  0822               	movf	??_I2C1_MasterTRBInsert,w
 19158  0821  0081               	movwf	1
 19159                           
 19160                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 19161  0822  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 19162  0823  00A2               	movwf	??_I2C1_MasterTRBInsert
 19163  0824  0141               	movlb	1	; select bank1
 19164  0825  0A45               	incf	_i2c1_object^(0+128),w
 19165  0826  0086               	movwf	6
 19166  0827  3001               	movlw	1	; select bank2/3
 19167  0828  0087               	movwf	7
 19168  0829  0140               	movlb	0	; select bank0
 19169  082A  0822               	movf	??_I2C1_MasterTRBInsert,w
 19170  082B  0081               	movwf	1
 19171                           
 19172                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 19173  082C  0823               	movf	I2C1_MasterTRBInsert@count,w
 19174  082D  00A2               	movwf	??_I2C1_MasterTRBInsert
 19175  082E  0141               	movlb	1	; select bank1
 19176  082F  0845               	movf	_i2c1_object^(0+128),w
 19177  0830  0086               	movwf	6
 19178  0831  3001               	movlw	1	; select bank2/3
 19179  0832  0087               	movwf	7
 19180  0833  0140               	movlb	0	; select bank0
 19181  0834  0822               	movf	??_I2C1_MasterTRBInsert,w
 19182  0835  0081               	movwf	1
 19183                           
 19184                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 19185  0836  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19186  0837  00A2               	movwf	??_I2C1_MasterTRBInsert
 19187  0838  0141               	movlb	1	; select bank1
 19188  0839  0845               	movf	_i2c1_object^(0+128),w
 19189  083A  3E02               	addlw	2
 19190  083B  0086               	movwf	6
 19191  083C  3001               	movlw	1	; select bank2/3
 19192  083D  0087               	movwf	7
 19193  083E  0140               	movlb	0	; select bank0
 19194  083F  0822               	movf	??_I2C1_MasterTRBInsert,w
 19195  0840  0081               	movwf	1
 19196                           
 19197                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 19198  0841  3003               	movlw	3
 19199  0842  00A2               	movwf	??_I2C1_MasterTRBInsert
 19200  0843  0822               	movf	??_I2C1_MasterTRBInsert,w
 19201  0844  0141               	movlb	1	; select bank1
 19202  0845  07C5               	addwf	_i2c1_object^(0+128),f
 19203                           
 19204                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 19205  0846  0845               	movf	_i2c1_object^(0+128),w
 19206  0847  3A55               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 19207  0848  1D03               	skipz
 19208  0849  2850               	goto	l6089
 19209                           
 19210                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 19211  084A  3052               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 19212  084B  0140               	movlb	0	; select bank0
 19213  084C  00A2               	movwf	??_I2C1_MasterTRBInsert
 19214  084D  0822               	movf	??_I2C1_MasterTRBInsert,w
 19215  084E  0141               	movlb	1	; select bank1
 19216  084F  00C5               	movwf	_i2c1_object^(0+128)
 19217  0850                     l6089:	
 19218                           
 19219                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 19220  0850  10C7               	bcf	(_i2c1_object^(0+128)+2),1
 19221                           
 19222                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 19223  0851  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 19224  0852  0645               	xorwf	_i2c1_object^(0+128),w
 19225  0853  1D03               	skipz
 19226  0854  285D               	goto	l6095
 19227                           
 19228                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 19229  0855  1447               	bsf	(_i2c1_object^(0+128)+2),0
 19230  0856  285D               	goto	l6095
 19231  0857                     l6093:	
 19232                           
 19233                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19234  0857  0140               	movlb	0	; select bank0
 19235  0858  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19236  0859  0086               	movwf	6
 19237  085A  0187               	clrf	7
 19238  085B  0181               	clrf	1
 19239  085C  0A81               	incf	1,f
 19240  085D                     l6095:	
 19241                           
 19242                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 19243  085D  0140               	movlb	0	; select bank0
 19244  085E  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19245  085F  0086               	movwf	6
 19246  0860  0187               	clrf	7
 19247  0861  3002               	movlw	2
 19248  0862  0601               	xorwf	1,w
 19249  0863  1D03               	btfss	3,2
 19250  0864  0008               	return
 19251                           
 19252                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 19253  0865  3191  2120         	fcall	_I2C1_WaitForLastPacketToComplete
 19254                           
 19255                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 19256  0867  014E               	movlb	14	; select bank14
 19257  0868  140F               	bsf	15,0	;volatile
 19258  0869  0008               	return
 19259  086A                     __end_of_I2C1_MasterTRBInsert:	
 19260                           
 19261                           	psect	text61
 19262  1120                     __ptext61:	
 19263 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 19264 ;; Defined at:
 19265 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 19266 ;; Parameters:    Size  Location     Type
 19267 ;;		None
 19268 ;; Auto vars:     Size  Location     Type
 19269 ;;		None
 19270 ;; Return value:  Size  Location     Type
 19271 ;;                  1    wreg      void 
 19272 ;; Registers used:
 19273 ;;		wreg, status,2, status,0
 19274 ;; Tracked objects:
 19275 ;;		On entry : 0/0
 19276 ;;		On exit  : 0/0
 19277 ;;		Unchanged: 0/0
 19278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19283 ;;Total ram usage:        0 bytes
 19284 ;; Hardware stack levels used:    1
 19285 ;; Hardware stack levels required when called:    4
 19286 ;; This function calls:
 19287 ;;		Nothing
 19288 ;; This function is called by:
 19289 ;;		_I2C1_MasterTRBInsert
 19290 ;; This function uses a non-reentrant model
 19291 ;;
 19292                           
 19293                           
 19294                           ;psect for function _I2C1_WaitForLastPacketToComplete
 19295  1120                     _I2C1_WaitForLastPacketToComplete:	
 19296  1120                     l6077:	
 19297                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 19298                           
 19299                           ;incstack = 0
 19300                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 19301                           
 19302                           
 19303                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 19304  1120  0141               	movlb	1	; select bank1
 19305  1121  0862               	movf	_i2c1_state^(0+128),w
 19306  1122  1903               	btfsc	3,2
 19307  1123  0008               	return
 19308  1124  2920               	goto	l6077
 19309  1125                     __end_of_I2C1_WaitForLastPacketToComplete:	
 19310                           
 19311                           	psect	text62
 19312  1528                     __ptext62:	
 19313 ;; *************** function ___lwmod *****************
 19314 ;; Defined at:
 19315 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 19316 ;; Parameters:    Size  Location     Type
 19317 ;;  divisor         2    8[BANK0 ] unsigned int 
 19318 ;;  dividend        2   10[BANK0 ] unsigned int 
 19319 ;; Auto vars:     Size  Location     Type
 19320 ;;  counter         1   13[BANK0 ] unsigned char 
 19321 ;; Return value:  Size  Location     Type
 19322 ;;                  2    8[BANK0 ] unsigned int 
 19323 ;; Registers used:
 19324 ;;		wreg, status,2, status,0
 19325 ;; Tracked objects:
 19326 ;;		On entry : 0/0
 19327 ;;		On exit  : 0/0
 19328 ;;		Unchanged: 0/0
 19329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19330 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19333 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19334 ;;Total ram usage:        6 bytes
 19335 ;; Hardware stack levels used:    1
 19336 ;; Hardware stack levels required when called:    4
 19337 ;; This function calls:
 19338 ;;		Nothing
 19339 ;; This function is called by:
 19340 ;;		_TM1650_fastPrintNum
 19341 ;; This function uses a non-reentrant model
 19342 ;;
 19343                           
 19344                           
 19345                           ;psect for function ___lwmod
 19346  1528                     ___lwmod:	
 19347                           
 19348                           ;incstack = 0
 19349                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19350  1528  0140               	movlb	0	; select bank0
 19351  1529  0828               	movf	___lwmod@divisor,w
 19352  152A  0429               	iorwf	___lwmod@divisor+1,w
 19353  152B  1903               	btfsc	3,2
 19354  152C  2D50               	goto	l4385
 19355  152D  01AD               	clrf	___lwmod@counter
 19356  152E  0AAD               	incf	___lwmod@counter,f
 19357  152F                     l4375:	
 19358  152F  1BA9               	btfsc	___lwmod@divisor+1,7
 19359  1530  2D3B               	goto	l4377
 19360  1531  3001               	movlw	1
 19361  1532                     u3175:	
 19362  1532  35A8               	lslf	___lwmod@divisor,f
 19363  1533  0DA9               	rlf	___lwmod@divisor+1,f
 19364  1534  0B89               	decfsz	9,f
 19365  1535  2D32               	goto	u3175
 19366  1536  3001               	movlw	1
 19367  1537  00AC               	movwf	??___lwmod
 19368  1538  082C               	movf	??___lwmod,w
 19369  1539  07AD               	addwf	___lwmod@counter,f
 19370  153A  2D2F               	goto	l4375
 19371  153B                     l4377:	
 19372  153B  0829               	movf	___lwmod@divisor+1,w
 19373  153C  022B               	subwf	___lwmod@dividend+1,w
 19374  153D  1D03               	skipz
 19375  153E  2D41               	goto	u3195
 19376  153F  0828               	movf	___lwmod@divisor,w
 19377  1540  022A               	subwf	___lwmod@dividend,w
 19378  1541                     u3195:	
 19379  1541  1C03               	skipc
 19380  1542  2D47               	goto	l4381
 19381  1543  0828               	movf	___lwmod@divisor,w
 19382  1544  02AA               	subwf	___lwmod@dividend,f
 19383  1545  0829               	movf	___lwmod@divisor+1,w
 19384  1546  3BAB               	subwfb	___lwmod@dividend+1,f
 19385  1547                     l4381:	
 19386  1547  3001               	movlw	1
 19387  1548                     u3205:	
 19388  1548  36A9               	lsrf	___lwmod@divisor+1,f
 19389  1549  0CA8               	rrf	___lwmod@divisor,f
 19390  154A  0B89               	decfsz	9,f
 19391  154B  2D48               	goto	u3205
 19392  154C  3001               	movlw	1
 19393  154D  02AD               	subwf	___lwmod@counter,f
 19394  154E  1D03               	btfss	3,2
 19395  154F  2D3B               	goto	l4377
 19396  1550                     l4385:	
 19397  1550  082B               	movf	___lwmod@dividend+1,w
 19398  1551  00A9               	movwf	?___lwmod+1
 19399  1552  082A               	movf	___lwmod@dividend,w
 19400  1553  00A8               	movwf	?___lwmod
 19401  1554  0008               	return
 19402  1555                     __end_of___lwmod:	
 19403                           
 19404                           	psect	text63
 19405  1216                     __ptext63:	
 19406 ;; *************** function _BUTTONS_isHeld *****************
 19407 ;; Defined at:
 19408 ;;		line 106 in file "buttons.c"
 19409 ;; Parameters:    Size  Location     Type
 19410 ;;  button          1    wreg     PTR struct .
 19411 ;;		 -> buttons(32), NULL(0), 
 19412 ;; Auto vars:     Size  Location     Type
 19413 ;;  button          1    0[BANK0 ] PTR struct .
 19414 ;;		 -> buttons(32), NULL(0), 
 19415 ;; Return value:  Size  Location     Type
 19416 ;;                  1    wreg      _Bool 
 19417 ;; Registers used:
 19418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19419 ;; Tracked objects:
 19420 ;;		On entry : 0/0
 19421 ;;		On exit  : 0/0
 19422 ;;		Unchanged: 0/0
 19423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;Total ram usage:        1 bytes
 19429 ;; Hardware stack levels used:    1
 19430 ;; Hardware stack levels required when called:    4
 19431 ;; This function calls:
 19432 ;;		Nothing
 19433 ;; This function is called by:
 19434 ;;		_CONTROL_DMX
 19435 ;; This function uses a non-reentrant model
 19436 ;;
 19437                           
 19438                           
 19439                           ;psect for function _BUTTONS_isHeld
 19440  1216                     _BUTTONS_isHeld:	
 19441                           
 19442                           ;incstack = 0
 19443                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 19444                           ;BUTTONS_isHeld@button stored from wreg
 19445  1216  0140               	movlb	0	; select bank0
 19446  1217  00A0               	movwf	BUTTONS_isHeld@button
 19447                           
 19448                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 19449  1218  0820               	movf	BUTTONS_isHeld@button,w
 19450  1219  3E07               	addlw	7
 19451  121A  0086               	movwf	6
 19452  121B  3001               	movlw	1	; select bank2/3
 19453  121C  0087               	movwf	7
 19454  121D  3003               	movlw	3
 19455  121E  0601               	xorwf	1,w
 19456  121F  1D03               	btfss	3,2
 19457  1220  2A23               	goto	l6713
 19458                           
 19459                           ;buttons.c: 108:         return 1;
 19460  1221  3001               	movlw	1
 19461  1222  0008               	return
 19462  1223                     l6713:	
 19463                           
 19464                           ;buttons.c: 111:     return 0;
 19465  1223  3000               	movlw	0
 19466  1224  0008               	return
 19467  1225                     __end_of_BUTTONS_isHeld:	
 19468                           
 19469                           	psect	text64
 19470  16ED                     __ptext64:	
 19471 ;; *************** function _CONTROL_BEAT *****************
 19472 ;; Defined at:
 19473 ;;		line 170 in file "controller.c"
 19474 ;; Parameters:    Size  Location     Type
 19475 ;;		None
 19476 ;; Auto vars:     Size  Location     Type
 19477 ;;		None
 19478 ;; Return value:  Size  Location     Type
 19479 ;;                  1    wreg      _Bool 
 19480 ;; Registers used:
 19481 ;;		wreg, status,2, status,0
 19482 ;; Tracked objects:
 19483 ;;		On entry : 0/0
 19484 ;;		On exit  : 0/0
 19485 ;;		Unchanged: 0/0
 19486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19490 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19491 ;;Total ram usage:        1 bytes
 19492 ;; Hardware stack levels used:    1
 19493 ;; Hardware stack levels required when called:    4
 19494 ;; This function calls:
 19495 ;;		Nothing
 19496 ;; This function is called by:
 19497 ;;		_CONTROLLER_task
 19498 ;; This function uses a non-reentrant model
 19499 ;;
 19500                           
 19501                           
 19502                           ;psect for function _CONTROL_BEAT
 19503  16ED                     _CONTROL_BEAT:	
 19504                           
 19505                           ;controller.c: 171:     if (upState) {
 19506                           
 19507                           ;incstack = 0
 19508                           ; Regs used in _CONTROL_BEAT: [wreg+status,2+status,0]
 19509  16ED  0141               	movlb	1	; select bank1
 19510  16EE  0857               	movf	_upState^(0+128),w
 19511  16EF  1903               	btfsc	3,2
 19512  16F0  2F0C               	goto	l5265
 19513                           
 19514                           ;controller.c: 172:         if(beatBrightness < 9){
 19515  16F1  3009               	movlw	9
 19516  16F2  026E               	subwf	_beatBrightness^(0+128),w
 19517  16F3  1803               	skipnc
 19518  16F4  2EFC               	goto	l5259
 19519                           
 19520                           ;controller.c: 173:             beatBrightness++;
 19521  16F5  3001               	movlw	1
 19522  16F6  0140               	movlb	0	; select bank0
 19523  16F7  00A0               	movwf	??_CONTROL_BEAT
 19524  16F8  0820               	movf	??_CONTROL_BEAT,w
 19525  16F9  0141               	movlb	1	; select bank1
 19526  16FA  07EE               	addwf	_beatBrightness^(0+128),f
 19527                           
 19528                           ;controller.c: 174:         } else {
 19529  16FB  2F0A               	goto	l1077
 19530  16FC                     l5259:	
 19531                           
 19532                           ;controller.c: 175:             beatBrightness = 9;
 19533  16FC  3009               	movlw	9
 19534  16FD  0140               	movlb	0	; select bank0
 19535  16FE  00A0               	movwf	??_CONTROL_BEAT
 19536  16FF  0820               	movf	??_CONTROL_BEAT,w
 19537  1700  0141               	movlb	1	; select bank1
 19538  1701  00EE               	movwf	_beatBrightness^(0+128)
 19539  1702  2F0A               	goto	l1077
 19540  1703                     l5267:	
 19541                           
 19542                           ;controller.c: 179:         if(beatBrightness > 0){
 19543  1703  086E               	movf	_beatBrightness^(0+128),w
 19544  1704  1903               	btfsc	3,2
 19545  1705  2F09               	goto	l5271
 19546                           
 19547                           ;controller.c: 180:             beatBrightness--;
 19548  1706  3001               	movlw	1
 19549  1707  02EE               	subwf	_beatBrightness^(0+128),f
 19550                           
 19551                           ;controller.c: 181:         } else {
 19552  1708  2F0A               	goto	l1077
 19553  1709                     l5271:	
 19554                           
 19555                           ;controller.c: 182:             beatBrightness = 0;
 19556  1709  01EE               	clrf	_beatBrightness^(0+128)
 19557  170A                     l1077:	
 19558                           ;controller.c: 176:         }
 19559                           
 19560                           
 19561                           ;controller.c: 177:         return 1;
 19562  170A  3001               	movlw	1
 19563  170B  0008               	return
 19564  170C                     l5265:	
 19565  170C  0856               	movf	_downState^(0+128),w
 19566  170D  1D03               	btfss	3,2
 19567  170E  2F03               	goto	l5267
 19568                           
 19569                           ;controller.c: 187:     if(enterState && currentSelection == MODE_BEAT_FADE){
 19570  170F  0854               	movf	_enterState^(0+128),w
 19571  1710  1903               	btfsc	3,2
 19572  1711  2F19               	goto	l5283
 19573  1712  3003               	movlw	3
 19574  1713  066B               	xorwf	_currentSelection^(0+128),w
 19575  1714  1D03               	btfss	3,2
 19576  1715  2F19               	goto	l5283
 19577                           
 19578                           ;controller.c: 188:         currentSelection = MODE_BEAT_STROBE;
 19579  1716  01EB               	clrf	_currentSelection^(0+128)
 19580  1717  0AEB               	incf	_currentSelection^(0+128),f
 19581                           
 19582                           ;controller.c: 189:     } else if(enterState && currentSelection == MODE_BEAT_STROBE){
 19583  1718  0008               	return
 19584  1719                     l5283:	
 19585  1719  0854               	movf	_enterState^(0+128),w
 19586  171A  1903               	btfsc	3,2
 19587  171B  0008               	return
 19588  171C  036B               	decf	_currentSelection^(0+128),w
 19589  171D  1D03               	btfss	3,2
 19590  171E  0008               	return
 19591                           
 19592                           ;controller.c: 190:         currentSelection = MODE_BEAT_FADE;
 19593  171F  3003               	movlw	3
 19594  1720  0140               	movlb	0	; select bank0
 19595  1721  00A0               	movwf	??_CONTROL_BEAT
 19596  1722  0820               	movf	??_CONTROL_BEAT,w
 19597  1723  0141               	movlb	1	; select bank1
 19598  1724  00EB               	movwf	_currentSelection^(0+128)
 19599  1725  0008               	return
 19600  1726                     __end_of_CONTROL_BEAT:	
 19601                           
 19602                           	psect	text65
 19603  126C                     __ptext65:	
 19604 ;; *************** function _BUTTONS_isClicked *****************
 19605 ;; Defined at:
 19606 ;;		line 97 in file "buttons.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  button          1    wreg     PTR struct .
 19609 ;;		 -> buttons(32), NULL(0), 
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;  button          1    0[BANK0 ] PTR struct .
 19612 ;;		 -> buttons(32), NULL(0), 
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  1    wreg      _Bool 
 19615 ;; Registers used:
 19616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19625 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19626 ;;Total ram usage:        1 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:    4
 19629 ;; This function calls:
 19630 ;;		Nothing
 19631 ;; This function is called by:
 19632 ;;		_CONTROLLER_task
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           
 19637                           ;psect for function _BUTTONS_isClicked
 19638  126C                     _BUTTONS_isClicked:	
 19639                           
 19640                           ;incstack = 0
 19641                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 19642                           ;BUTTONS_isClicked@button stored from wreg
 19643  126C  0140               	movlb	0	; select bank0
 19644  126D  00A0               	movwf	BUTTONS_isClicked@button
 19645                           
 19646                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 19647  126E  0820               	movf	BUTTONS_isClicked@button,w
 19648  126F  3E07               	addlw	7
 19649  1270  0086               	movwf	6
 19650  1271  3001               	movlw	1	; select bank2/3
 19651  1272  0087               	movwf	7
 19652  1273  0301               	decf	1,w
 19653  1274  1D03               	btfss	3,2
 19654  1275  2A7E               	goto	l6949
 19655                           
 19656                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 19657  1276  0820               	movf	BUTTONS_isClicked@button,w
 19658  1277  3E07               	addlw	7
 19659  1278  0086               	movwf	6
 19660  1279  3001               	movlw	1	; select bank2/3
 19661  127A  0087               	movwf	7
 19662  127B  0181               	clrf	1
 19663                           
 19664                           ;buttons.c: 100:         return 1;
 19665  127C  3001               	movlw	1
 19666  127D  0008               	return
 19667  127E                     l6949:	
 19668                           
 19669                           ;buttons.c: 103:     return 0;
 19670  127E  3000               	movlw	0
 19671  127F  0008               	return
 19672  1280                     __end_of_BUTTONS_isClicked:	
 19673                           
 19674                           	psect	text66
 19675  112B                     __ptext66:	
 19676 ;; *************** function _CLOCK_init *****************
 19677 ;; Defined at:
 19678 ;;		line 8 in file "clock.c"
 19679 ;; Parameters:    Size  Location     Type
 19680 ;;		None
 19681 ;; Auto vars:     Size  Location     Type
 19682 ;;		None
 19683 ;; Return value:  Size  Location     Type
 19684 ;;                  1    wreg      void 
 19685 ;; Registers used:
 19686 ;;		wreg, status,2, status,0, pclath, cstack
 19687 ;; Tracked objects:
 19688 ;;		On entry : 0/0
 19689 ;;		On exit  : 0/0
 19690 ;;		Unchanged: 0/0
 19691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19696 ;;Total ram usage:        0 bytes
 19697 ;; Hardware stack levels used:    1
 19698 ;; Hardware stack levels required when called:    5
 19699 ;; This function calls:
 19700 ;;		_TMR0_SetInterruptHandler
 19701 ;; This function is called by:
 19702 ;;		_main
 19703 ;; This function uses a non-reentrant model
 19704 ;;
 19705                           
 19706                           
 19707                           ;psect for function _CLOCK_init
 19708  112B                     _CLOCK_init:	
 19709                           
 19710                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 19711                           
 19712                           ;incstack = 0
 19713                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 19714  112B  3025               	movlw	low _CLOCK_timerCallback
 19715  112C  0140               	movlb	0	; select bank0
 19716  112D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 19717  112E  3011               	movlw	high _CLOCK_timerCallback
 19718  112F  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 19719  1130  3191  2157         	fcall	_TMR0_SetInterruptHandler
 19720  1132  0008               	return
 19721  1133                     __end_of_CLOCK_init:	
 19722                           
 19723                           	psect	text67
 19724  1157                     __ptext67:	
 19725 ;; *************** function _TMR0_SetInterruptHandler *****************
 19726 ;; Defined at:
 19727 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 19728 ;; Parameters:    Size  Location     Type
 19729 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19730 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 19731 ;; Auto vars:     Size  Location     Type
 19732 ;;		None
 19733 ;; Return value:  Size  Location     Type
 19734 ;;                  1    wreg      void 
 19735 ;; Registers used:
 19736 ;;		wreg
 19737 ;; Tracked objects:
 19738 ;;		On entry : 0/0
 19739 ;;		On exit  : 0/0
 19740 ;;		Unchanged: 0/0
 19741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19746 ;;Total ram usage:        2 bytes
 19747 ;; Hardware stack levels used:    1
 19748 ;; Hardware stack levels required when called:    4
 19749 ;; This function calls:
 19750 ;;		Nothing
 19751 ;; This function is called by:
 19752 ;;		_TMR0_Initialize
 19753 ;;		_CLOCK_init
 19754 ;; This function uses a non-reentrant model
 19755 ;;
 19756                           
 19757                           
 19758                           ;psect for function _TMR0_SetInterruptHandler
 19759  1157                     _TMR0_SetInterruptHandler:	
 19760                           
 19761                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 19762                           
 19763                           ;incstack = 0
 19764                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 19765  1157  0140               	movlb	0	; select bank0
 19766  1158  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 19767  1159  0142               	movlb	2	; select bank2
 19768  115A  00D8               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 19769  115B  0140               	movlb	0	; select bank0
 19770  115C  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 19771  115D  0142               	movlb	2	; select bank2
 19772  115E  00D7               	movwf	_TMR0_InterruptHandler^(0+256)
 19773  115F  0008               	return
 19774  1160                     __end_of_TMR0_SetInterruptHandler:	
 19775                           
 19776                           	psect	text68
 19777  0F1B                     __ptext68:	
 19778 ;; *************** function _BUTTONS_task *****************
 19779 ;; Defined at:
 19780 ;;		line 56 in file "buttons.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;		None
 19783 ;; Auto vars:     Size  Location     Type
 19784 ;;  btn             1    8[BANK0 ] PTR struct .
 19785 ;;		 -> buttons(32), 
 19786 ;;  i               1    5[BANK0 ] unsigned char 
 19787 ;;  time            2    6[BANK0 ] unsigned short 
 19788 ;; Return value:  Size  Location     Type
 19789 ;;                  1    wreg      void 
 19790 ;; Registers used:
 19791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19792 ;; Tracked objects:
 19793 ;;		On entry : 0/0
 19794 ;;		On exit  : 0/0
 19795 ;;		Unchanged: 0/0
 19796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19798 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19799 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19800 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19801 ;;Total ram usage:        7 bytes
 19802 ;; Hardware stack levels used:    1
 19803 ;; Hardware stack levels required when called:    5
 19804 ;; This function calls:
 19805 ;;		_CLOCK_getTime
 19806 ;; This function is called by:
 19807 ;;		_main
 19808 ;; This function uses a non-reentrant model
 19809 ;;
 19810                           
 19811                           
 19812                           ;psect for function _BUTTONS_task
 19813  0F1B                     _BUTTONS_task:	
 19814                           
 19815                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 19816                           
 19817                           ;incstack = 0
 19818                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19819  0F1B  3191  214E  318F   	fcall	_CLOCK_getTime
 19820  0F1E  0140               	movlb	0	; select bank0
 19821  0F1F  0821               	movf	?_CLOCK_getTime+1,w
 19822  0F20  00A7               	movwf	BUTTONS_task@time+1
 19823  0F21  0820               	movf	?_CLOCK_getTime,w
 19824  0F22  00A6               	movwf	BUTTONS_task@time
 19825                           
 19826                           ;buttons.c: 61:     if (time - lastTime < 10)
 19827  0F23  0142               	movlb	2	; select bank2
 19828  0F24  0846               	movf	_lastTime^(0+256),w
 19829  0F25  0140               	movlb	0	; select bank0
 19830  0F26  0226               	subwf	BUTTONS_task@time,w
 19831  0F27  00A2               	movwf	??_BUTTONS_task
 19832  0F28  0142               	movlb	2	; select bank2
 19833  0F29  0847               	movf	(_lastTime+1)^(0+256),w
 19834  0F2A  0140               	movlb	0	; select bank0
 19835  0F2B  3B27               	subwfb	BUTTONS_task@time+1,w
 19836  0F2C  00A3               	movwf	??_BUTTONS_task+1
 19837  0F2D  3000               	movlw	0
 19838  0F2E  0223               	subwf	??_BUTTONS_task+1,w
 19839  0F2F  300A               	movlw	10
 19840  0F30  1903               	skipnz
 19841  0F31  0222               	subwf	??_BUTTONS_task,w
 19842  0F32  1C03               	btfss	3,0
 19843  0F33  0008               	return
 19844                           
 19845                           ;buttons.c: 64:     lastTime = time;
 19846  0F34  0827               	movf	BUTTONS_task@time+1,w
 19847  0F35  0142               	movlb	2	; select bank2
 19848  0F36  00C7               	movwf	(_lastTime+1)^(0+256)
 19849  0F37  0140               	movlb	0	; select bank0
 19850  0F38  0826               	movf	BUTTONS_task@time,w
 19851  0F39  0142               	movlb	2	; select bank2
 19852  0F3A  00C6               	movwf	_lastTime^(0+256)
 19853                           
 19854                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 19855  0F3B  0140               	movlb	0	; select bank0
 19856  0F3C  01A5               	clrf	BUTTONS_task@i
 19857  0F3D                     l7259:	
 19858                           
 19859                           ;buttons.c: 68:         button_t* btn = buttons + i;
 19860  0F3D  0825               	movf	BUTTONS_task@i,w
 19861  0F3E  00A2               	movwf	??_BUTTONS_task
 19862  0F3F  3002               	movlw	2
 19863  0F40                     u7125:	
 19864  0F40  35A2               	lslf	??_BUTTONS_task,f
 19865  0F41  3EFF               	addlw	-1
 19866  0F42  1D03               	skipz
 19867  0F43  2F40               	goto	u7125
 19868  0F44  3522               	lslf	??_BUTTONS_task,w
 19869  0F45  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 19870  0F46  00A3               	movwf	??_BUTTONS_task+1
 19871  0F47  0823               	movf	??_BUTTONS_task+1,w
 19872  0F48  00A8               	movwf	BUTTONS_task@btn
 19873                           
 19874                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 19875  0F49  0828               	movf	BUTTONS_task@btn,w
 19876  0F4A  0086               	movwf	6
 19877  0F4B  3001               	movlw	1	; select bank2/3
 19878  0F4C  0087               	movwf	7
 19879  0F4D  3F40               	moviw [0]fsr1
 19880  0F4E  00A2               	movwf	??_BUTTONS_task
 19881  0F4F  3F41               	moviw [1]fsr1
 19882  0F50  00A3               	movwf	??_BUTTONS_task+1
 19883  0F51  0822               	movf	??_BUTTONS_task,w
 19884  0F52  0086               	movwf	6
 19885  0F53  0823               	movf	??_BUTTONS_task+1,w
 19886  0F54  0087               	movwf	7
 19887  0F55  3001               	movlw	1
 19888  0F56  00A4               	movwf	??_BUTTONS_task+2
 19889  0F57  0828               	movf	BUTTONS_task@btn,w
 19890  0F58  3E02               	addlw	2
 19891  0F59  0084               	movwf	4
 19892  0F5A  3001               	movlw	1	; select bank2/3
 19893  0F5B  0085               	movwf	5
 19894  0F5C  0A00               	incf	0,w
 19895  0F5D  2F5F               	goto	u7134
 19896  0F5E                     u7135:	
 19897  0F5E  35A4               	lslf	??_BUTTONS_task+2,f
 19898  0F5F                     u7134:	
 19899  0F5F  0B89               	decfsz	9,f
 19900  0F60  2F5E               	goto	u7135
 19901  0F61  0824               	movf	??_BUTTONS_task+2,w
 19902  0F62  0501               	andwf	1,w
 19903  0F63  1D03               	btfss	3,2
 19904  0F64  2F7E               	goto	l7267
 19905                           
 19906                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 19907  0F65  0828               	movf	BUTTONS_task@btn,w
 19908  0F66  3E03               	addlw	3
 19909  0F67  0086               	movwf	6
 19910  0F68  3001               	movlw	1	; select bank2/3
 19911  0F69  0087               	movwf	7
 19912  0F6A  0181               	clrf	1
 19913  0F6B  0A81               	incf	1,f
 19914                           
 19915                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 19916  0F6C  0828               	movf	BUTTONS_task@btn,w
 19917  0F6D  3E07               	addlw	7
 19918  0F6E  0086               	movwf	6
 19919  0F6F  3001               	movlw	1	; select bank2/3
 19920  0F70  0087               	movwf	7
 19921  0F71  0801               	movf	1,w
 19922  0F72  1D03               	btfss	3,2
 19923  0F73  2F84               	goto	l909
 19924                           
 19925                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 19926  0F74  0828               	movf	BUTTONS_task@btn,w
 19927  0F75  3E05               	addlw	5
 19928  0F76  0086               	movwf	6
 19929  0F77  3001               	movlw	1	; select bank2/3
 19930  0F78  0087               	movwf	7
 19931  0F79  0826               	movf	BUTTONS_task@time,w
 19932  0F7A  3FC0               	movwi [0]fsr1
 19933  0F7B  0827               	movf	BUTTONS_task@time+1,w
 19934  0F7C  3FC1               	movwi [1]fsr1
 19935  0F7D  2F84               	goto	l909
 19936  0F7E                     l7267:	
 19937                           
 19938                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 19939  0F7E  0828               	movf	BUTTONS_task@btn,w
 19940  0F7F  3E03               	addlw	3
 19941  0F80  0086               	movwf	6
 19942  0F81  3001               	movlw	1	; select bank2/3
 19943  0F82  0087               	movwf	7
 19944  0F83  0181               	clrf	1
 19945  0F84                     l909:	
 19946                           ;buttons.c: 78:         }
 19947                           
 19948                           
 19949                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 19950  0F84  0828               	movf	BUTTONS_task@btn,w
 19951  0F85  3E03               	addlw	3
 19952  0F86  0086               	movwf	6
 19953  0F87  3001               	movlw	1	; select bank2/3
 19954  0F88  0087               	movwf	7
 19955  0F89  0801               	movf	1,w
 19956  0F8A  1D03               	btfss	3,2
 19957  0F8B  2F9C               	goto	l7273
 19958  0F8C  0828               	movf	BUTTONS_task@btn,w
 19959  0F8D  3E04               	addlw	4
 19960  0F8E  0086               	movwf	6
 19961  0F8F  3001               	movlw	1	; select bank2/3
 19962  0F90  0087               	movwf	7
 19963  0F91  0301               	decf	1,w
 19964  0F92  1D03               	btfss	3,2
 19965  0F93  2F9C               	goto	l7273
 19966                           
 19967                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 19968  0F94  0828               	movf	BUTTONS_task@btn,w
 19969  0F95  3E07               	addlw	7
 19970  0F96  0086               	movwf	6
 19971  0F97  3001               	movlw	1	; select bank2/3
 19972  0F98  0087               	movwf	7
 19973  0F99  0181               	clrf	1
 19974  0F9A  0A81               	incf	1,f
 19975                           
 19976                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 19977  0F9B  2FE9               	goto	l911
 19978  0F9C                     l7273:	
 19979  0F9C  0828               	movf	BUTTONS_task@btn,w
 19980  0F9D  3E03               	addlw	3
 19981  0F9E  0086               	movwf	6
 19982  0F9F  3001               	movlw	1	; select bank2/3
 19983  0FA0  0087               	movwf	7
 19984  0FA1  0301               	decf	1,w
 19985  0FA2  1D03               	btfss	3,2
 19986  0FA3  2FCA               	goto	l7283
 19987  0FA4  0828               	movf	BUTTONS_task@btn,w
 19988  0FA5  3E04               	addlw	4
 19989  0FA6  0086               	movwf	6
 19990  0FA7  3001               	movlw	1	; select bank2/3
 19991  0FA8  0087               	movwf	7
 19992  0FA9  0301               	decf	1,w
 19993  0FAA  1D03               	btfss	3,2
 19994  0FAB  2FCA               	goto	l7283
 19995                           
 19996                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 19997  0FAC  0828               	movf	BUTTONS_task@btn,w
 19998  0FAD  3E05               	addlw	5
 19999  0FAE  0086               	movwf	6
 20000  0FAF  3001               	movlw	1	; select bank2/3
 20001  0FB0  0087               	movwf	7
 20002  0FB1  3F40               	moviw [0]fsr1
 20003  0FB2  0226               	subwf	BUTTONS_task@time,w
 20004  0FB3  00A2               	movwf	??_BUTTONS_task
 20005  0FB4  3F41               	moviw [1]fsr1
 20006  0FB5  3B27               	subwfb	BUTTONS_task@time+1,w
 20007  0FB6  00A3               	movwf	??_BUTTONS_task+1
 20008  0FB7  3000               	movlw	0
 20009  0FB8  0223               	subwf	??_BUTTONS_task+1,w
 20010  0FB9  30C9               	movlw	201
 20011  0FBA  1903               	skipnz
 20012  0FBB  0222               	subwf	??_BUTTONS_task,w
 20013  0FBC  1C03               	skipc
 20014  0FBD  2FC0               	goto	l7281
 20015                           
 20016                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 20017  0FBE  3003               	movlw	3
 20018  0FBF  2FC1               	goto	L19
 20019  0FC0                     l7281:	
 20020                           ;buttons.c: 86:             } else {
 20021                           
 20022                           
 20023                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 20024  0FC0  3002               	movlw	2
 20025  0FC1                     L19:	
 20026  0FC1  00A2               	movwf	??_BUTTONS_task
 20027  0FC2  0828               	movf	BUTTONS_task@btn,w
 20028  0FC3  3E07               	addlw	7
 20029  0FC4  0086               	movwf	6
 20030  0FC5  3001               	movlw	1	; select bank2/3
 20031  0FC6  0087               	movwf	7
 20032  0FC7  0822               	movf	??_BUTTONS_task,w
 20033  0FC8  0081               	movwf	1
 20034  0FC9  2FE9               	goto	l911
 20035  0FCA                     l7283:	
 20036  0FCA  0828               	movf	BUTTONS_task@btn,w
 20037  0FCB  3E03               	addlw	3
 20038  0FCC  0086               	movwf	6
 20039  0FCD  3001               	movlw	1	; select bank2/3
 20040  0FCE  0087               	movwf	7
 20041  0FCF  0801               	movf	1,w
 20042  0FD0  1D03               	btfss	3,2
 20043  0FD1  2FE9               	goto	l911
 20044  0FD2  0828               	movf	BUTTONS_task@btn,w
 20045  0FD3  3E04               	addlw	4
 20046  0FD4  0086               	movwf	6
 20047  0FD5  3001               	movlw	1	; select bank2/3
 20048  0FD6  0087               	movwf	7
 20049  0FD7  0301               	decf	1,w
 20050  0FD8  1D03               	btfss	3,2
 20051  0FD9  2FE9               	goto	l911
 20052  0FDA  0828               	movf	BUTTONS_task@btn,w
 20053  0FDB  3E07               	addlw	7
 20054  0FDC  0086               	movwf	6
 20055  0FDD  3001               	movlw	1	; select bank2/3
 20056  0FDE  0087               	movwf	7
 20057  0FDF  3003               	movlw	3
 20058  0FE0  0601               	xorwf	1,w
 20059  0FE1  1D03               	btfss	3,2
 20060  0FE2  2FE9               	goto	l911
 20061                           
 20062                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 20063  0FE3  0828               	movf	BUTTONS_task@btn,w
 20064  0FE4  3E07               	addlw	7
 20065  0FE5  0086               	movwf	6
 20066  0FE6  3001               	movlw	1	; select bank2/3
 20067  0FE7  0087               	movwf	7
 20068  0FE8  0181               	clrf	1
 20069  0FE9                     l911:	
 20070                           
 20071                           ;buttons.c: 93:         btn->lastState = btn->state;
 20072  0FE9  0828               	movf	BUTTONS_task@btn,w
 20073  0FEA  3E03               	addlw	3
 20074  0FEB  0086               	movwf	6
 20075  0FEC  3001               	movlw	1	; select bank2/3
 20076  0FED  0087               	movwf	7
 20077  0FEE  0801               	movf	1,w
 20078  0FEF  00A2               	movwf	??_BUTTONS_task
 20079  0FF0  0828               	movf	BUTTONS_task@btn,w
 20080  0FF1  3E04               	addlw	4
 20081  0FF2  0086               	movwf	6
 20082  0FF3  3001               	movlw	1	; select bank2/3
 20083  0FF4  0087               	movwf	7
 20084  0FF5  0822               	movf	??_BUTTONS_task,w
 20085  0FF6  0081               	movwf	1
 20086                           
 20087                           ;buttons.c: 94:     }
 20088  0FF7  3001               	movlw	1
 20089  0FF8  00A2               	movwf	??_BUTTONS_task
 20090  0FF9  0822               	movf	??_BUTTONS_task,w
 20091  0FFA  07A5               	addwf	BUTTONS_task@i,f
 20092  0FFB  3004               	movlw	4
 20093  0FFC  0225               	subwf	BUTTONS_task@i,w
 20094  0FFD  1803               	btfsc	3,0
 20095  0FFE  0008               	return
 20096  0FFF  2F3D               	goto	l7259
 20097  1000                     __end_of_BUTTONS_task:	
 20098                           
 20099                           	psect	text69
 20100  175F                     __ptext69:	
 20101 ;; *************** function _BUTTONS_init *****************
 20102 ;; Defined at:
 20103 ;;		line 23 in file "buttons.c"
 20104 ;; Parameters:    Size  Location     Type
 20105 ;;		None
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;		None
 20108 ;; Return value:  Size  Location     Type
 20109 ;;                  1    wreg      void 
 20110 ;; Registers used:
 20111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20112 ;; Tracked objects:
 20113 ;;		On entry : 0/0
 20114 ;;		On exit  : 0/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20119 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20121 ;;Total ram usage:        1 bytes
 20122 ;; Hardware stack levels used:    1
 20123 ;; Hardware stack levels required when called:    5
 20124 ;; This function calls:
 20125 ;;		_GPIO_init
 20126 ;;		_init
 20127 ;; This function is called by:
 20128 ;;		_main
 20129 ;; This function uses a non-reentrant model
 20130 ;;
 20131                           
 20132                           
 20133                           ;psect for function _BUTTONS_init
 20134  175F                     _BUTTONS_init:	
 20135                           
 20136                           ;buttons.c: 24:     menu = &buttons[0];
 20137                           
 20138                           ;incstack = 0
 20139                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20140  175F  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 20141  1760  0140               	movlb	0	; select bank0
 20142  1761  00A5               	movwf	??_BUTTONS_init
 20143  1762  0825               	movf	??_BUTTONS_init,w
 20144  1763  0141               	movlb	1	; select bank1
 20145  1764  00DD               	movwf	_menu^(0+128)
 20146                           
 20147                           ;buttons.c: 25:     up = &buttons[1];
 20148  1765  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 20149  1766  0140               	movlb	0	; select bank0
 20150  1767  00A5               	movwf	??_BUTTONS_init
 20151  1768  0825               	movf	??_BUTTONS_init,w
 20152  1769  0141               	movlb	1	; select bank1
 20153  176A  00DC               	movwf	_up^(0+128)
 20154                           
 20155                           ;buttons.c: 26:     down = &buttons[2];
 20156  176B  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 20157  176C  0140               	movlb	0	; select bank0
 20158  176D  00A5               	movwf	??_BUTTONS_init
 20159  176E  0825               	movf	??_BUTTONS_init,w
 20160  176F  0141               	movlb	1	; select bank1
 20161  1770  00DB               	movwf	_down^(0+128)
 20162                           
 20163                           ;buttons.c: 27:     enter = &buttons[3];
 20164  1771  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 20165  1772  0140               	movlb	0	; select bank0
 20166  1773  00A5               	movwf	??_BUTTONS_init
 20167  1774  0825               	movf	??_BUTTONS_init,w
 20168  1775  0141               	movlb	1	; select bank1
 20169  1776  00DA               	movwf	_enter^(0+128)
 20170                           
 20171                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 20172  1777  300E               	movlw	14
 20173  1778  0140               	movlb	0	; select bank0
 20174  1779  00A0               	movwf	init@port
 20175  177A  3000               	movlw	0
 20176  177B  00A1               	movwf	init@port+1
 20177  177C  3002               	movlw	2
 20178  177D  00A5               	movwf	??_BUTTONS_init
 20179  177E  0825               	movf	??_BUTTONS_init,w
 20180  177F  00A2               	movwf	init@pin
 20181  1780  0141               	movlb	1	; select bank1
 20182  1781  085D               	movf	_menu^(0+128),w
 20183  1782  3194  2400  3197   	fcall	_init
 20184                           
 20185                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 20186  1785  300C               	movlw	12
 20187  1786  0140               	movlb	0	; select bank0
 20188  1787  00A0               	movwf	init@port
 20189  1788  3000               	movlw	0
 20190  1789  00A1               	movwf	init@port+1
 20191  178A  3002               	movlw	2
 20192  178B  00A5               	movwf	??_BUTTONS_init
 20193  178C  0825               	movf	??_BUTTONS_init,w
 20194  178D  00A2               	movwf	init@pin
 20195  178E  0141               	movlb	1	; select bank1
 20196  178F  085A               	movf	_enter^(0+128),w
 20197  1790  3194  2400  3197   	fcall	_init
 20198                           
 20199                           ;buttons.c: 31:     init(down, &PORTC, 0);
 20200  1793  300E               	movlw	14
 20201  1794  0140               	movlb	0	; select bank0
 20202  1795  00A0               	movwf	init@port
 20203  1796  3000               	movlw	0
 20204  1797  00A1               	movwf	init@port+1
 20205  1798  01A2               	clrf	init@pin
 20206  1799  0141               	movlb	1	; select bank1
 20207  179A  085B               	movf	_down^(0+128),w
 20208  179B  3194  2400  3197   	fcall	_init
 20209                           
 20210                           ;buttons.c: 32:     init(up, &PORTC, 1);
 20211  179E  300E               	movlw	14
 20212  179F  0140               	movlb	0	; select bank0
 20213  17A0  00A0               	movwf	init@port
 20214  17A1  3000               	movlw	0
 20215  17A2  00A1               	movwf	init@port+1
 20216  17A3  01A2               	clrf	init@pin
 20217  17A4  0AA2               	incf	init@pin,f
 20218  17A5  0141               	movlb	1	; select bank1
 20219  17A6  085C               	movf	_up^(0+128),w
 20220  17A7  3194  2400  3197   	fcall	_init
 20221                           
 20222                           ;buttons.c: 34:     GPIO_init();
 20223  17AA  3192  2236         	fcall	_GPIO_init
 20224  17AC  0008               	return
 20225  17AD                     __end_of_BUTTONS_init:	
 20226                           
 20227                           	psect	text70
 20228  1400                     __ptext70:	
 20229 ;; *************** function _init *****************
 20230 ;; Defined at:
 20231 ;;		line 16 in file "buttons.c"
 20232 ;; Parameters:    Size  Location     Type
 20233 ;;  btn             1    wreg     PTR struct .
 20234 ;;		 -> buttons(32), NULL(0), 
 20235 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 20236 ;;		 -> PORTA(1), PORTC(1), 
 20237 ;;  pin             1    2[BANK0 ] unsigned char 
 20238 ;; Auto vars:     Size  Location     Type
 20239 ;;  btn             1    4[BANK0 ] PTR struct .
 20240 ;;		 -> buttons(32), NULL(0), 
 20241 ;; Return value:  Size  Location     Type
 20242 ;;                  1    wreg      void 
 20243 ;; Registers used:
 20244 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20245 ;; Tracked objects:
 20246 ;;		On entry : 0/0
 20247 ;;		On exit  : 0/0
 20248 ;;		Unchanged: 0/0
 20249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20250 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20253 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20254 ;;Total ram usage:        5 bytes
 20255 ;; Hardware stack levels used:    1
 20256 ;; Hardware stack levels required when called:    4
 20257 ;; This function calls:
 20258 ;;		Nothing
 20259 ;; This function is called by:
 20260 ;;		_BUTTONS_init
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           
 20265                           ;psect for function _init
 20266  1400                     _init:	
 20267                           
 20268                           ;incstack = 0
 20269                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 20270                           ;init@btn stored from wreg
 20271  1400  0140               	movlb	0	; select bank0
 20272  1401  00A4               	movwf	init@btn
 20273                           
 20274                           ;buttons.c: 17:     btn->port = port;
 20275  1402  0824               	movf	init@btn,w
 20276  1403  0086               	movwf	6
 20277  1404  3001               	movlw	1	; select bank2/3
 20278  1405  0087               	movwf	7
 20279  1406  0820               	movf	init@port,w
 20280  1407  3FC0               	movwi [0]fsr1
 20281  1408  0821               	movf	init@port+1,w
 20282  1409  3FC1               	movwi [1]fsr1
 20283                           
 20284                           ;buttons.c: 18:     btn->pin = pin;
 20285  140A  0822               	movf	init@pin,w
 20286  140B  00A3               	movwf	??_init
 20287  140C  0824               	movf	init@btn,w
 20288  140D  3E02               	addlw	2
 20289  140E  0086               	movwf	6
 20290  140F  3001               	movlw	1	; select bank2/3
 20291  1410  0087               	movwf	7
 20292  1411  0823               	movf	??_init,w
 20293  1412  0081               	movwf	1
 20294                           
 20295                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 20296  1413  0824               	movf	init@btn,w
 20297  1414  3E03               	addlw	3
 20298  1415  0086               	movwf	6
 20299  1416  3001               	movlw	1	; select bank2/3
 20300  1417  0087               	movwf	7
 20301  1418  0181               	clrf	1
 20302                           
 20303                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 20304  1419  0824               	movf	init@btn,w
 20305  141A  3E07               	addlw	7
 20306  141B  0086               	movwf	6
 20307  141C  3001               	movlw	1	; select bank2/3
 20308  141D  0087               	movwf	7
 20309  141E  0181               	clrf	1
 20310  141F  0008               	return
 20311  1420                     __end_of_init:	
 20312                           
 20313                           	psect	text71
 20314  1236                     __ptext71:	
 20315 ;; *************** function _GPIO_init *****************
 20316 ;; Defined at:
 20317 ;;		line 38 in file "buttons.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;		None
 20320 ;; Auto vars:     Size  Location     Type
 20321 ;;		None
 20322 ;; Return value:  Size  Location     Type
 20323 ;;                  1    wreg      void 
 20324 ;; Registers used:
 20325 ;;		None
 20326 ;; Tracked objects:
 20327 ;;		On entry : 0/0
 20328 ;;		On exit  : 0/0
 20329 ;;		Unchanged: 0/0
 20330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20335 ;;Total ram usage:        0 bytes
 20336 ;; Hardware stack levels used:    1
 20337 ;; Hardware stack levels required when called:    4
 20338 ;; This function calls:
 20339 ;;		Nothing
 20340 ;; This function is called by:
 20341 ;;		_BUTTONS_init
 20342 ;; This function uses a non-reentrant model
 20343 ;;
 20344                           
 20345                           
 20346                           ;psect for function _GPIO_init
 20347  1236                     _GPIO_init:	
 20348                           
 20349                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 20350                           
 20351                           ;incstack = 0
 20352                           ; Regs used in _GPIO_init: []
 20353  1236  0140               	movlb	0	; select bank0
 20354  1237  1512               	bsf	18,2	;volatile
 20355                           
 20356                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 20357  1238  017E               	movlb	62	; select bank62
 20358  1239  1138               	bcf	56,2	;volatile
 20359                           
 20360                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 20361  123A  1539               	bsf	57,2	;volatile
 20362                           
 20363                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 20364  123B  0140               	movlb	0	; select bank0
 20365  123C  1414               	bsf	20,0	;volatile
 20366                           
 20367                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 20368  123D  1494               	bsf	20,1	;volatile
 20369                           
 20370                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 20371  123E  1514               	bsf	20,2	;volatile
 20372                           
 20373                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 20374  123F  017E               	movlb	62	; select bank62
 20375  1240  104E               	bcf	78,0	;volatile
 20376                           
 20377                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 20378  1241  10CE               	bcf	78,1	;volatile
 20379                           
 20380                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 20381  1242  114E               	bcf	78,2	;volatile
 20382                           
 20383                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 20384  1243  144F               	bsf	79,0	;volatile
 20385                           
 20386                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 20387  1244  14CF               	bsf	79,1	;volatile
 20388                           
 20389                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 20390  1245  154F               	bsf	79,2	;volatile
 20391  1246  0008               	return
 20392  1247                     __end_of_GPIO_init:	
 20393                           
 20394                           	psect	text72
 20395  0D78                     __ptext72:	
 20396 ;; *************** function _BEAT_task *****************
 20397 ;; Defined at:
 20398 ;;		line 65 in file "beat.c"
 20399 ;; Parameters:    Size  Location     Type
 20400 ;;		None
 20401 ;; Auto vars:     Size  Location     Type
 20402 ;;  offset          2   10[BANK0 ] unsigned short 
 20403 ;; Return value:  Size  Location     Type
 20404 ;;                  1    wreg      void 
 20405 ;; Registers used:
 20406 ;;		wreg, status,2, status,0, pclath, cstack
 20407 ;; Tracked objects:
 20408 ;;		On entry : 0/0
 20409 ;;		On exit  : 0/0
 20410 ;;		Unchanged: 0/0
 20411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20413 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20415 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20416 ;;Total ram usage:        4 bytes
 20417 ;; Hardware stack levels used:    1
 20418 ;; Hardware stack levels required when called:    5
 20419 ;; This function calls:
 20420 ;;		_ADCC_SetUpperThreshold
 20421 ;;		_CLOCK_getTime
 20422 ;;		___lwdiv
 20423 ;; This function is called by:
 20424 ;;		_main
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           
 20429                           ;psect for function _BEAT_task
 20430  0D78                     _BEAT_task:	
 20431                           
 20432                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 20433                           
 20434                           ;incstack = 0
 20435                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 20436  0D78  3191  214E  318D   	fcall	_CLOCK_getTime
 20437  0D7B  0142               	movlb	2	; select bank2
 20438  0D7C  083C               	movf	_lastRun^(0+256),w
 20439  0D7D  0140               	movlb	0	; select bank0
 20440  0D7E  0220               	subwf	?_CLOCK_getTime,w
 20441  0D7F  00A8               	movwf	??_BEAT_task
 20442  0D80  0142               	movlb	2	; select bank2
 20443  0D81  083D               	movf	(_lastRun+1)^(0+256),w
 20444  0D82  0140               	movlb	0	; select bank0
 20445  0D83  3B21               	subwfb	?_CLOCK_getTime+1,w
 20446  0D84  00A9               	movwf	??_BEAT_task+1
 20447  0D85  0142               	movlb	2	; select bank2
 20448  0D86  086A               	movf	(_delay+1)^(0+256),w
 20449  0D87  0140               	movlb	0	; select bank0
 20450  0D88  0229               	subwf	??_BEAT_task+1,w
 20451  0D89  1D03               	skipz
 20452  0D8A  2D8F               	goto	u7495
 20453  0D8B  0142               	movlb	2	; select bank2
 20454  0D8C  0869               	movf	_delay^(0+256),w
 20455  0D8D  0140               	movlb	0	; select bank0
 20456  0D8E  0228               	subwf	??_BEAT_task,w
 20457  0D8F                     u7495:	
 20458  0D8F  1C03               	btfss	3,0
 20459  0D90  0008               	return
 20460                           
 20461                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 20462  0D91  3191  214E  318D   	fcall	_CLOCK_getTime
 20463  0D94  0140               	movlb	0	; select bank0
 20464  0D95  0821               	movf	?_CLOCK_getTime+1,w
 20465  0D96  0142               	movlb	2	; select bank2
 20466  0D97  00BD               	movwf	(_lastRun+1)^(0+256)
 20467  0D98  0140               	movlb	0	; select bank0
 20468  0D99  0820               	movf	?_CLOCK_getTime,w
 20469  0D9A  0142               	movlb	2	; select bank2
 20470  0D9B  00BC               	movwf	_lastRun^(0+256)
 20471                           
 20472                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 20473  0D9C  0370               	decf	_thresholdExceeded,w
 20474  0D9D  1D03               	btfss	3,2
 20475  0D9E  2DA4               	goto	l7401
 20476                           
 20477                           ;beat.c: 77:         thresholdCount++;
 20478  0D9F  3001               	movlw	1
 20479  0DA0  07BA               	addwf	_thresholdCount^(0+256),f
 20480  0DA1  3000               	movlw	0
 20481  0DA2  3DBB               	addwfc	(_thresholdCount+1)^(0+256),f
 20482                           
 20483                           ;beat.c: 78:     } else {
 20484  0DA3  2DAA               	goto	l7405
 20485  0DA4                     l7401:	
 20486                           
 20487                           ;beat.c: 80:         thresholdCount = 0;
 20488  0DA4  01BA               	clrf	_thresholdCount^(0+256)
 20489  0DA5  01BB               	clrf	(_thresholdCount+1)^(0+256)
 20490                           
 20491                           ;beat.c: 81:         delay = 10;
 20492  0DA6  300A               	movlw	10
 20493  0DA7  00E9               	movwf	_delay^(0+256)
 20494  0DA8  3000               	movlw	0
 20495  0DA9  00EA               	movwf	(_delay^(0+256)+1)
 20496  0DAA                     l7405:	
 20497                           
 20498                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 20499  0DAA  0370               	decf	_thresholdExceeded,w
 20500  0DAB  1D03               	btfss	3,2
 20501  0DAC  2DF1               	goto	l7423
 20502  0DAD  0141               	movlb	1	; select bank1
 20503  0DAE  0850               	movf	_lastDetected^(0+128),w
 20504  0DAF  1D03               	btfss	3,2
 20505  0DB0  2DF1               	goto	l7423
 20506                           
 20507                           ;beat.c: 89:         detected = 1;
 20508  0DB1  01D1               	clrf	_detected^(0+128)
 20509  0DB2  0AD1               	incf	_detected^(0+128),f
 20510                           
 20511                           ;beat.c: 92:         delay = 15;
 20512  0DB3  300F               	movlw	15
 20513  0DB4  0142               	movlb	2	; select bank2
 20514  0DB5  00E9               	movwf	_delay^(0+256)
 20515  0DB6  3000               	movlw	0
 20516  0DB7  00EA               	movwf	(_delay^(0+256)+1)
 20517                           
 20518                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 20519  0DB8  3191  214E  318D   	fcall	_CLOCK_getTime
 20520  0DBB  0142               	movlb	2	; select bank2
 20521  0DBC  0840               	movf	_lastBeat^(0+256),w
 20522  0DBD  0140               	movlb	0	; select bank0
 20523  0DBE  0220               	subwf	?_CLOCK_getTime,w
 20524  0DBF  00AA               	movwf	BEAT_task@offset
 20525  0DC0  0142               	movlb	2	; select bank2
 20526  0DC1  0841               	movf	(_lastBeat+1)^(0+256),w
 20527  0DC2  0140               	movlb	0	; select bank0
 20528  0DC3  3B21               	subwfb	?_CLOCK_getTime+1,w
 20529  0DC4  00AB               	movwf	BEAT_task@offset+1
 20530                           
 20531                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 20532  0DC5  3191  214E  318D   	fcall	_CLOCK_getTime
 20533  0DC8  0140               	movlb	0	; select bank0
 20534  0DC9  0821               	movf	?_CLOCK_getTime+1,w
 20535  0DCA  0142               	movlb	2	; select bank2
 20536  0DCB  00C1               	movwf	(_lastBeat+1)^(0+256)
 20537  0DCC  0140               	movlb	0	; select bank0
 20538  0DCD  0820               	movf	?_CLOCK_getTime,w
 20539  0DCE  0142               	movlb	2	; select bank2
 20540  0DCF  00C0               	movwf	_lastBeat^(0+256)
 20541                           
 20542                           ;beat.c: 99:         if (offset < 150)
 20543  0DD0  3000               	movlw	0
 20544  0DD1  0140               	movlb	0	; select bank0
 20545  0DD2  022B               	subwf	BEAT_task@offset+1,w
 20546  0DD3  3096               	movlw	150
 20547  0DD4  1903               	skipnz
 20548  0DD5  022A               	subwf	BEAT_task@offset,w
 20549  0DD6  1803               	skipnc
 20550  0DD7  2DDE               	goto	l7421
 20551                           
 20552                           ;beat.c: 100:             bpm = 400;
 20553  0DD8  3090               	movlw	144
 20554  0DD9  0142               	movlb	2	; select bank2
 20555  0DDA  00BE               	movwf	_bpm^(0+256)
 20556  0DDB  3001               	movlw	1
 20557  0DDC  00BF               	movwf	(_bpm^(0+256)+1)
 20558  0DDD  2DF1               	goto	l7423
 20559  0DDE                     l7421:	
 20560                           
 20561                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 20562  0DDE  082B               	movf	BEAT_task@offset+1,w
 20563  0DDF  00A1               	movwf	___lwdiv@divisor+1
 20564  0DE0  082A               	movf	BEAT_task@offset,w
 20565  0DE1  00A0               	movwf	___lwdiv@divisor
 20566  0DE2  3060               	movlw	96
 20567  0DE3  00A2               	movwf	___lwdiv@dividend
 20568  0DE4  30EA               	movlw	234
 20569  0DE5  00A3               	movwf	___lwdiv@dividend+1
 20570  0DE6  3196  264C  318D   	fcall	___lwdiv
 20571  0DE9  0140               	movlb	0	; select bank0
 20572  0DEA  0821               	movf	?___lwdiv+1,w
 20573  0DEB  0142               	movlb	2	; select bank2
 20574  0DEC  00BF               	movwf	(_bpm+1)^(0+256)
 20575  0DED  0140               	movlb	0	; select bank0
 20576  0DEE  0820               	movf	?___lwdiv,w
 20577  0DEF  0142               	movlb	2	; select bank2
 20578  0DF0  00BE               	movwf	_bpm^(0+256)
 20579  0DF1                     l7423:	
 20580                           
 20581                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 20582  0DF1  0870               	movf	_thresholdExceeded,w
 20583  0DF2  0140               	movlb	0	; select bank0
 20584  0DF3  00A8               	movwf	??_BEAT_task
 20585  0DF4  0828               	movf	??_BEAT_task,w
 20586  0DF5  0141               	movlb	1	; select bank1
 20587  0DF6  00D0               	movwf	_lastDetected^(0+128)
 20588                           
 20589                           ;beat.c: 109:     thresholdExceeded = 0;
 20590  0DF7  01F0               	clrf	_thresholdExceeded
 20591                           
 20592                           ;beat.c: 111:     if (thresholdCount > 3) {
 20593  0DF8  0142               	movlb	2	; select bank2
 20594  0DF9  083B               	movf	(_thresholdCount+1)^(0+256),w
 20595  0DFA  3A80               	xorlw	128
 20596  0DFB  0140               	movlb	0	; select bank0
 20597  0DFC  00A8               	movwf	??_BEAT_task
 20598  0DFD  3080               	movlw	128
 20599  0DFE  0228               	subwf	??_BEAT_task,w
 20600  0DFF  1D03               	skipz
 20601  0E00  2E04               	goto	u7545
 20602  0E01  3004               	movlw	4
 20603  0E02  0142               	movlb	2	; select bank2
 20604  0E03  023A               	subwf	_thresholdCount^(0+256),w
 20605  0E04                     u7545:	
 20606  0E04  1C03               	skipc
 20607  0E05  2E23               	goto	l7437
 20608                           
 20609                           ;beat.c: 112:         threshold += 1;
 20610  0E06  3001               	movlw	1
 20611  0E07  0141               	movlb	1	; select bank1
 20612  0E08  07E5               	addwf	_threshold^(0+128),f
 20613  0E09  3000               	movlw	0
 20614  0E0A  3DE6               	addwfc	(_threshold+1)^(0+128),f
 20615                           
 20616                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 20617  0E0B  0866               	movf	(_threshold+1)^(0+128),w
 20618  0E0C  0140               	movlb	0	; select bank0
 20619  0E0D  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20620  0E0E  0141               	movlb	1	; select bank1
 20621  0E0F  0865               	movf	_threshold^(0+128),w
 20622  0E10  0140               	movlb	0	; select bank0
 20623  0E11  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20624  0E12  3191  213C  318D   	fcall	_ADCC_SetUpperThreshold
 20625                           
 20626                           ;beat.c: 114:         thresholdCount = 0;
 20627  0E15  0142               	movlb	2	; select bank2
 20628  0E16  01BA               	clrf	_thresholdCount^(0+256)
 20629  0E17  01BB               	clrf	(_thresholdCount+1)^(0+256)
 20630                           
 20631                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 20632  0E18  3191  214E         	fcall	_CLOCK_getTime
 20633  0E1A  0140               	movlb	0	; select bank0
 20634  0E1B  0821               	movf	?_CLOCK_getTime+1,w
 20635  0E1C  0142               	movlb	2	; select bank2
 20636  0E1D  00C1               	movwf	(_lastBeat+1)^(0+256)
 20637  0E1E  0140               	movlb	0	; select bank0
 20638  0E1F  0820               	movf	?_CLOCK_getTime,w
 20639  0E20  0142               	movlb	2	; select bank2
 20640  0E21  00C0               	movwf	_lastBeat^(0+256)
 20641                           
 20642                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 20643  0E22  0008               	return
 20644  0E23                     l7437:	
 20645  0E23  3191  214E  318D   	fcall	_CLOCK_getTime
 20646  0E26  0142               	movlb	2	; select bank2
 20647  0E27  0840               	movf	_lastBeat^(0+256),w
 20648  0E28  0140               	movlb	0	; select bank0
 20649  0E29  0220               	subwf	?_CLOCK_getTime,w
 20650  0E2A  00A8               	movwf	??_BEAT_task
 20651  0E2B  0142               	movlb	2	; select bank2
 20652  0E2C  0841               	movf	(_lastBeat+1)^(0+256),w
 20653  0E2D  0140               	movlb	0	; select bank0
 20654  0E2E  3B21               	subwfb	?_CLOCK_getTime+1,w
 20655  0E2F  00A9               	movwf	??_BEAT_task+1
 20656  0E30  3003               	movlw	3
 20657  0E31  0229               	subwf	??_BEAT_task+1,w
 20658  0E32  30E9               	movlw	233
 20659  0E33  1903               	skipnz
 20660  0E34  0228               	subwf	??_BEAT_task,w
 20661  0E35  1C03               	skipc
 20662  0E36  0008               	return
 20663                           
 20664                           ;beat.c: 119:         threshold -= 1;
 20665  0E37  3001               	movlw	1
 20666  0E38  0141               	movlb	1	; select bank1
 20667  0E39  02E5               	subwf	_threshold^(0+128),f
 20668  0E3A  3000               	movlw	0
 20669  0E3B  3BE6               	subwfb	(_threshold+1)^(0+128),f
 20670                           
 20671                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 20672  0E3C  0866               	movf	(_threshold+1)^(0+128),w
 20673  0E3D  0140               	movlb	0	; select bank0
 20674  0E3E  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20675  0E3F  0141               	movlb	1	; select bank1
 20676  0E40  0865               	movf	_threshold^(0+128),w
 20677  0E41  0140               	movlb	0	; select bank0
 20678  0E42  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20679  0E43  3191  213C         	fcall	_ADCC_SetUpperThreshold
 20680  0E45  0008               	return
 20681  0E46                     __end_of_BEAT_task:	
 20682                           
 20683                           	psect	text73
 20684  164C                     __ptext73:	
 20685 ;; *************** function ___lwdiv *****************
 20686 ;; Defined at:
 20687 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 20688 ;; Parameters:    Size  Location     Type
 20689 ;;  divisor         2    0[BANK0 ] unsigned int 
 20690 ;;  dividend        2    2[BANK0 ] unsigned int 
 20691 ;; Auto vars:     Size  Location     Type
 20692 ;;  quotient        2    5[BANK0 ] unsigned int 
 20693 ;;  counter         1    7[BANK0 ] unsigned char 
 20694 ;; Return value:  Size  Location     Type
 20695 ;;                  2    0[BANK0 ] unsigned int 
 20696 ;; Registers used:
 20697 ;;		wreg, status,2, status,0
 20698 ;; Tracked objects:
 20699 ;;		On entry : 0/0
 20700 ;;		On exit  : 0/0
 20701 ;;		Unchanged: 0/0
 20702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20704 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20706 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20707 ;;Total ram usage:        8 bytes
 20708 ;; Hardware stack levels used:    1
 20709 ;; Hardware stack levels required when called:    4
 20710 ;; This function calls:
 20711 ;;		Nothing
 20712 ;; This function is called by:
 20713 ;;		_TM1650_fastPrintNum
 20714 ;;		_BEAT_task
 20715 ;; This function uses a non-reentrant model
 20716 ;;
 20717                           
 20718                           
 20719                           ;psect for function ___lwdiv
 20720  164C                     ___lwdiv:	
 20721                           
 20722                           ;incstack = 0
 20723                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 20724  164C  0140               	movlb	0	; select bank0
 20725  164D  01A5               	clrf	___lwdiv@quotient
 20726  164E  01A6               	clrf	___lwdiv@quotient+1
 20727  164F  0820               	movf	___lwdiv@divisor,w
 20728  1650  0421               	iorwf	___lwdiv@divisor+1,w
 20729  1651  1903               	btfsc	3,2
 20730  1652  2E7C               	goto	l4363
 20731  1653  01A7               	clrf	___lwdiv@counter
 20732  1654  0AA7               	incf	___lwdiv@counter,f
 20733  1655                     l4351:	
 20734  1655  1BA1               	btfsc	___lwdiv@divisor+1,7
 20735  1656  2E61               	goto	l4353
 20736  1657  3001               	movlw	1
 20737  1658                     u3105:	
 20738  1658  35A0               	lslf	___lwdiv@divisor,f
 20739  1659  0DA1               	rlf	___lwdiv@divisor+1,f
 20740  165A  0B89               	decfsz	9,f
 20741  165B  2E58               	goto	u3105
 20742  165C  3001               	movlw	1
 20743  165D  00A4               	movwf	??___lwdiv
 20744  165E  0824               	movf	??___lwdiv,w
 20745  165F  07A7               	addwf	___lwdiv@counter,f
 20746  1660  2E55               	goto	l4351
 20747  1661                     l4353:	
 20748  1661  3001               	movlw	1
 20749  1662                     u3125:	
 20750  1662  35A5               	lslf	___lwdiv@quotient,f
 20751  1663  0DA6               	rlf	___lwdiv@quotient+1,f
 20752  1664  0B89               	decfsz	9,f
 20753  1665  2E62               	goto	u3125
 20754  1666  0821               	movf	___lwdiv@divisor+1,w
 20755  1667  0223               	subwf	___lwdiv@dividend+1,w
 20756  1668  1D03               	skipz
 20757  1669  2E6C               	goto	u3135
 20758  166A  0820               	movf	___lwdiv@divisor,w
 20759  166B  0222               	subwf	___lwdiv@dividend,w
 20760  166C                     u3135:	
 20761  166C  1C03               	skipc
 20762  166D  2E73               	goto	l4359
 20763  166E  0820               	movf	___lwdiv@divisor,w
 20764  166F  02A2               	subwf	___lwdiv@dividend,f
 20765  1670  0821               	movf	___lwdiv@divisor+1,w
 20766  1671  3BA3               	subwfb	___lwdiv@dividend+1,f
 20767  1672  1425               	bsf	___lwdiv@quotient,0
 20768  1673                     l4359:	
 20769  1673  3001               	movlw	1
 20770  1674                     u3145:	
 20771  1674  36A1               	lsrf	___lwdiv@divisor+1,f
 20772  1675  0CA0               	rrf	___lwdiv@divisor,f
 20773  1676  0B89               	decfsz	9,f
 20774  1677  2E74               	goto	u3145
 20775  1678  3001               	movlw	1
 20776  1679  02A7               	subwf	___lwdiv@counter,f
 20777  167A  1D03               	btfss	3,2
 20778  167B  2E61               	goto	l4353
 20779  167C                     l4363:	
 20780  167C  0826               	movf	___lwdiv@quotient+1,w
 20781  167D  00A1               	movwf	?___lwdiv+1
 20782  167E  0825               	movf	___lwdiv@quotient,w
 20783  167F  00A0               	movwf	?___lwdiv
 20784  1680  0008               	return
 20785  1681                     __end_of___lwdiv:	
 20786                           
 20787                           	psect	text74
 20788  114E                     __ptext74:	
 20789 ;; *************** function _CLOCK_getTime *****************
 20790 ;; Defined at:
 20791 ;;		line 16 in file "clock.c"
 20792 ;; Parameters:    Size  Location     Type
 20793 ;;		None
 20794 ;; Auto vars:     Size  Location     Type
 20795 ;;		None
 20796 ;; Return value:  Size  Location     Type
 20797 ;;                  2    0[BANK0 ] unsigned short 
 20798 ;; Registers used:
 20799 ;;		wreg
 20800 ;; Tracked objects:
 20801 ;;		On entry : 0/0
 20802 ;;		On exit  : 0/0
 20803 ;;		Unchanged: 0/0
 20804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20809 ;;Total ram usage:        2 bytes
 20810 ;; Hardware stack levels used:    1
 20811 ;; Hardware stack levels required when called:    4
 20812 ;; This function calls:
 20813 ;;		Nothing
 20814 ;; This function is called by:
 20815 ;;		_main
 20816 ;;		_BUTTONS_task
 20817 ;;		_CONTROLLER_task
 20818 ;;		_CONTROL_DMX
 20819 ;;		_BEAT_task
 20820 ;;		_LED_task_BEAT_STROBE
 20821 ;; This function uses a non-reentrant model
 20822 ;;
 20823                           
 20824                           
 20825                           ;psect for function _CLOCK_getTime
 20826  114E                     _CLOCK_getTime:	
 20827                           
 20828                           ;clock.c: 17:     return currentTime;
 20829                           
 20830                           ;incstack = 0
 20831                           ; Regs used in _CLOCK_getTime: [wreg]
 20832  114E  0142               	movlb	2	; select bank2
 20833  114F  0845               	movf	(_currentTime+1)^(0+256),w
 20834  1150  0140               	movlb	0	; select bank0
 20835  1151  00A1               	movwf	?_CLOCK_getTime+1
 20836  1152  0142               	movlb	2	; select bank2
 20837  1153  0844               	movf	_currentTime^(0+256),w
 20838  1154  0140               	movlb	0	; select bank0
 20839  1155  00A0               	movwf	?_CLOCK_getTime
 20840  1156  0008               	return
 20841  1157                     __end_of_CLOCK_getTime:	
 20842                           
 20843                           	psect	text75
 20844  12BD                     __ptext75:	
 20845 ;; *************** function _BEAT_init *****************
 20846 ;; Defined at:
 20847 ;;		line 39 in file "beat.c"
 20848 ;; Parameters:    Size  Location     Type
 20849 ;;		None
 20850 ;; Auto vars:     Size  Location     Type
 20851 ;;		None
 20852 ;; Return value:  Size  Location     Type
 20853 ;;                  1    wreg      void 
 20854 ;; Registers used:
 20855 ;;		wreg, status,2, status,0, pclath, cstack
 20856 ;; Tracked objects:
 20857 ;;		On entry : 0/0
 20858 ;;		On exit  : 0/0
 20859 ;;		Unchanged: 0/0
 20860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20865 ;;Total ram usage:        0 bytes
 20866 ;; Hardware stack levels used:    1
 20867 ;; Hardware stack levels required when called:    5
 20868 ;; This function calls:
 20869 ;;		_ADCC_SetADTIInterruptHandler
 20870 ;;		_ADCC_SetUpperThreshold
 20871 ;;		_ADCC_StartConversion
 20872 ;; This function is called by:
 20873 ;;		_main
 20874 ;; This function uses a non-reentrant model
 20875 ;;
 20876                           
 20877                           
 20878                           ;psect for function _BEAT_init
 20879  12BD                     _BEAT_init:	
 20880                           
 20881                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 20882                           
 20883                           ;incstack = 0
 20884                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 20885  12BD  0141               	movlb	1	; select bank1
 20886  12BE  0866               	movf	(_threshold+1)^(0+128),w
 20887  12BF  0140               	movlb	0	; select bank0
 20888  12C0  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20889  12C1  0141               	movlb	1	; select bank1
 20890  12C2  0865               	movf	_threshold^(0+128),w
 20891  12C3  0140               	movlb	0	; select bank0
 20892  12C4  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20893  12C5  3191  213C  3192   	fcall	_ADCC_SetUpperThreshold
 20894                           
 20895                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 20896  12C8  3009               	movlw	low _adcThresholdHandler
 20897  12C9  0140               	movlb	0	; select bank0
 20898  12CA  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 20899  12CB  3011               	movlw	high _adcThresholdHandler
 20900  12CC  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 20901  12CD  3191  2133  3192   	fcall	_ADCC_SetADTIInterruptHandler
 20902                           
 20903                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 20904  12D0  300F               	movlw	15
 20905  12D1  3191  2145         	fcall	_ADCC_StartConversion
 20906  12D3  0008               	return
 20907  12D4                     __end_of_BEAT_init:	
 20908                           
 20909                           	psect	text76
 20910  1145                     __ptext76:	
 20911 ;; *************** function _ADCC_StartConversion *****************
 20912 ;; Defined at:
 20913 ;;		line 121 in file "mcc_generated_files/adcc.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;  channel         1    wreg     enum E10867
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;  channel         1    0[BANK0 ] enum E10867
 20918 ;; Return value:  Size  Location     Type
 20919 ;;                  1    wreg      void 
 20920 ;; Registers used:
 20921 ;;		wreg
 20922 ;; Tracked objects:
 20923 ;;		On entry : 0/0
 20924 ;;		On exit  : 0/0
 20925 ;;		Unchanged: 0/0
 20926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20931 ;;Total ram usage:        1 bytes
 20932 ;; Hardware stack levels used:    1
 20933 ;; Hardware stack levels required when called:    4
 20934 ;; This function calls:
 20935 ;;		Nothing
 20936 ;; This function is called by:
 20937 ;;		_BEAT_init
 20938 ;; This function uses a non-reentrant model
 20939 ;;
 20940                           
 20941                           
 20942                           ;psect for function _ADCC_StartConversion
 20943  1145                     _ADCC_StartConversion:	
 20944                           
 20945                           ;incstack = 0
 20946                           ; Regs used in _ADCC_StartConversion: [wreg]
 20947                           ;ADCC_StartConversion@channel stored from wreg
 20948  1145  0140               	movlb	0	; select bank0
 20949  1146  00A0               	movwf	ADCC_StartConversion@channel
 20950                           
 20951                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 20952  1147  0820               	movf	ADCC_StartConversion@channel,w
 20953  1148  0141               	movlb	1	; select bank1
 20954  1149  009F               	movwf	31	;volatile
 20955                           
 20956                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 20957  114A  0142               	movlb	2	; select bank2
 20958  114B  1791               	bsf	17,7	;volatile
 20959                           
 20960                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 20961  114C  1411               	bsf	17,0	;volatile
 20962  114D  0008               	return
 20963  114E                     __end_of_ADCC_StartConversion:	
 20964                           
 20965                           	psect	text77
 20966  113C                     __ptext77:	
 20967 ;; *************** function _ADCC_SetUpperThreshold *****************
 20968 ;; Defined at:
 20969 ;;		line 251 in file "mcc_generated_files/adcc.c"
 20970 ;; Parameters:    Size  Location     Type
 20971 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 20972 ;; Auto vars:     Size  Location     Type
 20973 ;;		None
 20974 ;; Return value:  Size  Location     Type
 20975 ;;                  1    wreg      void 
 20976 ;; Registers used:
 20977 ;;		wreg, status,2
 20978 ;; Tracked objects:
 20979 ;;		On entry : 0/0
 20980 ;;		On exit  : 0/0
 20981 ;;		Unchanged: 0/0
 20982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20987 ;;Total ram usage:        2 bytes
 20988 ;; Hardware stack levels used:    1
 20989 ;; Hardware stack levels required when called:    4
 20990 ;; This function calls:
 20991 ;;		Nothing
 20992 ;; This function is called by:
 20993 ;;		_BEAT_init
 20994 ;;		_BEAT_task
 20995 ;; This function uses a non-reentrant model
 20996 ;;
 20997                           
 20998                           
 20999                           ;psect for function _ADCC_SetUpperThreshold
 21000  113C                     _ADCC_SetUpperThreshold:	
 21001                           
 21002                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 21003                           
 21004                           ;incstack = 0
 21005                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 21006  113C  0140               	movlb	0	; select bank0
 21007  113D  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 21008  113E  0141               	movlb	1	; select bank1
 21009  113F  008F               	movwf	15	;volatile
 21010                           
 21011                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 21012  1140  0140               	movlb	0	; select bank0
 21013  1141  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 21014  1142  0141               	movlb	1	; select bank1
 21015  1143  008E               	movwf	14	;volatile
 21016  1144  0008               	return
 21017  1145                     __end_of_ADCC_SetUpperThreshold:	
 21018                           
 21019                           	psect	text78
 21020  1133                     __ptext78:	
 21021 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 21022 ;; Defined at:
 21023 ;;		line 317 in file "mcc_generated_files/adcc.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21026 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 21027 ;; Auto vars:     Size  Location     Type
 21028 ;;		None
 21029 ;; Return value:  Size  Location     Type
 21030 ;;                  1    wreg      void 
 21031 ;; Registers used:
 21032 ;;		wreg
 21033 ;; Tracked objects:
 21034 ;;		On entry : 0/0
 21035 ;;		On exit  : 0/0
 21036 ;;		Unchanged: 0/0
 21037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21042 ;;Total ram usage:        2 bytes
 21043 ;; Hardware stack levels used:    1
 21044 ;; Hardware stack levels required when called:    4
 21045 ;; This function calls:
 21046 ;;		Nothing
 21047 ;; This function is called by:
 21048 ;;		_ADCC_Initialize
 21049 ;;		_BEAT_init
 21050 ;; This function uses a non-reentrant model
 21051 ;;
 21052                           
 21053                           
 21054                           ;psect for function _ADCC_SetADTIInterruptHandler
 21055  1133                     _ADCC_SetADTIInterruptHandler:	
 21056                           
 21057                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 21058                           
 21059                           ;incstack = 0
 21060                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 21061  1133  0140               	movlb	0	; select bank0
 21062  1134  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 21063  1135  0142               	movlb	2	; select bank2
 21064  1136  00D6               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 21065  1137  0140               	movlb	0	; select bank0
 21066  1138  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 21067  1139  0142               	movlb	2	; select bank2
 21068  113A  00D5               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 21069  113B  0008               	return
 21070  113C                     __end_of_ADCC_SetADTIInterruptHandler:	
 21071                           
 21072                           	psect	intentry
 21073  0004                     __pintentry:	
 21074 ;; *************** function _INTERRUPT_InterruptManager *****************
 21075 ;; Defined at:
 21076 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21077 ;; Parameters:    Size  Location     Type
 21078 ;;		None
 21079 ;; Auto vars:     Size  Location     Type
 21080 ;;		None
 21081 ;; Return value:  Size  Location     Type
 21082 ;;                  1    wreg      void 
 21083 ;; Registers used:
 21084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21085 ;; Tracked objects:
 21086 ;;		On entry : 0/0
 21087 ;;		On exit  : 0/0
 21088 ;;		Unchanged: 0/0
 21089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21094 ;;Total ram usage:        0 bytes
 21095 ;; Hardware stack levels used:    1
 21096 ;; Hardware stack levels required when called:    3
 21097 ;; This function calls:
 21098 ;;		Absolute function
 21099 ;;		_ADCC_ThresholdISR
 21100 ;;		_DMX_interrupt
 21101 ;;		_EUSART1_Receive_ISR
 21102 ;;		_I2C1_BusCollisionISR
 21103 ;;		_I2C1_ISR
 21104 ;;		_TMR0_ISR
 21105 ;; This function is called by:
 21106 ;;		Interrupt level 1
 21107 ;; This function uses a non-reentrant model
 21108 ;;
 21109                           
 21110  0004                     _INTERRUPT_InterruptManager:	
 21111                           
 21112                           ;incstack = 0
 21113 ;; hardware stack exceeded
 21114  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21115                           
 21116                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21117  0005  3180               	pagesel	$
 21118                           
 21119                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 21120  0006  014E               	movlb	14	; select bank14
 21121  0007  1A96               	btfsc	22,5	;volatile
 21122  0008  1E8C               	btfss	12,5	;volatile
 21123  0009  280E               	goto	i1l429
 21124                           
 21125                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 21126  000A  3191  21FB  3180   	fcall	_TMR0_ISR
 21127                           
 21128                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 21129  000D  282E               	goto	i1l441
 21130  000E                     i1l429:	
 21131                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 21132                           
 21133  000E  1F0B               	btfss	11,6	;volatile
 21134  000F  282E               	goto	i1l441
 21135                           
 21136                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 21137  0010  1899               	btfsc	25,1	;volatile
 21138  0011  1C8F               	btfss	15,1	;volatile
 21139  0012  2817               	goto	i1l432
 21140                           
 21141                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 21142  0013  3191  210F  3180   	fcall	_I2C1_BusCollisionISR
 21143                           
 21144                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 21145  0016  282E               	goto	i1l441
 21146  0017                     i1l432:	
 21147                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 21148                           
 21149  0017  1819               	btfsc	25,0	;volatile
 21150  0018  1C0F               	btfss	15,0	;volatile
 21151  0019  281E               	goto	i1l434
 21152                           
 21153                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 21154  001A  3185  258D  3180   	fcall	_I2C1_ISR
 21155                           
 21156                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 21157  001D  282E               	goto	i1l441
 21158  001E                     i1l434:	
 21159                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 21160                           
 21161  001E  1897               	btfsc	23,1	;volatile
 21162  001F  1C8D               	btfss	13,1	;volatile
 21163  0020  2825               	goto	i1l436
 21164                           
 21165                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 21166  0021  3191  21EE  3180   	fcall	_ADCC_ThresholdISR
 21167                           
 21168                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 21169  0024  282E               	goto	i1l441
 21170  0025                     i1l436:	
 21171                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 21172                           
 21173  0025  1A99               	btfsc	25,5	;volatile
 21174  0026  1E8F               	btfss	15,5	;volatile
 21175  0027  282E               	goto	i1l441
 21176                           
 21177                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 21178  0028  0142               	movlb	2	; select bank2
 21179  0029  0860               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 21180  002A  008A               	movwf	10
 21181  002B  085F               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 21182  002C  000A               	callw
 21183  002D  3180               	pagesel	$
 21184  002E                     i1l441:	
 21185                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 21186                           
 21187  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21188  002F  0009               	retfie
 21189  0030                     __end_of_INTERRUPT_InterruptManager:	
 21190                           
 21191                           	psect	text80
 21192  11FB                     __ptext80:	
 21193 ;; *************** function _TMR0_ISR *****************
 21194 ;; Defined at:
 21195 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 21196 ;; Parameters:    Size  Location     Type
 21197 ;;		None
 21198 ;; Auto vars:     Size  Location     Type
 21199 ;;		None
 21200 ;; Return value:  Size  Location     Type
 21201 ;;                  1    wreg      void 
 21202 ;; Registers used:
 21203 ;;		wreg, status,2, status,0, pclath, cstack
 21204 ;; Tracked objects:
 21205 ;;		On entry : 0/0
 21206 ;;		On exit  : 0/0
 21207 ;;		Unchanged: 0/0
 21208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21213 ;;Total ram usage:        0 bytes
 21214 ;; Hardware stack levels used:    1
 21215 ;; Hardware stack levels required when called:    1
 21216 ;; This function calls:
 21217 ;;		Absolute function
 21218 ;;		_CLOCK_timerCallback
 21219 ;;		_TMR0_DefaultInterruptHandler
 21220 ;; This function is called by:
 21221 ;;		_INTERRUPT_InterruptManager
 21222 ;; This function uses a non-reentrant model
 21223 ;;
 21224                           
 21225                           
 21226                           ;psect for function _TMR0_ISR
 21227  11FB                     _TMR0_ISR:	
 21228                           
 21229                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 21230                           
 21231                           ;incstack = 0
 21232 ;; hardware stack exceeded
 21233                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 21234  11FB  014E               	movlb	14	; select bank14
 21235  11FC  128C               	bcf	12,5	;volatile
 21236                           
 21237                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 21238  11FD  0142               	movlb	2	; select bank2
 21239  11FE  0857               	movf	_TMR0_InterruptHandler^(0+256),w
 21240  11FF  0458               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 21241  1200  1903               	btfsc	3,2
 21242  1201  0008               	return
 21243                           
 21244                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 21245  1202  0858               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 21246  1203  008A               	movwf	10
 21247  1204  0857               	movf	_TMR0_InterruptHandler^(0+256),w
 21248  1205  000A               	callw
 21249  1206  3191               	pagesel	$
 21250  1207  0008               	return
 21251  1208                     __end_of_TMR0_ISR:	
 21252                           
 21253                           	psect	text81
 21254  1125                     __ptext81:	
 21255 ;; *************** function _CLOCK_timerCallback *****************
 21256 ;; Defined at:
 21257 ;;		line 20 in file "clock.c"
 21258 ;; Parameters:    Size  Location     Type
 21259 ;;		None
 21260 ;; Auto vars:     Size  Location     Type
 21261 ;;		None
 21262 ;; Return value:  Size  Location     Type
 21263 ;;                  1    wreg      void 
 21264 ;; Registers used:
 21265 ;;		wreg
 21266 ;; Tracked objects:
 21267 ;;		On entry : 0/0
 21268 ;;		On exit  : 0/0
 21269 ;;		Unchanged: 0/0
 21270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21275 ;;Total ram usage:        0 bytes
 21276 ;; Hardware stack levels used:    1
 21277 ;; This function calls:
 21278 ;;		Nothing
 21279 ;; This function is called by:
 21280 ;;		_CLOCK_init
 21281 ;;		_TMR0_ISR
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           
 21286                           ;psect for function _CLOCK_timerCallback
 21287  1125                     _CLOCK_timerCallback:	
 21288                           
 21289                           ;clock.c: 21:     currentTime++;
 21290                           
 21291                           ;incstack = 0
 21292 ;; hardware stack exceeded
 21293                           ; Regs used in _CLOCK_timerCallback: [wreg]
 21294  1125  3001               	movlw	1
 21295  1126  0142               	movlb	2	; select bank2
 21296  1127  07C4               	addwf	_currentTime^(0+256),f
 21297  1128  3000               	movlw	0
 21298  1129  3DC5               	addwfc	(_currentTime+1)^(0+256),f
 21299  112A  0008               	return
 21300  112B                     __end_of_CLOCK_timerCallback:	
 21301                           
 21302                           	psect	text82
 21303  0002                     __ptext82:	
 21304 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 21305 ;; Defined at:
 21306 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 21307 ;; Parameters:    Size  Location     Type
 21308 ;;		None
 21309 ;; Auto vars:     Size  Location     Type
 21310 ;;		None
 21311 ;; Return value:  Size  Location     Type
 21312 ;;                  1    wreg      void 
 21313 ;; Registers used:
 21314 ;;		None
 21315 ;; Tracked objects:
 21316 ;;		On entry : 0/0
 21317 ;;		On exit  : 0/0
 21318 ;;		Unchanged: 0/0
 21319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21324 ;;Total ram usage:        0 bytes
 21325 ;; Hardware stack levels used:    1
 21326 ;; This function calls:
 21327 ;;		Nothing
 21328 ;; This function is called by:
 21329 ;;		_TMR0_Initialize
 21330 ;;		_TMR0_ISR
 21331 ;; This function uses a non-reentrant model
 21332 ;;
 21333                           
 21334                           
 21335                           ;psect for function _TMR0_DefaultInterruptHandler
 21336  0002                     _TMR0_DefaultInterruptHandler:	
 21337                           
 21338                           ;incstack = 0
 21339 ;; hardware stack exceeded
 21340                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 21341  0002  0008               	return
 21342  0003                     __end_of_TMR0_DefaultInterruptHandler:	
 21343                           
 21344                           	psect	text83
 21345  058D                     __ptext83:	
 21346 ;; *************** function _I2C1_ISR *****************
 21347 ;; Defined at:
 21348 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 21349 ;; Parameters:    Size  Location     Type
 21350 ;;		None
 21351 ;; Auto vars:     Size  Location     Type
 21352 ;;		None
 21353 ;; Return value:  Size  Location     Type
 21354 ;;                  1    wreg      void 
 21355 ;; Registers used:
 21356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21357 ;; Tracked objects:
 21358 ;;		On entry : 0/0
 21359 ;;		On exit  : 0/0
 21360 ;;		Unchanged: 0/0
 21361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21366 ;;Total ram usage:        4 bytes
 21367 ;; Hardware stack levels used:    1
 21368 ;; Hardware stack levels required when called:    1
 21369 ;; This function calls:
 21370 ;;		_I2C1_FunctionComplete
 21371 ;;		_I2C1_Stop
 21372 ;; This function is called by:
 21373 ;;		_INTERRUPT_InterruptManager
 21374 ;; This function uses a non-reentrant model
 21375 ;;
 21376                           
 21377                           
 21378                           ;psect for function _I2C1_ISR
 21379  058D                     _I2C1_ISR:	
 21380                           
 21381                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 21382                           
 21383                           ;incstack = 0
 21384 ;; hardware stack exceeded
 21385                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21386  058D  014E               	movlb	14	; select bank14
 21387  058E  100F               	bcf	15,0	;volatile
 21388                           
 21389                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 21390  058F  0143               	movlb	3	; select bank3
 21391  0590  1F90               	btfss	16,7	;volatile
 21392  0591  2EB2               	goto	i1l5589
 21393                           
 21394                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 21395  0592  1390               	bcf	16,7	;volatile
 21396                           
 21397                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 21398  0593  0141               	movlb	1	; select bank1
 21399  0594  01E2               	clrf	_i2c1_state^(0+128)
 21400                           
 21401                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 21402  0595  0871               	movf	_p_i2c1_current,w
 21403  0596  3E02               	addlw	2
 21404  0597  0086               	movwf	6
 21405  0598  3001               	movlw	1	; select bank2/3
 21406  0599  0087               	movwf	7
 21407  059A  0801               	movf	1,w
 21408  059B  0086               	movwf	6
 21409  059C  0187               	clrf	7
 21410  059D  0181               	clrf	1
 21411  059E  0A81               	incf	1,f
 21412                           
 21413                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 21414  059F  01F1               	clrf	_p_i2c1_current
 21415  05A0  0008               	return
 21416  05A1                     i1l549:	
 21417                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 21418                           
 21419                           
 21420                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 21421  05A1  18C7               	btfsc	(_i2c1_object^(0+128)+2),1
 21422  05A2  0008               	return
 21423                           
 21424                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 21425  05A3  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21426  05A4  00F9               	movwf	??_I2C1_ISR
 21427  05A5  0879               	movf	??_I2C1_ISR,w
 21428  05A6  00F1               	movwf	_p_i2c1_current
 21429                           
 21430                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 21431  05A7  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21432  05A8  0086               	movwf	6
 21433  05A9  3001               	movlw	1	; select bank2/3
 21434  05AA  0087               	movwf	7
 21435  05AB  0801               	movf	1,w
 21436  05AC  00F9               	movwf	??_I2C1_ISR
 21437  05AD  0879               	movf	??_I2C1_ISR,w
 21438  05AE  00E1               	movwf	_i2c1_trb_count^(0+128)
 21439                           
 21440                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 21441  05AF  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21442  05B0  0086               	movwf	6
 21443  05B1  3001               	movlw	1	; select bank2/3
 21444  05B2  0087               	movwf	7
 21445  05B3  3001               	movlw	1	; select bank2/3
 21446  05B4  3F41               	moviw [1]fsr1
 21447  05B5  00F2               	movwf	_p_i2c1_trb_current
 21448                           
 21449                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 21450  05B6  3003               	movlw	3
 21451  05B7  00F9               	movwf	??_I2C1_ISR
 21452  05B8  0879               	movf	??_I2C1_ISR,w
 21453  05B9  07C6               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 21454                           
 21455                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 21456  05BA  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21457  05BB  3A55               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 21458  05BC  1D03               	skipz
 21459  05BD  2DC2               	goto	i1l5477
 21460                           
 21461                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 21462  05BE  3052               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 21463  05BF  00F9               	movwf	??_I2C1_ISR
 21464  05C0  0879               	movf	??_I2C1_ISR,w
 21465  05C1  00C6               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 21466  05C2                     i1l5477:	
 21467                           
 21468                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 21469  05C2  1047               	bcf	(_i2c1_object^(0+128)+2),0
 21470                           
 21471                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 21472  05C3  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21473  05C4  0645               	xorwf	_i2c1_object^(0+128),w
 21474  05C5  1903               	btfsc	3,2
 21475                           
 21476                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 21477  05C6  14C7               	bsf	(_i2c1_object^(0+128)+2),1
 21478                           
 21479                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 21480                           
 21481                           ;mcc_generated_files/i2c1.c: 290:                 }
 21482  05C7  0143               	movlb	3	; select bank3
 21483  05C8  1411               	bsf	17,0	;volatile
 21484  05C9                     i1l5481:	
 21485                           
 21486                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 21487  05C9  3002               	movlw	2
 21488  05CA  00F9               	movwf	??_I2C1_ISR
 21489  05CB  0879               	movf	??_I2C1_ISR,w
 21490  05CC  0141               	movlb	1	; select bank1
 21491  05CD  00E2               	movwf	_i2c1_state^(0+128)
 21492  05CE  0008               	return
 21493  05CF                     i1l554:	
 21494                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 21495                           
 21496  05CF  2E5B               	goto	i1l575
 21497  05D0                     i1l555:	
 21498                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 21499                           
 21500                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 21501                           
 21502                           
 21503                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 21504  05D0  0143               	movlb	3	; select bank3
 21505  05D1  1F11               	btfss	17,6	;volatile
 21506  05D2  2DDC               	goto	i1l5489
 21507                           
 21508                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 21509  05D3  3001               	movlw	1
 21510  05D4  00F9               	movwf	??_I2C1_ISR
 21511  05D5  0879               	movf	??_I2C1_ISR,w
 21512  05D6  0141               	movlb	1	; select bank1
 21513  05D7  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 21514                           
 21515                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21516  05D8  3004               	movlw	4
 21517  05D9  3193  2335         	fcall	_I2C1_Stop
 21518                           
 21519                           ;mcc_generated_files/i2c1.c: 319:             }
 21520  05DB  0008               	return
 21521  05DC                     i1l5489:	
 21522                           
 21523                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 21524  05DC  0876               	movf	I2C1_ISR@i2c_address+1,w
 21525  05DD  00FA               	movwf	??_I2C1_ISR+1
 21526  05DE  0875               	movf	I2C1_ISR@i2c_address,w
 21527  05DF  00F9               	movwf	??_I2C1_ISR
 21528  05E0  36FA               	lsrf	??_I2C1_ISR+1,f
 21529  05E1  0CF9               	rrf	??_I2C1_ISR,f
 21530  05E2  0879               	movf	??_I2C1_ISR,w
 21531  05E3  008C               	movwf	12	;volatile
 21532                           
 21533                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 21534  05E4  1C75               	btfss	I2C1_ISR@i2c_address,0
 21535  05E5  2DEC               	goto	i1l5495
 21536                           
 21537                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 21538  05E6  300B               	movlw	11
 21539  05E7  00F9               	movwf	??_I2C1_ISR
 21540  05E8  0879               	movf	??_I2C1_ISR,w
 21541  05E9  0141               	movlb	1	; select bank1
 21542  05EA  00E2               	movwf	_i2c1_state^(0+128)
 21543                           
 21544                           ;mcc_generated_files/i2c1.c: 331:                 }
 21545  05EB  0008               	return
 21546  05EC                     i1l5495:	
 21547                           
 21548                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 21549  05EC  3003               	movlw	3
 21550  05ED  00F9               	movwf	??_I2C1_ISR
 21551  05EE  0879               	movf	??_I2C1_ISR,w
 21552  05EF  0141               	movlb	1	; select bank1
 21553  05F0  00E2               	movwf	_i2c1_state^(0+128)
 21554  05F1  0008               	return
 21555  05F2                     i1l560:	
 21556                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 21557                           
 21558                           
 21559                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 21560  05F2  0143               	movlb	3	; select bank3
 21561  05F3  1F11               	btfss	17,6	;volatile
 21562  05F4  2DFE               	goto	i1l561
 21563                           
 21564                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 21565  05F5  3001               	movlw	1
 21566  05F6  00F9               	movwf	??_I2C1_ISR
 21567  05F7  0879               	movf	??_I2C1_ISR,w
 21568  05F8  0141               	movlb	1	; select bank1
 21569  05F9  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 21570                           
 21571                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21572  05FA  3004               	movlw	4
 21573  05FB  3193  2335         	fcall	_I2C1_Stop
 21574                           
 21575                           ;mcc_generated_files/i2c1.c: 347:             }
 21576  05FD  0008               	return
 21577  05FE                     i1l561:	
 21578                           ;mcc_generated_files/i2c1.c: 348:             else
 21579                           
 21580                           
 21581                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 21582  05FE  1491               	bsf	17,1	;volatile
 21583                           
 21584                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 21585  05FF  0876               	movf	I2C1_ISR@i2c_address+1,w
 21586  0600  00FA               	movwf	??_I2C1_ISR+1
 21587  0601  0875               	movf	I2C1_ISR@i2c_address,w
 21588  0602  00F9               	movwf	??_I2C1_ISR
 21589  0603  087A               	movf	??_I2C1_ISR+1,w
 21590  0604  00F9               	movwf	??_I2C1_ISR
 21591  0605  01FA               	clrf	??_I2C1_ISR+1
 21592  0606  3006               	movlw	6
 21593  0607  0579               	andwf	??_I2C1_ISR,w
 21594  0608  00FB               	movwf	??_I2C1_ISR+2
 21595  0609  3000               	movlw	0
 21596  060A  057A               	andwf	??_I2C1_ISR+1,w
 21597  060B  00FC               	movwf	??_I2C1_ISR+3
 21598  060C  30F0               	movlw	240
 21599  060D  047B               	iorwf	??_I2C1_ISR+2,w
 21600  060E  00F5               	movwf	I2C1_ISR@i2c_address
 21601  060F  3000               	movlw	0
 21602  0610  047C               	iorwf	??_I2C1_ISR+3,w
 21603  0611  00F6               	movwf	I2C1_ISR@i2c_address+1
 21604                           
 21605                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 21606  0612  1475               	bsf	I2C1_ISR@i2c_address,0
 21607                           
 21608                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 21609  0613  0141               	movlb	1	; select bank1
 21610  0614  01DE               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 21611  0615  0ADE               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 21612  0616  2DC9               	goto	i1l5481
 21613  0617                     i1l5509:	
 21614                           
 21615                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 21616  0617  035E               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 21617  0618  1903               	btfsc	3,2
 21618  0619  2E30               	goto	i1l5529
 21619                           
 21620                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 21621  061A  0872               	movf	_p_i2c1_trb_current,w
 21622  061B  0086               	movwf	6
 21623  061C  3001               	movlw	1	; select bank2/3
 21624  061D  0087               	movwf	7
 21625  061E  3F40               	moviw [0]fsr1
 21626  061F  00F5               	movwf	I2C1_ISR@i2c_address
 21627  0620  3F41               	moviw [1]fsr1
 21628  0621  00F6               	movwf	I2C1_ISR@i2c_address+1
 21629                           
 21630                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 21631  0622  0872               	movf	_p_i2c1_trb_current,w
 21632  0623  0086               	movwf	6
 21633  0624  3001               	movlw	1	; select bank2/3
 21634  0625  0087               	movwf	7
 21635  0626  3001               	movlw	1	; select bank2/3
 21636  0627  3F43               	moviw [3]fsr1
 21637  0628  00E0               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 21638                           
 21639                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 21640  0629  0872               	movf	_p_i2c1_trb_current,w
 21641  062A  0086               	movwf	6
 21642  062B  3001               	movlw	1	; select bank2/3
 21643  062C  0087               	movwf	7
 21644  062D  3001               	movlw	1	; select bank2/3
 21645  062E  3F42               	moviw [2]fsr1
 21646  062F  00DF               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 21647  0630                     i1l5529:	
 21648                           
 21649                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 21650  0630  0875               	movf	I2C1_ISR@i2c_address,w
 21651  0631  0143               	movlb	3	; select bank3
 21652  0632  008C               	movwf	12	;volatile
 21653                           
 21654                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 21655  0633  1C75               	btfss	I2C1_ISR@i2c_address,0
 21656  0634  2DEC               	goto	i1l5495
 21657                           
 21658                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 21659  0635  3005               	movlw	5
 21660  0636  00F9               	movwf	??_I2C1_ISR
 21661  0637  0879               	movf	??_I2C1_ISR,w
 21662  0638  0141               	movlb	1	; select bank1
 21663  0639  00E2               	movwf	_i2c1_state^(0+128)
 21664                           
 21665                           ;mcc_generated_files/i2c1.c: 419:                 }
 21666  063A  0008               	return
 21667  063B                     i1l571:	
 21668                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 21669                           
 21670                           
 21671                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 21672  063B  0143               	movlb	3	; select bank3
 21673  063C  1F11               	btfss	17,6	;volatile
 21674  063D  2E49               	goto	i1l5543
 21675                           
 21676                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 21677  063E  3001               	movlw	1
 21678  063F  00F9               	movwf	??_I2C1_ISR
 21679  0640  0879               	movf	??_I2C1_ISR,w
 21680  0641  0141               	movlb	1	; select bank1
 21681  0642  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 21682                           
 21683                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 21684  0643  0143               	movlb	3	; select bank3
 21685  0644  1311               	bcf	17,6	;volatile
 21686                           
 21687                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 21688  0645  3005               	movlw	5
 21689  0646  3193  2335         	fcall	_I2C1_Stop
 21690                           
 21691                           ;mcc_generated_files/i2c1.c: 442:             }
 21692  0648  0008               	return
 21693  0649                     i1l5543:	
 21694                           
 21695                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 21696  0649  3001               	movlw	1
 21697  064A  0141               	movlb	1	; select bank1
 21698  064B  02DF               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 21699  064C  0A5F               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 21700  064D  1D03               	btfss	3,2
 21701  064E  2E5E               	goto	i1l5551
 21702                           
 21703                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 21704  064F  3004               	movlw	4
 21705  0650  00F9               	movwf	??_I2C1_ISR
 21706  0651  0879               	movf	??_I2C1_ISR,w
 21707  0652  07F2               	addwf	_p_i2c1_trb_current,f
 21708                           
 21709                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 21710  0653  3001               	movlw	1
 21711  0654  02E1               	subwf	_i2c1_trb_count^(0+128),f
 21712  0655  1D03               	btfss	3,2
 21713  0656  2E5B               	goto	i1l575
 21714                           
 21715                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 21716  0657  3000               	movlw	0
 21717  0658  3193  2335         	fcall	_I2C1_Stop
 21718                           
 21719                           ;mcc_generated_files/i2c1.c: 457:                     }
 21720  065A  0008               	return
 21721  065B                     i1l575:	
 21722                           ;mcc_generated_files/i2c1.c: 458:                     else
 21723                           
 21724                           
 21725                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 21726  065B  0143               	movlb	3	; select bank3
 21727  065C  1491               	bsf	17,1	;volatile
 21728  065D  2DC9               	goto	i1l5481
 21729  065E                     i1l5551:	
 21730                           
 21731                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 21732  065E  0860               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 21733  065F  0086               	movwf	6
 21734  0660  0187               	clrf	7
 21735  0661  0801               	movf	1,w
 21736  0662  0143               	movlb	3	; select bank3
 21737  0663  008C               	movwf	12	;volatile
 21738  0664  3001               	movlw	1
 21739  0665  00F9               	movwf	??_I2C1_ISR
 21740  0666  0879               	movf	??_I2C1_ISR,w
 21741  0667  0141               	movlb	1	; select bank1
 21742  0668  07E0               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 21743  0669  0008               	return
 21744  066A                     i1l578:	
 21745                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 21746                           
 21747                           
 21748                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 21749  066A  0143               	movlb	3	; select bank3
 21750  066B  1F11               	btfss	17,6	;volatile
 21751  066C  2E78               	goto	i1l579
 21752                           
 21753                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 21754  066D  3001               	movlw	1
 21755  066E  00F9               	movwf	??_I2C1_ISR
 21756  066F  0879               	movf	??_I2C1_ISR,w
 21757  0670  0141               	movlb	1	; select bank1
 21758  0671  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 21759                           
 21760                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21761  0672  3004               	movlw	4
 21762  0673  3193  2335         	fcall	_I2C1_Stop
 21763                           
 21764                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 21765  0675  0143               	movlb	3	; select bank3
 21766  0676  1311               	bcf	17,6	;volatile
 21767                           
 21768                           ;mcc_generated_files/i2c1.c: 495:             }
 21769  0677  0008               	return
 21770  0678                     i1l579:	
 21771                           ;mcc_generated_files/i2c1.c: 496:             else
 21772                           
 21773                           
 21774                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 21775  0678  1591               	bsf	17,3	;volatile
 21776                           
 21777                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 21778  0679  3008               	movlw	8
 21779  067A  00F9               	movwf	??_I2C1_ISR
 21780  067B  0879               	movf	??_I2C1_ISR,w
 21781  067C  0141               	movlb	1	; select bank1
 21782  067D  00E2               	movwf	_i2c1_state^(0+128)
 21783  067E  0008               	return
 21784  067F                     i1l5563:	
 21785                           
 21786                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 21787  067F  3008               	movlw	8
 21788  0680  00F9               	movwf	??_I2C1_ISR
 21789  0681  0879               	movf	??_I2C1_ISR,w
 21790  0682  00E2               	movwf	_i2c1_state^(0+128)
 21791                           
 21792                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 21793  0683  0143               	movlb	3	; select bank3
 21794  0684  1591               	bsf	17,3	;volatile
 21795                           
 21796                           ;mcc_generated_files/i2c1.c: 513:             break;
 21797  0685  0008               	return
 21798  0686                     i1l5567:	
 21799                           
 21800                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 21801  0686  0143               	movlb	3	; select bank3
 21802  0687  080C               	movf	12,w	;volatile
 21803  0688  00F9               	movwf	??_I2C1_ISR
 21804  0689  0141               	movlb	1	; select bank1
 21805  068A  0860               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 21806  068B  0086               	movwf	6
 21807  068C  0187               	clrf	7
 21808  068D  0879               	movf	??_I2C1_ISR,w
 21809  068E  0081               	movwf	1
 21810  068F  3001               	movlw	1
 21811  0690  00F9               	movwf	??_I2C1_ISR
 21812  0691  0879               	movf	??_I2C1_ISR,w
 21813  0692  07E0               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 21814                           
 21815                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 21816  0693  3001               	movlw	1
 21817  0694  02DF               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 21818  0695  1903               	btfsc	3,2
 21819  0696  2E9F               	goto	i1l583
 21820                           
 21821                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 21822  0697  0143               	movlb	3	; select bank3
 21823  0698  1291               	bcf	17,5	;volatile
 21824                           
 21825                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 21826  0699  3006               	movlw	6
 21827  069A  00F9               	movwf	??_I2C1_ISR
 21828  069B  0879               	movf	??_I2C1_ISR,w
 21829  069C  0141               	movlb	1	; select bank1
 21830  069D  00E2               	movwf	_i2c1_state^(0+128)
 21831                           
 21832                           ;mcc_generated_files/i2c1.c: 532:             }
 21833  069E  2EA3               	goto	i1l5579
 21834  069F                     i1l583:	
 21835                           ;mcc_generated_files/i2c1.c: 533:             else
 21836                           
 21837                           
 21838                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 21839  069F  0143               	movlb	3	; select bank3
 21840  06A0  1691               	bsf	17,5	;volatile
 21841                           
 21842                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 21843  06A1  3192  2225         	fcall	_I2C1_FunctionComplete
 21844  06A3                     i1l5579:	
 21845                           
 21846                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 21847  06A3  0143               	movlb	3	; select bank3
 21848  06A4  1611               	bsf	17,4	;volatile
 21849                           
 21850                           ;mcc_generated_files/i2c1.c: 545:             break;
 21851  06A5  0008               	return
 21852  06A6                     i1l5581:	
 21853                           
 21854                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 21855  06A6  3000               	movlw	0
 21856  06A7  3193  2335         	fcall	_I2C1_Stop
 21857                           
 21858                           ;mcc_generated_files/i2c1.c: 552:             break;
 21859  06A9  0008               	return
 21860  06AA                     i1l5583:	
 21861                           
 21862                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 21863  06AA  3001               	movlw	1
 21864  06AB  00F9               	movwf	??_I2C1_ISR
 21865  06AC  0879               	movf	??_I2C1_ISR,w
 21866  06AD  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 21867                           
 21868                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 21869  06AE  3006               	movlw	6
 21870  06AF  3193  2335         	fcall	_I2C1_Stop
 21871                           
 21872                           ;mcc_generated_files/i2c1.c: 560:             break;
 21873  06B1  0008               	return
 21874  06B2                     i1l5589:	
 21875  06B2  0141               	movlb	1	; select bank1
 21876  06B3  0862               	movf	_i2c1_state^(0+128),w
 21877  06B4  00F9               	movwf	??_I2C1_ISR
 21878  06B5  01FA               	clrf	??_I2C1_ISR+1
 21879                           
 21880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21881                           ; Switch size 1, requested type "simple"
 21882                           ; Number of cases is 1, Range of values is 0 to 0
 21883                           ; switch strategies available:
 21884                           ; Name         Instructions Cycles
 21885                           ; simple_byte            4     3 (average)
 21886                           ; direct_byte            8     6 (fixed)
 21887                           ; jumptable            260     6 (fixed)
 21888                           ;	Chosen strategy is simple_byte
 21889  06B6  087A               	movf	??_I2C1_ISR+1,w
 21890  06B7  3A00               	xorlw	0	; case 0
 21891  06B8  1903               	skipnz
 21892  06B9  2EBB               	goto	i1l7627
 21893  06BA  2EAA               	goto	i1l5583
 21894  06BB                     i1l7627:	
 21895                           
 21896                           ; Switch size 1, requested type "simple"
 21897                           ; Number of cases is 11, Range of values is 0 to 11
 21898                           ; switch strategies available:
 21899                           ; Name         Instructions Cycles
 21900                           ; direct_byte           30     6 (fixed)
 21901                           ; simple_byte           34    18 (average)
 21902                           ; jumptable            260     6 (fixed)
 21903                           ;	Chosen strategy is simple_byte
 21904  06BB  0879               	movf	??_I2C1_ISR,w
 21905  06BC  3A00               	xorlw	0	; case 0
 21906  06BD  1903               	skipnz
 21907  06BE  2DA1               	goto	i1l549
 21908  06BF  3A01               	xorlw	1	; case 1
 21909  06C0  1903               	skipnz
 21910  06C1  2DCF               	goto	i1l554
 21911  06C2  3A03               	xorlw	3	; case 2
 21912  06C3  1903               	skipnz
 21913  06C4  2E17               	goto	i1l5509
 21914  06C5  3A01               	xorlw	1	; case 3
 21915  06C6  1903               	skipnz
 21916  06C7  2E3B               	goto	i1l571
 21917  06C8  3A07               	xorlw	7	; case 4
 21918  06C9  1903               	skipnz
 21919  06CA  2EA6               	goto	i1l5581
 21920  06CB  3A01               	xorlw	1	; case 5
 21921  06CC  1903               	skipnz
 21922  06CD  2E6A               	goto	i1l578
 21923  06CE  3A03               	xorlw	3	; case 6
 21924  06CF  1903               	skipnz
 21925  06D0  2E7F               	goto	i1l5563
 21926  06D1  3A01               	xorlw	1	; case 7
 21927  06D2  1903               	skipnz
 21928  06D3  2EA6               	goto	i1l5581
 21929  06D4  3A0F               	xorlw	15	; case 8
 21930  06D5  1903               	skipnz
 21931  06D6  2E86               	goto	i1l5567
 21932  06D7  3A02               	xorlw	2	; case 10
 21933  06D8  1903               	skipnz
 21934  06D9  2DD0               	goto	i1l555
 21935  06DA  3A01               	xorlw	1	; case 11
 21936  06DB  1903               	skipnz
 21937  06DC  2DF2               	goto	i1l560
 21938  06DD  2EAA               	goto	i1l5583
 21939  06DE  0008               	return
 21940  06DF                     __end_of_I2C1_ISR:	
 21941                           
 21942                           	psect	text84
 21943  1335                     __ptext84:	
 21944 ;; *************** function _I2C1_Stop *****************
 21945 ;; Defined at:
 21946 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 21947 ;; Parameters:    Size  Location     Type
 21948 ;;  completion_c    1    wreg     enum E10866
 21949 ;; Auto vars:     Size  Location     Type
 21950 ;;  completion_c    1    1[COMMON] enum E10866
 21951 ;; Return value:  Size  Location     Type
 21952 ;;                  1    wreg      void 
 21953 ;; Registers used:
 21954 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21955 ;; Tracked objects:
 21956 ;;		On entry : 0/0
 21957 ;;		On exit  : 0/0
 21958 ;;		Unchanged: 0/0
 21959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21964 ;;Total ram usage:        2 bytes
 21965 ;; Hardware stack levels used:    1
 21966 ;; This function calls:
 21967 ;;		Nothing
 21968 ;; This function is called by:
 21969 ;;		_I2C1_ISR
 21970 ;; This function uses a non-reentrant model
 21971 ;;
 21972                           
 21973                           
 21974                           ;psect for function _I2C1_Stop
 21975  1335                     _I2C1_Stop:	
 21976                           
 21977                           ;incstack = 0
 21978 ;; hardware stack exceeded
 21979                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 21980                           ;I2C1_Stop@completion_code stored from wreg
 21981  1335  00F8               	movwf	I2C1_Stop@completion_code
 21982                           
 21983                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 21984  1336  0143               	movlb	3	; select bank3
 21985  1337  1511               	bsf	17,2	;volatile
 21986                           
 21987                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 21988  1338  0871               	movf	_p_i2c1_current,w
 21989  1339  3E02               	addlw	2
 21990  133A  0086               	movwf	6
 21991  133B  3001               	movlw	1	; select bank2/3
 21992  133C  0087               	movwf	7
 21993  133D  0801               	movf	1,w
 21994  133E  1903               	btfsc	3,2
 21995  133F  2B4C               	goto	i1l5081
 21996                           
 21997                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 21998  1340  0878               	movf	I2C1_Stop@completion_code,w
 21999  1341  00F7               	movwf	??_I2C1_Stop
 22000  1342  0871               	movf	_p_i2c1_current,w
 22001  1343  3E02               	addlw	2
 22002  1344  0086               	movwf	6
 22003  1345  3001               	movlw	1	; select bank2/3
 22004  1346  0087               	movwf	7
 22005  1347  0801               	movf	1,w
 22006  1348  0086               	movwf	6
 22007  1349  0187               	clrf	7
 22008  134A  0877               	movf	??_I2C1_Stop,w
 22009  134B  0081               	movwf	1
 22010  134C                     i1l5081:	
 22011                           
 22012                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 22013  134C  0141               	movlb	1	; select bank1
 22014  134D  01E2               	clrf	_i2c1_state^(0+128)
 22015  134E  0008               	return
 22016  134F                     __end_of_I2C1_Stop:	
 22017                           
 22018                           	psect	text85
 22019  1225                     __ptext85:	
 22020 ;; *************** function _I2C1_FunctionComplete *****************
 22021 ;; Defined at:
 22022 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 22023 ;; Parameters:    Size  Location     Type
 22024 ;;		None
 22025 ;; Auto vars:     Size  Location     Type
 22026 ;;		None
 22027 ;; Return value:  Size  Location     Type
 22028 ;;                  1    wreg      void 
 22029 ;; Registers used:
 22030 ;;		wreg, status,2, status,0
 22031 ;; Tracked objects:
 22032 ;;		On entry : 0/0
 22033 ;;		On exit  : 0/0
 22034 ;;		Unchanged: 0/0
 22035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22040 ;;Total ram usage:        1 bytes
 22041 ;; Hardware stack levels used:    1
 22042 ;; This function calls:
 22043 ;;		Nothing
 22044 ;; This function is called by:
 22045 ;;		_I2C1_ISR
 22046 ;; This function uses a non-reentrant model
 22047 ;;
 22048                           
 22049                           
 22050                           ;psect for function _I2C1_FunctionComplete
 22051  1225                     _I2C1_FunctionComplete:	
 22052                           
 22053                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 22054                           
 22055                           ;incstack = 0
 22056 ;; hardware stack exceeded
 22057                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 22058  1225  3004               	movlw	4
 22059  1226  00F7               	movwf	??_I2C1_FunctionComplete
 22060  1227  0877               	movf	??_I2C1_FunctionComplete,w
 22061  1228  07F2               	addwf	_p_i2c1_trb_current,f
 22062                           
 22063                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 22064  1229  3001               	movlw	1
 22065  122A  0141               	movlb	1	; select bank1
 22066  122B  02E1               	subwf	_i2c1_trb_count^(0+128),f
 22067  122C  1D03               	btfss	3,2
 22068  122D  2A33               	goto	i1l590
 22069                           
 22070                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 22071  122E  3004               	movlw	4
 22072  122F  00F7               	movwf	??_I2C1_FunctionComplete
 22073  1230  0877               	movf	??_I2C1_FunctionComplete,w
 22074  1231  00E2               	movwf	_i2c1_state^(0+128)
 22075                           
 22076                           ;mcc_generated_files/i2c1.c: 575:     }
 22077  1232  0008               	return
 22078  1233                     i1l590:	
 22079                           ;mcc_generated_files/i2c1.c: 576:     else
 22080                           
 22081                           
 22082                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 22083  1233  01E2               	clrf	_i2c1_state^(0+128)
 22084  1234  0AE2               	incf	_i2c1_state^(0+128),f
 22085  1235  0008               	return
 22086  1236                     __end_of_I2C1_FunctionComplete:	
 22087                           
 22088                           	psect	text86
 22089  110F                     __ptext86:	
 22090 ;; *************** function _I2C1_BusCollisionISR *****************
 22091 ;; Defined at:
 22092 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 22093 ;; Parameters:    Size  Location     Type
 22094 ;;		None
 22095 ;; Auto vars:     Size  Location     Type
 22096 ;;		None
 22097 ;; Return value:  Size  Location     Type
 22098 ;;                  1    wreg      void 
 22099 ;; Registers used:
 22100 ;;		None
 22101 ;; Tracked objects:
 22102 ;;		On entry : 0/0
 22103 ;;		On exit  : 0/0
 22104 ;;		Unchanged: 0/0
 22105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22110 ;;Total ram usage:        0 bytes
 22111 ;; Hardware stack levels used:    1
 22112 ;; This function calls:
 22113 ;;		Nothing
 22114 ;; This function is called by:
 22115 ;;		_INTERRUPT_InterruptManager
 22116 ;; This function uses a non-reentrant model
 22117 ;;
 22118                           
 22119                           
 22120                           ;psect for function _I2C1_BusCollisionISR
 22121  110F                     _I2C1_BusCollisionISR:	
 22122                           
 22123                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 22124                           
 22125                           ;incstack = 0
 22126 ;; hardware stack exceeded
 22127                           ; Regs used in _I2C1_BusCollisionISR: []
 22128  110F  014E               	movlb	14	; select bank14
 22129  1110  108F               	bcf	15,1	;volatile
 22130  1111  0008               	return
 22131  1112                     __end_of_I2C1_BusCollisionISR:	
 22132                           
 22133                           	psect	text87
 22134  15B4                     __ptext87:	
 22135 ;; *************** function _DMX_interrupt *****************
 22136 ;; Defined at:
 22137 ;;		line 54 in file "dmx.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;		None
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;  dummy           1    6[COMMON] volatile unsigned char 
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  1    wreg      void 
 22144 ;; Registers used:
 22145 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/0
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22153 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22155 ;;Total ram usage:        7 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; This function calls:
 22158 ;;		Nothing
 22159 ;; This function is called by:
 22160 ;;		_DMX_init
 22161 ;;		_INTERRUPT_InterruptManager
 22162 ;; This function uses a non-reentrant model
 22163 ;;
 22164                           
 22165                           
 22166                           ;psect for function _DMX_interrupt
 22167  15B4                     _DMX_interrupt:	
 22168                           
 22169                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 22170                           
 22171                           ;incstack = 0
 22172 ;; hardware stack exceeded
 22173                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 22174  15B4  0142               	movlb	2	; select bank2
 22175  15B5  1C9D               	btfss	29,1	;volatile
 22176  15B6  2DB9               	goto	i1l5851
 22177                           
 22178                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 22179  15B7  121D               	bcf	29,4	;volatile
 22180                           
 22181                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 22182  15B8  161D               	bsf	29,4	;volatile
 22183  15B9                     i1l5851:	
 22184                           
 22185                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 22186  15B9  0867               	movf	_initial^(0+256),w
 22187  15BA  0468               	iorwf	(_initial+1)^(0+256),w
 22188  15BB  1903               	btfsc	3,2
 22189  15BC  191D               	btfsc	29,2	;volatile
 22190  15BD  2DDA               	goto	i1l5859
 22191                           
 22192                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 22193  15BE  0819               	movf	25,w	;volatile
 22194  15BF  00F7               	movwf	??_DMX_interrupt
 22195  15C0  01F8               	clrf	??_DMX_interrupt+1
 22196  15C1  0839               	movf	(_arrayIndex+1)^(0+256),w
 22197  15C2  00FA               	movwf	??_DMX_interrupt+3
 22198  15C3  0838               	movf	_arrayIndex^(0+256),w
 22199  15C4  00F9               	movwf	??_DMX_interrupt+2
 22200  15C5  35F9               	lslf	??_DMX_interrupt+2,f
 22201  15C6  0DFA               	rlf	??_DMX_interrupt+3,f
 22202  15C7  30EE               	movlw	238
 22203  15C8  00FB               	movwf	??_DMX_interrupt+4
 22204  15C9  3023               	movlw	35
 22205  15CA  00FC               	movwf	??_DMX_interrupt+5
 22206  15CB  0879               	movf	??_DMX_interrupt+2,w
 22207  15CC  077B               	addwf	??_DMX_interrupt+4,w
 22208  15CD  0086               	movwf	6
 22209  15CE  087A               	movf	??_DMX_interrupt+3,w
 22210  15CF  3D7C               	addwfc	??_DMX_interrupt+5,w
 22211  15D0  0087               	movwf	7
 22212  15D1  0877               	movf	??_DMX_interrupt,w
 22213  15D2  3FC0               	movwi [0]fsr1
 22214  15D3  0878               	movf	??_DMX_interrupt+1,w
 22215  15D4  3FC1               	movwi [1]fsr1
 22216                           
 22217                           ;dmx.c: 63:         arrayIndex += 1;
 22218  15D5  3001               	movlw	1
 22219  15D6  07B8               	addwf	_arrayIndex^(0+256),f
 22220  15D7  3000               	movlw	0
 22221  15D8  3DB9               	addwfc	(_arrayIndex+1)^(0+256),f
 22222                           
 22223                           ;dmx.c: 64:     } else {
 22224  15D9  2DE2               	goto	i1l5863
 22225  15DA                     i1l5859:	
 22226                           
 22227                           ;dmx.c: 65:         arrayIndex = 0;
 22228  15DA  01B8               	clrf	_arrayIndex^(0+256)
 22229  15DB  01B9               	clrf	(_arrayIndex+1)^(0+256)
 22230                           
 22231                           ;dmx.c: 66:         initial = 0;
 22232  15DC  01E7               	clrf	_initial^(0+256)
 22233  15DD  01E8               	clrf	(_initial+1)^(0+256)
 22234                           
 22235                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 22236  15DE  0819               	movf	25,w	;volatile
 22237  15DF  00F7               	movwf	??_DMX_interrupt
 22238  15E0  0877               	movf	??_DMX_interrupt,w
 22239  15E1  00FD               	movwf	DMX_interrupt@dummy	;volatile
 22240  15E2                     i1l5863:	
 22241                           
 22242                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 22243  15E2  014E               	movlb	14	; select bank14
 22244  15E3  128F               	bcf	15,5	;volatile
 22245  15E4  0008               	return
 22246  15E5                     __end_of_DMX_interrupt:	
 22247                           
 22248                           	psect	text88
 22249  1618                     __ptext88:	
 22250 ;; *************** function _EUSART1_Receive_ISR *****************
 22251 ;; Defined at:
 22252 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;		None
 22255 ;; Auto vars:     Size  Location     Type
 22256 ;;		None
 22257 ;; Return value:  Size  Location     Type
 22258 ;;                  1    wreg      void 
 22259 ;; Registers used:
 22260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22261 ;; Tracked objects:
 22262 ;;		On entry : 0/0
 22263 ;;		On exit  : 0/0
 22264 ;;		Unchanged: 0/0
 22265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22270 ;;Total ram usage:        0 bytes
 22271 ;; Hardware stack levels used:    1
 22272 ;; Hardware stack levels required when called:    2
 22273 ;; This function calls:
 22274 ;;		Absolute function
 22275 ;;		_EUSART1_DefaultErrorHandler
 22276 ;;		_EUSART1_DefaultFramingErrorHandler
 22277 ;;		_EUSART1_DefaultOverrunErrorHandler
 22278 ;;		_EUSART1_RxDataHandler
 22279 ;; This function is called by:
 22280 ;;		_EUSART1_Initialize
 22281 ;;		_INTERRUPT_InterruptManager
 22282 ;; This function uses a non-reentrant model
 22283 ;;
 22284                           
 22285                           
 22286                           ;psect for function _EUSART1_Receive_ISR
 22287  1618                     _EUSART1_Receive_ISR:	
 22288                           
 22289                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 22290                           
 22291                           ;incstack = 0
 22292 ;; hardware stack exceeded
 22293                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22294  1618  0874               	movf	_eusart1RxHead,w	;volatile
 22295  1619  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22296  161A  0086               	movwf	6
 22297  161B  3001               	movlw	1	; select bank2/3
 22298  161C  0087               	movwf	7
 22299  161D  0181               	clrf	1
 22300                           
 22301                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 22302  161E  0142               	movlb	2	; select bank2
 22303  161F  1D1D               	btfss	29,2	;volatile
 22304  1620  2E2C               	goto	i1l5433
 22305                           
 22306                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 22307  1621  0874               	movf	_eusart1RxHead,w	;volatile
 22308  1622  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22309  1623  0086               	movwf	6
 22310  1624  3001               	movlw	1	; select bank2/3
 22311  1625  0087               	movwf	7
 22312  1626  1481               	bsf	1,1
 22313                           
 22314                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 22315  1627  085E               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 22316  1628  008A               	movwf	10
 22317  1629  085D               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 22318  162A  000A               	callw
 22319  162B  3196               	pagesel	$
 22320  162C                     i1l5433:	
 22321                           
 22322                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 22323  162C  0142               	movlb	2	; select bank2
 22324  162D  1C9D               	btfss	29,1	;volatile
 22325  162E  2E3A               	goto	i1l5439
 22326                           
 22327                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 22328  162F  0874               	movf	_eusart1RxHead,w	;volatile
 22329  1630  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22330  1631  0086               	movwf	6
 22331  1632  3001               	movlw	1	; select bank2/3
 22332  1633  0087               	movwf	7
 22333  1634  1501               	bsf	1,2
 22334                           
 22335                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 22336  1635  085C               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 22337  1636  008A               	movwf	10
 22338  1637  085B               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 22339  1638  000A               	callw
 22340  1639  3196               	pagesel	$
 22341  163A                     i1l5439:	
 22342                           
 22343                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 22344  163A  0874               	movf	_eusart1RxHead,w	;volatile
 22345  163B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22346  163C  0086               	movwf	6
 22347  163D  3001               	movlw	1	; select bank2/3
 22348  163E  0087               	movwf	7
 22349  163F  0801               	movf	1,w
 22350  1640  1903               	btfsc	3,2
 22351  1641  2E49               	goto	i1l5443
 22352                           
 22353                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 22354  1642  0142               	movlb	2	; select bank2
 22355  1643  085A               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 22356  1644  008A               	movwf	10
 22357  1645  0859               	movf	_EUSART1_ErrorHandler^(0+256),w
 22358  1646  000A               	callw
 22359  1647  3196               	pagesel	$
 22360                           
 22361                           ;mcc_generated_files/eusart1.c: 188:     } else {
 22362  1648  0008               	return
 22363  1649                     i1l5443:	
 22364                           
 22365                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 22366  1649  3192  22D4         	fcall	_EUSART1_RxDataHandler
 22367  164B  0008               	return
 22368  164C                     __end_of_EUSART1_Receive_ISR:	
 22369                           
 22370                           	psect	text89
 22371  1118                     __ptext89:	
 22372 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 22373 ;; Defined at:
 22374 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 22375 ;; Parameters:    Size  Location     Type
 22376 ;;		None
 22377 ;; Auto vars:     Size  Location     Type
 22378 ;;		None
 22379 ;; Return value:  Size  Location     Type
 22380 ;;                  1    wreg      void 
 22381 ;; Registers used:
 22382 ;;		None
 22383 ;; Tracked objects:
 22384 ;;		On entry : 0/0
 22385 ;;		On exit  : 0/0
 22386 ;;		Unchanged: 0/0
 22387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22392 ;;Total ram usage:        0 bytes
 22393 ;; Hardware stack levels used:    1
 22394 ;; This function calls:
 22395 ;;		Nothing
 22396 ;; This function is called by:
 22397 ;;		_EUSART1_Initialize
 22398 ;;		_EUSART1_Receive_ISR
 22399 ;; This function uses a non-reentrant model
 22400 ;;
 22401                           
 22402                           
 22403                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 22404  1118                     _EUSART1_DefaultOverrunErrorHandler:	
 22405                           
 22406                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 22407                           
 22408                           ;incstack = 0
 22409 ;; hardware stack exceeded
 22410                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 22411  1118  0142               	movlb	2	; select bank2
 22412  1119  121D               	bcf	29,4	;volatile
 22413                           
 22414                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 22415  111A  161D               	bsf	29,4	;volatile
 22416  111B  0008               	return
 22417  111C                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 22418                           
 22419                           	psect	text90
 22420  1108                     __ptext90:	
 22421 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 22422 ;; Defined at:
 22423 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 22424 ;; Parameters:    Size  Location     Type
 22425 ;;		None
 22426 ;; Auto vars:     Size  Location     Type
 22427 ;;		None
 22428 ;; Return value:  Size  Location     Type
 22429 ;;                  1    wreg      void 
 22430 ;; Registers used:
 22431 ;;		None
 22432 ;; Tracked objects:
 22433 ;;		On entry : 0/0
 22434 ;;		On exit  : 0/0
 22435 ;;		Unchanged: 0/0
 22436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22441 ;;Total ram usage:        0 bytes
 22442 ;; Hardware stack levels used:    1
 22443 ;; This function calls:
 22444 ;;		Nothing
 22445 ;; This function is called by:
 22446 ;;		_EUSART1_Initialize
 22447 ;;		_EUSART1_Receive_ISR
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           
 22452                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 22453  1108                     _EUSART1_DefaultFramingErrorHandler:	
 22454                           
 22455                           ;incstack = 0
 22456 ;; hardware stack exceeded
 22457                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 22458  1108  0008               	return
 22459  1109                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 22460                           
 22461                           	psect	text91
 22462  110C                     __ptext91:	
 22463 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 22464 ;; Defined at:
 22465 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 22466 ;; Parameters:    Size  Location     Type
 22467 ;;		None
 22468 ;; Auto vars:     Size  Location     Type
 22469 ;;		None
 22470 ;; Return value:  Size  Location     Type
 22471 ;;                  1    wreg      void 
 22472 ;; Registers used:
 22473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22474 ;; Tracked objects:
 22475 ;;		On entry : 0/0
 22476 ;;		On exit  : 0/0
 22477 ;;		Unchanged: 0/0
 22478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22483 ;;Total ram usage:        0 bytes
 22484 ;; Hardware stack levels used:    1
 22485 ;; Hardware stack levels required when called:    1
 22486 ;; This function calls:
 22487 ;;		_EUSART1_RxDataHandler
 22488 ;; This function is called by:
 22489 ;;		_EUSART1_Initialize
 22490 ;;		_EUSART1_Receive_ISR
 22491 ;; This function uses a non-reentrant model
 22492 ;;
 22493                           
 22494                           
 22495                           ;psect for function _EUSART1_DefaultErrorHandler
 22496  110C                     _EUSART1_DefaultErrorHandler:	
 22497                           
 22498                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 22499                           
 22500                           ;incstack = 0
 22501 ;; hardware stack exceeded
 22502                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 22503  110C  3192  22D4         	fcall	_EUSART1_RxDataHandler
 22504  110E  0008               	return
 22505  110F                     __end_of_EUSART1_DefaultErrorHandler:	
 22506                           
 22507                           	psect	text92
 22508  12D4                     __ptext92:	
 22509 ;; *************** function _EUSART1_RxDataHandler *****************
 22510 ;; Defined at:
 22511 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;		None
 22514 ;; Auto vars:     Size  Location     Type
 22515 ;;		None
 22516 ;; Return value:  Size  Location     Type
 22517 ;;                  1    wreg      void 
 22518 ;; Registers used:
 22519 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22520 ;; Tracked objects:
 22521 ;;		On entry : 0/0
 22522 ;;		On exit  : 0/0
 22523 ;;		Unchanged: 0/0
 22524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22529 ;;Total ram usage:        1 bytes
 22530 ;; Hardware stack levels used:    1
 22531 ;; This function calls:
 22532 ;;		Nothing
 22533 ;; This function is called by:
 22534 ;;		_EUSART1_Receive_ISR
 22535 ;;		_EUSART1_DefaultErrorHandler
 22536 ;; This function uses a non-reentrant model
 22537 ;;
 22538                           
 22539                           
 22540                           ;psect for function _EUSART1_RxDataHandler
 22541  12D4                     _EUSART1_RxDataHandler:	
 22542                           
 22543                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 22544                           
 22545                           ;incstack = 0
 22546 ;; hardware stack exceeded
 22547                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 22548  12D4  0142               	movlb	2	; select bank2
 22549  12D5  0819               	movf	25,w	;volatile
 22550  12D6  00F7               	movwf	??_EUSART1_RxDataHandler
 22551  12D7  0874               	movf	_eusart1RxHead,w
 22552  12D8  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22553  12D9  0086               	movwf	6
 22554  12DA  3001               	movlw	1	; select bank2/3
 22555  12DB  0087               	movwf	7
 22556  12DC  0877               	movf	??_EUSART1_RxDataHandler,w
 22557  12DD  0081               	movwf	1
 22558  12DE  3001               	movlw	1
 22559  12DF  00F7               	movwf	??_EUSART1_RxDataHandler
 22560  12E0  0877               	movf	??_EUSART1_RxDataHandler,w
 22561  12E1  07F4               	addwf	_eusart1RxHead,f	;volatile
 22562                           
 22563                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 22564  12E2  3008               	movlw	8
 22565  12E3  0274               	subwf	_eusart1RxHead,w	;volatile
 22566  12E4  1803               	btfsc	3,0
 22567                           
 22568                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 22569  12E5  01F4               	clrf	_eusart1RxHead	;volatile
 22570                           
 22571                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 22572  12E6  3001               	movlw	1
 22573  12E7  00F7               	movwf	??_EUSART1_RxDataHandler
 22574  12E8  0877               	movf	??_EUSART1_RxDataHandler,w
 22575  12E9  0141               	movlb	1	; select bank1
 22576  12EA  07E4               	addwf	_eusart1RxCount^(0+128),f	;volatile
 22577  12EB  0008               	return
 22578  12EC                     __end_of_EUSART1_RxDataHandler:	
 22579                           
 22580                           	psect	text93
 22581  11EE                     __ptext93:	
 22582 ;; *************** function _ADCC_ThresholdISR *****************
 22583 ;; Defined at:
 22584 ;;		line 308 in file "mcc_generated_files/adcc.c"
 22585 ;; Parameters:    Size  Location     Type
 22586 ;;		None
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;		None
 22589 ;; Return value:  Size  Location     Type
 22590 ;;                  1    wreg      void 
 22591 ;; Registers used:
 22592 ;;		wreg, status,2, status,0, pclath, cstack
 22593 ;; Tracked objects:
 22594 ;;		On entry : 0/0
 22595 ;;		On exit  : 0/0
 22596 ;;		Unchanged: 0/0
 22597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22602 ;;Total ram usage:        0 bytes
 22603 ;; Hardware stack levels used:    1
 22604 ;; Hardware stack levels required when called:    1
 22605 ;; This function calls:
 22606 ;;		Absolute function
 22607 ;;		_ADCC_DefaultInterruptHandler
 22608 ;;		_adcThresholdHandler
 22609 ;; This function is called by:
 22610 ;;		_INTERRUPT_InterruptManager
 22611 ;; This function uses a non-reentrant model
 22612 ;;
 22613                           
 22614                           
 22615                           ;psect for function _ADCC_ThresholdISR
 22616  11EE                     _ADCC_ThresholdISR:	
 22617                           
 22618                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 22619                           
 22620                           ;incstack = 0
 22621 ;; hardware stack exceeded
 22622                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 22623  11EE  014E               	movlb	14	; select bank14
 22624  11EF  108D               	bcf	13,1	;volatile
 22625                           
 22626                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 22627  11F0  0142               	movlb	2	; select bank2
 22628  11F1  0855               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 22629  11F2  0456               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 22630  11F3  1903               	btfsc	3,2
 22631  11F4  0008               	return
 22632                           
 22633                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 22634  11F5  0856               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 22635  11F6  008A               	movwf	10
 22636  11F7  0855               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 22637  11F8  000A               	callw
 22638  11F9  3191               	pagesel	$
 22639  11FA  0008               	return
 22640  11FB                     __end_of_ADCC_ThresholdISR:	
 22641                           
 22642                           	psect	text94
 22643  1107                     __ptext94:	
 22644 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 22645 ;; Defined at:
 22646 ;;		line 320 in file "mcc_generated_files/adcc.c"
 22647 ;; Parameters:    Size  Location     Type
 22648 ;;		None
 22649 ;; Auto vars:     Size  Location     Type
 22650 ;;		None
 22651 ;; Return value:  Size  Location     Type
 22652 ;;                  1    wreg      void 
 22653 ;; Registers used:
 22654 ;;		None
 22655 ;; Tracked objects:
 22656 ;;		On entry : 0/0
 22657 ;;		On exit  : 0/0
 22658 ;;		Unchanged: 0/0
 22659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22664 ;;Total ram usage:        0 bytes
 22665 ;; Hardware stack levels used:    1
 22666 ;; This function calls:
 22667 ;;		Nothing
 22668 ;; This function is called by:
 22669 ;;		_ADCC_Initialize
 22670 ;;		_ADCC_ThresholdISR
 22671 ;; This function uses a non-reentrant model
 22672 ;;
 22673                           
 22674                           
 22675                           ;psect for function _ADCC_DefaultInterruptHandler
 22676  1107                     _ADCC_DefaultInterruptHandler:	
 22677                           
 22678                           ;incstack = 0
 22679 ;; hardware stack exceeded
 22680                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 22681  1107  0008               	return
 22682  1108                     __end_of_ADCC_DefaultInterruptHandler:	
 22683                           
 22684                           	psect	text95
 22685  1109                     __ptext95:	
 22686 ;; *************** function _adcThresholdHandler *****************
 22687 ;; Defined at:
 22688 ;;		line 35 in file "beat.c"
 22689 ;; Parameters:    Size  Location     Type
 22690 ;;		None
 22691 ;; Auto vars:     Size  Location     Type
 22692 ;;		None
 22693 ;; Return value:  Size  Location     Type
 22694 ;;                  1    wreg      void 
 22695 ;; Registers used:
 22696 ;;		None
 22697 ;; Tracked objects:
 22698 ;;		On entry : 0/0
 22699 ;;		On exit  : 0/0
 22700 ;;		Unchanged: 0/0
 22701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22706 ;;Total ram usage:        0 bytes
 22707 ;; Hardware stack levels used:    1
 22708 ;; This function calls:
 22709 ;;		Nothing
 22710 ;; This function is called by:
 22711 ;;		_BEAT_init
 22712 ;;		_ADCC_ThresholdISR
 22713 ;; This function uses a non-reentrant model
 22714 ;;
 22715                           
 22716                           
 22717                           ;psect for function _adcThresholdHandler
 22718  1109                     _adcThresholdHandler:	
 22719                           
 22720                           ;beat.c: 36:     thresholdExceeded = 1;
 22721                           
 22722                           ;incstack = 0
 22723 ;; hardware stack exceeded
 22724                           ; Regs used in _adcThresholdHandler: []
 22725  1109  01F0               	clrf	_thresholdExceeded
 22726  110A  0AF0               	incf	_thresholdExceeded,f
 22727  110B  0008               	return
 22728  110C                     __end_of_adcThresholdHandler:	
 22729  007E                     btemp	set	126	;btemp
 22730  007E                     int$flags	set	126
 22731  007E                     wtemp0	set	126


Data Sizes:
    Strings     118
    Constant    96
    Data        14
    BSS         156
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      79
    BANK2            80      6      75
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_10(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_10(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_18(CODE[6]), STR_17(CODE[7]), STR_16(CODE[8]), STR_15(CODE[9]), 
		 -> STR_14(CODE[10]), STR_13(CODE[9]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_9(CODE[2]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[8]), STR_2(CODE[8]), 
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3014_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_18(CODE[6]), STR_17(CODE[7]), STR_16(CODE[8]), STR_15(CODE[9]), 
		 -> STR_14(CODE[10]), STR_13(CODE[9]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_9(CODE[2]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[8]), STR_2(CODE[8]), 
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_18(CODE[6]), STR_17(CODE[7]), STR_16(CODE[8]), STR_15(CODE[9]), 
		 -> STR_14(CODE[10]), STR_13(CODE[9]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_9(CODE[2]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[8]), STR_2(CODE[8]), 
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1990$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  115063
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   19087
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   36272
                                             35 BANK1      2     2      0
                 _LED_task_ANIMATION
                 _LED_task_BEAT_FADE
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   11197
                                             30 BANK1      5     5      0
                                              0 BANK2      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 2     2      0   25075
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (3) _beatColorCreator                                    14    10      4   14023
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (4) _beatBrightnessCalculation                           10     6      4    8509
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   11052
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1061
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2411
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    4933
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   50102
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                       _CONTROL_BEAT
                        _CONTROL_DMX
                      _TM1650_enable
                _TM1650_fastPrintNum
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16386
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16386
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0    9655
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    4722
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     211
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_BEAT
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_task
     _LED_task_ANIMATION
     _LED_task_BEAT_FADE
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     138       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     138      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 28 21:17:08 2019

                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0077  
                                            _up 00DC                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00CE                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1109  
                                           l911 0FE9                                             l909 0F84  
                                           _PR2 028D                                             _bpm 013E  
                                           _pad 17AD                         __size_of_PMD_Initialize 000A  
                               _TMR2_Initialize 1208                                 _PWM4_Initialize 11CB  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 005B  
                            _LED_task_BEAT_FADE 07FF                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                 __CFG_BBEN$OFF 0000                                __end_of_I2C1_ISR 06DF  
                                  ___fltol@exp1 006C                                            l1005 0728  
                                          l1042 093A                                            l1055 0B18  
                                          l2031 07F0                                            l1077 170A  
                                          l1516 17C5                                            l1519 17E5  
                                          l1288 14FD                                            l4201 1315  
                                          l1901 02F9                                            l1745 08B4  
                                          l1922 0400                                            l1923 0418  
                                          l1925 0425                            _ADCC_StartConversion 1145  
                                          l4351 1655                                            l6111 1382  
                                          l4353 1661                                            l6105 1521  
                                          l6121 1451                                            l1953 02A3  
                                          l4363 167C                                            l6123 1453  
                                          l4381 1547                                            ?_pad 0049  
                                          l4359 1673                                            l5271 1709  
                                          l4375 152F                                            l7031 0B22  
                                          l7015 0B1A                                            l6135 16C0  
                                          l4199 1309                                            l1992 0A8E  
                                          l5265 170C                                            l4377 153B  
                                          l4385 1550                                            l7017 0AE0  
                                          l6225 0BD3                                            l6313 02EE  
                                          l1993 0A98                                            l1985 0A7A  
                                          l7113 0E81                                            l5283 1719  
                                          l5267 1703                                            l5259 16FC  
                                          l6139 16E3                                            l6155 17BB  
                                          l6219 0BB2                                            l6235 0BE4  
                                          l1979 0A44                                            l6077 1120  
                                          l6093 0857                                            l6149 148F  
                                          l6165 17C7                                            l6229 0BD9  
                                          l6413 0421                                            l6333 0324  
                                          l6317 02F1                                            l6245 0874  
                                          l7133 0E88                                            l6095 085D  
                                          l7039 0B31                                            l6159 17C3  
                                          l6327 0318                                            l6191 07EA  
                                          l7151 0E93                                            l7119 0EC4  
                                          l7401 0DA4                                            l6089 0850  
                                          l7049 0B39                                            l6169 17F1  
                                          l6177 1593                                            l7313 072B  
                                          l6353 036B                                            l6361 034D  
                                          l6433 009E                                            l6265 08A2  
                                          l6249 087D                                            l7145 0E90  
                                          l7059 0B40                                            l7091 12B6  
                                          l6179 159C                                            l7331 0744  
                                          l6611 13D9                                            l6363 0389  
                                          l6523 0239                                            l6515 020B  
                                          l6451 00C1                                            l6435 00A0  
                                          l6275 08C1                                            l6267 08B0  
                                          l7163 0E96                                            l7139 0E8A  
                                          l7421 0DDE                                            l7405 0DAA  
                                          l7077 0B5C                                            l6293 02CA  
                                          l6541 0279                                            l6517 0222  
                                          l6453 00C3                                            l6437 00A8  
                                          l7181 0EA2                                            l7423 0DF1  
                                          l7351 0774                                            l7343 075A  
                                          l7335 074C                                            l7319 0735  
                                          l6359 0384                                            l6527 023B  
                                          l6463 00D9                                            l6455 00CB  
                                          l7175 0E9F                                            l7281 0FC0  
                                          l7273 0F9C                                            l6713 1223  
                                          l7345 0763                                            l6385 03BD  
                                          l6377 038F                                            l6297 02CD  
                                          l6537 0264                                            l7169 0E9A  
                                          l7283 0FCA                                            l7267 0F7E  
                                          l7259 0F3D                                            l7339 0753  
                                          l7347 0765                                            l6643 139D  
                                          l6627 13F7                                            l6379 03A6  
                                          l6299 02D5                                            l6547 0290  
                                          l6571 0A53                                            l7187 0EAA  
                                          l7451 14E1                                            l7437 0E23  
                                          l7365 07CB                                            l7357 079C  
                                          l6389 03BF                                            l6565 0A3C  
                                          l7445 14D8                                            l6735 12F6  
                                          l6727 1327                                            l7383 07D4  
                                          l7375 07D1                                            l7367 07CE  
                                          l7359 07A0                                            l6399 03E8  
                                          l6575 0A57                                            l7623 14EF  
                                          l7447 14DB                                            l7455 14E4  
                                          l6673 0CE1                                            l6737 12FA  
                                          l6729 132B                                            l7625 092C  
                                          l7377 07BB                                            l7369 07B3  
                                          l6585 0A8C                                            l6577 0A67  
                                          l7449 14DE                                            l6747 1170  
                                          l6659 13BB                                            l6587 0A7F  
                                          l6771 0C5B                                            l6763 0C31  
                                          l6685 155E                                            l6781 0CAC  
                                          l6765 0C32                                            l6687 157B  
                                          l6599 0AB3                                            l6783 0CAD  
                                          l6775 0C83                                            l7487 1752  
                                          l6777 0C84                                            l6769 0C5A  
                                          l6971 08F5                                            l6963 08E5  
                                          l6949 127E                                            l6973 08F6  
                                          l6965 08EC                                            l6957 08D7  
                                          l6983 0903                                            l6985 090B  
                                          l6993 0923                                            l6987 0913  
                                          l6989 091B                                  ?_TM1650_enable 0077  
                                          STR_1 1865                                            STR_2 1835  
                                          STR_3 183D                                            STR_4 185F  
                                          STR_5 186B                                            STR_6 186B  
                                          STR_7 1859                                            STR_8 1871  
                                          STR_9 1857                         __end_of_PWM1_Initialize 11B5  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u3105 1658  
                                          u3125 1662                                            u3205 1548  
                                          u3135 166C                                            u3145 1674  
                                          _T2PR 028D                                            u3175 1532  
                                          u3195 1541                                            u6005 039B  
                                          _PMD0 0796                                            u6205 017E  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u6215 01D4                                            _PMD3 0799  
                                          _PMD4 079A                                            u6225 01EB  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u6075 03D6                                            u6235 01FA  
                                          _PMD7 079D                                            u7125 0F40  
                                          u6085 03F1                                            u6245 020E  
                                          u6405 0A60                                            u7134 0F5F  
                                          u7135 0F5E                                            u6095 040A  
                                          u6335 0252                                            u6345 026D  
                                          u6265 0217                                            u6425 0A74  
                                          u5635 17D1                                            u6355 0283  
                                          u6195 014F                                            u6445 0A86  
                                          u6535 13D5                                            u5735 0886  
                                          u6625 13B7                                            u5595 16E1  
                                          u5915 0355                                            u5675 07F1  
                                          u6565 13F3                                            u5925 035C  
                                          u5765 08A3                                            u6485 0AA0  
                                          u7545 0E04                                            u6825 0ADA  
                                          u5945 0365                                            u6595 1399  
                                          u5955 0379                                            u5795 08B8  
                    ?_beatBrightnessCalculation 00A0                                            u7495 0D8F  
                                          u6855 0AF6                                            u6865 0B11  
                                          u5985 0392                                            u7597 172F  
                                          _TMR2 028C                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                            _LED_task_ANIMATION 0003                                   __CFG_FCMEN$ON 0000  
                           ?_LED_task_BEAT_FADE 0077                                   ?_BUTTONS_init 0077  
                                 ?_BUTTONS_task 0077                                            _dbuf 01A0  
                          ?_adcThresholdHandler 0077                                            _ctoa 1584  
                                          _main 1726                                            _down 00DB  
                                          _init 1400                                            _menu 00DD  
                                          _prec 0132                                            _nout 0130  
                                          pad@i 004D                                            pad@p 004A  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 004F                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0030                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1259                             ?_LED_task_ANIMATION 0077  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0018                            __size_of_address_inc 0019  
                I2C1_MasterWriteTRBBuild@length 0021                                  _BUTTONS_isHeld 1216  
                                         ??_pad 004C                         __end_of_PWM2_Initialize 11C0  
                       __end_of_TMR0_Initialize 1294                                      _i2c1_state 00E2  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1196                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0052                                __end_of_LED_task 14FE  
                                         ?_main 0077                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 042A  
                                         _ADREF 0116                               __end_of_I2C1_Stop 134F  
                                         STR_10 181C                                           STR_11 184C  
                                         STR_12 182D                                           STR_13 1813  
                                         STR_14 1800                                           STR_15 180A  
                                         STR_16 1825                                           STR_17 1845  
                                 __CFG_WDTE$OFF 0000                                           STR_18 1853  
                              __end_of_DMX_init 126C                                           _ADRPT 009A  
                               __end_of___flmul 02B0                                 __end_of___fltol 08D0  
                                         _T2CON 028E                                           _T2HLT 028F  
                               __end_of___lwdiv 1681                      _ADCC_ADTI_InterruptHandler 0155  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l432 0017                                           i1l441 002E  
                               __end_of___lwmod 1555                                           i1l434 001E  
                                         i1l436 0025                                           i1l429 000E  
                                         i1l560 05F2                                           i1l561 05FE  
                                         i1l554 05CF                                           i1l571 063B  
                                         i1l555 05D0                                           i1l549 05A1  
                                         i1l590 1233                                           i1l583 069F  
                                         i1l575 065B                                           i1l578 066A  
                                         i1l579 0678                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 0058                              _PWM4_LoadDutyValue 13E2  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1112                            ??_LED_task_ANIMATION 0020  
                     ?_TMR0_SetInterruptHandler 0020                                 __end_of_getMode 1118  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 1208  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 0169  
                                         _flags 0134                                           _enter 00DA  
                         ?_ADCC_StartConversion 0077                                           _fputc 16B6  
                                         _fputs 148B                             ?_PWM4_LoadDutyValue 00A0  
                     __size_of_beatColorCreator 00AF                                           pad@fp 0051  
                                         _width 00CA                                           ctoa@c 0052  
                                         _putch 1443                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 11CB                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 12D4  
                             __end_of_BEAT_task 0E46                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 1109  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0077  
           ?_EUSART1_DefaultFramingErrorHandler 0077              _EUSART1_DefaultFramingErrorHandler 1108  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 1225  
                               __initialization 0032                            TM1650_setDigit@digit 0036  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                                  __end_of_ctoa 15B4                      __end_of_EUSART1_Initialize 1618  
                                  __end_of_main 175F                                    __end_of_init 1420  
                               _CONTROLLER_task 06DF                            ??_PWM4_LoadDutyValue 006D  
                                 ?_LED_setColor 00B6                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                                   ?_LED_task_DMX 0077  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1157  
                       __end_of_PWM4_Initialize 11D6                         __end_of_TMR2_Initialize 1216  
                   ?_INTERRUPT_InterruptManager 0077                            _LED_task_BEAT_STROBE 0E46  
                                   _i2c1_object 00C5                                          ??_ctoa 0054  
                                        ??_main 0165                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 1726                               __end_of_GPIO_init 1247  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 00A2                                          ?_fputc 0039  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0041                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0077  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0077  
                                        _RC5PPS 1F25                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5081 134C                                          i1l5433 162C  
                                __CFG_WDTCCS$SC 0000                                          i1l5443 1649  
                                        i1l5509 0617                                          i1l5439 163A  
                                        i1l5551 065E                                          i1l5543 0649  
                                        i1l5529 0630                                          i1l5481 05C9  
                                        i1l5563 067F                                          i1l5581 06A6  
                                        i1l5477 05C2                                          i1l5583 06AA  
                                        i1l5567 0686                                          i1l5495 05EC  
                                        i1l5489 05DC                                          i1l5851 15B9  
                                        i1l5579 06A3                                          i1l5589 06B2  
                                        i1l5863 15E2                                          i1l5859 15DA  
                                        i1l7627 06BB                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 0ABC  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                                 ?_BUTTONS_isHeld 0077  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0067                                  _p_i2c1_current 0071  
                                ??_LED_setColor 00BA                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00BE                     __end_of_TM1650_fastPrintNum 0D78  
                             _ADCC_ThresholdISR 11EE                                       ??___fldiv 0036  
                        __size_of_menuSelection 006B                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                           ?_LED_task_BEAT_STROBE 0077  
                                     ?_I2C1_ISR 0077                                       ??_getMode 0020  
                                        _printf 0800                          __size_of_BEAT_detected 0009  
                                        pad@buf 0049                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0057  
                                _lastActiveTime 0142                                          _strlen 1304  
                          __size_of_TM1650_init 0014                                 _ADCC_Initialize 14B1  
                                        fputc@c 0039                                  _PMD_Initialize 1196  
                                        fputs@c 0045                                    ??_CLOCK_init 0022  
                                        fputs@i 0046                                          fputs@s 0048  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0077  
                        ??_ADCC_StartConversion 0020                                          putch@n 0038  
                              __end_of_vfprintf 1584            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 113C                   I2C1_MasterWriteTRBBuild@pdata 0020  
                                 _tm1650_status 00D3                                 _eusart1RxBuffer 0128  
                       beatColorCreator@inGreen 00A9                                ?_PWM3_Initialize 0077  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 1467                                    ___xxtofl@val 0020  
                       beatColorCreator@inWhite 00AB                         __end_of__initialization 0080  
                       __end_of_CONTROLLER_task 07DF                              ?_SYSTEM_Initialize 0077  
                    __end_of_PWM2_LoadDutyValue 13C4                                       ?_LED_task 0077  
                                    ___fltol@f1 0062                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00E1                     PWM1_LoadDutyValue@dutyValue 00A0  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 11FB  
                       __size_of_DMX_getAddress 0003                   __end_of_EUSART1_RxDataHandler 12EC  
                         _I2C1_FunctionComplete 1225                            _I2C1_BusCollisionISR 110F  
                                __pcstackCOMMON 0077                              __end_of_CLOCK_init 1133  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 11A0  
                                  __pidataBANK2 111C                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 16ED  
                                 __end_of_fputs 14B1                                   __end_of_putch 1467  
                            _PWM1_LoadDutyValue 1388                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 15B4                            __end_of_BUTTONS_init 17AD  
                        __end_of_PMD_Initialize 11A0                            __end_of_BUTTONS_task 1000  
                   PWM4_LoadDutyValue@dutyValue 00A0                             ?_PWM1_LoadDutyValue 00A0  
                   __end_of_EUSART1_Receive_ISR 164C                               _thresholdExceeded 0070  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00B6  
                                 _menuSelection 08D0                                         ??_fputc 003C  
                     __end_of_SYSTEM_Initialize 148B                                         ??_fputs 0042  
                              _beatColorCreator 0C07                                         ??_putch 0037  
                                 _eusart1RxHead 0074                                   _eusart1RxTail 0073  
                                    __pbssBANK1 00C5                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                   ??_beatBrightnessCalculation 00A4                                   _BEAT_detected 1169  
                                    ??_LED_task 00C3                                      ??_DMX_init 0037  
                          ??_PWM1_LoadDutyValue 006D                               __end_of__Umul8_16 07FF  
                         ?_I2C1_BusCollisionISR 0077                 __end_of_EUSART1_SetErrorHandler 117B  
                                    __pmaintext 1726                __end_of_TMR0_SetInterruptHandler 1160  
                                    ??_TMR0_ISR 0077                                 __CFG_PPS1WAY$ON 0000  
                              writeData@address 0032                         __end_of_ADCC_Initialize 14D7  
                        ??_LED_task_BEAT_STROBE 00BE                                      __pintentry 0004  
                               _I2C1_Initialize 134F                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                         __size_of_CONTROL_BEAT 0039                                         _CCP4CON 031A  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                ?_DMX_interrupt 0077                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 113C           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1133                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00A0                                 ?_PMD_Initialize 0077  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 1184  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 117B  
                                     ?___xxtofl 0020                    ?_EUSART1_DefaultErrorHandler 0077  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 00A9                                       _I2C1_Stop 1335  
                                    _arrayIndex 0138                                  ?_menuSelection 0077  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 058D                               __end_of_charTable 1060  
                           _CLOCK_timerCallback 1125                            __end_of_LED_task_DMX 09A9  
                                ?_BEAT_detected 0077                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0037  
                                 ??_address_inc 0037                                ?_CONTROLLER_task 0077  
                                    _enterState 00D4                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 16ED                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 12BD                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 0D78                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0072                                         ___fldiv 02B0  
                          ?_CLOCK_timerCallback 0077                                         ___flmul 0084  
                                       ___fltol 086A                                         ___lwdiv 164C  
                                       ___lwmod 1528                                       ?_vfprintf 0061  
                     _beatBrightnessCalculation 09A9                                         _address 00E9  
                   __size_of_LED_task_BEAT_FADE 0001                                         _getMode 1115  
                                       __ptext1 1294                                         __ptext2 1467  
                                       __ptext3 1208                                         __ptext4 1280  
                                       __ptext5 11CB                                         __ptext6 11C0  
                                       __ptext7 11B5                                         __ptext8 11AA  
                                       __ptext9 1196                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 013C  
                         _OSCILLATOR_Initialize 118D                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 0167  
                                       _buttons 01C0                                      ??___xxtofl 0024  
                            _EUSART1_Initialize 15E5                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 0001                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 110C                                         _upState 00D7  
                 ??_EUSART1_DefaultErrorHandler 0078                                         _startup 00ED  
                    __size_of_SYSTEM_Initialize 0024                            I2C1_ISR@pi2c_buf_ptr 00E0  
                                       clrloop0 11D7                                _currentSelection 00EB  
                          end_of_initialization 0080                                       _T2RSTbits 0291  
                                     _GPIO_init 1236                             ?_EUSART1_Initialize 0077  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003B  
                                       init_ram 11E2                     _EUSART1_OverrunErrorHandler 015B  
                                       fputs@fp 0041                                         initloop 11E3  
                        ??_I2C1_BusCollisionISR 0077                         __end_of_I2C1_Initialize 136B  
                                _DMX_getAddress 1112           __end_of_EUSART1_SetRxInterruptHandler 1169  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1160  
                                    ?_BEAT_init 0077                                      ?_BEAT_task 0077  
                 beatBrightnessCalculation@temp 006D                               __end_of_vfpfcnvrt 0C07  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 1304                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 1335                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0064                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1157  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 0152  
                             __end_of_writeData 1388                                 ??_menuSelection 006D  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0037  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 12BD               I2C1_ISR@i2c_10bit_address_restart 00DE  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0057                                    _BUTTONS_init 175F  
                                  _BUTTONS_task 0F1B                          __end_of_DMX_getAddress 1115  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 13E2  
          __size_of_EUSART1_DefaultErrorHandler 0003                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_task 0027                               __size_of_DMX_init 0013  
                      __end_of_beatColorCreator 0CB6                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006D                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0060                         I2C1_MasterWrite@trBlock 014E  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 13A6                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 1145  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 0815  
                         __size_of_LED_setColor 0163                                  __end_of_strlen 131C  
                                  _lastDetected 00D0                           __size_of_LED_task_DMX 006E  
                           start_initialization 0032                                    _enterPressed 00D8  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 00A0  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0034  
                                   __end_of_pad 1800   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                                _beatBrightness 00EE                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 126C                             __end_of_CONTROL_DMX 0B5E  
                               ?_DMX_getAddress 0077                              ?_BUTTONS_isClicked 0077  
                                   _address_dec 12EC                                     _address_inc 131C  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0077  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                          ??_PWM2_LoadDutyValue 006D                        __size_of_PWM3_Initialize 000B  
                                   vfprintf@fmt 0061                     PWM2_LoadDutyValue@dutyValue 00A0  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 12D4                                    _LED_setColor 042A  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 07DF  
                                   __pdataBANK1 00E5                                     __pdataBANK2 0167  
                                  _LED_task_DMX 093B                                   _CLOCK_getTime 114E  
                                      ??_printf 0069                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00E4  
                        beatColorCreator@inBlue 00AA                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 12A8                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 015F                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK2 0161              __size_of_beatBrightnessCalculation 007D  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 0152                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1280                       beatColorCreator@tempColor 00B2  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0077  
                  __size_of_EUSART1_Receive_ISR 0034                                    _menuSelected 00EC  
                                  _currentState 00CC                                       _charTable 1000  
                         _TMR0_InterruptHandler 0157                                       __pnvBANK2 0155  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 1681                                        ?___fldiv 002E  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 058D                   __size_of_LED_task_BEAT_STROBE 00D5  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 007E  
                               writeData@status 0033                                        ?_getMode 0077  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 14FE  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 086A  
    __end_of_EUSART1_DefaultOverrunErrorHandler 111C     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 1118                            _EUSART1_ErrorHandler 0159  
                                     _downState 00D6                                     _CONTROL_DMX 0ABC  
                       _EUSART1_SetErrorHandler 1172                               ??_TM1650_setDigit 0035  
                              ___lwdiv@quotient 0025               __end_of_beatBrightnessCalculation 0A26  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00D5                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1125  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 1120  
                        I2C1_MasterRead@trBlock 014A                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 11D6  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 14D7  
                                      _DMX_init 1259             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E7                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                       CONTROLLER_task@isActive 006F                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 11FB                      __end_of_LED_task_BEAT_FADE 0800  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_task 0100  
                                   _TM1650_init 1294                                       _threshold 00E5  
                                     _vfpfcnvrt 0B5E                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                                     _startTime 0148                      __end_of_LED_task_ANIMATION 0004  
                            DMX_interrupt@dummy 007D                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 136B  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 005F  
                                   _lastIncTime 00CE                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0003  
                   __end_of_CLOCK_timerCallback 112B                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0CB6                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 1400                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0063                                      vfprintf@fp 0066  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00DF  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                               ?_beatColorCreator 00A9  
                         beatColorCreator@inRed 00AD                                __size_of___flmul 022C  
                              __size_of___fltol 0066                           __end_of_DMX_interrupt 15E5  
                   __size_of_EUSART1_Initialize 0033                                      ?_vfpfcnvrt 0058  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
                         _beatColorCreator$3475 00AE                __end_of_I2C1_MasterWriteTRBBuild 1443  
                            ??_beatColorCreator 006E                              _PWM3_LoadDutyValue 13C4  
                                    _ANSELAbits 1F38                                      _ANSELCbits 1F4E  
                              __size_of_getMode 0003                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 110F  
                   _EUSART1_DefaultErrorHandler 110C                                     _currentTime 0144  
                                    _CLOCK_init 112B                                        ___xxtofl 0A26  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00D9                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 093B                             I2C1_ISR@i2c_address 0075  
                               ___lwdiv@counter 0027                                        _detected 00D1  
                                    ?_writeData 002E                                        __ptext10 1681  
                                      __ptext11 118D                                        __ptext20 093B  
                                      __ptext12 134F                                        __ptext21 1112  
                                      __ptext13 15E5                                        __ptext30 02B0  
                                      __ptext22 0E46                                        __ptext14 1184  
                                      __ptext31 13E2                                        __ptext23 0C07  
                                      __ptext15 117B                                        __ptext40 06DF  
                                      __ptext32 13C4                                        __ptext24 09A9  
                                      __ptext16 1172                                        __ptext41 08D0  
                                      __ptext33 13A6                                        __ptext25 042A  
                                      __ptext17 14B1                                        __ptext50 1443  
                                      __ptext42 0800                                        __ptext34 1388  
                                      __ptext26 0A26                                        __ptext18 14D7  
                                      __ptext51 1247                                        __ptext43 1555  
                                      __ptext35 1169                                        __ptext27 086A  
                                      __ptext19 1115                                        __ptext60 0815  
                                      __ptext52 12A8                                        __ptext44 0B5E  
                                      __ptext36 07FF                                        __ptext28 0084  
                                      __ptext61 1120                                        __ptext53 0ABC  
                                      __ptext45 1584                                        __ptext37 0003  
                                      __ptext29 07DF                                        __ptext70 1400  
                                      __ptext62 1528                                        __ptext54 131C  
                                      __ptext46 17AD                                        __ptext38 1259  
                                      __ptext71 1236                                        __ptext63 1216  
                                      __ptext55 12EC                                        __ptext47 1304  
                                      __ptext39 1160                                        __ptext80 11FB  
                                      __ptext72 0D78                                        __ptext64 16ED  
                                      __ptext56 0CB6                                        __ptext48 148B  
                                      __ptext81 1125                                        __ptext73 164C  
                                      __ptext65 126C                                        __ptext57 136B  
                                      __ptext49 16B6                                        __ptext90 1108  
                                      __ptext82 0002                                        __ptext74 114E  
                                      __ptext66 112B                                        __ptext58 14FE  
                           ?_PWM3_LoadDutyValue 00A0                                        __ptext91 110C  
                                      __ptext83 058D                                        __ptext75 12BD  
                                      __ptext67 1157                                        __ptext59 1420  
                                      __ptext92 12D4                                        __ptext84 1335  
                                      __ptext76 1145                                        __ptext68 0F1B  
                                      __ptext93 11EE                                        __ptext85 1225  
                                      __ptext77 113C                                        __ptext69 175F  
                                      __ptext94 1107                                        __ptext86 110F  
                                      __ptext78 1133                                        __ptext95 1109  
                                      __ptext87 15B4                                        __ptext88 1618  
                                      __ptext89 1118                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 1172                                        _lastBeat 0140  
                                      _lastTime 0146                                 LED_task_DMX@dmx 0161  
                                 __size_of_ctoa 0030                                   __size_of_main 0039  
                                 __size_of_init 0020                                    ?_address_dec 0077  
          __end_of_TMR0_DefaultInterruptHandler 0003           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0002                                    ?_address_inc 0077  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 0815  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                          ??_PWM3_LoadDutyValue 006D                    __end_of_ADCC_StartConversion 114E  
                                      int$flags 007E                                        _position 00D2  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 1555  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00A0                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 015D                             _EUSART1_Receive_ISR 1618  
                         ??_TM1650_fastPrintNum 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_task 00AA                                        init@port 0020  
                                __pstringtext10 1845                                  __pstringtext11 184C  
                                __pstringtext12 1853                                  __pstringtext13 1859  
                                __pstringtext14 185F                                  __pstringtext15 1865  
                                __pstringtext16 186B                                  __pstringtext17 1871  
                                __pstringtext18 0000            __end_of_ADCC_DefaultInterruptHandler 1108  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 1107  
                                      intlevel1 0000                                  _thresholdCount 013A  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 002E  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 1528                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 118D  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1184  
                 __end_of_I2C1_FunctionComplete 1236                                   ?_CONTROL_BEAT 0077  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 11AA  
                 ?_TMR0_DefaultInterruptHandler 0077                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0034                               _lastLedActiveTime 0136  
                                      printf@ap 006C  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 00A0                                 _TM1650_setDigit 1247  
                                   ??_vfpfcnvrt 005A                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00E3                                   __pstringtext1 1000  
                                 __pstringtext2 1800                                   __pstringtext3 180A  
                                 __pstringtext4 1813                                   __pstringtext5 181C  
                                 __pstringtext6 1825                                   __pstringtext7 182D  
                                 __pstringtext8 1835                                   __pstringtext9 183D  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 1280  
                               _PWM2_Initialize 11B5                                 ___lwmod@counter 002D  
                                  ?_CONTROL_DMX 0077                        _I2C1_MasterWriteTRBBuild 1420  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                  __end_of_LED_task_BEAT_STROBE 0F1B                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 16B6  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 12A8  
                            __size_of_I2C1_Stop 001A                   ?_ADCC_DefaultInterruptHandler 0077  
                    __end_of_PWM1_LoadDutyValue 13A6                            __Umul8_16@multiplier 0028  
                                ??_CONTROL_BEAT 0020                         ??_EUSART1_RxDataHandler 0077  
                               _PWM3_Initialize 11C0                               __Umul8_16@product 0024  
